[
  {
    "id": 30597356,
    "title": "Verify the pricing shown when we are in the nav map for a package",
    "section_id": 1681318,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1826960",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. verify the pricing for package with single PEL and Multiple PEL\r\nExpected Result:\r\nPricing shown is the composite pricing of the entire package by price scale.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. verify the pricing for package with single PEL and Multiple PEL",
        "expected": "1. Pricing shown is the composite pricing of the entire package by price scale."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597357,
    "title": "Verify the pricing shown when we are in the nav map for a package with a Master event",
    "section_id": 1681318,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1826961",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. verify the pricing for package with single PEL and Multiple PEL\r\nExpected Result:\r\nPricing shown is the composite pricing of the entire package by price scale.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. verify the pricing for package with single PEL and Multiple PEL",
        "expected": "1. Pricing shown is the composite pricing of the entire package by price scale."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597358,
    "title": "verify the display Price Scales Code/Price Scale Public Description and price.",
    "section_id": 1681318,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1826962",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. verify the display Price Scales Code/Price Scale Public Description and price\r\nExpected Result:\r\nShould match with the Comps from PRD\nComposite values shall be shown next to the price scale color, and price/price scale code shall be delineated with a pipe.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. verify the display Price Scales Code/Price Scale Public Description and price",
        "expected": "1. Should match with the Comps from PRD\nComposite values shall be shown next to the price scale color, and price/price scale code shall be delineated with a pipe."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597359,
    "title": "verify the navigation control when in context of the Package nav map",
    "section_id": 1681318,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1826970",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. check for the arrows, calenders, filters etc are present\r\nExpected Result:\r\nWhen in the context of a package navigation map, the navigation controls (i.e. arrows, calendar, filters, etc) shall be hidden.  \nThese are currently not supported for package sales.\nCompare with the PRD for the mock up and view",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. check for the arrows, calenders, filters etc are present",
        "expected": "1. When in the context of a package navigation map, the navigation controls (i.e. arrows, calendar, filters, etc) shall be hidden.  \nThese are currently not supported for package sales.\nCompare with the PRD for the mock up and view"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597360,
    "title": "Navigation commands in composite mode",
    "section_id": 1681319,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1826973",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. click on section in the nav map so that the user navigates- check for a single PEL and Multi list PEL of all types of packages\r\nExpected Result:\r\n1. Event Navigation controls disabled in the banner \n2. The right panel of the seat map container shall open by default with the Package Options (renamed from Package Details) block collapsed and the seat sales panel displayed. \n3. A count of events seated out of the total # of events shall be visible on the header.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. click on section in the nav map so that the user navigates- check for a single PEL and Multi list PEL of all types of packages",
        "expected": "1. 1. Event Navigation controls disabled in the banner \n2. The right panel of the seat map container shall open by default with the Package Options (renamed from Package Details) block collapsed and the seat sales panel displayed. \n3. A count of events seated out of the total # of events shall be visible on the header."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597361,
    "title": "verify various UI element displayed when in compostie map  for single and mulple PEL",
    "section_id": 1681319,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1826974",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. check  the button, dropdowns, labels and icons displayed\r\nExpected Result:\r\n1. Event Navigation controls disabled\n2. Package List Code & Description\n3. View Mode dropdown (only Standard or Hold available)\n4. Hold Code selection- dropdown display with aviable list of holdcodes(based on permissions)\n5. Action buttons â€“ â€˜xâ€™ to return to nav map, â€˜iâ€™ to invoke seat info, â€˜#â€™ to invoke hide/show seat numbers\n6. Collapsible multi panel defaults to Package Options collapsed and Seat Sales expanded\n7.â€˜Addâ€™ buttons disabled until seats are selected.\nRefer to PRD-Mocukup for the UI and display(font, placement and colors)",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. check  the button, dropdowns, labels and icons displayed",
        "expected": "1. 1. Event Navigation controls disabled\n2. Package List Code & Description\n3. View Mode dropdown (only Standard or Hold available)\n4. Hold Code selection- dropdown display with aviable list of holdcodes(based on permissions)\n5. Action buttons â€“ â€˜xâ€™ to return to nav map, â€˜iâ€™ to invoke seat info, â€˜#â€™ to invoke hide/show seat numbers\n6. Collapsible multi panel defaults to Package Options collapsed and Seat Sales expanded\n7.â€˜Addâ€™ buttons disabled until seats are selected.\nRefer to PRD-Mocukup for the UI and display(font, placement and colors)"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597362,
    "title": "Navigation commands in the Seat map for a Pkg with Multiple PEL",
    "section_id": 1681319,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1826980",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. As a user navigates from one  PEL1 to the next\r\nExpected Result:\r\nThe package code and description shall be displayed above the seat view\nAdditionally, the code for the selected event within the package shall be shown.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. As a user navigates from one  PEL1 to the next",
        "expected": "1. The package code and description shall be displayed above the seat view\nAdditionally, the code for the selected event within the package shall be shown."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597363,
    "title": "verify the option present for the sale method type in the package options: Any seat and same price scale",
    "section_id": 1681320,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1826995",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. verify the scenarios for various PEL seat type options: Any seat and same price scale\r\nExpected Result:\r\nThe sale methods can be adjusted between Composite - selling the same seat for all unseated events within a package and user should have an option select to seat Per Event and allow users can seat each event individually.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. verify the scenarios for various PEL seat type options: Any seat and same price scale",
        "expected": "1. The sale methods can be adjusted between Composite - selling the same seat for all unseated events within a package and user should have an option select to seat Per Event and allow users can seat each event individually."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597364,
    "title": "verify the option present for the sale method type in the package options: Same seat",
    "section_id": 1681320,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1826996",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1) verify the scenarios for various PEL seat type options\n2) verify the option present for the sale method type in the package options when the user has override seat type permission when the package event list is defined as â€œSame Seatâ€� type.\r\nExpected Result:\r\n1) Same seat: User will only have option to select seat in compostie mode.\n2) The sale methods can be adjusted between Composite - selling the same seat for all unseated events within a package and user should have an option select to seat Per Event and allow users can seat each event individually.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1) verify the scenarios for various PEL seat type options\n2) verify the option present for the sale method type in the package options when the user has override seat type permission when the package event list is defined as â€œSame Seatâ€� type.",
        "expected": "1. 1) Same seat: User will only have option to select seat in compostie mode.\n2) The sale methods can be adjusted between Composite - selling the same seat for all unseated events within a package and user should have an option select to seat Per Event and allow users can seat each event individually."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597365,
    "title": "select seats to a PEL with master event in the PEL",
    "section_id": 1681320,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1827000",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Select the sale type to compostie mode for  a PEL with lots of events and master event and select seats and verify the details displayed\r\nExpected Result:\r\nSeats should be select for all event in PEL and seats locked should reflect the count for all seats selected i.e., x/x events seated will include the master event in the tally",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Select the sale type to compostie mode for  a PEL with lots of events and master event and select seats and verify the details displayed",
        "expected": "1. Seats should be select for all event in PEL and seats locked should reflect the count for all seats selected i.e., x/x events seated will include the master event in the tally"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597366,
    "title": "select seats to a PEL in compostie mode when the package is prorated",
    "section_id": 1681320,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1827002",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Select the sale type to compostie mode for  a PEL with lots of events and the package is prorated and select seats and verify the details displayed\r\nExpected Result:\r\nIf a package list is prorated, the â€˜totalâ€™ number of events to seat shall be the actual number of events required at the time of sale (i.e. the prorated quantity).",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Select the sale type to compostie mode for  a PEL with lots of events and the package is prorated and select seats and verify the details displayed",
        "expected": "1. If a package list is prorated, the â€˜totalâ€™ number of events to seat shall be the actual number of events required at the time of sale (i.e. the prorated quantity)."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597367,
    "title": "verify that we can use the zoom option for seat map : +/- option",
    "section_id": 1681321,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1826985",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1) Try  zoom in in using the '+' option present at the right hand bottom of the screen\n2) Try  zoom out using the '-' option present at the right hand bottom of the screen\r\nExpected Result:\r\n1) we should zoom in using the '+' option present at the right hand bottom of the screen \n2) we should zoom out using the '_' option present at the right hand bottom of the screen",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1) Try  zoom in in using the '+' option present at the right hand bottom of the screen\n2) Try  zoom out using the '-' option present at the right hand bottom of the screen",
        "expected": "1. 1) we should zoom in using the '+' option present at the right hand bottom of the screen \n2) we should zoom out using the '_' option present at the right hand bottom of the screen"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597368,
    "title": "verify that we can use the zoom option for seat map : pinch in and pinch out option",
    "section_id": 1681321,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1826986",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Try zoom in and out in using the pinch in and pinch out (tablet)\r\nExpected Result:\r\nThe seat map should zoom in when we pinch in and zoom out when we pinch out",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Try zoom in and out in using the pinch in and pinch out (tablet)",
        "expected": "1. The seat map should zoom in when we pinch in and zoom out when we pinch out"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597369,
    "title": "Select  per event  mode and select event",
    "section_id": 1681322,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1827007",
    "custom_preconds": "Package configuration to allow to be seated by event or overrides for the user.\nPricing should vary from Package eventâ€™s price structure to composite for this test.",
    "custom_test_purpose": null,
    "custom_steps": "1. when seating each individual event  check the pricing and compare the pricing to composite mode\r\nExpected Result:\r\nwhen seating each individual event  the package eventâ€™s price structure should be used and the pricing should reflect that.\nIn Composite mode the pricing will display the composite pricing.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. when seating each individual event  check the pricing and compare the pricing to composite mode",
        "expected": "1. when seating each individual event  the package eventâ€™s price structure should be used and the pricing should reflect that.\nIn Composite mode the pricing will display the composite pricing."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597370,
    "title": "verify the display of buttons  and behavior for the Add to cart and  Add to cart & checkout  for package in Composite mode: Multi list packages",
    "section_id": 1681323,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1827015",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1) select the few seat and verify the buttons\n2) select seats in the Composite mode and add to cart\n3) select seats in the Composite mode and Add & Go To Nextâ€�\n4) 4) Select seats to all PEL's in the Package and verify Add to Cart and Checkout\r\nExpected Result:\r\n1) Buttons Add to cart and  Add & Go To Next at the bottom of this panel shall be visible in both the seat selection and the package details vie\n2) â€œAdd to cartâ€�, which will lock the selected seats for all events in the package list without progressing the user from the active seat map and screen.\nâ€œGames fulfilledâ€� shall increment as events are seated \nIn addition, a checkmark displays next to the event(s) that have been seated. .   \n3)  The â€œAdd & Go To Nextâ€� button shall lock the selected seats for the active package list, add them to the cart, and navigate the user to the next list in the package for seating, until the last list is being seated in which the button shall change to â€œAdd to Cart & Checkoutâ€�.\n4) â€œAdd to cart & checkoutâ€� which will lock the selected seats for all events in the package list and progress the user to the shopping cart to complete the transaction.  \nCompare with the PRD mockup for display",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1) select the few seat and verify the buttons\n2) select seats in the Composite mode and add to cart\n3) select seats in the Composite mode and Add & Go To Nextâ€�\n4) 4) Select seats to all PEL's in the Package and verify Add to Cart and Checkout",
        "expected": "1. 1) Buttons Add to cart and  Add & Go To Next at the bottom of this panel shall be visible in both the seat selection and the package details vie\n2) â€œAdd to cartâ€�, which will lock the selected seats for all events in the package list without progressing the user from the active seat map and screen.\nâ€œGames fulfilledâ€� shall increment as events are seated \nIn addition, a checkmark displays next to the event(s) that have been seated. .   \n3)  The â€œAdd & Go To Nextâ€� button shall lock the selected seats for the active package list, add them to the cart, and navigate the user to the next list in the package for seating, until the last list is being seated in which the button shall change to â€œAdd to Cart & Checkoutâ€�.\n4) â€œAdd to cart & checkoutâ€� which will lock the selected seats for all events in the package list and progress the user to the shopping cart to complete the transaction.  \nCompare with the PRD mockup for display"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597371,
    "title": "verify the display of buttons  and behavior for the Add to cart and  Add to cart & checkout  for package in Per event mode: Multi list packages",
    "section_id": 1681324,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1827017",
    "custom_preconds": "package list with an event list seat type of â€œAny Seatâ€� or â€œSame Price Scale.\nSelect a few seats in the seatmap",
    "custom_test_purpose": null,
    "custom_steps": "1. 1) select the few seat and verify the buttons\n2) select seats in the composite mode and add to cart\n3) select seats in the composite mode and Add & Go To Nextâ€�\n4) Select seats to all event in all PEL's and verify Add to Cart and Checkout\r\nExpected Result:\r\n1) Buttons Add to cart and  Add & Go To Next at the bottom of this panel shall be visible in both the seat selection and the package details vie\n2) â€œAdd to cartâ€�, which will lock the selected seats for all events in the package list without progressing the user from the active seat map and screen.\nâ€œGames fulfilledâ€� shall increment as events are seated \nIn addition, a checkmark displays next to the event(s) that have been seated. .   \n3)  The â€œAdd & Go To Nextâ€� button shall lock the selected seats for the active package list, add them to the cart, and navigate the user to the next list in the package for seating, until the last list is being seated in which the button shall change to â€œAdd to Cart & Checkoutâ€�.\n4) â€œAdd to cart & checkoutâ€� which will lock the selected seats for all events in the package list and progress the user to the shopping cart to complete the transaction. \nCompare with the PRD mockup for display",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1) select the few seat and verify the buttons\n2) select seats in the composite mode and add to cart\n3) select seats in the composite mode and Add & Go To Nextâ€�\n4) Select seats to all event in all PEL's and verify Add to Cart and Checkout",
        "expected": "1. 1) Buttons Add to cart and  Add & Go To Next at the bottom of this panel shall be visible in both the seat selection and the package details vie\n2) â€œAdd to cartâ€�, which will lock the selected seats for all events in the package list without progressing the user from the active seat map and screen.\nâ€œGames fulfilledâ€� shall increment as events are seated \nIn addition, a checkmark displays next to the event(s) that have been seated. .   \n3)  The â€œAdd & Go To Nextâ€� button shall lock the selected seats for the active package list, add them to the cart, and navigate the user to the next list in the package for seating, until the last list is being seated in which the button shall change to â€œAdd to Cart & Checkoutâ€�.\n4) â€œAdd to cart & checkoutâ€� which will lock the selected seats for all events in the package list and progress the user to the shopping cart to complete the transaction. \nCompare with the PRD mockup for display"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597372,
    "title": "verify the behavior the navigation and buttons for package in per event mode when seats are  selected for all events - 1st PEL does not  per event option but the second one does allows for per event selection",
    "section_id": 1681324,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1827019",
    "custom_preconds": "2 PEL's in the package\npackage list with an event list seat type is different",
    "custom_test_purpose": null,
    "custom_steps": "1. select seat for the first  event in the composite mode and\nOperator should have an option to select  per event  for the 2nd PEL\r\nExpected Result:\r\n1) user should be able to select seat for all event in the PEL in the composite mode and once select it should â€œAdd to cart & continue â€� option should be available which will take the user to the next PEL.\n2) user should be able to select event by event and when all events are selected should have an option to Add to cart & checkout",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. select seat for the first  event in the composite mode and\nOperator should have an option to select  per event  for the 2nd PEL",
        "expected": "1. 1) user should be able to select seat for all event in the PEL in the composite mode and once select it should â€œAdd to cart & continue â€� option should be available which will take the user to the next PEL.\n2) user should be able to select event by event and when all events are selected should have an option to Add to cart & checkout"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597373,
    "title": "verify the Map behaviour for a flex/ variable package: sale",
    "section_id": 1681325,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1827025",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. the user will be given an option to select which event we want to select for the package, select the events we would like include in this flex package and proceed to lock seats: composite and per event\r\nExpected Result:\r\nUser should have both composite or per event option.\nThe behaviour should be similar to the fixed package",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. the user will be given an option to select which event we want to select for the package, select the events we would like include in this flex package and proceed to lock seats: composite and per event",
        "expected": "1. User should have both composite or per event option.\nThe behaviour should be similar to the fixed package"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597374,
    "title": "Verify Seat info detail panel displayed when seat info invoked from composite map:",
    "section_id": 1681326,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1827029",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. verify the seat info details for seat that are unaviable aviable and partially avaiable : \n1) Right click on the seat in composite mode\n2) seat info icon in Composite mode\r\nExpected Result:\r\nCompare the display with PRD.\nseat information details for all the event in the package are displayed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. verify the seat info details for seat that are unaviable aviable and partially avaiable : \n1) Right click on the seat in composite mode\n2) seat info icon in Composite mode",
        "expected": "1. Compare the display with PRD.\nseat information details for all the event in the package are displayed"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597375,
    "title": "Package ticket sale - Max Event Quota error when limit set at Event run to a single event sale from Event run via map sales",
    "section_id": 1681327,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1827032",
    "custom_preconds": "event run quota limit setup for Max event  Quota",
    "custom_test_purpose": null,
    "custom_steps": "1. 1. Lock seats with and without patron to more events than the max event quota limit for the event_run\r\nExpected Result:\r\nMax event quota error should display in the map",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Lock seats with and without patron to more events than the max event quota limit for the event_run",
        "expected": "1. Max event quota error should display in the map"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597376,
    "title": "Verify whether the buyer type, price scale ticket quota validations are performed for inventoried events when performing an full package exchange",
    "section_id": 1681327,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1827035",
    "custom_preconds": "Buyer/ Pricescale Quotas",
    "custom_test_purpose": null,
    "custom_steps": "1. Try to exchange tickets to a different pricescale or buyer such that the quota exceed on the target event for pricescale or buyer.\r\nExpected Result:\r\nQuota validation errors should be displayed in the map on exchanges",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Try to exchange tickets to a different pricescale or buyer such that the quota exceed on the target event for pricescale or buyer.",
        "expected": "1. Quota validation errors should be displayed in the map on exchanges"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597377,
    "title": "Verify if the user can reprice the  dependant buyer type when we get error in map",
    "section_id": 1681328,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1827040",
    "custom_preconds": "Buyer Type Quantity Relationships",
    "custom_test_purpose": null,
    "custom_steps": "1. 1. 1. In Supplier administration-buyer type configuration tab,uncheck full price option for a buyer type; say for BUYER1\n\n2.Create a buyer type relationship including BUYER1 such that BUYER1 is the required buyer type in that relation(BUYER2 is the dependent); i.e. BUYER2 requires BUYER1\nExpected Result:\nThe user should be able to complete the pre-requisite successfully.\n2. 1.Launch the PV link >\n2.Login to the PV application using valid credentials\nExpected Result:\nThe user should be able to login to the PV Application\n3. In Ticket map sales, lock the dependant  buyer (BUYER2)\n5. Verify User get an error\n6. select review and change the dependant buyer to a different buyer which has no dependency\n7. lock seat\r\nExpected Result:\r\nerror configured in the buyertype configuration for the dependency displayed in the map.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. 1. In Supplier administration-buyer type configuration tab,uncheck full price option for a buyer type; say for BUYER1\n\n2.Create a buyer type relationship including BUYER1 such that BUYER1 is the required buyer type in that relation(BUYER2 is the dependent); i.e. BUYER2 requires BUYER1\nExpected Result:\nThe user should be able to complete the pre-requisite successfully.\n2. 1.Launch the PV link >\n2.Login to the PV application using valid credentials\nExpected Result:\nThe user should be able to login to the PV Application\n3. In Ticket map sales, lock the dependant  buyer (BUYER2)\n5. Verify User get an error\n6. select review and change the dependant buyer to a different buyer which has no dependency\n7. lock seat",
        "expected": "1. error configured in the buyertype configuration for the dependency displayed in the map."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597378,
    "title": "Verify Postal Code Validations via PV Map sales",
    "section_id": 1681329,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1827042",
    "custom_preconds": "Ticket Sales: Allows embargo based on region",
    "custom_test_purpose": null,
    "custom_steps": "1. 1. Pre-requisite:\n \n1. Create RCGs with the following postal codes (Country: USA, \nState: CA)\nRCG1: 92600-92615-92650\nRCG2: 92650-92600\nRCG3: -92650\nRCG4: 92600-\nRCG5: ,,,,,,\nRCG6: , , , , ,\nRCG7: --- --\n2. Create an Event E1.\nExpected Result:\nPre-requisite should be emt.\n2. Login to PV with valid credentials.\n3. 1. Navigate to Event Admin and select Event E1\n2. Associate RCG1 to E1 in Event Access at user level\n4. 1. Navigate to Ticket Sales and Select Event E1\n2. Select a Patron with postal code between 92600 and 92615\n3. Enter number of seats and click LOCK SEATS\n4. Verify that user is able to lock seats\nExpected Result:\nIn Patron Contact Line, If the postal codes is \nentered as \no â€œ92600-92615-92650â€�, the range is taken as \n92600-92650.\n5. Repeat steps 4 to 6 for patron with postal code between \n92615 and 92650 and verify that user is able to lock seats\nExpected Result:\nIn Patron Contact Line, If the postal codes is \nentered as \no â€œ92600-92615-92650â€�, the range is taken as \n92600-92650.\n6. 1. Associate RCG2 to E1\n2. Repeat steps 4 to 6 for patron with postal code between 92600 \nand 92650 and verify that proper validation is thrown, as no postal \ncode match in the defined range\n7. Repeat steps 4 to 6 for patron with postal code not between 92600 and 92650 and verify that proper validation is \nthrown\nExpected Result:\nIn Patron Contact Line, If the postal codes is \nentered as \no â€œ92600-92615-92650â€�, the range is taken \nas 92600-92650.\n8. 1. Associate RCG3 to E1\n2. Repeat steps 4 to 6 for patron with postal code less than 92650 and verify that user is able to lock seats\n9. Repeat steps 4 to 6 for patron with postal code greater than 92650 and verify that proper validation is thrown\n10. 1. Associate RCG4 to E1\n2. Repeat steps 4 to 6 for patron with postal code greater than 92600 and verify that user is able to lock seats\n11. Repeat steps 4 to 6 for patron with postal code less than 92600 and verify that proper validation is thrown\n12. 1. Associate RCG5 to E1\n2. Repeat steps 4 to 6 for patron with any postal code and verify that proper validation is thrown\n13. 1. Associate RCG6 to E1\n2. Repeat steps 4 to 6 for patron with any postal code and verify that proper validation is thrown\n14. 1. Associate RCG7 to E1\n2. Repeat steps 4 to 6 for patron with any postal code and verify that proper validation is thrown\r\nExpected Result:\r\nthe error should be displayed in the map infroming the opearator about the RCG restriction to sell seats.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Pre-requisite:\n \n1. Create RCGs with the following postal codes (Country: USA, \nState: CA)\nRCG1: 92600-92615-92650\nRCG2: 92650-92600\nRCG3: -92650\nRCG4: 92600-\nRCG5: ,,,,,,\nRCG6: , , , , ,\nRCG7: --- --\n2. Create an Event E1.\nExpected Result:\nPre-requisite should be emt.\n2. Login to PV with valid credentials.\n3. 1. Navigate to Event Admin and select Event E1\n2. Associate RCG1 to E1 in Event Access at user level\n4. 1. Navigate to Ticket Sales and Select Event E1\n2. Select a Patron with postal code between 92600 and 92615\n3. Enter number of seats and click LOCK SEATS\n4. Verify that user is able to lock seats\nExpected Result:\nIn Patron Contact Line, If the postal codes is \nentered as \no â€œ92600-92615-92650â€�, the range is taken as \n92600-92650.\n5. Repeat steps 4 to 6 for patron with postal code between \n92615 and 92650 and verify that user is able to lock seats\nExpected Result:\nIn Patron Contact Line, If the postal codes is \nentered as \no â€œ92600-92615-92650â€�, the range is taken as \n92600-92650.\n6. 1. Associate RCG2 to E1\n2. Repeat steps 4 to 6 for patron with postal code between 92600 \nand 92650 and verify that proper validation is thrown, as no postal \ncode match in the defined range\n7. Repeat steps 4 to 6 for patron with postal code not between 92600 and 92650 and verify that proper validation is \nthrown\nExpected Result:\nIn Patron Contact Line, If the postal codes is \nentered as \no â€œ92600-92615-92650â€�, the range is taken \nas 92600-92650.\n8. 1. Associate RCG3 to E1\n2. Repeat steps 4 to 6 for patron with postal code less than 92650 and verify that user is able to lock seats\n9. Repeat steps 4 to 6 for patron with postal code greater than 92650 and verify that proper validation is thrown\n10. 1. Associate RCG4 to E1\n2. Repeat steps 4 to 6 for patron with postal code greater than 92600 and verify that user is able to lock seats\n11. Repeat steps 4 to 6 for patron with postal code less than 92600 and verify that proper validation is thrown\n12. 1. Associate RCG5 to E1\n2. Repeat steps 4 to 6 for patron with any postal code and verify that proper validation is thrown\n13. 1. Associate RCG6 to E1\n2. Repeat steps 4 to 6 for patron with any postal code and verify that proper validation is thrown\n14. 1. Associate RCG7 to E1\n2. Repeat steps 4 to 6 for patron with any postal code and verify that proper validation is thrown",
        "expected": "1. the error should be displayed in the map infroming the opearator about the RCG restriction to sell seats."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597379,
    "title": "Verify that the warning message is displayed for the Single and Triple stranded seat when the map sales stranding seat is set as Not allowed for the package",
    "section_id": 1681330,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1827046",
    "custom_preconds": "Stranding seats",
    "custom_test_purpose": null,
    "custom_steps": "1. 1. http://10.1.1.30:18080/portal\r\nExpected Result:\r\nThe PV Application should be launched\r\n2. 1. Setup an event : \r\n3. Update the Map sales stranding seat as \"Not Allowed\"\r\nExpected Result:\r\nNot Allowed should be updated in the Event access\r\n4. Login as a bouser using the following credentials:\n1. Username: \n2. Password: \nClick on Login button\r\nExpected Result:\r\nUser should be logged in.\r\n5. Click on the Ticket Sales link\r\nExpected Result:\r\nUser should be navigated to the Ticket Sale page\r\n6. 1. Input * in the Event Search textbox\r\n2. Click on FIND button\r\n3. Click on the Sell icon corresponding to the event set\r\nExpected Result:\r\nThe event should be selected for the transaction\nUser should be navigated to the Seat Selection page\r\n7. 1. Select the checkbox corresponding to the section\r\n2. Click on View Map\r\nExpected Result:\r\nUser should be navigated to the Map View of the Section\r\n8. 1 Try to lock the seats by leaving last 3 seats\r\nExpected Result:\r\nLeave the last 3 seats of the row\r\n9. Verify that the warning message is displayed as there is not allowed is set\r\nExpected Result:\r\nWarning message should be displayed\r\n10. Try to lock the seats by leaving last 1 seat of a row\r\nExpected Result:\r\nLeave the single stranded seat and lock the seats\r\n11. Verify that the warning message is displayed as there is not allowed is set\r\nExpected Result:\r\nWarning message should be displayed\r\n12. Click on the Logout link\r\nExpected Result:\r\n1. User should be logged out.\n2. User should be navigated to the Login page\r\nExpected Result:\r\nwarning should be display when we have a stranded seats",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. http://10.1.1.30:18080/portal\r\nExpected Result:\r\nThe PV Application should be launched\r\n2. 1. Setup an event : \r\n3. Update the Map sales stranding seat as \"Not Allowed\"\r\nExpected Result:\r\nNot Allowed should be updated in the Event access\r\n4. Login as a bouser using the following credentials:\n1. Username: \n2. Password: \nClick on Login button\r\nExpected Result:\r\nUser should be logged in.\r\n5. Click on the Ticket Sales link\r\nExpected Result:\r\nUser should be navigated to the Ticket Sale page\r\n6. 1. Input * in the Event Search textbox\r\n2. Click on FIND button\r\n3. Click on the Sell icon corresponding to the event set\r\nExpected Result:\r\nThe event should be selected for the transaction\nUser should be navigated to the Seat Selection page\r\n7. 1. Select the checkbox corresponding to the section\r\n2. Click on View Map\r\nExpected Result:\r\nUser should be navigated to the Map View of the Section\r\n8. 1 Try to lock the seats by leaving last 3 seats\r\nExpected Result:\r\nLeave the last 3 seats of the row\r\n9. Verify that the warning message is displayed as there is not allowed is set\r\nExpected Result:\r\nWarning message should be displayed\r\n10. Try to lock the seats by leaving last 1 seat of a row\r\nExpected Result:\r\nLeave the single stranded seat and lock the seats\r\n11. Verify that the warning message is displayed as there is not allowed is set\r\nExpected Result:\r\nWarning message should be displayed\r\n12. Click on the Logout link\r\nExpected Result:\r\n1. User should be logged out.\n2. User should be navigated to the Login page",
        "expected": "1. warning should be display when we have a stranded seats"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597380,
    "title": "verify all valid promotions are displayed and avialable for selection",
    "section_id": 1681331,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1827047",
    "custom_preconds": "Setup discount value promotions",
    "custom_test_purpose": null,
    "custom_steps": "1. check for the following types of promotion with valid setup\ndiscount value promotion\r\nExpected Result:\r\npromoiton should be avaiable, buyer types should be displayed and user should be able lock and sell seats via map using promotions",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. check for the following types of promotion with valid setup\ndiscount value promotion",
        "expected": "1. promoiton should be avaiable, buyer types should be displayed and user should be able lock and sell seats via map using promotions"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597381,
    "title": "Perform a sale by selecting the section from ticket services and setting the AFP to Map sales as default",
    "section_id": 1681332,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1827049",
    "custom_preconds": "Ticket services to map",
    "custom_test_purpose": null,
    "custom_steps": "1. 1. 1.create a package\r\n2.Set Default sales flow as 'Map salesfor all the user\r\n2. 1.Perform a sales transaction for the package PKG1 for any patron.\r\n2.Note down the Order ID\r\nExpected Result:\r\nSales Transaction should be completed successfully for the package PKG1 for any patron.\r\n\r\nOrder ID should be noted.\r\n3. 1.Navigate to Ticket Services\r\n2.search and select the order created for package PKG1 in Pre Requisite 2\r\nExpected Result:\r\nOrder details shuld be displayed to the user\r\n4. select  the section\r\nExpected Result:\r\nUser should be navigated to the map page\r\n5. 1.Select any section in the map\r\n2.select any few seats from differnt rows for the event EVT5\r\n3.Click the option \"ADD and GO TO CART\"\r\nExpected Result:\r\nNo error mesasge should be displayed to the user.\r\n\r\nUser should be navigated to cart successfully with the selected seats locked in cart\r\n6. 1.Select a delivery mehod for these seats\r\n2.Navigate to Payment tab\r\n3.Make Payment and complete the Transaction\r\nExpected Result:\r\nPartial exchange sale should be completed successfully\r\n7. 1.Navigate to Ticket Services\r\n2.search and select the order created for package PKG1 in Pre Requisite 2\r\n3.Expand the treeview against the package PKG1 in the package line band\r\n3.Verify whether the seats of the event EVT5 (which is a constituent event of PKG2) i included in this order\r\nExpected Result:\r\nSeats of the event EVT5 purchased during partial exchnage sale transaction should be included in this order",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. 1.create a package\r\n2.Set Default sales flow as 'Map salesfor all the user\r\n2. 1.Perform a sales transaction for the package PKG1 for any patron.\r\n2.Note down the Order ID\r\nExpected Result:\r\nSales Transaction should be completed successfully for the package PKG1 for any patron.\r\n\r\nOrder ID should be noted.\r\n3. 1.Navigate to Ticket Services\r\n2.search and select the order created for package PKG1 in Pre Requisite 2\r\nExpected Result:\r\nOrder details shuld be displayed to the user\r\n4. select  the section\r\nExpected Result:\r\nUser should be navigated to the map page\r\n5. 1.Select any section in the map\r\n2.select any few seats from differnt rows for the event EVT5\r\n3.Click the option \"ADD and GO TO CART\"\r\nExpected Result:\r\nNo error mesasge should be displayed to the user.\r\n\r\nUser should be navigated to cart successfully with the selected seats locked in cart\r\n6. 1.Select a delivery mehod for these seats\r\n2.Navigate to Payment tab\r\n3.Make Payment and complete the Transaction\r\nExpected Result:\r\nPartial exchange sale should be completed successfully\r\n7. 1.Navigate to Ticket Services\r\n2.search and select the order created for package PKG1 in Pre Requisite 2\r\n3.Expand the treeview against the package PKG1 in the package line band\r\n3.Verify whether the seats of the event EVT5 (which is a constituent event of PKG2) i included in this order\r\nExpected Result:\r\nSeats of the event EVT5 purchased during partial exchnage sale transaction should be included in this order",
        "expected": "1."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597382,
    "title": "Verify  the  hyperlink on the section code of the seat detail band at seat history view in  order view of ticket service  is navigating to the seat map in ticket sales mode",
    "section_id": 1681332,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1827052",
    "custom_preconds": "Ticket services to map",
    "custom_test_purpose": null,
    "custom_steps": "1. 1. Pre requisite:  Complete a transaction and note the transaction details\r\n2. Login in PV applicvation with valisd user name & password\r\nExpected Result:\r\nuser should logged in successfully\r\n3. Select ticket services from ticketing tab\r\nExpected Result:\r\nTicket service page should be displayed\r\n4. In search using field select the transaction id\r\nExpected Result:\r\nTransaction id should be selected\r\n5. 1)In search value field input the transaction id of the transaction which done in prerequisite   \r\n2)click find button\r\nExpected Result:\r\norder details should display\r\n6. click the hyperlink option which available in seat column\r\nExpected Result:\r\napplication should navigate to seat history view\r\n7. the section  field should display with  hyperlilnk option\r\nExpected Result:\r\nhyperlink option should available\r\n8. click the hyperlink field\r\nExpected Result:\r\napplication should navigate to seat map in ticket sales",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Pre requisite:  Complete a transaction and note the transaction details\r\n2. Login in PV applicvation with valisd user name & password\r\nExpected Result:\r\nuser should logged in successfully\r\n3. Select ticket services from ticketing tab\r\nExpected Result:\r\nTicket service page should be displayed\r\n4. In search using field select the transaction id\r\nExpected Result:\r\nTransaction id should be selected\r\n5. 1)In search value field input the transaction id of the transaction which done in prerequisite   \r\n2)click find button\r\nExpected Result:\r\norder details should display\r\n6. click the hyperlink option which available in seat column\r\nExpected Result:\r\napplication should navigate to seat history view\r\n7. the section  field should display with  hyperlilnk option\r\nExpected Result:\r\nhyperlink option should available\r\n8. click the hyperlink field\r\nExpected Result:\r\napplication should navigate to seat map in ticket sales",
        "expected": "1."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597383,
    "title": "Configuration changes_Verify that Changing venue configuration or master configuration navigation map images are immediately visible or applicable in the sales map",
    "section_id": 1681333,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1827057",
    "custom_preconds": "CS - Venue Configuration - Proximity",
    "custom_test_purpose": null,
    "custom_steps": "1. 1. Login to the application using valid credentials.\r\nExpected Result:\r\nUser logged in successfully.\r\n2. A venue should be available\r\nExpected Result:\r\nA venue created successfully\r\n3. Login to the application using valid credentials.\r\nExpected Result:\r\nUser logged in successfully.\r\n4. 1.Login to PV\r\n2.Navigate to venue administration\r\n3.Select a venue\r\nExpected Result:\r\nVenue details page should be displayed.\r\n5. 1.Login to PV\r\n2.Navigate to venue administration\r\n3.Select a venue\r\n4.Select master configuration \r\n5.change the navigation map image in master configuration detials page\r\n6.Click on Apply changes\r\nExpected Result:\r\nMaster configuration window  should be updated successfully\r\n6. 1.Login to PV\r\n2.Navigate to venue administration\r\n3.Select a venue\r\n4.Select venue configuration \r\n5.change the navigation map image in venue configuration detials page\r\n6.Click on Apply changes\r\nExpected Result:\r\nVenue configuration window  should be updated successfully\r\n7. Update the status of all other configurations necessary\r\nExpected Result:\r\nChanging venue configuration or master configuration navigation map images are immediately visible or applicable in the sales map successfully",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Login to the application using valid credentials.\r\nExpected Result:\r\nUser logged in successfully.\r\n2. A venue should be available\r\nExpected Result:\r\nA venue created successfully\r\n3. Login to the application using valid credentials.\r\nExpected Result:\r\nUser logged in successfully.\r\n4. 1.Login to PV\r\n2.Navigate to venue administration\r\n3.Select a venue\r\nExpected Result:\r\nVenue details page should be displayed.\r\n5. 1.Login to PV\r\n2.Navigate to venue administration\r\n3.Select a venue\r\n4.Select master configuration \r\n5.change the navigation map image in master configuration detials page\r\n6.Click on Apply changes\r\nExpected Result:\r\nMaster configuration window  should be updated successfully\r\n6. 1.Login to PV\r\n2.Navigate to venue administration\r\n3.Select a venue\r\n4.Select venue configuration \r\n5.change the navigation map image in venue configuration detials page\r\n6.Click on Apply changes\r\nExpected Result:\r\nVenue configuration window  should be updated successfully\r\n7. Update the status of all other configurations necessary\r\nExpected Result:\r\nChanging venue configuration or master configuration navigation map images are immediately visible or applicable in the sales map successfully",
        "expected": "1."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597384,
    "title": "verify changes to holdcode via map management reflect in the Holdcode management immediately",
    "section_id": 1681334,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1827061",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Goto map sales and select a event\nMove some seats from one hold code to another hold code.\nCheck the hold code on the seat for the event  in hold code management portal for which we changed hold code via mapsale portal\r\nExpected Result:\r\nhold code change should immediately reflect in the Holdcode management.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Goto map sales and select a event\nMove some seats from one hold code to another hold code.\nCheck the hold code on the seat for the event  in hold code management portal for which we changed hold code via mapsale portal",
        "expected": "1. hold code change should immediately reflect in the Holdcode management."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597385,
    "title": "verify that map sales for non-inventoried events in a package in composite and per event mode",
    "section_id": 1681335,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1827064",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. user with AFP set to mapsales\n1) test where the package has a mix on inventoried and non-inventoried.\n2) where the entire package is non-inventoried\r\nExpected Result:\r\nCompare with Flash",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. user with AFP set to mapsales\n1) test where the package has a mix on inventoried and non-inventoried.\n2) where the entire package is non-inventoried",
        "expected": "1. Compare with Flash"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597386,
    "title": "verify when the hold code on a seat is changed while after user select the seat but locks after the hold code changes- hold code view mode",
    "section_id": 1681336,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1826984",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1) select a seat for package in the composite mode and in a different browser change one of the event hold code to a hold code the user does not have access and try lock seats.\n\n2) Select a seat for package and change the user to not have acces to that hold code to not have access and try to lock seat\r\nExpected Result:\r\nUser should get an error and lock should not suceed.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1) select a seat for package in the composite mode and in a different browser change one of the event hold code to a hold code the user does not have access and try lock seats.\n\n2) Select a seat for package and change the user to not have acces to that hold code to not have access and try to lock seat",
        "expected": "1. User should get an error and lock should not suceed."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597387,
    "title": "verify the patron indication for compostie and per event sale method: individual event sale",
    "section_id": 1681337,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1827021",
    "custom_preconds": "sell ticket to the some of the event in the package to a patron.\nSet that patron in context",
    "custom_test_purpose": null,
    "custom_steps": "1. Check in composite mode.\nCheck the per event mode\r\nExpected Result:\r\nrefer the mockup but seat should display partiall unavialable.\n1) Cannot be selected in composite mode \n2) should be selected in per events to event it was not sold and should show patron icon to the event it was already sold to same patron",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Check in composite mode.\nCheck the per event mode",
        "expected": "1. refer the mockup but seat should display partiall unavialable.\n1) Cannot be selected in composite mode \n2) should be selected in per events to event it was not sold and should show patron icon to the event it was already sold to same patron"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597388,
    "title": "verify behaviour when locking seats to a event with max/min seat limit set via map",
    "section_id": 1681338,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1827045",
    "custom_preconds": "setup event  min and max setting",
    "custom_test_purpose": null,
    "custom_steps": "1. 1) Lock seats to an event less than the minimum limit.\n2) Lock seat to an event more than the max limit.\n3) Lock seat within the limit set for the event\r\nExpected Result:\r\n1) error that seats a less than the limit\n2) error that seat exceed the limit\n3) no error and lock successful",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1) Lock seats to an event less than the minimum limit.\n2) Lock seat to an event more than the max limit.\n3) Lock seat within the limit set for the event",
        "expected": "1. 1) error that seats a less than the limit\n2) error that seat exceed the limit\n3) no error and lock successful"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597389,
    "title": "verify the navigation to nav and seat map when in package context from PVF",
    "section_id": 1681339,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1827080",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. verify the package in mapsales and complete a sales transaction \nverify the navigation back to PVF after the same is completed\r\nExpected Result:\r\nUser should be navigate to the navmap and than seatmap.\nonce seat are selected and sale completed user should be able to navigate back to PVF.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. verify the package in mapsales and complete a sales transaction \nverify the navigation back to PVF after the same is completed",
        "expected": "1. User should be navigate to the navmap and than seatmap.\nonce seat are selected and sale completed user should be able to navigate back to PVF."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597390,
    "title": "verify the option for sale method to set hold code and UI display for packages",
    "section_id": 1681340,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1827022",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1) check if we have option to select composite and per event in holdcode mode for package.\n2) Package option panel behaviour\n3) Hold code panel behaviour\n4) button displayed in holdcode view  without seat selection\r\nExpected Result:\r\n1) The ability to set hold codes on a seat map in either composite or per event sales method shall continue to be supported.   \n2) package options panel should have the ability to expand and collapse.\n3) The Hold Code panel shall behave similarly to the Seat Sales panel â€“ expanding or collapsing in conjunction with the package options panel.    The hold code panel must be expanded to select the target hold code but can then be collapsed if the user wishes to open the package options panel to select a specific event within the package list to manage.  \n4) The Lock Seats and Set Hold Code buttons shall be disabled until seats are selected",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1) check if we have option to select composite and per event in holdcode mode for package.\n2) Package option panel behaviour\n3) Hold code panel behaviour\n4) button displayed in holdcode view  without seat selection",
        "expected": "1. 1) The ability to set hold codes on a seat map in either composite or per event sales method shall continue to be supported.   \n2) package options panel should have the ability to expand and collapse.\n3) The Hold Code panel shall behave similarly to the Seat Sales panel â€“ expanding or collapsing in conjunction with the package options panel.    The hold code panel must be expanded to select the target hold code but can then be collapsed if the user wishes to open the package options panel to select a specific event within the package list to manage.  \n4) The Lock Seats and Set Hold Code buttons shall be disabled until seats are selected"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597391,
    "title": "verify locking to  a table seating event via map",
    "section_id": 1681341,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1827062",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1) lock 2 of 4 seats to a table seating event and verify the status and display of the other 2 seats.\n2) Login as different patron and try to lock the other 2 ticket in a different session\r\nExpected Result:\r\n1) user should be lock 2 seat and other 2 seat should also be locked.\n2) the other seats should not avilable for locking in the map",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1) lock 2 of 4 seats to a table seating event and verify the status and display of the other 2 seats.\n2) Login as different patron and try to lock the other 2 ticket in a different session",
        "expected": "1. 1) user should be lock 2 seat and other 2 seat should also be locked.\n2) the other seats should not avilable for locking in the map"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597392,
    "title": "verify hold code on the seats after sale to a table seating event via map",
    "section_id": 1681341,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1827063",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. complet a sale to table seating event, 2 of 4 tickets and check the seat info of these tickets via map\r\nExpected Result:\r\n1) sold 2 ticket should be under source hold code\n2) the other 2 tickets in that table should reflect target holdcode.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. complet a sale to table seating event, 2 of 4 tickets and check the seat info of these tickets via map",
        "expected": "1. 1) sold 2 ticket should be under source hold code\n2) the other 2 tickets in that table should reflect target holdcode."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597393,
    "title": "Verify Full package exchange with different event_package transaction can be completed from map sales_Sale Transaction",
    "section_id": 1681342,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1827066",
    "custom_preconds": "Full Package - Exchange",
    "custom_test_purpose": null,
    "custom_steps": "1. 1. 1)Create a package PKG1 with 2 events EVT1 and EVT2 with partial package exchange \naccess to user.\n2)Create a package PKG2 with 2 events EVT3 and EVT4\n3)Default Sales Flow Type should be set to Map Sales in AFP->Sales PermissionLaunch PV application\nExpected Result:\nPre-Requisites should be done successfully.\n2. 1.Navigate to Ticketing tab\n2.Select Ticket sales portal\n3.Search for the package PKG1 mentioned in pre-requisites.\n4.Complete a package sale transaction\n5.Click on Confirmation Id link\nExpected Result:\nPackage Sale transaction should be successfully completed and navigated to Tikcet Services page\n3. 1)Navigate to Ticket Services>Order details page of transaction done in step 3\n2)Select Partial Exchange from drop down option\n3)Select few seats from event EVT1 or EVT2\n4)Click on APPLY ACTION button\nExpected Result:\nUser should be able to select seats fro partial exchange and navigated to Exchange Sales search page\n4. 1. Search for events EVT3 or EVT4 in Package PKG2 and select\nExpected Result:\nUser should be navigated to Map Sales page automatically and view the map\n5. 1)Select seats from any section in the map\n2)Click on ADD and Go To Cart button\nExpected Result:\nUser should be navigated to cat with offer displays \"Partial Exchange Sale\"\n6. Login to PV Application using valid credentials\nExpected Result:\nUser should be successfully login to PV Application\n7. 1)Assign a delivery method\n2)Make the payment\n3)Click on CHECKOUT button\n4)Verify user is able to complete the Partial Exchange sale transaction.\nExpected Result:\nUser should be able to complete the Partial Exchange sale transaction\n8. Click on Logout link\nExpected Result:\nUser should be logged out of the application successfully.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. 1)Create a package PKG1 with 2 events EVT1 and EVT2 with partial package exchange \naccess to user.\n2)Create a package PKG2 with 2 events EVT3 and EVT4\n3)Default Sales Flow Type should be set to Map Sales in AFP->Sales PermissionLaunch PV application\nExpected Result:\nPre-Requisites should be done successfully.\n2. 1.Navigate to Ticketing tab\n2.Select Ticket sales portal\n3.Search for the package PKG1 mentioned in pre-requisites.\n4.Complete a package sale transaction\n5.Click on Confirmation Id link\nExpected Result:\nPackage Sale transaction should be successfully completed and navigated to Tikcet Services page\n3. 1)Navigate to Ticket Services>Order details page of transaction done in step 3\n2)Select Partial Exchange from drop down option\n3)Select few seats from event EVT1 or EVT2\n4)Click on APPLY ACTION button\nExpected Result:\nUser should be able to select seats fro partial exchange and navigated to Exchange Sales search page\n4. 1. Search for events EVT3 or EVT4 in Package PKG2 and select\nExpected Result:\nUser should be navigated to Map Sales page automatically and view the map\n5. 1)Select seats from any section in the map\n2)Click on ADD and Go To Cart button\nExpected Result:\nUser should be navigated to cat with offer displays \"Partial Exchange Sale\"\n6. Login to PV Application using valid credentials\nExpected Result:\nUser should be successfully login to PV Application\n7. 1)Assign a delivery method\n2)Make the payment\n3)Click on CHECKOUT button\n4)Verify user is able to complete the Partial Exchange sale transaction.\nExpected Result:\nUser should be able to complete the Partial Exchange sale transaction\n8. Click on Logout link\nExpected Result:\nUser should be logged out of the application successfully.",
        "expected": "1."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597394,
    "title": "Perform a Full package exchange selecting event of same  pack as target with more orless no. of tickets with FFD set to False,Acs permisns set to False_Exchge using Map sales",
    "section_id": 1681342,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26169",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C1827069",
    "custom_preconds": "Full Package - Exchange",
    "custom_test_purpose": null,
    "custom_steps": "1. 1. Login the application using the suitable credentials\nExpected Result:\nThe user should be able to login the application successfully\n2. 1. Navigate to the Event administration portal\n2. Click the New button to create a New Event \n3. Enter the mandatory fields \n4. Click on Apply Changes button\nExpected Result:\nThe user should be able to create the event successfully\n3. 1. Navigate to the Package event list portal\n2. Click on New to create a New Package event list\n3. Enter the mandatory data\n4. Click on Apply changes\n5. Click the Event Tab \n6. Search for the 2 Events created above \n7. Click the Include Button and click the apply Apply changes button\n8. Navigate to Details tab and set the Status to Available\n9. Click on Apply changes\nExpected Result:\nThe user should be able to create the PEL successfully\n4. 1. Naviage to the Package administration\n2. Click on New to create a new Package\n3. Enter the Mandatory fields and click the Apply changes button\n4. Click the Event Lists tab\n5. Search for the Event Lists created above \n6. Click the Include button\n7. Select Manual from the dropdown and select Apply\n8. CLick on Apply changes\n9. Navigate to the Details tab \n10 Set the Package status to Onsale\n11. Click on Apply changes\nExpected Result:\nA Package is successfully Created\n5. 1. Set the Same Quantity in the Exchanges Panel to true\n2. Set the Force Fixed Quantity to False and click on Apply changes\n3. Click the Package Access tab\n4. Set Allow Break Exchange Context Rules and Allow Break Exchange Quantity Rule options to False\n5. Click on Apply changes\nExpected Result:\nPACKAGE Setting should be successfully selected\n6. 1. Navigate to the Ticket Sales Portal\n2. Select the Package Radio button\n3. Search for the package created above\n4. Select the package created above \n5. Click the Map tab\n6. Select the Package Details tab in the Left \n7. Select Per Event tab\n8. Select each Event and select the seats (user should  be able to select different number of seats for different events)\n9. Click Add to the Cart\n10. Select the Payment method and click on Apply\n11. Select the Delivery method and click on Apply\n12. Click the Checkout button\nExpected Result:\nThe user should be able to complete the package sales transaction successfully\n7. 1. Navigate to the TIcket services portal\n2. Search for the above transaction\n3. Click the Order ID link\n4. Select \"Partial Exchange\" from Actions dropdown\n5. Click on Apply action\nNote down the number of seats\nExpected Result:\nThe user should be navigated to the Ticket sales portal and search for the Event or Package for Exchanging the Tickets\n8. Logout of the application\nExpected Result:\nThe user should be able to logout of the application successfully\n9. 1. Navigate to the Ticket Sales Portal\n2. Select the Package Radio button\n3. Search for the package created above\n4. Click on View Map\n4. Select Seats such that it is more than the number of seats noted above\n5. click on \"Add and go to Cart\" button\n6.Select the Delivery method and click on Apply\n7. Select the Payment method and click on Apply\n8. Click the Checkout button\nExpected Result:\n-The User should not be able  to complete transaction\n-An Error message should be displayed upon clicking checkout\n10. 1. Repeat step 8 with number of seats selected is less than the number of seats noted above\n2. Click the Checkout button\nExpected Result:\n-An Error message should be displayed upon clicking on checkout\n-The User should not be able  to complete transaction",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Login the application using the suitable credentials\nExpected Result:\nThe user should be able to login the application successfully\n2. 1. Navigate to the Event administration portal\n2. Click the New button to create a New Event \n3. Enter the mandatory fields \n4. Click on Apply Changes button\nExpected Result:\nThe user should be able to create the event successfully\n3. 1. Navigate to the Package event list portal\n2. Click on New to create a New Package event list\n3. Enter the mandatory data\n4. Click on Apply changes\n5. Click the Event Tab \n6. Search for the 2 Events created above \n7. Click the Include Button and click the apply Apply changes button\n8. Navigate to Details tab and set the Status to Available\n9. Click on Apply changes\nExpected Result:\nThe user should be able to create the PEL successfully\n4. 1. Naviage to the Package administration\n2. Click on New to create a new Package\n3. Enter the Mandatory fields and click the Apply changes button\n4. Click the Event Lists tab\n5. Search for the Event Lists created above \n6. Click the Include button\n7. Select Manual from the dropdown and select Apply\n8. CLick on Apply changes\n9. Navigate to the Details tab \n10 Set the Package status to Onsale\n11. Click on Apply changes\nExpected Result:\nA Package is successfully Created\n5. 1. Set the Same Quantity in the Exchanges Panel to true\n2. Set the Force Fixed Quantity to False and click on Apply changes\n3. Click the Package Access tab\n4. Set Allow Break Exchange Context Rules and Allow Break Exchange Quantity Rule options to False\n5. Click on Apply changes\nExpected Result:\nPACKAGE Setting should be successfully selected\n6. 1. Navigate to the Ticket Sales Portal\n2. Select the Package Radio button\n3. Search for the package created above\n4. Select the package created above \n5. Click the Map tab\n6. Select the Package Details tab in the Left \n7. Select Per Event tab\n8. Select each Event and select the seats (user should  be able to select different number of seats for different events)\n9. Click Add to the Cart\n10. Select the Payment method and click on Apply\n11. Select the Delivery method and click on Apply\n12. Click the Checkout button\nExpected Result:\nThe user should be able to complete the package sales transaction successfully\n7. 1. Navigate to the TIcket services portal\n2. Search for the above transaction\n3. Click the Order ID link\n4. Select \"Partial Exchange\" from Actions dropdown\n5. Click on Apply action\nNote down the number of seats\nExpected Result:\nThe user should be navigated to the Ticket sales portal and search for the Event or Package for Exchanging the Tickets\n8. Logout of the application\nExpected Result:\nThe user should be able to logout of the application successfully\n9. 1. Navigate to the Ticket Sales Portal\n2. Select the Package Radio button\n3. Search for the package created above\n4. Click on View Map\n4. Select Seats such that it is more than the number of seats noted above\n5. click on \"Add and go to Cart\" button\n6.Select the Delivery method and click on Apply\n7. Select the Payment method and click on Apply\n8. Click the Checkout button\nExpected Result:\n-The User should not be able  to complete transaction\n-An Error message should be displayed upon clicking checkout\n10. 1. Repeat step 8 with number of seats selected is less than the number of seats noted above\n2. Click the Checkout button\nExpected Result:\n-An Error message should be displayed upon clicking on checkout\n-The User should not be able  to complete transaction",
        "expected": "1."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "6.0.00"
  },
  {
    "id": 30597395,
    "title": "Workstation setup: Swipe/Manual (Default)- verify sale with credit card/ gift card and return",
    "section_id": 1681343,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": "C1850384",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": null,
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30597396,
    "title": "Verify syncing credit card to the digital wallet by entering the card information manually or via a swipe on a swipe/manual workstation",
    "section_id": 1681343,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26365",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C1850385",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Login to PV\r\nExpected Result:\r\nLogin should be displayed\r\n2. Navigate to Workstation Configuration\n\r\nExpected Result:\r\n Workstation Configuration should be displayed\r\n3. Set a Workstation with Card Entry Type as Swipe/Manual\r\nExpected Result:\r\nWorkstation should be set in the system\r\n4. Lock seats for an event\nSelect the payment as Credit Card\nSync the card to digital wallet\nComplete sale\r\nExpected Result:\r\nPayment should be completed\r\n5. Navigate to Patron management\nSelect the patron-Wallet\n\r\nExpected Result:\r\nThe above used credit card should be added to the wallet",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to PV\r\n2. Navigate to Workstation Configuration\n\r\n3. Set a Workstation with Card Entry Type as Swipe/Manual\r\n4. Lock seats for an event\nSelect the payment as Credit Card\nSync the card to digital wallet\nComplete sale\r\n5. Navigate to Patron management\nSelect the patron-Wallet",
        "expected": "1. Login should be displayed\r\n2.  Workstation Configuration should be displayed\r\n3. Workstation should be set in the system\r\n4. Payment should be completed\r\n5. The above used credit card should be added to the wallet"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.0.50"
  },
  {
    "id": 30597397,
    "title": "Verify that the Ticket Sales-Payment tab when the card is swiped with workstation set as 'Fully Encrypted Swipe'",
    "section_id": 1681344,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-25052",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 16,
    "custom_refs": "C1850382",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Login to PV\r\nExpected Result:\r\nLogin should be displayed\r\n2. Navigate to Workstation Configuration\n\r\nExpected Result:\r\n Workstation Configuration should be displayed\r\n3. Set a Workstation with Card Entry Type as Fully Encrypted Swipe\r\nExpected Result:\r\nWorkstation should be set in the system\r\n4. Navigate to Ticket sales\n\nLock seats \nnavigate to payment tab\nNo payment type selected in payment tab\n\r\nExpected Result:\r\n1) Payment method is auto selected and following details should be non-editable:\nâ€¢ Card Number\nâ€¢ Expiration Date\nâ€¢ Name on Card \n2) Card# should in encrypted\n3) card present should be auto selected\n3) Verify the logs/ DB tables \n4) check the field#3 in API request to payment processor \nTrack 2 data should go to the payment processor gateway.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to PV\r\n2. Navigate to Workstation Configuration\n\r\n3. Set a Workstation with Card Entry Type as Fully Encrypted Swipe\r\n4. Navigate to Ticket sales\n\nLock seats \nnavigate to payment tab\nNo payment type selected in payment tab",
        "expected": "1. Login should be displayed\r\n2.  Workstation Configuration should be displayed\r\n3. Workstation should be set in the system\r\n4. 1) Payment method is auto selected and following details should be non-editable:\nâ€¢ Card Number\nâ€¢ Expiration Date\nâ€¢ Name on Card \n2) Card# should in encrypted\n3) card present should be auto selected\n3) Verify the logs/ DB tables \n4) check the field#3 in API request to payment processor \nTrack 2 data should go to the payment processor gateway."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.0.20"
  },
  {
    "id": 30597398,
    "title": "Verify the patron digital wallet in patron management",
    "section_id": 1681344,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-25052",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 16,
    "custom_refs": "C1850383",
    "custom_preconds": "Workstation setting-Fully Encrypted Swipe",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to PV with valid credentials\r\nExpected Result:\r\nLogin should be successful and the home page of the application should be launched\r\n2. Navigate to Patron Management\r\nExpected Result:\r\nUser should be navigated to patron management portal\r\n3. Verify the patron digital wallet in patron management\n1) Patron swipes the card\n2) Manual entry\r\nExpected Result:\r\n1) Error: Keyboard entry is not allowed. Please use the encrypted swipe/keypad to complete your search\n\n2) Manual entry should not be allowed for card# and expiration\nerror: Keyboard entry is not allowed. This function is only available on workstations without full encryption.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to PV with valid credentials\r\n2. Navigate to Patron Management\r\n3. Verify the patron digital wallet in patron management\n1) Patron swipes the card\n2) Manual entry",
        "expected": "1. Login should be successful and the home page of the application should be launched\r\n2. User should be navigated to patron management portal\r\n3. 1) Error: Keyboard entry is not allowed. Please use the encrypted swipe/keypad to complete your search\n\n2) Manual entry should not be allowed for card# and expiration\nerror: Keyboard entry is not allowed. This function is only available on workstations without full encryption."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.0.20"
  },
  {
    "id": 30597399,
    "title": "Verify Ticket Services UI after completing credit card transaction with positive and negative amount via MPV",
    "section_id": 1681345,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PV-25053",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C1850386",
    "custom_preconds": "1. Create an Event\r\n2. Complete a sale for the event with credit card from MPV- Visa/Amex/Master etc.",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to Braintree sandbox environment immediately after transaction\r\nExpected Result:\r\nLogin should be successful\r\n2. Verify that the transaction is not updated in Braintree\r\nExpected Result:\r\nTransaction should not be updated in Braintree\r\n3. Login to PV\r\nExpected Result:\r\nLogin should be successful\r\n4. Navigate to ticket services and select the order created above > Order view\r\nExpected Result:\r\nUser should be navigated to order view\r\n5. Navigate to Payments tab\r\nExpected Result:\r\nUser should be navigated to Payments tab\r\n6. Verify Payment info\r\nExpected Result:\r\nThe â€œPayment Infoâ€� column will contain masked card number with last four digits of the card number not followed by Gateway Transaction ID \r\n7. Click on the link(Int)\r\nExpected Result:\r\nAuthorization details modal will be displayed\r\n8. Verify Authorization details\r\nExpected Result:\r\nDisplay data from the card_response table\r\n9. Click on Transaction id link\r\nExpected Result:\r\nUser should be navigated to transaction view\r\n10. Navigate to Payments tab\r\nExpected Result:\r\nUser should be navigated to Payments tab\r\n11. Verify Payment info\r\nExpected Result:\r\nThe â€œPayment Infoâ€� column will contain masked card number with last four digits of the card number not followed by Gateway Transaction ID \r\n12. Click on the link(Int)\r\nExpected Result:\r\nAuthorization details modal will be displayed\r\n13. Verify Authorization details\r\nExpected Result:\r\nDisplay data from the card_response table\r\n14. Verify Card Response table and Payment table\n1. Verify below fields in CARD_RESPONSE Table\n    â€¢ TRUNCATED_PAN \n    â€¢ CARD_RESULT_CODE \n    â€¢ CARD_ACTION_CODE \n    â€¢ GATEWAY_TRANSACTION_ID \n2. Verify below fields in PAYMENT Table\n    â€¢ TRUNCATED_PAN \r\nExpected Result:\r\nâ€¢ TRUNCATED_PAN: last four digits of credit card\nâ€¢ CARD_RESULT_CODE: 'OK'\nâ€¢ CARD_ACTION_CODE:'AUTHCAP' for sale transactions and 'REFUND' for refund transactions\nâ€¢ GATEWAY_TRANSACTION_ID: null\nâ€¢ gateway_capture_id\nâ€¢ gateway_payer_id\nâ€¢ gateway_payment_id\nâ€¢ payer_account_email_address\r\n15. In Payments tab in Order View(Ticket Services) select Reverse Payment action against Credit Card payment\r\nExpected Result:\r\nREVERSE PAYMENT pop-up modal is displayed\r\n16. Select the order and Open Item Receivable Type\nClick OK\r\nExpected Result:\r\nUser should be navigated to cart\r\n17. Click on Credit Card on File icon\r\nExpected Result:\r\nCREDIT CARDS-PAYMENTS ON FILE pop-up is displayed with initial payment details\r\n18. Select initial payment and click OK\r\nExpected Result:\r\nInitial card payment details should be displayed in Payment modal\r\n19. Click Accept Payment\r\nExpected Result:\r\nAccept Payment should be successful\r\n20. Click Checkout\r\nExpected Result:\r\nTransaction should be completed successfully\r\n21. Repeat steps 1 to 14",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to Braintree sandbox environment immediately after transaction\r\n2. Verify that the transaction is not updated in Braintree\r\n3. Login to PV\r\n4. Navigate to ticket services and select the order created above > Order view\r\n5. Navigate to Payments tab\r\n6. Verify Payment info\r\n7. Click on the link(Int)\r\n8. Verify Authorization details\r\n9. Click on Transaction id link\r\n10. Navigate to Payments tab\r\n11. Verify Payment info\r\n12. Click on the link(Int)\r\n13. Verify Authorization details\r\n14. Verify Card Response table and Payment table\n1. Verify below fields in CARD_RESPONSE Table\n    â€¢ TRUNCATED_PAN \n    â€¢ CARD_RESULT_CODE \n    â€¢ CARD_ACTION_CODE \n    â€¢ GATEWAY_TRANSACTION_ID \n2. Verify below fields in PAYMENT Table\n    â€¢ TRUNCATED_PAN \r\n15. In Payments tab in Order View(Ticket Services) select Reverse Payment action against Credit Card payment\r\n16. Select the order and Open Item Receivable Type\nClick OK\r\n17. Click on Credit Card on File icon\r\n18. Select initial payment and click OK\r\n19. Click Accept Payment\r\n20. Click Checkout\r\n21. Repeat steps 1 to 14",
        "expected": "1. Login should be successful\r\n2. Transaction should not be updated in Braintree\r\n3. Login should be successful\r\n4. User should be navigated to order view\r\n5. User should be navigated to Payments tab\r\n6. The â€œPayment Infoâ€� column will contain masked card number with last four digits of the card number not followed by Gateway Transaction ID \r\n7. Authorization details modal will be displayed\r\n8. Display data from the card_response table\r\n9. User should be navigated to transaction view\r\n10. User should be navigated to Payments tab\r\n11. The â€œPayment Infoâ€� column will contain masked card number with last four digits of the card number not followed by Gateway Transaction ID \r\n12. Authorization details modal will be displayed\r\n13. Display data from the card_response table\r\n14. â€¢ TRUNCATED_PAN: last four digits of credit card\nâ€¢ CARD_RESULT_CODE: 'OK'\nâ€¢ CARD_ACTION_CODE:'AUTHCAP' for sale transactions and 'REFUND' for refund transactions\nâ€¢ GATEWAY_TRANSACTION_ID: null\nâ€¢ gateway_capture_id\nâ€¢ gateway_payer_id\nâ€¢ gateway_payment_id\nâ€¢ payer_account_email_address\r\n15. REVERSE PAYMENT pop-up modal is displayed\r\n16. User should be navigated to cart\r\n17. CREDIT CARDS-PAYMENTS ON FILE pop-up is displayed with initial payment details\r\n18. Initial card payment details should be displayed in Payment modal\r\n19. Accept Payment should be successful\r\n20. Transaction should be completed successfully\r\n21."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.0.30"
  },
  {
    "id": 30597400,
    "title": "Verify Ticket Services UI after completing PAYPAL transaction with positive and negative amount via MPV",
    "section_id": 1681345,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PV-25053",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C1850387",
    "custom_preconds": "1. Set Google Pay Merchant and Google Pay Money Location in Sales AFP at user level\r\n2. Create an Event\r\n3. Ensure that DEBUG level is enabled for the class com.tickets.integration.adapters.braintree.BraintreeVZeroClient in JMX Console \r\n4. Complete a sale transaction for the event with PayPal payment via MPV",
    "custom_test_purpose": null,
    "custom_steps": "1. Verify Logs\r\nExpected Result:\r\nSample Logs: http://tdcsharepoint.tixx.tickets.com/sites/NA/PDT/SoftwareEng/PVNG/Design Documents/3.4 Functional Designs/PayPal Integration/Braintree SDK request and response log samples.docx\r\n2. Login to Braintree sandbox environment immediately after transaction\r\nExpected Result:\r\nLogin should be successful\r\n3. Verify the status of the transaction(search by Gateway Transaction id)\r\nExpected Result:\r\nStatus should be â€œSubmitted for settlementâ€�\r\n4. Login to PV\r\nExpected Result:\r\nLogin should be successful\r\n5. Navigate to ticket services and select the order created above > Order view\r\nExpected Result:\r\nUser should be navigated to order view\r\n6. Navigate to Payments tab\r\nExpected Result:\r\nUser should be navigated to Payments tab\r\n7. Verify Payment info\r\nExpected Result:\r\nThe â€œPayment Infoâ€� column will contain masked card number with last four digits of the card number followed by Gateway Transaction ID \r\n8. Click on the link(Int)\r\nExpected Result:\r\nAuthorization details modal will be displayed\r\n9. Verify Authorization details\r\nExpected Result:\r\nDisplay data from the card_response table\r\n10. Click on Transaction id link\r\nExpected Result:\r\nUser should be navigated to transaction view\r\n11. Navigate to Payments tab\r\nExpected Result:\r\nUser should be navigated to Payments tab\r\n12. Verify Payment info\r\nExpected Result:\r\nThe â€œPayment Infoâ€� column will contain masked card number with last four digits of the card number followed by Gateway Transaction ID \r\n13. Click on the link(Int)\r\nExpected Result:\r\nAuthorization details modal will be displayed\r\n14. Verify Authorization details\r\nExpected Result:\r\nDisplay data from the card_response table\r\n15. Verify Card Response table and Payment table\n1. Verify below fields in CARD_RESPONSE Table\n    â€¢ TRUNCATED_PAN \n    â€¢ CARD_RESULT_CODE \n    â€¢ CARD_ACTION_CODE \n    â€¢ GATEWAY_TRANSACTION_ID \n2. Verify below fields in PAYMENT Table\n    â€¢ TRUNCATED_PAN \r\nExpected Result:\r\nâ€¢ TRUNCATED_PAN: last four digits of credit card\nâ€¢ CARD_RESULT_CODE: 'OK'\nâ€¢ CARD_ACTION_CODE:'AUTHCAP' for sale transactions and 'REFUND' for refund transactions\nâ€¢ GATEWAY_TRANSACTION_ID: for refund transaction this will be the same as initial sale transactionâ€™s GATEWAY_TRANSACTION_ID column value\nâ€¢ gateway_capture_id\nâ€¢ gateway_payer_id\nâ€¢ gateway_payment_id\nâ€¢ payer_account_email_address\r\n16. Login to Braintree sandbox environment after some time(around 40 mins)\r\nExpected Result:\r\nLogin should be successful\r\n17. Verify the status of the transaction\r\nExpected Result:\r\nStatus should be â€œSettledâ€�\r\n18. In Payments tab in Order View(Ticket Services) select Reverse Payment action against PayPal payment\r\nExpected Result:\r\nREVERSE PAYMENT pop-up modal is displayed\r\n19. Select the order and Open Item Receivable Type\nClick OK\r\nExpected Result:\r\nUser should be navigated to cart\r\n20. Click on Credit Card on File icon\r\nExpected Result:\r\nCREDIT CARDS-PAYMENTS ON FILE pop-up is displayed and PayPal payment is displayed\r\n21. Select Google Pay payment and click OK\r\nExpected Result:\r\nPayPal Payment details should be displayed in Payment modal\r\n22. Click Accept Payment\r\nExpected Result:\r\nAccept Payment should be successful\r\n23. Click Checkout\r\nExpected Result:\r\nTransaction should be completed successfully\r\n24. Repeat steps 1 to 17",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Verify Logs\r\n2. Login to Braintree sandbox environment immediately after transaction\r\n3. Verify the status of the transaction(search by Gateway Transaction id)\r\n4. Login to PV\r\n5. Navigate to ticket services and select the order created above > Order view\r\n6. Navigate to Payments tab\r\n7. Verify Payment info\r\n8. Click on the link(Int)\r\n9. Verify Authorization details\r\n10. Click on Transaction id link\r\n11. Navigate to Payments tab\r\n12. Verify Payment info\r\n13. Click on the link(Int)\r\n14. Verify Authorization details\r\n15. Verify Card Response table and Payment table\n1. Verify below fields in CARD_RESPONSE Table\n    â€¢ TRUNCATED_PAN \n    â€¢ CARD_RESULT_CODE \n    â€¢ CARD_ACTION_CODE \n    â€¢ GATEWAY_TRANSACTION_ID \n2. Verify below fields in PAYMENT Table\n    â€¢ TRUNCATED_PAN \r\n16. Login to Braintree sandbox environment after some time(around 40 mins)\r\n17. Verify the status of the transaction\r\n18. In Payments tab in Order View(Ticket Services) select Reverse Payment action against PayPal payment\r\n19. Select the order and Open Item Receivable Type\nClick OK\r\n20. Click on Credit Card on File icon\r\n21. Select Google Pay payment and click OK\r\n22. Click Accept Payment\r\n23. Click Checkout\r\n24. Repeat steps 1 to 17",
        "expected": "1. Sample Logs: http://tdcsharepoint.tixx.tickets.com/sites/NA/PDT/SoftwareEng/PVNG/Design Documents/3.4 Functional Designs/PayPal Integration/Braintree SDK request and response log samples.docx\r\n2. Login should be successful\r\n3. Status should be â€œSubmitted for settlementâ€�\r\n4. Login should be successful\r\n5. User should be navigated to order view\r\n6. User should be navigated to Payments tab\r\n7. The â€œPayment Infoâ€� column will contain masked card number with last four digits of the card number followed by Gateway Transaction ID \r\n8. Authorization details modal will be displayed\r\n9. Display data from the card_response table\r\n10. User should be navigated to transaction view\r\n11. User should be navigated to Payments tab\r\n12. The â€œPayment Infoâ€� column will contain masked card number with last four digits of the card number followed by Gateway Transaction ID \r\n13. Authorization details modal will be displayed\r\n14. Display data from the card_response table\r\n15. â€¢ TRUNCATED_PAN: last four digits of credit card\nâ€¢ CARD_RESULT_CODE: 'OK'\nâ€¢ CARD_ACTION_CODE:'AUTHCAP' for sale transactions and 'REFUND' for refund transactions\nâ€¢ GATEWAY_TRANSACTION_ID: for refund transaction this will be the same as initial sale transactionâ€™s GATEWAY_TRANSACTION_ID column value\nâ€¢ gateway_capture_id\nâ€¢ gateway_payer_id\nâ€¢ gateway_payment_id\nâ€¢ payer_account_email_address\r\n16. Login should be successful\r\n17. Status should be â€œSettledâ€�\r\n18. REVERSE PAYMENT pop-up modal is displayed\r\n19. User should be navigated to cart\r\n20. CREDIT CARDS-PAYMENTS ON FILE pop-up is displayed and PayPal payment is displayed\r\n21. PayPal Payment details should be displayed in Payment modal\r\n22. Accept Payment should be successful\r\n23. Transaction should be completed successfully\r\n24."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.0.30"
  },
  {
    "id": 30597401,
    "title": "Verify Ticket Services UI after completing Master Pass transaction with positive and negative amount via MPV",
    "section_id": 1681345,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PV-25053",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C1850388",
    "custom_preconds": "1. Create an Event\r\n2. Complete a sale for the event with Master Pass from MPV",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to Braintree sandbox environment immediately after transaction\r\nExpected Result:\r\nLogin should be successful\r\n2. Verify that the transaction is not updated in Braintree\r\nExpected Result:\r\nTransaction should not be updated in Braintree\r\n3. Login to PV\r\nExpected Result:\r\nLogin should be successful\r\n4. Navigate to ticket services and select the order created above > Order view\r\nExpected Result:\r\nUser should be navigated to order view\r\n5. Navigate to Payments tab\r\nExpected Result:\r\nUser should be navigated to Payments tab\r\n6. Verify Payment info\r\nExpected Result:\r\nThe â€œPayment Infoâ€� column will contain masked card number with last four digits of the card number not followed by Gateway Transaction ID \r\n7. Click on the link(Int)\r\nExpected Result:\r\nAuthorization details modal will be displayed\r\n8. Verify Authorization details\r\nExpected Result:\r\nDisplay data from the card_response table\r\n9. Click on Transaction id link\r\nExpected Result:\r\nUser should be navigated to transaction view\r\n10. Navigate to Payments tab\r\nExpected Result:\r\nUser should be navigated to Payments tab\r\n11. Verify Payment info\r\nExpected Result:\r\nThe â€œPayment Infoâ€� column will contain masked card number with last four digits of the card number not followed by Gateway Transaction ID \r\n12. Click on the link(Int)\r\nExpected Result:\r\nAuthorization details modal will be displayed\r\n13. Verify Authorization details\r\nExpected Result:\r\nDisplay data from the card_response table\r\n14. Verify Card Response table and Payment table\n1. Verify below fields in CARD_RESPONSE Table\n    â€¢ TRUNCATED_PAN \n    â€¢ CARD_RESULT_CODE \n    â€¢ CARD_ACTION_CODE \n    â€¢ GATEWAY_TRANSACTION_ID \n2. Verify below fields in PAYMENT Table\n    â€¢ TRUNCATED_PAN \r\nExpected Result:\r\nâ€¢ TRUNCATED_PAN: last four digits of credit card\nâ€¢ CARD_RESULT_CODE: 'OK'\nâ€¢ CARD_ACTION_CODE:'AUTHCAP' for sale transactions and 'REFUND' for refund transactions\nâ€¢ GATEWAY_TRANSACTION_ID: null\nâ€¢ gateway_capture_id\nâ€¢ gateway_payer_id\nâ€¢ gateway_payment_id\nâ€¢ payer_account_email_address\r\n15. In Payments tab in Order View(Ticket Services) select Reverse Payment action against Credit Card payment\r\nExpected Result:\r\nREVERSE PAYMENT pop-up modal is displayed\r\n16. Select the order and Open Item Receivable Type\nClick OK\r\nExpected Result:\r\nUser should be navigated to cart\r\n17. Click on Credit Card on File icon\r\nExpected Result:\r\nCREDIT CARDS-PAYMENTS ON FILE pop-up is displayed with initial payment details\r\n18. Select initial payment and click OK\r\nExpected Result:\r\nInitial card payment details should be displayed in Payment modal\r\n19. Click Accept Payment\r\nExpected Result:\r\nAccept Payment should be successful\r\n20. Click Checkout\r\nExpected Result:\r\nTransaction should be completed successfully\r\n21. Repeat steps 1 to 14",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to Braintree sandbox environment immediately after transaction\r\n2. Verify that the transaction is not updated in Braintree\r\n3. Login to PV\r\n4. Navigate to ticket services and select the order created above > Order view\r\n5. Navigate to Payments tab\r\n6. Verify Payment info\r\n7. Click on the link(Int)\r\n8. Verify Authorization details\r\n9. Click on Transaction id link\r\n10. Navigate to Payments tab\r\n11. Verify Payment info\r\n12. Click on the link(Int)\r\n13. Verify Authorization details\r\n14. Verify Card Response table and Payment table\n1. Verify below fields in CARD_RESPONSE Table\n    â€¢ TRUNCATED_PAN \n    â€¢ CARD_RESULT_CODE \n    â€¢ CARD_ACTION_CODE \n    â€¢ GATEWAY_TRANSACTION_ID \n2. Verify below fields in PAYMENT Table\n    â€¢ TRUNCATED_PAN \r\n15. In Payments tab in Order View(Ticket Services) select Reverse Payment action against Credit Card payment\r\n16. Select the order and Open Item Receivable Type\nClick OK\r\n17. Click on Credit Card on File icon\r\n18. Select initial payment and click OK\r\n19. Click Accept Payment\r\n20. Click Checkout\r\n21. Repeat steps 1 to 14",
        "expected": "1. Login should be successful\r\n2. Transaction should not be updated in Braintree\r\n3. Login should be successful\r\n4. User should be navigated to order view\r\n5. User should be navigated to Payments tab\r\n6. The â€œPayment Infoâ€� column will contain masked card number with last four digits of the card number not followed by Gateway Transaction ID \r\n7. Authorization details modal will be displayed\r\n8. Display data from the card_response table\r\n9. User should be navigated to transaction view\r\n10. User should be navigated to Payments tab\r\n11. The â€œPayment Infoâ€� column will contain masked card number with last four digits of the card number not followed by Gateway Transaction ID \r\n12. Authorization details modal will be displayed\r\n13. Display data from the card_response table\r\n14. â€¢ TRUNCATED_PAN: last four digits of credit card\nâ€¢ CARD_RESULT_CODE: 'OK'\nâ€¢ CARD_ACTION_CODE:'AUTHCAP' for sale transactions and 'REFUND' for refund transactions\nâ€¢ GATEWAY_TRANSACTION_ID: null\nâ€¢ gateway_capture_id\nâ€¢ gateway_payer_id\nâ€¢ gateway_payment_id\nâ€¢ payer_account_email_address\r\n15. REVERSE PAYMENT pop-up modal is displayed\r\n16. User should be navigated to cart\r\n17. CREDIT CARDS-PAYMENTS ON FILE pop-up is displayed with initial payment details\r\n18. Initial card payment details should be displayed in Payment modal\r\n19. Accept Payment should be successful\r\n20. Transaction should be completed successfully\r\n21."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.0.30"
  },
  {
    "id": 30597402,
    "title": "Verify user can refund partial amount to initial Google Pay Payment after transaction is settled during exchange transaction",
    "section_id": 1681345,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PV-25053",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C1850389",
    "custom_preconds": "1. Set Google Pay Merchant and Apple Pay Merchant as Braintree and also set Google Pay and Apple Pay Money Location in Sales AFP at user level\r\n2. Ensure that DEBUG level is enabled for the class com.tickets.integration.adapters.braintree.BraintreeVZeroClient in JMX Console\r\n3. Create an Event\r\n4. Complete a sale transaction Apple Pay payment - 5 tickets\r\n5. Wait till braintree transaction status is settled",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to PV\r\nExpected Result:\r\nLogin should be successful\r\n2. Navigate to ticket services and select the order created above > Order view\r\nExpected Result:\r\nUser should be navigated to order view\r\n3. Select Exchange Return Action and 3 tickets\r\nExpected Result:\r\nTickets should be selected\r\n4. Click APPLY ACTION\r\nExpected Result:\r\nUser should be navigated to Exchange Sale page\r\n5. Select target event and lock seats such that there is negative amount in cart\r\nExpected Result:\r\nUser should be navigated to cart\r\n6. Apply delivery method\r\nExpected Result:\r\nDelivery method should be applied\r\n7. Click on Card on File Icon\r\nExpected Result:\r\nCredit Card-Payment on File pop-up should be displayed with Google Pay Payment \r\n8. Select Google Pay Payment and click OK\n\r\nExpected Result:\r\nGoogle Pay payment details should be displayed\r\n9. Click Accept payment\r\nExpected Result:\r\nAccept payment should be successful\r\n10. Click Checkout\r\nExpected Result:\r\nTransaction should be completed successfully\r\n11. Click on Order Id link\r\nExpected Result:\r\nUser should be navigated to Ticket Services > Order View\r\n12. Navigate to Payment tab and Verify Payment Details\r\nExpected Result:\r\nGoogle Pay payment details should be displayed correctly as per [C157918]\r\n13. Click Transaction ID link\r\nExpected Result:\r\nUser should be navigated to Ticket Services > Transaction View\r\n14. Navigate to Payment tab and Verify Payment Details\r\nExpected Result:\r\nGoogle Pay payment details should be displayed correctly as per [C157918]\r\n15. Verify Logs\r\nExpected Result:\r\nSample Logs: http://tdcsharepoint.tixx.tickets.com/sites/NA/PDT/SoftwareEng/PVNG/Design Documents/3.4 Functional Designs/PayPal Integration/Braintree SDK request and response log samples.docx\r\n16. Verify Braintree Transaction status immediately\r\nExpected Result:\r\nBraintree Transaction status should be \"Submitted for Settlement\"\r\n17. Verify Card Response table and Payment table\n1. Verify below fields in CARD_RESPONSE Table\nâ€¢ TRUNCATED_PAN \nâ€¢ CARD_RESULT_CODE \nâ€¢ CARD_ACTION_CODE \nâ€¢ GATEWAY_TRANSACTION_ID \n2. Verify below fields in PAYMENT Table\nâ€¢ TRUNCATED_PAN\r\nExpected Result:\r\nâ€¢ TRUNCATED_PAN: last four digits of credit card\nâ€¢ CARD_RESULT_CODE: 'OK'\nâ€¢ CARD_ACTION_CODE:'AUTHCAP' for sale transactions and 'REFUND' for refund transactions\nâ€¢ GATEWAY_TRANSACTION_ID: for refund transaction this will be the same as initial sale transactionâ€™s GATEWAY_TRANSACTION_ID column value\nâ€¢ gateway_capture_id\nâ€¢ gateway_payer_id\nâ€¢ gateway_payment_id\nâ€¢ payer_account_email_address\r\n18. Verify Braintree Transaction status after some time(around 40 minutes)\r\nExpected Result:\r\nBraintree Transaction status should be \"Settled\"",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to PV\r\n2. Navigate to ticket services and select the order created above > Order view\r\n3. Select Exchange Return Action and 3 tickets\r\n4. Click APPLY ACTION\r\n5. Select target event and lock seats such that there is negative amount in cart\r\n6. Apply delivery method\r\n7. Click on Card on File Icon\r\n8. Select Google Pay Payment and click OK\n\r\n9. Click Accept payment\r\n10. Click Checkout\r\n11. Click on Order Id link\r\n12. Navigate to Payment tab and Verify Payment Details\r\n13. Click Transaction ID link\r\n14. Navigate to Payment tab and Verify Payment Details\r\n15. Verify Logs\r\n16. Verify Braintree Transaction status immediately\r\n17. Verify Card Response table and Payment table\n1. Verify below fields in CARD_RESPONSE Table\nâ€¢ TRUNCATED_PAN \nâ€¢ CARD_RESULT_CODE \nâ€¢ CARD_ACTION_CODE \nâ€¢ GATEWAY_TRANSACTION_ID \n2. Verify below fields in PAYMENT Table\nâ€¢ TRUNCATED_PAN\r\n18. Verify Braintree Transaction status after some time(around 40 minutes)",
        "expected": "1. Login should be successful\r\n2. User should be navigated to order view\r\n3. Tickets should be selected\r\n4. User should be navigated to Exchange Sale page\r\n5. User should be navigated to cart\r\n6. Delivery method should be applied\r\n7. Credit Card-Payment on File pop-up should be displayed with Google Pay Payment \r\n8. Google Pay payment details should be displayed\r\n9. Accept payment should be successful\r\n10. Transaction should be completed successfully\r\n11. User should be navigated to Ticket Services > Order View\r\n12. Google Pay payment details should be displayed correctly as per [C157918]\r\n13. User should be navigated to Ticket Services > Transaction View\r\n14. Google Pay payment details should be displayed correctly as per [C157918]\r\n15. Sample Logs: http://tdcsharepoint.tixx.tickets.com/sites/NA/PDT/SoftwareEng/PVNG/Design Documents/3.4 Functional Designs/PayPal Integration/Braintree SDK request and response log samples.docx\r\n16. Braintree Transaction status should be \"Submitted for Settlement\"\r\n17. â€¢ TRUNCATED_PAN: last four digits of credit card\nâ€¢ CARD_RESULT_CODE: 'OK'\nâ€¢ CARD_ACTION_CODE:'AUTHCAP' for sale transactions and 'REFUND' for refund transactions\nâ€¢ GATEWAY_TRANSACTION_ID: for refund transaction this will be the same as initial sale transactionâ€™s GATEWAY_TRANSACTION_ID column value\nâ€¢ gateway_capture_id\nâ€¢ gateway_payer_id\nâ€¢ gateway_payment_id\nâ€¢ payer_account_email_address\r\n18. Braintree Transaction status should be \"Settled\""
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.0.30"
  },
  {
    "id": 30597403,
    "title": "Verify Event Return / Reverse Utility Run when PayPal / Wallet Refunds  is checked, Credit Card Refund is unchecked and Payment Type is CASH",
    "section_id": 1681345,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PV-25053",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C1850390",
    "custom_preconds": "1. Set Google Pay Merchant and Apple Pay Merchant as Braintree and also set Google Pay and Apple Pay Money Location in Sales AFP at user level\r\n2. Ensure that DEBUG level is enabled for the class com.tickets.integration.adapters.braintree.BraintreeVZeroClient in JMX Console\r\n3. Create an Event\r\n4. Complete multiple sale transactions each with different payment types and a single transaction with multiple payment types for the event created above(All payment with different amount)\r\nOrder1: Credit card\r\nOrder2: Cash\r\nOrder3: PayPal\r\nOrder4: Master Pass\r\nOrder5: Apple Pay - Chase Paymentech\r\nOrder6: Apple Pay - Braintree\r\nOrder7: Google Pay\r\nOrder8: Credit card, Cash, PayPal, Master Pass, Apple Pay - Chase Paymentech, Apple Pay - Braintree, Google Pay\r\n5. Wait till braintree transaction status is Settled for Apple Pay - Braintree, Google Pay and PayPal payments",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to PV\r\nExpected Result:\r\nLogin should be successful\r\n2. Navigate to Utilities > Utilities > Event Return/Reverse\r\nExpected Result:\r\nUser should be navigated to Event Return/Reverse utilities\r\n3. Select Supplier\nSet Target Event as the event created in precondition\nSet Reason Type\nEnter Reason Text\nClick Preview button in PREVIEW panel\r\nExpected Result:\r\nNumber of tickets from all 8 orders created above will be displayed\r\n4. Click on Runtime Options tab\r\nExpected Result:\r\nUser should be navigated to Runtime Options tab\r\n5. 1. Set below fields in PRIMARY MARKET PATRON\n    â€¢ PayPal / Wallet Refunds=Checked\n    â€¢ Credit Card Refund=Unchecked\n    â€¢ Payment Type=Use Payment Method\n    â€¢ Payment Method=CASH    \n2. Set below fields in SECONDARY MARKET PATRON\n    â€¢ Payment Type=Use Payment Method\n    â€¢ Payment Method=CASH\n    â€¢ Reversal Agency\n    â€¢ Reversal User\r\nExpected Result:\r\nAll fields mentioned should be set\r\n6. Click on Run Utility\r\nExpected Result:\r\nUtility should start the run and should be completed successfully\r\n7. Navigate to UTILITY RUN SEARCH page\n\r\nExpected Result:\r\nUTILITY RUN should be displayed with \n# To Process=8\n# Processed=8\n# Errors=0\nStatus=Completed\n\r\n8. Verify Payment details in payment tab for all orders\r\nExpected Result:\r\nâ€¢ Credit card: Refunded via Cash\nâ€¢ Cash: Refunded via Cash\nâ€¢ PayPal: Refunded to initial PayPal payment\nâ€¢ Master Pass: Refunded via Cash\nâ€¢ Apple Pay - Chase Paymentech: Refunded via Cash\nâ€¢ Apple Pay - Braintree: Refunded to initial Apple Pay-Braintree payment\nâ€¢ Google Pay: Refunded to initial Google Pay payment\r\n9. Verify Logs\r\nExpected Result:\r\nSample Logs: http://tdcsharepoint.tixx.tickets.com/sites/NA/PDT/SoftwareEng/PVNG/Design Documents/3.4 Functional Designs/PayPal Integration/Braintree SDK request and response log samples.docx\r\n10. Verify Braintree Transaction status immediately\r\nExpected Result:\r\nBraintree Transaction status should be \"Submitted for Settlement\" for PayPal, Googl Pay and Apple Pay transactions\r\n11. Verify Card Response table and Payment table\n1. Verify below fields in CARD_RESPONSE Table\nâ€¢ TRUNCATED_PAN \nâ€¢ CARD_RESULT_CODE \nâ€¢ CARD_ACTION_CODE \nâ€¢ GATEWAY_TRANSACTION_ID \n2. Verify below fields in PAYMENT Table\nâ€¢ TRUNCATED_PAN\r\nExpected Result:\r\nâ€¢ TRUNCATED_PAN: last four digits of credit card\nâ€¢ CARD_RESULT_CODE: 'OK'\nâ€¢ CARD_ACTION_CODE:'AUTHCAP' for sale transactions and 'REFUND' for refund transactions\nâ€¢ GATEWAY_TRANSACTION_ID: for refund transaction this will be the same as initial sale transactionâ€™s GATEWAY_TRANSACTION_ID column value\nâ€¢ gateway_capture_id\nâ€¢ gateway_payer_id\nâ€¢ gateway_payment_id\nâ€¢ payer_account_email_address\r\n12. Verify Braintree Transaction status after some time(around 40 minutes)\r\nExpected Result:\r\nBraintree Transaction status should be \"Settled\" for PayPal, Googl Pay and Apple Pay transactions",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to PV\r\n2. Navigate to Utilities > Utilities > Event Return/Reverse\r\n3. Select Supplier\nSet Target Event as the event created in precondition\nSet Reason Type\nEnter Reason Text\nClick Preview button in PREVIEW panel\r\n4. Click on Runtime Options tab\r\n5. 1. Set below fields in PRIMARY MARKET PATRON\n    â€¢ PayPal / Wallet Refunds=Checked\n    â€¢ Credit Card Refund=Unchecked\n    â€¢ Payment Type=Use Payment Method\n    â€¢ Payment Method=CASH    \n2. Set below fields in SECONDARY MARKET PATRON\n    â€¢ Payment Type=Use Payment Method\n    â€¢ Payment Method=CASH\n    â€¢ Reversal Agency\n    â€¢ Reversal User\r\n6. Click on Run Utility\r\n7. Navigate to UTILITY RUN SEARCH page\n\r\n8. Verify Payment details in payment tab for all orders\r\n9. Verify Logs\r\n10. Verify Braintree Transaction status immediately\r\n11. Verify Card Response table and Payment table\n1. Verify below fields in CARD_RESPONSE Table\nâ€¢ TRUNCATED_PAN \nâ€¢ CARD_RESULT_CODE \nâ€¢ CARD_ACTION_CODE \nâ€¢ GATEWAY_TRANSACTION_ID \n2. Verify below fields in PAYMENT Table\nâ€¢ TRUNCATED_PAN\r\n12. Verify Braintree Transaction status after some time(around 40 minutes)",
        "expected": "1. Login should be successful\r\n2. User should be navigated to Event Return/Reverse utilities\r\n3. Number of tickets from all 8 orders created above will be displayed\r\n4. User should be navigated to Runtime Options tab\r\n5. All fields mentioned should be set\r\n6. Utility should start the run and should be completed successfully\r\n7. UTILITY RUN should be displayed with \n# To Process=8\n# Processed=8\n# Errors=0\nStatus=Completed\n\r\n8. â€¢ Credit card: Refunded via Cash\nâ€¢ Cash: Refunded via Cash\nâ€¢ PayPal: Refunded to initial PayPal payment\nâ€¢ Master Pass: Refunded via Cash\nâ€¢ Apple Pay - Chase Paymentech: Refunded via Cash\nâ€¢ Apple Pay - Braintree: Refunded to initial Apple Pay-Braintree payment\nâ€¢ Google Pay: Refunded to initial Google Pay payment\r\n9. Sample Logs: http://tdcsharepoint.tixx.tickets.com/sites/NA/PDT/SoftwareEng/PVNG/Design Documents/3.4 Functional Designs/PayPal Integration/Braintree SDK request and response log samples.docx\r\n10. Braintree Transaction status should be \"Submitted for Settlement\" for PayPal, Googl Pay and Apple Pay transactions\r\n11. â€¢ TRUNCATED_PAN: last four digits of credit card\nâ€¢ CARD_RESULT_CODE: 'OK'\nâ€¢ CARD_ACTION_CODE:'AUTHCAP' for sale transactions and 'REFUND' for refund transactions\nâ€¢ GATEWAY_TRANSACTION_ID: for refund transaction this will be the same as initial sale transactionâ€™s GATEWAY_TRANSACTION_ID column value\nâ€¢ gateway_capture_id\nâ€¢ gateway_payer_id\nâ€¢ gateway_payment_id\nâ€¢ payer_account_email_address\r\n12. Braintree Transaction status should be \"Settled\" for PayPal, Googl Pay and Apple Pay transactions"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.0.30"
  },
  {
    "id": 30597404,
    "title": "Complete a sale when the promotion eligibility is All and coupon code is defined for Offer code protected sales group and sales group Id deep linked",
    "section_id": 1681346,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "MPV-9239",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": "C1850391",
    "custom_preconds": "Sales group should be set up as Offer Code protected in PV \r\nPromotion eligibility should be All and coupon code should be available for promotion\r\nCC Setting for Sales group should be ON in MPV Control Center",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch deep link URL with corresponding salesGroupId\r\nExpected Result:\r\nVerify Get Sales group API for the above sales group should be called \n\r\n2. Enter the offer Code\n\r\nExpected Result:\r\nThe target schedule page with multiple events should be displayed\r\n3. Select the target event\r\nExpected Result:\r\nAvailability page should be displayed\r\n4. Verify that coupon code UI is suppressed and not not taken in to consideration\r\nExpected Result:\r\nThe coupon code should not be taken in to consideration\r\n5. Lock Seats for the promotional buyer type\r\nExpected Result:\r\nThe Seats should be locked successfully\r\n6. Complete a sale transaction\r\nExpected Result:\r\nThe sale transaction should be completed successfully",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch deep link URL with corresponding salesGroupId\r\n2. Enter the offer Code\n\r\n3. Select the target event\r\n4. Verify that coupon code UI is suppressed and not not taken in to consideration\r\n5. Lock Seats for the promotional buyer type\r\n6. Complete a sale transaction",
        "expected": "1. Verify Get Sales group API for the above sales group should be called \n\r\n2. The target schedule page with multiple events should be displayed\r\n3. Availability page should be displayed\r\n4. The coupon code should not be taken in to consideration\r\n5. The Seats should be locked successfully\r\n6. The sale transaction should be completed successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30597405,
    "title": "Complete a sale for Offer code protected sales group_Package",
    "section_id": 1681346,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "MPV-9239",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": "C1850392",
    "custom_preconds": "Sales group should be set up as offer code protected in PV \r\nPackage should be associated to a promotion and promotion should be associated to sales group\r\nCC Setting for Sales group should be ON in MPV Control Center",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the schedule page\nSelect the sales group\r\nExpected Result:\r\nVerify the details of sales group is displayed if the patron is logged in\nNote: If the Patron is not logged in, login page should be displayed and then after login and sales group details should be displayed\r\n2. Verify the details of sales group is displayed\r\nExpected Result:\r\nThe sales group page should be displayed as mentioned in PRD\r\n3. Verify the count of events in the sales group\r\nExpected Result:\r\nThe count of event should be correct\r\n4. Click on the sales group\nOffer code Page should be displayed\n\r\nExpected Result:\r\nEnter the offer code \nThe target schedule page with multiple events and packages should be displayed\r\n5. Select the Package\r\nExpected Result:\r\nAvailability page should be displayed\r\n6. Verify that buyer types related to that sales group's promotion is displayed\r\nExpected Result:\r\nBuyer types related to that sales group's promotion should be displayed\r\n7. Lock Seats for the promotional buyer type\r\nExpected Result:\r\nThe Seats should be locked successfully\r\n8. Complete a sale transaction\r\nExpected Result:\r\nThe sale transaction should be completed successfully",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the schedule page\nSelect the sales group\r\n2. Verify the details of sales group is displayed\r\n3. Verify the count of events in the sales group\r\n4. Click on the sales group\nOffer code Page should be displayed\n\r\n5. Select the Package\r\n6. Verify that buyer types related to that sales group's promotion is displayed\r\n7. Lock Seats for the promotional buyer type\r\n8. Complete a sale transaction",
        "expected": "1. Verify the details of sales group is displayed if the patron is logged in\nNote: If the Patron is not logged in, login page should be displayed and then after login and sales group details should be displayed\r\n2. The sales group page should be displayed as mentioned in PRD\r\n3. The count of event should be correct\r\n4. Enter the offer code \nThe target schedule page with multiple events and packages should be displayed\r\n5. Availability page should be displayed\r\n6. Buyer types related to that sales group's promotion should be displayed\r\n7. The Seats should be locked successfully\r\n8. The sale transaction should be completed successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30597406,
    "title": "Complete a sale for Sales Group_All_Package",
    "section_id": 1681346,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "MPV-9239",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 3,
    "custom_is_automated": true,
    "custom_pv_category": 2,
    "custom_refs": "C1850393",
    "custom_preconds": "Sales group should be set up as offer code protected in PV \r\nPackage should be associated to a promotion and promotion should be associated to sales group\r\nCC Setting for Sales group should be ON in MPV Control Center",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the sales group with deep link as salesGroupType=ALL\n\r\nExpected Result:\r\nVerify the details of sales group is displayed if the patron is logged in\nNote: If the Patron is not logged in, login page should be displayed and then after login and sales group details should be displayed\r\n2. Select the sale group \r\nExpected Result:\r\nThe sales group page should be displayed as mentioned in PRD\r\n3. Click on the sales group\nOffer code Page should be displayed\n\r\nExpected Result:\r\nEnter the offer code \nThe target schedule page with multiple events and packages should be displayed\r\n4. Select the Package\r\nExpected Result:\r\nAvailability page should be displayed\r\n5. Verify that buyer types related to that sales group's promotion is displayed\r\nExpected Result:\r\nBuyer types related to that sales group's promotion should be displayed\r\n6. Lock Seats for the promotional buyer type\r\nExpected Result:\r\nThe Seats should be locked successfully\r\n7. Complete a sale transaction\r\nExpected Result:\r\nThe sale transaction should be completed successfully",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the sales group with deep link as salesGroupType=ALL\n\r\n2. Select the sale group \r\n3. Click on the sales group\nOffer code Page should be displayed\n\r\n4. Select the Package\r\n5. Verify that buyer types related to that sales group's promotion is displayed\r\n6. Lock Seats for the promotional buyer type\r\n7. Complete a sale transaction",
        "expected": "1. Verify the details of sales group is displayed if the patron is logged in\nNote: If the Patron is not logged in, login page should be displayed and then after login and sales group details should be displayed\r\n2. The sales group page should be displayed as mentioned in PRD\r\n3. Enter the offer code \nThe target schedule page with multiple events and packages should be displayed\r\n4. Availability page should be displayed\r\n5. Buyer types related to that sales group's promotion should be displayed\r\n6. The Seats should be locked successfully\r\n7. The sale transaction should be completed successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30597407,
    "title": "Complete a sale for Sales Group_All_Event",
    "section_id": 1681346,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "MPV-9239",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": "C1850394",
    "custom_preconds": "Sales group should be set up as offer code protected in PV \r\nEvrnt should be associated to a promotion and promotion should be associated to sales group\r\nCC Setting for Sales group should be ON in MPV Control Center",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the sales group with deep link as salesGroupType=ALL\n\r\nExpected Result:\r\nVerify the details of sales group is displayed if the patron is logged in\nNote: If the Patron is not logged in, login page should be displayed and then after login and sales group details should be displayed\r\n2. Select the sale group \r\nExpected Result:\r\nThe sales group page should be displayed as mentioned in PRD\r\n3. Click on the sales group\nOffer code Page should be displayed\n\r\nExpected Result:\r\nEnter the offer code \nThe target schedule page with multiple events and packages should be displayed\r\n4. Select the Event\r\nExpected Result:\r\nAvailability page should be displayed\r\n5. Verify that buyer types related to that sales group's promotion is displayed\r\nExpected Result:\r\nBuyer types related to that sales group's promotion should be displayed\r\n6. Lock Seats for the promotional buyer type\r\nExpected Result:\r\nThe Seats should be locked successfully\r\n7. Complete a sale transaction\r\nExpected Result:\r\nThe sale transaction should be completed successfully",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the sales group with deep link as salesGroupType=ALL\n\r\n2. Select the sale group \r\n3. Click on the sales group\nOffer code Page should be displayed\n\r\n4. Select the Event\r\n5. Verify that buyer types related to that sales group's promotion is displayed\r\n6. Lock Seats for the promotional buyer type\r\n7. Complete a sale transaction",
        "expected": "1. Verify the details of sales group is displayed if the patron is logged in\nNote: If the Patron is not logged in, login page should be displayed and then after login and sales group details should be displayed\r\n2. The sales group page should be displayed as mentioned in PRD\r\n3. Enter the offer code \nThe target schedule page with multiple events and packages should be displayed\r\n4. Availability page should be displayed\r\n5. Buyer types related to that sales group's promotion should be displayed\r\n6. The Seats should be locked successfully\r\n7. The sale transaction should be completed successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30597408,
    "title": "Create a reservation transaction from PV",
    "section_id": 1681347,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-9460",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 18,
    "custom_refs": "C1850397",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1. Login as bouser1\n2. Click on the Ticket Sale Link on the home page\r\nExpected Result:\r\nLogin should be successful\r\n2. 1. Select Event  Radio button\r\n2. Type the Description Code\r\n3. Click Find Button\r\nExpected Result:\r\nSystem should display the list of Events  available in theSearch Result portlet\r\n3. 1. Click on the Ticket icon in the Sell column in the Event Search Result grid\r\n2. Enter the number of tickets \r\n3. Select Buyer Type\r\n4. Click Best Available button\r\nExpected Result:\r\nEvent Selected should be listed in the My Events portlet and user should able to view the Patron Cart with following information displayed:\r\nOffer number,Number of Tickets'Buyer Types,Section ,Row ,QTY.\r\n4. 1. Click on the 'Reservation' link above the Subtotal in the Offer details\r\n2.Edit/update the 'Reserve until' date and time to change the date/time default that is persisted from the Supplier and Event reservation release dates.\r\n3. Select the 'Reservation code' from the drop-down\r\n4. click Set  To Reservation\r\nExpected Result:\r\nThe offer should be marked as **Reserved**  and Offer Details should  have 'Reserved until date/time' displayed.\r\n5. 1. Type * in the Patron Portlet on the Ticket Sale Screen\n2. Click Find button\n3. Select a Patron by clicking on the \"+\" icon\r\nExpected Result:\r\nThe user should able to select an patron for the reserved seats\r\n6. 1. Click on the Check out button\r\n2. View Confirmation number\r\nExpected Result:\r\nSystem should display the Transaction Confirmation Number .",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Login as bouser1\n2. Click on the Ticket Sale Link on the home page\r\n2. 1. Select Event  Radio button\r\n2. Type the Description Code\r\n3. Click Find Button\r\n3. 1. Click on the Ticket icon in the Sell column in the Event Search Result grid\r\n2. Enter the number of tickets \r\n3. Select Buyer Type\r\n4. Click Best Available button\r\n4. 1. Click on the 'Reservation' link above the Subtotal in the Offer details\r\n2.Edit/update the 'Reserve until' date and time to change the date/time default that is persisted from the Supplier and Event reservation release dates.\r\n3. Select the 'Reservation code' from the drop-down\r\n4. click Set  To Reservation\r\n5. 1. Type * in the Patron Portlet on the Ticket Sale Screen\n2. Click Find button\n3. Select a Patron by clicking on the \"+\" icon\r\n6. 1. Click on the Check out button\r\n2. View Confirmation number",
        "expected": "1. Login should be successful\r\n2. System should display the list of Events  available in theSearch Result portlet\r\n3. Event Selected should be listed in the My Events portlet and user should able to view the Patron Cart with following information displayed:\r\nOffer number,Number of Tickets'Buyer Types,Section ,Row ,QTY.\r\n4. The offer should be marked as **Reserved**  and Offer Details should  have 'Reserved until date/time' displayed.\r\n5. The user should able to select an patron for the reserved seats\r\n6. System should display the Transaction Confirmation Number ."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "52.2"
  },
  {
    "id": 30597409,
    "title": "Set Up for Multiple Payment plans",
    "section_id": 1681347,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-9497",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 18,
    "custom_refs": "C1850398",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1. Create an package with events in PV\r\n2. Note down the performance id.\r\n2. Site should be launched\r\n3. Login to Maintenance Site using the following credentials:\nUsername: \nPassword: \r\nExpected Result:\r\nUser should be logged in\r\n4. 1. Click on the + icon corresponding to Supplier Related\n2. Click on Supplier\r\nExpected Result:\r\nUser should be navigated to the supplier maintenance page\r\n5. 1. Input the MyTickets Supplier Code in the supplier code textbox\n2. Click on Edit button\r\nExpected Result:\r\nUser should be navigated to the supplier details page\r\n6. Click on the Edit button corresponding to Supplier Text\r\nExpected Result:\r\nUser should be navigated to the supplier text page\r\n7. 1. Set the MTUSNGP to false \r\n2. Set the DMPPLAN to true\r\nExpected Result:\r\nThe textcode should be set\r\n8. 1. Set the ADPD to \"I agree to allow installment payments to process automatically against the credit card is supplied for renewal payments\"\r\n2. Set the ADPO to\"Your credit card will be auto debited for each payment\"\r\nExpected Result:\r\nThe textcode should be set\r\n9. Click Browsers back button to navigate back to the Edit Details page of the supplier\r\nExpected Result:\r\nUser should be navigated to the Edit details page of the Supplier\r\n10. 1. Select the checkbox corresponding to Web Servers\n2. Click on PURGE button\r\nExpected Result:\r\nUser should be navigated to the PVO Purge Cache Results  page\r\n11. Click on the + icon corresponding to Operations and click on \"Run Pokemon Perf Accept\" link\r\nExpected Result:\r\nUser should be navigated to the Pokemon Perf Accept Page\r\n12. 1. Select valid Supplier|SubAgency  from the \"Existing Supplier Sub Agency List\"\nSupplier|Supplier_Sub_Agency: \n2. Click on the >> button\n3. Input the event code noted down as the Supplier Perf Code\n4. Click on Run Perf Accept For Entered Data\r\nExpected Result:\r\n1. The perf should be accepted.\n2. Perf Acceptance details page should be displayed to the user\r\n13. Note down the perf id\r\nExpected Result:\r\nThe Perf ID of the event should be noted down\r\n14. 1. Click on the + icon corresponding to Supplier Related\n2. Click on Supplier\r\nExpected Result:\r\nUser should be navigated to the Supplier Maintenance Page\r\n15. Input the supplier code\nSupplier Code: \n and click on Edit button\r\nExpected Result:\r\nUser should be navigated to the details page of the supplier\r\n16. Click on the Edit button corresponding to Payment Plans\r\nExpected Result:\r\nUser should be navigated to the \"Season Renewal Payment Plans Edit\"\r\n17. If multiple payment plans are to be associated to a performance then the option \"Can Pay in Full\" should be false\r\nAuto Debit\r\nPartial Payment : True \r\nDiscounted      : True/False  \r\nIs Percentage   : True/False  \r\nPercentage      : 0.5    \r\nActual Amount   : 0     \r\nApplicable to payment:    No restrictions \r\nPerformance PG code required?:    False  \r\nIs applied per Ticket?:    True/False \r\nApplies To Renewals?:    True \r\nApplies To Sales?:    True/False \r\nCan Pay in Full?:    False  \r\nCan Pay Flexible Amount?:    False  \r\nMinimum Percentage Allowed: 0.5    \r\nMinimum Payment Allowed:     \r\nCan Have Auto Payments?:    On \r\nPAYAACRT:    use supplier value  \r\nPAYNETCR:    use supplier value   \r\nPAYNETPP:    use supplier value\r\nFlexible payment plan\r\nPartial Payment : True \r\nDiscounted      : True/False  \r\nIs Percentage   : True/False  \r\nPercentage      : 0.5    \r\nActual Amount   : 0     \r\nApplicable to payment:    No restrictions \r\nPerformance PG code required?:    False  \r\nIs applied per Ticket?:    True/False \r\nApplies To Renewals?:    True \r\nApplies To Sales?:    True/False \r\nCan Pay in Full?:    False  \r\nCan Pay Flexible Amount?:    Yes  \r\nMinimum Percentage Allowed: 0.5    \r\nMinimum Payment Allowed:     \r\nCan Have Auto Payments?:    On/Off/Optional \r\nPAYAACRT:    use supplier value  \r\nPAYNETCR:    use supplier value   \r\nPAYNETPP:    use supplier value\r\nFull payment plan\r\nPartial Payment : False \r\nDiscounted      : False  \r\nIs Percentage   :False  \r\nPercentage      : 1    \r\nActual Amount   : 0     \r\nApplicable to payment:    No restrictions \r\nPerformance PG code required?:    False  \r\nIs applied per Ticket?:    True/False \r\nApplies To Renewals?:    True \r\nApplies To Sales?:    True/False \r\nCan Pay in Full?:    False  \r\nCan Pay Flexible Amount?:    Yes  \r\nMinimum Percentage Allowed: 1\r\nMinimum Payment Allowed:     \r\nCan Have Auto Payments?:    On/Off/Optional \r\nPAYAACRT:    use supplier value  \r\nPAYNETCR:    use supplier value   \r\nPAYNETPP:    use supplier value\r\nIf a pay in full payment plan is desired, then simply set that up as a new payment plan with one payment of 100%.   \r\nMultiple Installment payment plan\r\nPartial Payment : True \r\nDiscounted      : True/False  \r\nIs Percentage   : True/False  \r\nPercentage      : Decided by # of instalments \r\nActual Amount   : 0     \r\nApplicable to payment:    No restrictions \r\nPerformance PG code required?:    False  \r\nIs applied per Ticket?:    True/False \r\nApplies To Renewals?:    True \r\nApplies To Sales?:    True/False \r\nCan Pay in Full?:    False  \r\nCan Pay Flexible Amount?:    Yes  \r\nMinimum Percentage Allowed:  Decided by # of instalments \r\nMinimum Payment Allowed:     \r\nCan Have Auto Payments?:    On/Off/Optional \r\nPAYAACRT:    use supplier value  \r\nPAYNETCR:    use supplier value   \r\nPAYNETPP:    use supplier value\r\nExpected Result:\r\nDesired payment plans should be set up with Pay in Full as False\r\n18. 1. Input the perf ID in the PerfId textbox and click on Add Perf button\n2. Click on Update button\r\nExpected Result:\r\nThe Perf should be added\r\n19. 1. Select the Perf ID in the Perfs list\n2. Click on Edit Payments for Perf\r\nExpected Result:\r\nUser should be navigated to the Payment Plan Perf Xref Payment Edit Page\r\n20. 1. Click on Add Blank Installment\r\n2. Input Due Date as a future date\r\n2. Input Can Pay Untill Date as a future date than due date\r\n3. Input the Email Reminder on date\r\n4. Input the Total Percentage Due:\r\nEg: for 50% plan, put the total percentage as 0.5 for the first installment and for the second installment put the total percentage as 1\r\n5. Click on Save Installments button\r\nIf a pay in full payment plan is desired, then simply set that up as a new payment plan with one payment of 100%.\r\nExpected Result:\r\nThe installments should be saved\r\n21. Click on Back to Payment Plans button\r\nExpected Result:\r\nUser should be navigated to the Season Renewal Payment Plans Edit\r\n22. Click on Logout link\r\nExpected Result:\r\nUser should be logged out",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Create an package with events in PV\r\n2. Note down the performance id.\r\n2. \r\n3. Login to Maintenance Site using the following credentials:\nUsername: \nPassword: \r\n4. 1. Click on the + icon corresponding to Supplier Related\n2. Click on Supplier\r\n5. 1. Input the MyTickets Supplier Code in the supplier code textbox\n2. Click on Edit button\r\n6. Click on the Edit button corresponding to Supplier Text\r\n7. 1. Set the MTUSNGP to false \r\n2. Set the DMPPLAN to true\r\n8. 1. Set the ADPD to \"I agree to allow installment payments to process automatically against the credit card is supplied for renewal payments\"\r\n2. Set the ADPO to\"Your credit card will be auto debited for each payment\"\r\n9. Click Browsers back button to navigate back to the Edit Details page of the supplier\r\n10. 1. Select the checkbox corresponding to Web Servers\n2. Click on PURGE button\r\n11. Click on the + icon corresponding to Operations and click on \"Run Pokemon Perf Accept\" link\r\n12. 1. Select valid Supplier|SubAgency  from the \"Existing Supplier Sub Agency List\"\nSupplier|Supplier_Sub_Agency: \n2. Click on the >> button\n3. Input the event code noted down as the Supplier Perf Code\n4. Click on Run Perf Accept For Entered Data\r\n13. Note down the perf id\r\n14. 1. Click on the + icon corresponding to Supplier Related\n2. Click on Supplier\r\n15. Input the supplier code\nSupplier Code: \n and click on Edit button\r\n16. Click on the Edit button corresponding to Payment Plans\r\n17. If multiple payment plans are to be associated to a performance then the option \"Can Pay in Full\" should be false\r\nAuto Debit\r\nPartial Payment : True \r\nDiscounted      : True/False  \r\nIs Percentage   : True/False  \r\nPercentage      : 0.5    \r\nActual Amount   : 0     \r\nApplicable to payment:    No restrictions \r\nPerformance PG code required?:    False  \r\nIs applied per Ticket?:    True/False \r\nApplies To Renewals?:    True \r\nApplies To Sales?:    True/False \r\nCan Pay in Full?:    False  \r\nCan Pay Flexible Amount?:    False  \r\nMinimum Percentage Allowed: 0.5    \r\nMinimum Payment Allowed:     \r\nCan Have Auto Payments?:    On \r\nPAYAACRT:    use supplier value  \r\nPAYNETCR:    use supplier value   \r\nPAYNETPP:    use supplier value\r\nFlexible payment plan\r\nPartial Payment : True \r\nDiscounted      : True/False  \r\nIs Percentage   : True/False  \r\nPercentage      : 0.5    \r\nActual Amount   : 0     \r\nApplicable to payment:    No restrictions \r\nPerformance PG code required?:    False  \r\nIs applied per Ticket?:    True/False \r\nApplies To Renewals?:    True \r\nApplies To Sales?:    True/False \r\nCan Pay in Full?:    False  \r\nCan Pay Flexible Amount?:    Yes  \r\nMinimum Percentage Allowed: 0.5    \r\nMinimum Payment Allowed:     \r\nCan Have Auto Payments?:    On/Off/Optional \r\nPAYAACRT:    use supplier value  \r\nPAYNETCR:    use supplier value   \r\nPAYNETPP:    use supplier value\r\nFull payment plan\r\nPartial Payment : False \r\nDiscounted      : False  \r\nIs Percentage   :False  \r\nPercentage      : 1    \r\nActual Amount   : 0     \r\nApplicable to payment:    No restrictions \r\nPerformance PG code required?:    False  \r\nIs applied per Ticket?:    True/False \r\nApplies To Renewals?:    True \r\nApplies To Sales?:    True/False \r\nCan Pay in Full?:    False  \r\nCan Pay Flexible Amount?:    Yes  \r\nMinimum Percentage Allowed: 1\r\nMinimum Payment Allowed:     \r\nCan Have Auto Payments?:    On/Off/Optional \r\nPAYAACRT:    use supplier value  \r\nPAYNETCR:    use supplier value   \r\nPAYNETPP:    use supplier value\r\nIf a pay in full payment plan is desired, then simply set that up as a new payment plan with one payment of 100%.   \r\nMultiple Installment payment plan\r\nPartial Payment : True \r\nDiscounted      : True/False  \r\nIs Percentage   : True/False  \r\nPercentage      : Decided by # of instalments \r\nActual Amount   : 0     \r\nApplicable to payment:    No restrictions \r\nPerformance PG code required?:    False  \r\nIs applied per Ticket?:    True/False \r\nApplies To Renewals?:    True \r\nApplies To Sales?:    True/False \r\nCan Pay in Full?:    False  \r\nCan Pay Flexible Amount?:    Yes  \r\nMinimum Percentage Allowed:  Decided by # of instalments \r\nMinimum Payment Allowed:     \r\nCan Have Auto Payments?:    On/Off/Optional \r\nPAYAACRT:    use supplier value  \r\nPAYNETCR:    use supplier value   \r\nPAYNETPP:    use supplier value\r\n18. 1. Input the perf ID in the PerfId textbox and click on Add Perf button\n2. Click on Update button\r\n19. 1. Select the Perf ID in the Perfs list\n2. Click on Edit Payments for Perf\r\n20. 1. Click on Add Blank Installment\r\n2. Input Due Date as a future date\r\n2. Input Can Pay Untill Date as a future date than due date\r\n3. Input the Email Reminder on date\r\n4. Input the Total Percentage Due:\r\nEg: for 50% plan, put the total percentage as 0.5 for the first installment and for the second installment put the total percentage as 1\r\n5. Click on Save Installments button\r\nIf a pay in full payment plan is desired, then simply set that up as a new payment plan with one payment of 100%.\r\n21. Click on Back to Payment Plans button\r\n22. Click on Logout link",
        "expected": "1. \r\n2. Site should be launched\r\n3. User should be logged in\r\n4. User should be navigated to the supplier maintenance page\r\n5. User should be navigated to the supplier details page\r\n6. User should be navigated to the supplier text page\r\n7. The textcode should be set\r\n8. The textcode should be set\r\n9. User should be navigated to the Edit details page of the Supplier\r\n10. User should be navigated to the PVO Purge Cache Results  page\r\n11. User should be navigated to the Pokemon Perf Accept Page\r\n12. 1. The perf should be accepted.\n2. Perf Acceptance details page should be displayed to the user\r\n13. The Perf ID of the event should be noted down\r\n14. User should be navigated to the Supplier Maintenance Page\r\n15. User should be navigated to the details page of the supplier\r\n16. User should be navigated to the \"Season Renewal Payment Plans Edit\"\r\n17. Desired payment plans should be set up with Pay in Full as False\r\n18. The Perf should be added\r\n19. User should be navigated to the Payment Plan Perf Xref Payment Edit Page\r\n20. The installments should be saved\r\n21. User should be navigated to the Season Renewal Payment Plans Edit\r\n22. User should be logged out"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "52.3"
  },
  {
    "id": 30597410,
    "title": "Verify that auto-renewal order without scheduled payments are returned in Get Renewal Order response with only the currently associated payment plan as an option.",
    "section_id": 1681348,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PV-24451",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C1850399",
    "custom_preconds": "1. Create a patron\r\n2. Insert few credit card DWI and a bank account DWI\r\n3. Set one credit card DWI as default\r\n4. Create a auto renewal payment plan\r\n5. Create a source package and associate the auto renewal payment plan and set Renewable and Auto-Renewal as true\r\n6. Create a target package with new season and associate the auto renewal payment plan and set Renewable and Auto-Renewal as true\r\n7. Complete few receivable transactions of source package for the patron with auto renewal payment plan\r\n8. Set default=false for all DWI",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to PV\r\nExpected Result:\r\nLogin should be successful\r\n2. Navigate to Utilities > Rollover\r\nExpected Result:\r\nUser should be navigated to Rollover Utility\r\n3. Create a Rollover Group\r\nExpected Result:\r\nRollover Group should be created successfully\r\n4. Create a rollover configuration with the source and target package set above.\n  â€¢ Transaction Type = Sale\nTARGET PACKAGE \n  â€¢ Default Payment Plan = Auto Renewal Payment Plan created in preconditions\n  â€¢ Create Auto-Renew Scheduled Payments = true\nSource Configuration\n  â€¢ Auto-Renewing Source = true\r\nExpected Result:\r\nRollover Configuration should be created successfully\r\n5. Validate the Rollover Configuration\r\nExpected Result:\r\nRollover Configuration should be validated successfully\r\n6. Navigate to Rollover Process and Search Rollover Configuration\r\nExpected Result:\r\nRollover Process should be listed\r\n7. Validate the Process\r\nExpected Result:\r\nRollover Process should be validated successfully\r\n8. Run the process\r\nExpected Result:\r\nRollover Process should be completed successfully\r\n9. Verify the new orders created for the patron\r\nExpected Result:\r\nReceivable order should be created with auto-renewal payment plan and no scheduled payments\r\n10. Login to Mytickets with the patron\r\nExpected Result:\r\nLogin should be successful and user land on To Do List page without any error\r\n11. Verify GetRenewalOrders call in splunk\r\nExpected Result:\r\nAuto-renewal order without scheduled payments should be returned in Get Renewal Order response with only the currently associated payment plan as an option.\r\n12. Verify the new orders created during rollover in Pending Renewals/Payments tab\r\nExpected Result:\r\nNew order created should be displayed in Pending Renewals/Payments tab under Renewable Orders with only only the currently associated payment plan as an option",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to PV\r\n2. Navigate to Utilities > Rollover\r\n3. Create a Rollover Group\r\n4. Create a rollover configuration with the source and target package set above.\n  â€¢ Transaction Type = Sale\nTARGET PACKAGE \n  â€¢ Default Payment Plan = Auto Renewal Payment Plan created in preconditions\n  â€¢ Create Auto-Renew Scheduled Payments = true\nSource Configuration\n  â€¢ Auto-Renewing Source = true\r\n5. Validate the Rollover Configuration\r\n6. Navigate to Rollover Process and Search Rollover Configuration\r\n7. Validate the Process\r\n8. Run the process\r\n9. Verify the new orders created for the patron\r\n10. Login to Mytickets with the patron\r\n11. Verify GetRenewalOrders call in splunk\r\n12. Verify the new orders created during rollover in Pending Renewals/Payments tab",
        "expected": "1. Login should be successful\r\n2. User should be navigated to Rollover Utility\r\n3. Rollover Group should be created successfully\r\n4. Rollover Configuration should be created successfully\r\n5. Rollover Configuration should be validated successfully\r\n6. Rollover Process should be listed\r\n7. Rollover Process should be validated successfully\r\n8. Rollover Process should be completed successfully\r\n9. Receivable order should be created with auto-renewal payment plan and no scheduled payments\r\n10. Login should be successful and user land on To Do List page without any error\r\n11. Auto-renewal order without scheduled payments should be returned in Get Renewal Order response with only the currently associated payment plan as an option.\r\n12. New order created should be displayed in Pending Renewals/Payments tab under Renewable Orders with only only the currently associated payment plan as an option"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.0.60"
  },
  {
    "id": 30597411,
    "title": "Verify PVO will enforce having at least one digital wallet item specified as a â€œdefault.â€� during renewal flow of auto-renewal order without scheduled payments",
    "section_id": 1681348,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PV-24451",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C1850400",
    "custom_preconds": "1. Create a patron\r\n2. Insert few credit card DWI and a bank account DWI\r\n3. Set one credit card DWI as default\r\n4. Create a auto renewal payment plan\r\n5. Create a source package and associate the auto renewal payment plan and set Renewable and Auto-Renewal as true\r\n6. Create a target package with new season and associate the auto renewal payment plan and set Renewable and Auto-Renewal as true\r\n7. Complete few receivable transactions of source package for the patron with auto renewal payment plan\r\n8. Set default=false for all DWI",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to PV\r\nExpected Result:\r\nLogin should be successful\r\n2. Navigate to Utilities > Rollover\r\nExpected Result:\r\nUser should be navigated to Rollover Utility\r\n3. Create a Rollover Group\r\nExpected Result:\r\nRollover Group should be created successfully\r\n4. Create a rollover configuration with the source and target package set above.\n  â€¢ Transaction Type = Sale\nTARGET PACKAGE \n  â€¢ Default Payment Plan = Auto Renewal Payment Plan created in preconditions\n  â€¢ Create Auto-Renew Scheduled Payments = true\nSource Configuration\n  â€¢ Auto-Renewing Source = true\r\nExpected Result:\r\nRollover Configuration should be created successfully\r\n5. Validate the Rollover Configuration\r\nExpected Result:\r\nRollover Configuration should be validated successfully\r\n6. Navigate to Rollover Process and Search Rollover Configuration\r\nExpected Result:\r\nRollover Process should be listed\r\n7. Validate the Process\r\nExpected Result:\r\nRollover Process should be validated successfully\r\n8. Run the process\r\nExpected Result:\r\nRollover Process should be completed successfully\r\n9. Verify the new orders created for the patron\r\nExpected Result:\r\nReceivable order should be created with auto-renewal payment plan and no scheduled payments\r\n10. Login to Mytickets with the patron\r\nExpected Result:\r\nLogin should be successful and user land on To Do List page without any error\r\n11. Verify GetRenewalOrders call in splunk\r\nExpected Result:\r\nAuto-renewal order without scheduled payments should be returned in Get Renewal Order response with only the currently associated payment plan as an option.\r\n12. Verify the new orders created during rollover in Pending Renewals/Payments tab\r\nExpected Result:\r\nNew order created should be displayed in Pending Renewals/Payments tab under Renewable Orders with only only the currently associated payment plan as an option\r\n13. Select an order and click Renew\r\nExpected Result:\r\nVerify valid error message indicating default DWI not set should be displayed\r\n14. Set default=true for one credit card DWI and repeat steps 10 to 13 and complete the renewal flow\r\nExpected Result:\r\nUser should be able to complete renewal flow successfully \r\n15. Set default=true for bank account  DWI and repeat steps 10 to 13 and complete the renewal flow\r\nExpected Result:\r\nUser should be able to complete renewal flow successfully",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to PV\r\n2. Navigate to Utilities > Rollover\r\n3. Create a Rollover Group\r\n4. Create a rollover configuration with the source and target package set above.\n  â€¢ Transaction Type = Sale\nTARGET PACKAGE \n  â€¢ Default Payment Plan = Auto Renewal Payment Plan created in preconditions\n  â€¢ Create Auto-Renew Scheduled Payments = true\nSource Configuration\n  â€¢ Auto-Renewing Source = true\r\n5. Validate the Rollover Configuration\r\n6. Navigate to Rollover Process and Search Rollover Configuration\r\n7. Validate the Process\r\n8. Run the process\r\n9. Verify the new orders created for the patron\r\n10. Login to Mytickets with the patron\r\n11. Verify GetRenewalOrders call in splunk\r\n12. Verify the new orders created during rollover in Pending Renewals/Payments tab\r\n13. Select an order and click Renew\r\n14. Set default=true for one credit card DWI and repeat steps 10 to 13 and complete the renewal flow\r\n15. Set default=true for bank account  DWI and repeat steps 10 to 13 and complete the renewal flow",
        "expected": "1. Login should be successful\r\n2. User should be navigated to Rollover Utility\r\n3. Rollover Group should be created successfully\r\n4. Rollover Configuration should be created successfully\r\n5. Rollover Configuration should be validated successfully\r\n6. Rollover Process should be listed\r\n7. Rollover Process should be validated successfully\r\n8. Rollover Process should be completed successfully\r\n9. Receivable order should be created with auto-renewal payment plan and no scheduled payments\r\n10. Login should be successful and user land on To Do List page without any error\r\n11. Auto-renewal order without scheduled payments should be returned in Get Renewal Order response with only the currently associated payment plan as an option.\r\n12. New order created should be displayed in Pending Renewals/Payments tab under Renewable Orders with only only the currently associated payment plan as an option\r\n13. Verify valid error message indicating default DWI not set should be displayed\r\n14. User should be able to complete renewal flow successfully \r\n15. User should be able to complete renewal flow successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.0.60"
  },
  {
    "id": 30597412,
    "title": "Verify that the Auto-renew status of the sale orders created via rollover with Auto-Renewal disabled plans and create auto-renew scheduled payments is false is displayed as null",
    "section_id": 1681348,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-20732",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C1850395",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Create 2 Packages P1 as Source and P2 as \r\nTarget. P1 and P2 with Auto-Renewal option \r\nenabled\r\n2.Create an Auto-renewal enabled payment \r\nplan and associate it to the  packages PL1\r\n3.Create a Plan with Auto-renewal disabled PL2\r\n4.Create a Patron with a default digital wallet \r\nitem\r\n5.Perform receivables for the package P1 with \r\nthe above patron for the  plan PL1\r\nExpected Result:\r\nPre Requisite should be met\r\n2. Launch PV url and Login with valid \r\ncredentials\r\nExpected Result:\r\nLogin should be successfull\r\n3. 2.Navigate to Utilities\r\n3.Select Rollover Utility\r\n4.Create Rollover Group\r\n5.Create Rollover Configuration with \r\n'Transaction type' as 'Sale' and Create \r\nAuto-Renew Scheduled Payments' as False\r\n6.Select an Plan PL2 from Default Payment \r\nPlan drop down\r\n7.Run the Rollover and create sale orders \r\nfor the target\r\n8.Navigate to Ticket Services\r\n9.Search for the Order with Patron1\r\n10.Click on the Package Order Information \r\nmodal\r\n11.Verify that the Auto-renew status of the \r\nsale orders created via rollover with \r\nAuto-Renewal disabled plans and 'create \r\nauto-renew scheduled payments? is false is \r\nnull\r\nExpected Result:\r\nThe Auto-renew status of the sale orders created \r\nvia rollover with Auto-Renewal disabled plans and \r\n'create auto-renew scheduled payments? is false \r\nshould be null",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Create 2 Packages P1 as Source and P2 as \r\nTarget. P1 and P2 with Auto-Renewal option \r\nenabled\r\n2.Create an Auto-renewal enabled payment \r\nplan and associate it to the  packages PL1\r\n3.Create a Plan with Auto-renewal disabled PL2\r\n4.Create a Patron with a default digital wallet \r\nitem\r\n5.Perform receivables for the package P1 with \r\nthe above patron for the  plan PL1\r\n2. Launch PV url and Login with valid \r\ncredentials\r\n3. 2.Navigate to Utilities\r\n3.Select Rollover Utility\r\n4.Create Rollover Group\r\n5.Create Rollover Configuration with \r\n'Transaction type' as 'Sale' and Create \r\nAuto-Renew Scheduled Payments' as False\r\n6.Select an Plan PL2 from Default Payment \r\nPlan drop down\r\n7.Run the Rollover and create sale orders \r\nfor the target\r\n8.Navigate to Ticket Services\r\n9.Search for the Order with Patron1\r\n10.Click on the Package Order Information \r\nmodal\r\n11.Verify that the Auto-renew status of the \r\nsale orders created via rollover with \r\nAuto-Renewal disabled plans and 'create \r\nauto-renew scheduled payments? is false is \r\nnull",
        "expected": "1. Pre Requisite should be met\r\n2. Login should be successfull\r\n3. The Auto-renew status of the sale orders created \r\nvia rollover with Auto-Renewal disabled plans and \r\n'create auto-renew scheduled payments? is false \r\nshould be null"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.7.00"
  },
  {
    "id": 30597413,
    "title": "Verify that the user is able to reschedule a receivable order by using an auto-renewal enabled plan",
    "section_id": 1681348,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-20732",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C1850396",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre-requisite:\r\n1.Login to PV\r\n2.Navigate to Supplier Admin\r\n3.Select Payment Plan tab\r\n4.Click on New\r\n5.Create a plan with use scheduled \r\noption as Required and Auto-Renewal \r\noption as True. External Synopsis \r\nshould be given\r\n6.Create an Package P1 with \r\nauto-renew option as true\r\n7.Add the payment plan in the Package \r\nAccess of Package\r\n8.Navigate to Patron Management\r\n9.Select a patron and navigate to digital \r\nwallet\r\n10.Add a wallet item and set it as \r\nDefault\r\nExpected Result:\r\nPre Requisite should be met\r\n2. Launch PV url and Login with valid \r\ncredentials\r\nExpected Result:\r\nLogin should be successfull\r\n3. 1.Lock seats for the Package P1 in \r\nTicket sales\r\n2.Select the Receivables tab\r\n3.Select the above payment plan and \r\nbuild the installments and click on \r\nApply\r\n4.Click on the Scheduled icon\r\n5.Now add payments using the above \r\ndefault digital wallet item\r\n7.Complete the transaction\r\nExpected Result:\r\nTransactioon should be completed successfully\r\n4. 5.Now add payments using the above \r\ndefault digital wallet item\r\n7.Complete the transaction\r\n8.Reschedule the payment plan using \r\nan auto-renew enabled plan\r\n9.Do not select a default wallet and \r\nschedule it\r\nExpected Result:\r\nAn error mssage should be displayed\r\n\"* PatronCardOnFile is required for the \r\nselected payment plan.\"\r\n5. Select the default digital wallet item\r\n \r\nVerify that the user is able to reschedule \r\na receivable order by using an \r\nauto-renewal enabled plan\r\nExpected Result:\r\nThe user should be able to reschedule a \r\nreceivable order by using an auto-renewal \r\nenabled plan\r\n6. 12.Try to disable the default wallet\r\nExpected Result:\r\nError should be displayed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-requisite:\r\n1.Login to PV\r\n2.Navigate to Supplier Admin\r\n3.Select Payment Plan tab\r\n4.Click on New\r\n5.Create a plan with use scheduled \r\noption as Required and Auto-Renewal \r\noption as True. External Synopsis \r\nshould be given\r\n6.Create an Package P1 with \r\nauto-renew option as true\r\n7.Add the payment plan in the Package \r\nAccess of Package\r\n8.Navigate to Patron Management\r\n9.Select a patron and navigate to digital \r\nwallet\r\n10.Add a wallet item and set it as \r\nDefault\r\n2. Launch PV url and Login with valid \r\ncredentials\r\n3. 1.Lock seats for the Package P1 in \r\nTicket sales\r\n2.Select the Receivables tab\r\n3.Select the above payment plan and \r\nbuild the installments and click on \r\nApply\r\n4.Click on the Scheduled icon\r\n5.Now add payments using the above \r\ndefault digital wallet item\r\n7.Complete the transaction\r\n4. 5.Now add payments using the above \r\ndefault digital wallet item\r\n7.Complete the transaction\r\n8.Reschedule the payment plan using \r\nan auto-renew enabled plan\r\n9.Do not select a default wallet and \r\nschedule it\r\n5. Select the default digital wallet item\r\n \r\nVerify that the user is able to reschedule \r\na receivable order by using an \r\nauto-renewal enabled plan\r\n6. 12.Try to disable the default wallet",
        "expected": "1. Pre Requisite should be met\r\n2. Login should be successfull\r\n3. Transactioon should be completed successfully\r\n4. An error mssage should be displayed\r\n\"* PatronCardOnFile is required for the \r\nselected payment plan.\"\r\n5. The user should be able to reschedule a \r\nreceivable order by using an auto-renewal \r\nenabled plan\r\n6. Error should be displayed"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.7.00"
  },
  {
    "id": 30597414,
    "title": "Verify whether the orders are sent to Salesforce when INDIANS supplier event is placed with patron having INDCODE access code",
    "section_id": 1681349,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVF-224",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": "C1850406",
    "custom_preconds": "Create an Indian supplier Event\r\nCreate a patron using INDCODE  \r\nPerform transaction for the event using the patron",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch PVF link\nhttps://qa02-tdc-pvf-dev-ed.lightning.force.com\r\nExpected Result:\r\nSuccess\r\n2. Login with valid credentials\r\nExpected Result:\r\nSuccess\r\n3. Go to Accounts and search for the patron id\r\nExpected Result:\r\nPatron Details page should be displayed.\r\n4. Verify whether the order details and order product details are displayed in ProvenueForce\r\nExpected Result:\r\nOrder details and order product details are displayed in ProvenueForce\r\n5. Verify the PVHC-Salesforce logs\r\nExpected Result:\r\nOrder details should be passed correctly without any errors",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PVF link\nhttps://qa02-tdc-pvf-dev-ed.lightning.force.com\r\n2. Login with valid credentials\r\n3. Go to Accounts and search for the patron id\r\n4. Verify whether the order details and order product details are displayed in ProvenueForce\r\n5. Verify the PVHC-Salesforce logs",
        "expected": "1. Success\r\n2. Success\r\n3. Patron Details page should be displayed.\r\n4. Order details and order product details are displayed in ProvenueForce\r\n5. Order details should be passed correctly without any errors"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1"
  },
  {
    "id": 30597415,
    "title": "Verify PVF supports PV accounts",
    "section_id": 1681349,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PVF-104",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": "C1850407",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Login to PVNG using valid credentials\n\r\nExpected Result:\r\nUser should be able to login to the application\r\n2. Create an Account, create an event and complete a transaction and note the order\r\nExpected Result:\r\nAccount and event created.\nTransaction completed successfully.\r\n3. Login to PVF 2.0 with valid credetnails\r\nExpected Result:\r\nLogin should be successful\r\n4. Verify the account details field  are updated in accounts tab.\r\nExpected Result:\r\nAccount details are updated in accounts tab.\r\n5. Verify order details are updated in order tab\r\nExpected Result:\r\nOrder details are updated in order tab.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to PVNG using valid credentials\n\r\n2. Create an Account, create an event and complete a transaction and note the order\r\n3. Login to PVF 2.0 with valid credetnails\r\n4. Verify the account details field  are updated in accounts tab.\r\n5. Verify order details are updated in order tab",
        "expected": "1. User should be able to login to the application\r\n2. Account and event created.\nTransaction completed successfully.\r\n3. Login should be successful\r\n4. Account details are updated in accounts tab.\r\n5. Order details are updated in order tab."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.0"
  },
  {
    "id": 30597416,
    "title": "In Password Reset ,Verify the password details are getting via provided mail",
    "section_id": 1681350,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "UMT-63",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 30,
    "custom_refs": "C1850405",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Launch 'User Management Tool' URL\r\nExpected Result:\r\n'User Management Tool' launched successfully.\r\n2. Check the available Menu options \n          â€¢ Password Reset Tool\n\r\nExpected Result:\r\nBelow Menu options available in 'User Management Tool'\n          â€¢ Password Reset Tool\n\r\n3. Perform the password reset action \r\nExpected Result:\r\nPassword reset successfully\r\n4. In Password Reset ,Verify the password details are getting via provided mail\r\nExpected Result:\r\nsuccessfull",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch 'User Management Tool' URL\r\n2. Check the available Menu options \n          â€¢ Password Reset Tool\n\r\n3. Perform the password reset action \r\n4. In Password Reset ,Verify the password details are getting via provided mail",
        "expected": "1. 'User Management Tool' launched successfully.\r\n2. Below Menu options available in 'User Management Tool'\n          â€¢ Password Reset Tool\n\r\n3. Password reset successfully\r\n4. successfull"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "1.0"
  },
  {
    "id": 30597417,
    "title": "Verify user is upload the Simple Transaction input file with records",
    "section_id": 1681351,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "SDATA-104",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": "C1850404",
    "custom_preconds": "create a input file with valid parameters",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the Staging Data Import tool link\r\nExpected Result:\r\nUser should be able to launch the link\r\n2. Login with Valid Credentials\r\nExpected Result:\r\nUser should be able to login to the tool with \nvalid credentials\r\n3. Upload the above input file\r\nExpected Result:\r\nFile should be uploaded successfully\r\n4. Select the run code and file type\r\nExpected Result:\r\nboth options should be selected successfully\r\n5. Click on the submit button\r\nExpected Result:\r\nThe record should be inserted successfully without any error message",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the Staging Data Import tool link\r\n2. Login with Valid Credentials\r\n3. Upload the above input file\r\n4. Select the run code and file type\r\n5. Click on the submit button",
        "expected": "1. User should be able to launch the link\r\n2. User should be able to login to the tool with \nvalid credentials\r\n3. File should be uploaded successfully\r\n4. both options should be selected successfully\r\n5. The record should be inserted successfully without any error message"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2"
  },
  {
    "id": 30597418,
    "title": "Verify whether price points are updated when price point ID, buyer type  and price scale  are correctly provided in the import file",
    "section_id": 1681352,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PRICE-53",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": "C1850403",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite\r\n1. User should have access to Price Change Utility\r\n2. A text file containing the price changes being requested should be available with no \r\nprice point ID and  buyer type and price scale and change location as PROVENUE\r\n2. Launch Price Change Utility : \r\nhttps://irqainfutil1.back.tickets.com/PriceChangeSyncApplication/Connections/PVQAF1\r\nExpected Result:\r\nPrice change Utility should be launched\r\n3. Enter valid TDC account/ Password\r\nExpected Result:\r\nValid Credentials should be entered\r\n4. Click login button\r\nExpected Result:\r\nApplication landing page should be displayed\r\n5. Click the button for browsing file and select the file \r\nspecified in prerequisite\r\nExpected Result:\r\nFile to be imported should be selected and the \r\npath should be displayed in the Price change \r\nutility\r\n6. Click on import option\r\nExpected Result:\r\nFile should be imported and header values should \r\nbe displayed tab delimited\r\n7. Click on Submit Price Changes button\r\nExpected Result:\r\nPrice changes should be submitted\r\n8. Verify whether price points are updated when price point ID, buyer type  and price scale  are correctly provided in the \r\nimport file\r\nExpected Result:\r\nPrice points should be updated successfully",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite\r\n1. User should have access to Price Change Utility\r\n2. A text file containing the price changes being requested should be available with no \r\nprice point ID and  buyer type and price scale and change location as PROVENUE\r\n2. Launch Price Change Utility : \r\nhttps://irqainfutil1.back.tickets.com/PriceChangeSyncApplication/Connections/PVQAF1\r\n3. Enter valid TDC account/ Password\r\n4. Click login button\r\n5. Click the button for browsing file and select the file \r\nspecified in prerequisite\r\n6. Click on import option\r\n7. Click on Submit Price Changes button\r\n8. Verify whether price points are updated when price point ID, buyer type  and price scale  are correctly provided in the \r\nimport file",
        "expected": "1. \r\n2. Price change Utility should be launched\r\n3. Valid Credentials should be entered\r\n4. Application landing page should be displayed\r\n5. File to be imported should be selected and the \r\npath should be displayed in the Price change \r\nutility\r\n6. File should be imported and header values should \r\nbe displayed tab delimited\r\n7. Price changes should be submitted\r\n8. Price points should be updated successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "1.2"
  },
  {
    "id": 30597419,
    "title": "Verify that we are able to sucessfully upload the file when Merge Sale rep is True",
    "section_id": 1681353,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PATMRG-1",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": "C1850402",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the Patron Merge Tool link\r\nExpected Result:\r\nThe URL should connected successfully\r\n2. Login the Application with Ping API using supplied credentials\r\nExpected Result:\r\nThe log in page for the application should be displayed\r\n3. Select file should be uploaded sucessfully \r\nand the current rules defined for this \r\nfunctionality should be evaluated by PV to \r\nidentify the sales rep that will be merger and \r\nretained\r\nExpected Result:\r\nUser uploaded the file successfully",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the Patron Merge Tool link\r\n2. Login the Application with Ping API using supplied credentials\r\n3. Select file should be uploaded sucessfully \r\nand the current rules defined for this \r\nfunctionality should be evaluated by PV to \r\nidentify the sales rep that will be merger and \r\nretained",
        "expected": "1. The URL should connected successfully\r\n2. The log in page for the application should be displayed\r\n3. User uploaded the file successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.6.00"
  },
  {
    "id": 30597420,
    "title": "Verify whether Patron Data Import working properly when input file have valid data",
    "section_id": 1681354,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PATIMP-206",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": "C1850401",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Login to PDI\r\nExpected Result:\r\nuser should able to login\r\n2. Set input File with valid data for 'Simple Patron'\r\n3. Upload input file\r\n4. Check verification\r\nExpected Result:\r\nSuccess\r\n5. Note: Repeat the same for below options\n-Extended Patron\n-Trait\n-Address\n-Email\n-Phone\n-Data Protection\n-Sales Rep",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to PDI\r\n2. Set input File with valid data for 'Simple Patron'\r\n3. Upload input file\r\n4. Check verification\r\n5. Note: Repeat the same for below options\n-Extended Patron\n-Trait\n-Address\n-Email\n-Phone\n-Data Protection\n-Sales Rep",
        "expected": "1. user should able to login\r\n2. \r\n3. \r\n4. Success\r\n5."
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30597421,
    "title": "Verify patron receives Utility transaction E-mail for MANUALLY SCHEDULED PAYMENTS",
    "section_id": 1681355,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-18093",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 7,
    "custom_refs": "C1850408",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Set the Property \"email.confirmations.enabled.for.utility.MSP\" to true  where xxx is a utility code based on the code in the uility_type table.\r\nExpected Result:\r\nThe pre-requisite should be met\r\n2. Launch the application\r\nLogin using valid credentials\r\nExpected Result:\r\nThe user should be able to launch and login the application successfully\r\n3. Navigate to ticket sales\r\nComplete a receivables for the event with the patron\r\nExpected Result:\r\nThe transaction should be completed successfully\r\n4. Navigate to utility and run the schedule payments\r\nExpected Result:\r\nThe user should be able to perform the action successfully\r\n5. Verify patron receives Utility transaction E-mail for MANUALLY SCHEDULED PAYMENTS\r\nExpected Result:\r\nThe patron should get an email",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Set the Property \"email.confirmations.enabled.for.utility.MSP\" to true  where xxx is a utility code based on the code in the uility_type table.\r\n2. Launch the application\r\nLogin using valid credentials\r\n3. Navigate to ticket sales\r\nComplete a receivables for the event with the patron\r\n4. Navigate to utility and run the schedule payments\r\n5. Verify patron receives Utility transaction E-mail for MANUALLY SCHEDULED PAYMENTS",
        "expected": "1. The pre-requisite should be met\r\n2. The user should be able to launch and login the application successfully\r\n3. The transaction should be completed successfully\r\n4. The user should be able to perform the action successfully\r\n5. The patron should get an email"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.1.00"
  },
  {
    "id": 30597422,
    "title": "Verify email transaction confirmation by performing a Sale and Reservation in the Same Transaction",
    "section_id": 1681355,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-18093",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 7,
    "custom_refs": "C1850409",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Create an Event\r\nExpected Result:\r\nPre-requsite should be satisfied successfully\r\n2. Launch the PV application\r\nExpected Result:\r\nPV application should be launched successfully\r\n3. Enter the valid user name and password\r\nuser name : xxxx\r\nPassword : xxxx\r\nExpected Result:\r\nPV application should be launched successfully\r\n4. 1.Perform a sale for the event \r\n2.Click on Add Offer.Lock seats for the event and perform Reservation\r\n3. Complete Transaction\r\nExpected Result:\r\nTransaction should be completed successfully\r\n5. Navigate to Ticket Services -Order details-Confirmation email action from the Select Action drop down\r\nExpected Result:\r\nEMAIL should be generatd successfully\r\n6. Verify the email confirmation\r\nExpected Result:\r\nThe confirmation mail should be generated\r\n7. Verify the email confirmation output displays all details like Account ID,Account Name,Transaction ID,Transaction Date,Order Id,delivery details , Event name , buyer type, service charges,Section, Row, seats , A key word Reserved,Event name , buyer type, service charges,Section, Row, seats , sub total,Handling and Convenience Charges,Total,Order Summary details with Order Date , Order Sold Amount,Order sales Balance,Paid in This Transaction, Payment details\r\nExpected Result:\r\nThese fields and their values should be updated correctly in the mail",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Create an Event\r\n2. Launch the PV application\r\n3. Enter the valid user name and password\r\nuser name : xxxx\r\nPassword : xxxx\r\n4. 1.Perform a sale for the event \r\n2.Click on Add Offer.Lock seats for the event and perform Reservation\r\n3. Complete Transaction\r\n5. Navigate to Ticket Services -Order details-Confirmation email action from the Select Action drop down\r\n6. Verify the email confirmation\r\n7. Verify the email confirmation output displays all details like Account ID,Account Name,Transaction ID,Transaction Date,Order Id,delivery details , Event name , buyer type, service charges,Section, Row, seats , A key word Reserved,Event name , buyer type, service charges,Section, Row, seats , sub total,Handling and Convenience Charges,Total,Order Summary details with Order Date , Order Sold Amount,Order sales Balance,Paid in This Transaction, Payment details",
        "expected": "1. Pre-requsite should be satisfied successfully\r\n2. PV application should be launched successfully\r\n3. PV application should be launched successfully\r\n4. Transaction should be completed successfully\r\n5. EMAIL should be generatd successfully\r\n6. The confirmation mail should be generated\r\n7. These fields and their values should be updated correctly in the mail"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.1.00"
  },
  {
    "id": 30597423,
    "title": "Verify confirmation messages for a transaction is accessible via   Messages tab available in the transaction view of ticket services",
    "section_id": 1681355,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-18093",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_pv_category": 7,
    "custom_refs": "C1850410",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the PV application\r\nExpected Result:\r\nPV application should be launched successfully\r\n2. Enter the valid user name and password\r\nuser name : xxxx\r\nPassword : xxxx\r\nExpected Result:\r\nPV application should be launched successfully\r\n3. 1. Go to event Administration \r\n2. Create an event\r\nExpected Result:\r\nEvent should be created successfully\r\n4. 1. Go ticket sales \r\n2. Select the event and patron \r\n3. Click on lock seats\r\nExpected Result:\r\nEvent should be selected successfully and user able to lock the seats\r\n5. 1. Enter the delivery method and payment method\r\n2. compplete the sale transaction\r\n3.Send the confirmation Email\r\n4.Navigate to ticket service page\r\nExpected Result:\r\nTransaction should be successfull.\r\n6. Verify confirmation messages for a transaction is accessible via  'Messages' tab available in the transaction view of ticket services\r\nExpected Result:\r\nThe transaction confirmation messages associated with the transaction should be accessed via  'Messages' tab within the transaction view of an order in ticket services",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the PV application\r\n2. Enter the valid user name and password\r\nuser name : xxxx\r\nPassword : xxxx\r\n3. 1. Go to event Administration \r\n2. Create an event\r\n4. 1. Go ticket sales \r\n2. Select the event and patron \r\n3. Click on lock seats\r\n5. 1. Enter the delivery method and payment method\r\n2. compplete the sale transaction\r\n3.Send the confirmation Email\r\n4.Navigate to ticket service page\r\n6. Verify confirmation messages for a transaction is accessible via  'Messages' tab available in the transaction view of ticket services",
        "expected": "1. PV application should be launched successfully\r\n2. PV application should be launched successfully\r\n3. Event should be created successfully\r\n4. Event should be selected successfully and user able to lock the seats\r\n5. Transaction should be successfull.\r\n6. The transaction confirmation messages associated with the transaction should be accessed via  'Messages' tab within the transaction view of an order in ticket services"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.1.00"
  },
  {
    "id": 30597424,
    "title": "Trait Operation-Verify the trait operation after creating an expression with multiple Package and Pricescale",
    "section_id": 1681356,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-15073",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 30,
    "custom_refs": "C53090",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Create two new Packages PKG1,PKG2. \r\nCreate two Price Scales PS1,PS2.\r\nCreate a new Triat TRIAT1\r\n\r\nDo a single  transaction for all the four packages with the single Patron\r\n\r\nUser has only CREATE permission in Org Admin\r\n2. Login to PV with valid credentials\r\nExpected Result:\r\nLogin should be successful and the home page of the application should be launched\r\n3. Click on 'Utilities' menu and select the option 'Utilities' from it.\r\nExpected Result:\r\nUtilities Portal should be displayed successfully\r\n4. Select 'Bulk trait' from 'Set Utility For' Dropdown\r\nExpected Result:\r\nBulk trait' utlity should get selected successfully\r\n5. In Search criteria- Select 'All' from the first drop down\r\nExpected Result:\r\nAll' should be selected successfully and should be displayed in the first drop down\r\n6. 1.Select Category as 'Package' in the  dropdown\r\n2.Select Attribute as 'Package' in the dropdown.\r\n3.Click on the arrow to PACKAGE search modal \r\n4.Click on  button\r\n5.Enter PKG on the Search box and click on Find button\r\n6.Select PKG1 by ticking the checkbox ad click OK\r\n7.Click on the 'include' radio button and click on 'Close' button\r\nExpected Result:\r\n1.'Package' should be selected successfully and should be displayed in the drop downs.\r\n2. The text \"Package\" should be displayed next to the drop down\r\n3.PACKAGE search modal should be displayed\r\n4.The Search window to select the Package should be displayed\r\n5.All the Packages starting with PKG should be displayed in the window\r\n6.The Packages should be successfuly selected\r\n7. Click on Validate\r\nExpected Result:\r\nA messaged should be displayed while the validation is done and  should be returned to the page  successfully.\r\n8. In the 'Enter Trait' section, Select the Account radio button from \"Account or Contact\"\r\nExpected Result:\r\nThe Account radio button should be selected.\r\n9. Select the radio button- \"Add trait\" from \"Update Behavior\"\r\nExpected Result:\r\nThe Radio button \"Add trait\" should get selected successfully in \"Update Behavior\"\r\n10. Select TRIAT1 from the Trait dropdown and enter the trait details\r\nExpected Result:\r\nSystem should accept the user selected triat\r\n11. Click on Preview\r\nExpected Result:\r\nA message should be displayed while performing the preview and   the count of Patron Accounts should be displayed\r\n12. Click on the export to file button\r\nExpected Result:\r\nThe export should be triggered and a window should be displayed with three options 'open' ,'Save ' and ' cancel'\r\n13. Click on 'open' button\r\nExpected Result:\r\nThe Excel sheet should be opened successfully with all the details of the patrons selected.The count should be equal to the number displayed on clicking the 'preview' button\r\n14. Click on \"Set Traits\"\r\nExpected Result:\r\nUtility should start and complete successfully\r\n15. Verify the Triats for the Patrons in patron management portal\r\nExpected Result:\r\nThe Triats must be successfully added to the Patrons  listed in the exported excel sheet.\r\n16. Click on the (+) button on the right side of the 'Select Criteria Section\r\nExpected Result:\r\nThe drop down to add next criteria should be selected.\r\n17. Click on Add button to create the next criteria set\r\nExpected Result:\r\nThe Radio buttons 'And, 'Or' should be displayed.By Default 'And' should be selected.Also the option to enter next category should be displayed\r\n18. 1.Select Category as 'Package' in the  dropdown\r\n2.Select Attribute as 'Pricescale' in the dropdown.\r\n3.Click on the arrow to PACKAGE search modal \r\n4.Click on  button\r\n5.Enter PS1 on the Search box and click on Find button\r\n6.Select PS1 by ticking the checkbox ad click OK\r\n7.Click on the 'include' radio button and click on 'Close' button\r\nExpected Result:\r\n1.'Package' should be selected successfully and should be displayed in the drop downs.\r\n2. The text \"Price Scale\" should be displayed next to the drop down\r\n3.Price Scale\" search window should be displayed\r\n4.The Search window to select the Package should be displayed\r\n5.All the Price scales starting with PS should be displayed in the window\r\n6.The Packages should be successfuly selected\r\n19. 1.Select Category as 'Package' in the  dropdown\r\n2.Select Attribute as 'Package' in the dropdown.\r\n3.Click on the arrow to PACKAGE search modal \r\n4.Click on  button\r\n5.Enter PKG on the Search box and click on Find button\r\n6.Select PKG2 by ticking the checkbox ad click OK\r\n7.Click on the 'include' radio button and click on 'Close' button\r\nExpected Result:\r\n1.'Package' should be selected successfully and should be displayed in the drop downs.\r\n2. The text \"Package\" should be displayed next to the drop down\r\n3.PACKAGE search windowl should be displayed\r\n4.The Search window to select the Package should be displayed\r\n5.All the Packages starting with PKG should be displayed in the window\r\n6.The Packages should be successfuly selected\r\n20. Click on the (+) button on the right side of the 'Select Criteria Section\r\nExpected Result:\r\nThe drop down to add next criteria should be selected.\r\n21. 1.Select Category as 'Package' in the  dropdown\r\n2.Select Attribute as 'Pricescale' in the dropdown.\r\n3.Click on the arrow to PACKAGE search modal \r\n4.Click on  button\r\n5.Enter PS2 on the Search box and click on Find button\r\n6.Select PS2 by ticking the checkbox ad click OK\r\n7.Click on the 'include' radio button and click on 'Close' button\r\nExpected Result:\r\n1.'Package' should be selected successfully and should be displayed in the drop downs.\r\n2. The text \"Price Scale\" should be displayed next to the drop down\r\n3.Price Scale\" search window should be displayed\r\n4.The Search window to select the Package should be displayed\r\n5.All the Price scales starting with PS should be displayed in the window\r\n6.The Packages should be successfuly selected\r\n22. Click on Validate\r\nExpected Result:\r\nA messaged should be displayed while the validation is done and  should be returned to the page  successfully.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Create two new Packages PKG1,PKG2. \r\nCreate two Price Scales PS1,PS2.\r\nCreate a new Triat TRIAT1\r\n\r\nDo a single  transaction for all the four packages with the single Patron\r\n\r\nUser has only CREATE permission in Org Admin\r\n2. Login to PV with valid credentials\r\n3. Click on 'Utilities' menu and select the option 'Utilities' from it.\r\n4. Select 'Bulk trait' from 'Set Utility For' Dropdown\r\n5. In Search criteria- Select 'All' from the first drop down\r\n6. 1.Select Category as 'Package' in the  dropdown\r\n2.Select Attribute as 'Package' in the dropdown.\r\n3.Click on the arrow to PACKAGE search modal \r\n4.Click on  button\r\n5.Enter PKG on the Search box and click on Find button\r\n6.Select PKG1 by ticking the checkbox ad click OK\r\n7.Click on the 'include' radio button and click on 'Close' button\r\n7. Click on Validate\r\n8. In the 'Enter Trait' section, Select the Account radio button from \"Account or Contact\"\r\n9. Select the radio button- \"Add trait\" from \"Update Behavior\"\r\n10. Select TRIAT1 from the Trait dropdown and enter the trait details\r\n11. Click on Preview\r\n12. Click on the export to file button\r\n13. Click on 'open' button\r\n14. Click on \"Set Traits\"\r\n15. Verify the Triats for the Patrons in patron management portal\r\n16. Click on the (+) button on the right side of the 'Select Criteria Section\r\n17. Click on Add button to create the next criteria set\r\n18. 1.Select Category as 'Package' in the  dropdown\r\n2.Select Attribute as 'Pricescale' in the dropdown.\r\n3.Click on the arrow to PACKAGE search modal \r\n4.Click on  button\r\n5.Enter PS1 on the Search box and click on Find button\r\n6.Select PS1 by ticking the checkbox ad click OK\r\n7.Click on the 'include' radio button and click on 'Close' button\r\n19. 1.Select Category as 'Package' in the  dropdown\r\n2.Select Attribute as 'Package' in the dropdown.\r\n3.Click on the arrow to PACKAGE search modal \r\n4.Click on  button\r\n5.Enter PKG on the Search box and click on Find button\r\n6.Select PKG2 by ticking the checkbox ad click OK\r\n7.Click on the 'include' radio button and click on 'Close' button\r\n20. Click on the (+) button on the right side of the 'Select Criteria Section\r\n21. 1.Select Category as 'Package' in the  dropdown\r\n2.Select Attribute as 'Pricescale' in the dropdown.\r\n3.Click on the arrow to PACKAGE search modal \r\n4.Click on  button\r\n5.Enter PS2 on the Search box and click on Find button\r\n6.Select PS2 by ticking the checkbox ad click OK\r\n7.Click on the 'include' radio button and click on 'Close' button\r\n22. Click on Validate",
        "expected": "1. \r\n2. Login should be successful and the home page of the application should be launched\r\n3. Utilities Portal should be displayed successfully\r\n4. Bulk trait' utlity should get selected successfully\r\n5. All' should be selected successfully and should be displayed in the first drop down\r\n6. 1.'Package' should be selected successfully and should be displayed in the drop downs.\r\n2. The text \"Package\" should be displayed next to the drop down\r\n3.PACKAGE search modal should be displayed\r\n4.The Search window to select the Package should be displayed\r\n5.All the Packages starting with PKG should be displayed in the window\r\n6.The Packages should be successfuly selected\r\n7. A messaged should be displayed while the validation is done and  should be returned to the page  successfully.\r\n8. The Account radio button should be selected.\r\n9. The Radio button \"Add trait\" should get selected successfully in \"Update Behavior\"\r\n10. System should accept the user selected triat\r\n11. A message should be displayed while performing the preview and   the count of Patron Accounts should be displayed\r\n12. The export should be triggered and a window should be displayed with three options 'open' ,'Save ' and ' cancel'\r\n13. The Excel sheet should be opened successfully with all the details of the patrons selected.The count should be equal to the number displayed on clicking the 'preview' button\r\n14. Utility should start and complete successfully\r\n15. The Triats must be successfully added to the Patrons  listed in the exported excel sheet.\r\n16. The drop down to add next criteria should be selected.\r\n17. The Radio buttons 'And, 'Or' should be displayed.By Default 'And' should be selected.Also the option to enter next category should be displayed\r\n18. 1.'Package' should be selected successfully and should be displayed in the drop downs.\r\n2. The text \"Price Scale\" should be displayed next to the drop down\r\n3.Price Scale\" search window should be displayed\r\n4.The Search window to select the Package should be displayed\r\n5.All the Price scales starting with PS should be displayed in the window\r\n6.The Packages should be successfuly selected\r\n19. 1.'Package' should be selected successfully and should be displayed in the drop downs.\r\n2. The text \"Package\" should be displayed next to the drop down\r\n3.PACKAGE search windowl should be displayed\r\n4.The Search window to select the Package should be displayed\r\n5.All the Packages starting with PKG should be displayed in the window\r\n6.The Packages should be successfuly selected\r\n20. The drop down to add next criteria should be selected.\r\n21. 1.'Package' should be selected successfully and should be displayed in the drop downs.\r\n2. The text \"Price Scale\" should be displayed next to the drop down\r\n3.Price Scale\" search window should be displayed\r\n4.The Search window to select the Package should be displayed\r\n5.All the Price scales starting with PS should be displayed in the window\r\n6.The Packages should be successfuly selected\r\n22. A messaged should be displayed while the validation is done and  should be returned to the page  successfully."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.00"
  },
  {
    "id": 30597425,
    "title": "Trait Operation-Verify the message displayed after setting the trait",
    "section_id": 1681356,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-15073",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 30,
    "custom_refs": "C53093",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Create a new Event EVT1 & EVT2 with EVENT RUN1.\r\n\r\nDo some transactions with these Events for Patrons P1,P2,P3.\r\n\r\nUser has only CREATE permission in Org Admin\r\n2. Login to PV with valid credentials\r\nExpected Result:\r\nLogin should be successful and the home page of the applcation should be launched\r\n3. Select utilities portal\r\nExpected Result:\r\nUtilities portal should be selected successfully\r\n4. Select 'Bulk trait' from 'Set Utility For' Dropdown\r\nExpected Result:\r\nUtility should be successfully selected\r\n5. In Serach criteria- Select Category as ' EVENT' in the dropdown\r\nExpected Result:\r\nEVENT category should be successfully selected\r\n6. Select the Attribute as EVENT\r\nExpected Result:\r\nEVENT should be selected as Attribute\r\n7. 1.Click on EVENT\r\n2.Select radio button Include\r\n3.Click on Add new\r\nExpected Result:\r\nEVENT search window should be displayed\r\n8. Search EVENT by Find button\r\nExpected Result:\r\nEVENT should be displayed successfully\r\n9. Select the EVENT by selecting the checkboxes\r\nExpected Result:\r\nThe EVENT should be successfully selected\r\n10. Click on OK\r\nExpected Result:\r\nThe EVENT should be successfully selected & displayed in the list.\r\n11. Click on Validate\r\nExpected Result:\r\nValdiation should be successful.Patron count should be displayed.\r\n12. Click on AND radion button and click Add Block button\r\nIn Serach criteria- Select Category as 'Event' in the dropdown \r\nSelect the Attribute as EVENT\r\nClick on EVENT  search modal \r\nSelect radio button Include\r\nClick on Add new \r\nSearch EVENT using Find button\r\nSelect the EVENT  by selecting the checkboxes\r\nClick on OK\r\nClick on Validate\r\nExpected Result:\r\nAdding and valdiating the expression block should be successful\r\n13. Enter Trait:\nSelect the Account radio button from \"Account or Contact\"\r\nExpected Result:\r\nAccount radio button should be successfully selected\r\n14. Select the radio button- \"Add trait\" from \"Update Behavior\"\r\nExpected Result:\r\nThe Add trait radio button should be successfully selected\r\n15. Select the \"Trait\" from the Trait dropdown and enter the trait\r\nExpected Result:\r\nSystem should accept the user selected Trait\r\n16. Click on Preview\r\nExpected Result:\r\nThe criteria validation and total patron count should be successfully previewed\r\n-- The Preview should only filter the patrons which satisfy both the expressions\r\n17. Click on \"Set Traits\"\r\nExpected Result:\r\nUtility run should start and should  successfully be completed\r\n18. Verify the traits for each patron in pre-requisite in patron management portal\r\nExpected Result:\r\nThe traits must be ADDED to all Patrons selected in Preview\r\n19. Verify the message displayed after setting the trait\r\nExpected Result:\r\nValid message should be displayed saying the traits are added",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Create a new Event EVT1 & EVT2 with EVENT RUN1.\r\n\r\nDo some transactions with these Events for Patrons P1,P2,P3.\r\n\r\nUser has only CREATE permission in Org Admin\r\n2. Login to PV with valid credentials\r\n3. Select utilities portal\r\n4. Select 'Bulk trait' from 'Set Utility For' Dropdown\r\n5. In Serach criteria- Select Category as ' EVENT' in the dropdown\r\n6. Select the Attribute as EVENT\r\n7. 1.Click on EVENT\r\n2.Select radio button Include\r\n3.Click on Add new\r\n8. Search EVENT by Find button\r\n9. Select the EVENT by selecting the checkboxes\r\n10. Click on OK\r\n11. Click on Validate\r\n12. Click on AND radion button and click Add Block button\r\nIn Serach criteria- Select Category as 'Event' in the dropdown \r\nSelect the Attribute as EVENT\r\nClick on EVENT  search modal \r\nSelect radio button Include\r\nClick on Add new \r\nSearch EVENT using Find button\r\nSelect the EVENT  by selecting the checkboxes\r\nClick on OK\r\nClick on Validate\r\n13. Enter Trait:\nSelect the Account radio button from \"Account or Contact\"\r\n14. Select the radio button- \"Add trait\" from \"Update Behavior\"\r\n15. Select the \"Trait\" from the Trait dropdown and enter the trait\r\n16. Click on Preview\r\n17. Click on \"Set Traits\"\r\n18. Verify the traits for each patron in pre-requisite in patron management portal\r\n19. Verify the message displayed after setting the trait",
        "expected": "1. \r\n2. Login should be successful and the home page of the applcation should be launched\r\n3. Utilities portal should be selected successfully\r\n4. Utility should be successfully selected\r\n5. EVENT category should be successfully selected\r\n6. EVENT should be selected as Attribute\r\n7. EVENT search window should be displayed\r\n8. EVENT should be displayed successfully\r\n9. The EVENT should be successfully selected\r\n10. The EVENT should be successfully selected & displayed in the list.\r\n11. Valdiation should be successful.Patron count should be displayed.\r\n12. Adding and valdiating the expression block should be successful\r\n13. Account radio button should be successfully selected\r\n14. The Add trait radio button should be successfully selected\r\n15. System should accept the user selected Trait\r\n16. The criteria validation and total patron count should be successfully previewed\r\n-- The Preview should only filter the patrons which satisfy both the expressions\r\n17. Utility run should start and should  successfully be completed\r\n18. The traits must be ADDED to all Patrons selected in Preview\r\n19. Valid message should be displayed saying the traits are added"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.00"
  },
  {
    "id": 30597426,
    "title": "UI-Verify Select all option in Serach modal",
    "section_id": 1681356,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-15073",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_pv_category": 30,
    "custom_refs": "C53095",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Login to PV with valid credentials\r\nExpected Result:\r\nLogin should be successful and the home page of the applcation should be launched\r\n2. Select utilities portal\r\nExpected Result:\r\nUtilities portal should be selected successfully\r\n3. Select 'Bulk trait' from 'Set Utility For' Dropdown\r\nExpected Result:\r\nUtility should be successfully selected\r\n4. In Serach criteria- Select Category as ' Contact' in the dropdown\r\nExpected Result:\r\nContact category should be successfully selected\r\n5. Select the Attribute as Contact type\r\nExpected Result:\r\nContact type should be selected as Attribute\r\n6. Click on Contact type \r\nSelect radio button Include\r\nClick on Add new\r\nExpected Result:\r\nContact type search window should be displayed\r\n7. Search contact types by Find button\r\nExpected Result:\r\nContact types should be displayed successfully\r\n8. Click on Select all check box and verify\r\nExpected Result:\r\nAll the checkboxes must be selected",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to PV with valid credentials\r\n2. Select utilities portal\r\n3. Select 'Bulk trait' from 'Set Utility For' Dropdown\r\n4. In Serach criteria- Select Category as ' Contact' in the dropdown\r\n5. Select the Attribute as Contact type\r\n6. Click on Contact type \r\nSelect radio button Include\r\nClick on Add new\r\n7. Search contact types by Find button\r\n8. Click on Select all check box and verify",
        "expected": "1. Login should be successful and the home page of the applcation should be launched\r\n2. Utilities portal should be selected successfully\r\n3. Utility should be successfully selected\r\n4. Contact category should be successfully selected\r\n5. Contact type should be selected as Attribute\r\n6. Contact type search window should be displayed\r\n7. Contact types should be displayed successfully\r\n8. All the checkboxes must be selected"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.00"
  },
  {
    "id": 30597427,
    "title": "Verify the Reservation Release utility for an event when Release Reservation date is overridden at event level",
    "section_id": 1681357,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-10882",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 30,
    "custom_refs": "C69095",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Create an event from Event Administration \n2.Override the Reservation Release Date Value \n3.Perform a Reservation Transaction.\r\nExpected Result:\r\n1.Event should be successfully created with the release reservation date value inherited from the overriden value at event level .\n2.Transaction should be completed successfully\r\n2. Login to PV with valid credentials\r\nExpected Result:\r\nLogin should be successful and the home page of the applcation should be launched\r\n3. Select 'Utilities' from the main drop down.\r\nExpected Result:\r\nThe 'Utilities' portal should be displayed\r\n4. Select 'Bulk Reservation Release' from the 'Set Utility For' dropdown.\r\nExpected Result:\r\nThe 'Bulk Reservation Release' page should be displayed\r\n5. 1.Give  the Mandatory Parameters\n2.Enter the event for which the. Select 'Single Event Seats' radio button.\n2. Input the necessary parameters such that a large number of seats get selected.\n3. Give the present date as the Release Date\n4. Click on 'Preview' button.\ne transaction had been done.\n3.Generate Report with Subtract hold code Checked and unchecked  4.Click on View Report\r\nExpected Result:\r\nA large number of seats should get selected including the seats of Prerequisite.\r\n6. Click on the 'Release All' button.\r\nExpected Result:\r\nA warning message \"You are going to release all the reservations. Continue?\" should be displayed\r\n7. Click on the OK button\r\nExpected Result:\r\n\"Bulk reservation release\" successful message should be displayed.\r\n8. 1. Navigate to Ticket Sales portal.\n2. Select the event used in the transaction in Prerequiste.\n3. Click on the 'View Map' button.\n4. Verify whether the seats reserved in prerequisites is in Locked state or not.\r\nExpected Result:\r\nThe seats should not be in locked state.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Create an event from Event Administration \n2.Override the Reservation Release Date Value \n3.Perform a Reservation Transaction.\r\n2. Login to PV with valid credentials\r\n3. Select 'Utilities' from the main drop down.\r\n4. Select 'Bulk Reservation Release' from the 'Set Utility For' dropdown.\r\n5. 1.Give  the Mandatory Parameters\n2.Enter the event for which the. Select 'Single Event Seats' radio button.\n2. Input the necessary parameters such that a large number of seats get selected.\n3. Give the present date as the Release Date\n4. Click on 'Preview' button.\ne transaction had been done.\n3.Generate Report with Subtract hold code Checked and unchecked  4.Click on View Report\r\n6. Click on the 'Release All' button.\r\n7. Click on the OK button\r\n8. 1. Navigate to Ticket Sales portal.\n2. Select the event used in the transaction in Prerequiste.\n3. Click on the 'View Map' button.\n4. Verify whether the seats reserved in prerequisites is in Locked state or not.",
        "expected": "1. 1.Event should be successfully created with the release reservation date value inherited from the overriden value at event level .\n2.Transaction should be completed successfully\r\n2. Login should be successful and the home page of the applcation should be launched\r\n3. The 'Utilities' portal should be displayed\r\n4. The 'Bulk Reservation Release' page should be displayed\r\n5. A large number of seats should get selected including the seats of Prerequisite.\r\n6. A warning message \"You are going to release all the reservations. Continue?\" should be displayed\r\n7. \"Bulk reservation release\" successful message should be displayed.\r\n8. The seats should not be in locked state."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.30"
  },
  {
    "id": 30597428,
    "title": "Bulk Reservation Release cannot perform release for a single event and a package at the same time.",
    "section_id": 1681357,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-14042",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 30,
    "custom_refs": "C69100",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1.The logged in user should have the appropriate AFP permission to access \"Bulk Reservation Release\" Utility.\r\nExpected Result:\r\nPre Requisite should be complete\r\n2. Launch PV aaplication\r\nExpected Result:\r\nThe application should be launched successfully.\r\n3. Login as with a valid Username and Password.\r\nExpected Result:\r\nUser should be able to login successfully.\r\n4. 1. Go to the Utilities\n2. Select Bulk Reservation Release Utility from the drop down.\n3. Select Single Event Seats\r\nExpected Result:\r\n1. The user is at Bulk Reservation Release utility with Single Event Seats should be selected.\r\n5. 1. Input the mandatory parameters\n2. Search for the Event under Event search option.\n3. Click on preview.\r\nExpected Result:\r\n1. The user should be able to search the Event.\n2. The details based on the selection should be displayed\r\n6. 1. Select the radio button \" Single Event Seats\"\n2. Verify whether the selected event(in Step 5) is still there.\r\nExpected Result:\r\nThe Event should not be present in the \"Single Event Seat\" page.\nThe user ias not allowed to release the single event and a package at the same time.\r\n7. Click on Log out.\r\nExpected Result:\r\nUser should log out from the application successfully\r\n8. 1. Choose Package Seats radio button.\n2. Search the Package for which reservation done in Prerequisite.\n3. Select the package and click on Preview.\r\nExpected Result:\r\n1. The user should be able to search the Package.\n2. The details based on the selection should be displayed.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.The logged in user should have the appropriate AFP permission to access \"Bulk Reservation Release\" Utility.\r\n2. Launch PV aaplication\r\n3. Login as with a valid Username and Password.\r\n4. 1. Go to the Utilities\n2. Select Bulk Reservation Release Utility from the drop down.\n3. Select Single Event Seats\r\n5. 1. Input the mandatory parameters\n2. Search for the Event under Event search option.\n3. Click on preview.\r\n6. 1. Select the radio button \" Single Event Seats\"\n2. Verify whether the selected event(in Step 5) is still there.\r\n7. Click on Log out.\r\n8. 1. Choose Package Seats radio button.\n2. Search the Package for which reservation done in Prerequisite.\n3. Select the package and click on Preview.",
        "expected": "1. Pre Requisite should be complete\r\n2. The application should be launched successfully.\r\n3. User should be able to login successfully.\r\n4. 1. The user is at Bulk Reservation Release utility with Single Event Seats should be selected.\r\n5. 1. The user should be able to search the Event.\n2. The details based on the selection should be displayed\r\n6. The Event should not be present in the \"Single Event Seat\" page.\nThe user ias not allowed to release the single event and a package at the same time.\r\n7. User should log out from the application successfully\r\n8. 1. The user should be able to search the Package.\n2. The details based on the selection should be displayed."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.20"
  },
  {
    "id": 30597429,
    "title": "Verify the datmart tables after releasing reservation orders via Bulk Reservation Release utility",
    "section_id": 1681357,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16673",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_pv_category": 17,
    "custom_refs": "C67581",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Launch PV Application\r\nExpected Result:\r\nPV Application should be launched successfully\r\n2. Login to the Application using suitable credentials\r\nExpected Result:\r\nLogin should be successful\r\n3. 1.Navigate to Event Mangement\r\n2.Create a new event\r\nExpected Result:\r\nEvent should be created successfullt. Let the event be EVT1\r\n4. 1.Navigate to Ticket Sales\r\n2.Select a patron\r\n3.Perform a Reservation transaction for the event EVT1 created above\r\nExpected Result:\r\nReservation Transaction should be completed successfully\r\n5. 1.Navigate to Bulk Reservation Release utility\r\n2.Enter input criteria corrseponding to the order created above\r\n3.Click PREVIEW\r\n4.Click RELEASE ALL\r\nExpected Result:\r\nReservation order should be released successfully\r\n6. Login to squirel application\r\n5.Connect to Datamart schema\r\n6.Verify the TICKET_DIM, ACTIVITY_DIM, EVEN_DIM, TICKET_FACT for the transaction completed above\r\nExpected Result:\r\nDetails should be updated correctly in these tables",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV Application\r\n2. Login to the Application using suitable credentials\r\n3. 1.Navigate to Event Mangement\r\n2.Create a new event\r\n4. 1.Navigate to Ticket Sales\r\n2.Select a patron\r\n3.Perform a Reservation transaction for the event EVT1 created above\r\n5. 1.Navigate to Bulk Reservation Release utility\r\n2.Enter input criteria corrseponding to the order created above\r\n3.Click PREVIEW\r\n4.Click RELEASE ALL\r\n6. Login to squirel application\r\n5.Connect to Datamart schema\r\n6.Verify the TICKET_DIM, ACTIVITY_DIM, EVEN_DIM, TICKET_FACT for the transaction completed above",
        "expected": "1. PV Application should be launched successfully\r\n2. Login should be successful\r\n3. Event should be created successfullt. Let the event be EVT1\r\n4. Reservation Transaction should be completed successfully\r\n5. Reservation order should be released successfully\r\n6. Details should be updated correctly in these tables"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.20"
  },
  {
    "id": 30597430,
    "title": "Verify that validation triggered when there is a change in Bulk Reservation Release parameters.",
    "section_id": 1681357,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-21521",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_pv_category": 30,
    "custom_refs": "C67419",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Create reservations for an event or package.\r\nExpected Result:\r\nReservation should be creted.\r\n2. 1. Navigate to Utilities > Reservation Release\r\n2. Enter in parameters for Event or Package to release.\r\n3. Click ?Preview?.\r\n4.  Click ?Preview?.\r\n5. Change any other Bulk Reservation Release parameters.\r\n6. Click on ?Release All?.\r\n3. Verify that  validation messages that states a Preview or Detail \r\nReport is needed got displayed.\r\nExpected Result:\r\nValidation should trigger against the Bulk \r\nReservation Release parameters. Release \r\nshould be started after clicking on 'Release \r\nAll' button.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Create reservations for an event or package.\r\n2. 1. Navigate to Utilities > Reservation Release\r\n2. Enter in parameters for Event or Package to release.\r\n3. Click ?Preview?.\r\n4.  Click ?Preview?.\r\n5. Change any other Bulk Reservation Release parameters.\r\n6. Click on ?Release All?.\r\n3. Verify that  validation messages that states a Preview or Detail \r\nReport is needed got displayed.",
        "expected": "1. Reservation should be creted.\r\n2. \r\n3. Validation should trigger against the Bulk \r\nReservation Release parameters. Release \r\nshould be started after clicking on 'Release \r\nAll' button."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.8.00"
  },
  {
    "id": 30597431,
    "title": "Verify the functionality of releasing  a specific buyer type that was reoffered in Bulk Reservation Release Utility",
    "section_id": 1681357,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19293",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 5,
    "custom_is_automated": true,
    "custom_pv_category": 30,
    "custom_refs": "C67503",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Launch PVNG application and login using valid credentials.\r\nExpected Result:\r\nUser must be able to login successfully.\r\n2. Reserve 3 separate orders to a package, each one with a different buyer type.\r\nEX.ADULT,CHILD,SENIOR\r\nExpected Result:\r\nReservation transaction created successfully\r\n3. Load the Reprice Utility and reoffer ADULT to CHILD- will be 1 order.\r\nExpected Result:\r\nThere are  2 orders with CHILD, 0 ADULT , 1 SENIOR\r\n4. Load the Reservation Release Utility. \r\nPreview with bare parameters:  Supplier/Release Date/Reservation Code/Package.\r\nExpected Result:\r\nAll 3 orders should be displayed in preview\r\n5. Add one buyer type (CHILD) in buyer type parameter and click on preview\r\nExpected Result:\r\n2 orders should be displayed in preview\r\n6. Logout from the application\r\nExpected Result:\r\nApplication should be logged out successfully\r\n7. Add 2 buyer types (CHILD & ADULT) in buyer type parameter and click on preview\r\nExpected Result:\r\n2 orders should be displayed in preview\r\n8. Add all 3 buyer types (CHILD , ADULT& SENIOR) in buyer type parameter and click on preview\r\nExpected Result:\r\nall the 3  orders should be displayed in preview\r\n9. Add all the buyer types Individually and verify the result\r\nExpected Result:\r\nonly one  order should be displayed for each  preview\r\n10. Repeat the above steps for single event and ensure the result\r\nExpected Result:\r\nOrders should be displayed according to the given input parameters",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PVNG application and login using valid credentials.\r\n2. Reserve 3 separate orders to a package, each one with a different buyer type.\r\nEX.ADULT,CHILD,SENIOR\r\n3. Load the Reprice Utility and reoffer ADULT to CHILD- will be 1 order.\r\n4. Load the Reservation Release Utility. \r\nPreview with bare parameters:  Supplier/Release Date/Reservation Code/Package.\r\n5. Add one buyer type (CHILD) in buyer type parameter and click on preview\r\n6. Logout from the application\r\n7. Add 2 buyer types (CHILD & ADULT) in buyer type parameter and click on preview\r\n8. Add all 3 buyer types (CHILD , ADULT& SENIOR) in buyer type parameter and click on preview\r\n9. Add all the buyer types Individually and verify the result\r\n10. Repeat the above steps for single event and ensure the result",
        "expected": "1. User must be able to login successfully.\r\n2. Reservation transaction created successfully\r\n3. There are  2 orders with CHILD, 0 ADULT , 1 SENIOR\r\n4. All 3 orders should be displayed in preview\r\n5. 2 orders should be displayed in preview\r\n6. Application should be logged out successfully\r\n7. 2 orders should be displayed in preview\r\n8. all the 3  orders should be displayed in preview\r\n9. only one  order should be displayed for each  preview\r\n10. Orders should be displayed according to the given input parameters"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.4.00"
  },
  {
    "id": 30597432,
    "title": "Generate Bulk Market Permission  utility report and verify the status values in DB for the report",
    "section_id": 1681358,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-15424",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 30,
    "custom_refs": "C56654",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Launch PV application and login as bouser\r\nExpected Result:\r\nApplication should be launched successfully and login should be successful\r\n2. Select Utilities from the drop down\r\nExpected Result:\r\nUtilities portal should be displayed\r\n3. select \"Bulk Market Permission \" from the Set Utility For drop down\r\nExpected Result:\r\nUtility should be displayed\r\n4. Click on FIND button\r\nExpected Result:\r\nCount of all the available patrons should be displayed\r\n5. 1.  Click on REPORT button\r\n2. Verify that the export gets generated\r\nExpected Result:\r\n1. Export should be generated\r\n6. 1. Log in to respective DB\r\n2. Run the query\r\n\r\nSelect distinct e.Report_id,e.DESCRIPTION,r.REPORT_STAGE_CODE, r.operator_login, r.REPORT_STATUS_Code, r.PRE_PROCESS_START_TIME, r.DATA_COLLECTION_START_TIME, r.POST_PROCESS_START_TIME, r.REPORT_GENERATION_START_TIME, r.REPORT_STREAMING_START_TIME, r.REPORT_END_TIME, \r\nr.ERROR_MESSAGE from report_process r,report e where e.report_id=r.report_id and e.report_id=xxx\r\nExpected Result:\r\nThe Status value should be C\r\n7. 1. Close the export\n2. Select logout from the drop down\r\nExpected Result:\r\nUser should be logged out successfully\r\n8. 1.  Click on Cancel button\r\nExpected Result:\r\n1. Report should be cancelled\r\n9. 1. Log in to respective DB\r\n2. Run the query\r\n\r\nSelect distinct e.Report_id,e.DESCRIPTION,r.REPORT_STAGE_CODE, r.operator_login, r.REPORT_STATUS_Code, r.PRE_PROCESS_START_TIME, r.DATA_COLLECTION_START_TIME, r.POST_PROCESS_START_TIME, r.REPORT_GENERATION_START_TIME, r.REPORT_STREAMING_START_TIME, r.REPORT_END_TIME, \r\nr.ERROR_MESSAGE from report_process r,report e where e.report_id=r.report_id and e.report_id=xxx\r\nExpected Result:\r\nThe Status value should be N",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV application and login as bouser\r\n2. Select Utilities from the drop down\r\n3. select \"Bulk Market Permission \" from the Set Utility For drop down\r\n4. Click on FIND button\r\n5. 1.  Click on REPORT button\r\n2. Verify that the export gets generated\r\n6. 1. Log in to respective DB\r\n2. Run the query\r\n\r\nSelect distinct e.Report_id,e.DESCRIPTION,r.REPORT_STAGE_CODE, r.operator_login, r.REPORT_STATUS_Code, r.PRE_PROCESS_START_TIME, r.DATA_COLLECTION_START_TIME, r.POST_PROCESS_START_TIME, r.REPORT_GENERATION_START_TIME, r.REPORT_STREAMING_START_TIME, r.REPORT_END_TIME, \r\nr.ERROR_MESSAGE from report_process r,report e where e.report_id=r.report_id and e.report_id=xxx\r\n7. 1. Close the export\n2. Select logout from the drop down\r\n8. 1.  Click on Cancel button\r\n9. 1. Log in to respective DB\r\n2. Run the query\r\n\r\nSelect distinct e.Report_id,e.DESCRIPTION,r.REPORT_STAGE_CODE, r.operator_login, r.REPORT_STATUS_Code, r.PRE_PROCESS_START_TIME, r.DATA_COLLECTION_START_TIME, r.POST_PROCESS_START_TIME, r.REPORT_GENERATION_START_TIME, r.REPORT_STREAMING_START_TIME, r.REPORT_END_TIME, \r\nr.ERROR_MESSAGE from report_process r,report e where e.report_id=r.report_id and e.report_id=xxx",
        "expected": "1. Application should be launched successfully and login should be successful\r\n2. Utilities portal should be displayed\r\n3. Utility should be displayed\r\n4. Count of all the available patrons should be displayed\r\n5. 1. Export should be generated\r\n6. The Status value should be C\r\n7. User should be logged out successfully\r\n8. 1. Report should be cancelled\r\n9. The Status value should be N"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.2.10"
  },
  {
    "id": 30597433,
    "title": "Verify the Scheduled Payment Utility Confirmation Emails received  for each of the installments by running the scheduled payment utility after creating cash receipt for partial amount",
    "section_id": 1681359,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-18746",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 7,
    "custom_refs": "C36641",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite:\nCreate a scheduled payment plan and complete a receivable transaction with the above created payment plan\r\nExpected Result:\r\nPre-Requisite should be Succesfuly completed\r\n2. Launch the PV Application\r\nExpected Result:\r\nPV application should be launched successfully\r\n3. Select Scheduled payment utility\r\nExpected Result:\r\nThe Scheduled payment utility should be displayed\r\n4. 1. Select the supplier from the supplier drop down\n2. Select the payment plan from the payment plan drop down\n3. Click on \"Find\" button\n4.check the Send Confimation Email Checkbox\r\nExpected Result:\r\nThe results should be displayed\r\n5. Click on \"Validate\" button correponding to first installment\r\nExpected Result:\r\nAll the details should be correct\r\n6. Since the Send Confirmation Email Checkbox is Checked notification email will be sent to user\r\nExpected Result:\r\nAn Email should  should be received to the patron\r\n7. Navigate to Ticket Services and Create Cash Receipt for an amount which covers less than than an installment amount\r\nExpected Result:\r\nCash receipt should be created\r\n8. 1. Select \"Scheduled Payments\" utility\n2. Select the installment validated in step 4\nSelect any user associated to the same organisation in \"Run as User\"\n3.Select Agency\r\nExpected Result:\r\nError Message should be Recieved\r\n9. Since the Send Confirmation Email Checkbox is Checked notification email will be sent to user\r\nExpected Result:\r\nError Message should be Received with Details and how to rectify\r\n10. 1. If the \"Current Installment Balance\" is 0\na.Click on \"Remove\" icon corresponding to the card details\nb. Click on Recalculate\n2.If the current installment is not zero\n1. If the \"current installment balance \"is not 0 but has lesser value than the amount in the \"Amount\" text box\n\n1. Input the same amount as that of \"current installment balance\" in \"Amount\" text box \n2. Click on Recalculate\r\nExpected Result:\r\nA message \"No error\" should be displayed\r\n11. On Succesful Completion a mail will be Received for the patron\r\nExpected Result:\r\nConfirmation Emails should be received",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite:\nCreate a scheduled payment plan and complete a receivable transaction with the above created payment plan\r\n2. Launch the PV Application\r\n3. Select Scheduled payment utility\r\n4. 1. Select the supplier from the supplier drop down\n2. Select the payment plan from the payment plan drop down\n3. Click on \"Find\" button\n4.check the Send Confimation Email Checkbox\r\n5. Click on \"Validate\" button correponding to first installment\r\n6. Since the Send Confirmation Email Checkbox is Checked notification email will be sent to user\r\n7. Navigate to Ticket Services and Create Cash Receipt for an amount which covers less than than an installment amount\r\n8. 1. Select \"Scheduled Payments\" utility\n2. Select the installment validated in step 4\nSelect any user associated to the same organisation in \"Run as User\"\n3.Select Agency\r\n9. Since the Send Confirmation Email Checkbox is Checked notification email will be sent to user\r\n10. 1. If the \"Current Installment Balance\" is 0\na.Click on \"Remove\" icon corresponding to the card details\nb. Click on Recalculate\n2.If the current installment is not zero\n1. If the \"current installment balance \"is not 0 but has lesser value than the amount in the \"Amount\" text box\n\n1. Input the same amount as that of \"current installment balance\" in \"Amount\" text box \n2. Click on Recalculate\r\n11. On Succesful Completion a mail will be Received for the patron",
        "expected": "1. Pre-Requisite should be Succesfuly completed\r\n2. PV application should be launched successfully\r\n3. The Scheduled payment utility should be displayed\r\n4. The results should be displayed\r\n5. All the details should be correct\r\n6. An Email should  should be received to the patron\r\n7. Cash receipt should be created\r\n8. Error Message should be Recieved\r\n9. Error Message should be Received with Details and how to rectify\r\n10. A message \"No error\" should be displayed\r\n11. Confirmation Emails should be received"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.2.00"
  },
  {
    "id": 30597434,
    "title": "Verify datamart tables after running scheduled payment utility",
    "section_id": 1681359,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-14806",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 30,
    "custom_refs": "C67582",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Launch PV Appliaction using the link provided\r\nExpected Result:\r\nPV Application should be launched successfully\r\n2. Login to the Application using suitable credentials\r\nExpected Result:\r\nLogin should be successful\r\n3. 1.Navigate to Utilities portal\r\n2.Selet the option 'Scheduled Payments' from the drop down 'Set Utility For'\r\n3.Select the supplier corresponding to the scheduled payment plan mentioned above\r\n4.Select the scheduled payment plan mentioned above from the 'Payment Plan' drop down\r\n5.Click FIND to display the installments of this payment plan\r\n6.Validate the installments\r\n7.Run the sheduled payment utility for this installment\r\nExpected Result:\r\nScheduled payment Run should be completed successfully for the installments.\r\n4. 1.Navigate to Ticket Services\r\n2.select the order corresponding to the Receivable created in pre Requisite\r\n3.Verify the Sales balance for the order\r\nExpected Result:\r\nSales Balance for the order should be the updated to ZERO.\r\n5. 1.Navigate to Supplier Administration\r\n2.Select any supplier, say S1\r\n3.Navigate to Payment plans tab\r\n4.Create a new payment plan, say P1\r\n5.Select the option 'Optional' or 'Required' for the field 'Use Scheduled payments\r\nExpected Result:\r\nPayment plan which is enabled for scheduled payment should be created successfully\r\n6. 1.Navigate to Event Administration\r\n2.Create a new event, say EVT1 for the same supplier S1 (for which the payment plan was craeted)\r\nExpected Result:\r\nEvent should be created successfully\r\n7. 1.Navigate to Event Access tab for the event mentioned above\r\n2.Navigate to Payment Plan tab\r\n3.Add the payment plan created above for this event\r\nExpected Result:\r\nPayment plan should be be added successfully to this event\r\n8. 1.Navigate to Ticket sales\r\n2.Select a patron\r\n3.Create a receivable for this patron for the event created above using the payment plan created above\r\nExpected Result:\r\nReceivable Transaction should be completed successfully\r\n9. 1.navigate to Ticket Services\r\n2.select the order created above\r\n3.Navigate to Receivables tab\r\n4.Click the icon to configure payment methods\r\n5.Navigate to 'Cards on File' tab in the Scheduled payments window\r\n6.Add the cards for the patron\r\n7.Navigate to Payments tab\r\n8.Choose payment methods (credit cards) for all the installments\r\n9.Click APPLY CHANGES\r\nExpected Result:\r\nPayment methods should be configured for all the installments\r\n10. Login to squirel application\r\n5.Connect to Datamart schema\r\n6.Verify the TICKET_DIM, ACTIVITY_DIM, EVEN_DIM, TICKET_FACT for the transaction completed above\r\nExpected Result:\r\nDetails should be updated correctly in these tables",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV Appliaction using the link provided\r\n2. Login to the Application using suitable credentials\r\n3. 1.Navigate to Utilities portal\r\n2.Selet the option 'Scheduled Payments' from the drop down 'Set Utility For'\r\n3.Select the supplier corresponding to the scheduled payment plan mentioned above\r\n4.Select the scheduled payment plan mentioned above from the 'Payment Plan' drop down\r\n5.Click FIND to display the installments of this payment plan\r\n6.Validate the installments\r\n7.Run the sheduled payment utility for this installment\r\n4. 1.Navigate to Ticket Services\r\n2.select the order corresponding to the Receivable created in pre Requisite\r\n3.Verify the Sales balance for the order\r\n5. 1.Navigate to Supplier Administration\r\n2.Select any supplier, say S1\r\n3.Navigate to Payment plans tab\r\n4.Create a new payment plan, say P1\r\n5.Select the option 'Optional' or 'Required' for the field 'Use Scheduled payments\r\n6. 1.Navigate to Event Administration\r\n2.Create a new event, say EVT1 for the same supplier S1 (for which the payment plan was craeted)\r\n7. 1.Navigate to Event Access tab for the event mentioned above\r\n2.Navigate to Payment Plan tab\r\n3.Add the payment plan created above for this event\r\n8. 1.Navigate to Ticket sales\r\n2.Select a patron\r\n3.Create a receivable for this patron for the event created above using the payment plan created above\r\n9. 1.navigate to Ticket Services\r\n2.select the order created above\r\n3.Navigate to Receivables tab\r\n4.Click the icon to configure payment methods\r\n5.Navigate to 'Cards on File' tab in the Scheduled payments window\r\n6.Add the cards for the patron\r\n7.Navigate to Payments tab\r\n8.Choose payment methods (credit cards) for all the installments\r\n9.Click APPLY CHANGES\r\n10. Login to squirel application\r\n5.Connect to Datamart schema\r\n6.Verify the TICKET_DIM, ACTIVITY_DIM, EVEN_DIM, TICKET_FACT for the transaction completed above",
        "expected": "1. PV Application should be launched successfully\r\n2. Login should be successful\r\n3. Scheduled payment Run should be completed successfully for the installments.\r\n4. Sales Balance for the order should be the updated to ZERO.\r\n5. Payment plan which is enabled for scheduled payment should be created successfully\r\n6. Event should be created successfully\r\n7. Payment plan should be be added successfully to this event\r\n8. Receivable Transaction should be completed successfully\r\n9. Payment methods should be configured for all the installments\r\n10. Details should be updated correctly in these tables"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.2.00"
  },
  {
    "id": 30597435,
    "title": "Verify the Resulting credit of true types C is having OIL(Open Item Liability) type after distribution",
    "section_id": 1681360,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-21251",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C23046",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Navigate to System Admin-Codes\r\n2.Select Open Item Liability type and click on \r\nNew\r\n3.Create an Open Item Liability of TRUE type \r\n'Pending'.\r\n4.Select Target Distribution Open Item \r\nLiability  which is of true type Account Credit \r\n'C'\r\n5.Select THPR payment method for this \r\nliability\r\n6.Set Replay 2.0 settings in AFP.\r\nSet Seller Proceeds Account credit \r\ntype-Pending\r\n2. Login to pv application\r\nExpected Result:\r\nPV application should be launched\r\n3. Navigate to ticket sales and complete a sale\r\nExpected Result:\r\nThe sale has been completed succesfully\r\n4. Login to stubhub and place the tickets for \r\nresale\r\nExpected Result:\r\nThe ticket has been placed for resale\r\n5. Purchase the tickets with another patron and \r\ncomplete the resale\r\nExpected Result:\r\nThe resale has been succesfully complted\r\n6. Navigate to Credit run utility and complete \r\ndistribution\r\nExpected Result:\r\nDistribution complted sucessfully\r\n7. Verify the Resulting credit of true types â€˜Câ€™ is \r\nhaving OIL(Open Item Liability) type after \r\ndistribution\r\nExpected Result:\r\nThe Resulting credit of true types â€˜Câ€™ should have \r\ndesignated distribution OIL(Open Item Liability) \r\ntype after distribution and it should be the one set \r\nas Target OIL of the Pending OIL created in the \r\nPre-requisite.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Navigate to System Admin-Codes\r\n2.Select Open Item Liability type and click on \r\nNew\r\n3.Create an Open Item Liability of TRUE type \r\n'Pending'.\r\n4.Select Target Distribution Open Item \r\nLiability  which is of true type Account Credit \r\n'C'\r\n5.Select THPR payment method for this \r\nliability\r\n6.Set Replay 2.0 settings in AFP.\r\nSet Seller Proceeds Account credit \r\ntype-Pending\r\n2. Login to pv application\r\n3. Navigate to ticket sales and complete a sale\r\n4. Login to stubhub and place the tickets for \r\nresale\r\n5. Purchase the tickets with another patron and \r\ncomplete the resale\r\n6. Navigate to Credit run utility and complete \r\ndistribution\r\n7. Verify the Resulting credit of true types â€˜Câ€™ is \r\nhaving OIL(Open Item Liability) type after \r\ndistribution",
        "expected": "1. \r\n2. PV application should be launched\r\n3. The sale has been completed succesfully\r\n4. The ticket has been placed for resale\r\n5. The resale has been succesfully complted\r\n6. Distribution complted sucessfully\r\n7. The Resulting credit of true types â€˜Câ€™ should have \r\ndesignated distribution OIL(Open Item Liability) \r\ntype after distribution and it should be the one set \r\nas Target OIL of the Pending OIL created in the \r\nPre-requisite."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.8.00"
  },
  {
    "id": 30597436,
    "title": "Verify the Credit distribution Run Report for specific Transaction Date Range",
    "section_id": 1681361,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-13138",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 30,
    "custom_refs": "C68513",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Login as PVNG application\r\n2.Login the patron account\r\n3.Create some pending account credit from secondary market\r\n4.Distribute the credits .Note the distribution dates\r\nExpected Result:\r\nThe transaction should be completed successfully\r\n2. Site should be launched\r\n3. Login as bo user using the following credentials:\r\nUsername: \r\nPassword: \r\nExpected Result:\r\nUser should be logged in\r\n4. Select Utilities from the drop down list\r\nExpected Result:\r\nUser should be navigated to the utilities page\r\n5. Select Credit Distribution/Disbursement from the Set Utility For drop down list\r\nExpected Result:\r\nUser should be navigated to the Credit Distribution/Disbursement page\r\n6. 1. Click on new button\r\n2. Enter the required parameters:\r\n  Supplier\r\n  Run Type as distribution\r\n Open Item Liability Type\r\n  Sale Type\r\n3. Enter the Run Time settings details\r\nExpected Result:\r\nThe user should be able to input the parameters\r\n7. 1. Input the distribution date in TO and FROM fields mentioned in the pre-requisite\r\n2. Click on Preview button\r\nExpected Result:\r\nThe total number of credits,Total amount of money to be distributed and the Total number of accounts corresponding to the search criteria should be displayed in the search result block\r\n8. Click on Apply Changes button\r\nExpected Result:\r\nThe Credit Distribution Run should be created successfully\r\n9. Click on the Report button\r\nExpected Result:\r\n1. The Credit Run Report should contain records between the FROM and TO date.\r\n2. The credit run report should be generated with the following information\r\n Patron Account ID\r\n Patron Account Name\r\n Open Item Liability ID\r\n Open Item Liability Source Type\r\n Open Item Liability Type\r\n Distribution/ Disbursement Amount\r\n10. Click on Process Run Button\r\nExpected Result:\r\nThe process Run should be started successfully\r\n11. 1.Click on the Search Result button\r\n2.Input the details to search the credit run\r\n3. Verify the Status of the run\r\nExpected Result:\r\nThe Status should be in the processing status.\r\n12. 1.Click on the Search Result button\n2.Input the details to search the credit run\n3. Verify the Status of the run\r\nExpected Result:\r\nThe Status should be in the processing status.\r\n13. 1.Click on the report icon\r\n2.Verify the generated report\r\nExpected Result:\r\nThe activity summary report should be generated successfully. The report should include the detail of each account and distribution payment method for which open item liability activity took place in the specified distibution TO and FROM date\r\n14. 1.Search the credit run created.\r\n2.Verify the status of the credit run\r\nExpected Result:\r\nThe credit run should be in the complete status\r\n15. 1. Click on the Details report icon for the credit run\r\n2. Verify the activity Details report\r\nExpected Result:\r\n1. The report should be successfully generated.\r\n2. The report should include the details of each open item liability that took place in the specified date range\r\n16. 1.Navigate to Ticket Sales\r\n2.Enter the Patron Id mentioned in the pre-requisite.\r\n3.Click on the Account Balance tab\r\n4.Verify the Account Credit\r\nExpected Result:\r\nA new transaction id should be recorded.The balance amount should be displayed.The activity details should be displayed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Login as PVNG application\r\n2.Login the patron account\r\n3.Create some pending account credit from secondary market\r\n4.Distribute the credits .Note the distribution dates\r\n2. \r\n3. Login as bo user using the following credentials:\r\nUsername: \r\nPassword: \r\n4. Select Utilities from the drop down list\r\n5. Select Credit Distribution/Disbursement from the Set Utility For drop down list\r\n6. 1. Click on new button\r\n2. Enter the required parameters:\r\n  Supplier\r\n  Run Type as distribution\r\n Open Item Liability Type\r\n  Sale Type\r\n3. Enter the Run Time settings details\r\n7. 1. Input the distribution date in TO and FROM fields mentioned in the pre-requisite\r\n2. Click on Preview button\r\n8. Click on Apply Changes button\r\n9. Click on the Report button\r\n10. Click on Process Run Button\r\n11. 1.Click on the Search Result button\r\n2.Input the details to search the credit run\r\n3. Verify the Status of the run\r\n12. 1.Click on the Search Result button\n2.Input the details to search the credit run\n3. Verify the Status of the run\r\n13. 1.Click on the report icon\r\n2.Verify the generated report\r\n14. 1.Search the credit run created.\r\n2.Verify the status of the credit run\r\n15. 1. Click on the Details report icon for the credit run\r\n2. Verify the activity Details report\r\n16. 1.Navigate to Ticket Sales\r\n2.Enter the Patron Id mentioned in the pre-requisite.\r\n3.Click on the Account Balance tab\r\n4.Verify the Account Credit",
        "expected": "1. The transaction should be completed successfully\r\n2. Site should be launched\r\n3. User should be logged in\r\n4. User should be navigated to the utilities page\r\n5. User should be navigated to the Credit Distribution/Disbursement page\r\n6. The user should be able to input the parameters\r\n7. The total number of credits,Total amount of money to be distributed and the Total number of accounts corresponding to the search criteria should be displayed in the search result block\r\n8. The Credit Distribution Run should be created successfully\r\n9. 1. The Credit Run Report should contain records between the FROM and TO date.\r\n2. The credit run report should be generated with the following information\r\n Patron Account ID\r\n Patron Account Name\r\n Open Item Liability ID\r\n Open Item Liability Source Type\r\n Open Item Liability Type\r\n Distribution/ Disbursement Amount\r\n10. The process Run should be started successfully\r\n11. The Status should be in the processing status.\r\n12. The Status should be in the processing status.\r\n13. The activity summary report should be generated successfully. The report should include the detail of each account and distribution payment method for which open item liability activity took place in the specified distibution TO and FROM date\r\n14. The credit run should be in the complete status\r\n15. 1. The report should be successfully generated.\r\n2. The report should include the details of each open item liability that took place in the specified date range\r\n16. A new transaction id should be recorded.The balance amount should be displayed.The activity details should be displayed"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.0.30"
  },
  {
    "id": 30597437,
    "title": "Verify the Credit distribution Run Report for specific Distribution Date Range",
    "section_id": 1681361,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-13070",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 30,
    "custom_refs": "C68514",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Login as PVNG application\r\n2.Login the patron account\r\n3.Create some account credit\r\n4.Note the distribution dates\r\nExpected Result:\r\nThe transaction should be completed successfully\r\n2. Site should be launched\r\n3. Login as bo user using the following credentials:\nUsername: \nPassword: \r\nExpected Result:\r\nUser should be logged in\r\n4. Select Utilities from the drop down list\r\nExpected Result:\r\nUser should be navigated to the utilities page\r\n5. Select Credit Distribution/Disbursement from the Set Utility For drop down list\r\nExpected Result:\r\nUser should be navigated to the Credit Distribution/Disbursement page\r\n6. 1. Click on new button\r\n2. Enter the required parameters:\r\n  Supplier\r\n  Run Type as Distribution\r\n Open Item Liability Type\r\n  Sale Type\r\n3. Enter the Run Time settings details\r\nExpected Result:\r\nThe user should be able to input the parameters\r\n7. 1. Input the distribution date in TO and FROM fields mentioned in the pre-requisite\r\n2. Click on Preview button\r\nExpected Result:\r\nThe total number of credits,Total amount of money to be distributed and the Total number of accounts corresponding to the search criteria should be displayed in the search result block\r\n8. Click on Apply Changes button\r\nExpected Result:\r\nThe Credit Distribution Run should be created successfully\r\n9. Click on the Report button\r\nExpected Result:\r\n1. The Credit Run Report should contain records between the FROM and TO date.\r\n2. The credit run report should be generated with the following information\r\n Patron Account ID\r\n Patron Account Name\r\n Open Item Liability ID\r\n Open Item Liability Source Type\r\n Open Item Liability Type\r\n Distribution/ Disbursement Amount\r\n10. Click on Process Run Button\r\nExpected Result:\r\nThe process Run should be started successfully\r\n11. 1.Click on the Search Result button\r\n2.Input the details to search the credit run\r\n3. Verify the Status of the run\r\nExpected Result:\r\nThe Status should be in the processing status.\r\n12. 1.Click on the Search Result button\n2.Input the details to search the credit run\n3. Verify the Status of the run\r\nExpected Result:\r\nThe Status should be in the processing status.\r\n13. 1.Click on the report icon\r\n2.Verify the generated report\r\nExpected Result:\r\nThe activity summary report should be generated successfully. The report should include the detail of each account and distribution payment method for which open item liability activity took place in the specified distibution TO and FROM date\r\n14. 1.Search the credit run created.\r\n2.Verify the status of the credit run\r\nExpected Result:\r\nThe credit run should be in the complete status\r\n15. 1. Click on the Details report icon for the credit run\r\n2. Verify the activity Details report\r\nExpected Result:\r\n1. The report should be successfully generated.\r\n2. The report should include the details of each open item liability that took place in the specified date range\r\n16. 1.Navigate to Ticket Sales\r\n2.Enter the Patron Id mentioned in the pre-requisite.\r\n3.Click on the Account Balance tab\r\n4.Verify the Account Credit\r\nExpected Result:\r\nA new transaction id should be recorded.The balance amount should be displayed.The activity details should be displayed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Login as PVNG application\r\n2.Login the patron account\r\n3.Create some account credit\r\n4.Note the distribution dates\r\n2. \r\n3. Login as bo user using the following credentials:\nUsername: \nPassword: \r\n4. Select Utilities from the drop down list\r\n5. Select Credit Distribution/Disbursement from the Set Utility For drop down list\r\n6. 1. Click on new button\r\n2. Enter the required parameters:\r\n  Supplier\r\n  Run Type as Distribution\r\n Open Item Liability Type\r\n  Sale Type\r\n3. Enter the Run Time settings details\r\n7. 1. Input the distribution date in TO and FROM fields mentioned in the pre-requisite\r\n2. Click on Preview button\r\n8. Click on Apply Changes button\r\n9. Click on the Report button\r\n10. Click on Process Run Button\r\n11. 1.Click on the Search Result button\r\n2.Input the details to search the credit run\r\n3. Verify the Status of the run\r\n12. 1.Click on the Search Result button\n2.Input the details to search the credit run\n3. Verify the Status of the run\r\n13. 1.Click on the report icon\r\n2.Verify the generated report\r\n14. 1.Search the credit run created.\r\n2.Verify the status of the credit run\r\n15. 1. Click on the Details report icon for the credit run\r\n2. Verify the activity Details report\r\n16. 1.Navigate to Ticket Sales\r\n2.Enter the Patron Id mentioned in the pre-requisite.\r\n3.Click on the Account Balance tab\r\n4.Verify the Account Credit",
        "expected": "1. The transaction should be completed successfully\r\n2. Site should be launched\r\n3. User should be logged in\r\n4. User should be navigated to the utilities page\r\n5. User should be navigated to the Credit Distribution/Disbursement page\r\n6. The user should be able to input the parameters\r\n7. The total number of credits,Total amount of money to be distributed and the Total number of accounts corresponding to the search criteria should be displayed in the search result block\r\n8. The Credit Distribution Run should be created successfully\r\n9. 1. The Credit Run Report should contain records between the FROM and TO date.\r\n2. The credit run report should be generated with the following information\r\n Patron Account ID\r\n Patron Account Name\r\n Open Item Liability ID\r\n Open Item Liability Source Type\r\n Open Item Liability Type\r\n Distribution/ Disbursement Amount\r\n10. The process Run should be started successfully\r\n11. The Status should be in the processing status.\r\n12. The Status should be in the processing status.\r\n13. The activity summary report should be generated successfully. The report should include the detail of each account and distribution payment method for which open item liability activity took place in the specified distibution TO and FROM date\r\n14. The credit run should be in the complete status\r\n15. 1. The report should be successfully generated.\r\n2. The report should include the details of each open item liability that took place in the specified date range\r\n16. A new transaction id should be recorded.The balance amount should be displayed.The activity details should be displayed"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.0.30"
  },
  {
    "id": 30597438,
    "title": "Process Credit Distribution Run when multi Patron Accounts are selected",
    "section_id": 1681362,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-13070",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 30,
    "custom_refs": "C68985",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Login as My Tickets application\r\n2.Login to the seller patron account\r\n3.Perform some replay transactions\r\n4.Login to the buyer patron account and buy the tickets put for replay\r\n4.Note the Seller Patron Account\r\n5. Similarly, perform some more transactions for other seller and buyer patron accounts.\r\nExpected Result:\r\nThe transaction should be completed successfully\r\n2. Site should be launched\r\n3. Login as bo user using the following credentials:\nUsername: \nPassword: \r\nExpected Result:\r\nUser should be logged in\r\n4. Select Utilities from the drop down list\r\nExpected Result:\r\nUser should be navigated to the utilities page\r\n5. Select Credit Distribution/Disbursement from the Set Utility For drop down list\r\nExpected Result:\r\nUser should be navigated to the Credit Distribution/Disbursement page\r\n6. 1. Click on new button\r\n2. Enter the required parameters:\r\n  Supplier\r\n  Run Type as Distribution\r\n Open Item Liability Type\r\n  Sale Type\r\n3. Enter the Run Time settings details\r\nExpected Result:\r\nThe user should be able to input the parameters\r\n7. 1. Go to the Patron tab\r\n2. Search and select multiple patron accounts as mentioned in pre requisite\r\n3. Select Include\r\n4. Click on Preview button\r\nExpected Result:\r\nThe total number of credits,Total amount of money to be distributed and the Total number of accounts corresponding to the search criteria should be displayed in the search result block\r\n8. Click on Apply Changes button\r\nExpected Result:\r\nThe Credit Distribution Run should be created successfully\r\n9. Click on Process Run Button\r\nExpected Result:\r\nThe process Run should be started successfully\r\n10. 1.Click on the Search Result button\n2.Input the details to search the credit run\n3. Verify the Status of the run\r\nExpected Result:\r\nThe Status should be in the completed status.\r\n11. 1.Navigate to Ticket Sales\r\n2.Enter the Seller Patron Ids mentioned in the pre-requisite.\r\n3.Click on the Account Balance tab\r\n4.Verify the Account Credit\r\nExpected Result:\r\nA new transaction id should be recorded.The balance amount should be displayed.The activity details should be displayed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Login as My Tickets application\r\n2.Login to the seller patron account\r\n3.Perform some replay transactions\r\n4.Login to the buyer patron account and buy the tickets put for replay\r\n4.Note the Seller Patron Account\r\n5. Similarly, perform some more transactions for other seller and buyer patron accounts.\r\n2. \r\n3. Login as bo user using the following credentials:\nUsername: \nPassword: \r\n4. Select Utilities from the drop down list\r\n5. Select Credit Distribution/Disbursement from the Set Utility For drop down list\r\n6. 1. Click on new button\r\n2. Enter the required parameters:\r\n  Supplier\r\n  Run Type as Distribution\r\n Open Item Liability Type\r\n  Sale Type\r\n3. Enter the Run Time settings details\r\n7. 1. Go to the Patron tab\r\n2. Search and select multiple patron accounts as mentioned in pre requisite\r\n3. Select Include\r\n4. Click on Preview button\r\n8. Click on Apply Changes button\r\n9. Click on Process Run Button\r\n10. 1.Click on the Search Result button\n2.Input the details to search the credit run\n3. Verify the Status of the run\r\n11. 1.Navigate to Ticket Sales\r\n2.Enter the Seller Patron Ids mentioned in the pre-requisite.\r\n3.Click on the Account Balance tab\r\n4.Verify the Account Credit",
        "expected": "1. The transaction should be completed successfully\r\n2. Site should be launched\r\n3. User should be logged in\r\n4. User should be navigated to the utilities page\r\n5. User should be navigated to the Credit Distribution/Disbursement page\r\n6. The user should be able to input the parameters\r\n7. The total number of credits,Total amount of money to be distributed and the Total number of accounts corresponding to the search criteria should be displayed in the search result block\r\n8. The Credit Distribution Run should be created successfully\r\n9. The process Run should be started successfully\r\n10. The Status should be in the completed status.\r\n11. A new transaction id should be recorded.The balance amount should be displayed.The activity details should be displayed"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.0.30"
  },
  {
    "id": 30597439,
    "title": "Verify that liabilities and receivables of trait associated patrons are only shown when multiple traits are included but no patron is not included.",
    "section_id": 1681363,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16034",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 30,
    "custom_refs": "C54519",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1. A. Login to PVNG application.\n B. Create patron 'xyz1' whose trait should be set as 'Trait1' from Patron Management.\nC.  Perform a sale and create a credit of $20\nD. Perform another sale and create a receivable of $10\nE. Ensure that no other liability and receivable exist for the patron\r\nExpected Result:\r\nAll the Pre-requisites should be met successfully.\r\n2. Navigate to the Utilities tab\r\nExpected Result:\r\nUtilities portal will be opened successfully.\r\n3. Select Credit Run Utility in the \"set Utility for\" field\r\nExpected Result:\r\nUser should be able to select the \"Credit Run Utility\"\r\n4. Click on New Button\r\nExpected Result:\r\nThe Portal for creating new Credit Run Utility will be opened.\r\n5. Select 'Trait1','Trait2' in Trait tab with include option. Select nothing in Patron tab.\n\nClick Apply changes\r\nExpected Result:\r\nThe Liabilities and receivables count should be displayed\r\n6. Verify the liabilities and receivables counts\r\nExpected Result:\r\nLiability count should be 2. Receivable count should be 2. Liability total should be $30. Cash Receipts total should be $25.\r\n7. Log out from the application\r\nExpected Result:\r\nUser should be able to log out successfully.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. A. Login to PVNG application.\n B. Create patron 'xyz1' whose trait should be set as 'Trait1' from Patron Management.\nC.  Perform a sale and create a credit of $20\nD. Perform another sale and create a receivable of $10\nE. Ensure that no other liability and receivable exist for the patron\r\n2. Navigate to the Utilities tab\r\n3. Select Credit Run Utility in the \"set Utility for\" field\r\n4. Click on New Button\r\n5. Select 'Trait1','Trait2' in Trait tab with include option. Select nothing in Patron tab.\n\nClick Apply changes\r\n6. Verify the liabilities and receivables counts\r\n7. Log out from the application",
        "expected": "1. All the Pre-requisites should be met successfully.\r\n2. Utilities portal will be opened successfully.\r\n3. User should be able to select the \"Credit Run Utility\"\r\n4. The Portal for creating new Credit Run Utility will be opened.\r\n5. The Liabilities and receivables count should be displayed\r\n6. Liability count should be 2. Receivable count should be 2. Liability total should be $30. Cash Receipts total should be $25.\r\n7. User should be able to log out successfully."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.30"
  },
  {
    "id": 30597440,
    "title": "Verify that newly created receivables and liabilities of a patron are included in credit run.",
    "section_id": 1681363,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16034",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 30,
    "custom_refs": "C54525",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. A. Login to PVNG application.\n B. Create patron 'xyz1'\nC. Perform a sale and create a credit of $20\nD. Perform another sale and create a receivable of $10\nE. Ensure that no other liability and receivable exist for the patron\r\nExpected Result:\r\nAll the Pre-requisites should be met successfully.\r\n2. Navigate to the Utilities tab\r\nExpected Result:\r\nUtilities portal will be opened successfully.\r\n3. Select Credit Run Utility in the \"set Utility for\" field\r\nExpected Result:\r\nUser should be able to select the \"Credit Run Utility\"\r\n4. Click on New Button\r\nExpected Result:\r\nThe Portal for creating new Credit Run Utility will be opened.\r\n5. Select 'xyz1' in patron tab with include option. Select nothing in traits tab.\n\nClick Apply changes\r\nExpected Result:\r\nThe Liabilities and receivables count should be displayed\r\n6. Verify the liabilities and receivables counts\r\nExpected Result:\r\nLiability count should be 1. Receivable count should be 1. Liability total should be $20. Cash Receipts total should be $10.\r\n7. Log out from the application\r\nExpected Result:\r\nUser should be able to log out successfully.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. A. Login to PVNG application.\n B. Create patron 'xyz1'\nC. Perform a sale and create a credit of $20\nD. Perform another sale and create a receivable of $10\nE. Ensure that no other liability and receivable exist for the patron\r\n2. Navigate to the Utilities tab\r\n3. Select Credit Run Utility in the \"set Utility for\" field\r\n4. Click on New Button\r\n5. Select 'xyz1' in patron tab with include option. Select nothing in traits tab.\n\nClick Apply changes\r\n6. Verify the liabilities and receivables counts\r\n7. Log out from the application",
        "expected": "1. All the Pre-requisites should be met successfully.\r\n2. Utilities portal will be opened successfully.\r\n3. User should be able to select the \"Credit Run Utility\"\r\n4. The Portal for creating new Credit Run Utility will be opened.\r\n5. The Liabilities and receivables count should be displayed\r\n6. Liability count should be 1. Receivable count should be 1. Liability total should be $20. Cash Receipts total should be $10.\r\n7. User should be able to log out successfully."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.30"
  },
  {
    "id": 30597441,
    "title": "Perform Credit Disbursement Run with one liability applied to one Receivable - Liability is fully consumed and the Receivable balance becomes ZERO",
    "section_id": 1681364,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-14806",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 30,
    "custom_refs": "C68717",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1. Launch PV Application and login using using suitable credentials\r\n2. Create a new patron. Let the patron be P1\r\n3. Perform a Receivable Transaction for any event for this patron. Note down the Receivable amount\r\n4. Create an open item liabilty(credit) for this patron(for the same supplier for which Receivable was created above) in such a way that the credit amount amount exactly matches the Receivable amount created above for this patron\r\nExpected Result:\r\nA patron P1 should be available with only one credit and one Receivable with exact amounts.\r\n\r\nThe liability Type of the credit created and the Receivable Type of the Receivable created above should be noted down.\r\n\r\nAlso note down the Order Id for the Receivable transaction created for this patron\r\n2. Launch PV Appliaction using the link provided\r\nExpected Result:\r\nPV Application should be launched successfully\r\n3. Login to the Application using suitable credentials\r\nExpected Result:\r\nLogin should be successful\r\n4. 1.Navigate to Utilities portal\r\n2.Selet the option 'Credit Run Utuility' from the drop down 'Set Utility For'\r\nExpected Result:\r\nUser should be navigated to Credit Run Utility portal successfully\r\n5. 1.Enter a unique Run Name\r\n2.Select a Run As Agency/User who has cash Receipt permission to the Receivable Type(noted in Pre Reauisite) and also consume and disburse permissions to the liability type(noted in pre Requisite)\r\n\r\n3.Selet the option 'Disbursement' for the drop down 'Run Type'\r\n4.Select the option 'Apply To Receivables' for the drop down field 'Disbursement Method'\r\n5.Select the supplier againt which the Receivable and Credit was created in pre Requisite\r\n6.Seletct 'Account Credit' as the option for the drop down field Liability True Type\r\nExpected Result:\r\nUser should be able to select values for all the CREDIT RUN field successfully\r\n6. 1.Navigate to the 'Liabilities' tab\r\n2.Navigate to sub tab 'Patron'\r\n3.select the patron P1 mentioned above in pre Requisite\r\n4.For the Transaction date Range field, define a date range that includes the date on which credit mentioned in pre Requiste was created\r\nExpected Result:\r\nUser should be able to define values corresponding to the credit created above, for the fields in Liabilities' tab\r\n7. 1. Click PREVIEW option\r\n2. Verify the values displayed for the following fields in PREVIEW and ANALYSIS block:\r\n\r\n1.# Accounts\r\n2.# Liabilities\r\n3.# Receivables\r\n4.Potential Liability Amount\r\n5.Potential Cash Receipt\r\nExpected Result:\r\nFollowing values should be displayed for the fields in PREVIEW and ANALYSIS block\r\n\r\n1.# Accounts:- Number of accounts matching the input citeria should be displayed. In this case, the value should be 1\r\n2.# Liabilities:- Number of open item liabilities matching the input criteria. In this case, the value should be 1 \r\n3.# Receivables:- Number of open item Receivables matching the criteria. In this case, the value should be 1 \r\n4.Potential Liability Amount:- Total amount of the open item liabilities matching the input criteria. In this case the, the amount corresponding to the credit created in pre Requiste should be displayed \r\n4.Potential Cash Receipt:- Total amount of the open item Receivables matching the input criteria. In this case the, the amount corresponding to the Receivable created in pre Requiste should be displayed \r\n\r\nIn this case, the Potential Liablity Amount should be equal to Potential Cash Receipt\r\n8. 1.Navigate to the 'Receivables' tab\r\n2.Navigate to sub tab 'Events'\r\n3.select the event for which Receivable was created in pre Requisite\r\nExpected Result:\r\nUser should be able to define values corresponding to the Receivable created above, for the fields in 'Receivables' tab\r\n9. Click PROCESS RUN\r\nExpected Result:\r\nThe credit run should be started successfully.\r\n\r\nCorrseponding meassge should be displayed to the user in green color\r\n10. 1.Wait for some time for the Credit Run to get completed\r\n2.Click the SEARCH RESULT option and get navigated to the 'search Results' page for the Credit Runs\r\n3.Scroll down and identify the Credit Run created mentioned above\r\n4.Verify the status of the Credit Run\r\nExpected Result:\r\nThe status of thsi Credit Run should be 'Completed'\r\n11. 1.Navigate to Ticket Sales portal\r\n2.Seletc the patron P1 mentioned above\r\n3.Navigate to Account Balance tab for this patron\r\n4.Under the 'Account Credits' section, verify the credit created in pre Requisite\r\nExpected Result:\r\nThe balance for this credit should be ZERO which implies that the credit has been fully consumed\r\n12. 1.Click the Details option against this credit\r\n2.Verify the details displayed displayed in the modal window for this liability(credit)\r\nExpected Result:\r\nA new line corresponding to the Disbursement Transaction details should be added in the 'Activities' block.\r\n\r\nNote down the Transaction ID corrsepnding to this Disbursement Transaction\r\n13. 1.Expand the tree view against this Receivable order\r\n2.Find the Current Amount againt the installments of this Receivable\r\nExpected Result:\r\nThe current amount for all the installments of this Receivable should be updated to ZERO\r\n14. 1.CLOSE the 'Liability' details modal window\r\n2.Under the 'Balance Due' section, verify the balance corresponding to the Receivable craeted in pre Requisite\r\nExpected Result:\r\nThe balance for this Receivable should be ZERO which implies that the Receivable has been paid fully\r\n15. 1.Navigate to Ticket Services\r\n2.select the order corresponding to the Receivable created in pre Requisite\r\n3.Verify the Sales balance for the order\r\nExpected Result:\r\nSales Balance for the order should be ZERO\r\n16. 1.Navigate to Receivables tab for this order\r\n2.Click the Details option for thsi Receivable\r\n3.Verify the details displayed displayed in the modal window for this Receivable\r\nExpected Result:\r\nA new line corresponding to the Cash Receipt Transaction details should be added in the 'Activities' block\r\n17. 1.Search for the Disbursement Transaction using the corresponding Transaction ID noted in step 12\r\n2.Navigate to Payments tab for this Transaction nad verify the details\r\nExpected Result:\r\nA negative payment (amount in red color) should be displayed corrseponding to the disbursed credit amount mentioned above",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch PV Application and login using using suitable credentials\r\n2. Create a new patron. Let the patron be P1\r\n3. Perform a Receivable Transaction for any event for this patron. Note down the Receivable amount\r\n4. Create an open item liabilty(credit) for this patron(for the same supplier for which Receivable was created above) in such a way that the credit amount amount exactly matches the Receivable amount created above for this patron\r\n2. Launch PV Appliaction using the link provided\r\n3. Login to the Application using suitable credentials\r\n4. 1.Navigate to Utilities portal\r\n2.Selet the option 'Credit Run Utuility' from the drop down 'Set Utility For'\r\n5. 1.Enter a unique Run Name\r\n2.Select a Run As Agency/User who has cash Receipt permission to the Receivable Type(noted in Pre Reauisite) and also consume and disburse permissions to the liability type(noted in pre Requisite)\r\n\r\n3.Selet the option 'Disbursement' for the drop down 'Run Type'\r\n4.Select the option 'Apply To Receivables' for the drop down field 'Disbursement Method'\r\n5.Select the supplier againt which the Receivable and Credit was created in pre Requisite\r\n6.Seletct 'Account Credit' as the option for the drop down field Liability True Type\r\n6. 1.Navigate to the 'Liabilities' tab\r\n2.Navigate to sub tab 'Patron'\r\n3.select the patron P1 mentioned above in pre Requisite\r\n4.For the Transaction date Range field, define a date range that includes the date on which credit mentioned in pre Requiste was created\r\n7. 1. Click PREVIEW option\r\n2. Verify the values displayed for the following fields in PREVIEW and ANALYSIS block:\r\n\r\n1.# Accounts\r\n2.# Liabilities\r\n3.# Receivables\r\n4.Potential Liability Amount\r\n5.Potential Cash Receipt\r\n8. 1.Navigate to the 'Receivables' tab\r\n2.Navigate to sub tab 'Events'\r\n3.select the event for which Receivable was created in pre Requisite\r\n9. Click PROCESS RUN\r\n10. 1.Wait for some time for the Credit Run to get completed\r\n2.Click the SEARCH RESULT option and get navigated to the 'search Results' page for the Credit Runs\r\n3.Scroll down and identify the Credit Run created mentioned above\r\n4.Verify the status of the Credit Run\r\n11. 1.Navigate to Ticket Sales portal\r\n2.Seletc the patron P1 mentioned above\r\n3.Navigate to Account Balance tab for this patron\r\n4.Under the 'Account Credits' section, verify the credit created in pre Requisite\r\n12. 1.Click the Details option against this credit\r\n2.Verify the details displayed displayed in the modal window for this liability(credit)\r\n13. 1.Expand the tree view against this Receivable order\r\n2.Find the Current Amount againt the installments of this Receivable\r\n14. 1.CLOSE the 'Liability' details modal window\r\n2.Under the 'Balance Due' section, verify the balance corresponding to the Receivable craeted in pre Requisite\r\n15. 1.Navigate to Ticket Services\r\n2.select the order corresponding to the Receivable created in pre Requisite\r\n3.Verify the Sales balance for the order\r\n16. 1.Navigate to Receivables tab for this order\r\n2.Click the Details option for thsi Receivable\r\n3.Verify the details displayed displayed in the modal window for this Receivable\r\n17. 1.Search for the Disbursement Transaction using the corresponding Transaction ID noted in step 12\r\n2.Navigate to Payments tab for this Transaction nad verify the details",
        "expected": "1. A patron P1 should be available with only one credit and one Receivable with exact amounts.\r\n\r\nThe liability Type of the credit created and the Receivable Type of the Receivable created above should be noted down.\r\n\r\nAlso note down the Order Id for the Receivable transaction created for this patron\r\n2. PV Application should be launched successfully\r\n3. Login should be successful\r\n4. User should be navigated to Credit Run Utility portal successfully\r\n5. User should be able to select values for all the CREDIT RUN field successfully\r\n6. User should be able to define values corresponding to the credit created above, for the fields in Liabilities' tab\r\n7. Following values should be displayed for the fields in PREVIEW and ANALYSIS block\r\n\r\n1.# Accounts:- Number of accounts matching the input citeria should be displayed. In this case, the value should be 1\r\n2.# Liabilities:- Number of open item liabilities matching the input criteria. In this case, the value should be 1 \r\n3.# Receivables:- Number of open item Receivables matching the criteria. In this case, the value should be 1 \r\n4.Potential Liability Amount:- Total amount of the open item liabilities matching the input criteria. In this case the, the amount corresponding to the credit created in pre Requiste should be displayed \r\n4.Potential Cash Receipt:- Total amount of the open item Receivables matching the input criteria. In this case the, the amount corresponding to the Receivable created in pre Requiste should be displayed \r\n\r\nIn this case, the Potential Liablity Amount should be equal to Potential Cash Receipt\r\n8. User should be able to define values corresponding to the Receivable created above, for the fields in 'Receivables' tab\r\n9. The credit run should be started successfully.\r\n\r\nCorrseponding meassge should be displayed to the user in green color\r\n10. The status of thsi Credit Run should be 'Completed'\r\n11. The balance for this credit should be ZERO which implies that the credit has been fully consumed\r\n12. A new line corresponding to the Disbursement Transaction details should be added in the 'Activities' block.\r\n\r\nNote down the Transaction ID corrsepnding to this Disbursement Transaction\r\n13. The current amount for all the installments of this Receivable should be updated to ZERO\r\n14. The balance for this Receivable should be ZERO which implies that the Receivable has been paid fully\r\n15. Sales Balance for the order should be ZERO\r\n16. A new line corresponding to the Cash Receipt Transaction details should be added in the 'Activities' block\r\n17. A negative payment (amount in red color) should be displayed corrseponding to the disbursed credit amount mentioned above"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.2.00"
  },
  {
    "id": 30597442,
    "title": "Verify that user is able to update an existing Customer Service Rep details successfully.",
    "section_id": 1681365,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-21530",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 24,
    "custom_refs": "C71534",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Login to PV application\r\nExpected Result:\r\nLogin should be successful.\r\n2. Set the app property 'main.menu.view.mode' value to 4\r\n3. 1. Navigate to System Setup>Customer Service Rep Admin \r\n2. Select an existing Customer Service Rep\r\n3. Click on APPLY CHANGES without updating any details.\r\n4. Verify if customer service rep is getting updated successfully.\r\nExpected Result:\r\nCustomer service rep should be updated \r\nsuccessfully.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to PV application\r\n2. Set the app property 'main.menu.view.mode' value to 4\r\n3. 1. Navigate to System Setup>Customer Service Rep Admin \r\n2. Select an existing Customer Service Rep\r\n3. Click on APPLY CHANGES without updating any details.\r\n4. Verify if customer service rep is getting updated successfully.",
        "expected": "1. Login should be successful.\r\n2. \r\n3. Customer service rep should be updated \r\nsuccessfully."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.8.00"
  },
  {
    "id": 30597443,
    "title": "Inventory Tools Package List: Verify Errors are displayed/handled to user correctly",
    "section_id": 1681366,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-23862",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 30,
    "custom_refs": "C128568",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Login to PV\r\nExpected Result:\r\nThe user should be able to login to the application\r\n2. Navigate to Utilities > Tools > Inventory > select supplier and navigate to Package List Tab \nSearch a package list\r\nExpected Result:\r\nThe Inventory Tool portal should be available\r\n3. Do not select the package list or any action verify Update Button is active\r\nExpected Result:\r\n Update Button should not active\r\n4. Select \"Package List\" tab\r\nExpected Result:\r\n\"Package List\" tab should be displayed\r\n5. Select an Action and click Update without selecting package list\r\nExpected Result:\r\n Error message pop-up should displayed \r\n6. Click FIND and Select package list and an action, Click Update  \r\nExpected Result:\r\nSuccess message should shown correctly and search results should retained\r\n7. Navigate to Event tab and trigger an error following the steps below\nCreate an Event \nComplete a transaction for the event \nNavigate to Inventory Tools and search the event \nRun below query to cause the error in inventory tool\nupdate INVENTORY_TRANSACTION set HAS_BEEN_PROCESSED = null where event_id=22608;\ncommit; \r\nExpected Result:\r\nThe user should be able to complete actions\r\n8. Select the event > select validate/fix inventoty > Inventory Binary Compare Type> Consign Back Binary \r\nExpected Result:\r\nuser should able to select\r\n9. Click UPDATE\r\nExpected Result:\r\nerror message should shown with show/hide button, and search results should retained",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to PV\r\n2. Navigate to Utilities > Tools > Inventory > select supplier and navigate to Package List Tab \nSearch a package list\r\n3. Do not select the package list or any action verify Update Button is active\r\n4. Select \"Package List\" tab\r\n5. Select an Action and click Update without selecting package list\r\n6. Click FIND and Select package list and an action, Click Update  \r\n7. Navigate to Event tab and trigger an error following the steps below\nCreate an Event \nComplete a transaction for the event \nNavigate to Inventory Tools and search the event \nRun below query to cause the error in inventory tool\nupdate INVENTORY_TRANSACTION set HAS_BEEN_PROCESSED = null where event_id=22608;\ncommit; \r\n8. Select the event > select validate/fix inventoty > Inventory Binary Compare Type> Consign Back Binary \r\n9. Click UPDATE",
        "expected": "1. The user should be able to login to the application\r\n2. The Inventory Tool portal should be available\r\n3.  Update Button should not active\r\n4. \"Package List\" tab should be displayed\r\n5.  Error message pop-up should displayed \r\n6. Success message should shown correctly and search results should retained\r\n7. The user should be able to complete actions\r\n8. user should able to select\r\n9. error message should shown with show/hide button, and search results should retained"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "4.0.30.03"
  },
  {
    "id": 30597444,
    "title": "Verify whether Validate or Fix action updates correct binaries for unprocssed inventory transactions",
    "section_id": 1681366,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19972",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 30,
    "custom_refs": "C63428",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1. Login as configuration user\n2. select inventory tools from the drop down\r\nExpected Result:\r\nInventory tools portal should be displayed\r\n2. 1. Select a supplier form the drop down\n2. Click on select button\r\nExpected Result:\r\nInventory portal should displayed for master configuration and event\r\n3. 1. Click on events tab\n2. Input * in the search field\n3. Click on Find button\r\nExpected Result:\r\nAll the events should be displayed\r\n4. 1. Select more than one event\n2. Select validate/fix event inventory radio button\n3. Click on update button\r\nExpected Result:\r\nEvent inventories should be validated/fixed and a confirmation message should be displayed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Login as configuration user\n2. select inventory tools from the drop down\r\n2. 1. Select a supplier form the drop down\n2. Click on select button\r\n3. 1. Click on events tab\n2. Input * in the search field\n3. Click on Find button\r\n4. 1. Select more than one event\n2. Select validate/fix event inventory radio button\n3. Click on update button",
        "expected": "1. Inventory tools portal should be displayed\r\n2. Inventory portal should displayed for master configuration and event\r\n3. All the events should be displayed\r\n4. Event inventories should be validated/fixed and a confirmation message should be displayed"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "Not Specified"
  },
  {
    "id": 30597445,
    "title": "Verify the Update action for the selected events when Block Acceptance option is selected",
    "section_id": 1681366,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19870",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_pv_category": 30,
    "custom_refs": "C63436",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Login to PV as valid user\r\nExpected Result:\r\nThe user should be able to login to the application\r\n2. Create few events\r\nExpected Result:\r\nUser should be able to create a number of events\r\n3. Navigate to utilites tab\r\nExpected Result:\r\nDropdown should be displayed\r\n4. Select tools from the dropdown\r\nExpected Result:\r\nUser should be able to select tools from the \r\ndropdown\r\n5. Select 'Set Tool For' as inventory\r\nExpected Result:\r\nUser should be able to select 'Set Tool For' as \r\ninventory\r\n6. Select a supplier and click on update button\r\nExpected Result:\r\nTools page should be displayed\r\n7. Select Event tab\r\nExpected Result:\r\nUser should be able to select Event tab\r\n8. Search for the events\r\nExpected Result:\r\nUser should be able to search for the events\r\n9. Select \"Update ProVenueOnline Acceptance\"\r\nExpected Result:\r\nUser should be able to select \"Update \r\nProVenueOnline Acceptance\"\r\n10. Select Block Acceptance option\r\nExpected Result:\r\nUser should be able to select Block Acceptance \r\noption\r\n11. Click on Update action and Verify the DB\r\nExpected Result:\r\nThe BLOCK_EVENT_ACCEPT_TO_PVO \r\nattribute should be set to True for all selected \r\nevents(appears checked in the Event \r\nMaintenance).",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to PV as valid user\r\n2. Create few events\r\n3. Navigate to utilites tab\r\n4. Select tools from the dropdown\r\n5. Select 'Set Tool For' as inventory\r\n6. Select a supplier and click on update button\r\n7. Select Event tab\r\n8. Search for the events\r\n9. Select \"Update ProVenueOnline Acceptance\"\r\n10. Select Block Acceptance option\r\n11. Click on Update action and Verify the DB",
        "expected": "1. The user should be able to login to the application\r\n2. User should be able to create a number of events\r\n3. Dropdown should be displayed\r\n4. User should be able to select tools from the \r\ndropdown\r\n5. User should be able to select 'Set Tool For' as \r\ninventory\r\n6. Tools page should be displayed\r\n7. User should be able to select Event tab\r\n8. User should be able to search for the events\r\n9. User should be able to select \"Update \r\nProVenueOnline Acceptance\"\r\n10. User should be able to select Block Acceptance \r\noption\r\n11. The BLOCK_EVENT_ACCEPT_TO_PVO \r\nattribute should be set to True for all selected \r\nevents(appears checked in the Event \r\nMaintenance)."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.5.00"
  },
  {
    "id": 30597446,
    "title": "Inventory Tools-Verify Flush and reinitialize EIMs",
    "section_id": 1681366,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-9691",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_pv_category": 9,
    "custom_refs": "C63454",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Lock seats for an Event in the ticket sales portal.\r\nExpected Result:\r\nPre- requisite should be successful.\r\n2. Launch PV Application\r\nExpected Result:\r\nPV Application should be launched successfully\r\n3. Login as bouser\r\nExpected Result:\r\nLogin should be successful\r\n4. Select  ' Inventory tools ' from the drop down displayed at top right corner\r\nExpected Result:\r\nUser should be navigated to Inventory tools  portal  successfully\r\n5. 1.Select the supplier from the drop down.\n2.Click on select button\r\nExpected Result:\r\nUser should be navigated to master configuration details page.\r\n6. 1.Click on the Event tab.\r\nExpected Result:\r\nUser should be navigated to Event search page.\r\n7. Input any of the following search parameters:\r\n1.Code.\r\n2.Description.\r\n3.Secondary title.\r\n4.Keywords.\r\n5.Date.\r\n6.Day of Week.\r\n7.Status.\r\n8.Event type.\r\n9.Venue\r\n10.Region.\r\n11.Season.\r\n12.Event Run \r\n13.Event Group.\r\n14.Primary Org.\r\n15.Promotion code.\r\n16.Promotion Description.\r\nClick on Find button.\r\nExpected Result:\r\nEvent satisfying the search criteria should be displayed.\r\n8. 1.Select the event(from the pre-requisite)using the event search criteria.\r\n2.Check the Reinitialize Event  Inventory Manager Caches check box.\r\n3.Click on Update button.\r\nExpected Result:\r\nCache should be  successfully reinitialized.\r\n9. 1.Navigate to Utilities portal.\n2.Select View/Release seat lock from the set utility for drop down.\n3.Input search criteria for seats locked in the pre-requisite\n4.Click on Find\r\nExpected Result:\r\nSeats locked in the pre-requisite should be displayed.\r\n10. 1.Select the Event  from the pre-requisite.\n2.Select the view map button.\n3.Select the section.\n4.verify the seats locked din the pre-requisite.\r\nExpected Result:\r\nSeats locked in the pre-requisite should remain locked.\r\n11. Repeat step 1 to step 7 for Flush Package List Inventory Manager Caches\r\nExpected Result:\r\nEvent list satisfying the search criteria should be displayed.\r\n12. 1.Select the event(from the pre-requisite)using the event search criteria.\r\n2.Check the Flush  Inventory Execution Planner Caches check box.\r\n3.Click on Update button.\r\nExpected Result:\r\nCache should be  successfully Flushed..\r\n13. 1.Navigate to Utilities portal.\n2.Select View/Release seat lock from the set utility for drop down.\n3.Input search criteria for seats locked in the pre-requisite\n4.Click on Find\r\nExpected Result:\r\nSeats locked in the pre-requisite should not be displayed.\r\n14. 1.Select the Event  from the pre-requisite.\n2.Select the view map button.\n3.Select the section.\n4.verify the seats locked d in the pre-requisite.\r\nExpected Result:\r\nSeats locked in the pre-requisite should be released.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Lock seats for an Event in the ticket sales portal.\r\n2. Launch PV Application\r\n3. Login as bouser\r\n4. Select  ' Inventory tools ' from the drop down displayed at top right corner\r\n5. 1.Select the supplier from the drop down.\n2.Click on select button\r\n6. 1.Click on the Event tab.\r\n7. Input any of the following search parameters:\r\n1.Code.\r\n2.Description.\r\n3.Secondary title.\r\n4.Keywords.\r\n5.Date.\r\n6.Day of Week.\r\n7.Status.\r\n8.Event type.\r\n9.Venue\r\n10.Region.\r\n11.Season.\r\n12.Event Run \r\n13.Event Group.\r\n14.Primary Org.\r\n15.Promotion code.\r\n16.Promotion Description.\r\nClick on Find button.\r\n8. 1.Select the event(from the pre-requisite)using the event search criteria.\r\n2.Check the Reinitialize Event  Inventory Manager Caches check box.\r\n3.Click on Update button.\r\n9. 1.Navigate to Utilities portal.\n2.Select View/Release seat lock from the set utility for drop down.\n3.Input search criteria for seats locked in the pre-requisite\n4.Click on Find\r\n10. 1.Select the Event  from the pre-requisite.\n2.Select the view map button.\n3.Select the section.\n4.verify the seats locked din the pre-requisite.\r\n11. Repeat step 1 to step 7 for Flush Package List Inventory Manager Caches\r\n12. 1.Select the event(from the pre-requisite)using the event search criteria.\r\n2.Check the Flush  Inventory Execution Planner Caches check box.\r\n3.Click on Update button.\r\n13. 1.Navigate to Utilities portal.\n2.Select View/Release seat lock from the set utility for drop down.\n3.Input search criteria for seats locked in the pre-requisite\n4.Click on Find\r\n14. 1.Select the Event  from the pre-requisite.\n2.Select the view map button.\n3.Select the section.\n4.verify the seats locked d in the pre-requisite.",
        "expected": "1. Pre- requisite should be successful.\r\n2. PV Application should be launched successfully\r\n3. Login should be successful\r\n4. User should be navigated to Inventory tools  portal  successfully\r\n5. User should be navigated to master configuration details page.\r\n6. User should be navigated to Event search page.\r\n7. Event satisfying the search criteria should be displayed.\r\n8. Cache should be  successfully reinitialized.\r\n9. Seats locked in the pre-requisite should be displayed.\r\n10. Seats locked in the pre-requisite should remain locked.\r\n11. Event list satisfying the search criteria should be displayed.\r\n12. Cache should be  successfully Flushed..\r\n13. Seats locked in the pre-requisite should not be displayed.\r\n14. Seats locked in the pre-requisite should be released."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.10"
  },
  {
    "id": 30597447,
    "title": "Verify invoice export for package transaction with different seat location for master and non master event",
    "section_id": 1681367,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-13796",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 21,
    "custom_refs": "C62632",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1 .Create a package which has multiple Package event ist ( PEL) and also a Master Package event ist( MPEL)\r\n2. Perform Reservaton and Receivabe transactions with created package such that all seats are different for all PEL under that package\r\n2. 1.Goto Utilities\r\n2.Select Set for Utility as Statement/Invoice\r\nExpected Result:\r\nThe Statement and Invoice portal should be displayed\r\n3. 1. In Statement and invoice portal , click New\r\n2.In Statement config, Enter the required parameters and click Appy changes\r\n3.Click Validate\r\nExpected Result:\r\nThe new statement config should be created and validated successfully\r\n4. 1.Goto Statement Process tab\r\n2.Enter the parameters of the newly created config and click Find\r\n3.In Search Results, click Export\r\nExpected Result:\r\nThe export should be generated successfully\r\n5. In Export, Verify whether the seats under seat string colum are displayed against each PEL\r\nExpected Result:\r\nThe seat under Seat strings should display against each PEL",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1 .Create a package which has multiple Package event ist ( PEL) and also a Master Package event ist( MPEL)\r\n2. Perform Reservaton and Receivabe transactions with created package such that all seats are different for all PEL under that package\r\n2. 1.Goto Utilities\r\n2.Select Set for Utility as Statement/Invoice\r\n3. 1. In Statement and invoice portal , click New\r\n2.In Statement config, Enter the required parameters and click Appy changes\r\n3.Click Validate\r\n4. 1.Goto Statement Process tab\r\n2.Enter the parameters of the newly created config and click Find\r\n3.In Search Results, click Export\r\n5. In Export, Verify whether the seats under seat string colum are displayed against each PEL",
        "expected": "1. \r\n2. The Statement and Invoice portal should be displayed\r\n3. The new statement config should be created and validated successfully\r\n4. The export should be generated successfully\r\n5. The seat under Seat strings should display against each PEL"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.0.42"
  },
  {
    "id": 30597448,
    "title": "Verify the Rollover Process to a Master Event Only package",
    "section_id": 1681368,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16455",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 12,
    "custom_refs": "C71891",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Select 'Utilities' from the drop down.\r\nExpected Result:\r\nUtilities portal should be displayed.\r\n2. Select Rollover from the 'Set Utility For:'  drop down.\r\nExpected Result:\r\nRollover details page should be displayed.\r\n3. Click on the NEW button associated to Rollover Configuration.\r\nExpected Result:\r\nRollover Configuration Details portal should be displayed.\r\n4. Click on the search button associated to Target Package.\r\nExpected Result:\r\nTarget package search window should be displayed.\r\n5. Select a Master Event only Package and click the Apply button.\r\nExpected Result:\r\nSelected package should be set as the target package for the rollover configuration.\r\n6. Input valid data for all other mandatory fields and click the Apply Changes button.\r\nExpected Result:\r\nUser should be able to create a new Rollover Configuration successfully with a target package set.\r\n7. Click on the configure source icon within 'Target Package Event Lists' grid.\r\nExpected Result:\r\nSource Package configuration page should be displayed.\r\n8. Click on the search button associated to Source Event/List.\r\nExpected Result:\r\nSource eventlist search window should be displayed.\r\n9. Select an eventlist and click the Apply button.\r\nExpected Result:\r\nSelected eventlist should be set as the source eventlist for the rollover configuration.\r\n10. Click the Apply Changes button.\r\nExpected Result:\r\nSystem should update the changes.\r\n11. Navigate to the rollover config main page.\r\nExpected Result:\r\nUser should be able to navigate to  the rollover config main page.\r\n12. Click the Validate button.\r\nExpected Result:\r\nSelected rollover configuration should be validated successfully.\r\n13. Click on the Rollover Process tab.\r\nExpected Result:\r\nUser should be taken to the Rollover Process portal.\r\n14. Click the FIND button\r\nExpected Result:\r\nAll the validated rollover configurations should be displayed in the search result grid.\r\n15. Start processing  the rollover configuration that was successfully validated.\r\nExpected Result:\r\nUsr should be able to start rollover processing for the successfully validated rollover config.\r\n16. Verify that the rollover process gets completed successfully.\r\nExpected Result:\r\nUser should be able to complete the rollover process successfully.\r\n17. Select the orders that have been rolled over to the target package eventlists.\r\nExpected Result:\r\nUser should be able to select the orders that have been rolled over to the target package eventlists.\r\n18. Verify that all the orders in the source eventlist has been rolled over to the target package event lists.\r\nExpected Result:\r\nAll the orders in the source eventlist should have  been rolled over to the target package event lists.\r\n19. Call \r\n20. Call",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Select 'Utilities' from the drop down.\r\n2. Select Rollover from the 'Set Utility For:'  drop down.\r\n3. Click on the NEW button associated to Rollover Configuration.\r\n4. Click on the search button associated to Target Package.\r\n5. Select a Master Event only Package and click the Apply button.\r\n6. Input valid data for all other mandatory fields and click the Apply Changes button.\r\n7. Click on the configure source icon within 'Target Package Event Lists' grid.\r\n8. Click on the search button associated to Source Event/List.\r\n9. Select an eventlist and click the Apply button.\r\n10. Click the Apply Changes button.\r\n11. Navigate to the rollover config main page.\r\n12. Click the Validate button.\r\n13. Click on the Rollover Process tab.\r\n14. Click the FIND button\r\n15. Start processing  the rollover configuration that was successfully validated.\r\n16. Verify that the rollover process gets completed successfully.\r\n17. Select the orders that have been rolled over to the target package eventlists.\r\n18. Verify that all the orders in the source eventlist has been rolled over to the target package event lists.\r\n19. Call \r\n20. Call",
        "expected": "1. Utilities portal should be displayed.\r\n2. Rollover details page should be displayed.\r\n3. Rollover Configuration Details portal should be displayed.\r\n4. Target package search window should be displayed.\r\n5. Selected package should be set as the target package for the rollover configuration.\r\n6. User should be able to create a new Rollover Configuration successfully with a target package set.\r\n7. Source Package configuration page should be displayed.\r\n8. Source eventlist search window should be displayed.\r\n9. Selected eventlist should be set as the source eventlist for the rollover configuration.\r\n10. System should update the changes.\r\n11. User should be able to navigate to  the rollover config main page.\r\n12. Selected rollover configuration should be validated successfully.\r\n13. User should be taken to the Rollover Process portal.\r\n14. All the validated rollover configurations should be displayed in the search result grid.\r\n15. Usr should be able to start rollover processing for the successfully validated rollover config.\r\n16. User should be able to complete the rollover process successfully.\r\n17. User should be able to select the orders that have been rolled over to the target package eventlists.\r\n18. All the orders in the source eventlist should have  been rolled over to the target package event lists.\r\n19. \r\n20."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.20"
  },
  {
    "id": 30597449,
    "title": "Verify the datmart tables after performing Master Event Expansion",
    "section_id": 1681368,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16673",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 17,
    "custom_refs": "C67586",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Launch PV Application\r\nExpected Result:\r\nPV Application should be launched successfully\r\n2. Login to the Application using suitable credentials\r\nExpected Result:\r\nLogin should be successful\r\n3. 1.Navigate to Package Event List portal\r\n2.Create a master only event\r\n3.Navigate to Package Admin\r\n4.Include the master only event list in this package\r\n5.Make the Package On Sale\r\n6.Navigate to Ticket sales\r\n7.Select a patron\r\n8.Perform a sale transaction for this package\r\nExpected Result:\r\nTransaction should be completed successfully for the master event\r\n4. Login to squirel application\r\n5.Connect to Datamart schema\r\n6.Verify the TICKET_DIM, ACTIVITY_DIM, EVEN_DIM, TICKET_FACT for the transaction completed above\r\nExpected Result:\r\nDetails should be updated correctly in these tables\r\n5. 1.Navigate to Event Admin and create new events\r\n2.Navigate to Package Event List Admin and select the master only event list created earlier\r\n3.Add the newly created events as constituent events\r\n4.navigate to Master Event Expansion utility\r\n5.Select the master event\r\n6.validate the master event\r\n7.Expand the master event\r\nExpected Result:\r\nMaster Event Expansion should be completed successfully",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV Application\r\n2. Login to the Application using suitable credentials\r\n3. 1.Navigate to Package Event List portal\r\n2.Create a master only event\r\n3.Navigate to Package Admin\r\n4.Include the master only event list in this package\r\n5.Make the Package On Sale\r\n6.Navigate to Ticket sales\r\n7.Select a patron\r\n8.Perform a sale transaction for this package\r\n4. Login to squirel application\r\n5.Connect to Datamart schema\r\n6.Verify the TICKET_DIM, ACTIVITY_DIM, EVEN_DIM, TICKET_FACT for the transaction completed above\r\n5. 1.Navigate to Event Admin and create new events\r\n2.Navigate to Package Event List Admin and select the master only event list created earlier\r\n3.Add the newly created events as constituent events\r\n4.navigate to Master Event Expansion utility\r\n5.Select the master event\r\n6.validate the master event\r\n7.Expand the master event",
        "expected": "1. PV Application should be launched successfully\r\n2. Login should be successful\r\n3. Transaction should be completed successfully for the master event\r\n4. Details should be updated correctly in these tables\r\n5. Master Event Expansion should be completed successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.20"
  },
  {
    "id": 30597450,
    "title": "Validate a package rollover with a source seating type code set as Best Available SameScale after completing a ticket sale with multiple price scales",
    "section_id": 1681368,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-13384",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 3,
    "custom_is_automated": true,
    "custom_pv_category": 12,
    "custom_refs": "C71715",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Complete a ticket sale for a packge Event list with different price scales\n\nEg: Select 2 ticket from price scale1 and 2 tickets from price scale2\n\nThis transaction can be completed through map sales\n\nClick on \"View Map\"\nSelect a section\nSelect 2 tickets\nClick on different section from the map\nSelect 2 more tickets \nClick on \"Add & Go to Cart\" button\r\nExpected Result:\r\nTicket Sale is completed\r\n2. Select the order that is to be rolled over to the target package and take a note of it\r\nExpected Result:\r\nUser should be able to select the orders that will be rolled over to the target package\r\n3. Select 'Utilities' from the drop down.\r\nExpected Result:\r\nUtilities portal should be displayed.\r\n4. Select Rollover from the 'Set Utility For:'  drop down.\r\nExpected Result:\r\nRollover details page should be displayed.\r\n5. Click on the NEW button associated to Rollover Configuration.\r\nExpected Result:\r\nRollover Configuration Details portal should be displayed.\r\n6. Select 'Sale' option from the 'Transaction Type' drop down.\r\nExpected Result:\r\nSelection should be highlighted.\r\n7. Click on the search button associated to Target Package.\r\nExpected Result:\r\nTarget package search window should be displayed.\r\n8. Select a package  and click the Apply button.\r\nExpected Result:\r\nSelected package should be set as the target package for the rollover configuration.\r\n9. Click the Apply Changes button.\r\nExpected Result:\r\nUser should be able to create a new Rollover Configuration successfully with a target package set.\r\n10. Click on the configure source icon within 'Target Package Event Lists' grid.\r\nExpected Result:\r\nSource Package configuration page should be displayed.\r\n11. Click on the search button associated to Source Event/List.\r\nExpected Result:\r\nSource eventlist search window should be displayed.\r\n12. Select an eventlist having package requets and click the Apply button.\r\nExpected Result:\r\nSelectedeventlist should be set as the source eventlist for the rollover configuration.\r\n13. Select the 'Best Available Same Scale '   option from the 'Seat Assignments' drop down.\r\nExpected Result:\r\nSelection should be highlighted.\r\n14. Click the Apply Changes button.\r\nExpected Result:\r\nSystem should update the changes.\r\n15. Navigate to the rollover config main page.\r\nExpected Result:\r\nUser should be able to navigate to  the rollover config main page.\r\n16. Click the Validate button.\r\nExpected Result:\r\nSelected rollover configuration should be validated successfully.\r\n17. Click on the Rollover Process tab.\r\nExpected Result:\r\nUser should be taken to the Rollover Process portal.\r\n18. Click the FIND button\r\nExpected Result:\r\nAll the validated rollover configurations should be displayed in the search result grid.\r\n19. Start processing  the rollover configuration that was successfully validated.\r\nExpected Result:\r\nUsr should be able to start rollover processing for the successfully validated rollover config.\r\n20. Verify that the rollover process gets completed successfully.\r\nExpected Result:\r\nUser should be able to complete the rollover process successfully.\r\n21. 1. Verify the Detailed Report created for the above Rollover process\n2. Verify whether the seats of price scale corresponding to source package list is rollover to same price scale of target package\r\nExpected Result:\r\nThe seats of price scale corresponding to source package list should be rollover to same price scale of target package\r\n22. Verify that the system has acquired the 'best seat' in the same scale.\r\nExpected Result:\r\nThe system should have  acquired the 'best seat' in the same scale",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Complete a ticket sale for a packge Event list with different price scales\n\nEg: Select 2 ticket from price scale1 and 2 tickets from price scale2\n\nThis transaction can be completed through map sales\n\nClick on \"View Map\"\nSelect a section\nSelect 2 tickets\nClick on different section from the map\nSelect 2 more tickets \nClick on \"Add & Go to Cart\" button\r\n2. Select the order that is to be rolled over to the target package and take a note of it\r\n3. Select 'Utilities' from the drop down.\r\n4. Select Rollover from the 'Set Utility For:'  drop down.\r\n5. Click on the NEW button associated to Rollover Configuration.\r\n6. Select 'Sale' option from the 'Transaction Type' drop down.\r\n7. Click on the search button associated to Target Package.\r\n8. Select a package  and click the Apply button.\r\n9. Click the Apply Changes button.\r\n10. Click on the configure source icon within 'Target Package Event Lists' grid.\r\n11. Click on the search button associated to Source Event/List.\r\n12. Select an eventlist having package requets and click the Apply button.\r\n13. Select the 'Best Available Same Scale '   option from the 'Seat Assignments' drop down.\r\n14. Click the Apply Changes button.\r\n15. Navigate to the rollover config main page.\r\n16. Click the Validate button.\r\n17. Click on the Rollover Process tab.\r\n18. Click the FIND button\r\n19. Start processing  the rollover configuration that was successfully validated.\r\n20. Verify that the rollover process gets completed successfully.\r\n21. 1. Verify the Detailed Report created for the above Rollover process\n2. Verify whether the seats of price scale corresponding to source package list is rollover to same price scale of target package\r\n22. Verify that the system has acquired the 'best seat' in the same scale.",
        "expected": "1. Ticket Sale is completed\r\n2. User should be able to select the orders that will be rolled over to the target package\r\n3. Utilities portal should be displayed.\r\n4. Rollover details page should be displayed.\r\n5. Rollover Configuration Details portal should be displayed.\r\n6. Selection should be highlighted.\r\n7. Target package search window should be displayed.\r\n8. Selected package should be set as the target package for the rollover configuration.\r\n9. User should be able to create a new Rollover Configuration successfully with a target package set.\r\n10. Source Package configuration page should be displayed.\r\n11. Source eventlist search window should be displayed.\r\n12. Selectedeventlist should be set as the source eventlist for the rollover configuration.\r\n13. Selection should be highlighted.\r\n14. System should update the changes.\r\n15. User should be able to navigate to  the rollover config main page.\r\n16. Selected rollover configuration should be validated successfully.\r\n17. User should be taken to the Rollover Process portal.\r\n18. All the validated rollover configurations should be displayed in the search result grid.\r\n19. Usr should be able to start rollover processing for the successfully validated rollover config.\r\n20. User should be able to complete the rollover process successfully.\r\n21. The seats of price scale corresponding to source package list should be rollover to same price scale of target package\r\n22. The system should have  acquired the 'best seat' in the same scale"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "1.3"
  },
  {
    "id": 30597451,
    "title": "Validate a package rollover with a source seating type code seta as Best Available SameScale and Transaction type as reservation",
    "section_id": 1681368,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-Rollover",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 4,
    "custom_is_automated": true,
    "custom_pv_category": 12,
    "custom_refs": "C71716",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Select 'Utilities' from the drop down.\r\nExpected Result:\r\nUtilities portal should be displayed.\r\n2. Select Rollover from the 'Set Utility For:'  drop down.\r\nExpected Result:\r\nRollover details page should be displayed.\r\n3. Click on the NEW button associated to Rollover Configuration.\r\nExpected Result:\r\nRollover Configuration Details portal should be displayed.\r\n4. Select 'Reservation' option from the 'Transaction Type' drop down.\r\nExpected Result:\r\nSelection should be highlighted.\r\n5. Click on the search button associated to Target Package.\r\nExpected Result:\r\nTarget package search window should be displayed.\r\n6. Select a package  and click the Apply button.\r\nExpected Result:\r\nSelected package should be set as the target package for the rollover configuration.\r\n7. Click the Apply Changes button.\r\nExpected Result:\r\nUser should be able to create a new Rollover Configuration successfully with a target package set.\r\n8. Click on the configure source icon within 'Target Package Event Lists' grid.\r\nExpected Result:\r\nSource Package configuration page should be displayed.\r\n9. Click on the search button associated to Source Event/List.\r\nExpected Result:\r\nSource eventlist search window should be displayed.\r\n10. Select an eventlist having package requets and click the Apply button.\r\nExpected Result:\r\nSelectedeventlist should be set as the source eventlist for the rollover configuration.\r\n11. Select the 'Best Available Same Scale '   option from the 'Seat Assignments' drop down.\r\nExpected Result:\r\nSelection should be highlighted.\r\n12. Click the Apply Changes button.\r\nExpected Result:\r\nSystem should update the changes.\r\n13. Navigate to the rollover config main page.\r\nExpected Result:\r\nUser should be able to navigate to  the rollover config main page.\r\n14. Click the Validate button.\r\nExpected Result:\r\nSelected rollover configuration should be validated successfully.\r\n15. Click on the Rollover Process tab.\r\nExpected Result:\r\nUser should be taken to the Rollover Process portal.\r\n16. Click the FIND button\r\nExpected Result:\r\nAll the validated rollover configurations should be displayed in the search result grid.\r\n17. Start processing  the rollover configuration that was successfully validated.\r\nExpected Result:\r\nUsr should be able to start rollover processing for the successfully validated rollover config.\r\n18. Verify that the rollover process gets completed successfully.\r\nExpected Result:\r\nUser should be able to complete the rollover process successfully.\r\n19. Select the orders that have been rolled over to the target package eventlists.\r\nExpected Result:\r\nUser should be able to select the orders that have been rolled over to the target package eventlists.\r\n20. Verify that the system has acquired the 'best seat' in the same scale.\r\nExpected Result:\r\nThe system should have  acquired the 'best seat' in the same scale\r\n21. Call \r\n22. Call",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Select 'Utilities' from the drop down.\r\n2. Select Rollover from the 'Set Utility For:'  drop down.\r\n3. Click on the NEW button associated to Rollover Configuration.\r\n4. Select 'Reservation' option from the 'Transaction Type' drop down.\r\n5. Click on the search button associated to Target Package.\r\n6. Select a package  and click the Apply button.\r\n7. Click the Apply Changes button.\r\n8. Click on the configure source icon within 'Target Package Event Lists' grid.\r\n9. Click on the search button associated to Source Event/List.\r\n10. Select an eventlist having package requets and click the Apply button.\r\n11. Select the 'Best Available Same Scale '   option from the 'Seat Assignments' drop down.\r\n12. Click the Apply Changes button.\r\n13. Navigate to the rollover config main page.\r\n14. Click the Validate button.\r\n15. Click on the Rollover Process tab.\r\n16. Click the FIND button\r\n17. Start processing  the rollover configuration that was successfully validated.\r\n18. Verify that the rollover process gets completed successfully.\r\n19. Select the orders that have been rolled over to the target package eventlists.\r\n20. Verify that the system has acquired the 'best seat' in the same scale.\r\n21. Call \r\n22. Call",
        "expected": "1. Utilities portal should be displayed.\r\n2. Rollover details page should be displayed.\r\n3. Rollover Configuration Details portal should be displayed.\r\n4. Selection should be highlighted.\r\n5. Target package search window should be displayed.\r\n6. Selected package should be set as the target package for the rollover configuration.\r\n7. User should be able to create a new Rollover Configuration successfully with a target package set.\r\n8. Source Package configuration page should be displayed.\r\n9. Source eventlist search window should be displayed.\r\n10. Selectedeventlist should be set as the source eventlist for the rollover configuration.\r\n11. Selection should be highlighted.\r\n12. System should update the changes.\r\n13. User should be able to navigate to  the rollover config main page.\r\n14. Selected rollover configuration should be validated successfully.\r\n15. User should be taken to the Rollover Process portal.\r\n16. All the validated rollover configurations should be displayed in the search result grid.\r\n17. Usr should be able to start rollover processing for the successfully validated rollover config.\r\n18. User should be able to complete the rollover process successfully.\r\n19. User should be able to select the orders that have been rolled over to the target package eventlists.\r\n20. The system should have  acquired the 'best seat' in the same scale\r\n21. \r\n22."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.0.30"
  },
  {
    "id": 30597452,
    "title": "Verify the datmart tables after performing Rollover",
    "section_id": 1681368,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16673",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_pv_category": 17,
    "custom_refs": "C67585",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Launch PV Application\r\nExpected Result:\r\nPV Application should be launched successfully\r\n2. Login to the Application using suitable credentials\r\nExpected Result:\r\nLogin should be successful\r\n3. 1.Navigate to Event Mangement\r\n2.Create a new event\r\n3.Navigate to Package Event List portal\r\n4.Create a new package Event List\r\n5.Include the event created above in this event list\r\n6.Navigate to Package Admin\r\n7.Create a new package, say PKG1\r\n8.Set the option 'Renewable' to TRUE\r\n9.Include the package Event List created above in this package\r\nExpected Result:\r\nPackage PKG1 should be created successfully\r\n4. 1.Navigate to Package Rollover utility\r\n2.Create a new Rollover config with target package as PKG2\r\n3.Configure the source (seletc the event list in PKG1 as source)\r\n4.validate the config\r\n5.Navigate to Rollover Procvess tab\r\n6.Validate the Config\r\n7.Run the config\r\nExpected Result:\r\nRollover should be completed successfullyMaster Event Expansion should be completed successfully\r\n5. Login to squirel application\r\n5.Connect to Datamart schema\r\n6.Verify the TICKET_DIM, ACTIVITY_DIM, EVEN_DIM, TICKET_FACT for the transaction completed above\r\nExpected Result:\r\nDetails should be updated correctly in these tables\r\n6. 1.Navigate to Ticket Sales\r\n2.Select a patron\r\n3.Perform a sales transaction for the package PKG1 created above\r\nExpected Result:\r\nSales Transaction should bwe completed successfully\r\n7. 1.Navigate to Event Mangement\r\n2.Create a new event\r\n3.Navigate to Package Event List portal\r\n4.Create a new package Event List\r\n5.Include the event created above in this event list\r\n6.Navigate to Package Admin\r\n7.Create a new package, say PKG2\r\n8.Include the package Event List created above in this package\r\nExpected Result:\r\nPackage PKG2 should be created successfully",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV Application\r\n2. Login to the Application using suitable credentials\r\n3. 1.Navigate to Event Mangement\r\n2.Create a new event\r\n3.Navigate to Package Event List portal\r\n4.Create a new package Event List\r\n5.Include the event created above in this event list\r\n6.Navigate to Package Admin\r\n7.Create a new package, say PKG1\r\n8.Set the option 'Renewable' to TRUE\r\n9.Include the package Event List created above in this package\r\n4. 1.Navigate to Package Rollover utility\r\n2.Create a new Rollover config with target package as PKG2\r\n3.Configure the source (seletc the event list in PKG1 as source)\r\n4.validate the config\r\n5.Navigate to Rollover Procvess tab\r\n6.Validate the Config\r\n7.Run the config\r\n5. Login to squirel application\r\n5.Connect to Datamart schema\r\n6.Verify the TICKET_DIM, ACTIVITY_DIM, EVEN_DIM, TICKET_FACT for the transaction completed above\r\n6. 1.Navigate to Ticket Sales\r\n2.Select a patron\r\n3.Perform a sales transaction for the package PKG1 created above\r\n7. 1.Navigate to Event Mangement\r\n2.Create a new event\r\n3.Navigate to Package Event List portal\r\n4.Create a new package Event List\r\n5.Include the event created above in this event list\r\n6.Navigate to Package Admin\r\n7.Create a new package, say PKG2\r\n8.Include the package Event List created above in this package",
        "expected": "1. PV Application should be launched successfully\r\n2. Login should be successful\r\n3. Package PKG1 should be created successfully\r\n4. Rollover should be completed successfullyMaster Event Expansion should be completed successfully\r\n5. Details should be updated correctly in these tables\r\n6. Sales Transaction should bwe completed successfully\r\n7. Package PKG2 should be created successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.20"
  },
  {
    "id": 30597453,
    "title": "Verify event rollover process for multiple orders created for a patron",
    "section_id": 1681368,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-21284",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_pv_category": 30,
    "custom_refs": "C23188",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Login to PVNG using valid credentials.\r\nExpected Result:\r\nLogin should be successfull.\r\n2. Select the option 'Rollover' from the 'Set Utility \r\nfor' dropdown.\r\nExpected Result:\r\nRollover' option from the 'Set Utility for' dropdown \r\nshould be selecetd.\r\n3. Navigate to Utilities --> Utilities\r\nExpected Result:\r\nPatron should navigated to Utilities tab.\r\n4. Prerequisite:\r\n \r\n1. Identify an active delivery method of type \r\nPOSTAL/POSTAL_TRACKABLE/PERSONAL_PICKUP\r\n2. Identify an active future event with default \r\ndelivery method mentioned in prerequisite #1\r\n3. Complete a sale transaction\r\nExpected Result:\r\nPre-requisite should be met.\r\n5. 1. Create a rollover configuration with the source \r\ntype as ACCOUNT\r\n2.  Validate the configuration\r\nExpected Result:\r\nRollover configuration should be createda nd \r\nvalidated.\r\n6. 1. Navigate to the Rollover Process tab\r\n2. Search for the rollover config\r\n3. The roll over process should be completed \r\nsuccessfully\r\n4. Verify the rollover process details report\r\nExpected Result:\r\nRollover process details report should be \r\nverified.\r\n7. Verify that the orders created for a patron are combined in one order for the target event\r\nExpected Result:\r\nOrders should be verified and all the orders \r\ncreated for a patron should be combined together \r\nin one order\r\n8. 1. Navigate to the ticket services and verify the \r\norder created\r\n2. Navigate to the seat map of the target event \r\nand verify that the seats in the orders are \r\ndisplayed as unavailable.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to PVNG using valid credentials.\r\n2. Select the option 'Rollover' from the 'Set Utility \r\nfor' dropdown.\r\n3. Navigate to Utilities --> Utilities\r\n4. Prerequisite:\r\n \r\n1. Identify an active delivery method of type \r\nPOSTAL/POSTAL_TRACKABLE/PERSONAL_PICKUP\r\n2. Identify an active future event with default \r\ndelivery method mentioned in prerequisite #1\r\n3. Complete a sale transaction\r\n5. 1. Create a rollover configuration with the source \r\ntype as ACCOUNT\r\n2.  Validate the configuration\r\n6. 1. Navigate to the Rollover Process tab\r\n2. Search for the rollover config\r\n3. The roll over process should be completed \r\nsuccessfully\r\n4. Verify the rollover process details report\r\n7. Verify that the orders created for a patron are combined in one order for the target event\r\n8. 1. Navigate to the ticket services and verify the \r\norder created\r\n2. Navigate to the seat map of the target event \r\nand verify that the seats in the orders are \r\ndisplayed as unavailable.",
        "expected": "1. Login should be successfull.\r\n2. Rollover' option from the 'Set Utility for' dropdown \r\nshould be selecetd.\r\n3. Patron should navigated to Utilities tab.\r\n4. Pre-requisite should be met.\r\n5. Rollover configuration should be createda nd \r\nvalidated.\r\n6. Rollover process details report should be \r\nverified.\r\n7. Orders should be verified and all the orders \r\ncreated for a patron should be combined together \r\nin one order\r\n8."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.7.10"
  },
  {
    "id": 30597454,
    "title": "Ticket Services-Verify statement generation when order total is non-zero",
    "section_id": 1681369,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-18895",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 13,
    "custom_refs": "C54281",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Login into PV with valid credentials\r\nUsername-jvarghese\r\nPassword-Cochin@12345\r\nExpected Result:\r\nUser should be able to login into PV successfully\r\n2. Create a new patron and event and note the patron and event ids\r\n3. Perform ticket reservation transaction with COMP buyer type with order total as non-zero(including fees)\r\nExpected Result:\r\nUser should be able to perform ticket reservation transaction successfully\r\n4. 1)Click on New \r\n2)Select format,template and payment plan\r\n3)Click on Apply Changes\r\nExpected Result:\r\nStatement should be generated and displayed successfully\r\n5. Navigate to Ticket Services>Order Details page Statement tab",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login into PV with valid credentials\r\nUsername-jvarghese\r\nPassword-Cochin@12345\r\n2. Create a new patron and event and note the patron and event ids\r\n3. Perform ticket reservation transaction with COMP buyer type with order total as non-zero(including fees)\r\n4. 1)Click on New \r\n2)Select format,template and payment plan\r\n3)Click on Apply Changes\r\n5. Navigate to Ticket Services>Order Details page Statement tab",
        "expected": "1. User should be able to login into PV successfully\r\n2. \r\n3. User should be able to perform ticket reservation transaction successfully\r\n4. Statement should be generated and displayed successfully\r\n5."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.2.00"
  },
  {
    "id": 30597455,
    "title": "Patron Management-Verify statement generation when order total is non-zero",
    "section_id": 1681369,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-18895",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 13,
    "custom_refs": "C54282",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Navigate to Patron Management portal>Statements tab\r\n2. Login into PV with valid credentials\r\nUsername-jvarghese\r\nPassword-Cochin@12345\r\nExpected Result:\r\nUser should be able to login into PV successfully\r\n3. Create a new patron and event and note the patron and event ids\r\n4. Perform ticket reservation transaction when order total is non-zero(including fees)with COMP buyer type and note the transaction id\r\n5. 1)Click on New \r\n2)Select format,template and payment plan\r\n3)Click on Apply Changes\r\nExpected Result:\r\nStatement should be generated and displayed successfully in Patron Management portal",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Navigate to Patron Management portal>Statements tab\r\n2. Login into PV with valid credentials\r\nUsername-jvarghese\r\nPassword-Cochin@12345\r\n3. Create a new patron and event and note the patron and event ids\r\n4. Perform ticket reservation transaction when order total is non-zero(including fees)with COMP buyer type and note the transaction id\r\n5. 1)Click on New \r\n2)Select format,template and payment plan\r\n3)Click on Apply Changes",
        "expected": "1. \r\n2. User should be able to login into PV successfully\r\n3. \r\n4. \r\n5. Statement should be generated and displayed successfully in Patron Management portal"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.2.00"
  },
  {
    "id": 30597456,
    "title": "Verify the Standard Invoice and print the statement .",
    "section_id": 1681369,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-14551",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_pv_category": 30,
    "custom_refs": "C71429",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1)Perform a Reservation /Receivable transaction for Event/package in the ticket sales.\r\nExpected Result:\r\nPre-requisite should be successful.\r\n2. Launch PV Application\r\nExpected Result:\r\nPV Application should be launched successfully\r\n3. 1.Login to the application as cmuser/BO user.\r\nExpected Result:\r\nLogin should be successful\r\n4. Select  Utilities  from the drop down list available at top right corner\r\nExpected Result:\r\nUser should be navigated to  Utilities  Administration page\r\n5. 1.Select Statement/Invoice for the drop down \"Set Utility For:\"\r\n2.Click NEW\r\n3.Enter details corresponding to the transaction mentioned in Pre Requisite\r\n4.Select Standard Invoice for the field Statement Format\r\n5.Click APPLY CHANGES\r\nExpected Result:\r\nStatement config should be created successfully.\r\n6. 1. Click on Validate button for the statement\r\nExpected Result:\r\nValidation should be done successfully\r\n7. 1. Click on Statement process tab\r\nExpected Result:\r\nStatement process portal should be displayed\r\n8. 1. Input the statement config code\r\n2. Click on Find button\r\nExpected Result:\r\nStatement config should be displayed\r\n9. 1. Click on Printer icon near the statement config\r\nExpected Result:\r\nStatement run prompt should be displayed\r\n10. 1. Select the a template from the confirmation prompt\n2. Click on Print button\r\nExpected Result:\r\nStatement run should be started\r\n11. 1. Select  a template from the confirmation prompt\n2. Click on Print button\r\nExpected Result:\r\nStatement run should be started successfully without any errors and the print history value should be incremented\r\n12. Verify the statement/Invoice generated\r\nExpected Result:\r\nA second page should not be generated for each invoice which contains the seat info, including location and quantity.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1)Perform a Reservation /Receivable transaction for Event/package in the ticket sales.\r\n2. Launch PV Application\r\n3. 1.Login to the application as cmuser/BO user.\r\n4. Select  Utilities  from the drop down list available at top right corner\r\n5. 1.Select Statement/Invoice for the drop down \"Set Utility For:\"\r\n2.Click NEW\r\n3.Enter details corresponding to the transaction mentioned in Pre Requisite\r\n4.Select Standard Invoice for the field Statement Format\r\n5.Click APPLY CHANGES\r\n6. 1. Click on Validate button for the statement\r\n7. 1. Click on Statement process tab\r\n8. 1. Input the statement config code\r\n2. Click on Find button\r\n9. 1. Click on Printer icon near the statement config\r\n10. 1. Select the a template from the confirmation prompt\n2. Click on Print button\r\n11. 1. Select  a template from the confirmation prompt\n2. Click on Print button\r\n12. Verify the statement/Invoice generated",
        "expected": "1. Pre-requisite should be successful.\r\n2. PV Application should be launched successfully\r\n3. Login should be successful\r\n4. User should be navigated to  Utilities  Administration page\r\n5. Statement config should be created successfully.\r\n6. Validation should be done successfully\r\n7. Statement process portal should be displayed\r\n8. Statement config should be displayed\r\n9. Statement run prompt should be displayed\r\n10. Statement run should be started\r\n11. Statement run should be started successfully without any errors and the print history value should be incremented\r\n12. A second page should not be generated for each invoice which contains the seat info, including location and quantity."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.30"
  },
  {
    "id": 30597457,
    "title": "Verify the Compact Invoice and Print the statement",
    "section_id": 1681369,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-14551",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_pv_category": 30,
    "custom_refs": "C71430",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1)Perform a Reservation /Receivable transaction for Event/package in the ticket sales.\r\nExpected Result:\r\nPre-requisite should be successful.\r\n2. Launch PV Application\r\nExpected Result:\r\nPV Application should be launched successfully\r\n3. 1.Login to the application as cmuser/BO user.\r\nExpected Result:\r\nLogin should be successful\r\n4. Select  Utilities  from the drop down list available at top right corner\r\nExpected Result:\r\nUser should be navigated to  Utilities  Administration page\r\n5. 1.Select Statement/Invoice for the drop down \"Set Utility For:\"\r\n2.Click NEW\r\n3.Enter details corresponding to the transaction mentioned in Pre Requisite\r\n4.Select Compact Invoice for the field Statement Format\r\n5.Click APPLY CHANGES\r\nExpected Result:\r\nStatement config should be created successfully.\r\n6. 1. Click on Validate button for the statement\r\nExpected Result:\r\nValidation should be done successfully\r\n7. 1. Click on Statement process tab\r\nExpected Result:\r\nStatement process portal should be displayed\r\n8. 1. Input the statement config code\r\n2. Click on Find button\r\nExpected Result:\r\nStatement config should be displayed\r\n9. 1. Click on Printer icon near the statement config\r\nExpected Result:\r\nStatement run prompt should be displayed\r\n10. 1. Select the a template from the confirmation prompt\n2. Click on Print button\r\nExpected Result:\r\nStatement run should be started\r\n11. 1. Select  a template from the confirmation prompt\n2. Click on Print button\r\nExpected Result:\r\nStatement run should be started successfully without any errors and the print history value should be incremented\r\n12. Verify the statement/Invoice generated\r\nExpected Result:\r\nA second page should not be generated for each invoice which contains the seat info, including location and quantity.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1)Perform a Reservation /Receivable transaction for Event/package in the ticket sales.\r\n2. Launch PV Application\r\n3. 1.Login to the application as cmuser/BO user.\r\n4. Select  Utilities  from the drop down list available at top right corner\r\n5. 1.Select Statement/Invoice for the drop down \"Set Utility For:\"\r\n2.Click NEW\r\n3.Enter details corresponding to the transaction mentioned in Pre Requisite\r\n4.Select Compact Invoice for the field Statement Format\r\n5.Click APPLY CHANGES\r\n6. 1. Click on Validate button for the statement\r\n7. 1. Click on Statement process tab\r\n8. 1. Input the statement config code\r\n2. Click on Find button\r\n9. 1. Click on Printer icon near the statement config\r\n10. 1. Select the a template from the confirmation prompt\n2. Click on Print button\r\n11. 1. Select  a template from the confirmation prompt\n2. Click on Print button\r\n12. Verify the statement/Invoice generated",
        "expected": "1. Pre-requisite should be successful.\r\n2. PV Application should be launched successfully\r\n3. Login should be successful\r\n4. User should be navigated to  Utilities  Administration page\r\n5. Statement config should be created successfully.\r\n6. Validation should be done successfully\r\n7. Statement process portal should be displayed\r\n8. Statement config should be displayed\r\n9. Statement run prompt should be displayed\r\n10. Statement run should be started\r\n11. Statement run should be started successfully without any errors and the print history value should be incremented\r\n12. A second page should not be generated for each invoice which contains the seat info, including location and quantity."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.30"
  },
  {
    "id": 30597458,
    "title": "Verify that blacklisted credit card is ineligible for Single sale transaction payment",
    "section_id": 1681370,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12780",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 30,
    "custom_refs": "C58109",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite: A credit card should be blacklisted and note the credit card number\r\n2. Login to PV with valid credentials\r\nExpected Result:\r\nLogin should be successfully completed\r\n3. Perform the following actions,\r\n1 Select sales type as Single\r\n2 Select seats\r\n3 Click on best available\r\nExpected Result:\r\nSeats should be selected and cart should be displayed\r\n4. Select delivery method\r\nExpected Result:\r\nDelivery method should be selected and navigated to Payments tab\r\n5. Select payment option as credit card \r\nEnter the credit card details and click on accept payment\r\nExpected Result:\r\nUser should not be able to complete the trancastion with a blacklisted credit card\r\n6. Select Ticket Sales from Home page\r\nExpected Result:\r\nTicket Sales Portal should be displayed\r\n7. Enter the event name in search criteria and click on Find\r\nExpected Result:\r\nParticular event should be displayed in Ticket sales portal for the transaction",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite: A credit card should be blacklisted and note the credit card number\r\n2. Login to PV with valid credentials\r\n3. Perform the following actions,\r\n1 Select sales type as Single\r\n2 Select seats\r\n3 Click on best available\r\n4. Select delivery method\r\n5. Select payment option as credit card \r\nEnter the credit card details and click on accept payment\r\n6. Select Ticket Sales from Home page\r\n7. Enter the event name in search criteria and click on Find",
        "expected": "1. \r\n2. Login should be successfully completed\r\n3. Seats should be selected and cart should be displayed\r\n4. Delivery method should be selected and navigated to Payments tab\r\n5. User should not be able to complete the trancastion with a blacklisted credit card\r\n6. Ticket Sales Portal should be displayed\r\n7. Particular event should be displayed in Ticket sales portal for the transaction"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30597459,
    "title": "Perform blacklisting a credit card with different values entered for Credit card number and Re-enter card number  fields",
    "section_id": 1681370,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12780",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 30,
    "custom_refs": "C58119",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Logged in user has Security Manager Role Assigned\r\n2. Login to PV with valid credentials\r\nExpected Result:\r\nLogin should be successful and the home page of the application should be launched\r\n3. 1 Select tools portal\r\n2 Select option credit card blacklist\r\nExpected Result:\r\nCredit card blacklist option should be selected\r\n4. Click NEW button\r\nEnter the following fields\r\n 1)Credit card number\r\n 2)Re enter Credit card number as an invalid value\r\n 3)Cardholder Name\r\n 4)Organization\r\n 5)Reason- Chargeback, Lost or stolen card ,other\r\n 6)Comment \r\n 7)Status-unblocked, blocked\r\nExpected Result:\r\nThe user should be able to enter values to following fields:\r\n 1)Credit card number\r\n 2)Re enter Credit card number\r\n 3)Cardholder Name\r\n 4)Organization\r\n 5)Reason- Chargeback, Lost or stolen card ,other\r\n 6)Comment \r\n 7)Status-unblocked, blocked\r\n5. Click on Apply action button\r\nExpected Result:\r\nThe user should not be able to blacklist the credit card and a valid error message should be thrown",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Logged in user has Security Manager Role Assigned\r\n2. Login to PV with valid credentials\r\n3. 1 Select tools portal\r\n2 Select option credit card blacklist\r\n4. Click NEW button\r\nEnter the following fields\r\n 1)Credit card number\r\n 2)Re enter Credit card number as an invalid value\r\n 3)Cardholder Name\r\n 4)Organization\r\n 5)Reason- Chargeback, Lost or stolen card ,other\r\n 6)Comment \r\n 7)Status-unblocked, blocked\r\n5. Click on Apply action button",
        "expected": "1. \r\n2. Login should be successful and the home page of the application should be launched\r\n3. Credit card blacklist option should be selected\r\n4. The user should be able to enter values to following fields:\r\n 1)Credit card number\r\n 2)Re enter Credit card number\r\n 3)Cardholder Name\r\n 4)Organization\r\n 5)Reason- Chargeback, Lost or stolen card ,other\r\n 6)Comment \r\n 7)Status-unblocked, blocked\r\n5. The user should not be able to blacklist the credit card and a valid error message should be thrown"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30597460,
    "title": "Verify the datmart tables after performing Reoffer via Reoffer Reprice utility",
    "section_id": 1681371,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16673",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 17,
    "custom_refs": "C67584",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Launch PV Application\r\nExpected Result:\r\nPV Application should be launched successfully\r\n2. Login to the Application using suitable credentials\r\nExpected Result:\r\nLogin should be successful\r\n3. 1.Navigate to Event Mangement\r\n2.Create a new event\r\nExpected Result:\r\nEvent should be created successfullt. Let the event be EVT1\r\n4. 1.Navigate to Ticket Sales\r\n2.Select a patron\r\n3.Perform a sales transaction for the event EVT1 created above\r\nExpected Result:\r\nSales Transaction should be completed successfully\r\n5. 1.Navigate to Reoffer/Reprice utility\r\n2.Enter input criteria corrseponding to the order \r\ncreated above\r\n3.Choose the source buyer type and Target \r\nbuyer type\r\n4.Select the Runtime options\r\n5.Run the utility\r\nExpected Result:\r\nReoffer should be completed successfully\r\n6. Login to squirel application\r\n5.Connect to Datamart schema\r\n6.Verify the TICKET_DIM, ACTIVITY_DIM, EVEN_DIM, TICKET_FACT for the transaction completed above\r\nExpected Result:\r\nDetails should be updated correctly in these tables",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV Application\r\n2. Login to the Application using suitable credentials\r\n3. 1.Navigate to Event Mangement\r\n2.Create a new event\r\n4. 1.Navigate to Ticket Sales\r\n2.Select a patron\r\n3.Perform a sales transaction for the event EVT1 created above\r\n5. 1.Navigate to Reoffer/Reprice utility\r\n2.Enter input criteria corrseponding to the order \r\ncreated above\r\n3.Choose the source buyer type and Target \r\nbuyer type\r\n4.Select the Runtime options\r\n5.Run the utility\r\n6. Login to squirel application\r\n5.Connect to Datamart schema\r\n6.Verify the TICKET_DIM, ACTIVITY_DIM, EVEN_DIM, TICKET_FACT for the transaction completed above",
        "expected": "1. PV Application should be launched successfully\r\n2. Login should be successful\r\n3. Event should be created successfullt. Let the event be EVT1\r\n4. Sales Transaction should be completed successfully\r\n5. Reoffer should be completed successfully\r\n6. Details should be updated correctly in these tables"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.20"
  },
  {
    "id": 30597461,
    "title": "Verify whether the user is able to lock new seats from the BO sales map after hold code change",
    "section_id": 1681372,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19674",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 9,
    "custom_refs": "C68753",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the link and login with valid credential\r\n2. 1. Select Ticket sale portal\r\n2. Select an Event: PEV23\r\n3. Using Map Sales, go to section D LEFT, row A, \r\nseats 1-4\r\n4. Choose the Home Team hold code\r\n5. Choose group as the sale type\r\n6. Choose for Home Team hold code for the \r\nbuyer type\r\nExpected Result:\r\nUser should be able to assign hold code for \r\nselected seat\r\n3. Verify whether the user is able to lock new \r\nseats from the BO sales map after hold code \r\nchange\r\nExpected Result:\r\nUser should be able to lock seat with out error",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link and login with valid credential\r\n2. 1. Select Ticket sale portal\r\n2. Select an Event: PEV23\r\n3. Using Map Sales, go to section D LEFT, row A, \r\nseats 1-4\r\n4. Choose the Home Team hold code\r\n5. Choose group as the sale type\r\n6. Choose for Home Team hold code for the \r\nbuyer type\r\n3. Verify whether the user is able to lock new \r\nseats from the BO sales map after hold code \r\nchange",
        "expected": "1. \r\n2. User should be able to assign hold code for \r\nselected seat\r\n3. User should be able to lock seat with out error"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.4.00.xx"
  },
  {
    "id": 30597462,
    "title": "Verify whether the user is able to claim the reserved seat after changing the hold code of the reserved seat",
    "section_id": 1681372,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19674",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 9,
    "custom_refs": "C68754",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1) Reserve a seat\r\n2) Change the hold code on the reserved seat via \r\n(eg) the hold code assignment utililty or via \r\npropagating holds on master event expansion, \r\netc\r\n2. Launch the link and Login with valid credential\r\n3. 1. Select the ticket mentioned in the pre \r\nrequisite\r\n2. Complete Claim reservation\r\nExpected Result:\r\nUser should be able to complete the claim \r\nreservation",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1) Reserve a seat\r\n2) Change the hold code on the reserved seat via \r\n(eg) the hold code assignment utililty or via \r\npropagating holds on master event expansion, \r\netc\r\n2. Launch the link and Login with valid credential\r\n3. 1. Select the ticket mentioned in the pre \r\nrequisite\r\n2. Complete Claim reservation",
        "expected": "1. \r\n2. \r\n3. User should be able to complete the claim \r\nreservation"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.4.00.xx"
  },
  {
    "id": 30597463,
    "title": "Verify Events to Reset filter is displayed if the user chooses \"Select Events in Reset Tickets dropdown",
    "section_id": 1681373,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-22691",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 30,
    "custom_refs": "C85559",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Login to PV\r\nExpected Result:\r\nUser should able to login\r\n2. Select Patron Lock Management in Utilities\r\nExpected Result:\r\nUser should able to select\r\n3. Select Account, Reason and Org\r\nExpected Result:\r\nUser should able to select\r\n4. Select \"Select Events\" filter in Reset Tickets Dropdown\r\nExpected Result:\r\nEvents to Reset\" filter should be displayed if the user chooses \"Select Events in Reset Tickets dropdown",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to PV\r\n2. Select Patron Lock Management in Utilities\r\n3. Select Account, Reason and Org\r\n4. Select \"Select Events\" filter in Reset Tickets Dropdown",
        "expected": "1. User should able to login\r\n2. User should able to select\r\n3. User should able to select\r\n4. Events to Reset\" filter should be displayed if the user chooses \"Select Events in Reset Tickets dropdown"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "4.0.00.07"
  },
  {
    "id": 30597464,
    "title": "Verify returning the single event tickets with transaction service charge refund type as Manual and uncheck the ?Manually Refundable? option",
    "section_id": 1681374,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17891",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 30,
    "custom_refs": "C58599",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1)Create multiple events\r\n2)Create transaction service charge refund type as Manual\r\n2. Login to PV with valid credentials\r\nExpected Result:\r\nLogin should be successful and the home page of the applcation should be launched\r\n3. Go to utilities\r\nSelect  Bulk  return/reverse utilty.\r\nExpected Result:\r\nBulk  return/reverse utilty should be selected successfully\r\n4. - Click on the arrow near the Target event option.\r\n- select all the events of a package noted in pre condition\r\nExpected Result:\r\nAll the events should be selected as Target event\r\n5. - Verify Preview for the selected events\r\nExpected Result:\r\nPreview should show the exact details (no. of tickets and Price) as per the transactions completed and also as per the filter criteria set\r\n6. -Navigate to Runtime options\r\n-UnCheck the \"Manually Refundable\" option\r\nExpected Result:\r\n\"Manually Refundable\" option should be unchecked\r\n7. Run the Utility\r\nExpected Result:\r\nUtility should be completed succesfully\r\n8. Verify returning the single event tickets with transaction service charge refund type as Manual and uncheck the \"Manually Refundable\" option\r\nExpected Result:\r\nIf a transaction service charge is configured as Refund Type = Manual, then it shall only be eligible for refund if the \"Manually Refundable\" option is selected for the utility in conjunction with the transaction service charge charge option.\r\n9. Logout from the application\r\nExpected Result:\r\nUser should able to logout from the application",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1)Create multiple events\r\n2)Create transaction service charge refund type as Manual\r\n2. Login to PV with valid credentials\r\n3. Go to utilities\r\nSelect  Bulk  return/reverse utilty.\r\n4. - Click on the arrow near the Target event option.\r\n- select all the events of a package noted in pre condition\r\n5. - Verify Preview for the selected events\r\n6. -Navigate to Runtime options\r\n-UnCheck the \"Manually Refundable\" option\r\n7. Run the Utility\r\n8. Verify returning the single event tickets with transaction service charge refund type as Manual and uncheck the \"Manually Refundable\" option\r\n9. Logout from the application",
        "expected": "1. \r\n2. Login should be successful and the home page of the applcation should be launched\r\n3. Bulk  return/reverse utilty should be selected successfully\r\n4. All the events should be selected as Target event\r\n5. Preview should show the exact details (no. of tickets and Price) as per the transactions completed and also as per the filter criteria set\r\n6. \"Manually Refundable\" option should be unchecked\r\n7. Utility should be completed succesfully\r\n8. If a transaction service charge is configured as Refund Type = Manual, then it shall only be eligible for refund if the \"Manually Refundable\" option is selected for the utility in conjunction with the transaction service charge charge option.\r\n9. User should able to logout from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.2.00"
  },
  {
    "id": 30597465,
    "title": "Verify the Event return utility when Multiple target events are selected",
    "section_id": 1681374,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-18745",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 30,
    "custom_refs": "C58649",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. -Create four Events : eg: ABC001,DEF002,xyz100,uvw200\r\n-Transaction 1:  ABC001 has 4 tix sold\r\n-Transaction 2: ABC001 has 2 tix sold and xyz100 has 2 tix sold\r\n-Transaction 3: DEF002 has 4 tix sold and xyz100 has 2 tix sold\r\n-Transaction 4: xyz100 has 1 ticket sold and uvw200 has 1 ticket sold\r\n2. Launch PV aaplication\r\nExpected Result:\r\nThe application should be launched successfully.\r\n3. Select the specific agency in home page which suppliers are set\r\nExpected Result:\r\nUser should be login to the specific agency\r\n4. Navigate to Utilities tab\r\nExpected Result:\r\nThe user should navigate to Utilities tab\r\n5. Select the Event Return/Reverse utility\r\nExpected Result:\r\nUser should able to select the Event Return/Reverse utility\r\n6. - Click on the arrow near the Target event option.\r\n- Navigate to Target Event option\r\n- Select the two Target events ABC001,DEF002\r\nExpected Result:\r\nThe Target events should be selected\r\n7. - Verify Preview for the selected events\r\nExpected Result:\r\nIt shall need to display each target event with the appropriate \"Target Event\" label and continue to display any associated events with their appropriate label (\"Associated Event\").\r\n8. - Select other mandatory fields\r\n- Run the Utility\r\nExpected Result:\r\nThe utility should return all tickets in Transactions 1, only the ABC001 tix from Transaction 2, and only the DEF002 tickets in Transaction 3.   Transaction 4 shall not be returned as it has no tickets sold to any selected Target Event.\r\n9. - Navigate to Ticket Serices Portal\r\n- Select the Transactions completed for the selected Event\r\n- Verify the Return/Reverse Transaction\r\nExpected Result:\r\nReturn/Reverse Transaction should be successful and Ticket Services updated accordingly\r\n10. Logout from the application\r\nExpected Result:\r\nUser should able to logout from the application\r\n11. 1.Match Primary tix only = false\r\n2.None of the Associated Events selected\r\nExpected Result:\r\nUser should able to set the other filter parameters",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. -Create four Events : eg: ABC001,DEF002,xyz100,uvw200\r\n-Transaction 1:  ABC001 has 4 tix sold\r\n-Transaction 2: ABC001 has 2 tix sold and xyz100 has 2 tix sold\r\n-Transaction 3: DEF002 has 4 tix sold and xyz100 has 2 tix sold\r\n-Transaction 4: xyz100 has 1 ticket sold and uvw200 has 1 ticket sold\r\n2. Launch PV aaplication\r\n3. Select the specific agency in home page which suppliers are set\r\n4. Navigate to Utilities tab\r\n5. Select the Event Return/Reverse utility\r\n6. - Click on the arrow near the Target event option.\r\n- Navigate to Target Event option\r\n- Select the two Target events ABC001,DEF002\r\n7. - Verify Preview for the selected events\r\n8. - Select other mandatory fields\r\n- Run the Utility\r\n9. - Navigate to Ticket Serices Portal\r\n- Select the Transactions completed for the selected Event\r\n- Verify the Return/Reverse Transaction\r\n10. Logout from the application\r\n11. 1.Match Primary tix only = false\r\n2.None of the Associated Events selected",
        "expected": "1. \r\n2. The application should be launched successfully.\r\n3. User should be login to the specific agency\r\n4. The user should navigate to Utilities tab\r\n5. User should able to select the Event Return/Reverse utility\r\n6. The Target events should be selected\r\n7. It shall need to display each target event with the appropriate \"Target Event\" label and continue to display any associated events with their appropriate label (\"Associated Event\").\r\n8. The utility should return all tickets in Transactions 1, only the ABC001 tix from Transaction 2, and only the DEF002 tickets in Transaction 3.   Transaction 4 shall not be returned as it has no tickets sold to any selected Target Event.\r\n9. Return/Reverse Transaction should be successful and Ticket Services updated accordingly\r\n10. User should able to logout from the application\r\n11. User should able to set the other filter parameters"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.2.00"
  },
  {
    "id": 30597466,
    "title": "Verify the datmart tables after returning tickets of an order via Event Bulk Return Reverse utility",
    "section_id": 1681374,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16673",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_pv_category": 17,
    "custom_refs": "C67583",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Launch PV Application\r\nExpected Result:\r\nPV Application should be launched successfully\r\n2. Login to the Application using suitable credentials\r\nExpected Result:\r\nLogin should be successful\r\n3. 1.Navigate to Event Mangement\r\n2.Create a new event\r\nExpected Result:\r\nEvent should be created successfullt. Let the event be EVT1\r\n4. 1.Navigate to Ticket Sales\r\n2.Select a patron\r\n3.Perform a sales transaction for the event EVT1 created above\r\nExpected Result:\r\nSales Transaction should be completed successfully\r\n5. 1.Navigate to Event Bulk Return/Reverse utility\r\n2.Enter input criteria corrseponding to the order created above\r\n3.Enter the Run time options\r\n4.Run the utility\r\nExpected Result:\r\nOrder should be returned successfully\r\n6. Login to squirel application\r\n5.Connect to Datamart schema\r\n6.Verify the TICKET_DIM, ACTIVITY_DIM, EVEN_DIM, TICKET_FACT for the transaction completed above\r\nExpected Result:\r\nDetails should be updated correctly in these tables",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV Application\r\n2. Login to the Application using suitable credentials\r\n3. 1.Navigate to Event Mangement\r\n2.Create a new event\r\n4. 1.Navigate to Ticket Sales\r\n2.Select a patron\r\n3.Perform a sales transaction for the event EVT1 created above\r\n5. 1.Navigate to Event Bulk Return/Reverse utility\r\n2.Enter input criteria corrseponding to the order created above\r\n3.Enter the Run time options\r\n4.Run the utility\r\n6. Login to squirel application\r\n5.Connect to Datamart schema\r\n6.Verify the TICKET_DIM, ACTIVITY_DIM, EVEN_DIM, TICKET_FACT for the transaction completed above",
        "expected": "1. PV Application should be launched successfully\r\n2. Login should be successful\r\n3. Event should be created successfullt. Let the event be EVT1\r\n4. Sales Transaction should be completed successfully\r\n5. Order should be returned successfully\r\n6. Details should be updated correctly in these tables"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.20"
  },
  {
    "id": 30597467,
    "title": "Verify that Bulk Reservation Release is successfully completed if there exist more than 1 order for the same patron for the different packages",
    "section_id": 1681375,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19632",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 30,
    "custom_refs": "C73830",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequiste: \r\n1.Perform a number of Reservation orders for a \r\npatron in different package.\r\n2.Create a ptron with patron traits\r\nExpected Result:\r\nThe prerequisite should be completed\r\n2. Launch PV aaplication\r\nExpected Result:\r\nThe application should be launched successfully.\r\n3. Login with Valid USERNAME and PASSWORD.\r\nExpected Result:\r\nUSER should be able to login successfully.\r\n4. Select 'utilities' from the menu.\r\nExpected Result:\r\nThe Utilities should be selected\r\n5. 1. Select the drop down 'Set Utility for'.\r\n2. Select Bulk Reservation Release Utility from the options.\r\nExpected Result:\r\n1. The Bulk Reservation Release Utility should be selected.\r\n2. The Page with varoius criteria should be opened.\r\n6. 1. Input the necessary filter criteria along with the Package for which transaction done in Prerequiste.\r\n2. Click on Preview\r\nExpected Result:\r\n1. The user should select the package and preview the selection.\r\n2. Verify the Bulk Release Preview is as per the selection given.\r\n7. 1. Click on Detail Report.\r\n2. Verify the details.\r\nExpected Result:\r\nThe detailed report  of the Bulk Release Details should be open in a new window, and the details should be based on the selection.\r\n8. Click on Release All.\r\nExpected Result:\r\n1. User should get prompts for releasing the reservation.\r\n2. Also the confirmation message should be displayed \"Reservation Release process initiated successfully; reservations release process will release selected seats\"\r\n9. 1. Select Ticket Services from Ticketing option.\r\n2.Pull out the transaction (Reservation done in Prerequisite)\r\nExpected Result:\r\nUser should be able to pull out the transaction done in Prerequisite.\r\n10. 1. Check out the Status of the reserved tickets.\r\nExpected Result:\r\n1. The status of the tickets should be Release.\r\n2. Release ID# should also be displayed.\r\n11. Click on Log out.\r\nExpected Result:\r\nUser should log out from the application successfully",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequiste: \r\n1.Perform a number of Reservation orders for a \r\npatron in different package.\r\n2.Create a ptron with patron traits\r\n2. Launch PV aaplication\r\n3. Login with Valid USERNAME and PASSWORD.\r\n4. Select 'utilities' from the menu.\r\n5. 1. Select the drop down 'Set Utility for'.\r\n2. Select Bulk Reservation Release Utility from the options.\r\n6. 1. Input the necessary filter criteria along with the Package for which transaction done in Prerequiste.\r\n2. Click on Preview\r\n7. 1. Click on Detail Report.\r\n2. Verify the details.\r\n8. Click on Release All.\r\n9. 1. Select Ticket Services from Ticketing option.\r\n2.Pull out the transaction (Reservation done in Prerequisite)\r\n10. 1. Check out the Status of the reserved tickets.\r\n11. Click on Log out.",
        "expected": "1. The prerequisite should be completed\r\n2. The application should be launched successfully.\r\n3. USER should be able to login successfully.\r\n4. The Utilities should be selected\r\n5. 1. The Bulk Reservation Release Utility should be selected.\r\n2. The Page with varoius criteria should be opened.\r\n6. 1. The user should select the package and preview the selection.\r\n2. Verify the Bulk Release Preview is as per the selection given.\r\n7. The detailed report  of the Bulk Release Details should be open in a new window, and the details should be based on the selection.\r\n8. 1. User should get prompts for releasing the reservation.\r\n2. Also the confirmation message should be displayed \"Reservation Release process initiated successfully; reservations release process will release selected seats\"\r\n9. User should be able to pull out the transaction done in Prerequisite.\r\n10. 1. The status of the tickets should be Release.\r\n2. Release ID# should also be displayed.\r\n11. User should log out from the application successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.5.00"
  },
  {
    "id": 30597468,
    "title": "Verify that Bulk Reservation Release is successfully completed if there exist more than 1 order for the different patrons for the same package",
    "section_id": 1681375,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19632",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 30,
    "custom_refs": "C73832",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequiste: Perform a number of Reservation \r\norders for different patrons in a Package.\r\nExpected Result:\r\nThe prerequisite should be completed\r\n2. Launch PV aaplication\r\nExpected Result:\r\nThe application should be launched successfully.\r\n3. Login with Valid USERNAME and PASSWORD.\r\nExpected Result:\r\nUSER should be able to login successfully.\r\n4. Select 'utilities' from the menu.\r\nExpected Result:\r\nThe Utilities should be selected\r\n5. 1. Select the drop down 'Set Utility for'.\r\n2. Select Bulk Reservation Release Utility from the options.\r\nExpected Result:\r\n1. The Bulk Reservation Release Utility should be selected.\r\n2. The Page with varoius criteria should be opened.\r\n6. 1. Input the necessary filter criteria along with the Package for which transaction done in Prerequiste.\r\n2. Click on Preview\r\nExpected Result:\r\n1. The user should select the package and preview the selection.\r\n2. Verify the Bulk Release Preview is as per the selection given.\r\n7. 1. Click on Detail Report.\r\n2. Verify the details.\r\nExpected Result:\r\nThe detailed report  of the Bulk Release Details should be open in a new window, and the details should be based on the selection.\r\n8. Click on Release All.\r\nExpected Result:\r\n1. User should get prompts for releasing the reservation.\r\n2. Also the confirmation message should be displayed \"Reservation Release process initiated successfully; reservations release process will release selected seats\"\r\n9. 1. Select Ticket Services from Ticketing option.\r\n2.Pull out the transaction (Reservation done in Prerequisite)\r\nExpected Result:\r\nUser should be able to pull out the transaction done in Prerequisite.\r\n10. 1. Check out the Status of the reserved tickets.\r\nExpected Result:\r\n1. The status of the tickets should be Release.\r\n2. Release ID# should also be displayed.\r\n11. Click on Log out.\r\nExpected Result:\r\nUser should log out from the application successfully",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequiste: Perform a number of Reservation \r\norders for different patrons in a Package.\r\n2. Launch PV aaplication\r\n3. Login with Valid USERNAME and PASSWORD.\r\n4. Select 'utilities' from the menu.\r\n5. 1. Select the drop down 'Set Utility for'.\r\n2. Select Bulk Reservation Release Utility from the options.\r\n6. 1. Input the necessary filter criteria along with the Package for which transaction done in Prerequiste.\r\n2. Click on Preview\r\n7. 1. Click on Detail Report.\r\n2. Verify the details.\r\n8. Click on Release All.\r\n9. 1. Select Ticket Services from Ticketing option.\r\n2.Pull out the transaction (Reservation done in Prerequisite)\r\n10. 1. Check out the Status of the reserved tickets.\r\n11. Click on Log out.",
        "expected": "1. The prerequisite should be completed\r\n2. The application should be launched successfully.\r\n3. USER should be able to login successfully.\r\n4. The Utilities should be selected\r\n5. 1. The Bulk Reservation Release Utility should be selected.\r\n2. The Page with varoius criteria should be opened.\r\n6. 1. The user should select the package and preview the selection.\r\n2. Verify the Bulk Release Preview is as per the selection given.\r\n7. The detailed report  of the Bulk Release Details should be open in a new window, and the details should be based on the selection.\r\n8. 1. User should get prompts for releasing the reservation.\r\n2. Also the confirmation message should be displayed \"Reservation Release process initiated successfully; reservations release process will release selected seats\"\r\n9. User should be able to pull out the transaction done in Prerequisite.\r\n10. 1. The status of the tickets should be Release.\r\n2. Release ID# should also be displayed.\r\n11. User should log out from the application successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.5.00"
  },
  {
    "id": 30597469,
    "title": "Verify reprice for an event by selecting Sales type as Single for reservation transactions",
    "section_id": 1681376,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-15523",
    "created_by": 333,
    "created_on": 1684436087,
    "updated_by": 333,
    "updated_on": 1684436087,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 30,
    "custom_refs": "C1850411",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1. Launch PV application.\r\n2. Login using valid username and password.\r\nExpected Result:\r\nThe login should be successful and the Home page of the application should be displayed.\r\n2. Create a few Event reservation transactions for an event for a buyer type B1.\r\n3. Select 'Utilities' from the 'Utilities' tab.\r\nExpected Result:\r\nThe Utilities portal should be launched.\r\n4. Select 'Reoffer/Reprice' from the 'Set Utility For' dropdown.\r\nExpected Result:\r\nThe 'Reoffer/Reprice' portal should be launched.\r\n5. 1. Select Reservations checkbox for 'Include' field.\r\n2. Select Sales Type as Single.\r\n3. Select other details such that the the transactions of Prerequisites are included.\r\n4. Select source buyer type as B1 and a different target buyer type.\r\n5. Click on the 'Preview' button.\r\nExpected Result:\r\nThe Total Orders and Total Seats should be correctly displayed.\r\n6. Click on the 'Run Utility' button.\r\nExpected Result:\r\nThe process should be completed successfully and the 'Utility Run Status' Tab should show the status 'Complete'\r\n7. Verify the Re-offer of Buyer Types in Ticket Services\r\nExpected Result:\r\nThe Buyer Types should be reoffered successfully to the target buyer type as given in Step6.\r\n8. Click on Logout link\r\nExpected Result:\r\nUser should be logged out successfully",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch PV application.\r\n2. Login using valid username and password.\r\n2. Create a few Event reservation transactions for an event for a buyer type B1.\r\n3. Select 'Utilities' from the 'Utilities' tab.\r\n4. Select 'Reoffer/Reprice' from the 'Set Utility For' dropdown.\r\n5. 1. Select Reservations checkbox for 'Include' field.\r\n2. Select Sales Type as Single.\r\n3. Select other details such that the the transactions of Prerequisites are included.\r\n4. Select source buyer type as B1 and a different target buyer type.\r\n5. Click on the 'Preview' button.\r\n6. Click on the 'Run Utility' button.\r\n7. Verify the Re-offer of Buyer Types in Ticket Services\r\n8. Click on Logout link",
        "expected": "1. The login should be successful and the Home page of the application should be displayed.\r\n2. \r\n3. The Utilities portal should be launched.\r\n4. The 'Reoffer/Reprice' portal should be launched.\r\n5. The Total Orders and Total Seats should be correctly displayed.\r\n6. The process should be completed successfully and the 'Utility Run Status' Tab should show the status 'Complete'\r\n7. The Buyer Types should be reoffered successfully to the target buyer type as given in Step6.\r\n8. User should be logged out successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.00"
  },
  {
    "id": 30597470,
    "title": "Verify reprice for an event by selecting Sales type as Single for sale transactions",
    "section_id": 1681376,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-15523",
    "created_by": 333,
    "created_on": 1684436088,
    "updated_by": 333,
    "updated_on": 1684436088,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 30,
    "custom_refs": "C1850412",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1. Launch PV application.\n2. Login using valid username and password.\r\nExpected Result:\r\nThe login should be successful and the Home page of the application should be displayed.\r\n2. Create a few Event sale transactions for an event for a buyer type B1.\r\n3. Select 'Utilities' from the 'Utilities' tab.\r\nExpected Result:\r\nThe Utilities portal should be launched.\r\n4. Select 'Reoffer/Reprice' from the 'Set Utility For' dropdown.\r\nExpected Result:\r\nThe 'Reoffer/Reprice' portal should be launched.\r\n5. 1. Select Sale checkbox for 'Include' field.\n2. Select Sales Type as Single.\n3. Select other details such that the the transactions of Prerequisites are included.\n4. Select source buyer type as B1 and a different target buyer type.\n5. Click on the 'Preview' button.\r\nExpected Result:\r\nThe Total Orders and Total Seats should be correctly displayed.\r\n6. Click on the 'Run Utility' button.\r\nExpected Result:\r\nThe process should be completed successfully and the 'Utility Run Status' Tab should show the status 'Complete'\r\n7. Verify the Re-offer of Buyer Types in Ticket Services\r\nExpected Result:\r\nThe Buyer Types should be reoffered successfully to the target buyer type as given in Step6.\r\n8. Click on Logout link\r\nExpected Result:\r\nUser should be logged out successfully",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch PV application.\n2. Login using valid username and password.\r\n2. Create a few Event sale transactions for an event for a buyer type B1.\r\n3. Select 'Utilities' from the 'Utilities' tab.\r\n4. Select 'Reoffer/Reprice' from the 'Set Utility For' dropdown.\r\n5. 1. Select Sale checkbox for 'Include' field.\n2. Select Sales Type as Single.\n3. Select other details such that the the transactions of Prerequisites are included.\n4. Select source buyer type as B1 and a different target buyer type.\n5. Click on the 'Preview' button.\r\n6. Click on the 'Run Utility' button.\r\n7. Verify the Re-offer of Buyer Types in Ticket Services\r\n8. Click on Logout link",
        "expected": "1. The login should be successful and the Home page of the application should be displayed.\r\n2. \r\n3. The Utilities portal should be launched.\r\n4. The 'Reoffer/Reprice' portal should be launched.\r\n5. The Total Orders and Total Seats should be correctly displayed.\r\n6. The process should be completed successfully and the 'Utility Run Status' Tab should show the status 'Complete'\r\n7. The Buyer Types should be reoffered successfully to the target buyer type as given in Step6.\r\n8. User should be logged out successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.00"
  },
  {
    "id": 30597471,
    "title": "Verify ReofferReprice Utility for Package Sale Transaction",
    "section_id": 1681376,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12314",
    "created_by": 333,
    "created_on": 1684436088,
    "updated_by": 333,
    "updated_on": 1684436088,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_pv_category": 30,
    "custom_refs": "C1850413",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Perform Reservation Transactions for a Package Pkg1.\nNote down the Transaction ID.\r\n2. Site should be launched\r\n3. Login to the PV2.0 Application\r\nExpected Result:\r\nThe user should be able to login to the application\r\n4. Navigate to Utilities portal and select the Reoffer/Reprice Utility\r\nExpected Result:\r\nUser should be able to select the Reoffer/Reprice Utility\r\n5. Input the necessary details, Package mentioned in the Transaction, source-target buyer types etc\r\nExpected Result:\r\nUser should be able to input the necessary information\r\n6. Select Preview button\r\nExpected Result:\r\nUser should be provided with summary information\r\n7. Run the Utiltiy\r\nExpected Result:\r\nThe process should be completed successfully and the 'Utility Run Status' Tab should show the status 'Complete'\r\n8. Click on Logout link\r\nExpected Result:\r\nUser should be logged out successfully\r\n9. Go to Ticket Services\nSearch  for the particular order\nSelect the order\nverify that the buyer types have been reoffered correctly\r\nExpected Result:\r\nThe buyer types have been reoffered correctly",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform Reservation Transactions for a Package Pkg1.\nNote down the Transaction ID.\r\n2. \r\n3. Login to the PV2.0 Application\r\n4. Navigate to Utilities portal and select the Reoffer/Reprice Utility\r\n5. Input the necessary details, Package mentioned in the Transaction, source-target buyer types etc\r\n6. Select Preview button\r\n7. Run the Utiltiy\r\n8. Click on Logout link\r\n9. Go to Ticket Services\nSearch  for the particular order\nSelect the order\nverify that the buyer types have been reoffered correctly",
        "expected": "1. \r\n2. Site should be launched\r\n3. The user should be able to login to the application\r\n4. User should be able to select the Reoffer/Reprice Utility\r\n5. User should be able to input the necessary information\r\n6. User should be provided with summary information\r\n7. The process should be completed successfully and the 'Utility Run Status' Tab should show the status 'Complete'\r\n8. User should be logged out successfully\r\n9. The buyer types have been reoffered correctly"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.0.10"
  },
  {
    "id": 30597472,
    "title": "Change TOTP validation to require/support Timestamp parameter : TOTP is present, the timestamp (parameter \"t\") needs to be present as well.",
    "section_id": 1681377,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 333,
    "created_on": 1684436088,
    "updated_by": 333,
    "updated_on": 1684436088,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": "C1848013",
    "custom_preconds": "{{base_url1}}/api/v2/accessControl/validate/ticket?barcode=6H37-DNNGAGE7 &scanFacilityCode=DEFAULT&scanAreaCode=DEFAULT&scanDeviceCode=DEFAULT&totp=28536616&scanType=MANUAL&scanMediaType=TS",
    "custom_test_purpose": null,
    "custom_steps": "1. TOTP is present, the timestamp (parameter \"t\") needs to be present as well in the Valdiate Scan API\n\n\r\nExpected Result:\r\nresult type should be MSTS (MISSING_TIMESTAMP) and if the event is set to enforce barcode rotation, the response should be \"PVTC\"\n \n\r\n2. Calculate the TOTP for that timestamp and compare the TOTP sent with the TOTP calculated. \r\nExpected Result:\r\nresult type should be INVALID if they don't match\n\nIf match, check if the timestamp is inside the grace period\n\n1.If it is not inside the grace period, send a result type VOGP (VALID_OUTSIDE_GRACE_PERIOD) and if the event is set to enforce barcode rotation, the response should be \"PVTC\"\n2.If it is inside the grace period, send a result type VALID and the response should be similar to the current implementation in these cases.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. TOTP is present, the timestamp (parameter \"t\") needs to be present as well in the Valdiate Scan API\n\n\r\n2. Calculate the TOTP for that timestamp and compare the TOTP sent with the TOTP calculated.",
        "expected": "1. result type should be MSTS (MISSING_TIMESTAMP) and if the event is set to enforce barcode rotation, the response should be \"PVTC\"\n \n\r\n2. result type should be INVALID if they don't match\n\nIf match, check if the timestamp is inside the grace period\n\n1.If it is not inside the grace period, send a result type VOGP (VALID_OUTSIDE_GRACE_PERIOD) and if the event is set to enforce barcode rotation, the response should be \"PVTC\"\n2.If it is inside the grace period, send a result type VALID and the response should be similar to the current implementation in these cases."
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30597473,
    "title": "Update the Scan Actions API to accept the totpTimestamp parameter:Create Action",
    "section_id": 1681377,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 333,
    "created_on": 1684436088,
    "updated_by": 333,
    "updated_on": 1684436088,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": "C1848014",
    "custom_preconds": "{{base_url}}/api/v2/accessControl/scans\r\n\r\n{\r\n    \"scanActions\": {\r\n        \"ticketPrintScans\": [\r\n            {\r\n                \"scanAction\": \"CREATE\",\r\n                \"barcode\": \"UGLM-XPCMMMAM\",\r\n                \"totp\": \"35484682\",\r\n                \"totpTimestamp\": \"1646445660\",\r\n                \"scanType\": \"Barcode_1d\",\r\n                \"scanMediaType\": \"TS\",\r\n                \"scanDate\": \"2022-03-04T18:00:00.000-08:00\",\r\n                \"scanOperator\": \"APIuser1\",\r\n                \"scanArea\": {\r\n                    \"code\": \"DEFAULT\"\r\n                },\r\n                \"scanDevice\": {\r\n                    \"code\": \"DEFAULT\"\r\n                },\r\n                \"scanResult\": {\r\n                    \"code\": \"0\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}",
    "custom_test_purpose": null,
    "custom_steps": "1. GIVEN the TOTP is passed in the body of the request, AND in the \"scanAction\" is CREATE AND the newly created property protect.the.barcode.scan.actions.eval.totp.results is true \r\nExpected Result:\r\nThese fields should be evaluated and persisted in the database:\nSelect * from usa1d.ticket_print_scan order by CREATED_DATE desc\n\n    totp result type\n    totp value\n    totp timestamp\n    totp time diff in seconds",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. GIVEN the TOTP is passed in the body of the request, AND in the \"scanAction\" is CREATE AND the newly created property protect.the.barcode.scan.actions.eval.totp.results is true",
        "expected": "1. These fields should be evaluated and persisted in the database:\nSelect * from usa1d.ticket_print_scan order by CREATED_DATE desc\n\n    totp result type\n    totp value\n    totp timestamp\n    totp time diff in seconds"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30597474,
    "title": "Protect the Barcode: Add Event Inventory Barcode Secret Backfill Tooling in Support of this Project : Backfill for Barcode Rotation radio button visibility",
    "section_id": 1681378,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 333,
    "created_on": 1684436088,
    "updated_by": 333,
    "updated_on": 1684436088,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": "C1848032",
    "custom_preconds": "protect.the.barcode.feature.enabled = false /not enabled \r\nUser = non Deployment Manager role",
    "custom_test_purpose": null,
    "custom_steps": "1. Perform Event search in Tools> Inventory > Event Tab \nVerify the availability of Backfill for Barcode Rotation radio button\r\nExpected Result:\r\nThe radio button option should not be displayed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform Event search in Tools> Inventory > Event Tab \nVerify the availability of Backfill for Barcode Rotation radio button",
        "expected": "1. The radio button option should not be displayed"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30597475,
    "title": "Protect the Barcode: Add Event Inventory Barcode Secret Backfill Tooling in Support of this Project : Radio button selected behavior",
    "section_id": 1681378,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 333,
    "created_on": 1684436088,
    "updated_by": 333,
    "updated_on": 1684436088,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": "C1848034",
    "custom_preconds": "protect.the.barcode.feature.enabled = true\r\nPerform Event search in Tools> Inventory > Event Tab \r\nVerify the availability of Update Event Rotate Barcode",
    "custom_test_purpose": null,
    "custom_steps": "1. Select the radio button\r\nExpected Result:\r\nnew checkbox for Event Rotate Barcode Type on the right panel should be checked/disabled, with the user being required to select one of the Event Rotate Barcode Type options.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Select the radio button",
        "expected": "1. new checkbox for Event Rotate Barcode Type on the right panel should be checked/disabled, with the user being required to select one of the Event Rotate Barcode Type options."
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30597476,
    "title": "Protect the Barcode: Support Barcode Rotation Setting being replicated on Event Copy & Bulk Event Creation :  Bulk Creation",
    "section_id": 1681378,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 333,
    "created_on": 1684436088,
    "updated_by": 333,
    "updated_on": 1684436088,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": "C1848037",
    "custom_preconds": "protect.the.barcode.feature.enabled",
    "custom_test_purpose": null,
    "custom_steps": "1. Create a new event \nEnable Access Control to use Barcode Rotation \nSave \nBulk copy Event\r\nExpected Result:\r\nThe newly created events should copy the Barcode Rotation Setting from the source event",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Create a new event \nEnable Access Control to use Barcode Rotation \nSave \nBulk copy Event",
        "expected": "1. The newly created events should copy the Barcode Rotation Setting from the source event"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30597477,
    "title": "Verify printing ticket from ticket services",
    "section_id": 1681379,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16728",
    "created_by": 333,
    "created_on": 1684436088,
    "updated_by": 333,
    "updated_on": 1684436088,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 10,
    "custom_refs": "C60166",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Configure the Printer in Application (Boca Printer)\n2. Postal_code attribute should be configured in Print format of Ticket design to print postal codes\n3. Create event with Ticket print status as \"Now\"\r\nExpected Result:\r\nPre-requisite should be successful.\r\n2. Launch  PV application with the following URL \n\r\nExpected Result:\r\nThe application should be launched.\r\n3. 1. Navigate to ticket sale page\n2. Select the event\n3. Select the patron\n4. Input # of tickets\n5. Click on the lock seats button\r\nExpected Result:\r\nUser should be navigated to the shopping cart page\r\n4. 1. Select delivery method as Print Now\n2. Select the payment method\n3. Click on checkout \n4. Complete the transaction\r\nExpected Result:\r\nUser able to complete the transaction\r\n5. 1. Navigate to ticket services\n2. Click on the Delivery tab\n3. Click on the Delivery link id\n4. In Select Action drop down, Select \"Print Selected Tickets\"\n5. Click on apply Action and print the tickets\r\nExpected Result:\r\nTickets should get printed in formatted postal code on ticket.\r\n6. Logout from the application\r\nExpected Result:\r\nUser should able to logout from the application",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Configure the Printer in Application (Boca Printer)\n2. Postal_code attribute should be configured in Print format of Ticket design to print postal codes\n3. Create event with Ticket print status as \"Now\"\r\n2. Launch  PV application with the following URL \n\r\n3. 1. Navigate to ticket sale page\n2. Select the event\n3. Select the patron\n4. Input # of tickets\n5. Click on the lock seats button\r\n4. 1. Select delivery method as Print Now\n2. Select the payment method\n3. Click on checkout \n4. Complete the transaction\r\n5. 1. Navigate to ticket services\n2. Click on the Delivery tab\n3. Click on the Delivery link id\n4. In Select Action drop down, Select \"Print Selected Tickets\"\n5. Click on apply Action and print the tickets\r\n6. Logout from the application",
        "expected": "1. Pre-requisite should be successful.\r\n2. The application should be launched.\r\n3. User should be navigated to the shopping cart page\r\n4. User able to complete the transaction\r\n5. Tickets should get printed in formatted postal code on ticket.\r\n6. User should able to logout from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.30"
  },
  {
    "id": 30597478,
    "title": "Verify printing tickets during Checkout process",
    "section_id": 1681379,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16728",
    "created_by": 333,
    "created_on": 1684436088,
    "updated_by": 333,
    "updated_on": 1684436088,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 10,
    "custom_refs": "C60167",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Configure the Printer in Application (Boca Printer)\n2. Postal_code attribute should be configured in Print format of Ticket design to print postal codes\n3. Create event with Ticket print status as \"Now\"\r\nExpected Result:\r\nPre-requisite should be successful.\r\n2. Launch  PV application with the following URL \n\r\nExpected Result:\r\nThe application should be launched.\r\n3. 1. Navigate to ticket sale page\n2. Select the event\n3. Select the patron\n4. Input # of tickets\n5. Click on the lock seats button\r\nExpected Result:\r\nUser should be navigated to the shopping cart page\r\n4. 1. Select delivery method as Print Now\n2. Select the payment method\n3. Click on checkout \n4. Complete the transaction\r\nExpected Result:\r\nUser able to complete the transaction\n\nTickets should get printed in formatted postal code on ticket.\r\n5. Logout from the application\r\nExpected Result:\r\nUser should able to logout from the application",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Configure the Printer in Application (Boca Printer)\n2. Postal_code attribute should be configured in Print format of Ticket design to print postal codes\n3. Create event with Ticket print status as \"Now\"\r\n2. Launch  PV application with the following URL \n\r\n3. 1. Navigate to ticket sale page\n2. Select the event\n3. Select the patron\n4. Input # of tickets\n5. Click on the lock seats button\r\n4. 1. Select delivery method as Print Now\n2. Select the payment method\n3. Click on checkout \n4. Complete the transaction\r\n5. Logout from the application",
        "expected": "1. Pre-requisite should be successful.\r\n2. The application should be launched.\r\n3. User should be navigated to the shopping cart page\r\n4. User able to complete the transaction\n\nTickets should get printed in formatted postal code on ticket.\r\n5. User should able to logout from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.30"
  },
  {
    "id": 30597479,
    "title": "Verify if the user is able to reset the tickets through batch print",
    "section_id": 1681379,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-15299",
    "created_by": 333,
    "created_on": 1684436088,
    "updated_by": 333,
    "updated_on": 1684436088,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_pv_category": 25,
    "custom_refs": "C60173",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the PV application\r\nExpected Result:\r\nThe user should be able to launch the PV application successfully\r\n2. Login the application using the suitable credentials\r\n\r\n\r\nExpected Result:\r\nThe user should be able to login the application successfully\r\n3. 1. Navigate to the ticket sales portal through the ticketing tab in the homepage\r\n2. Enter the search criteria and click on find\r\n3. Select the event\r\n4. Enter the seat request \r\n5. Click on best available\r\nExpected Result:\r\nThe user should be able to perform the sales transaction\r\n4. 1. Navigate to the batch printing portal from ticketing tab in the homepage\r\n2. Click on new\r\n3. Enter the transaction date range\r\n4. Enter the parameter suitable to the above mentioned sale transaction\r\n5. Click on preview\r\nExpected Result:\r\nThe ticket details of the above transaction should be displayed\r\n5. 1. Navigate to the batch printing portal through ticketing tab in the homepage\r\n2. Enter the search criteria and click on find\r\nExpected Result:\r\nAll the batch printing jobs suiting the criteria should be displayed\r\n6. 1. Select the batch print job created above\r\n2. Click on Lock tickets.\r\n3. Navigate to the search page\r\n4. Select the print job\r\n5. Click on the icon in Actions column\r\n6. Click on Print\r\nExpected Result:\r\nPrint stream pop up should be displayed\r\n7. 1. Select the device\r\n2. Click on print\r\nExpected Result:\r\nThe user should be able to print the tickets.\r\nIn summary tab of batch print pop up , number of printed tickets should be shown\r\n8. 1. Select Streams tab in the batch job pop up\r\n2. Select the tickets printed\r\n3. Select Reset from the actions dropdown\r\n4. Click on apply\r\nExpected Result:\r\nThe user should be able to reset the number of tickets printed to 0\r\n9. 1. Navigate to the ticket services portal\r\n2. enter the transaction id of the sale transaction performed \r\n3. search the order\r\n4. Verify if the tickets are locked\r\nExpected Result:\r\nThe tickets should be unlocked\r\n10. logout of the application\r\nExpected Result:\r\nthe user should be able to logout of the application successfully",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the PV application\r\n2. Login the application using the suitable credentials\r\n\r\n\r\n3. 1. Navigate to the ticket sales portal through the ticketing tab in the homepage\r\n2. Enter the search criteria and click on find\r\n3. Select the event\r\n4. Enter the seat request \r\n5. Click on best available\r\n4. 1. Navigate to the batch printing portal from ticketing tab in the homepage\r\n2. Click on new\r\n3. Enter the transaction date range\r\n4. Enter the parameter suitable to the above mentioned sale transaction\r\n5. Click on preview\r\n5. 1. Navigate to the batch printing portal through ticketing tab in the homepage\r\n2. Enter the search criteria and click on find\r\n6. 1. Select the batch print job created above\r\n2. Click on Lock tickets.\r\n3. Navigate to the search page\r\n4. Select the print job\r\n5. Click on the icon in Actions column\r\n6. Click on Print\r\n7. 1. Select the device\r\n2. Click on print\r\n8. 1. Select Streams tab in the batch job pop up\r\n2. Select the tickets printed\r\n3. Select Reset from the actions dropdown\r\n4. Click on apply\r\n9. 1. Navigate to the ticket services portal\r\n2. enter the transaction id of the sale transaction performed \r\n3. search the order\r\n4. Verify if the tickets are locked\r\n10. logout of the application",
        "expected": "1. The user should be able to launch the PV application successfully\r\n2. The user should be able to login the application successfully\r\n3. The user should be able to perform the sales transaction\r\n4. The ticket details of the above transaction should be displayed\r\n5. All the batch printing jobs suiting the criteria should be displayed\r\n6. Print stream pop up should be displayed\r\n7. The user should be able to print the tickets.\r\nIn summary tab of batch print pop up , number of printed tickets should be shown\r\n8. The user should be able to reset the number of tickets printed to 0\r\n9. The tickets should be unlocked\r\n10. the user should be able to logout of the application successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.2.00"
  },
  {
    "id": 30597480,
    "title": "Verify whether tickets are getting print with the extra print items through Batch",
    "section_id": 1681379,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-14866",
    "created_by": 333,
    "created_on": 1684436088,
    "updated_by": 333,
    "updated_on": 1684436088,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_pv_category": 25,
    "custom_refs": "C60174",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1. Configure the printer workstation\r\n2.setup an extra print rule  for the event  at event access\r\n2. Select the ticket sales from ticketing tab\r\nExpected Result:\r\nTicket sale sportal should display to the user\r\n3. select a event ,patron and input the number of seats\r\nExpected Result:\r\nevent, patron sould be display in patron cart with seat number\r\n4. In delivery tab \r\n 1)Select the Delivery method as \"Will Call\"\r\n 2)click Apply button\r\nExpected Result:\r\nThe Will Call  Delivery method should be selected\r\n5. Input the payment and Complete the transaction\r\nExpected Result:\r\nTransaction should be completed,Note the  transaction number\r\n6. 1. Create a new batch \r\n2. Give the above Delivery method ie; Will Call as the search criteria \r\n3. Give the above transaction date range\r\n4. Create a batch job\r\n5. Lock the batch\r\n6. Note the batch job id\r\nExpected Result:\r\nBatch job for the above Will call transaction should get created successfuly\r\n7. 1. Search and find the above batch job id \r\n2. Click and open the print popup from Actions\r\n3. Print the batch job\r\n4. Verify whether the tickets printed correctly with the extra print items\r\nExpected Result:\r\nTicket should get printed with the extra print items through batch",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Configure the printer workstation\r\n2.setup an extra print rule  for the event  at event access\r\n2. Select the ticket sales from ticketing tab\r\n3. select a event ,patron and input the number of seats\r\n4. In delivery tab \r\n 1)Select the Delivery method as \"Will Call\"\r\n 2)click Apply button\r\n5. Input the payment and Complete the transaction\r\n6. 1. Create a new batch \r\n2. Give the above Delivery method ie; Will Call as the search criteria \r\n3. Give the above transaction date range\r\n4. Create a batch job\r\n5. Lock the batch\r\n6. Note the batch job id\r\n7. 1. Search and find the above batch job id \r\n2. Click and open the print popup from Actions\r\n3. Print the batch job\r\n4. Verify whether the tickets printed correctly with the extra print items",
        "expected": "1. \r\n2. Ticket sale sportal should display to the user\r\n3. event, patron sould be display in patron cart with seat number\r\n4. The Will Call  Delivery method should be selected\r\n5. Transaction should be completed,Note the  transaction number\r\n6. Batch job for the above Will call transaction should get created successfuly\r\n7. Ticket should get printed with the extra print items through batch"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.2.00"
  },
  {
    "id": 30597481,
    "title": "verify whether the detailed and summary report view displayed correctly in batch printing",
    "section_id": 1681379,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-14935",
    "created_by": 333,
    "created_on": 1684436088,
    "updated_by": 333,
    "updated_on": 1684436088,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_pv_category": 25,
    "custom_refs": "C60175",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Precondition: \r\n1. Perform a sales transaction.\r\nExpected Result:\r\nThe transaction and print have been successfully completed.\r\n2. Launch PVNG .\r\nExpected Result:\r\nPVNG  should be launched.\r\n3. Navigate to Batch Printing\r\nExpected Result:\r\nSystem should Navigate to Batch Printing\r\n4. Enter the search criteria in Print Job Search of Batch Printing\r\n\r\n1. Give valid search criteria such that the Batch Job of Prerequisites is displayed.\r\n2. Click on the 'Find' button.\r\nExpected Result:\r\nSearch Criteria should be entered\r\n5. Click on the Summary Report icon on the search Grid\r\nExpected Result:\r\nSummary Report should be selected\r\n6. Verify the system generates Delivery Batch Summary report in PDF format\r\nExpected Result:\r\nThe system should generate Delivery Batch Summary report in PDF format\r\n7. Error message should not be displayed on trying to view the summary and detailed reports in batch printing\r\nExpected Result:\r\nError message should not be displayed on trying to view the summary and detailed reports in batch printing",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Precondition: \r\n1. Perform a sales transaction.\r\n2. Launch PVNG .\r\n3. Navigate to Batch Printing\r\n4. Enter the search criteria in Print Job Search of Batch Printing\r\n\r\n1. Give valid search criteria such that the Batch Job of Prerequisites is displayed.\r\n2. Click on the 'Find' button.\r\n5. Click on the Summary Report icon on the search Grid\r\n6. Verify the system generates Delivery Batch Summary report in PDF format\r\n7. Error message should not be displayed on trying to view the summary and detailed reports in batch printing",
        "expected": "1. The transaction and print have been successfully completed.\r\n2. PVNG  should be launched.\r\n3. System should Navigate to Batch Printing\r\n4. Search Criteria should be entered\r\n5. Summary Report should be selected\r\n6. The system should generate Delivery Batch Summary report in PDF format\r\n7. Error message should not be displayed on trying to view the summary and detailed reports in batch printing"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.2.00"
  },
  {
    "id": 30597482,
    "title": "Verify user is able to lock an adult and a complimentary buyertype for a package that is eligible for insurance.",
    "section_id": 1681380,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-27414",
    "created_by": 333,
    "created_on": 1684436088,
    "updated_by": 333,
    "updated_on": 1684436088,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1850414",
    "custom_preconds": "Setup delivery service charge in PV\r\nPackage should be eligible for Insurance",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to PVNG\r\nExpected Result:\r\nLogin should be successful\r\n2. Navigate to Ticket Sales\r\nExpected Result:\r\nUser should be able to navigate to ticket sales page successfully\r\n3. Select the package and patron\r\nExpected Result:\r\nUser should be able to select the package and patron successfully\r\n4. Lock seats for comp buyertypes\r\nExpected Result:\r\nUser should be able to lock comp tickets using a package",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to PVNG\r\n2. Navigate to Ticket Sales\r\n3. Select the package and patron\r\n4. Lock seats for comp buyertypes",
        "expected": "1. Login should be successful\r\n2. User should be able to navigate to ticket sales page successfully\r\n3. User should be able to select the package and patron successfully\r\n4. User should be able to lock comp tickets using a package"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.3.00"
  },
  {
    "id": 30597483,
    "title": "Verify the ticket insurance policy creation from PV",
    "section_id": 1681380,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-27062",
    "created_by": 333,
    "created_on": 1684436088,
    "updated_by": 333,
    "updated_on": 1684436088,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1850415",
    "custom_preconds": "Setup the insurance property to true\r\nSetup the insurance AFP\r\nCreate an event and enable Ticket Insurance",
    "custom_test_purpose": null,
    "custom_steps": "1. Log into the PV application with valid credentials\r\nExpected Result:\r\nLogin should be successful\r\n2. Navigate to Ticket Sales\nSelect event and patron\nlock the seats\r\nExpected Result:\r\nSuccess\r\n3. Complete sale transaction by selecting the insurance checked\r\nExpected Result:\r\nSuccess\r\n4. Verify the policy is created in ticket services\r\nExpected Result:\r\nInsurance Issued message should display\r\n5. Verify the Policy information (policy number, premium amount) is updated in TICKET table in DB. \r\nExpected Result:\r\nSuccess\r\n6. Verify the transaction Insurance Status is updated to \"Policy Created\" (PC) in TRANSACTION table\r\nExpected Result:\r\nSuccess",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Log into the PV application with valid credentials\r\n2. Navigate to Ticket Sales\nSelect event and patron\nlock the seats\r\n3. Complete sale transaction by selecting the insurance checked\r\n4. Verify the policy is created in ticket services\r\n5. Verify the Policy information (policy number, premium amount) is updated in TICKET table in DB. \r\n6. Verify the transaction Insurance Status is updated to \"Policy Created\" (PC) in TRANSACTION table",
        "expected": "1. Login should be successful\r\n2. Success\r\n3. Success\r\n4. Insurance Issued message should display\r\n5. Success\r\n6. Success"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.1"
  },
  {
    "id": 30597484,
    "title": "Verify the ticket insurance policy creation from API",
    "section_id": 1681380,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-27062",
    "created_by": 333,
    "created_on": 1684436088,
    "updated_by": 333,
    "updated_on": 1684436088,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1850416",
    "custom_preconds": "Setup the insurance property to true\r\nSetup the insurance AFP\r\nCreate an event and enable Ticket Insurance",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Postman Tool\r\nExpected Result:\r\nSuccess\r\n2. Launch Lock API \r\nExpected Result:\r\nSuccess\r\n3. Enter the event and patron\nRun the request\r\nExpected Result:\r\nSuccess\r\n4. Launch Checkout API \r\nExpected Result:\r\nSuccess\r\n5. Enter all valid details and \"insuranceSelectionState\": \"CART_PROTECTED\".\nRun the request.\r\nExpected Result:\r\nSuccess\r\n6. Navigate to Ticket Services and verify the policy is created\r\nExpected Result:\r\nInsurance issued message should display\r\n7. Verify the Policy information (policy number, premium amount) is updated in TICKET table in DB. \r\nExpected Result:\r\nSuccess\r\n8. Verify the transaction Insurance Status is updated to \"Policy Created\" (PC) in TRANSACTION table\r\nExpected Result:\r\nSuccess",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Postman Tool\r\n2. Launch Lock API \r\n3. Enter the event and patron\nRun the request\r\n4. Launch Checkout API \r\n5. Enter all valid details and \"insuranceSelectionState\": \"CART_PROTECTED\".\nRun the request.\r\n6. Navigate to Ticket Services and verify the policy is created\r\n7. Verify the Policy information (policy number, premium amount) is updated in TICKET table in DB. \r\n8. Verify the transaction Insurance Status is updated to \"Policy Created\" (PC) in TRANSACTION table",
        "expected": "1. Success\r\n2. Success\r\n3. Success\r\n4. Success\r\n5. Success\r\n6. Insurance issued message should display\r\n7. Success\r\n8. Success"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.1"
  },
  {
    "id": 30597485,
    "title": "Verify Simple search for insurance policy id is added in ticket services",
    "section_id": 1681380,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-645",
    "created_by": 333,
    "created_on": 1684436088,
    "updated_by": 333,
    "updated_on": 1684436088,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1850417",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Log into the PV application with valid credentials\r\nExpected Result:\r\nLogin should be successful\r\n2. Perform a sale for the event, select the delivery, select Insurance and checkout\r\nExpected Result:\r\nuser able to perform actions\r\n3. Verify Simple search for insurance policy id is added in ticket services\r\nExpected Result:\r\nSimple search for insurance policy id should be available in ticket services",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Log into the PV application with valid credentials\r\n2. Perform a sale for the event, select the delivery, select Insurance and checkout\r\n3. Verify Simple search for insurance policy id is added in ticket services",
        "expected": "1. Login should be successful\r\n2. user able to perform actions\r\n3. Simple search for insurance policy id should be available in ticket services"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.0.00"
  },
  {
    "id": 30597486,
    "title": "Create Patron API- Verify that Proper error message is displayed in response after deselecting Inherit checkbox and selecting the second checkbox for Real-Time Duplicate Patron Check AFP",
    "section_id": 1681381,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-20831",
    "created_by": 333,
    "created_on": 1684436088,
    "updated_by": 333,
    "updated_on": 1684436088,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": "C1857751",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Login into PV with valid credentials: https://pvqaf1.provenueapp.com:18443\r\nExpected Result:\r\nSucessfull Login\r\n2. Navigate to System Setup>AFP>Patron Permissions\r\nExpected Result:\r\nNevigated to Patron permission\r\n3. Disable the Inherit checkbox and select the second checkbox under Real-Time Duplicate Patron Check AFP\r\nExpected Result:\r\nCheck the second check-box\r\n4. Call V2 Create Patron API\r\nExpected Result:\r\nThere should no error message\r\n5. Verify the response\r\nExpected Result:\r\nExpected Result\r\nProper response should be displayed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login into PV with valid credentials: https://pvqaf1.provenueapp.com:18443\r\n2. Navigate to System Setup>AFP>Patron Permissions\r\n3. Disable the Inherit checkbox and select the second checkbox under Real-Time Duplicate Patron Check AFP\r\n4. Call V2 Create Patron API\r\n5. Verify the response",
        "expected": "1. Sucessfull Login\r\n2. Nevigated to Patron permission\r\n3. Check the second check-box\r\n4. There should no error message\r\n5. Expected Result\r\nProper response should be displayed"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.6.00"
  },
  {
    "id": 30597487,
    "title": "Verify whether new account is created via V2 Checkout API when the provided ddetails already exists for a patron",
    "section_id": 1681381,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-20573",
    "created_by": 333,
    "created_on": 1684436088,
    "updated_by": 333,
    "updated_on": 1684436088,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": "C1857752",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1) Valid Agency, User should be available\r\n2) Note down the Agency, User\r\n2. Launch the Tool for Update Patron Information API\r\nExpected Result:\r\nTool should be launched successfully\r\n3. i) Select the HTTP method as POST by  clicking on the POST radio button\r\nii) Enter the response body parameters and  set the request content type\r\nExpected Result:\r\ni) Radio button should be selected for POST\r\nii) Response body parameters and request  content type should be set successfully\r\n4. Set the authentication parameters:  Username and password, Auth type select as  BASIC and Check Preemptive checkbox\r\nExpected Result:\r\nAuthentication parameters should be selected  successfully\r\n5. Select SSl tab and set the hostname  verifier to Allow All\r\nExpected Result:\r\nSSL tab setting should be set successfully\r\n6. i) Enter the Create Patron API Request base URL\r\nii) Enter the Required parameters for the Request \r\n   - First Name\r\n   - Last Name\r\n\r\niii)Enter the Conditional Fields (Password, External Account ID, Address 1, Address 2, City, State, Country, Sub Country, Postal, Patron Contact Address Type Code, Phone 1, Phone 2)\r\n\r\niv) Click Green Arrow Button\r\nExpected Result:\r\ni) An HTTP status code with 200(OK) should be  displayed along with XML message in response\r\nii) Request should be valid \r\niii) Patron should be Created.\r\n7. i) Enter the Information Response base URL\r\nii) Enter the Required parameters for the Request\r\niii) Click Green Arrow Button\r\nExpected Result:\r\ni) An HTTP status code with 200(OK) should be  displayed along with XML message in response\r\nii) Response should be valid and correct  informations should be provided without any  errors\r\niii) Created Patron details in the Response should be correct.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1) Valid Agency, User should be available\r\n2) Note down the Agency, User\r\n2. Launch the Tool for Update Patron Information API\r\n3. i) Select the HTTP method as POST by  clicking on the POST radio button\r\nii) Enter the response body parameters and  set the request content type\r\n4. Set the authentication parameters:  Username and password, Auth type select as  BASIC and Check Preemptive checkbox\r\n5. Select SSl tab and set the hostname  verifier to Allow All\r\n6. i) Enter the Create Patron API Request base URL\r\nii) Enter the Required parameters for the Request \r\n   - First Name\r\n   - Last Name\r\n\r\niii)Enter the Conditional Fields (Password, External Account ID, Address 1, Address 2, City, State, Country, Sub Country, Postal, Patron Contact Address Type Code, Phone 1, Phone 2)\r\n\r\niv) Click Green Arrow Button\r\n7. i) Enter the Information Response base URL\r\nii) Enter the Required parameters for the Request\r\niii) Click Green Arrow Button",
        "expected": "1. \r\n2. Tool should be launched successfully\r\n3. i) Radio button should be selected for POST\r\nii) Response body parameters and request  content type should be set successfully\r\n4. Authentication parameters should be selected  successfully\r\n5. SSL tab setting should be set successfully\r\n6. i) An HTTP status code with 200(OK) should be  displayed along with XML message in response\r\nii) Request should be valid \r\niii) Patron should be Created.\r\n7. i) An HTTP status code with 200(OK) should be  displayed along with XML message in response\r\nii) Response should be valid and correct  informations should be provided without any  errors\r\niii) Created Patron details in the Response should be correct."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.6.00"
  },
  {
    "id": 30597488,
    "title": "Verify Update patron api response when both properties ?api.patron.digital.wallet.access.full? & ?api.patron.digital.wallet.access.readonly? is set",
    "section_id": 1681381,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-20631",
    "created_by": 333,
    "created_on": 1684436088,
    "updated_by": 333,
    "updated_on": 1684436088,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": "C1857753",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the Tool for Update Patron Information API\r\nExpected Result:\r\nTool should be launched successfully\r\n2. i) Select the HTTP method as PUT by clicking on \r\nthe POST radio button\r\nii) Enter the response body parameters and set \r\nthe request content type\r\nExpected Result:\r\ni) Radio button should be selected for PUT\r\nii) Response body parameters and request \r\ncontent type should be set successfully\r\n3. Set the authentication parameters:  Username and password, Auth type select as  BASIC and Check Preemptive checkbox\r\nExpected Result:\r\nAuthentication parameters should be selected  successfully\r\n4. Select SSl tab and set the hostname  verifier to Allow All\r\nExpected Result:\r\nSSL tab setting should be set successfully\r\n5. Verify Update patron api response when both \r\nproperties \r\n?api.patron.digital.wallet.access.full? & \r\n?api.patron.digital.wallet.access.readonly? is \r\nset\r\nExpected Result:\r\nUser should able to Update the patron details",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the Tool for Update Patron Information API\r\n2. i) Select the HTTP method as PUT by clicking on \r\nthe POST radio button\r\nii) Enter the response body parameters and set \r\nthe request content type\r\n3. Set the authentication parameters:  Username and password, Auth type select as  BASIC and Check Preemptive checkbox\r\n4. Select SSl tab and set the hostname  verifier to Allow All\r\n5. Verify Update patron api response when both \r\nproperties \r\n?api.patron.digital.wallet.access.full? & \r\n?api.patron.digital.wallet.access.readonly? is \r\nset",
        "expected": "1. Tool should be launched successfully\r\n2. i) Radio button should be selected for PUT\r\nii) Response body parameters and request \r\ncontent type should be set successfully\r\n3. Authentication parameters should be selected  successfully\r\n4. SSL tab setting should be set successfully\r\n5. User should able to Update the patron details"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.60"
  },
  {
    "id": 30597489,
    "title": "Verify Get patron digital wallet item api response when property ?api.patron.digital.wallet.access.full? is set",
    "section_id": 1681381,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-20631",
    "created_by": 333,
    "created_on": 1684436088,
    "updated_by": 333,
    "updated_on": 1684436088,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": "C1857754",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1) In PV a Patron should be available\r\n2) Note down the Agency, User\r\n2. Launch the Tool for Get Patron digital wallet item \r\nAPI\r\nExpected Result:\r\nTool should be launched successfully\r\n3. i) Select the HTTP method as POST by  clicking on the POST radio button\r\nii) Enter the response body parameters and  set the request content type\r\nExpected Result:\r\ni) Radio button should be selected for POST\r\nii) Response body parameters and request  content type should be set successfully\r\n4. Set the authentication parameters:  Username and password, Auth type select as  BASIC and Check Preemptive checkbox\r\nExpected Result:\r\nAuthentication parameters should be selected  successfully\r\n5. Select SSl tab and set the hostname  verfier to Allow All\r\nExpected Result:\r\nSSL tab setting should be set successfully\r\n6. i) Enter the Information Request base URL\r\nii) Enter an valid URL\r\niii) Click Green Arrow Button\r\nExpected Result:\r\ni) An HTTP status code with 200(OK) should be  displayed along with XML message in response\r\nii) The response should be generated\r\n7. Verify Get patron digital wallet item api response \r\nwhen property \r\n?api.patron.digital.wallet.access.full? is set\r\nExpected Result:\r\nDigital wallet item details should be displayed in \r\nthe response",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1) In PV a Patron should be available\r\n2) Note down the Agency, User\r\n2. Launch the Tool for Get Patron digital wallet item \r\nAPI\r\n3. i) Select the HTTP method as POST by  clicking on the POST radio button\r\nii) Enter the response body parameters and  set the request content type\r\n4. Set the authentication parameters:  Username and password, Auth type select as  BASIC and Check Preemptive checkbox\r\n5. Select SSl tab and set the hostname  verfier to Allow All\r\n6. i) Enter the Information Request base URL\r\nii) Enter an valid URL\r\niii) Click Green Arrow Button\r\n7. Verify Get patron digital wallet item api response \r\nwhen property \r\n?api.patron.digital.wallet.access.full? is set",
        "expected": "1. \r\n2. Tool should be launched successfully\r\n3. i) Radio button should be selected for POST\r\nii) Response body parameters and request  content type should be set successfully\r\n4. Authentication parameters should be selected  successfully\r\n5. SSL tab setting should be set successfully\r\n6. i) An HTTP status code with 200(OK) should be  displayed along with XML message in response\r\nii) The response should be generated\r\n7. Digital wallet item details should be displayed in \r\nthe response"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.6.00"
  },
  {
    "id": 30597490,
    "title": "Verify Delete Patron\t API request by providing valid and invalid url",
    "section_id": 1681381,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19672",
    "created_by": 333,
    "created_on": 1684436088,
    "updated_by": 333,
    "updated_on": 1684436088,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": "C1857755",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1) In PV a Patron should be available.\r\n2) Note down the Agency, User\r\n3)Create a patron\r\n2. Launch the Tool for Delete Patron Information API\r\nExpected Result:\r\nTool should be launched successfully\r\n3. i) Select the HTTP method as DELETE by  clicking on the DELETE radio button\r\nii) Enter the response body parameters and  set the request content type\r\nExpected Result:\r\ni) Radio button should be selected for DELETE\r\nii) Response body parameters and request  content type should be set successfully\r\n4. Set the authentication parameters:  Username and password, Auth type select as  BASIC and Check Preemptive checkbox\r\nExpected Result:\r\nAuthentication parameters should be selected  successfully\r\n5. Select SSl tab and set the hostname  verifier to Allow All\r\nExpected Result:\r\nSSL tab setting should be set successfully\r\n6. Enter the Valid /Invalid V2 Delete Patron \r\nContact Address Request base URL\r\nExpected Result:\r\nProper response should display for valid url and \r\nfor invalid URL proper errormessage should \r\nthrow",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1) In PV a Patron should be available.\r\n2) Note down the Agency, User\r\n3)Create a patron\r\n2. Launch the Tool for Delete Patron Information API\r\n3. i) Select the HTTP method as DELETE by  clicking on the DELETE radio button\r\nii) Enter the response body parameters and  set the request content type\r\n4. Set the authentication parameters:  Username and password, Auth type select as  BASIC and Check Preemptive checkbox\r\n5. Select SSl tab and set the hostname  verifier to Allow All\r\n6. Enter the Valid /Invalid V2 Delete Patron \r\nContact Address Request base URL",
        "expected": "1. \r\n2. Tool should be launched successfully\r\n3. i) Radio button should be selected for DELETE\r\nii) Response body parameters and request  content type should be set successfully\r\n4. Authentication parameters should be selected  successfully\r\n5. SSL tab setting should be set successfully\r\n6. Proper response should display for valid url and \r\nfor invalid URL proper errormessage should \r\nthrow"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.00"
  },
  {
    "id": 30597491,
    "title": "Verify Update Patron API request by providing valid and invalid url",
    "section_id": 1681381,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19672",
    "created_by": 333,
    "created_on": 1684436088,
    "updated_by": 333,
    "updated_on": 1684436088,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": "C1857757",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1) In PV a Patron should be available\r\n2) Note down the Agency, User\r\n2. Launch the Tool for Update Patron Information API\r\nExpected Result:\r\nTool should be launched successfully\r\n3. i) Select the HTTP method as POST by  clicking on the POST radio button\r\nii) Enter the response body parameters and  set the request content type\r\nExpected Result:\r\ni) Radio button should be selected for POST\r\nii) Response body parameters and request content type should be set successfully\r\n4. Set the authentication parameters:  Username and password, Auth type select as  BASIC and Check Preemptive checkbox\r\nExpected Result:\r\nAuthentication parameters should be selected  successfully\r\n5. Select SSl tab and set the hostname  verifier to Allow All\r\nExpected Result:\r\nSSL tab setting should be set successfully\r\n6. i) Enter the valid/invalid Update Information \r\nRequest base URL\r\nii) Enter the Required parameters for the Request \r\n(Patron Account ID, Last Updated Time)\r\niii)Enter the deprecated fields( \r\n,) and new \r\nfields(, ) in the request\r\niv) Click Green Arrow Button\r\nExpected Result:\r\nProper error message should display for Invalid \r\nURl and for valid URL Proper response should \r\ndisplay",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1) In PV a Patron should be available\r\n2) Note down the Agency, User\r\n2. Launch the Tool for Update Patron Information API\r\n3. i) Select the HTTP method as POST by  clicking on the POST radio button\r\nii) Enter the response body parameters and  set the request content type\r\n4. Set the authentication parameters:  Username and password, Auth type select as  BASIC and Check Preemptive checkbox\r\n5. Select SSl tab and set the hostname  verifier to Allow All\r\n6. i) Enter the valid/invalid Update Information \r\nRequest base URL\r\nii) Enter the Required parameters for the Request \r\n(Patron Account ID, Last Updated Time)\r\niii)Enter the deprecated fields( \r\n,) and new \r\nfields(, ) in the request\r\niv) Click Green Arrow Button",
        "expected": "1. \r\n2. Tool should be launched successfully\r\n3. i) Radio button should be selected for POST\r\nii) Response body parameters and request content type should be set successfully\r\n4. Authentication parameters should be selected  successfully\r\n5. SSL tab setting should be set successfully\r\n6. Proper error message should display for Invalid \r\nURl and for valid URL Proper response should \r\ndisplay"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.5.00"
  },
  {
    "id": 30597492,
    "title": "Verify Create Patron Account Trait API request response with field value",
    "section_id": 1681381,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-18748",
    "created_by": 333,
    "created_on": 1684436088,
    "updated_by": 333,
    "updated_on": 1684436088,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": "C1857758",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1) In PV a Patron should be available\r\n2) Note down the Agency, User\r\n2. Launch the Tool for Create Patron Account Trait API\r\nExpected Result:\r\nTool should be launched successfully\r\n3. i) Select the HTTP method as POST by  clicking on the POST radio button\r\nii) Enter the response body parameters and  set the request content type\r\nExpected Result:\r\ni) Radio button should be selected for POST\r\nii) Response body parameters and request  content type should be set successfully\r\n4. Set the authentication parameters:  Username and password, Auth type select as  BASIC and Check Preemptive checkbox\r\nExpected Result:\r\nAuthentication parameters should be selected  successfully\r\n5. Select SSl tab and set the hostname  verfier to Allow All\r\nExpected Result:\r\nSSL tab setting should be set successfully\r\n6. i)Enter the V2 Create Patron Account Trait API in Request URL\r\nii)Enter patron id and optional parameter value\r\niii)Click Green Arrow Button\r\nExpected Result:\r\ni) An HTTP status code with 200(OK) should be  displayed along with XML message in response\r\nii) The response should be generated\r\n7. Verify the Response\r\nExpected Result:\r\nResponse should be the same as the Get Patron APIresponse at the patron account level. It should contain the newly created patron account trait.\r\n8. Verify Create Patron Account Trait API request response with invalid value\r\nExpected Result:\r\nError message should be returned",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1) In PV a Patron should be available\r\n2) Note down the Agency, User\r\n2. Launch the Tool for Create Patron Account Trait API\r\n3. i) Select the HTTP method as POST by  clicking on the POST radio button\r\nii) Enter the response body parameters and  set the request content type\r\n4. Set the authentication parameters:  Username and password, Auth type select as  BASIC and Check Preemptive checkbox\r\n5. Select SSl tab and set the hostname  verfier to Allow All\r\n6. i)Enter the V2 Create Patron Account Trait API in Request URL\r\nii)Enter patron id and optional parameter value\r\niii)Click Green Arrow Button\r\n7. Verify the Response\r\n8. Verify Create Patron Account Trait API request response with invalid value",
        "expected": "1. \r\n2. Tool should be launched successfully\r\n3. i) Radio button should be selected for POST\r\nii) Response body parameters and request  content type should be set successfully\r\n4. Authentication parameters should be selected  successfully\r\n5. SSL tab setting should be set successfully\r\n6. i) An HTTP status code with 200(OK) should be  displayed along with XML message in response\r\nii) The response should be generated\r\n7. Response should be the same as the Get Patron APIresponse at the patron account level. It should contain the newly created patron account trait.\r\n8. Error message should be returned"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.2.00"
  },
  {
    "id": 30597493,
    "title": "Verify the Delete Contact API Request for Patron Email",
    "section_id": 1681381,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-15114",
    "created_by": 333,
    "created_on": 1684436088,
    "updated_by": 333,
    "updated_on": 1684436088,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": "C1857759",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite:\r\n1) Valid Agency, User, Patron should be available\r\n2) Note down the Agency, User, and Patron\r\n2. Launch the Tool for Delete Contact API\r\nExpected Result:\r\nTool should be launched successfully\r\n3. i) Select the HTTP method as POST by  clicking on the POST radio button\r\nii) Enter the response body parameters and  set the request content type\r\nExpected Result:\r\ni) Radio button should be selected for POST\r\nii) Response body parameters and request  content type should be set successfully\r\n4. Set the authentication parameters:  Username and password, Auth type select as  BASIC and Check Preemptive checkbox\r\nExpected Result:\r\nAuthentication parameters should be selected  successfully\r\n5. Select SSl tab and set the hostname  verifier to Allow All\r\nExpected Result:\r\nSSL tab setting should be set successfully\r\n6. i) Enter the Delete Contact API Request base URL\r\nii) Enter the Required parameters for the Request \r\n   - Patron Account ID\r\n   - Patron Contact ID\r\n   - Patron Contact Element ID\r\n\r\niii) Click Green Arrow Button\r\nExpected Result:\r\ni) An HTTP status code with 200(OK) should be  displayed along with XML message in response\r\nii) Request should be valid \r\niii) Patron Email should be Deleted\r\n7. i) Enter the Information Response base URL for  Delete Contact API\r\nii) Enter the Required parameters for the Request\r\niii) Click Green Arrow Button\r\nExpected Result:\r\ni) An HTTP status code with 200(OK) should be  displayed along with XML message in response\r\nii) Response should be valid and correct  informations should be provided without any  errors\r\niii) User should be getting a confirmation that the Contact is Deleted with Audit Information (Last Updated Date Time)",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite:\r\n1) Valid Agency, User, Patron should be available\r\n2) Note down the Agency, User, and Patron\r\n2. Launch the Tool for Delete Contact API\r\n3. i) Select the HTTP method as POST by  clicking on the POST radio button\r\nii) Enter the response body parameters and  set the request content type\r\n4. Set the authentication parameters:  Username and password, Auth type select as  BASIC and Check Preemptive checkbox\r\n5. Select SSl tab and set the hostname  verifier to Allow All\r\n6. i) Enter the Delete Contact API Request base URL\r\nii) Enter the Required parameters for the Request \r\n   - Patron Account ID\r\n   - Patron Contact ID\r\n   - Patron Contact Element ID\r\n\r\niii) Click Green Arrow Button\r\n7. i) Enter the Information Response base URL for  Delete Contact API\r\nii) Enter the Required parameters for the Request\r\niii) Click Green Arrow Button",
        "expected": "1. \r\n2. Tool should be launched successfully\r\n3. i) Radio button should be selected for POST\r\nii) Response body parameters and request  content type should be set successfully\r\n4. Authentication parameters should be selected  successfully\r\n5. SSL tab setting should be set successfully\r\n6. i) An HTTP status code with 200(OK) should be  displayed along with XML message in response\r\nii) Request should be valid \r\niii) Patron Email should be Deleted\r\n7. i) An HTTP status code with 200(OK) should be  displayed along with XML message in response\r\nii) Response should be valid and correct  informations should be provided without any  errors\r\niii) User should be getting a confirmation that the Contact is Deleted with Audit Information (Last Updated Date Time)"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.00"
  },
  {
    "id": 30597494,
    "title": "Create patron API-Create a Patron with Optional Fields",
    "section_id": 1681381,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-15780",
    "created_by": 333,
    "created_on": 1684436088,
    "updated_by": 333,
    "updated_on": 1684436088,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 9,
    "custom_is_automated": true,
    "custom_pv_category": 2,
    "custom_refs": "C1857762",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1) Valid Agency, User should be available\r\n2) Note down the Agency, User\r\n2. Launch the Tool for Create Patron Information API\r\nExpected Result:\r\nTool should be launched successfully\r\n3. Setting in the REST client tool:\r\nMethod used :POST \r\nAuthorization:Basic \r\nHeader:\r\nAccept:application/xml \r\nContent-Type:application/xml\r\n4. i) Enter the V2 Create Patron API Request base URL \r\nii) Enter the Required parameters for the Request \r\n   - First Name\r\n   - Last Name\r\n\r\niii)Enter the Optional Fields (Patron Account Type Code, Middle Name, Account Name, Date of Birth, Name Prefix Code, Name Suffix Code, E-mail, Patron Contact E-mail Type Code, Phone 1 Patron Contact Phone Type Code, Phone 2 Patron Contact Phone Type Code, Phone 3, Phone 3 Patron Contact Phone Type Code, Data Protection Unit)\r\n\r\niv) Click Green Arrow Button\r\nExpected Result:\r\ni) An HTTP status code with 200(OK) should be  displayed along with XML message in response\r\nii) Request should be valid \r\niii) Patron should be Created.\r\n5. Verify the patron information\r\nExpected Result:\r\ni) An HTTP status code with 200(OK) should be  displayed along with XML message in response\r\nii) Response should be valid and correct  informations should be provided without any  errors\r\niii) Created Patron details in the Response should be correct.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1) Valid Agency, User should be available\r\n2) Note down the Agency, User\r\n2. Launch the Tool for Create Patron Information API\r\n3. Setting in the REST client tool:\r\nMethod used :POST \r\nAuthorization:Basic \r\nHeader:\r\nAccept:application/xml \r\nContent-Type:application/xml\r\n4. i) Enter the V2 Create Patron API Request base URL \r\nii) Enter the Required parameters for the Request \r\n   - First Name\r\n   - Last Name\r\n\r\niii)Enter the Optional Fields (Patron Account Type Code, Middle Name, Account Name, Date of Birth, Name Prefix Code, Name Suffix Code, E-mail, Patron Contact E-mail Type Code, Phone 1 Patron Contact Phone Type Code, Phone 2 Patron Contact Phone Type Code, Phone 3, Phone 3 Patron Contact Phone Type Code, Data Protection Unit)\r\n\r\niv) Click Green Arrow Button\r\n5. Verify the patron information",
        "expected": "1. \r\n2. Tool should be launched successfully\r\n3. \r\n4. i) An HTTP status code with 200(OK) should be  displayed along with XML message in response\r\nii) Request should be valid \r\niii) Patron should be Created.\r\n5. i) An HTTP status code with 200(OK) should be  displayed along with XML message in response\r\nii) Response should be valid and correct  informations should be provided without any  errors\r\niii) Created Patron details in the Response should be correct."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.00"
  },
  {
    "id": 30597495,
    "title": "Create patron API-Create a Patron with Conditional Fields",
    "section_id": 1681381,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-15780",
    "created_by": 333,
    "created_on": 1684436088,
    "updated_by": 333,
    "updated_on": 1684436088,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 10,
    "custom_is_automated": true,
    "custom_pv_category": 2,
    "custom_refs": "C1857763",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1) Valid Agency, User should be available\r\n2) Note down the Agency, User\r\n2. Launch the Tool for Create Patron Information API\r\nExpected Result:\r\nTool should be launched successfully\r\n3. Setting in the REST client tool:\r\nMethod used :POST \r\nAuthorization:Basic \r\nHeader:\r\nAccept:application/xml \r\nContent-Type:  application/xml\r\n4. i) Enter the V2 Create Patron API Request base URL \r\nii) Enter the Required parameters for the Request \r\n   - First Name\r\n   - Last Name\r\n\r\niii)Enter the Conditional Fields (Password, External Account ID, Address 1, Address 2, City, State, Country, Sub Country, Postal, Patron Contact Address Type Code, Phone 1, Phone 2)\r\n\r\niv) Click Green Arrow Button\r\nExpected Result:\r\ni) An HTTP status code with 200(OK) should be  displayed along with XML message in response\r\nii) Request should be valid \r\niii) Patron should be Created.\r\n5. Verify the Patron information\r\nExpected Result:\r\ni) An HTTP status code with 200(OK) should be  displayed along with XML message in response\r\nii) Response should be valid and correct  informations should be provided without any  errors\r\niii) Created Patron details in the Response should be correct.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1) Valid Agency, User should be available\r\n2) Note down the Agency, User\r\n2. Launch the Tool for Create Patron Information API\r\n3. Setting in the REST client tool:\r\nMethod used :POST \r\nAuthorization:Basic \r\nHeader:\r\nAccept:application/xml \r\nContent-Type:  application/xml\r\n4. i) Enter the V2 Create Patron API Request base URL \r\nii) Enter the Required parameters for the Request \r\n   - First Name\r\n   - Last Name\r\n\r\niii)Enter the Conditional Fields (Password, External Account ID, Address 1, Address 2, City, State, Country, Sub Country, Postal, Patron Contact Address Type Code, Phone 1, Phone 2)\r\n\r\niv) Click Green Arrow Button\r\n5. Verify the Patron information",
        "expected": "1. \r\n2. Tool should be launched successfully\r\n3. \r\n4. i) An HTTP status code with 200(OK) should be  displayed along with XML message in response\r\nii) Request should be valid \r\niii) Patron should be Created.\r\n5. i) An HTTP status code with 200(OK) should be  displayed along with XML message in response\r\nii) Response should be valid and correct  informations should be provided without any  errors\r\niii) Created Patron details in the Response should be correct."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.00"
  },
  {
    "id": 30597496,
    "title": "Create patron API-Create a Patron with Required Information",
    "section_id": 1681381,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-15780",
    "created_by": 333,
    "created_on": 1684436088,
    "updated_by": 333,
    "updated_on": 1684436088,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 11,
    "custom_is_automated": true,
    "custom_pv_category": 2,
    "custom_refs": "C1857764",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1) Valid Agency, User should be available\r\n2) Note down the Agency, User\r\n2. Launch the Tool for Create Patron Information API\r\nExpected Result:\r\nTool should be launched successfully\r\n3. Setting in the REST client tool:\r\nMethod used :POST \r\nAuthorization:Basic \r\nHeader:\r\nAccept:application/xml \r\nContent-Type:application/xml\r\n4. i) Enter the Create Patron API Request base URL \r\nii) Enter the Required parameters for the Request \r\n   - First Name\r\n   - Last Name\r\n\r\niii) Click Green Arrow Button\r\nExpected Result:\r\ni) An HTTP status code with 200(OK) should be  displayed along with XML message in response\r\nii) Request should be valid \r\niii) Patron should be Created.\r\n5. i) Enter the Information Response base URL\r\nii) Enter the Required parameters for the Request\r\niii) Click Green Arrow Button\r\nExpected Result:\r\ni) An HTTP status code with 200(OK) should be  displayed along with XML message in response\r\nii) Response should be valid and correct  informations should be provided without any  errors\r\niii) Created Patron details in the Response should be correct.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1) Valid Agency, User should be available\r\n2) Note down the Agency, User\r\n2. Launch the Tool for Create Patron Information API\r\n3. Setting in the REST client tool:\r\nMethod used :POST \r\nAuthorization:Basic \r\nHeader:\r\nAccept:application/xml \r\nContent-Type:application/xml\r\n4. i) Enter the Create Patron API Request base URL \r\nii) Enter the Required parameters for the Request \r\n   - First Name\r\n   - Last Name\r\n\r\niii) Click Green Arrow Button\r\n5. i) Enter the Information Response base URL\r\nii) Enter the Required parameters for the Request\r\niii) Click Green Arrow Button",
        "expected": "1. \r\n2. Tool should be launched successfully\r\n3. \r\n4. i) An HTTP status code with 200(OK) should be  displayed along with XML message in response\r\nii) Request should be valid \r\niii) Patron should be Created.\r\n5. i) An HTTP status code with 200(OK) should be  displayed along with XML message in response\r\nii) Response should be valid and correct  informations should be provided without any  errors\r\niii) Created Patron details in the Response should be correct."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.00"
  },
  {
    "id": 34173185,
    "title": "Verify the iframe in Ticket Sales page",
    "section_id": 1983699,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 402,
    "created_on": 1728982724,
    "updated_by": 402,
    "updated_on": 1728983965,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": null,
    "custom_preconds": "Set the following property to \"True\" in system admin -> Application Properties\r\ndynamic.token.vault.enabled",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Login with valid credentials in PV application",
        "expected": "User should be logged in successfully"
      },
      {
        "content": "Navigate System Setup -> System Admin -> Application property and set the dynamic.token.vault.enabled -> True",
        "expected": "The property should be set to True"
      },
      {
        "content": "Now Navigate to Ticketing -> Ticket Salses -> Will Call Model -> click under the \"Enter credit card number\" field",
        "expected": "The credit card number field should be visible with an iframe (The credit card number field should be highlighted with blue colour)"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 34173186,
    "title": "Verify the iframe in Ticket Sales Will Call Advanced Search window",
    "section_id": 1983699,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 402,
    "created_on": 1728987630,
    "updated_by": 402,
    "updated_on": 1728987630,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": null,
    "custom_preconds": "Set the following property to \"True\" in system admin -> Application Properties\r\ndynamic.token.vault.enabled",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Login with valid credentials in PV application",
        "expected": "User should be logged in successfully."
      },
      {
        "content": "Navigate System Setup -> System Admin -> Application property and set the dynamic.token.vault.enabled -> True",
        "expected": "The property should be set to True"
      },
      {
        "content": "Navigate to Ticketing -> Ticket Salses -> Will Call ->Click Advanced Search -> click under the \"Enter credit card number\" field",
        "expected": "The credit card number field should be visible with an iframe (The credit card number field should be highlighted with blue colour)"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 34173187,
    "title": "Verify the iframe in Ticket Sales at delivery and checkout",
    "section_id": 1983699,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 402,
    "created_on": 1728989951,
    "updated_by": 402,
    "updated_on": 1728989951,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Login with valid credentials in PV application",
        "expected": "User should be logged in successfully."
      },
      {
        "content": "Navigate System Setup -> System Admin -> Application property and set the dynamic.token.vault.enabled -> True",
        "expected": "The property should be set to True"
      },
      {
        "content": "Navigate to Ticketing -> Ticket Sales\nSearch and select an event\nSelect one financial patron\nLock seat\nSelect Delivery Method as Will Call by credit card\nClick on Card field",
        "expected": "\t\nThe credit card number field should be visible with an iframe (The credit card number field should be highlighted with blue colour)"
      },
      {
        "content": "Enter one valid credit card number in card field and click Apply\nIn payment tab select any of the payment method i.e Master, Visa, Amex, Discover\nClick card field",
        "expected": "\t\nThe credit card number field should be visible with an iframe (The credit card number field should be highlighted with blue colour)"
      },
      {
        "content": "Enter all the remaining fields in payment tab with valid data\nClick \"Accept Payment\"\nClick Checkout",
        "expected": "The checkout should be successful"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 34175718,
    "title": "Verify the card is tokenized in patron's wallet when DTV property is true",
    "section_id": 1983699,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 402,
    "created_on": 1729065201,
    "updated_by": 402,
    "updated_on": 1729065201,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": null,
    "custom_preconds": "Set the following property to \"True\" in system admin -> Application Properties\r\ndynamic.token.vault.enabled",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Login with valid credentials in PV application",
        "expected": "User should be logged in successfully."
      },
      {
        "content": "Navigate System Setup -> System Admin -> Application property-> set the dynamic.token.vault.enabled -> True",
        "expected": "The property should be set to True"
      },
      {
        "content": "Navigate Ticketing -> Patron Management -> Select one patron and go to patron's wallet -> select payment type as credit card -> Add a new credit card in patron's wallet",
        "expected": "The card should be shows as Tokenized (T) in patron's wallet"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 34175719,
    "title": "Verify a ticket sale with tokenized card.",
    "section_id": 1983699,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 402,
    "created_on": 1729066258,
    "updated_by": 402,
    "updated_on": 1729066258,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": null,
    "custom_preconds": "Set the following property to \"True\" in system admin -> Application Properties\r\ndynamic.token.vault.enabled",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Login with valid credentials in PV application",
        "expected": "User should be logged in successfully."
      },
      {
        "content": "Set the DTV property to True",
        "expected": "The property should be set to True"
      },
      {
        "content": "Add one credit card in patron's wallet",
        "expected": "The card should be shows as tokenized (T)"
      },
      {
        "content": "Now go to Ticketing -> Ticket sales\nSearch for an event\nselect one financial patron\nLock seat\nSelect Delivery method as \"Will call\" by credit card and enter a valid credit card number\nclick Apply\nnow in payment tab select the above added tokenizzed credit card from patron's wallet \ncomplete the checkout process",
        "expected": "The checkout should be done successfully with tokenized card and one order id should be generated"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 34175720,
    "title": "Verify the tokenized card should be editable",
    "section_id": 1983699,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 402,
    "created_on": 1729067071,
    "updated_by": 402,
    "updated_on": 1729067206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": null,
    "custom_preconds": "Set the following property to \"True\" in system admin -> Application Properties\r\ndynamic.token.vault.enabled",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Login with valid credentials in PV application",
        "expected": "User should be logged in successfully."
      },
      {
        "content": "Set the DTV property to True",
        "expected": "The property should be set to True"
      },
      {
        "content": "Add one credit card in patron's wallet",
        "expected": "The card should be added successfully and shows as tokenized (T)"
      },
      {
        "content": "Now edit card information i.e modify the expiry date name on card etc\nSave changes",
        "expected": "The card should be updated successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 34175726,
    "title": "Verify the iframe for order search in Ticket Services",
    "section_id": 1983699,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 402,
    "created_on": 1729075258,
    "updated_by": 402,
    "updated_on": 1729075258,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": null,
    "custom_preconds": "Set the following property to \"True\" in system admin -> Application Properties\r\ndynamic.token.vault.enabled",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Login with valid credentials in PV application",
        "expected": "User should be logged in successfully"
      },
      {
        "content": "Set the DTV property to True",
        "expected": "The property should be set to True"
      },
      {
        "content": "Add one credit card in patron's wallet",
        "expected": "The card should be shows as tokenized (T)"
      },
      {
        "content": "Do a ticket sale using above added credit card from patron's wallet",
        "expected": "The order should be done successfully, and order id should be generated"
      },
      {
        "content": "Now navigate to Ticketing-> Ticket Services\nSearch the above order by using credit card\nClick card number field search value",
        "expected": "The iframe should be visible with highlighted blue colour"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 34175727,
    "title": "Verify the order search is fetching results for tokenized card in Ticket services",
    "section_id": 1983699,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 402,
    "created_on": 1729076461,
    "updated_by": 402,
    "updated_on": 1729076461,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 610561,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": null,
    "custom_preconds": "Set the following property to \"True\" in system admin -> Application Properties\r\ndynamic.token.vault.enabled",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Login with valid credentials in PV application",
        "expected": "User should be logged in successfully."
      },
      {
        "content": "Set the DTV property to True",
        "expected": "The property should be set to True"
      },
      {
        "content": "Add one credit card in patron's wallet",
        "expected": "The card should be added and displayed as tokenized (T)"
      },
      {
        "content": "Do a ticket sale using above credit card from patron's wallet",
        "expected": "The order should be created successfully\nNote down the order id"
      },
      {
        "content": "Now navigate to Ticketing-> Ticket Services\nSearch using credit card\nEnter credit card number by which the above order was created\nClick find\n",
        "expected": "It should display the list of orders which was done using above credit card."
      },
      {
        "content": "Now search for the order id, generated above, in this list of orders and verify that order is present here",
        "expected": "That order id should be reflected in search results."
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  }
]