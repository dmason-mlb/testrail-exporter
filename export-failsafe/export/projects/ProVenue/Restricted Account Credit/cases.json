[
  {
    "id": 30659244,
    "title": "Statements / Invoices - validate existing logic and addition of Payment Method Eligibility logic",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28421",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826805",
    "custom_preconds": "Various Credits and orders, see the test plan attached",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. See the attached InvoiceTestPlan.\nReview PV-28421 for developer test cases that are already completed.\nRun the remaining test cases in the document",
        "expected": "1."
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659245,
    "title": "Payment Distribution when Refund Restricted Credits are consumed",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28561",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826806",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": null,
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659246,
    "title": "Manual reverse market transaction to verify correct account credit payment method is used",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28564",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826807",
    "custom_preconds": "user doing the reversal should have access to more than one payment method of type Account Credit\r\nAt least one of the payment methods should have For 'Restricted Credits Only = true', and this payment method should have the lower display order compared to the account credit payment method without this flag",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Test reverse market transaction from Ticket Services where a credit is being created. This business process has been changed to exclude account credit payment methods marked  \"For Restricted Credits Only\" true. No other changes were made. Note this business process will likely fail if no account credit payment methods are available - this is existing behavior, and wasn't looked at as part of this issue.",
        "expected": "1. The system should use the first (by display order) account credit payment method that is not 'For Restricted Credits Only = true ' when creating the credit for the reversal."
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659247,
    "title": "Event Return/Reverse Utility - reverse market transaction to verify correct account credit payment method is used",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28564",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826808",
    "custom_preconds": "user doing the reversal should have access to more than one payment method of type Account Credit\r\nAt least one of the payment methods should have For 'Restricted Credits Only = true', and this payment method should have the lower display order compared to the account credit payment method without this flag",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Test the reverse action using the Event Return / Reverse utility where a credit is being created. This business process has been changed to exclude account credit payment methods marked  \"For Restricted Credits Only\" true. No other changes were made. Note this business process will likely fail if no account credit payment methods are available - this is existing behavior, and wasn't looked at as part of this issue.",
        "expected": "1. The system should use the first (by display order) account credit payment method that is not 'For Restricted Credits Only = true ' when creating the credit for the reversal."
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659248,
    "title": "Payment Distribution when returning orders where Refund Restricted Credits were consumed",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28419",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826809",
    "custom_preconds": "This is the time holder for testing the movement and auto-generated creation of refund credits when returning, exchanging, reversing etc orders that were paid / partially paid with refund restricted credits",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": null,
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659249,
    "title": "Payment Method Admin changes",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28416",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826552",
    "custom_preconds": "User has access to System Setup > Payment Methods",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Validate that:\n- When creating a new payment method of type Account Credit the new field 'For Restricted Credits Only' is available\n- When editing an existing payment method of type Account Credit the new field 'For Restricted Credits Only' is available\n- When saving the boolean the expected validation/warning message is displayed\n- After saving the boolean as selected, that it is immutable (cannot be unselected)\n- When creating or editing any other payment method type, the new field is not available",
        "expected": "1. See Steps for expected behavior. Warning message should read:\n\"Warning: Restricted Credits designation cannot be changed once saved. Do you want to continue?\""
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659250,
    "title": "Open Item Liability Admin changes for Consumption and Restricted Refund settings",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28416",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826553",
    "custom_preconds": "User has access to System Setup > System Administration",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Validate that:\n- New fields are available if OIL type is Account Credit\n- New fields are not available if OIL type is anything else\n- That only Payment Methods of type Account Credit + 'For Restricted Credits Only'= true, are available to select\n- That dependent values are enforced:  Eligibility and Is Refund Restricted can only be set if Payment Method is selected\n- That the correct fields are mutable / immutable  after the OIL is initially saved\n- That fields render visually well in supported browsers, edge, chrome, firefox, safari",
        "expected": "1. New Mutable Fields:\nUse Payment Method for Eligibility\nRefund Restricted\nConsumption Sequence\nEnforce Consumption Sequence Before Expiration Date\n\nNew Immutable once set field:\nConsumption Payment Method"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659251,
    "title": "Application Feature Properties - Security Permissions - Default Liability types",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28416",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826554",
    "custom_preconds": "User has access to System Setup > Application Feature Permissions \n\nAt least one Account Credit that is Refund Restricted = True and Active",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Verify the Refund Restricted Credit is available in the 6 default Open Item Liability Type dropdowns under Application Feature Permissions  > Security Permissions page",
        "expected": "1. Visibility in the 6 fields in the listed page"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659252,
    "title": "Application Feature Properties - Ticket Permissions -Downgrade Liability types",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28416",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 9,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826555",
    "custom_preconds": "User has access to System Setup > Application Feature Permissions \n\nAt least one Account Credit that is Refund Restricted = True and Active",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Verify the Refund Restricted Credit is available  the Open Item Liability Type dropdowns for the following\n- Default Downgrade Event Exchange Behavior\n- Package Exchange/Relocation Downgrade\nBoth found in Application Feature Permissions > Ticket Permissions page",
        "expected": "1. see steps for expected behavior"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659253,
    "title": "Application Feature Properties - Sales  Permissions - Default Payment Method",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28416",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 10,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826556",
    "custom_preconds": "User has access to System Setup > Application Feature Permissions \n\nAt least one Payment Method of tyep Account Credit that is Use for Credit Consumption Only = True and Active",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Verify that the Use for Credit Consumption Only = True payment method is not available to select as the default payment method found in Application Feature Permissions > Sales Permissions page",
        "expected": "1. see steps for expected behavior"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659254,
    "title": "Sales Cart - 'Use for Credit Consumption Only' Payment Methods should not be selectable in the cart",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28416",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 11,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826557",
    "custom_preconds": "Payment Method with Use for 'Use for Credit Consumption Only' set to True\n\nThe payment is explicitly enabled for the test event\n\nAccount Credit, with this Payment Method defined for consumption",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Lock seats for event \nCheck payments available in cart\nAssign a patron without any credits on account\nCheck payments available in cart\nClear patron\nAssign a patron with a valid credit for the type assigned to this payment method\nCheck payments available in cart, the non-consumption only account credit payment(s) should be listed, but not the test payment method",
        "expected": "1. see steps for expected behavior"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659255,
    "title": "Application property to allow immutable fields to be edited",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28462",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 12,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826558",
    "custom_preconds": "User has access to System Setup > System Administration",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Validate that: \nThe immutable fields for Consumption in Payment Admin and OIL Admin are unlocked and can be changed when \ncredit.consumption.settings.override = true \nThis includes:\nPayment Method: Credit Consumption\nOIL: Payment Consumption Method",
        "expected": "1. When property is set to true the 2 fields are selectable and changes can be saved.\nWhen property is deleted, the fields are relocked, or back to an unset state if the value was cleared.\nWhen Consumption Payment Method is cleared, the Eligible and Refund booleans should also be cleared if previously selected."
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659256,
    "title": "PV - Payment method mapping and eligibility - verify correct credits are available and mapped payment methods are used",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28417",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 13,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826559",
    "custom_preconds": "* Credit without a Consumption Payment Method set\n* Credit with Consumption Payment Method A set, payment is not an Eligible Credit filter\n* Credit with Consumption Payment Method B set, yes payment is an Eligible Credit filter - and is allowed for a target event/package\n* Credit with  Consumption Payment Method C set, yes payment is an Eligible Credit filter - and is not allowed for a target event/package\n\nUser has Consume access to all 4 open item liability types.",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Create various account credits to test the following cases\r\nTest eligibility across various transaction types, sales, exchanges, service charge edits etc. Do not test all combinations against all cart types.\r\n\r\nUse Payment Method for Eligibility = True\r\n- Credit available per event context,  but not per payment method context - credit should not be selectable\r\n- Credit not available per package context, is available per payment method -  credit should not be selectable\r\n- Credit does not have event/package context, is not eligible per payment method - credit should not be selectable\r\n- Credit available per event context, and per payment method context - credit should be selectable and should use mapped consumption payment method\r\n- Credit does not have event/package context and is eligible per payment  method context - credit should be selectable and should use mapped consumption payment method\r\n\r\nUse Payment Method for Eligibility = False\r\n- Credit does not have event/package context, payment method is excluded from event  - credit should be selectable and should use mapped consumption payment method\r\n- Credit is not available per event context,  payment method is in context - credit should not be selectable\r\n- Combine a Credit without an assigned Payment and a Credit with an assigned Consumption Payment in the same cart, verify the correct consumption payment method is consumed for both.",
        "expected": "1. see steps for expected behavior \n\nReminder - payments with 'For Restricted Credits Only' = True should never display in the Select Payment dropdown"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659257,
    "title": "PV - Credit Run Utility - consume the correct credits and use mapped consumption payment methods",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28417",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 14,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826560",
    "custom_preconds": "* Credit without a Consumption Payment Method set\n* Credit with Consumption Payment Method A set, payment is not an Eligible Credit filter\n* Credit with Consumption Payment Method B set, yes payment is an Eligible Credit filter - and is allowed for a target event/package for the run as operator\n* Credit with  Consumption Payment Method C set, yes payment is an Eligible Credit filter - and is not allowed for the run as operator \n\nRun as user has Consume access to all 4 open item liability types.\n\nNote: Test details also include changing permissions for the logged in/run as operator to make sure the correct eligibility level is being checked",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Create various orders Orders with receivables to use in the following test cases.\nRun Credit Run Consumption, against accounts with both eligible and ineligible credits\n\nUse Payment Method for Eligibility = True\n- Credit available per event context,  but not per payment method context - credit should not be consumed\n- Credit not available per package context, is available per payment method -  credit should not be consumed\n- Credit does not have event/package context, is not eligible per payment method - credit should not be consumed\n- Credit available per event context, and per payment method context - credit should be consumed and should use mapped consumption payment method\n- Credit does not have event/package context and is eligible per payment method context - credit should be consumed and should use mapped consumption payment method\n\nDo some additional tests with Eligibility True to make sure the Run As Operator eligibility is based on the Run As User, not the logged in user\n- Where Payment is Allowed for the logged in operator, but not the run as operator - credit should not be consumed\n- Allowed for the run as operator, but not the logged in operator - credit should be consumed\n- Not allowed for either operators -  credit should not be consumed\n\n\nUse Payment Method for Eligibility = False\n- Credit does not have event/package context, payment method is excluded from event  - credit should be consumed and should use mapped consumption payment method\n- Credit is not available per event context,  payment method is in context - credit should not be consumed\nTEST NOTE: UI Will not restrict invalid selections in the initial cycles. Only test the above with valid run time parameter selections.",
        "expected": "1. see steps for expected behavior"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659258,
    "title": "PV - Scheduled Payment Run Utility - consume the correct credits and use mapped consumption payment methods",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28417",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 15,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826561",
    "custom_preconds": "* Credit without a Consumption Payment Method set\n* Credit with Consumption Payment Method A set, payment is not an Eligible Credit filter\n* Credit with Consumption Payment Method B set, yes payment is an Eligible Credit filter - and is allowed for a target event/package for the run as operator\n* Credit with  Consumption Payment Method C set, yes payment is an Eligible Credit filter - and is not allowed for the run as operator \n\nRun as user has Consume access to all 4 open item liability types.\n\nNote: Test details also include changing permissions for the logged in/run as operator to make sure the correct eligibility level is being checked",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Create various orders Orders with scheduled receivables to use in the following test cases.\nRun Scheduled Payment Run, against accounts with both eligible and ineligible credits\n\nUse Payment Method for Eligibility = True\n- Credit available per event context,  but not per payment method context - credit should not be consumed\n- Credit not available per package context, is available per payment method -  credit should not be consumed\n- Credit does not have event/package context, is not eligible per payment method - credit should not be consumed\n- Credit available per event context, and per payment method context - credit should be consumed and should use mapped consumption payment method\n- Credit does not have event/package context and is eligible per payment method context - credit should be consumed and should use mapped consumption payment method\n\nDo some additional tests with Eligibility True to make sure the Run As Operator eligibility is based on the Run As User, not the logged in user\n- Where Payment is Allowed for the logged in operator, but not the run as operator - credit should not be consumed\n- Allowed for the run as operator, but not the logged in operator - credit should be consumed\n- Not allowed for either operators -  credit should not be consumed\n\n\nUse Payment Method for Eligibility = False\n- Credit does not have event/package context, payment method is excluded from event  - credit should be consumed and should use mapped consumption payment method\n- Credit is not available per event context,  payment method is in context - credit should not be consumed",
        "expected": "1. see steps for expected behavior"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659259,
    "title": "PVO MyTickets - Claim/Schedule or Pay a renewal online",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28417",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 16,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826562",
    "custom_preconds": "* Credit without a Consumption Payment Method set\r\n* Credit with Consumption Payment Method A set, payment is not an Eligible Credit filter\r\n* Credit with Consumption Payment Method B set, yes payment is an Eligible Credit filter - and is allowed for a target event/package\r\n* Credit with  Consumption Payment Method C set, yes payment is an Eligible Credit filter - and is not allowed for a target event/package\r\n\r\nUser has Consume access to all 4 open item liability types.",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Create various orders and credits to use in the following test cases.\nConfigure Online claim permissions so that you can claim individual orders, and credits are applied during claim to test the following scenarios\n\nUse Payment Method for Eligibility = True\n- Credit available per event context,  but not per payment method context - credit should not be consumed\n- Credit not available per package context, is available per payment method -  credit should not be consumed\n- Credit does not have event/package context, is not eligible per payment method - credit should not be consumed\n- Credit available per event context, and per payment method context - credit should be consumed and should use mapped consumption payment method\n- Credit does not have event/package context and is eligible per payment  method context - credit should be consumed and should use mapped consumption payment method\n\nUse Payment Method for Eligibility = False\n- Credit does not have event/package context, payment method is excluded from event  - credit should be consumed and should use mapped consumption payment method\n- Credit is not available per event context,  payment method is in context - credit should not be consumed\n- Combine a Credit without an assigned Payment and a Credit with an assigned Consumption Payment in the same cart, verify the correct consumption payment method is consumed for both.",
        "expected": "1. see steps for expected behavior"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659260,
    "title": "PVO MyTickets - Make Payment against a non-scheduled installment",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28417",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 17,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826563",
    "custom_preconds": "* Credit without a Consumption Payment Method set\n* Credit with Consumption Payment Method A set, payment is not an Eligible Credit filter\n* Credit with Consumption Payment Method B set, yes payment is an Eligible Credit filter - and is allowed for a target event/package\n* Credit with  Consumption Payment Method C set, yes payment is an Eligible Credit filter - and is not allowed for a target event/package\n\nUser has Consume access to all 4 open item liability types.",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Create various orders and credits to use in the following test cases.\nConfigure Online claim permissions so that you can claim individual unscheduled installment orders\nThen use Make Payment to pay installments and verify the following scenarios\n\nUse Payment Method for Eligibility = True\n- Credit available per event context,  but not per payment method context - credit should not be selectable\n- Credit not available per package context, is available per payment method -  credit should not be selectable\n- Credit does not have event/package context, is not eligible per payment method - credit should not be selectable\n- Credit available per event context, and per payment method context - credit should be selectable and should use mapped consumption payment method\n- Credit does not have event/package context and is eligible per payment  method context - credit should be selectable and should use mapped consumption payment method\n\nUse Payment Method for Eligibility = False\n- Credit does not have event/package context, payment method is excluded from event  - credit should be selectable and should use mapped consumption payment method\n- Credit is not available per event context,  payment method is in context - credit should not be selectable\n- Combine a Credit without an assigned Payment and a Credit with an assigned Consumption Payment in the same cart, verify the correct consumption payment method is consumed for both.",
        "expected": "1. see steps for expected behavior"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659261,
    "title": "V2/API - Payment method mapping and eligibility - verify correct credits are available and mapped payment methods are used",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28417",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 18,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826564",
    "custom_preconds": "* Credit without a Consumption Payment Method set\n* Credit with Consumption Payment Method A set, payment is not an Eligible Credit filter\n* Credit with Consumption Payment Method B set, yes payment is an Eligible Credit filter - and is allowed for a target event/package\n* Credit with  Consumption Payment Method C set, yes payment is an Eligible Credit filter - and is not allowed for a target event/package\n\nUser has Consume access to all 4 open item liability types.",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Create various account credits to test the following list of APIs:\nAssignDeliveries (after lock)\nCancelOffer (after lock)\nReturn\nExchange Return + Exchange Sale\nPackage Seat Relocation Exchange Return & Sale\nEdit Ticket Price\n\nTest eligibility across various transaction types, sales, exchanges, service charge edits etc. but do not test all combinations against all APIs\n\nUse Payment Method for Eligibility = True\n- Credit available per event context,  but not per payment method context - credit should not be selectable\n- Credit not available per package context, is available per payment method -  credit should not be selectable\n- Credit does not have event/package context, is not eligible per payment method - credit should not be selectable\n- Credit available per event context, and per payment method context - credit should be selectable and should use mapped consumption payment method\n- Credit does not have event/package context and is eligible per payment  method context - credit should be selectable and should use mapped consumption payment method\n\nUse Payment Method for Eligibility = False\n- Credit does not have event/package context, payment method is excluded from event  - credit should be selectable and should use mapped consumption payment method\n- Credit is not available per event context,  payment method is in context - credit should not be selectable\n- Combine a Credit without an assigned Payment and a Credit with an assigned Consumption Payment in the same cart, verify the correct consumption payment method is consumed for both.",
        "expected": "1. see steps for expected behavior"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659262,
    "title": "V2 / API - Sales Groups - offer the correct credits and use mapped consumption payment methods",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28417",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 19,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826565",
    "custom_preconds": "Credit with a Consumption Payment Method mapped\n\nThe user should have Consume access to all of the open item liability types used to test",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Create an account or accounts with various credits that have Payment Method Eligibility enforced.\nConfigure Sales Groups > Payment Restriction context to test the following:\n-Include the payment method where it is excluded at the event level\n-Exclude the payment method where it is included at the event level\n-No restrictions set where payment method is included at the event level\n-No restrictions set where payment method is excluded at the event level\n-Multi Event cart where the payment method is available for one event and excluded for the other\n\nVerify the credit is available to use via Sales Groups API when it should be, and not available when it should not be consumed.\n\nComplete checkout using a restricted credit via a sales group flow and verify the correct consumption payment method is used.",
        "expected": "1. see steps for expected behavior"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659263,
    "title": "PV - Patron Managment > Balance Tab - Disburse should not be allowed for refund restricted credits",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28420",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 20,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826566",
    "custom_preconds": "*Credit with Consumption Payment Method set that is not Refund Restricted \n*Credit with Consumption Payment Method set that is Refund Restricted\n\nUser should have full access to the open item liability types, including Disburse",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Non-Restricted Credit should offer checkbox if patron has access to Disburse, not if not allowed\n\nRestricted Credit should not offer checkbox if user has Disburse permission.\n\nRestricted credit should still offer Transfer Credit button if user has Disburse permission, and the transfer be successful.\nIf the user does not have Disburse permission to the Restricted credit the transfer button should be suppressed",
        "expected": "1. see steps for expected behavior"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659264,
    "title": "PV - consumption sequence and exclude expiration date logic for account credits, manual selection of credits to consume",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28419",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 21,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826567",
    "custom_preconds": "Multiple Eligible Account Credit types with defined Consumption Sequence and at least one with the Enforce Consumption Sequence flag set",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Test various consumption scenarios, using various sale types, exchange carts etc. Not all sale types need to be tested for each credit combination:\n- With and without expiration dates in the first sort\n- With multiple credit types having the same consumption sort, and multiple credits of each type where the created dates switch between types in ascending order\n- With and without Expired Credits and the AFP to use them true/false\n- With more than one eligible credit with the same Creation Date\nIf 2 credits are created by the same transaction, i.e. return/refund, they will have the same creation date\n\nNotes: User selection in the cart will affect which credits are in the sorted/applied group. Test against selected subsets and against a cart where all eligible credits can be applied.",
        "expected": "1. Within the selected pool of credits, they should be consumed in order based on the following logic:\nExpiration Date Ascending, minus liabilities that are set to 'Ignore Expiration Date in Consumption Sortâ€™\n\nConsumption Sequence, Ascending \n\nExpiration Date, Ascending \n\nCreation Date, Ascending \n\nOpen Item Liability ID, Ascending \n\nNote: only Consumption Sequence (which credits are applied) should be tested in this cycle.  Payment distribution is not ready to test."
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659265,
    "title": "V2 / API  - consumption sequence and exclude expiration date logic for account credits",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28419",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 22,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826568",
    "custom_preconds": "Multiple Eligible Account Credit types with defined Consumption Sequence and at least one with the Enforce Consumption Sequence flag set",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Test various consumption scenarios, using various sale types, exchange carts etc. Not all sale types need to be tested for each credit combination:\r\nRun some tests via APIs, and some via MPV flow.\r\n- With and without expiration dates in the first sort\r\n- With multiple credit types having the same consumption sort, and multiple credits of each type where the created dates switch between types in ascending order\r\n- With and without Expired Credits and the AFP to use them true/false\r\n- With more than one eligible credit with the same Creation Date\r\nIf 2 credits are created by the same transaction, i.e. return/refund, they will have the same creation date",
        "expected": "1. The credits should be consumed in order based on the following logic:\nExpiration Date Ascending, minus liabilities that are set to 'Ignore Expiration Date in Consumption Sortâ€™\n\nConsumption Sequence, Ascending \n\nExpiration Date, Ascending \n\nCreation Date, Ascending \n\nOpen Item Liability ID, Ascending\n\nNote: only Consumption Sequence (which credits are applied) should be tested in this cycle.  Payment distribution is not ready to test."
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659266,
    "title": "PV - Return carts with auto created restricted credits, credits should be visible and locked - UX Review",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28419",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 23,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826569",
    "custom_preconds": "Access to create and consume at least one Restricted Credit",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. NOTE: This is similar to the Functional Testing in the next release cycle.  However, in the .04 release only the UI/UX functionality should be verified. Example, Is it clear that records are auto-created, that they cannot be removed etc.?\n\nCreate restricted credits on an account, and consume via a purchase.\nSelect the order for return and verify the cart for the following:\nThe restricted credit that will be created should be shown, and user should not be able to delete it.\nIf the order was paid via multiple restricted credits of the same or different types, each credit should be listed and uneditable.\nThe cart balance should be correctly decreased by the amount of credit(s) being auto created\nIf the returned order was only partially paid by restricted credit the remaining balance should be shown",
        "expected": "1. see steps for expected behavior"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659267,
    "title": "PV - Return carts with auto created restricted credits, credits should be visible and locked - Funtional Testing",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28419",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 24,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826570",
    "custom_preconds": "Access to create and consume at least one Restricted Credit",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. User should have full Consume/Create access, and payment method access if Eligibility is enforced for the credits.\nCreate restricted credits on an account, and consume via a purchase.\nSelect the order for return and verify the cart for the following:\nThe restricted credit that will be created should be shown, and user should not be able to delete it.\nIf the order was paid via multiple restricted credits of the same or different types, each credit should be listed and uneditable.\nThe cart balance should be correctly decreased by the amount of credit(s) being auto created\nIf the returned order was only partially paid by restricted credit the remaining balance should be shown and available to refund via other payment methods.",
        "expected": "1. see steps for expected behavior"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659268,
    "title": "PV - Return carts with auto created restricted credits, credits should be created regardless of user's credit access and payment eligibility",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28419",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 25,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826571",
    "custom_preconds": "Restricted Credit where payment is true for 'Use Payment Method for Security'",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. When a restricted credit is created via a return, downgrade etc the credit should be created regardles of the user's access permissions or payment method access\n\nUse a credit that is Refund Restricted and has Payment Eligibility enforced\nWith a user that has full Read, Create, and Consume access to the credit, and payment method access to the mapped consumption payment\nCreate a credit on the account\nSell an order paying at least part of the cart with the restricted credit\n\nAdjust permissions, or switch to a user who does not have access.\nNo Read, Consume, or Create access to the credit\nNo Payment Method permissions to the mapped payment method\n\nSelect an order sold as describe above for return, verify:\n- The credit is created / visible in the cart\n- The credit cannot be deleted\n- That the cart can successfully be checked out and the credit is created on the account\n\nSelect an order sold as describe above for return, verify:\n- The auto created credits and payments are reduced or removed if additional offers are added to the cart\n- The credits are added back if the additional offers are removed, or modified to a lower value.\n- The auto created credits are reduced or removed if service charges are added/edited that consume the value\n- The credits are added back if service charges are reduced or deleted",
        "expected": "1. see steps for expected behavior"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659269,
    "title": "PV - Auto-generated restricted credits should be created with source credit info",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28419",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 26,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826572",
    "custom_preconds": "Restricted Credit where the user has access to create via various flows to create credits with different values defined",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Create restricted credits with various attributes\nSupplier only, package return context, event return context, expiration date, no expiration date, Order Line Item ID (via Consign Back Flow)\n\nConsume the credits via purchases where the info would vary, i.e. different package/event\nReturn the orders to auto generate new credits on the account\nVerify that the correct source information is on the newly created credit\n\nConsume more than one restricted credit of the same OIL type on the same order\nReturn the order and verify that multiple credits are auto-generated with the correct info from sources",
        "expected": "1. The following should match the source credit\nCredit type \nMarket Type Code \nAccount ID  \nSupplier ID \nEvent ID (if defined) \nPackage ID (if defined) \nSale Type Code (if defined) \nSource Payment Method ID (if defined) \nOpen Item Liability Source \nNote Type ID and Note Text (if defined) \nOrder Line Item ID (if defined) \nExpiration Date"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659270,
    "title": "PV - carts should not allow creation of a credit by overpaying a cart with credit",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28419",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 27,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826573",
    "custom_preconds": "Eligible account credit, does not need to be restricted",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. steps to repro from PV-28367\nHave a patron order with a receivable\nThat patron should also have account credit(s) on their account that can be used to pay down on the receivable.\nIn Ticket Services on the order, choose Create Cash receipt.  \nEnter an amount in the receivable paydown that is less than what the balance of the account credit is.\nOn the payment tab, choose the account credit payment type\nChoose the check box to select the credit (this will make the amount become editable.\nEdit the amount to be the full amount of the credit, process payment and checkout.  \nThe paydown on the receivable is the amount entered to be paid down and an overpayment account credit is created\nNOTE - this use case is also referenced as part of PV-28418, slated for release .04, unclear if it will be ready to test or need retested then",
        "expected": "1. The checkout should be prevented, so that no credit is created with funds from another credit"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659271,
    "title": "V2 / API - Various sales flows, the restricted credit refund amount is correctly sent in the cart response",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28423",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 28,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826574",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Logic for payment movement/reverse of restricted credits is under discussion, pre-requistes and expected is TBD\nAPIs that should be tested:\nAssignDeliveries (after lock)\r\nCancelOffer (after lock)\r\nReturn\r\nExchange Return + Exchange Sale\r\nPackage Seat Relocation Exchange Return & Sale\r\nEdit Ticket Price",
        "expected": "1."
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659272,
    "title": "PV - consumption sequence and exclude expiration date logic for account credits when using Auto Select in the payment tab",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28418",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 29,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826575",
    "custom_preconds": "Multiple Eligible Account Credit types with defined Consumption Sequence and at least one with the Enforce Consumption Sequence flag set",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Using the 'Auto Select' credits option in the cart to select the credits to use, verify the consumption of credits follows the logic:\nExpiration Date Ascending, minus liabilities that are set to Ignore Expiration Date in Consumption Sortâ€™\nConsumption Sequence, Ascending \nExpiration Date, Ascending \nCreation Date, Ascending \nOpen Item Liability ID, Ascending \n\nTest various order scenarios:\n- With and without expiration dates in the first sort\n- With multiple credit types having the same consumption sort, and multiple credits of each type where the created dates switch between types in ascending order\n- With and without Expired Credits and the AFP to use them true/false\n\nHave Display Order on credit different than Consumption Sequence to verify Display does not affect consumption",
        "expected": "1. The credits should be consumed using all consumption sequence rules when using Auto Select"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659273,
    "title": "MPV - Account Credit page, verify display order still controls page order",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28418",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 30,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826576",
    "custom_preconds": "Multiple Eligible Account Credit types with defined Consumption Sequence and at least one with the Enforce Consumption Sequence flag set\n\nMyTickets operator will need Read access to the credits",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Verify that when using Consumption order that is different from display order, the display order is what controls what the credit groupings in MPV > My Account > Credit page",
        "expected": "1. see steps for expected"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659274,
    "title": "PV - Verify display of new columns/fields in the Payment > Apply Credits Panel",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28418",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 31,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826577",
    "custom_preconds": "At least one eligible account credit with a Consumption Payment Method and one without",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. The credit grid has been reworked, verify all columns/headers match the design\nReview the placement and labels of then new Available and Pending balances\nReview the new Auto Select boolean and text\nVerify the changes in Text field \nVerify the area renders well in multiple browser types\nInternationalization - verify the Expiration dates translate in a UK and AU browser",
        "expected": "1. See PRD section 4.0 Restricted Credit Behavior, various subsections for the final expected labels and format etc."
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659275,
    "title": "PV - Eligible credits in the cart should be summarized or grouped by Credit Type and Expiration",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28418",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 32,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826578",
    "custom_preconds": "Multiple Eligible Account Credit types with defined Consumption Sequence and at least one with the Enforce Consumption Sequence flag set",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Create an account(s) with multiple types of postive amount credits with varied:\nType\nSource Context\nExpiration dates, including null\nCreation dates\n\nCreate a cart so that some, not all credits are eligible for consumption\nLoad the credit panel and verify that:\nIneligible credits are not listed\nEligible credits/amounts are listed and summarized where possible using the logic (from PRD 4.1.2 Navigation and Display (ProVenue User) )\n\nAccount Credit amounts will be summarized by Open Item Liability Type and Expiration Date \n(truncated to date only, with no timestamp) and groupings will be sorted based on ProVenue consumption sequence as follows: \nSort Expiration Date ascending with nulls last (sort expiration date, is explained in PRD 3.1.5 Consumption Sort )\nConsumption Sequence for the Liability Type \nActual Expiration Date \nMinimum Created Date ascending \nMinimum Open Item Liability ID ascending \n\nTest accounts where credits will: \n- Still be one per line based on unique truncated Expiration\n- Will be grouped by type + same truncated Expiration\n- Will have more than one Credit Type of the same sequence value, to verify the groups display by earliest Created per summary group\n- Credits with Expiration Dates are not included in that sort because Credit Type is set to Enforce Consumption sequence\n- Verify the Balance of summarized credits is accurate",
        "expected": "1. see steps for expected behavior"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659276,
    "title": "PV - selection and edits of credit amounts in the cart",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28418",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 33,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826579",
    "custom_preconds": "Multiple Eligible Account Credit types with defined Consumption Sequence and at least one with the Enforce Consumption Sequence flag set",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Create an account(s) with multiple types of postive amount credits with varied:\nType, Source Context, Expiration dates (including null), and creation dates\n\nVerify selection and edit behavior for credits where the cart balance is less and more that the current available credit amount\n\nAuto Select - Selection and Deselection: \n- This should select the credit lines and adjust the values as needed to offset the current balance due on the cart.\n- When this boolean is selected, the individual selection and amount edits of each credit line should not be allowed.\n- When this boolean is deselected, the panel should reset to no credits selected and all amounts at the default values.\nIf credits have been previously applied in the same cart, then the default value is the remaining non-applied amount.\n\nManual Selection:\n- All Type lines should be selectable.\n- Amount field for any selected line should be editable\nNote, amount fields should turn red if an invalid amount (too much or $0) or an invalid character is entered\n- The Pending Applied Credit amount should update as\na) a new line is selected\nb) a line is deselected\nc) after leaving an edited amount field\nd) if the amount entered has non-numeric characters Pending Applied Credit amount should treat it as a 0 amount in the sum\n\nApply Payment - validation checks:\nThis should return any validation messages\n- value too high in one line, example\n* The credit / liability only has a balance of 25 and cannot cover the requested payment of 30.\n- invalid amount due to bad character, i.e $3O (capitol o instead of zero)\n* Amount applied is invalid.\nNote - if both of the above validate at the same time a REF### error will be returned\n- Selected amount exceeds the current cart balance\n*Selected credit amount exceeds the cart balance of [cart balance]. Please reduce your credit amount by at least [difference of cart balance and credit amount].",
        "expected": "1. see steps for expected behavior"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659277,
    "title": "PV - consumption order of manually selected credits",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28418",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 34,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826580",
    "custom_preconds": "Multiple Eligible Account Credit types with defined Consumption Sequence and at least one with the Enforce Consumption Sequence flag set",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Create an account(s) with multiple types of postive amount credits with varied:\nType, Source Context, Expiration dates (including null), and creation dates\nWhere some of the credits will be summarized by matching Type+Expiration Dates\n\nComplete transactions where the credits to consume are manually selected\nTest variations where you select \n- The same set of lines that Auto Select would\n- Partial amounts of multiple summarized lines where more than one credit, and partial amounts of credits, should be consumed \n- Where 'later' (by consumption order) credits are selected before 'earlier' credits\n\nIn all manual selections, the consumption order should be applied to the selected subset. \nAnd the credits consumed should be consumed in the consumption order, not the manually selected order, or manually applied payment order.",
        "expected": "1."
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659278,
    "title": "PV - Credit Run Utility - parameters correctly filtered by run type",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28422",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 35,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826581",
    "custom_preconds": "Access to at least one Account Credit that is Refund Restricted",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Distribution --\nVerify no account credit type liabilities display for either True Type mode, Pending or External \n\nDisbursement --\nVerify no account credits set to Refund Restricted True display for Liability Type in mode Account Credit\n\nConsumption --\nVerify that Refund Restricted = true credits are available for selection \nVerify that Credit Consumption only payment methods are not available for run time setting Account Credit Payment Method",
        "expected": "1. see steps for expected behavior"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659279,
    "title": "PV - Event Return/Reverse Utility - filter Credit Consumption payment methods",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28422",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 36,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826582",
    "custom_preconds": "One non-restricted account credit that the current user has create access for\nOne Refund Restricted Account Credit that the current user does not have Create access for\nAnother Refund Restricted Account Credit that the current user does have Create access for",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Verify no account credit payment methods can be selected under Runtime > Primary Market Patron > Payment Type > Use Payment Method dropdown\nOr under Runtime > Primary Market Anonymous Patron >  Payment Method dropdown\nOr under Runtime > Secondary Market Patron > Payment Type > Use Payment Method dropdown",
        "expected": "1. Payment Method dropdowns should only include payment methods of types: Cash, Check, or Other"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659280,
    "title": "PV - Reoffer/Reprice Utility - filter Credit Consumption payment methods",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28422",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 37,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826583",
    "custom_preconds": "One Refund Restricted Account Credit that the current user does not have Create access for\nAnother Refund Restricted Account Credit that the current user does have Create access for",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Verify no account credit payment methods can be selected under Runtime > Payment Due to Patron > Payment Method  dropdown",
        "expected": "1. Payment Method dropdowns should only include payment methods of types: Cash or Other"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 30659281,
    "title": "PV - Reverse Payment of restricted credits",
    "section_id": 1684320,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-28465",
    "created_by": 399,
    "created_on": 1684921393,
    "updated_by": 399,
    "updated_on": 1684921393,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611371,
    "display_order": 38,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1826584",
    "custom_preconds": "*Credit with Consumption Payment Method set that is not Refund Restricted \r\n*Credit with Consumption Payment Method set that is Refund Restricted\r\n\r\nUser should have full access to the open item liability types\r\nUser should also have AFP > Ticket Permissions > Reverse Payments allowed",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. If a credit is Refund Restricted, the payment reversal should load a financial cart that follows the same rule as a full cart.\nCreate an auto-generated credit that matches the original type, rules, expiration date etc \nShould not allow edit or removal of the credit\nAlso verify that the mapped consumption payment method is used for the credit creation\n\nWhen reversing other payment methods they should not create credits or allow creation of credits\n\nIf a credit has a Consumption Payment Method set that but is not Refund Restricted, the reversal should behave as it does for non-consumption credits and not allow the creation of a credit via the reversal.",
        "expected": "1."
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  }
]