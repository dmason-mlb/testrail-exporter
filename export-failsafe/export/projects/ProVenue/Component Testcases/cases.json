[
  {
    "id": 31407038,
    "title": "Verify lock and checkout with patron in cart for package",
    "section_id": 1746615,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 333,
    "created_on": 1694016227,
    "updated_by": 333,
    "updated_on": 1729803462,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 1,
    "custom_is_automated": true,
    "custom_pv_category": 2,
    "custom_refs": null,
    "custom_preconds": "-Create a new events or Package and PEL(or use existing)\r\n-Create a package/associate an existing package and if its new package associate the created events in step above\r\n- make sure the event, PEL and package are on-sale\r\n-make sure the API user has sale access to the above package and PEL (any other permission like payment, deliveries, patron match)\r\n",
    "custom_test_purpose": "to implement the component test cases for MPV sales flow with patron in cart",
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Do a V2 GetPackages call\nGET /api/v2/packages/3139/\nnote: 3139 is the package id.",
        "expected": "verify the payload to have the following values:\nreferenceDate to match with reference data of the package defined in PV\npackageAccess details to have Status: ON_sale(condition to execute the next step)\nID to mactch with the one provided in the '3139'"
      },
      {
        "content": "Select the method as POST\nRun Lock Seat v2 API for Package\nhost/api/v2/lock\n\n{\"lockSeats\":{\"packageList\":{\"id\":3138},\"transactionPatronAccount\":{\"id\":38360},\"numberOfSeats\":2,\"creditsRequested\":true,\"saleType\":\"PACKAGE\",\"buyerTypeSeatsList\":[{\"buyerType\":{\"id\":1422},\"seats\":[{\"index\":4295},{\"index\":4294}]}],\"accessible\":\"false\",\"package\":{\"id\":3139}}}\n",
        "expected": "response code: 200\n1) Extract the e-tag to pass for the assign delivery\nvalidate these are present:\n2) availableDeliveryCardTypes\n3) availableDeliveryMethods\n4) availablePaymentMethods\n6) availableWallets\n7) jsonResponseObject.cart.id\n8) cartExpirationSeconds\n9) jsonResponseObject.cart.totalSalesRevenue.value\nand \n10) transactionPatronAccount matches with the patron provided in the payload for the request."
      },
      {
        "content": "make an Assign delivery call(PUT Method), requires e-tag/if-match\n/api/v2/carts/{{cartid}}/deliveries/assign\n\nPayload\n{\"deliveryAssignment\":{\"deliveries\":[{\"person\":{\"firstName\":\"Pvo\",\"lastName\":\"Renewals\"},\"deliveryMethod\":{\"id\":10},\"emailAddress\":\"pvo.renewalstest1@tickets.com\"}]}}\n",
        "expected": "response code: 200\nExtract the e-tag to pass for the Checkout Request\nThe response will be similar to lock response above so same validations as above step 2 can we reused, as well as under \n11) cart->reference->deliveries->delivery method is the one we provided in the payload"
      },
      {
        "content": "make a checkout api \nPOST /api/v2/carts/345726032/checkout\n\n\npayload:{\n  \"cart\": {\n    \"totalSalesRevenue\": {\n      \"currencyCode\": \"USD\",\n      \"value\": {{totalSalesRevenue}}\n    },\n       \"payments\": [\n      {\n        \"cardExpiration\": \"{{nextYear}}-12\",\n        \"cardNumber\": \"{{cardNumber}}\",\n        \"cardPresent\": false,\n        \"cardSecurityCode\": \"111\",\n        \"cardSwiped\": \"false\",\n        \"externallyAuthorized\": false,\n        \"nameOnCard\": \"Betty Boop\",\n        \"amount\": {\n          \"currencyCode\": \"USD\",\n          \"value\": {{totalSalesRevenue}}\n        },\n        \"paymentMethod\": { \"id\": 7 },\n        \"billingAddress\": {\n          \"address1\": \"766 East Chester Street\",\n          \"address2\": \"11th floor\",\n          \"city\": \"Meridan\",\n          \"countryCode\": \"USA\",\n          \"postalCode\": \"03345\",\n          \"subCountryCode\": \"CT\",\n          \"subCountryName\": \"Connecticut\"\n        }\n      }\n    ],\n  \"transactionPatronAccount\": {\n      \"accountName\": \"{{$randomFullName}}\",\n            \"password\": \"mypassword\",\n      \"type\": {\n        \"code\": \"IND\",\n        \"description\": \"INDIVIDUAL_FAMILY_FRIENDS\"\n      },\n        \"patronContacts\": [\n        {\n          \"dateOfBirth\": \"2012-10-26\",\n          \"type\": {\n            \"code\": \"CONTAC\",\n            \"description\": \"Contact\"\n          },\n          \"person\": {\n            \"firstName\": \"{{$randomFirstName}}\",\n            \"formattedName\": \"{{$randomFullName}}\",\n            \"formalSalutation\": \"{{$randomFullName}}\",\n            \"informalSalutation\": \"{{$randomFullName}}\",\n            \"lastName\": \"{{$randomLastName}}\",\n            \"namePrefix\": {\n              \"code\": \"MR\",\n              \"description\": \"Mister\"\n            },\n            \"nameSuffix\": {\n              \"code\": \"SR\",\n              \"description\": \"Senior\"\n            }\n          },\n          \"patronContactAddresses\": [\n            {\n              \"primary\": \"true\",\n              \"primaryBilling\": true,\n              \"type\": {\n                \"code\": \"HOME\",\n                \"description\": \"Home\"\n              },\n              \"address\": {\n                \"address1\": \"{{$randomStreetAddress}}\",\n                \"city\": \"{{$randomCity}}\",\n                \"countryCode\": \"USA\",\n                \"postalCode\": \"03345\",\n                \"subCountryCode\": \"CT\",\n                \"subCountryName\": \"Connecticut\"\n              }\n            }\n          ],\n          \"patronContactPhones\": [\n            {\n              \"phone\": {\n                \"countryCode\": \"USA\",\n                \"number\": \"{{$randomPhoneNumber}}\"\n              }\n            }\n          ],\n          \"patronContactEmails\": [\n            {\n              \"primary\": \"true\",\n              \"primaryBilling\": \"true\",\n              \"emailAddress\": \"{{$randomEmail}}\",\n              \"type\": {\n                \"code\": \"PERS\",\n                \"description\": \"personal\"\n              }\n            }\n          ]\n        }\n      ]\n    },\n    \"deliveries\": [\n      {\n        \"cardNumber\": \"{{cardNumber}}\",\n        \"deliveryFirstName\": \"{{$randomFirstName}}\",\n        \"deliveryLastName\": \"{{$randomLastName}}\",\n        \"instructions1\": \"Leave the reception\",\n        \"instructions2\": \"Call on cell phone\",\n        \"deliveryMethod\": { \"id\": 1 },\n        \"address\": {\n          \"address1\": \"{{$randomStreetAddress}}\",\n          \"city\": \"{{$randomCity}}\",\n          \"countryCode\": \"USA\",\n          \"postalCode\": \"92626\",\n          \"subCountryCode\": \"CA\"\n        },\n        \"person\": {\n          \"firstName\": \"{{$randomFirstName}}\",\n          \"formattedName\": \"{{$randomFullName}}\",\n          \"formalSalutation\": \"Mr\",\n          \"informalSalutation\": \"Mr\",\n          \"middleName\": \"J\",\n          \"lastName\": \"{{$randomLastName}}\",\n          \"namePrefix\": {\n            \"code\": \"MR\",\n            \"description\": \"Mister\"\n          }\n        },\n        \"cardType\": { \"code\": \"VISA\" }\n      }\n    ]\n  }\n}",
        "expected": "response code: 200\nnote this is package so we can try to extract few of the ticket id's instead of all when validating the request.\ncart.\n\n1) jsonResponseObject.cart.offers[0].lineItems[0].tickets[0].id\n2) jsonResponseObject.cart.offers[0].lineItems[1].tickets[0].id\n3) package and package key refers to the right package we selected during lock\n4) jsonResponseObject.cart.payments[0].cardNumber).to.exist\n5) \"OrderID\",jsonResponseObject.cart.reference.orders[0].id \n6) jsonResponseObject.cart.reference.deliveries[0].id).to.exist\n7) jsonResponseObject.cart.transaction.id).to.exist"
      },
      {
        "content": "Verify the ticket and order table is updated on the DB for the order and tickets purchased",
        "expected": "order/ transaction reflect in the table.\nticket table shows the status of ticket correctly: sold and fullypaid."
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 31252215,
    "title": "Verify Cancel Agreement when Cart Cancelled :  Single Reservation transaction with renewal category: Optional and Pay in full e-sign flag set to true",
    "section_id": 1754114,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 399,
    "created_on": 1692252287,
    "updated_by": 333,
    "updated_on": 1729803462,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 1,
    "custom_is_automated": true,
    "custom_pv_category": 2,
    "custom_refs": null,
    "custom_preconds": "-Create a Renewal group (renewal category: optional)\r\n-Create a package/associate an existing package with above Renewal Group\r\n-Create a Signature Template\r\n-Create a Payment plan with Signature Template selected and Require Signature Even if Order Paid in Full checked\r\n-Create patron with credit \r\n-Complete 1 Package reservation transactions for the above patron\r\n\r\nSet async.signature.cancel.agreements.enabled property true",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Precondition 1:\nCreate a Renewal group (renewal category: optional)\n-Login to PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Event Groups\n-Select Renewal Group from \"Event Group Type\"\n-Click New button\n-Enter the Mandatory fields\nSelect renewal category \"optional\" \n-Click Save button",
        "expected": "New Renewal Group created successfully"
      },
      {
        "content": "Precondition 2:\nCreate a new Package or associate an existing Package with above Renewal Group\n-Login to PV application\n-Navigate to Package Administration\n-Search existing package\n-Assign the above Renewal Group(Renewal Group created in Precondition1)",
        "expected": "Package created successfully & associated with Renewal Group"
      },
      {
        "content": "Precondition 3:\nCreate a Signature Template with application property online.renewals.esignatures.setup.enabled set to True \n-Login to PV application\n-Navigate to System Setup\n-Select the Organization from Organization Administration\n-Navigate to Configuration tab\n-Choose Signature Template from the Select Configuration dropwdown\n-Click New button\n-Enter the Mandatory fields\n-Click Save button",
        "expected": "New Signature Template created successfully"
      },
      {
        "content": "Precondition 4:\nCreate a Payment plan\n-Login PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Payment Plans\n-Click New button\n-Enter the Mandatory fields\nselect Use Scheduled Payments \"Required\"\n_Enter the (No Of Installments/Fixed Start Date & Fixed Installment Period)\n-Click Setup Installments button\n-Choose Signature Template from the dropdown \n-Check Require Signature Even if Order Paid in Full checkbox\n-Click Save button\n\nAssociate new payment plan with the package above",
        "expected": "Payment plan created successfully"
      },
      {
        "content": "Precondition 5\n\nCreate patron with credit\n-Login to PV application\n-Navigate to Patron Management\n-Search & select the MPV patron\n-Navigate to Balance\n-Click Add Credit button\n-Enter the Mandatory fields(Supplier, Credit source ,Credit type & Amount) and click ok button\n-Application will Navigate to Payment Page\n-Click Accept Payment & click checkout\n\nNote: To complete the sale with credit card payment, patron should provide digitalWalletItem id in checkout API request\nFollow below steps if patron don't have a digitalWalletItem id\n-Login PV application\n-Navigate to Patron Management\n-Search & select the MPV patron\n-Navigate to wallet\n-Select Payment type \"Credit card\"\n-Click new\n-Enter the mandatory fields\n(Card Type/Card/Name on Card/Exp.Date)\n-Check Default\n-Click Save button",
        "expected": "Account credit created for patron"
      },
      {
        "content": "-Complete a Package reservation transactions for (Precondition 2)package with (Precondition 5)patron",
        "expected": "Package reservation transaction completed successfully"
      },
      {
        "content": "-Set async.signature.cancel.agreements.enabled property true",
        "expected": "The application property should be set to true "
      },
      {
        "content": "Launch Postman tool\nSelect the method as GET\nEnter Authorization and Header details\nRun Get Renewal Order Group v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/patrons/37714/renewalOrderGroups?renewalOrderCategory=ALL_UNASSIGNED_ORDERS",
        "expected": "Verify Renewal Group & categories displayed as expected in Response\n\n"
      },
      {
        "content": "Run Get Renewal Order Group v2 API\n\n",
        "expected": "\t\nVerify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-Total Amount\n-Renew together type\n-Consume Credit Value"
      },
      {
        "content": "Select the method as POST\nRun Create Cart v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/carts/renew\n\n{\n\"renewalCartRequest\": {\n\"renewalGroupId\": {{renewalgroupID}},\n\"patronAccount\": {\n\"id\": {{PatronID1}}\n},\n\"renewalOrders\": [\n{\n\"payPastDueAmountOnly\": false,\n\"optInScheduledPayments\": true,\n\"order\": {\n\"id\": {{OrderID-s}}\n},\n\"paymentPlan\": {\n\"id\": {{paymentPlanID}}\n},\n\"deliveries\": [\n{\n\"attendingPatronAccount\": {\n\"id\": {{PatronID1}},\n\"accountName\": \"Patron88, Jdirect223\"\n},\n\"address\": {\n\"address1\": \"100 Main Street\",\n\"city\": \"Costa Mesa\",\n\"countryCode\": \"USA\",\n\"postalCode\": \"33606\",\n\"subCountryCode\": \"CA\"\n},\n\"deliveryMethod\": {\n\"id\": 1\n},\n\"person\": {\n\"firstName\": \"Kvolyxxi\",\n\"formattedName\": \"Kvolyxxi Samaflkja\",\n\"lastName\": \"Samaflkja\"\n}\n}\n]\n}\n]\n}\n}",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-Total Amount\n-Renew together type\n-Consume Credit Value\n-orderInstallmentsSummaries\n-dueAmount\n-dueDate\n\nget the Cart id & ETag value"
      },
      {
        "content": "\t\nSelect the method as POST\nEnter Etag and x-patron-account-id-claim (header - PatronID) detail\nRun Create Agreement API\n\n{{base_url}}/api/v2/carts/{{cartId}}/agreements\n\n{\n\"createAgreement\": {\n\"postSignRedirectUrl\": \"https://ph31mldvapppvn10.back.tickets.com:18443\",\n\"applyCredit\": true\n}\n}",
        "expected": "Verify below values displayed as expected in Response\n-provider\n-agreementUrl\n-orderId\n-externalId\n\nGet the ETag value"
      },
      {
        "content": "Verify the signature_agreement table is updated on the DB\n\n",
        "expected": "Verify SIG_AGMT_STS_TYPE_CODE displays \"NS\" for the order\n\n"
      },
      {
        "content": "Run the cancel cart API ",
        "expected": "The renewal cart should be cancelled "
      },
      {
        "content": "Verify the signature_agreement table is updated on the DB ",
        "expected": "Verify SIG_AGMT_STS_TYPE_CODE displays \"CN\" for the order"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 31253365,
    "title": "Verify Cancel Agreement when Cart Cancelled : Multiple Reservation transactions with renewal category: Optional and Pay in full e-sign flag set to true where Second or subsequent call to Create Agreement API fails",
    "section_id": 1754114,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 399,
    "created_on": 1692256457,
    "updated_by": 333,
    "updated_on": 1729803462,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 2,
    "custom_is_automated": true,
    "custom_pv_category": 2,
    "custom_refs": null,
    "custom_preconds": "-Create a Renewal group (renewal category: optional)\r\n-Create a package/associate an existing package with above Renewal Group\r\n-Create a Signature Template\r\n-Create a Payment plan with Signature Template selected and Require Signature Even if Order Paid in Full checked\r\n-Create patron with credit \r\n-Complete 2 Package reservation transactions for the above patron\r\n\r\nSet async.signature.cancel.agreements.enabled property true",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Precondition 1:\nCreate a Renewal group (renewal category: optional)\n-Login to PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Event Groups\n-Select Renewal Group from \"Event Group Type\"\n-Click New button\n-Enter the Mandatory fields\nSelect renewal category \"optional\" \n-Click Save button",
        "expected": "New Renewal Group created successfully"
      },
      {
        "content": "Precondition 2:\nCreate a new Package or associate an existing Package with above Renewal Group\n-Login to PV application\n-Navigate to Package Administration\n-Search existing package\n-Assign the above Renewal Group(Renewal Group created in Precondition1)",
        "expected": "Package created successfully & associated with Renewal Group"
      },
      {
        "content": "Precondition 3:\nCreate a Signature Template with application property online.renewals.esignatures.setup.enabled set to True \n-Login to PV application\n-Navigate to System Setup\n-Select the Organization from Organization Administration\n-Navigate to Configuration tab\n-Choose Signature Template from the Select Configuration dropwdown\n-Click New button\n-Enter the Mandatory fields\n-Click Save button",
        "expected": "New Signature Template created successfully"
      },
      {
        "content": "Precondition 4:\nCreate a Payment plan\n-Login PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Payment Plans\n-Click New button\n-Enter the Mandatory fields\nselect Use Scheduled Payments \"Required\"\n_Enter the (No Of Installments/Fixed Start Date & Fixed Installment Period)\n-Click Setup Installments button\n-Choose Signature Template from the dropdown \n-Check Require Signature Even if Order Paid in Full checkbox\n-Click Save button\n\nAssociate new payment plan with the package above",
        "expected": "Payment plan created successfully"
      },
      {
        "content": "Precondition 5\n\nCreate patron with credit\n-Login to PV application\n-Navigate to Patron Management\n-Search & select the MPV patron\n-Navigate to Balance\n-Click Add Credit button\n-Enter the Mandatory fields(Supplier, Credit source ,Credit type & Amount) and click ok button\n-Application will Navigate to Payment Page\n-Click Accept Payment & click checkout\n\nNote: To complete the sale with credit card payment, patron should provide digitalWalletItem id in checkout API request\nFollow below steps if patron don't have a digitalWalletItem id\n-Login PV application\n-Navigate to Patron Management\n-Search & select the MPV patron\n-Navigate to wallet\n-Select Payment type \"Credit card\"\n-Click new\n-Enter the mandatory fields\n(Card Type/Card/Name on Card/Exp.Date)\n-Check Default\n-Click Save button",
        "expected": "Account credit created for patron"
      },
      {
        "content": "-Complete 2 Package reservation transactions for (Precondition 2)package with (Precondition 5)patron",
        "expected": "Package reservation transaction completed successfully"
      },
      {
        "content": "-Set async.signature.cancel.agreements.enabled property true",
        "expected": "The application property should be set to true "
      },
      {
        "content": "\t\nLaunch Postman tool\nSelect the method as GET\nEnter Authorization and Header details\nRun Get Renewal Order Group v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/patrons/37714/renewalOrderGroups?renewalOrderCategory=ALL_UNASSIGNED_ORDERS",
        "expected": "Verify Renewal Group & categories displayed as expected in Response\n\n"
      },
      {
        "content": "Launch Postman tool\nSelect the method as GET\nEnter Authorization and Header details\nRun Get Renewal Order Group v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/patrons/37714/renewalOrderGroups?renewalOrderCategory=ALL_UNASSIGNED_ORDERS",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-Total Amount\n-Renew together type\n-Consume Credit Value"
      },
      {
        "content": "\t\nSelect the method as POST\nRun Create Renewal Cart v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/carts/renew\n{\n\"renewalCartRequest\": {\n\"renewalGroupId\": \"1061\",\n\"patronAccount\": {\n\"id\": 38961\n},\n\"renewalOrders\": [\n{\n\"payPastDueAmountOnly\": false,\n\"optInScheduledPayments\": true,\n\"order\": {\n\"id\": 14666004\n},\n\"paymentPlan\": {\n\"id\": 2641\n}\n}\n]\n}\n}",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-Total Amount\n-Renew together type\n-Consume Credit Value\n-orderInstallmentsSummaries\n-dueAmount\n-dueDate\n\nget the ETag value"
      },
      {
        "content": "\t\nSelect the method as POST\nEnter Etag and x-patron-account-id-claim (header - PatronID) detail\nRun Create Agreement API\n\n{{base_url}}/api/v2/carts/{{cartId}}/agreements\n\n{\n\"createAgreement\": {\n\"postSignRedirectUrl\": \"https://ph31mldvapppvn10.back.tickets.com:18443\",\n\"applyCredit\": true\n}\n}",
        "expected": "Verify below values displayed as expected in Response\n-provider\n-agreementUrl\n-orderId\n-externalId\n\nget the ETag value"
      },
      {
        "content": "Select the method as POST\nReRun Create RenewalCart v2 API with the same payload as in Step 10 above \n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/carts/renew\n{\n\"renewalCartRequest\": {\n\"renewalGroupId\": \"1061\",\n\"patronAccount\": {\n\"id\": 38961\n},\n\"renewalOrders\": [\n{\n\"payPastDueAmountOnly\": false,\n\"optInScheduledPayments\": true,\n\"order\": {\n\"id\": 14666004\n},\n\"paymentPlan\": {\n\"id\": 2641\n}\n}\n]\n}\n}",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-Total Amount\n-Renew together type\n-Consume Credit Value\n-orderInstallmentsSummaries\n-dueAmount\n-dueDate\n\nget the ETag value"
      },
      {
        "content": "\t\nSelect the method as POST\nEnter Etag and x-patron-account-id-claim (header - PatronID) detail\nRun Create Agreement API\n\n{{base_url}}/api/v2/carts/{{cartId}}/agreements\n\n{\n\"createAgreement\": {\n\"postSignRedirectUrl\": \"https://ph31mldvapppvn10.back.tickets.com:18443\",\n\"applyCredit\": true\n}\n}",
        "expected": "Verify below values displayed as expected in Response\n-provider\n-agreementUrl\n-orderId\n-externalId\n\nget the ETag value"
      },
      {
        "content": "Run the Cancel Renewal Cart API",
        "expected": "The cart should be successfully cancelled "
      },
      {
        "content": "Verify the signature_agreement table is updated on the DB for the first cart ID \n\n",
        "expected": "Verify SIG_AGMT_STS_TYPE_CODE displays \"CN\" for the orders in the initial cart "
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 31253650,
    "title": "Verify Cancel Agreement when Card Authorization Fails during checkout and patron abandons cart OR starts a new cart",
    "section_id": 1754114,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 399,
    "created_on": 1692263894,
    "updated_by": 333,
    "updated_on": 1729803462,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 3,
    "custom_is_automated": true,
    "custom_pv_category": 2,
    "custom_refs": null,
    "custom_preconds": "-Create a Renewal group (renewal category: optional)\r\n-Create a package/associate an existing package with above Renewal Group\r\n-Create a Signature Template\r\n-Create a Payment plan with Signature Template selected and Require Signature Even if Order Paid in Full checked\r\n-Complete a Package reservation transaction for the above patron\r\n\r\nSet async.signature.cancel.agreements.enabled property true",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Precondition 1:\nCreate a Renewal group (renewal category: optional)\n-Login to PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Event Groups\n-Select Renewal Group from \"Event Group Type\"\n-Click New button\n-Enter the Mandatory fields\nSelect renewal category \"optional\" \n-Click Save button",
        "expected": "New Renewal Group created successfully"
      },
      {
        "content": "Precondition 2:\nCreate a new Package or associate an existing Package with above Renewal Group\n-Login to PV application\n-Navigate to Package Administration\n-Search existing package\n-Assign the above Renewal Group(Renewal Group created in Precondition1)",
        "expected": "Package created successfully & associated with Renewal Group"
      },
      {
        "content": "Precondition 3:\nCreate a Signature Template with application property online.renewals.esignatures.setup.enabled set to True \n-Login to PV application\n-Navigate to System Setup\n-Select the Organization from Organization Administration\n-Navigate to Configuration tab\n-Choose Signature Template from the Select Configuration dropwdown\n-Click New button\n-Enter the Mandatory fields\n-Click Save button",
        "expected": "New Signature Template created successfully"
      },
      {
        "content": "Precondition 4:\nCreate a Payment plan\n-Login PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Payment Plans\n-Click New button\n-Enter the Mandatory fields\nselect Use Scheduled Payments \"Required\"\n_Enter the (No Of Installments/Fixed Start Date & Fixed Installment Period)\n-Click Setup Installments button\n-Choose Signature Template from the dropdown \n-Check Require Signature Even if Order Paid in Full checkbox\n-Click Save button\n\nAssociate new payment plan with the package above",
        "expected": "Payment plan created successfully"
      },
      {
        "content": "-Complete a Package reservation transactions for (Precondition 2)package with MPV patron",
        "expected": "Package reservation transaction completed successfully"
      },
      {
        "content": "-Set async.signature.cancel.agreements.enabled property true",
        "expected": "The application property should be set to true "
      },
      {
        "content": "Launch Postman tool\nSelect the method as GET\nEnter Authorization and Header details\nRun Get Renewal Order Group v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/patrons/37714/renewalOrderGroups?renewalOrderCategory=ALL_UNASSIGNED_ORDERS",
        "expected": "verify Renewal Group & categories displayed as expected in Response\n"
      },
      {
        "content": "Run Get Renewal Order Group v2 API\n",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-Total Amount\n-Renew together type\n-Consume Credit Value"
      },
      {
        "content": "Select the method as POST\nRun Create Cart v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/carts/renew\n\n{\n    \"renewalCartRequest\": {\n        \"renewalGroupId\": {{renewalgroupID}},\n        \"patronAccount\": {\n            \"id\": {{PatronID1}}\n        },\n        \"renewalOrders\": [\n            {\n                \"payPastDueAmountOnly\": false,\n                \"optInScheduledPayments\": true,\n                \"order\": {\n                    \"id\": {{OrderID-s}}\n                },\n                \"paymentPlan\": {\n                    \"id\": {{paymentPlanID}}\n                },\n                \"deliveries\": [\n                    {\n                        \"attendingPatronAccount\": {\n                            \"id\": {{PatronID1}},\n                            \"accountName\": \"Patron88, Jdirect223\"\n                        },\n                        \"address\": {\n                            \"address1\": \"100 Main Street\",\n                            \"city\": \"Costa Mesa\",\n                            \"countryCode\": \"USA\",\n                            \"postalCode\": \"33606\",\n                            \"subCountryCode\": \"CA\"\n                        },\n                        \"deliveryMethod\": {\n                            \"id\": 1\n                        },\n                        \"person\": {\n                            \"firstName\": \"Kvolyxxi\",\n                            \"formattedName\": \"Kvolyxxi Samaflkja\",\n                            \"lastName\": \"Samaflkja\"\n                        }\n                    }\n                ]\n            }\n        ]\n    }\n}",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-Total Amount\n-Renew together type\n-Consume Credit Value\n-orderInstallmentsSummaries\n-dueAmount\n-dueDate\n\nget the Cart id & ETag value"
      },
      {
        "content": "Select the method as POST\nEnter Etag and x-patron-account-id-claim (header - PatronID) detail\nRun Create Agreement API\n\n{{base_url}}/api/v2/carts/{{cartId}}/agreements\n\n{\n\"createAgreement\": {\n\"postSignRedirectUrl\": \"https://ph31mldvapppvn10.back.tickets.com:18443\",\n\"applyCredit\": true\n}\n}",
        "expected": "Verify below values displayed as expected in Response\n-provider\n-agreementUrl\n-orderId\n-externalId\n\nget the ETag value"
      },
      {
        "content": "Enter the ETag value in header \"If-Match\" before run checkout API\nEnter card with auth failure \n\nRun Checkout v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/carts/344496119/checkout/renewal\n\n{\n    \"cart\": {\n        \"id\": {{cartId}},\n        \"payments\": [\n            {\n                \"cardExpiration\": \"2025-05\",\n                \"cardNumber\": \"{{cardNumber}}\",\n                \"cardPresent\": true,\n                \"cardSecurityCode\": \"111\",\n                \"cardSwiped\": \"false\",\n                \"externallyAuthorized\": \"false\",\n                \"nameOnCard\": \"Bart Simpson\",\n                \"amount\": {\n                    \"currencyCode\": \"USD\",\n                    \"value\": 5532\n                },\n                \"paymentMethod\": {\n                    \"id\": 7\n                },\n                \"billingAddress\": {\n                    \"address1\": \"3232 Main Street\",\n                    \"address2\": \"\",\n                    \"city\": \"Syracuse\",\n                    \"countryCode\": \"USA\",\n                    \"postalCode\": \"13202\",\n                    \"subCountryCode\": \"NY\",\n                    \"subCountryName\": \"Connecticut\"\n                }\n            }\n        ],\n        \"orderInstallmentsSummaries\": [\n            {\n                \"order\": {\n                    \"id\": {{OrderID-s}}\n                },\n                \"paymentPlan\": {\n                    \"id\": {{paymentPlanID}}\n                },\n                \"installments\": [\n                  \n                    {\n                        \"installmentDate\": \"{{InstallmentDate2}}\",\n                        \"scheduledPayments\": [\n                            {\n                                \"amount\": {\n                                    \"value\": {{InstallmentAmount2}},\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"digitalWalletItem\": {\n                                    \"id\": {{digitalWalletItemId}}\n                                }\n                            }\n                        ]\n                    }\n                ]\n            }\n        ],\n        \"transactionPatronAccount\": {\n            \"id\": \"{{PatronID1}}\",\n            \"accountName\": \"Simpson Family\",\n            \"matchEmailAddress\": \"ngbeta@gmail.com.test\"\n        }\n    }\n}",
        "expected": "Error message displaying that the card auth failed should be displayed"
      },
      {
        "content": "Verify the signature_agreement table is updated on the DB ",
        "expected": "Verify SIG_AGMT_STS_TYPE_CODE displays \"NS\" for the order"
      },
      {
        "content": "Allow the session to expire by waiting for the duration async.signature.cancel.agreements.enabled is set (90 Mins by default)\n",
        "expected": "The session should expire \n"
      },
      {
        "content": "Verify the signature_agreement table is updated on the DB for the order \n",
        "expected": "Verify SIG_AGMT_STS_TYPE_CODE displays \"CN\" for the order"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 31253656,
    "title": "Verify Cancel Agreement when PV crashes",
    "section_id": 1754114,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 399,
    "created_on": 1692266363,
    "updated_by": 333,
    "updated_on": 1729803462,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 4,
    "custom_is_automated": true,
    "custom_pv_category": 2,
    "custom_refs": null,
    "custom_preconds": "-Create a Renewal group (renewal category: optional)\r\n-Create a package/associate an existing package with above Renewal Group\r\n-Create a Signature Template\r\n-Create a Payment plan with Signature Template selected and Require Signature Even if Order Paid in Full checked\r\n-Complete a Package reservation transaction for the above patron\r\n\r\nSet async.signature.cancel.agreements.enabled property true",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Precondition 1:\nCreate a Renewal group (renewal category: optional)\n-Login to PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Event Groups\n-Select Renewal Group from \"Event Group Type\"\n-Click New button\n-Enter the Mandatory fields\nSelect renewal category \"optional\" \n-Click Save button",
        "expected": "New Renewal Group created successfully"
      },
      {
        "content": "Precondition 2:\nCreate a new Package or associate an existing Package with above Renewal Group\n-Login to PV application\n-Navigate to Package Administration\n-Search existing package\n-Assign the above Renewal Group(Renewal Group created in Precondition1)",
        "expected": "Package created successfully & associated with Renewal Group"
      },
      {
        "content": "Precondition 3:\nCreate a Signature Template with application property online.renewals.esignatures.setup.enabled set to True \n-Login to PV application\n-Navigate to System Setup\n-Select the Organization from Organization Administration\n-Navigate to Configuration tab\n-Choose Signature Template from the Select Configuration dropwdown\n-Click New button\n-Enter the Mandatory fields\n-Click Save button",
        "expected": "New Signature Template created successfully"
      },
      {
        "content": "Precondition 4:\nCreate a Payment plan\n-Login PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Payment Plans\n-Click New button\n-Enter the Mandatory fields\nselect Use Scheduled Payments \"Required\"\n_Enter the (No Of Installments/Fixed Start Date & Fixed Installment Period)\n-Click Setup Installments button\n-Choose Signature Template from the dropdown \n-Check Require Signature Even if Order Paid in Full checkbox\n-Click Save button\n\nAssociate new payment plan with the package above",
        "expected": "Payment plan created successfully"
      },
      {
        "content": "-Complete a Package reservation transactions for (Precondition 2)package with MPV patron",
        "expected": "Package reservation transaction completed successfully"
      },
      {
        "content": "-Set async.signature.cancel.agreements.enabled property true",
        "expected": "The application property should be set to true "
      },
      {
        "content": "Launch Postman tool\nSelect the method as GET\nEnter Authorization and Header details\nRun Get Renewal Order Group v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/patrons/37714/renewalOrderGroups?renewalOrderCategory=ALL_UNASSIGNED_ORDERS",
        "expected": "Verify Renewal Group & categories displayed as expected in Response\n"
      },
      {
        "content": "Run Get Renewal Order Group v2 API\n",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-Total Amount\n-Renew together type\n-Consume Credit Value"
      },
      {
        "content": "Select the method as POST\nRun Create Cart v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/carts/renew\n\n{\n    \"renewalCartRequest\": {\n        \"renewalGroupId\": {{renewalgroupID}},\n        \"patronAccount\": {\n            \"id\": {{PatronID1}}\n        },\n        \"renewalOrders\": [\n            {\n                \"payPastDueAmountOnly\": false,\n                \"optInScheduledPayments\": true,\n                \"order\": {\n                    \"id\": {{OrderID-s}}\n                },\n                \"paymentPlan\": {\n                    \"id\": {{paymentPlanID}}\n                },\n                \"deliveries\": [\n                    {\n                        \"attendingPatronAccount\": {\n                            \"id\": {{PatronID1}},\n                            \"accountName\": \"Patron88, Jdirect223\"\n                        },\n                        \"address\": {\n                            \"address1\": \"100 Main Street\",\n                            \"city\": \"Costa Mesa\",\n                            \"countryCode\": \"USA\",\n                            \"postalCode\": \"33606\",\n                            \"subCountryCode\": \"CA\"\n                        },\n                        \"deliveryMethod\": {\n                            \"id\": 1\n                        },\n                        \"person\": {\n                            \"firstName\": \"Kvolyxxi\",\n                            \"formattedName\": \"Kvolyxxi Samaflkja\",\n                            \"lastName\": \"Samaflkja\"\n                        }\n                    }\n                ]\n            }\n        ]\n    }\n}",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-Total Amount\n-Renew together type\n-Consume Credit Value\n-orderInstallmentsSummaries\n-dueAmount\n-dueDate\n\nget the Cart id & ETag value"
      },
      {
        "content": "Select the method as POST\nEnter Etag and x-patron-account-id-claim (header - PatronID) detail\nRun Create Agreement API\n\n{{base_url}}/api/v2/carts/{{cartId}}/agreements\n\n{\n\"createAgreement\": {\n\"postSignRedirectUrl\": \"https://ph31mldvapppvn10.back.tickets.com:18443\",\n\"applyCredit\": true\n}\n}",
        "expected": "Verify below values displayed as expected in Response\n-provider\n-agreementUrl\n-orderId\n-externalId\n\nGet the ETag value"
      },
      {
        "content": "Verify the signature_agreement table is updated on the DB ",
        "expected": "Verify SIG_AGMT_STS_TYPE_CODE displays \"NS\" for the order"
      },
      {
        "content": "Trigger PV crash ",
        "expected": "PV application should go down "
      },
      {
        "content": "Verify the signature_agreement table is updated on the DB for the order \n",
        "expected": "Verify SIG_AGMT_STS_TYPE_CODE displays \"CN\" for the order"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 31325259,
    "title": "Verify Cancel Agreement when Patron abandons cart /Cart Expired : Single Reservation transition with renewal category: Optional and Pay in full e-sign flag set to true",
    "section_id": 1754114,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 399,
    "created_on": 1692948340,
    "updated_by": 333,
    "updated_on": 1729803462,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 5,
    "custom_is_automated": true,
    "custom_pv_category": 2,
    "custom_refs": null,
    "custom_preconds": "-Create a Renewal group (renewal category: optional & Consume Credit During Online Renewal Full Optional)\r\n-Create a package/associate an existing package with above Renewal Group\r\n-Create a Signature Template\r\n-Create a Payment plan with Signature Template selected and Require Signature Even if Order Paid in Full checked\r\n-Provide consolidate receivable permissions\r\n-Create patron with credit (Credit amount should be less than the receivable transaction amount)\r\n-Complete 1 Package receivable transaction for the above patron",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Precondition 1:\nCreate a Renewal group (renewal category: optional & Consume Credit During Online Renewal Full Optional)\n-Login to PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Event Groups\n-Select Renewal Group from \"Event Group Type\"\n-Click New button\n-Enter the Mandatory fields\nSelect renewal category \"optional\" & Consume Credit During Online Renewal \"Full-Optional\"\n-Click Save button",
        "expected": "New Renewal Group created successfully"
      },
      {
        "content": "\t\nPrecondition 2:\nCreate a new Package or associate an existing Package with above Renewal Group\n-Login to PV application\n-Navigate to Package Administration\n-Search existing package\n-Assign the above Renewal Group(Renewal Group created in Precondition1)",
        "expected": "Package created successfully & associated with Renewal Group"
      },
      {
        "content": "Precondition 3:\nCreate a Signature Template with application property online.renewals.esignatures.setup.enabled set to True \n-Login to PV application\n-Navigate to System Setup\n-Select the Organization from Organization Administration\n-Navigate to Configuration tab\n-Choose Signature Template from the Select Configuration dropwdown\n-Click New button\n-Enter the Mandatory fields\n-Click Save button",
        "expected": "New Signature Template created successfully"
      },
      {
        "content": "Precondition 4:\nCreate a Payment plan\n-Login PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Payment Plans\n-Click New button\n-Enter the Mandatory fields\nselect Use Scheduled Payments \"Optional\"\n_Enter the (No Of Installments/Fixed Start Date & Fixed Installment Period)- 50-50 payment plan \n-Click Setup Installments button\n-Choose Signature Template from the dropdown \n-Check Require Signature Even if Order Paid in Full checkbox\n-Click Save button\n\nAssociate new payment plan with the package above",
        "expected": "Payment plan created successfully"
      },
      {
        "content": "Precondition 5:\nProvide consolidate receivable permissions\n-Login to PV application\n-Navigate to System Setup\n-Select the Organization from Organization Administration\n- Navigate to Access Permissions tab \n- Choose Open Item Receivable Type from Category dropdown\n- Click the Find button \n- Provide logged in user and MUM_MYTIXX user consolidate permission for the MLBGRPREC receivable\n- Apply Chenages \n- Logout from PV ",
        "expected": "Consolidate receivable permissions provided to MUM_MYTIXX user and the logged in user "
      },
      {
        "content": "Precondition 6\nCreate patron with credit\n-Login to PV application\n-Navigate to Patron Management\n-Search & select the MPV patron\n-Navigate to Balance\n-Click Add Credit button\n-Enter the Mandatory fields(Supplier, Credit source ,Credit type & Amount) and click ok button\n-Application will Navigate to Payment Page\n-Click Accept Payment & click checkout\n\nNote: To complete the sale with credit card payment, patron should provide digitalWalletItem id in checkout API request\nFollow below steps if patron don't have a digitalWalletItem id\n-Login PV application\n-Navigate to Patron Management\n-Search & select the MPV patron\n-Navigate to wallet\n-Select Payment type \"Credit card\"\n-Click new\n-Enter the mandatory fields\n(Card Type/Card/Name on Card/Exp.Date)\n-Check Default\n-Click Save button",
        "expected": "Account credit created for patron\n\nNote:Credit amount should less than the receivable transaction amount"
      },
      {
        "content": "Precondition 7:\n-Complete a Package receivable transactions for (Precondition 2)package with (Precondition 6)patron using the payment plan defined above ",
        "expected": "Package receivable transaction completed successfully"
      },
      {
        "content": "\t\nLaunch Postman tool\nSelect the method as GET\nEnter Authorization and Header details\nRun Get Renewal Order Group v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/patrons/37714/renewalOrderGroups?renewalOrderCategory=ALL_UNASSIGNED_ORDERS",
        "expected": "Verify Renewal Group & categories displayed as expected in Response\n\n"
      },
      {
        "content": "Launch Postman tool\nSelect the method as GET\nEnter Authorization and Header details\nRun Get Renewal Order Group v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/patrons/37714/renewalOrderGroups?renewalOrderCategory=ALL_UNASSIGNED_ORDERS",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-Total Amount\n-Renew together type\n-Consume Credit Value"
      },
      {
        "content": "Select the method as POST\nRun Create Cart v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/carts/renew\n{\n\"renewalCartRequest\": {\n\"renewalGroupId\": \"1061\",\n\"patronAccount\": {\n\"id\": 38961\n},\n\"renewalOrders\": [\n{\n\"payPastDueAmountOnly\": false,\n\"optInScheduledPayments\": true,\n\"order\": {\n\"id\": 14666004\n},\n\"paymentPlan\": {\n\"id\": 2641\n}\n}\n]\n}\n}",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-Total Amount\n-Renew together type\n-Consume Credit Value\n-orderInstallmentsSummaries\n-dueAmount\n-dueDate\n\nget the Cart id & ETag value"
      },
      {
        "content": "Select the method as POST\nEnter Etag and x-patron-account-id-claim (header - PatronID) detail\nRun Create Agreement API\n\n{{base_url}}/api/v2/carts/{{cartId}}/agreements\n\n{\n\"createAgreement\": {\n\"postSignRedirectUrl\": \"https://ph31mldvapppvn10.back.tickets.com:18443\",\n\"applyCredit\": true\n}\n}",
        "expected": "Verify below values displayed as expected in Response\n-provider\n-agreementUrl\n-orderId\n-externalId\n\nget the ETag value"
      },
      {
        "content": "Allow the session to expire by waiting for the duration async.signature.cancel.agreements.enabled is set (90 Mins by default)",
        "expected": "The session should expire\n\n"
      },
      {
        "content": "Verify the signature_agreement table is updated on the DB for the order\n\n",
        "expected": "Verify the signature_agreement table is updated on the DB for the order\n\nVerify SIG_AGMT_STS_TYPE_CODE displays \"CN\" for the order"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 31249838,
    "title": "Renewals Multiple Reservation transaction with renewal category: Optional & Credit Consumption:Full-Optional (account credit covers the whole order amount) and Pay in full e-sign flag set to true",
    "section_id": 1754116,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 399,
    "created_on": 1692243522,
    "updated_by": 333,
    "updated_on": 1729803462,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 1,
    "custom_is_automated": true,
    "custom_pv_category": 2,
    "custom_refs": null,
    "custom_preconds": "-Create a Renewal group (renewal category: optional & Consume Credit During Online Renewal Full Optional)\r\n-Create a package/associate an existing package with above Renewal Group\r\n-Create a Signature Template\r\n-Create a Payment plan with Signature Template selected and Require Signature Even if Order Paid in Full checked\r\n-Provide consolidate receivable permissions\r\n-Create patron with credit (Credit amount should be more than the reservations transaction amount)\r\n-Complete 2 Package reservation transactions for the above patron",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Precondition 1:\nCreate a Renewal group (renewal category: optional & Consume Credit During Online Renewal Full Optional)\n-Login to PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Event Groups\n-Select Renewal Group from \"Event Group Type\"\n-Click New button\n-Enter the Mandatory fields\nSelect renewal category \"optional\" & Consume Credit During Online Renewal \"Full-Optional\"\n-Click Save button",
        "expected": "New Renewal Group created successfully"
      },
      {
        "content": "\t\nPrecondition 2:\nCreate a new Package or associate an existing Package with above Renewal Group\n-Login to PV application\n-Navigate to Package Administration\n-Search existing package\n-Assign the above Renewal Group(Renewal Group created in Precondition1)",
        "expected": "Package created successfully & associated with Renewal Group"
      },
      {
        "content": "Precondition 3:\nCreate a Signature Template with application property online.renewals.esignatures.setup.enabled set to True \n-Login to PV application\n-Navigate to System Setup\n-Select the Organization from Organization Administration\n-Navigate to Configuration tab\n-Choose Signature Template from the Select Configuration dropwdown\n-Click New button\n-Enter the Mandatory fields\n-Click Save button",
        "expected": "New Signature Template created successfully"
      },
      {
        "content": "Precondition 4:\nCreate a Payment plan\n-Login PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Payment Plans\n-Click New button\n-Enter the Mandatory fields\nselect Use Scheduled Payments \"Required\"\n_Enter the (No Of Installments/Fixed Start Date & Fixed Installment Period)- 6 Installments \n-Click Setup Installments button\n-Choose Signature Template from the dropdown \n-Check Require Signature Even if Order Paid in Full checkbox\n-Click Save button\n\nAssociate new payment plan with the package above",
        "expected": "Payment plan created successfully"
      },
      {
        "content": "Precondition 5:\nProvide consolidate receivable permissions\n-Login to PV application\n-Navigate to System Setup\n-Select the Organization from Organization Administration\n- Navigate to Access Permissions tab \n- Choose Open Item Receivable Type from Category dropdown\n- Click the Find button \n- Provide logged in user and MUM_MYTIXX user consolidate permission for the MLBGRPREC receivable\n- Apply Chenages \n- Logout from PV ",
        "expected": "Consolidate receivable permissions provided to MUM_MYTIXX user and the logged in user "
      },
      {
        "content": "Precondition 6\n\nCreate patron with credit\n-Login to PV application\n-Navigate to Patron Management\n-Search & select the MPV patron\n-Navigate to Balance\n-Click Add Credit button\n-Enter the Mandatory fields(Supplier, Credit source ,Credit type & Amount) and click ok button\n-Application will Navigate to Payment Page\n-Click Accept Payment & click checkout\n\nNote: To complete the sale with credit card payment, patron should provide digitalWalletItem id in checkout API request\nFollow below steps if patron don't have a digitalWalletItem id\n-Login PV application\n-Navigate to Patron Management\n-Search & select the MPV patron\n-Navigate to wallet\n-Select Payment type \"Credit card\"\n-Click new\n-Enter the mandatory fields\n(Card Type/Card/Name on Card/Exp.Date)\n-Check Default\n-Click Save button",
        "expected": "Account credit created for patron\n\nNote: Credit amount should more than the reservation transaction amount"
      },
      {
        "content": "Precondition 7:\n-Complete 2 Package reservation transactions for (Precondition 2)package with (Precondition 6)patron",
        "expected": "Package reservations transaction completed successfully"
      },
      {
        "content": "Launch Postman tool\nSelect the method as GET\nEnter Authorization and Header details\nRun Get Renewal Order Group v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/patrons/37714/renewalOrderGroups?renewalOrderCategory=ALL_UNASSIGNED_ORDERS",
        "expected": "verify Renewal Group & categories displayed as expected in Response\n\n"
      },
      {
        "content": "\t\nSelect the method as GET\nRun Get Renewal Order v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/patrons/38184/renewalOrders?renewalOrderCategory=ALL_UNASSIGNED_ORDERS",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-Total Amount\n-Renew together type\n-Consume Credit Value"
      },
      {
        "content": "\t\nSelect the method as POST\nRun Create Cart v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/carts/renew\n\n{\n    \"renewalCartRequest\": {\n        \"renewalGroupId\": \"1061\",\n        \"patronAccount\": {\n            \"id\": 38961\n        },\n        \"renewalOrders\": [\n            {\n                \"payPastDueAmountOnly\": false,\n                \"optInScheduledPayments\": true,\n                \"order\": {\n                    \"id\": 14666002\n                },\n                \"paymentPlan\": {\n                    \"id\": 2641\n                }\n            },\n            {\n                \"payPastDueAmountOnly\": false,\n                \"optInScheduledPayments\": true,\n                \"order\": {\n                    \"id\": 14666003\n                },\n                \"paymentPlan\": {\n                    \"id\": 2641\n                }\n            }\n        ]\n    }\n}",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-Total Amount\n-Renew together type\n-Consume Credit Value\n-orderInstallmentsSummaries\n-dueAmount\n-dueDate\n\nget the Cart id & ETag value"
      },
      {
        "content": "Select the method as POST\nEnter Etag and x-patron-account-id-claim (header - PatronID) detail\nRun Create Agreement API\n\n{{base_url}}/api/v2/carts/{{cartId}}/agreements\n\n{\n    \"createAgreement\": {\n        \"postSignRedirectUrl\": \"https://ph31mldvapppvn10.back.tickets.com:18443\",\n        \"applyCredit\": true\n    }\n}",
        "expected": "Verify below values displayed as expected in Response\n-provider\n-agreementUrl\n-orderId\n-externalId\n\nget the  ETag value"
      },
      {
        "content": "Get the cartId & ETag value from Create Cart response (Step 11 response) and Create Agreement response (Step 12 response)\nEnter the ETag value in header \"If-Match\" before running checkout API\n\nRun Checkout v2 API\n{{base_url}}/api/v2/carts/{{cartId}}/checkout/renewal\n\n\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/carts/344496119/checkout/renewal\n\n{\n    \"cart\": {\n        \"id\": {{cartId}},\n        \"creditToApply\": {\n            \"value\": \"00.00\",\n            \"currencyCode\": \"USD\"\n        },\n        \"orderInstallmentsSummaries\": [\n            {\n                \"order\": {\n                    \"id\": 14666002\n                },\n                \"paymentPlan\": {\n                    \"id\": {{paymentPlanID}}\n                },\n                \"installments\": [\n                  {\n                        \"installmentDate\": \"{{InstallmentDate1}}\",\n                        \"scheduledPayments\": [\n                            {\n                                \"amount\": {\n                                    \"value\": {{InstallmentAmount1}},\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"digitalWalletItem\": {\n                                    \"id\": {{digitalWalletItemId}}\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        \"installmentDate\": \"{{InstallmentDate2}}\",\n                        \"scheduledPayments\": [\n                            {\n                                \"amount\": {\n                                    \"value\": {{InstallmentAmount2}},\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"digitalWalletItem\": {\n                                    \"id\": {{digitalWalletItemId}}\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        \"installmentDate\": \"{{InstallmentDate3}}\",\n                        \"scheduledPayments\": [\n                            {\n                                \"amount\": {\n                                    \"value\": {{InstallmentAmount3}},\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"digitalWalletItem\": {\n                                    \"id\": {{digitalWalletItemId}}\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        \"installmentDate\": \"{{InstallmentDate4}}\",\n                        \"scheduledPayments\": [\n                            {\n                                \"amount\": {\n                                    \"value\": {{InstallmentAmount4}},\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"digitalWalletItem\": {\n                                    \"id\": {{digitalWalletItemId}}\n                                }\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                \"order\": {\n                    \"id\": 14666003\n                },\n                \"paymentPlan\": {\n                    \"id\": {{paymentPlanID}}\n                },\n                \"installments\": [\n                  {\n                        \"installmentDate\": \"{{InstallmentDate1}}\",\n                        \"scheduledPayments\": [\n                            {\n                                \"amount\": {\n                                    \"value\": 13732.00,\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"digitalWalletItem\": {\n                                    \"id\": {{digitalWalletItemId}}\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        \"installmentDate\": \"{{InstallmentDate2}}\",\n                        \"scheduledPayments\": [\n                            {\n                                \"amount\": {\n                                    \"value\": 13732.00,\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"digitalWalletItem\": {\n                                    \"id\": {{digitalWalletItemId}}\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        \"installmentDate\": \"{{InstallmentDate3}}\",\n                        \"scheduledPayments\": [\n                            {\n                                \"amount\": {\n                                    \"value\": 13732.00,\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"digitalWalletItem\": {\n                                    \"id\": {{digitalWalletItemId}}\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        \"installmentDate\": \"{{InstallmentDate4}}\",\n                        \"scheduledPayments\": [\n                            {\n                                \"amount\": {\n                                    \"value\": 13732.00,\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"digitalWalletItem\": {\n                                    \"id\": {{digitalWalletItemId}}\n                                }\n                            }\n                        ]\n                    }\n                ]\n            }\n        ],\n        \"transactionPatronAccount\": {\n            \"id\": \"38961\",\n            \"matchLastName\": \"Luo\"\n        }\n    }\n}",
        "expected": "Cart checkout should complete successfully\nVerify below values displayed as expected in Response\n-CreditsApplied Amount\n-orderInstallmentsSummaries\n-AppliedCreditAmount\n-dueAmount\n-dueDate"
      },
      {
        "content": "Verify the signature_agreement table is updated on the DB for the orders  ",
        "expected": "Verify the signature_agreement table is updated on the DB for both the orders\n\nVerify SIG_AGMT_STS_TYPE_CODE displays \"SN\" for the orders"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 31249931,
    "title": "Renewals  Single Reservation transaction with renewal category: Optional & Credit Consumption :Full-Optional (account credit covers partial order amount) and Pay in full e-sign flag set to true",
    "section_id": 1754116,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 399,
    "created_on": 1692244009,
    "updated_by": 333,
    "updated_on": 1729803462,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 2,
    "custom_is_automated": true,
    "custom_pv_category": 2,
    "custom_refs": null,
    "custom_preconds": "-Create a Renewal group (renewal category: optional & Consume Credit During Online Renewal Full Optional)\r\n-Create a package/associate an existing package with above Renewal Group\r\n-Create a Signature Template\r\n-Create a Payment plan with Signature Template selected and Require Signature Even if Order Paid in Full checked\r\n-Provide consolidate receivable permissions\r\n-Create patron with credit (Credit amount should be less than the reservations transaction amount)\r\n-Complete 1 Package reservation transactions for the above patron",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Precondition 1:\nCreate a Renewal group (renewal category: optional & Consume Credit During Online Renewal Full Optional)\n-Login to PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Event Groups\n-Select Renewal Group from \"Event Group Type\"\n-Click New button\n-Enter the Mandatory fields\nSelect renewal category \"optional\" & Consume Credit During Online Renewal \"Full-Optional\"\n-Click Save button",
        "expected": "New Renewal Group created successfully"
      },
      {
        "content": "Precondition 2:\nCreate a new Package or associate an existing Package with above Renewal Group\n-Login to PV application\n-Navigate to Package Administration\n-Search existing package\n-Assign the above Renewal Group(Renewal Group created in Precondition1)",
        "expected": "Package created successfully & associated with Renewal Group"
      },
      {
        "content": "Precondition 3:\nCreate a Signature Template with application property online.renewals.esignatures.setup.enabled set to True \n-Login to PV application\n-Navigate to System Setup\n-Select the Organization from Organization Administration\n-Navigate to Configuration tab\n-Choose Signature Template from the Select Configuration dropwdown\n-Click New button\n-Enter the Mandatory fields\n-Click Save button",
        "expected": "New Signature Template created successfully"
      },
      {
        "content": "Precondition 4:\nCreate a Payment plan\n-Login PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Payment Plans\n-Click New button\n-Enter the Mandatory fields\nselect Use Scheduled Payments \"Required\"\n_Enter the (No Of Installments/Fixed Start Date & Fixed Installment Period)- 50-50 payment plan \n-Click Setup Installments button\n-Choose Signature Template from the dropdown \n-Check Require Signature Even if Order Paid in Full checkbox\n-Click Save button\n\nAssociate new payment plan with the package above",
        "expected": "Payment plan created successfully"
      },
      {
        "content": "Precondition 5:\nProvide consolidate receivable permissions\n-Login to PV application\n-Navigate to System Setup\n-Select the Organization from Organization Administration\n- Navigate to Access Permissions tab \n- Choose Open Item Receivable Type from Category dropdown\n- Click the Find button \n- Provide logged in user and MUM_MYTIXX user consolidate permission for the MLBGRPREC receivable\n- Apply Chenages \n- Logout from PV ",
        "expected": "Consolidate receivable permissions provided to MUM_MYTIXX user and the logged in user "
      },
      {
        "content": "Precondition 6\n\nCreate patron with credit\n-Login to PV application\n-Navigate to Patron Management\n-Search & select the MPV patron\n-Navigate to Balance\n-Click Add Credit button\n-Enter the Mandatory fields(Supplier, Credit source ,Credit type & Amount) and click ok button\n-Application will Navigate to Payment Page\n-Click Accept Payment & click checkout\n\nNote: To complete the sale with credit card payment, patron should provide digitalWalletItem id in checkout API request\nFollow below steps if patron don't have a digitalWalletItem id\n-Login PV application\n-Navigate to Patron Management\n-Search & select the MPV patron\n-Navigate to wallet\n-Select Payment type \"Credit card\"\n-Click new\n-Enter the mandatory fields\n(Card Type/Card/Name on Card/Exp.Date)\n-Check Default\n-Click Save button",
        "expected": "Account credit created for patron\n\nNote: Credit amount should less than the reservation transaction amount"
      },
      {
        "content": "Precondition 7:\n-Complete a Package reservation transactions for (Precondition 2)package with (Precondition 6)patron",
        "expected": "Package reservation transaction completed successfully"
      },
      {
        "content": "Launch Postman tool\nSelect the method as GET\nEnter Authorization and Header details\nRun Get Renewal Order Group v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/patrons/37714/renewalOrderGroups?renewalOrderCategory=ALL_UNASSIGNED_ORDERS",
        "expected": "Verify Renewal Group & categories displayed as expected in Response\n\n"
      },
      {
        "content": "\t\nLaunch Postman tool\nSelect the method as GET\nEnter Authorization and Header details\nRun Get Renewal Order Group v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/patrons/37714/renewalOrderGroups?renewalOrderCategory=ALL_UNASSIGNED_ORDERS",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-Total Amount\n-Renew together type\n-Consume Credit Value"
      },
      {
        "content": "Select the method as POST\nRun Create Cart v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/carts/renew\n{\n    \"renewalCartRequest\": {\n        \"renewalGroupId\": \"1061\",\n        \"patronAccount\": {\n            \"id\": 38961\n        },\n        \"renewalOrders\": [\n            {\n                \"payPastDueAmountOnly\": false,\n                \"optInScheduledPayments\": true,\n                \"order\": {\n                    \"id\": 14666004\n                },\n                \"paymentPlan\": {\n                    \"id\": 2641\n                }\n            }\n        ]\n    }\n}",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-Total Amount\n-Renew together type\n-Consume Credit Value\n-orderInstallmentsSummaries\n-dueAmount\n-dueDate\n\nget the Cart id & ETag value "
      },
      {
        "content": "Select the method as POST\nEnter Etag and x-patron-account-id-claim (header - PatronID) detail\nRun Create Agreement API\n\n{{base_url}}/api/v2/carts/{{cartId}}/agreements\n\n{\n\"createAgreement\": {\n\"postSignRedirectUrl\": \"https://ph31mldvapppvn10.back.tickets.com:18443\",\n\"applyCredit\": true\n}\n}",
        "expected": "Verify below values displayed as expected in Response\n-provider\n-agreementUrl\n-orderId\n-externalId\n\nget the ETag value"
      },
      {
        "content": "Get the cartId & ETag value from Create Cart response (Step 11 response) and Create Agreement response (Step 12 response)\nEnter the ETag value in header \"If-Match\" before running checkout API\n\nRun Checkout v2 API\n{{base_url}}/api/v2/carts/{{cartId}}/checkout/renewal\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/carts/344496119/checkout/renewal\n\n{\n    \"cart\": {\n        \"id\": {{cartId}},\n        \"creditToApply\": {\n            \"value\": \"00.00\",\n            \"currencyCode\": \"USD\"\n        },\n        \"orderInstallmentsSummaries\": [\n            {\n                \"order\": {\n                    \"id\": 14666002\n                },\n                \"paymentPlan\": {\n                    \"id\": {{paymentPlanID}}\n                },\n                \"installments\": [\n                  {\n                        \"installmentDate\": \"{{InstallmentDate1}}\",\n                        \"scheduledPayments\": [\n                            {\n                                \"amount\": {\n                                    \"value\": {{InstallmentAmount1}},\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"digitalWalletItem\": {\n                                    \"id\": {{digitalWalletItemId}}\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        \"installmentDate\": \"{{InstallmentDate2}}\",\n                        \"scheduledPayments\": [\n                            {\n                                \"amount\": {\n                                    \"value\": {{InstallmentAmount2}},\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"digitalWalletItem\": {\n                                    \"id\": {{digitalWalletItemId}}\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        \"installmentDate\": \"{{InstallmentDate3}}\",\n                        \"scheduledPayments\": [\n                            {\n                                \"amount\": {\n                                    \"value\": {{InstallmentAmount3}},\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"digitalWalletItem\": {\n                                    \"id\": {{digitalWalletItemId}}\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        \"installmentDate\": \"{{InstallmentDate4}}\",\n                        \"scheduledPayments\": [\n                            {\n                                \"amount\": {\n                                    \"value\": {{InstallmentAmount4}},\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"digitalWalletItem\": {\n                                    \"id\": {{digitalWalletItemId}}\n                                }\n                            }\n                        ]\n                    }\n                ]\n            }\n        ],\n        \"transactionPatronAccount\": {\n            \"id\": \"38961\",\n            \"matchLastName\": \"Luo\"\n        }\n    }\n}",
        "expected": "Cart checkout should complete successfully\nVerify below values displayed as expected in Response\n-CreditsApplied Amount\n-orderInstallmentsSummaries\n-AppliedCreditAmount\n-dueAmount\n-dueDate"
      },
      {
        "content": "Verify the signature_agreement table is updated on the DB for the order\n\n",
        "expected": "Verify SIG_AGMT_STS_TYPE_CODE displays \"SN\" for the order"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 31249939,
    "title": "Renewals  Single Receivable transaction with renewal category: Optional & Credit Consumption :Full-Auto (account credit covers partial order amount) and Pay in full e-sign flag set to true",
    "section_id": 1754116,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 399,
    "created_on": 1692244526,
    "updated_by": 333,
    "updated_on": 1729803462,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 3,
    "custom_is_automated": true,
    "custom_pv_category": 2,
    "custom_refs": null,
    "custom_preconds": "-Create a Renewal group (renewal category: optional & Consume Credit During Online Renewal Full Optional)\r\n-Create a package/associate an existing package with above Renewal Group\r\n-Create a Signature Template\r\n-Create a Payment plan with Signature Template selected and Require Signature Even if Order Paid in Full checked\r\n-Provide consolidate receivable permissions\r\n-Create patron with credit (Credit amount should be less than the receivable transaction amount)\r\n-Complete 1 Package receivable transaction for the above patron",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Precondition 1:\nCreate a Renewal group (renewal category: optional & Consume Credit During Online Renewal Full Optional)\n-Login to PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Event Groups\n-Select Renewal Group from \"Event Group Type\"\n-Click New button\n-Enter the Mandatory fields\nSelect renewal category \"optional\" & Consume Credit During Online Renewal \"Full-Optional\"\n-Click Save button",
        "expected": "New Renewal Group created successfully"
      },
      {
        "content": "\t\nPrecondition 2:\nCreate a new Package or associate an existing Package with above Renewal Group\n-Login to PV application\n-Navigate to Package Administration\n-Search existing package\n-Assign the above Renewal Group(Renewal Group created in Precondition1)",
        "expected": "Package created successfully & associated with Renewal Group"
      },
      {
        "content": "Precondition 3:\nCreate a Signature Template with application property online.renewals.esignatures.setup.enabled set to True \n-Login to PV application\n-Navigate to System Setup\n-Select the Organization from Organization Administration\n-Navigate to Configuration tab\n-Choose Signature Template from the Select Configuration dropwdown\n-Click New button\n-Enter the Mandatory fields\n-Click Save button",
        "expected": "New Signature Template created successfully"
      },
      {
        "content": "Precondition 4:\nCreate a Payment plan\n-Login PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Payment Plans\n-Click New button\n-Enter the Mandatory fields\nselect Use Scheduled Payments \"Optional\"\n_Enter the (No Of Installments/Fixed Start Date & Fixed Installment Period)- 50-50 payment plan \n-Click Setup Installments button\n-Choose Signature Template from the dropdown \n-Check Require Signature Even if Order Paid in Full checkbox\n-Click Save button\n\nAssociate new payment plan with the package above",
        "expected": "Payment plan created successfully"
      },
      {
        "content": "Precondition 5:\nProvide consolidate receivable permissions\n-Login to PV application\n-Navigate to System Setup\n-Select the Organization from Organization Administration\n- Navigate to Access Permissions tab \n- Choose Open Item Receivable Type from Category dropdown\n- Click the Find button \n- Provide logged in user and MUM_MYTIXX user consolidate permission for the MLBGRPREC receivable\n- Apply Chenages \n- Logout from PV ",
        "expected": "Consolidate receivable permissions provided to MUM_MYTIXX user and the logged in user "
      },
      {
        "content": "Precondition 6\nCreate patron with credit\n-Login to PV application\n-Navigate to Patron Management\n-Search & select the MPV patron\n-Navigate to Balance\n-Click Add Credit button\n-Enter the Mandatory fields(Supplier, Credit source ,Credit type & Amount) and click ok button\n-Application will Navigate to Payment Page\n-Click Accept Payment & click checkout\n\nNote: To complete the sale with credit card payment, patron should provide digitalWalletItem id in checkout API request\nFollow below steps if patron don't have a digitalWalletItem id\n-Login PV application\n-Navigate to Patron Management\n-Search & select the MPV patron\n-Navigate to wallet\n-Select Payment type \"Credit card\"\n-Click new\n-Enter the mandatory fields\n(Card Type/Card/Name on Card/Exp.Date)\n-Check Default\n-Click Save button",
        "expected": "Account credit created for patron\n\nNote:Credit amount should less than the receivable transaction amount"
      },
      {
        "content": "Precondition 7:\n-Complete a Package receivable transactions for (Precondition 2)package with (Precondition 6)patron using the payment plan defined above ",
        "expected": "Package receivable transaction completed successfully"
      },
      {
        "content": "\t\nLaunch Postman tool\nSelect the method as GET\nEnter Authorization and Header details\nRun Get Renewal Order Group v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/patrons/37714/renewalOrderGroups?renewalOrderCategory=ALL_UNASSIGNED_ORDERS",
        "expected": "Verify Renewal Group & categories displayed as expected in Response\n\n"
      },
      {
        "content": "Launch Postman tool\nSelect the method as GET\nEnter Authorization and Header details\nRun Get Renewal Order Group v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/patrons/37714/renewalOrderGroups?renewalOrderCategory=ALL_UNASSIGNED_ORDERS",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-Total Amount\n-Renew together type\n-Consume Credit Value"
      },
      {
        "content": "Select the method as POST\nRun Create Cart v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/carts/renew\n{\n\"renewalCartRequest\": {\n\"renewalGroupId\": \"1061\",\n\"patronAccount\": {\n\"id\": 38961\n},\n\"renewalOrders\": [\n{\n\"payPastDueAmountOnly\": false,\n\"optInScheduledPayments\": true,\n\"order\": {\n\"id\": 14666004\n},\n\"paymentPlan\": {\n\"id\": 2641\n}\n}\n]\n}\n}",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-Total Amount\n-Renew together type\n-Consume Credit Value\n-orderInstallmentsSummaries\n-dueAmount\n-dueDate\n\nget the Cart id & ETag value"
      },
      {
        "content": "Select the method as POST\nEnter Etag and x-patron-account-id-claim (header - PatronID) detail\nRun Create Agreement API\n\n{{base_url}}/api/v2/carts/{{cartId}}/agreements\n\n{\n\"createAgreement\": {\n\"postSignRedirectUrl\": \"https://ph31mldvapppvn10.back.tickets.com:18443\",\n\"applyCredit\": true\n}\n}",
        "expected": "Verify below values displayed as expected in Response\n-provider\n-agreementUrl\n-orderId\n-externalId\n\nget the ETag value"
      },
      {
        "content": "Get the cartId & ETag value from Create Cart response (Step 11 response) and Create Agreement response (Step 12 response)\nEnter the ETag value in header \"If-Match\" before running checkout API\n\nRun Checkout v2 API\n{{base_url}}/api/v2/carts/{{cartId}}/checkout/renewal\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/carts/344496119/checkout/renewal\n\n{\n\"cart\": {\n\"id\": {{cartId}},\n\"creditToApply\": {\n\"value\": \"00.00\",\n\"currencyCode\": \"USD\"\n},\n\"orderInstallmentsSummaries\": [\n{\n\"order\": {\n\"id\": 14666002\n},\n\"paymentPlan\": {\n\"id\": {{paymentPlanID}}\n},\n\"installments\": [\n{\n\"installmentDate\": \"{{InstallmentDate1}}\",\n\"scheduledPayments\": [\n{\n\"amount\": {\n\"value\": {{InstallmentAmount1}},\n\"currencyCode\": \"USD\"\n},\n\"digitalWalletItem\": {\n\"id\": {{digitalWalletItemId}}\n}\n}\n]\n},\n{\n\"installmentDate\": \"{{InstallmentDate2}}\",\n\"scheduledPayments\": [\n{\n\"amount\": {\n\"value\": {{InstallmentAmount2}},\n\"currencyCode\": \"USD\"\n},\n\"digitalWalletItem\": {\n\"id\": {{digitalWalletItemId}}\n}\n}\n]\n},\n{\n\"installmentDate\": \"{{InstallmentDate3}}\",\n\"scheduledPayments\": [\n{\n\"amount\": {\n\"value\": {{InstallmentAmount3}},\n\"currencyCode\": \"USD\"\n},\n\"digitalWalletItem\": {\n\"id\": {{digitalWalletItemId}}\n}\n}\n]\n},\n{\n\"installmentDate\": \"{{InstallmentDate4}}\",\n\"scheduledPayments\": [\n{\n\"amount\": {\n\"value\": {{InstallmentAmount4}},\n\"currencyCode\": \"USD\"\n},\n\"digitalWalletItem\": {\n\"id\": {{digitalWalletItemId}}\n}\n}\n]\n}\n]\n}\n],\n\"transactionPatronAccount\": {\n\"id\": \"38961\",\n\"matchLastName\": \"Luo\"\n}\n}\n}",
        "expected": "Cart checkout should complete successfully\nVerify below values displayed as expected in Response\n-CreditsApplied Amount\n-orderInstallmentsSummaries\n-AppliedCreditAmount\n-dueAmount\n-dueDate"
      },
      {
        "content": "Verify the signature_agreement table is updated on the DB for the order\n\n",
        "expected": "Verify the signature_agreement table is updated on the DB for the order\n\nVerify SIG_AGMT_STS_TYPE_CODE displays \"SN\" for the order"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 31249941,
    "title": "Renewals  Multiple Reservation transaction with renewal category: Required & Credit Consumption: Full-Auto (account credit covers complete order amount) and Pay in full e-sign flag set to true",
    "section_id": 1754116,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 399,
    "created_on": 1692246331,
    "updated_by": 333,
    "updated_on": 1729803462,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 4,
    "custom_is_automated": true,
    "custom_pv_category": 2,
    "custom_refs": null,
    "custom_preconds": "-Create a Renewal group (renewal category: Required & Consume Credit During Online Renewal Full Auto)\r\n-Create a package/associate an existing package with above Renewal Group\r\n-Create a Signature Template\r\n-Create a Payment plan with Signature Template selected and Require Signature Even if Order Paid in Full checked\r\n-Provide consolidate receivable permissions\r\n-Create patron with credit (Credit amount should be more than the reservations transaction amount)\r\n-Complete 2 Package reservation transactions for the above patron",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Precondition 1:\nCreate a Renewal group (renewal category: Required & Consume Credit During Online Renewal Full Auto)\n-Login to PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Event Groups\n-Select Renewal Group from \"Event Group Type\"\n-Click New button\n-Enter the Mandatory fields\nSelect renewal category \"Required\" & Consume Credit During Online Renewal \"Full-Auto\"\n-Click Save button",
        "expected": "New Renewal Group created successfully"
      },
      {
        "content": "Precondition 2:\nCreate a new Package or associate an existing Package with above Renewal Group\n-Login to PV application\n-Navigate to Package Administration\n-Search existing package\n-Assign the above Renewal Group(Renewal Group created in Precondition1)",
        "expected": "Package created successfully & associated with Renewal Group"
      },
      {
        "content": "Precondition 3:\nCreate a Signature Template with application property online.renewals.esignatures.setup.enabled set to True \n-Login to PV application\n-Navigate to System Setup\n-Select the Organization from Organization Administration\n-Navigate to Configuration tab\n-Choose Signature Template from the Select Configuration dropwdown\n-Click New button\n-Enter the Mandatory fields\n-Click Save button",
        "expected": "New Signature Template created successfully"
      },
      {
        "content": "Precondition 4:\nCreate a Payment plan\n-Login PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Payment Plans\n-Click New button\n-Enter the Mandatory fields\nselect Use Scheduled Payments \"Required\"\n_Enter the (No Of Installments/Fixed Start Date & Fixed Installment Period)-single installment of 100% with installment due immediately\n-Click Setup Installments button\n-Choose Signature Template from the dropdown \n-Check Require Signature Even if Order Paid in Full checkbox\n-Click Save button\n\nAssociate new payment plan with the package above",
        "expected": "Payment plan created successfully"
      },
      {
        "content": "Precondition 5:\nProvide consolidate receivable permissions\n-Login to PV application\n-Navigate to System Setup\n-Select the Organization from Organization Administration\n- Navigate to Access Permissions tab \n- Choose Open Item Receivable Type from Category dropdown\n- Click the Find button \n- Provide logged in user and MUM_MYTIXX user consolidate permission for the MLBGRPREC receivable\n- Apply Chenages \n- Logout from PV ",
        "expected": "Consolidate receivable permissions provided to MUM_MYTIXX user and the logged in user "
      },
      {
        "content": "Precondition 6\n\nCreate patron with credit\n-Login to PV application\n-Navigate to Patron Management\n-Search & select the MPV patron\n-Navigate to Balance\n-Click Add Credit button\n-Enter the Mandatory fields(Supplier, Credit source ,Credit type & Amount) and click ok button\n-Application will Navigate to Payment Page\n-Click Accept Payment & click checkout\n\nNote: To complete the sale with credit card payment, patron should provide digitalWalletItem id in checkout API request\nFollow below steps if patron don't have a digitalWalletItem id\n-Login PV application\n-Navigate to Patron Management\n-Search & select the MPV patron\n-Navigate to wallet\n-Select Payment type \"Credit card\"\n-Click new\n-Enter the mandatory fields\n(Card Type/Card/Name on Card/Exp.Date)\n-Check Default\n-Click Save button",
        "expected": "Account credit created for patron\n\nNote: Credit amount should be more than the reservation transaction amount"
      },
      {
        "content": "Precondition 7:\n-Complete two Package reservation transactions for (Precondition 2)package with (Precondition 6)patron",
        "expected": "Package reservation transactions completed successfully"
      },
      {
        "content": "\t\nLaunch Postman tool\nSelect the method as GET\nEnter Authorization and Header details\nRun Get Renewal Order Group v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/patrons/37714/renewalOrderGroups?renewalOrderCategory=ALL_UNASSIGNED_ORDERS",
        "expected": "Verify Renewal Group & categories displayed as expected in Response\n\n"
      },
      {
        "content": "Select the method as GET\nRun Get Renewal Order v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/patrons/38184/renewalOrders?renewalOrderCategory=ALL_UNASSIGNED_ORDERS",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-Total Amount\n-Renew together type\n-Consume Credit Value"
      },
      {
        "content": "Select the method as POST\nRun Create Cart v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/carts/renew\n\n{\n\"renewalCartRequest\": {\n\"renewalGroupId\": \"1061\",\n\"patronAccount\": {\n\"id\": 38961\n},\n\"renewalOrders\": [\n{\n\"payPastDueAmountOnly\": false,\n\"optInScheduledPayments\": true,\n\"order\": {\n\"id\": 14666002\n},\n\"paymentPlan\": {\n\"id\": 2641\n}\n},\n{\n\"payPastDueAmountOnly\": false,\n\"optInScheduledPayments\": true,\n\"order\": {\n\"id\": 14666003\n},\n\"paymentPlan\": {\n\"id\": 2641\n}\n}\n]\n}\n}",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-Total Amount\n-Renew together type\n-Consume Credit Value\n-orderInstallmentsSummaries\n-dueAmount\n-dueDate\n\nget the Cart id & ETag value"
      },
      {
        "content": "Select the method as POST\nEnter Etag and x-patron-account-id-claim (header - PatronID) detail\nRun Create Agreement API\n\n{{base_url}}/api/v2/carts/{{cartId}}/agreements\n\n{\n\"createAgreement\": {\n\"postSignRedirectUrl\": \"https://ph31mldvapppvn10.back.tickets.com:18443\",\n\"applyCredit\": true\n}\n}",
        "expected": "Verify below values displayed as expected in Response\n-provider\n-agreementUrl\n-orderId\n-externalId\n\nget the ETag value"
      },
      {
        "content": "Get the cartId & ETag value from Create Cart response (Step 11 response) and Create Agreement response (Step 12 response)\nEnter the ETag value in header \"If-Match\" before running checkout API\n\nRun Checkout v2 API\n{{base_url}}/api/v2/carts/{{cartId}}/checkout/renewal\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/carts/344496119/checkout/renewal\n\n{\n\"cart\": {\n\"id\": {{cartId}},\n\"creditToApply\": {\n\"value\": \"00.00\",\n\"currencyCode\": \"USD\"\n},\n\"orderInstallmentsSummaries\": [\n{\n\"order\": {\n\"id\": 14666002\n},\n\"paymentPlan\": {\n\"id\": {{paymentPlanID}}\n},\n\"installments\": [\n{\n\"installmentDate\": \"{{InstallmentDate1}}\",\n\"scheduledPayments\": [\n{\n\"amount\": {\n\"value\": {{InstallmentAmount1}},\n\"currencyCode\": \"USD\"\n},\n\"digitalWalletItem\": {\n\"id\": {{digitalWalletItemId}}\n}\n}\n]\n},\n{\n\"installmentDate\": \"{{InstallmentDate2}}\",\n\"scheduledPayments\": [\n{\n\"amount\": {\n\"value\": {{InstallmentAmount2}},\n\"currencyCode\": \"USD\"\n},\n\"digitalWalletItem\": {\n\"id\": {{digitalWalletItemId}}\n}\n}\n]\n},\n{\n\"installmentDate\": \"{{InstallmentDate3}}\",\n\"scheduledPayments\": [\n{\n\"amount\": {\n\"value\": {{InstallmentAmount3}},\n\"currencyCode\": \"USD\"\n},\n\"digitalWalletItem\": {\n\"id\": {{digitalWalletItemId}}\n}\n}\n]\n},\n{\n\"installmentDate\": \"{{InstallmentDate4}}\",\n\"scheduledPayments\": [\n{\n\"amount\": {\n\"value\": {{InstallmentAmount4}},\n\"currencyCode\": \"USD\"\n},\n\"digitalWalletItem\": {\n\"id\": {{digitalWalletItemId}}\n}\n}\n]\n}\n]\n},\n{\n\"order\": {\n\"id\": 14666003\n},\n\"paymentPlan\": {\n\"id\": {{paymentPlanID}}\n},\n\"installments\": [\n{\n\"installmentDate\": \"{{InstallmentDate1}}\",\n\"scheduledPayments\": [\n{\n\"amount\": {\n\"value\": 13732.00,\n\"currencyCode\": \"USD\"\n},\n\"digitalWalletItem\": {\n\"id\": {{digitalWalletItemId}}\n}\n}\n]\n},\n{\n\"installmentDate\": \"{{InstallmentDate2}}\",\n\"scheduledPayments\": [\n{\n\"amount\": {\n\"value\": 13732.00,\n\"currencyCode\": \"USD\"\n},\n\"digitalWalletItem\": {\n\"id\": {{digitalWalletItemId}}\n}\n}\n]\n},\n{\n\"installmentDate\": \"{{InstallmentDate3}}\",\n\"scheduledPayments\": [\n{\n\"amount\": {\n\"value\": 13732.00,\n\"currencyCode\": \"USD\"\n},\n\"digitalWalletItem\": {\n\"id\": {{digitalWalletItemId}}\n}\n}\n]\n},\n{\n\"installmentDate\": \"{{InstallmentDate4}}\",\n\"scheduledPayments\": [\n{\n\"amount\": {\n\"value\": 13732.00,\n\"currencyCode\": \"USD\"\n},\n\"digitalWalletItem\": {\n\"id\": {{digitalWalletItemId}}\n}\n}\n]\n}\n]\n}\n],\n\"transactionPatronAccount\": {\n\"id\": \"38961\",\n\"matchLastName\": \"Luo\"\n}\n}\n}",
        "expected": "Cart checkout should complete successfully\nVerify below values displayed as expected in Response\n-CreditsApplied Amount\n-orderInstallmentsSummaries\n-AppliedCreditAmount\n-dueAmount\n-dueDate"
      },
      {
        "content": "Verify the signature_agreement table is updated on the DB for the orders\n\n",
        "expected": "Verify the signature_agreement table is updated on the DB for both the orders\nVerify SIG_AGMT_STS_TYPE_CODE displays \"SN\" for the order"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 32914376,
    "title": "Public Sales Group",
    "section_id": 1874692,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 391,
    "created_on": 1710220454,
    "updated_by": 333,
    "updated_on": 1717783269,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": null,
    "custom_preconds": "-Create a public sale group\r\n-Create a package/associate an existing package with above sales group\r\n-Complete Package sale transactions ",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "\t\nPrecondition 1:\nCreate a new Package or associate an existing Package \n-Login to PV application\n-Navigate to Package Administration\n-Create new package\n",
        "expected": "Package created successfully"
      },
      {
        "content": "Precondition 2:\nCreate a Renewal group (renewal category: optional & Consume Credit During Online Renewal Full Optional)\n-Login to PV application\n-Navigate to Ticketing Setup\n-Select the Sales group Administration\n-Click 'Create New Sales group'\n-Enter the code & description\n-Select \"Public\" Sales group type & click apply changes\n\n-associate the sales group with above package ",
        "expected": "Public sales group created successfully"
      },
      {
        "content": "Launch Postman tool\nSelect the method as GET\nEnter Authorization and Header details\nRun Get Sales Group v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/salesGroups",
        "expected": "Verify below values displayed as expected in Response\n-Sales Group Id\n-SalesGroupType \"Public\"\n-Package Details\n\n"
      },
      {
        "content": "Launch Postman tool\nSelect the method as GET\nEnter Authorization and Header details\nRun Get Sales Group v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/salesGroups/{{sales_group_id}}",
        "expected": "Verify below values displayed as expected in Response\n-Sales Group Id\n-Package Details\n-promotion Type & details"
      },
      {
        "content": "\t\nSelect the method as POST\nRun Create Cart v2 API\n\nhttps://irdvapppvn10.back.tickets.com:18443/api/v2/carts/lock\n\n\n{\n\t\"lockSeats\" : {\n\t\t\"numberOfSeats\": 2,\n                             \"saleType\" : \"SINGLE\",\n                             \"event\": {\"id\": 2986},\n                             \"transactionPatronAccount\" : {\"id\": 11582},\n                           \"buyerTypeSeatsList\" : [\n\t\t\t{\t\t\t\t\n\t\t\t     \"numberOfSeats\" : 2,\n\t\t\t     \"buyerType\" : {\n\t\t\t\t\t\"id\" : 1201\n\t\t\t\t}\n\n\t\t\t}\n\t\t],\n        \"salesGroup\": {\n\t\t\t\"id\": 2243\n            \n\t\t},\n        \"accessible\": false,\n\t\t\n\t\t}\n\t}\n}\n",
        "expected": "Verify below values displayed as expected in Response\n-Cart ID\n-CartBalance\n-Package\n-totalsales revenue\n-Transaction patron account\n\nget the Cart id & ETag value"
      },
      {
        "content": "Get the cartId & ETag value from Create Cart response (Step 5 response) \nEnter the ETag value in header \"If-Match\" before running checkout API\n\nRun Checkout v2 API\n{{base_url}}/api/v2/carts/{{cartId}}/checkout\n\n\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/carts/344496119/checkout\n\n{\n  \"cart\": {\n    \"totalSalesRevenue\": {\n      \"currencyCode\": \"USD\",\n      \"value\": {{totalSalesRevenue}}\n    },\n    \"payments\": [\n      {\n        \"cardExpiration\": \"{{pv_nextYear}}-12\",\n        \"cardNumber\": \"{{pv_cardNumber}}\",\n        \"cardPresent\": false,\n        \"cardSecurityCode\": \"111\",\n        \"cardSwiped\": \"false\",\n        \"externallyAuthorized\": false,\n        \"nameOnCard\": \"Betty Boop\",\n        \"amount\": {\n          \"currencyCode\": \"USD\",\n          \"value\": {{totalSalesRevenue}}\n        },\n        \"paymentMethod\": { \"id\": 7 },\n        \"billingAddress\": {\n          \"address1\": \"766 East Chester Street\",\n          \"address2\": \"11th floor\",\n          \"city\": \"Meridan\",\n          \"countryCode\": \"USA\",\n          \"postalCode\": \"03345\",\n          \"subCountryCode\": \"CT\",\n          \"subCountryName\": \"Connecticut\"\n        }\n      }\n    ],\n    \n\n    \"deliveries\": [\n      {\n        \"cardNumber\": \"{{pv_cardNumber}}\",\n        \"deliveryFirstName\": \"Skye\",\n        \"deliveryLastName\": \"Doolen\",\n        \"instructions1\": \"Leave the reception\",\n        \"instructions2\": \"Call on cell phone\",\n        \"deliveryMethod\": { \"id\": 1 },\n        \"address\": {\n          \"address1\": \"123 Main Street\",\n          \"city\": \"Costa Mesa\",\n          \"countryCode\": \"USA\",\n          \"postalCode\": \"92626\",\n          \"subCountryCode\": \"CA\"\n        },\n        \"person\": {\n          \"firstName\": \"Skye\",\n          \"formattedName\": \"Doolen, Skye\",\n          \"formalSalutation\": \"Mr\",\n          \"informalSalutation\": \"Mr\",\n          \"middleName\": \"J\",\n          \"lastName\": \"Doolen\",\n          \"namePrefix\": {\n            \"code\": \"MR\",\n            \"description\": \"Mister\"\n          }\n        },\n        \"cardType\": { \"code\": \"VISA\" }\n      }\n    ]\n  }\n}",
        "expected": "Cart checkout should complete successfully\nVerify below values displayed as expected in Response\n-salesrevenue\n-trasnactionId\n"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 32936535,
    "title": "Public Sales Group-Negative",
    "section_id": 1874692,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 391,
    "created_on": 1710346605,
    "updated_by": 391,
    "updated_on": 1716329818,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": null,
    "custom_preconds": "-Create a public sale group\r\n-Create a package/associate an existing package with above sales group\r\n",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "\t\nPrecondition 1:\nCreate a new Package or associate an existing Package \n-Login to PV application\n-Navigate to Package Administration\n-Create new package\n",
        "expected": "Package created successfully"
      },
      {
        "content": "Precondition 2:\nCreate a Renewal group (renewal category: optional & Consume Credit During Online Renewal Full Optional)\n-Login to PV application\n-Navigate to Ticketing Setup\n-Select the Sales group Administration\n-Click 'Create New Sales group'\n-Enter the code & description\n-Select \"Public\" Sales group type & click apply changes\n\n-associate the sales group with above package ",
        "expected": "Public sales group created successfully"
      },
      {
        "content": "Launch Postman tool\nSelect the method as GET\nEnter Authorization and Header details\nRun Get Sales Group v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/salesGroups",
        "expected": "Verify below values displayed as expected in Response\n-Sales Group Id\n-SalesGroupType \"Public\"\n-Package Details\n\n"
      },
      {
        "content": "Launch Postman tool\nSelect the method as GET\nEnter Authorization and Header details\nRun Get Sales Group v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/salesGroups/{{sales_group_id}}",
        "expected": "Verify below values displayed as expected in Response\n-Sales Group Id\n-Package Details\n-promotion Type & details"
      },
      {
        "content": "\t\nSelect the method as POST\nRun Create Cart v2 API with invalid sales group id\n\nhttps://irdvapppvn10.back.tickets.com:18443/api/v2/carts/lock\n\n\n{\n\t\"lockSeats\" : {\n\t\t\"numberOfSeats\": 2,\n                             \"saleType\" : \"SINGLE\",\n                             \"event\": {\"id\": 2986},\n                             \"transactionPatronAccount\" : {\"id\": 11582},\n                           \"buyerTypeSeatsList\" : [\n\t\t\t{\t\t\t\t\n\t\t\t     \"numberOfSeats\" : 2,\n\t\t\t     \"buyerType\" : {\n\t\t\t\t\t\"id\" : 1201\n\t\t\t\t}\n\n\t\t\t}\n\t\t],\n        \"salesGroup\": {\n\t\t\t\"id\": 2243\n            \n\t\t},\n        \"accessible\": false,\n\t\t\n\t\t\n\t\t}\n\t}\n}\n",
        "expected": "User unable to lock the card with invalid sales id\n\n\n400 Bad Request response\n"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 32936536,
    "title": "Account Protected Sales Group",
    "section_id": 1874692,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 391,
    "created_on": 1710346636,
    "updated_by": 391,
    "updated_on": 1716329580,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": null,
    "custom_preconds": "-Create a account Protected sale group\r\n-Create a package/associate an existing package with above sales group\r\n-Complete Package sale transactions ",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "\t\nPrecondition 1:\nCreate a new Package or associate an existing Package \n-Login to PV application\n-Navigate to Package Administration\n-Create new package\n",
        "expected": "Package created successfully"
      },
      {
        "content": "Precondition 2:\nCreate account Protected sale group\n-Login to PV application\n-Navigate to Ticketing Setup\n-Select the Sales group Administration\n-Click 'Create New Sales group'\n-Enter the code & description\n-Select \"Account Protected\" Sales group type & click apply changes\n\n-associate the sales group with above package",
        "expected": "Accountcode Protected sale group created successfully"
      },
      {
        "content": "Launch Postman tool\nSelect the method as GET\nEnter Authorization and Header details\nRun Get Sales Group v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/salesGroups",
        "expected": "Verify below values displayed as expected in Response\n-Sales Group Id\n-SalesGroupType \"account code protected\"\n-Package Details\n\n"
      },
      {
        "content": "Launch Postman tool\nSelect the method as GET\nEnter Authorization and Header details\nRun Get Sales Group v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/salesGroups/{{sales_group_id}}",
        "expected": "Verify below values displayed as expected in Response\n-Sales Group Id\n-Package Details\n-promotion Type & details"
      },
      {
        "content": "\t\nSelect the method as POST\nRun Create Cart v2 API\n\nhttps://irdvapppvn10.back.tickets.com:18443/api/v2/carts/lock\n\n\n{\n\t\"lockSeats\" : {\n\t\t\"numberOfSeats\": 2,\n                             \"saleType\" : \"SINGLE\",\n                             \"event\": {\"id\": 2986},\n                             \"transactionPatronAccount\" : {\"id\": 11582},\n                           \"buyerTypeSeatsList\" : [\n\t\t\t{\t\t\t\t\n\t\t\t     \"numberOfSeats\" : 2,\n\t\t\t     \"buyerType\" : {\n\t\t\t\t\t\"id\" : 1201\n\t\t\t\t}\n\n\t\t\t}\n\t\t],\n        \"salesGroup\": {\n\t\t\t\"id\": 2243\n            \n\t\t},\n        \"accessible\": false,\n\t\t\n\t\t\n\t}\n}\n",
        "expected": "Verify below values displayed as expected in Response\n-Cart ID\n-CartBalance\n-Package\n-totalsales revenue\n-Transaction patron account\n\nget the Cart id & ETag value"
      },
      {
        "content": "Get the cartId & ETag value from Create Cart response (Step 5 response) \nEnter the ETag value in header \"If-Match\" before running checkout API\n\nRun Checkout v2 API\n\n{{base_url}}/v2/carts/{{cartId}}/checkout\n\n\n{\n  \"cart\": {\n    \"totalSalesRevenue\": {\n      \"currencyCode\": \"USD\",\n      \"value\": {{totalSalesRevenue}}\n    },\n       \"payments\": [\n      {\n      \"cardExpiration\": \"{{nextYear}}-12\",\n        \"cardNumber\": \"{{cardNumber}}\",\n        \"cardPresent\": false,\n        \"cardSecurityCode\": \"111\",\n        \"cardSwiped\": \"false\",\n        \"externallyAuthorized\": false,\n        \"nameOnCard\": \"Betty Boop\",\n        \"amount\": {\n          \"currencyCode\": \"USD\",\n          \"value\": {{totalSalesRevenue}}\n        },\n        \"paymentMethod\": { \"id\": 7 },\n        \"billingAddress\": {\n          \"address1\": \"766 East Chester Street\",\n          \"address2\": \"11th floor\",\n          \"city\": \"Meridan\",\n          \"countryCode\": \"USA\",\n          \"postalCode\": \"03345\",\n          \"subCountryCode\": \"CT\",\n          \"subCountryName\": \"Connecticut\"\n        }\n      }\n    ],\n    \"deliveries\": [\n      {\n        \"cardNumber\": \"{{cardNumber}}\",\n        \"deliveryFirstName\": \"{{$randomFirstName}}\",\n        \"deliveryLastName\": \"{{$randomLastName}}\",\n        \"instructions1\": \"Leave the reception\",\n        \"instructions2\": \"Call on cell phone\",\n        \"deliveryMethod\": { \"id\": 1 },\n        \"address\": {\n          \"address1\": \"{{$randomStreetAddress}}\",\n          \"city\": \"{{$randomCity}}\",\n          \"countryCode\": \"USA\",\n          \"postalCode\": \"92626\",\n          \"subCountryCode\": \"CA\"\n        },\n        \"person\": {\n          \"firstName\": \"{{$randomFirstName}}\",\n          \"formattedName\": \"{{$randomFullName}}\",\n          \"formalSalutation\": \"Mr\",\n          \"informalSalutation\": \"Mr\",\n          \"middleName\": \"J\",\n          \"lastName\": \"{{$randomLastName}}\",\n          \"namePrefix\": {\n            \"code\": \"MR\",\n            \"description\": \"Mister\"\n          }\n        },\n        \"cardType\": { \"code\": \"VISA\" }\n      }\n    ]\n  }\n}\n\n\n\n",
        "expected": "Cart checkout should complete successfully\nVerify below values displayed as expected in Response\n-CreditsApplied Amount\n-orderInstallmentsSummaries\n-AppliedCreditAmount\n-dueAmount\n-dueDate"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 31015039,
    "title": "MPV flow_sample TestCase _single Reservation transation with renewal category: optional & credit:full-Auto (full amount  paid thru  account credit)",
    "section_id": 1881783,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 391,
    "created_on": 1689629453,
    "updated_by": 333,
    "updated_on": 1729803462,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 1,
    "custom_is_automated": true,
    "custom_pv_category": 43,
    "custom_refs": "C1845963",
    "custom_preconds": "-Create a Renewal group (renewal category: optional & Consume Credit During Online Renewal Full Auto)\r\n-Create a package with above Renewal Group\r\n-Create a Payment plan\r\n-Create patron with credit (Credit amount should more than the reservation transaction amount)\r\n-Complete a Package reservation transaction for above patron\r\n\r\n",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "\t\nPrecondition1:\nCreate a Renewal group (renewal category: optional & Consume Credit During Online Renewal Full Auto)\n-Login PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Event Groups\n-Select Renewal Group from \"Event Group Type\"\n-Click New button\n-Enter the Mandatory fields\nSelect renewal category \"optional\" & Consume Credit During Online Renewal \"Full-Auto\"\n-Click Save button",
        "expected": "New Renewal Group created successfully"
      },
      {
        "content": "Precondition2:\nCreate a new or existing Package with above Renewal Group\n-Login PV application\n-Navigate to Package Administration\n-search existing package\n-Assign the above Renewal Group(Renewal Group created in Precondition1)",
        "expected": "Package created successfully & associate with Renewal Group"
      },
      {
        "content": "Precondition3:\nCreate a Payment plan\n-Login PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Payment Plans\n-Click New button\n-Enter the Mandatory fields\nselect Use Scheduled Payments \"Required\"\n_enter the (No Of Installments/Fixed Start Date & Fixed Installment Period)\n-Click Setup Installments button\n-Click Save button\n\nAssociate new payment plan with above package",
        "expected": "Payment plan created successfully"
      },
      {
        "content": "Precondition4:\nCreate patron with credit\n-Login PV application\n-Navigate to Patron Management\n-Search & select the MPV patron\n-Navigate to Balance\n-Click Add Credit button\n-Enter the Mandatory fields(Supplier, Credit source ,Credit type & Amount) and click ok button\n-Application will Navigate to Payment Page\n-Click Accept Payment & click checkout",
        "expected": "Account credit created for patron\n\nNote:Credit amount should more than the reservation transaction amount"
      },
      {
        "content": "Precondition5:\n-Complete a Package reservation transaction for (Precondition2)package with (Precondition4)patron",
        "expected": "Package reservation transaction completed successfully"
      },
      {
        "content": "Login to My tickets with the patron\n",
        "expected": "Login should be successful\n"
      },
      {
        "content": "Click on \"Renew\" from the left hand menu\nVerify that the Renewal Group API is called\n",
        "expected": "Get Renewal Group API should be called\nThe renew group page should be displayed\n"
      },
      {
        "content": "Verify the UI for renewal group\na. Renewal Tile\nb. Renewal group image if defined\nc. Renwal group public description if defined\nd. Renewal group public synopsis if defined\ne. Renew Button\nf. Also verify primary theme colors\ng. Check for line feeds in public synopsis\n",
        "expected": "The UI should be displayed as expected\nVerify the UI for renewal group\na. Renewal Tile\nb. Renewal group image if defined\nc. Renwal group public description if defined\nd. Renewal group public synopsis if defined\ne. Renew Button\nf. Primary theme colors\ng. Line Feeds should be properly displayed according to Renewal Group API response\n"
      },
      {
        "content": "Click on \"Renew\" button\nVerify that the Get Renewal Orders API is called\n",
        "expected": "Get Renewal Orders API should be called\nThe Order selection page should be displayed\n"
      },
      {
        "content": "Verify the UI of Order Selection Page\na. Renewal Tile\nb. Renwal group public description\nc. Renewal group public synopsis if defined\nd. Package public description, package public synopsis on the left\nd. Buyer Type, Section, Row, Seat and Order Total on the right\ne. Select Button\nf. Continue to Review Button\ng. Back button\n",
        "expected": "Verify that the below is displayed of Order Selection Page\na. Renewal Tile\nb. Renwal group public description\nc. Renewal group public synopsis if defined\nd. Package public description, package public synopsis on the left\nd. Buyer Type, Section, Row, Seat and Order Total on the right\ne. Select Button\nf. Continue to Review Button\ng. Back button\n"
      },
      {
        "content": "Verify the details of Order Selection Page\na. Renewal Tile\nb. Renwal group public description\nc. Renewal group public synopsis if defined\nd. Package public description, package public synopsis on the left\nd. Buyer Type, Section, Row, Seat and Order Total on the right\ne. Select Button\nf. Continue to Review Button\ng. Back button\n",
        "expected": "Verify the details of Order Selection Page\na. Renewal Tile\nb. Renwal group public description\nc. Renewal group public synopsis if defined\nd. Package public description, package public synopsis on the left\nd. Buyer Type, Section, Row, Seat and Order Total on the right\ne. Select Button\nf. Continue to Review Button\ng. Back button\n"
      },
      {
        "content": "Click on Continue to Review\n",
        "expected": "Verify that the cart is displayed\n"
      },
      {
        "content": "Verify the UI of Cart page\na. Renewal group public description \nb. Order id, Renew by date \nc. Package public description, package public synopsis\nd. Buyer Type, Section, Row, Seat and Price\ne. Delivery method\nf. Payment schedule (Payment plan option) with view installment schedule and read more \ng. Order Total with service charges\nh. Total Due Today\ni.  Continue to checkout and cancel button\n",
        "expected": "Verify the UI of cart are correct\na. Renewal group public description \nb. Order id, Renew by date \nc. Package public description, package public synopsis\nd. Buyer Type, Section, Row, Seat and Price\ne. Delivery method\nf. Payment schedule (Payment plan option) with view installment schedule and read more \ng. Order Total with service charges\nh. Total Due Today\ni.  Continue to checkout and cancel button\n"
      },
      {
        "content": "Verify the details of the cart page\na. Renewal group public description \nb. Order id, Renew by date \nc. Package public description, package public synopsis\nd. Buyer Type, Section, Row, Seat and Price\ne. Delivery method\nf. Payment schedule (Payment plan option) with view installment schedule and read more \ng. Order Total with service charges\nh. Total Due Today\nClick on  Continue to checkout button\n",
        "expected": "All the cart details should be correct and the user should be navigated to renewal checkout page\n"
      },
      {
        "content": "Verify the UI and details in renewal checkout page\na. Order id, Renew by date \nb. Package public description, package public synopsis\nc. Buyer Type, Section, Row, Seat and Price\nd. Delivery method\ne. Payment schedule (Payment plan option) with view installment schedule and read more \nf. Payment Method with credit card\ng. Order Total with service charges\nh. Total Due\n",
        "expected": "a.Verify all the details in the renewal checkout page \nb Verify that all the total due amount and service charges are correct\n"
      },
      {
        "content": "-Enter CVV and check the checkbox\n-Click on Checkout button\n",
        "expected": "The checkout should be successful and the confirmation page should be displayed"
      },
      {
        "content": " Verify the confirmation number is displayed\na. Manage Tickets button should be displayed\nb. Order id, Renew by date \nc. Package public description, package public synopsis\nd. Buyer Type, Section, Row, Seat and Price\ne. Delivery method\nf. Payment schedule (Payment plan option) with view installment schedule and read more \ng. Payment Method with credit card used\nh. Transaction Summary with service charges\ni. Subtotal \nj. Amount Paid Today\n",
        "expected": "Confirmation number should be displayed and below details should be displayed\na. Manage Tickets button should be displayed\nb. Order id, Renew by date \nc. Package public description, package public synopsis\nd. Buyer Type, Section, Row, Seat and Price\ne. Delivery method\nf. Payment schedule (Payment plan option) with view installment schedule and read more \ng. Payment Method with credit card used\nh. Transaction Summary with service charges\ni. Subtotal \nj. Amount Paid Today\n"
      },
      {
        "content": "Verify the transaction details in PV",
        "expected": "The transaction detail should be displayed in PV with transaction type as claim reservation"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 31031276,
    "title": "Renewals API single Reservation transation with renewal category: optional & credit:full-Auto (full amount  paid thru  account credit)",
    "section_id": 1881783,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 391,
    "created_on": 1689655608,
    "updated_by": 333,
    "updated_on": 1729803462,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 2,
    "custom_is_automated": true,
    "custom_pv_category": 43,
    "custom_refs": "C1845963",
    "custom_preconds": "-Create a Renewal group (renewal category: optional & Consume Credit During Online Renewal Full Auto)\r\n-Create a package with above Renewal Group\r\n-Create a Payment plan \r\n-Create  patron with credit (Credit amount should more than the reservation transaction amount)\r\n-Complete a Package reservation transaction for above patron ",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Precondition1:\nCreate a Renewal group (renewal category: optional & Consume Credit During Online Renewal Full Auto)\n-Login PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Event Groups\n-Select Renewal Group from \"Event Group Type\"\n-Click New button\n-Enter the Mandatory fields\nSelect renewal category \"optional\" & Consume Credit During Online Renewal \"Full-Auto\"\n-Click Save button ",
        "expected": "New Renewal Group created successfully"
      },
      {
        "content": "Precondition2:\nCreate a new or existing Package with above Renewal Group\n-Login PV application\n-Navigate to Package Administration\n-search existing package\n-Assign the above Renewal Group(Renewal Group created in Precondition1)\n",
        "expected": "Package created successfully & associate with Renewal Group"
      },
      {
        "content": "Precondition3:\nCreate a Payment plan\n-Login PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Payment Plans\n-Click New button\n-Enter the Mandatory fields\nselect Use Scheduled Payments \"Required\"\n_enter the (No Of Installments/Fixed Start Date & Fixed Installment Period)\n-Click Setup Installments button\n-Click Save button\n\nAssociate new payment plan with above package",
        "expected": "Payment plan created successfully"
      },
      {
        "content": "Precondition4:\nCreate patron with credit\n-Login PV application\n-Navigate to Patron Management\n-Search & select the MPV patron\n-Navigate to Balance\n-Click Add Credit button\n-Enter the Mandatory fields(Supplier, Credit source ,Credit type & Amount) and click ok button\n-Application will Navigate to Payment Page\n-Click Accept Payment & click checkout\n\nNote: To complete the sale with credit card payment patron should provide digitalWalletItem id in checkout API request\nFollow below steps if patron don't have a digitalWalletItem id\n-Login PV application\n-Navigate to Patron Management\n-Search & select the MPV patron\n-Navigate to wallet\n-Select Payment type \"Credit card\"\n-Click new\n-Enter the mandatory fields\n(Card Type/Card/Name on Card/Exp.Date)\n-Check Default\n-Click Save button",
        "expected": "Account credit created for patron\n\n\nNote:Credit amount should more than the reservation transaction amount"
      },
      {
        "content": "Precondition5:\n-Complete a Package reservation transaction for (Precondition2)package with (Precondition4)patron ",
        "expected": "Package reservation transaction completed successfully"
      },
      {
        "content": "Launch Postman tool\nSelect the method as GET\nEnter Authorization and Header details\nRun Get Renewal Order Group v2 API \n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/patrons/37714/renewalOrderGroups?renewalOrderCategory=ALL_UNASSIGNED_ORDERS",
        "expected": "verify Renewal Group & categories displayed as expected in Response\n-Precondition1: Renewal group should display correctly\n- Reservation should display in \"Categories\""
      },
      {
        "content": "Select the method as GET\nRun Get Renewal Order v2 API \n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/patrons/38184/renewalOrders?renewalOrderCategory=ALL_UNASSIGNED_ORDERS\n",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-Total Amount\n-Renew together type \n-Consume Credit Value"
      },
      {
        "content": "Select the method as POST\nRun Create Cart v2 API \n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/carts/renew\n\n\n{\n\t\"renewalCartRequest\": {\n\t\t\"renewalGroupId\": 1443,\n\t\t\"patronAccount\": {\n\t\t\t\"id\": 37910\n\t\t},\n\t\t\"renewalOrders\": [\n\t\t\t{\n\t\t\t\t\"optInScheduledPayments\": true,\n\t\t\t\t\"order\": {\n\t\t\t\t\t\"id\": 13596002\n\t\t\t\t},\n\t\t\t\t\"paymentPlan\": {\n\t\t\t\t\t\"id\": 2221\n\t\t\t\t}\n\t\t\t}\n\n        ]\n\t}\n}\n",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-Total Amount\n-Renew together type \n-Consume Credit Value\n-orderInstallmentsSummaries\n-dueAmount\n-dueDate\n\nget the Cart id & ETag value\n"
      },
      {
        "content": "Get the cartId & ETag value from Create Cart response (Step 7 response)\nEnter the ETag value in header \"If-Match\" before run checkout API\n\nRun Checkout v2 API \n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/carts/344496119/checkout/renewal\n\n{\n  \"cart\": {\n    \"id\": 344496119,\n    \"orderInstallmentsSummaries\": [\n      {\n        \"order\": {\n          \"id\": 14266063\n        },\n        \"paymentPlan\": {\n          \"id\": 2221\n        }\n      }\n    ],\n    \"transactionPatronAccount\": {\n      \"accountName\": \"Mpvrenewal3027, Mpv\",\n      \"id\": 36710\n    },\n    \"consumeCreditsForScheduledPayments\": false,\n    \"creditToApply\": {\n      \"value\": 150,\n      \"currencyCode\": \"USD\"\n    }\n  }\n}",
        "expected": "Cart checkout should complete successfully\nVerify below values displayed as expected in Response\n-CreditsApplied Amount\n-orderInstallmentsSummaries\n-AppliedCreditAmount\n-dueAmount\n-dueDate"
      },
      {
        "content": "Verify the transaction details in PV ticket services\n-Login PV application\n-Navigate to Ticketing\n-Select Ticket services\n-search with the order id",
        "expected": "The transaction detail should be displayed in PV with transaction type as claim Sale\n-Payment should be Account credit\n-Current Balance value"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 31032417,
    "title": "Renewals API single Reservation transation with renewal category: optional & credit:full-Auto (partial amount  paid thru  account credit & pending amount with credit card)",
    "section_id": 1881783,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 391,
    "created_on": 1689705149,
    "updated_by": 333,
    "updated_on": 1729803462,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 3,
    "custom_is_automated": true,
    "custom_pv_category": 43,
    "custom_refs": "C1845963",
    "custom_preconds": "-Create a Renewal group (renewal category: optional & Consume Credit During Online Renewal Full Auto)\r\n-Create a package with above Renewal Group\r\n-Create a Payment plan \r\n-Create  patron with credit (Credit amount should less than the reservation transaction due amount)\r\n-Complete a Package reservation transaction for above patron ",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Precondition1:\nCreate a Renewal group (renewal category: optional & Consume Credit During Online Renewal Full Auto)\n-Login PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Event Groups\n-Select Renewal Group from \"Event Group Type\"\n-Click New button\n-Enter the Mandatory fields\nSelect renewal category \"optional\" & Consume Credit During Online Renewal \"Full-Auto\"\n-Click Save button ",
        "expected": "New Renewal Group successfully"
      },
      {
        "content": "Precondition2:\nCreate a new or existing Package with above Renewal Group\n-Login PV application\n-Navigate to Package Administration\n-search existing package\n-Assign the above Renewal Group(Renewal Group created in Precondition1)\n",
        "expected": "Package created successfully & associate with Renewal Group"
      },
      {
        "content": "Precondition3:\nCreate a Payment plan \n-Login PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Payment Plans\n-Click New button\n-Enter the Mandatory fields\nselect Use Scheduled Payments \"Required\"\n_enter the (No Of Installments/Fixed Start Date & Fixed Installment Period)\n-Click Setup Installments button\n-Click Save button \n\n\nAssociate new payment plan with above package\n",
        "expected": "Payment plan created successfully"
      },
      {
        "content": "Precondition4:\ncreate a patron(can be done via PVUI or API)\nCreate patron with credit\n-Login PV application\n-Navigate to Patron Management\n-Search & select the MPV patron\n-Navigate to Balance\n-Click Add Credit button\n-Enter the Mandatory fields(Supplier, Credit source ,Credit type & Amount) and  click ok button\n-Application will Navigate to Payment Page\n-Click Accept Payment & click checkout\n\nNote: To complete the sale with credit card payment patron should provide digitalWalletItem id in checkout API request:(Can be done Via PVUI or API)\nFollow below steps if patron don't have a digitalWalletItem id\n-Login PV application\n-Navigate to Patron Management\n-Search & select the MPV patron\n-Navigate to wallet\n-Select Payment type \"Credit card\"\n-Click new\n-Enter the mandatory fields\n(Card Type/Card/Name on Card/Exp.Date)\n-Check Default\n-Click Save button\n\n\n",
        "expected": "Account credit created for patron\n\nNote: Credit amount should less than the reservation transaction due amount"
      },
      {
        "content": "Precondition5:\n-Complete a Package reservation transaction for (Precondition2)package with (Precondition4)patron (Can be done PV UI or API)",
        "expected": "Package reservation transaction completed successfully"
      },
      {
        "content": "Launch Postman tool\nSelect the method as GET\nEnter Authorization and Header details\nRun Get Renewal Order Group v2 API \n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/patrons/37714/renewalOrderGroups?renewalOrderCategory=ALL_UNASSIGNED_ORDERS",
        "expected": "verify Renewal Group & categories displayed as expected in Response\n-Precondition1: Renewal group should display correctly\n- Reservation should display in \"Categories\""
      },
      {
        "content": "Select the method as GET\nRun Get Renewal Order v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/patrons/38184/renewalOrders?renewalOrderCategory=ALL_UNASSIGNED_ORDERS\n",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-Total Amount\n-Renew together type \n-Consume Credit Value"
      },
      {
        "content": "Select the method as POST\nRun Create Cart v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/carts/renew\n\n\n{\n\t\"renewalCartRequest\": {\n\t\t\"renewalGroupId\": 1443,\n\t\t\"patronAccount\": {\n\t\t\t\"id\": 37910\n\t\t},\n\t\t\"renewalOrders\": [\n\t\t\t{\n\t\t\t\t\"optInScheduledPayments\": true,\n\t\t\t\t\"order\": {\n\t\t\t\t\t\"id\": 13596002\n\t\t\t\t},\n\t\t\t\t\"paymentPlan\": {\n\t\t\t\t\t\"id\": 2221\n\t\t\t\t}\n\t\t\t}\n\n        ]\n\t}\n}\n",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-Total Amount\n-Renew together type \n-Consume Credit Value\n-orderInstallmentsSummaries\n-dueAmount\n-dueDate\n\nget the Cart id & ETag value\n"
      },
      {
        "content": "Get the cartId & ETag value from Create Cart response (Step 7 response)\nEnter the ETag value in header \"If-Match\" before run checkout API\n\nRun Checkout v2 API \n\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/carts/344506064/checkout/renewal\n\n\n{\n  \"cart\": {\n    \"id\": 344506064,\n    \"payments\": [\n      {\n        \"amount\": {\n          \"currencyCode\": \"USD\",\n          \"value\": 165\n        },\n        \"paymentMethod\": {\n          \"id\": 7\n        },\n        \"digitalWalletItem\": {\n          \"id\": \"17699002\"\n        },\n        \"cardSecurityCode\": \"200\",\n        \"externallyAuthorized\": false\n      }\n    ],\n    \"orderInstallmentsSummaries\": [\n      {\n        \"order\": {\n          \"id\": 14276037\n        },\n        \"paymentPlan\": {\n          \"id\": 2221\n        },\n        \"installments\": [\n          {\n            \"scheduledPayments\": [\n              {\n                \"amount\": {\n                  \"value\": 225,\n                  \"currencyCode\": \"USD\"\n                },\n                \"digitalWalletItem\": {\n                  \"id\": 17699002\n                }\n              }\n            ],\n            \"installmentDate\": \"2023-08-03\"\n          },\n          {\n            \"scheduledPayments\": [\n              {\n                \"amount\": {\n                  \"value\": 225,\n                  \"currencyCode\": \"USD\"\n                },\n                \"digitalWalletItem\": {\n                  \"id\": 17699002\n                }\n              }\n            ],\n            \"installmentDate\": \"2023-08-10\"\n          },\n          {\n            \"scheduledPayments\": [\n              {\n                \"amount\": {\n                  \"value\": 225,\n                  \"currencyCode\": \"USD\"\n                },\n                \"digitalWalletItem\": {\n                  \"id\": 17699002\n                }\n              }\n            ],\n            \"installmentDate\": \"2023-08-17\"\n          }\n        ]\n      }\n    ],\n    \"transactionPatronAccount\": {\n      \"accountName\": \"Mpvrenewal3027, Mpv\",\n      \"id\": 36710\n    },\n    \"consumeCreditsForScheduledPayments\": false,\n    \"creditToApply\": {\n      \"value\": 60,\n      \"currencyCode\": \"USD\"\n    }\n  }\n}\n\n\n",
        "expected": "Cart checkout should complete successfully\nVerify below values displayed as expected in Response\n-CreditsApplied Amount\n-orderInstallmentsSummaries\n-AppliedCreditAmount\n-dueAmount\n-dueDate"
      },
      {
        "content": "Verify the transaction details in PV ticket services\n-Login PV application\n-Navigate to Ticketing\n-Select Ticket services\n-search with the order id",
        "expected": "The transaction detail should be displayed in PV with transaction type as claim Sale\n-Payment should be Account credit & credit card\n-Current Balance value"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 31317081,
    "title": "Order Centric Email for Reservation transaction with renewal category: Optional & Credit Consumption:Full-Optional (account credit covers the whole order amount) and Pay in full e-sign flag set to true",
    "section_id": 1881784,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 399,
    "created_on": 1692854910,
    "updated_by": 333,
    "updated_on": 1729803462,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 1,
    "custom_is_automated": true,
    "custom_pv_category": 2,
    "custom_refs": "Component testcases",
    "custom_preconds": "-Create a Renewal group (renewal category: optional & Consume Credit During Online Renewal Full Optional)\r\n-Create a package/associate an existing package with above Renewal Group\r\n-Create a Signature Template\r\n-Create a Payment plan with Signature Template selected and Require Signature Even if Order Paid in Full checked\r\n-Provide consolidate receivable permissions\r\n-Create patron with credit (Credit amount should be more than the reservations transaction amount)\r\n-Complete a Package reservation transaction for the above patron\r\n-Set Application property email.confirmation.features.enabled should be true\r\n-Set Application Property email.confirmation.scheduled.payment.order.centric.enabled default to true.\r\n-Set Application Propertyemail.confirmation.online.renewal.order.centric.enabled default to true.\r\n- under system setup- system adminstation-codes-email service provide- define mandrill configuration as below screenshot:\r\n![](index.php?/attachments/get/13762588)\r\n- - under system setup- system administration-codes-email configuration profile- define mandrill profile as per the screenshot:\r\n![](index.php?/attachments/get/13762590)\r\n- set system setup- org admin- select the 'Organizations'-Email Configuration Profile to the one created in the above step\r\n\r\n\r\n",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Precondition 1:\nCreate a Renewal group (renewal category: optional & Consume Credit During Online Renewal Full Optional)\n-Login to PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Event Groups\n-Select Renewal Group from \"Event Group Type\"\n-Click New button\n-Enter the Mandatory fields\nSelect renewal category \"optional\" & Consume Credit During Online Renewal \"Full-Optional\"\n-Click Save button",
        "expected": "New Renewal Group created successfully"
      },
      {
        "content": "\t\nPrecondition 2:\nCreate a new Package or associate an existing Package with above Renewal Group\n-Login to PV application\n-Navigate to Package Administration\n-Search existing package\n-Assign the above Renewal Group(Renewal Group created in Precondition1)",
        "expected": "Package created successfully & associated with Renewal Group"
      },
      {
        "content": "Precondition 3:\nCreate a Signature Template with application property online.renewals.esignatures.setup.enabled set to True \n-Login to PV application\n-Navigate to System Setup\n-Select the Organization from Organization Administration\n-Navigate to Configuration tab\n-Choose Signature Template from the Select Configuration dropwdown\n-Click New button\n-Enter the Mandatory fields\n-Click Save button",
        "expected": "New Signature Template created successfully"
      },
      {
        "content": "Precondition 4:\nCreate a Payment plan\n-Login PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Payment Plans\n-Click New button\n-Enter the Mandatory fields\nselect Use Scheduled Payments \"Required\"\n_Enter the (No Of Installments/Fixed Start Date & Fixed Installment Period)\n-Click Setup Installments button\n-Choose Signature Template from the dropdown \n-Check Require Signature Even if Order Paid in Full checkbox\n-Click Save button\n\nAssociate new payment plan with the package above",
        "expected": "Payment plan created successfully"
      },
      {
        "content": "Precondition 5:\nProvide consolidate receivable permissions\n-Login to PV application\n-Navigate to System Setup\n-Select the Organization from Organization Administration\n- Navigate to Access Permissions tab \n- Choose Open Item Receivable Type from Category dropdown\n- Click the Find button \n- Provide logged in user and MUM_MYTIXX user consolidate permission for the MLBGRPREC receivable\n- Apply Chenages \n- Logout from PV ",
        "expected": "Consolidate receivable permissions provided to MUM_MYTIXX user and the logged in user "
      },
      {
        "content": "Precondition 6\n\nCreate patron with credit\n-Login to PV application\n-Navigate to Patron Management\n-Search & select the MPV patron\n-Navigate to Balance\n-Click Add Credit button\n-Enter the Mandatory fields(Supplier, Credit source ,Credit type & Amount) and click ok button\n-Application will Navigate to Payment Page\n-Click Accept Payment & click checkout\n\nNote: To complete the sale with credit card payment, patron should provide digitalWalletItem id in checkout API request\nFollow below steps if patron don't have a digitalWalletItem id\n-Login PV application\n-Navigate to Patron Management\n-Search & select the MPV patron\n-Navigate to wallet\n-Select Payment type \"Credit card\"\n-Click new\n-Enter the mandatory fields\n(Card Type/Card/Name on Card/Exp.Date)\n-Check Default\n-Click Save button",
        "expected": "Account credit created for patron\n\nNote: Credit amount should more than the reservation transaction amount"
      },
      {
        "content": "Precondition 7:\n-Complete a Package reservation transaction for (Precondition 2)package with (Precondition 6)patron",
        "expected": "Package reservations transaction completed successfully"
      },
      {
        "content": "Precondition 8:\n- Set the application properties to true \nemail.confirmation.scheduled.payment.order.centric.enabled\nemail.confirmation.online.renewal.order.centric.enabled",
        "expected": "The application properties should be set to true\n\n"
      },
      {
        "content": "Launch Postman tool\nSelect the method as GET\nEnter Authorization and Header details\nRun Get Renewal Order Group v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/patrons/37714/renewalOrderGroups?renewalOrderCategory=ALL_UNASSIGNED_ORDERS",
        "expected": "verify Renewal Group & categories displayed as expected in Response\n"
      },
      {
        "content": "Select the method as GET\nRun Get Renewal Order v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/patrons/38184/renewalOrders?renewalOrderCategory=ALL_UNASSIGNED_ORDERS",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-Total Amount\n-Renew together type\n-Consume Credit Value"
      },
      {
        "content": "Select the method as POST\nRun Create Cart v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/carts/renew\n\n{\n\"renewalCartRequest\": {\n\"renewalGroupId\": 1443,\n\"patronAccount\": {\n\"id\": 37910\n},\n\"renewalOrders\": [\n{\n\"optInScheduledPayments\": true,\n\"order\": {\n\"id\": 13596002\n},\n\"paymentPlan\": {\n\"id\": 2221\n}\n}\n\n    ]\n}\n}",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-Total Amount\n-Renew together type\n-Consume Credit Value\n-orderInstallmentsSummaries\n-dueAmount\n-dueDate\n\nget the Cart id & ETag value"
      },
      {
        "content": "\t\nGet the cartId & ETag value from Create Cart response (Step 11 response)\nEnter the ETag value in header \"If-Match\" before run checkout API\n\nRun Checkout v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/carts/344496119/checkout/renewal\n\n{\n\"cart\": {\n\"id\": 344496119,\n\"orderInstallmentsSummaries\": [\n{\n\"order\": {\n\"id\": 14266063\n},\n\"paymentPlan\": {\n\"id\": 2221\n}\n}\n],\n\"transactionPatronAccount\": {\n\"accountName\": \"Mpvrenewal3027, Mpv\",\n\"id\": 36710\n},\n\"consumeCreditsForScheduledPayments\": false,\n\"creditToApply\": {\n\"value\": 150,\n\"currencyCode\": \"USD\"\n}\n}\n}",
        "expected": "Cart checkout should complete successfully\nVerify below values displayed as expected in Response\n-CreditsApplied Amount\n-orderInstallmentsSummaries\n-AppliedCreditAmount\n-dueAmount\n-dueDate"
      },
      {
        "content": "Verify that the order centric mail is triggered ",
        "expected": "The mail should be received at the patrons primary email address "
      },
      {
        "content": "Verify the contents on the email ",
        "expected": "The mail should contain the following details :\n- Patron Details (Account ID , Account Name)\n- Itemized listing of all tickets in the order along with Ticket Type, Price, Qty and Amount \n- Order Number \n- Total Amount\n- Handling /service Charges \n- Due Amount already paid \n- Installment Dates \n- Future Installment amounts\n- Payment Method Details (Card number in encrypted format , Authorization number , Amount )"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 31320473,
    "title": "Order Centric Email for Receivable transaction with renewal category: Optional & Credit Consumption:Full-Optional (account credit covers the whole order amount) and Pay in full e-sign flag set to false",
    "section_id": 1881784,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 399,
    "created_on": 1692858409,
    "updated_by": 333,
    "updated_on": 1729803462,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 2,
    "custom_is_automated": true,
    "custom_pv_category": 2,
    "custom_refs": "Component testcases",
    "custom_preconds": "-Create a Renewal group (renewal category: optional & Consume Credit During Online Renewal Full Optional)\r\n-Create a package/associate an existing package with above Renewal Group\r\n-Create a Signature Template\r\n-Create a Payment plan with Signature Template selected and Require Signature Even if Order Paid in Full not checked \r\n-Provide consolidate receivable permissions\r\n-Create patron with credit (Credit amount should be more than the receivable transaction amount)\r\n-Complete a Package receivable transaction for the above patron\r\n-Set Application Property email.confirmation.scheduled.payment.order.centric.enabled default to true.\r\n-Set Application Propertyemail.confirmation.online.renewal.order.centric.enabled default to true.\r\n- under system setup- system administration-codes-email service provide- define mandrill configuration as below screenshot:\r\n![](index.php?/attachments/get/13762591)\r\n\r\n- under system setup- system administration-codes-email configuration profile- define mandrill profile as per the screenshot:\r\n![](index.php?/attachments/get/13762592)\r\n\r\n\r\n- set system setup- org admin- select the 'Organizations'-Email Configuration Profile to the one created in the above step",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Precondition 1:\nCreate a Renewal group (renewal category: optional & Consume Credit During Online Renewal Full Optional)\n-Login to PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Event Groups\n-Select Renewal Group from \"Event Group Type\"\n-Click New button\n-Enter the Mandatory fields\nSelect renewal category \"optional\" & Consume Credit During Online Renewal \"Full-Optional\"\n-Click Save button",
        "expected": "New Renewal Group created successfully"
      },
      {
        "content": "\t\nPrecondition 2:\nCreate a new Package or associate an existing Package with above Renewal Group\n-Login to PV application\n-Navigate to Package Administration\n-Search existing package\n-Assign the above Renewal Group(Renewal Group created in Precondition1)",
        "expected": "Package created successfully & associated with Renewal Group"
      },
      {
        "content": "Precondition 3:\nCreate a Signature Template with application property online.renewals.esignatures.setup.enabled set to True \n-Login to PV application\n-Navigate to System Setup\n-Select the Organization from Organization Administration\n-Navigate to Configuration tab\n-Choose Signature Template from the Select Configuration dropwdown\n-Click New button\n-Enter the Mandatory fields\n-Click Save button",
        "expected": "New Signature Template created successfully"
      },
      {
        "content": "Precondition 4:\nCreate a Payment plan\n-Login PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Payment Plans\n-Click New button\n-Enter the Mandatory fields\nselect Use Scheduled Payments \"Required\"\n_Enter the (No Of Installments/Fixed Start Date & Fixed Installment Period)\n-Click Setup Installments button\n-Click Save button\n\nAssociate new payment plan with the package above",
        "expected": "Payment plan created successfully"
      },
      {
        "content": "Precondition 5:\nProvide consolidate receivable permissions\n-Login to PV application\n-Navigate to System Setup\n-Select the Organization from Organization Administration\n- Navigate to Access Permissions tab \n- Choose Open Item Receivable Type from Category dropdown\n- Click the Find button \n- Provide logged in user and MUM_MYTIXX user consolidate permission for the MLBGRPREC receivable\n- Apply Chenages \n- Logout from PV ",
        "expected": "Consolidate receivable permissions provided to MUM_MYTIXX user and the logged in user "
      },
      {
        "content": "Precondition 6\n\nCreate patron with credit\n-Login to PV application\n-Navigate to Patron Management\n-Search & select the MPV patron\n-Navigate to Balance\n-Click Add Credit button\n-Enter the Mandatory fields(Supplier, Credit source ,Credit type & Amount) and click ok button\n-Application will Navigate to Payment Page\n-Click Accept Payment & click checkout\n\nNote: To complete the sale with credit card payment, patron should provide digitalWalletItem id in checkout API request\nFollow below steps if patron don't have a digitalWalletItem id\n-Login PV application\n-Navigate to Patron Management\n-Search & select the MPV patron\n-Navigate to wallet\n-Select Payment type \"Credit card\"\n-Click new\n-Enter the mandatory fields\n(Card Type/Card/Name on Card/Exp.Date)\n-Check Default\n-Click Save button",
        "expected": "Account credit created for patron\n\nNote: Credit amount should be more than the reservation transaction amount"
      },
      {
        "content": "Precondition 7:\n-Complete a Package receivable transaction for (Precondition 2)package with (Precondition 6)patron",
        "expected": "Package reservations transaction completed successfully"
      },
      {
        "content": "Precondition 8:\n- Set the application properties to true \nemail.confirmation.scheduled.payment.order.centric.enabled\nemail.confirmation.online.renewal.order.centric.enabled",
        "expected": "The application properties should be set to true\n\n"
      },
      {
        "content": "Launch Postman tool\nSelect the method as GET\nEnter Authorization and Header details\nRun Get Renewal Order Group v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/patrons/37714/renewalOrderGroups?renewalOrderCategory=ALL_UNASSIGNED_ORDERS",
        "expected": "Verify Renewal Group & categories displayed as expected in Response\n"
      },
      {
        "content": "\t\nSelect the method as GET\nRun Get Renewal Order v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/patrons/38184/renewalOrders?renewalOrderCategory=ALL_UNASSIGNED_ORDERS",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-Total Amount\n-Renew together type\n-Consume Credit Value"
      },
      {
        "content": "Select the method as POST\nRun Create Cart v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/carts/renew\n\n{\n    \"renewalCartRequest\": {\n        \"renewalGroupId\": \"1061\",\n        \"patronAccount\": {\n            \"id\": 38961\n        },\n        \"renewalOrders\": [\n            {\n                \"payPastDueAmountOnly\": false,\n                \"optInScheduledPayments\": true,\n                \"order\": {\n                    \"id\": 14666001\n                },\n                \"paymentPlan\": {\n                    \"id\": 2641\n                }\n            }\n        ]\n    }\n}",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-Total Amount\n-Renew together type\n-Consume Credit Value\n-orderInstallmentsSummaries\n-dueAmount\n-dueDate\n\nget the Cart id & ETag value"
      },
      {
        "content": "\t\nGet the cartId & ETag value from Create Cart response (Step 11 response)\nEnter the ETag value in header \"If-Match\" before run checkout API\n\nRun Checkout v2 API\n\n{{base_url}}/api/v2/carts/{{cartId}}/checkout/renewal\n\n{\n    \"cart\": {\n        \"id\": {{cartId}},\n        \"creditToApply\": {\n            \"value\": \"00.00\",\n            \"currencyCode\": \"USD\"\n        },\n        \"orderInstallmentsSummaries\": [\n            {\n                \"order\": {\n                    \"id\": 14666001\n                },\n                \"paymentPlan\": {\n                    \"id\": {{paymentPlanID}}\n                },\n                \"installments\": [\n                    {\n                        \"installmentDate\": \"{{InstallmentDate1}}\",\n                        \"scheduledPayments\": [\n                            {\n                                \"amount\": {\n                                    \"value\": {{InstallmentAmount1}},\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"digitalWalletItem\": {\n                                    \"id\": {{digitalWalletItemId}}\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        \"installmentDate\": \"{{InstallmentDate2}}\",\n                        \"scheduledPayments\": [\n                            {\n                                \"amount\": {\n                                    \"value\": {{InstallmentAmount2}},\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"digitalWalletItem\": {\n                                    \"id\": {{digitalWalletItemId}}\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        \"installmentDate\": \"{{InstallmentDate3}}\",\n                        \"scheduledPayments\": [\n                            {\n                                \"amount\": {\n                                    \"value\": {{InstallmentAmount3}},\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"digitalWalletItem\": {\n                                    \"id\": {{digitalWalletItemId}}\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        \"installmentDate\": \"{{InstallmentDate4}}\",\n                        \"scheduledPayments\": [\n                            {\n                                \"amount\": {\n                                    \"value\": {{InstallmentAmount4}},\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"digitalWalletItem\": {\n                                    \"id\": {{digitalWalletItemId}}\n                                }\n                            }\n                        ]\n                    }\n                ]\n            }\n        ],\n        \"payments\": [\n            {\n                \"cardExpiration\": \"2025-04\",\n                \"cardNumber\": \"5555555555554444\",\n                \"cardPresent\": false,\n                \"cardSecurityCode\": \"111\",\n                \"cardSwiped\": \"false\",\n                \"externallyAuthorized\": \"false\",\n                \"nameOnCard\": \"Betty Boop\",\n                \"amount\": {\n                    \"currencyCode\": \"USD\",\n                    \"value\": {{value}}\n                },\n                \"paymentMethod\": {\n                    \"id\": 6\n                },\n                \"billingAddress\": {\n                    \"address1\": \"766 East Chester Street\",\n                    \"address2\": \"\",\n                    \"city\": \"Meridan\",\n                    \"countryCode\": \"USA\",\n                    \"postalCode\": \"03345\",\n                    \"subCountryCode\": \"CT\",\n                    \"subCountryName\": \"Connecticut\"\n                }\n            }\n        ],\n        \"transactionPatronAccount\": {\n            \"id\": \"38961\",\n            \"matchLastName\": \"Luo\"\n        }\n    }\n}",
        "expected": "Cart checkout should complete successfully\nVerify below values displayed as expected in Response\n-CreditsApplied Amount\n-orderInstallmentsSummaries\n-AppliedCreditAmount\n-dueAmount\n-dueDate"
      },
      {
        "content": "Verify that the order centric mail is received ",
        "expected": "The mail should be received at the patrons primary email address "
      },
      {
        "content": "Verify the contents on the email ",
        "expected": "The mail should contain the following details :\n- Patron Details (Account ID , Account Name)\n- Itemized listing of all tickets in the order along with Ticket Type, Price, Qty and Amount \n- Order Number \n- Total Amount\n- Handling /service Charges \n- Due Amount already paid \n- Installment Dates \n- Future Installment amounts\n- Payment Method Details (Card number in encrypted format , Authorization number , Amount )"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 32991539,
    "title": "Generate statement invoice from  Order Details page for single reservation transaction",
    "section_id": 1881785,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 391,
    "created_on": 1710964106,
    "updated_by": 333,
    "updated_on": 1729803462,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 1,
    "custom_is_automated": true,
    "custom_pv_category": 43,
    "custom_refs": "C1845963",
    "custom_preconds": "-Create a Template in template administration\r\n-Set default statement at supplier level\r\n-Create a Renewal group (renewal category: optional & Consume Credit During Online Renewal Full Auto)\r\n-Create a package with above Renewal Group\r\n-Create a Payment plan \r\n-Create  patron with credit (Credit amount should more than the reservation transaction amount)\r\n-Complete a Package reservation transaction for above patron ",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Precondition1:\n-Create a Template in template administration\n-Login PV application\n-Navigate to Template Administration\n-Click New button\n-Enter the Mandatory fields\n-Click Save button",
        "expected": "New template created successfully"
      },
      {
        "content": "Precondition2: Set default statement at supplier level\n-Login PV application\n-Navigate to Supplier Administration\n-Set Default template in statement\nExternal Single Statement Payment Plan & Default External Single Statement Template ",
        "expected": "Default statement set supplier level as ecpected"
      },
      {
        "content": "Precondition3:\nCreate a Renewal group (renewal category: optional & Consume Credit During Online Renewal Full Auto)\n-Login PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Event Groups\n-Select Renewal Group from \"Event Group Type\"\n-Click New button\n-Enter the Mandatory fields\nSelect renewal category \"optional\" & Consume Credit During Online Renewal \"Full-Auto\"\n-Click Save button ",
        "expected": "New Renewal Group created successfully"
      },
      {
        "content": "Precondition4:\nCreate a new or existing Package with above Renewal Group\n-Login PV application\n-Navigate to Package Administration\n-search existing package\n-Assign the above Renewal Group(Renewal Group created in Precondition1)\n",
        "expected": "Package created successfully & associate with Renewal Group"
      },
      {
        "content": "Precondition5:\nCreate a Payment plan\n-Login PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Payment Plans\n-Click New button\n-Enter the Mandatory fields\nselect Use Scheduled Payments \"Required\"\n_enter the (No Of Installments/Fixed Start Date & Fixed Installment Period)\n-Click Setup Installments button\n-Click Save button\n\nAssociate new payment plan with above package",
        "expected": "Payment plan created successfully"
      },
      {
        "content": "Precondition6:\nCreate patron with credit\n-Login PV application\n-Navigate to Patron Management\n-Search & select the MPV patron\n-Navigate to Balance\n-Click Add Credit button\n-Enter the Mandatory fields(Supplier, Credit source ,Credit type & Amount) and click ok button\n-Application will Navigate to Payment Page\n-Click Accept Payment & click checkout\n\nNote: To complete the sale with credit card payment patron should provide digitalWalletItem id in checkout API request\nFollow below steps if patron don't have a digitalWalletItem id\n-Login PV application\n-Navigate to Patron Management\n-Search & select the MPV patron\n-Navigate to wallet\n-Select Payment type \"Credit card\"\n-Click new\n-Enter the mandatory fields\n(Card Type/Card/Name on Card/Exp.Date)\n-Check Default\n-Click Save button",
        "expected": "Account credit created for patron\n\n\nNote:Credit amount should more than the reservation transaction amount"
      },
      {
        "content": "Precondition7:\n-Complete a Package reservation transaction for (Precondition2)package with (Precondition4)patron ",
        "expected": "Package reservation transaction completed successfully"
      },
      {
        "content": "Launch Postman tool\nSelect the method as GET\nEnter Authorization and Header details\nRun Get Renewal Order Group v2 API \n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/patrons/37714/renewalOrderGroups?renewalOrderCategory=ALL_UNASSIGNED_ORDERS",
        "expected": "verify Renewal Group & categories displayed as expected in Response\n-Precondition1: Renewal group should display correctly\n- Reservation should display in \"Categories\"\n- OnlineStatmentAllowed:True"
      },
      {
        "content": "Select the method as GET\nRun Get Renewal Order v2 API \n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/patrons/38184/renewalOrders?renewalOrderCategory=ALL_UNASSIGNED_ORDERS\n",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-Total Amount\n-Renew together type \n-Consume Credit Value\n- OnlineStatmentAllowed:True"
      },
      {
        "content": "Select the method as GET\nRun Get generating statements v2 API \n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2//patrons/{patronAccountId}/statements?",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-Total Amount\n-patronAccountId\n-Consume Credit Value\n"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 33042261,
    "title": "Generate statement invoice from  Order Details page for receivable transaction",
    "section_id": 1881785,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 391,
    "created_on": 1712170481,
    "updated_by": 333,
    "updated_on": 1729803462,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 2,
    "custom_is_automated": true,
    "custom_pv_category": 43,
    "custom_refs": "C1845963",
    "custom_preconds": "-Create a Template in template administration\r\n-Set default statement at supplier level\r\n-Create a Renewal group (renewal category: optional & Consume Credit During Online Renewal Full Auto)\r\n-Create a package with above Renewal Group\r\n-Create a Payment plan \r\n-Create  patron with credit (Credit amount should more than the reservation transaction amount)\r\n-Complete a Package receivable transaction for above patron ",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Precondition1:\n-Create a Template in template administration\n-Login PV application\n-Navigate to Template Administration\n-Click New button\n-Enter the Mandatory fields\n-Click Save button",
        "expected": "New template created successfully"
      },
      {
        "content": "Precondition2: Set default statement at supplier level\n-Login PV application\n-Navigate to Supplier Administration\n-Set Default template in statement\nExternal Single Statement Payment Plan & Default External Single Statement Template ",
        "expected": "Default statement set supplier level as ecpected"
      },
      {
        "content": "Precondition3:\nCreate a Renewal group (renewal category: optional & Consume Credit During Online Renewal Full Auto)\n-Login PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Event Groups\n-Select Renewal Group from \"Event Group Type\"\n-Click New button\n-Enter the Mandatory fields\nSelect renewal category \"optional\" & Consume Credit During Online Renewal \"Full-Auto\"\n-Click Save button ",
        "expected": "New Renewal Group created successfully"
      },
      {
        "content": "Precondition4:\nCreate a new or existing Package with above Renewal Group\n-Login PV application\n-Navigate to Package Administration\n-search existing package\n-Assign the above Renewal Group(Renewal Group created in Precondition1)\n",
        "expected": "Package created successfully & associate with Renewal Group"
      },
      {
        "content": "Precondition5:\nCreate a Payment plan\n-Login PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Payment Plans\n-Click New button\n-Enter the Mandatory fields\nselect Use Scheduled Payments \"Required\"\n_enter the (No Of Installments/Fixed Start Date & Fixed Installment Period)\n-Click Setup Installments button\n-Click Save button\n\nAssociate new payment plan with above package",
        "expected": "Payment plan created successfully"
      },
      {
        "content": "Precondition6:\nCreate patron with credit\n-Login PV application\n-Navigate to Patron Management\n-Search & select the MPV patron\n-Navigate to Balance\n-Click Add Credit button\n-Enter the Mandatory fields(Supplier, Credit source ,Credit type & Amount) and click ok button\n-Application will Navigate to Payment Page\n-Click Accept Payment & click checkout\n\nNote: To complete the sale with credit card payment patron should provide digitalWalletItem id in checkout API request\nFollow below steps if patron don't have a digitalWalletItem id\n-Login PV application\n-Navigate to Patron Management\n-Search & select the MPV patron\n-Navigate to wallet\n-Select Payment type \"Credit card\"\n-Click new\n-Enter the mandatory fields\n(Card Type/Card/Name on Card/Exp.Date)\n-Check Default\n-Click Save button",
        "expected": "Account credit created for patron\n\n\nNote:Credit amount should more than the reservation transaction amount"
      },
      {
        "content": "Precondition7:\n-Complete a Package receivable transaction for (Precondition2)package with (Precondition4)patron ",
        "expected": "Package reservation transaction completed successfully"
      },
      {
        "content": "Launch Postman tool\nSelect the method as GET\nEnter Authorization and Header details\nRun Get Renewal Order Group v2 API \n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/patrons/37714/renewalOrderGroups?renewalOrderCategory=ALL_UNASSIGNED_ORDERS",
        "expected": "verify Renewal Group & categories displayed as expected in Response\n-Precondition1: Renewal group should display correctly\n- Reservation should display in \"Categories\"\n- OnlineStatmentAllowed:True"
      },
      {
        "content": "Select the method as GET\nRun Get Renewal Order v2 API \n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/patrons/38184/renewalOrders?renewalOrderCategory=ALL_UNASSIGNED_ORDERS\n",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-Total Amount\n-Renew together type \n-Consume Credit Value\n- OnlineStatmentAllowed:True"
      },
      {
        "content": "Select the method as GET\nRun Get generating statements v2 API \n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2//patrons/{patronAccountId}/statements?",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-Total Amount\n-patronAccountId\n-Consume Credit Value\n"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 33042260,
    "title": "Generate statement invoice from confirmation page for single reservation transaction",
    "section_id": 1881785,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 391,
    "created_on": 1712170439,
    "updated_by": 333,
    "updated_on": 1729803462,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 4,
    "custom_is_automated": true,
    "custom_pv_category": 43,
    "custom_refs": "C1845963",
    "custom_preconds": "-Create a Template in template administration\r\n-Set default statement at supplier level\r\n-Create a Renewal group (renewal category: optional & Consume Credit During Online Renewal Full Auto)\r\n-Create a package with above Renewal Group\r\n-Create a Payment plan\r\n-Create patron with credit (Credit amount should more than the reservation transaction amount)\r\n-Complete a Package reservation transaction for above patron\r\n\r\n",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Precondition1:\n-Create a Template in template administration\n-Login PV application\n-Navigate to Template Administration\n-Click New button\n-Enter the Mandatory fields\n-Click Save button",
        "expected": "New template created successfully"
      },
      {
        "content": "Precondition2: Set default statement at supplier level\n-Login PV application\n-Navigate to Supplier Administration\n-Set Default template in statement\nExternal Single Statement Payment Plan & Default External Single Statement Template",
        "expected": "Default statement set supplier level as ecpected"
      },
      {
        "content": "Precondition3:\nCreate a Renewal group (renewal category: optional & Consume Credit During Online Renewal Full Auto)\n-Login PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Event Groups\n-Select Renewal Group from \"Event Group Type\"\n-Click New button\n-Enter the Mandatory fields\nSelect renewal category \"optional\" & Consume Credit During Online Renewal \"Full-Auto\"\n-Click Save button ",
        "expected": "New Renewal Group created successfully"
      },
      {
        "content": "Precondition4:\nCreate a new or existing Package with above Renewal Group\n-Login PV application\n-Navigate to Package Administration\n-search existing package\n-Assign the above Renewal Group(Renewal Group created in Precondition1)\n",
        "expected": "Package created successfully & associate with Renewal Group"
      },
      {
        "content": "Precondition5:\nCreate a Payment plan\n-Login PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Payment Plans\n-Click New button\n-Enter the Mandatory fields\nselect Use Scheduled Payments \"Required\"\n_enter the (No Of Installments/Fixed Start Date & Fixed Installment Period)\n-Click Setup Installments button\n-Click Save button\n\nAssociate new payment plan with above package",
        "expected": "Payment plan created successfully"
      },
      {
        "content": "Precondition6:\nCreate patron with credit\n-Login PV application\n-Navigate to Patron Management\n-Search & select the MPV patron\n-Navigate to Balance\n-Click Add Credit button\n-Enter the Mandatory fields(Supplier, Credit source ,Credit type & Amount) and click ok button\n-Application will Navigate to Payment Page\n-Click Accept Payment & click checkout\n\nNote: To complete the sale with credit card payment patron should provide digitalWalletItem id in checkout API request\nFollow below steps if patron don't have a digitalWalletItem id\n-Login PV application\n-Navigate to Patron Management\n-Search & select the MPV patron\n-Navigate to wallet\n-Select Payment type \"Credit card\"\n-Click new\n-Enter the mandatory fields\n(Card Type/Card/Name on Card/Exp.Date)\n-Check Default\n-Click Save button",
        "expected": "Account credit created for patron\n\n\nNote:Credit amount should more than the reservation transaction amount"
      },
      {
        "content": "Precondition7:\n-Complete a Package reservation transaction for (Precondition2)package with (Precondition4)patron ",
        "expected": "Package reservation transaction completed successfully"
      },
      {
        "content": "Launch Postman tool\nSelect the method as GET\nEnter Authorization and Header details\nRun Get Renewal Order Group v2 API \n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/patrons/37714/renewalOrderGroups?renewalOrderCategory=ALL_UNASSIGNED_ORDERS",
        "expected": "verify Renewal Group & categories displayed as expected in Response\n-Precondition1: Renewal group should display correctly\n- Reservation should display in \"Categories\"\n- OnlineStatmentAllowed:True"
      },
      {
        "content": "Select the method as GET\nRun Get Renewal Order v2 API \n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/patrons/38184/renewalOrders?renewalOrderCategory=ALL_UNASSIGNED_ORDERS\n",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-Total Amount\n-Renew together type \n-Consume Credit Value\n -OnlineStatmentAllowed:True"
      },
      {
        "content": "Select the method as POST\nRun Create Cart v2 API \n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/carts/renew\n\n\n{\n\t\"renewalCartRequest\": {\n\t\t\"renewalGroupId\": 1443,\n\t\t\"patronAccount\": {\n\t\t\t\"id\": 37910\n\t\t},\n\t\t\"renewalOrders\": [\n\t\t\t{\n\t\t\t\t\"optInScheduledPayments\": true,\n\t\t\t\t\"order\": {\n\t\t\t\t\t\"id\": 13596002\n\t\t\t\t},\n\t\t\t\t\"paymentPlan\": {\n\t\t\t\t\t\"id\": 2221\n\t\t\t\t}\n\t\t\t}\n\n        ]\n\t}\n}\n",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-Total Amount\n-Renew together type \n-Consume Credit Value\n-orderInstallmentsSummaries\n-dueAmount\n-dueDate\n -OnlineStatmentAllowed:True\nget the Cart id & ETag value\n"
      },
      {
        "content": "Get the cartId & ETag value from Create Cart response (Step 7 response)\nEnter the ETag value in header \"If-Match\" before run checkout API\n\nRun Checkout v2 API \n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/carts/344496119/checkout/renewal\n\n{\n  \"cart\": {\n    \"id\": 344496119,\n    \"orderInstallmentsSummaries\": [\n      {\n        \"order\": {\n          \"id\": 14266063\n        },\n        \"paymentPlan\": {\n          \"id\": 2221\n        }\n      }\n    ],\n    \"transactionPatronAccount\": {\n      \"accountName\": \"Mpvrenewal3027, Mpv\",\n      \"id\": 36710\n    },\n    \"consumeCreditsForScheduledPayments\": false,\n    \"creditToApply\": {\n      \"value\": 150,\n      \"currencyCode\": \"USD\"\n    }\n  }\n}",
        "expected": "Cart checkout should complete successfully\nVerify below values displayed as expected in Response\n-CreditsApplied Amount\n-orderInstallmentsSummaries\n-AppliedCreditAmount\n-dueAmount\n-dueDate\n -OnlineStatmentAllowed:True"
      },
      {
        "content": "\n\t\nSelect the method as GET\nRun Get generating statements v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/patrons/{patronAccountId}/statements?orderId=888&orderId=999",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-Total Amount\n-patronAccountId\n-Statment Invoice"
      },
      {
        "content": "Verify the transaction details in PV ticket services\n-Login PV application\n-Navigate to Ticketing\n-Select Ticket services\n-search with the order id",
        "expected": "The transaction detail should be displayed in PV with transaction type as claim Sale\n-Payment should be Account credit\n-Current Balance value"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 33097739,
    "title": "MME Broker Flow",
    "section_id": 1890891,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 396,
    "created_on": 1713331694,
    "updated_by": 333,
    "updated_on": 1729803462,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 1,
    "custom_is_automated": true,
    "custom_pv_category": 28,
    "custom_refs": null,
    "custom_preconds": "Create a new Event/Package or use existing Event/Package\r\nCreate a new Seller Patron or use existing (not mapped with any Broker) ",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Lock Tickets using a Patron Account (not mapped with Broker)",
        "expected": "Tickets locked in Cart\nNote: Patron Account Id, First Name, Last Name, Email, Phone Number, Event Id"
      },
      {
        "content": "Check out Cart",
        "expected": "Tickets purchased\nNote: Ticket Id, Order Id\n\nVerify the Order and ticket Details in PV UI -> Ticket Services -> Orders"
      },
      {
        "content": "Get the Tickets with Ticket Details V2 API using Patron Account Id, Order Id, Event Id",
        "expected": "Verify Ticket Details contains Verification Ids of the Tickets purchased above\nNote the Verification Ids"
      },
      {
        "content": "Validate Broker Listing-StubHub using Verification Ids from above step, Seller Email (Patron not mapped with broker)\n\nLaunch Postman tool\nSelect the method as GET\nEnter Authorization and Header details\nRequest URL: https://test.pvapi.provenue.com/tickets/validate/broker?sellerEmail={{Seller_Email}}&verificationId={{vid2}}&verificationId={{vid1}}\nRun Validate Broker Listing API",
        "expected": "Verify the error in Response:\n\n \"error\": {\n        \"code\": \"mms.bad.request\",\n        \"httpMethod\": \"GET\",\n        \"message\": \"Provided broker details are not valid\",\n        \"requestUrl\": \"https://test.pvapi.provenue.com/v2/marketplace/tickets/validate/broker?sellerEmail=mlbtixqa%2022mms1_SCR%40gmail.com&verificationId=USA1-BOBCATS-2970-4QQJYUEFLVLVSPQXJLS42DU7&verificationId=USA1-BOBCATS-2970-CZG53BP7VG3ZS4UNKF25MBMV\"\n    }"
      },
      {
        "content": "Broker List Ticket on StubHub using Patron details noted in Step 1 (not mapped with Broker), and verification id noted in step 3\n\nSelect the method as POST\nRequest URL: https://test.pvapi.provenue.com/offers/broker\n\n{\n  \"offer\": {\n    \"marketplaceOfferId\": \"SH_165891\", \n    \"sellerAccount\": {\n      \"email\": \"{{Seller_Email}}\"\n    },\n    \"tickets\": [\n      {\n        \"verificationId\": \"{{vid1}}\",\n        \"ticketPrice\": {\n          \"currencyCode\": \"USD\",\n          \"value\": \"100.00\"\n        }      },      {\n        \"verificationId\": \"{{vid2}}\",\n        \"ticketPrice\": {\n          \"currencyCode\": \"USD\",\n          \"value\": \"100.00\"\n        }      }    ]  }}\n",
        "expected": "Verify the error in Response:\n\n{\n    \"error\": {\n        \"code\": \"mms.tickets.invalid.for.offer.create\",\n        \"httpMethod\": \"POST\",\n        \"message\": \"One or more tickets are unable to be listed.\",\n        \"details\": {\n            \"ticketValidationStatus\": \"INVALID\",\n            \"tickets\": [\n                {\n                    \"id\": 51732972,\n                    \"verificationId\": \"USA1-BOBCATS-2970-6YZUS72DCFZM64SG3ZLEUIOP\",\n                    \"status\": \"SELLER_NOT_RIGHTSHOLDER\"\n                },\n                {\n                    \"id\": 51732973,\n                    \"verificationId\": \"USA1-BOBCATS-2970-QLYG5MHMWUHPTABYMLMN5SPU\",\n                    \"status\": \"SELLER_NOT_RIGHTSHOLDER\"\n                }\n            ]\n        },\n        \"requestUrl\": \"https://test.pvapi.provenue.com/v2/marketplace/offers/broker\"\n    }\n}"
      },
      {
        "content": "Validate Broker Listing-SeatGeek using Verification Ids from above step, Seller Email (Patron not mapped with broker)\n\nLaunch Postman tool\nSelect the method as GET\nEnter Authorization and Header details\nRequest URL: https://test.pvapi.provenue.com/tickets/validate/broker?sellerEmail={{Seller_Email}}&verificationId={{vid2}}&verificationId={{vid1}}\nRun Validate Broker Listing API",
        "expected": "Verify the error in Response:\n\n \"error\": {\n        \"code\": \"mms.bad.request\",\n        \"httpMethod\": \"GET\",\n        \"message\": \"Provided broker details are not valid\",\n        \"requestUrl\": \"https://test.pvapi.provenue.com/v2/marketplace/tickets/validate/broker?sellerEmail=mlbtixqa%2022mms1_SCR%40gmail.com&verificationId=USA1-BOBCATS-2970-4QQJYUEFLVLVSPQXJLS42DU7&verificationId=USA1-BOBCATS-2970-CZG53BP7VG3ZS4UNKF25MBMV\"\n    }"
      },
      {
        "content": "Broker List Ticket on SeatGeek using Patron details noted in Step 1 (not mapped with Broker), and verification id noted in step 3\n\nSelect the method as POST\nRequest URL: https://test.pvapi.provenue.com/offers/broker\n\n{\n  \"offer\": {\n    \"marketplaceOfferId\": \"SG_165891\", \n    \"sellerAccount\": {\n      \"email\": \"{{Seller_Email}}\"\n    },\n    \"tickets\": [\n      {\n        \"verificationId\": \"{{vid1}}\",\n        \"ticketPrice\": {\n          \"currencyCode\": \"USD\",\n          \"value\": \"100.00\"\n        }      },      {\n        \"verificationId\": \"{{vid2}}\",\n        \"ticketPrice\": {\n          \"currencyCode\": \"USD\",\n          \"value\": \"100.00\"\n        }}    ]}}\n",
        "expected": "Verify the error in Response:\n\n{\n    \"error\": {\n        \"code\": \"mms.tickets.invalid.for.offer.create\",\n        \"httpMethod\": \"POST\",\n        \"message\": \"One or more tickets are unable to be listed.\",\n        \"details\": {\n            \"ticketValidationStatus\": \"INVALID\",\n            \"tickets\": [\n                {\n                    \"id\": 51732972,\n                    \"verificationId\": \"USA1-BOBCATS-2970-6YZUS72DCFZM64SG3ZLEUIOP\",\n                    \"status\": \"SELLER_NOT_RIGHTSHOLDER\"\n                },\n                {\n                    \"id\": 51732973,\n                    \"verificationId\": \"USA1-BOBCATS-2970-QLYG5MHMWUHPTABYMLMN5SPU\",\n                    \"status\": \"SELLER_NOT_RIGHTSHOLDER\"\n                }\n            ]\n        },\n        \"requestUrl\": \"https://test.pvapi.provenue.com/v2/marketplace/offers/broker\"\n    }}"
      },
      {
        "content": "Validate Broker Listing-StubHub using Verification Ids from above step, Seller Email (Patron mapped with broker)\n\nLaunch Postman tool\nSelect the method as GET\nEnter Authorization and Header details\nRequest URL: https://test.pvapi.provenue.com/tickets/validate/broker?sellerEmail={{Seller_Email}}&verificationId={{vid2}}&verificationId={{vid1}}\nRun Validate Broker Listing API",
        "expected": "Verify below values displayed as expected in Response:\n-ticketValidationStatus: VALID\n-status: VALID"
      },
      {
        "content": "Broker List Ticket on StubHub using Patron details noted in Step 1 (Patron mapped with Broker), and verification id noted in step 3\n\nSelect the method as POST\nRequest URL: https://test.pvapi.provenue.com/offers/broker\n\n{\n  \"offer\": {\n    \"marketplaceOfferId\": \"SH_165891\", \n    \"sellerAccount\": {\n      \"email\": \"{{Seller_Email}}\"\n    },\n    \"tickets\": [\n      {\n        \"verificationId\": \"{{vid1}}\",\n        \"ticketPrice\": {\n          \"currencyCode\": \"USD\",\n          \"value\": \"100.00\"\n        }      },      {\n        \"verificationId\": \"{{vid2}}\",\n        \"ticketPrice\": {\n          \"currencyCode\": \"USD\",\n          \"value\": \"100.00\"\n        }}    ]  }}",
        "expected": "Verify the tickets are listed successfully and below values displayed as expected in Response:\n-offer.id\n-offer.status: OPEN\n-marketplaceOfferId\n-marketplace.code: STUBHUB\n-marketplace.description: StubHub\n-requestType: BROKER\n-tickets.status: OPEN\n- Verification Id matches provided verification id\n-tickets.marketActionStatus: SUCCESS\n-tickets.sellableStatus: LISTED_ONLY_IN_CURRENT_MARKETPLACE\n-tickets.brokerId\n-patronAccounts\n\nNote the Offer Id\n\nVerify the Market Offer Details in PV UI:\nTicket Services -> Market Offer Search -> Enter External offer Id -> Offer status: open\nTicket Services -> Seat History Search -> Enter details -> Offer status: open\nTicket Services -> Order Page -> Click on Resale Link -> Offer status\n\nVerify the DB details:\n'ticket' table -> MARKET_OFFER_STATUS_CODE: O, MARKET_OFFER_TYPE_CODE: RS, MARKETPLACE_LAST_UPDATED_DATE"
      },
      {
        "content": "Get Offer Details using Offer Id from above step\n\nSelect the method as GET\nEnter Authorization and Header details\nRequest URL: https://test.pvapi.provenue.com/offers/{{vofferid}}",
        "expected": "Verify below values displayed as expected in Response:\n-offer.id\n-offer.status: OPEN\n-tickets.verificationId\n\nNote the etag from Response Headers"
      },
      {
        "content": "Delist the Broker Listed tickets on StubHub using the Offer Id from above step\n\nSelect the method as DELETE\nEnter Authorization and Header details (If-Match: etag from Reponse Header noted in above step)\nRequest URL: https://test.pvapi.provenue.com/offers/{{vofferid}}",
        "expected": "Verify the tickets are delisted successfully and below values displayed as expected in Response:\n-offer.id\n-marketplace: StubHub\n-offer.status: CANCELLED\n-tickets.verificationId\n-tickets.status: CANCELLED\n\nVerify the Market Offer Details in PV UI:\nTicket Services -> Market Offer Search -> Enter External offer Id -> Offer status: ATM Cancelled\nTicket Services -> Seat History Search -> Enter details -> Offer status: ATM Cancelled\nTicket Services -> Order Page -> Click on N/A Link -> Offer status: ATM Cancelled\n\nVerify the DB details:\n'ticket' table -> MARKET_OFFER_STATUS_CODE: null, MARKET_OFFER_TYPE_CODE: null, MARKETPLACE_LAST_UPDATED_DATE"
      },
      {
        "content": "Validate Broker Listing-Vividseats using Verification Ids from above step, Seller Email (Patron mapped with broker)\n\nSelect the method as GET\nEnter Authorization and Header details\nRequest URL: https://test.pvapi.provenue.com/tickets/validate/broker?sellerEmail={{Seller_Email}}&verificationId={{vid2}}&verificationId={{vid1}}\nRun Validate Broker Listing API",
        "expected": "Verify below values displayed as expected in Response:\n-ticketValidationStatus: VALID\n-tickets.status: VALID"
      },
      {
        "content": "Broker List Ticket on Vividseats using Patron details noted in Step 1 (Patron mapped with Broker)\n\nSelect the method as POST\nRequest URL: https://test.pvapi.provenue.com/offers/broker\n\n{\n  \"offer\": {\n    \"marketplaceOfferId\": \"VS_165891\", \n    \"sellerAccount\": {\n      \"email\": \"{{Seller_Email}}\"\n    },\n    \"tickets\": [\n      {\n        \"verificationId\": \"{{vid1}}\",\n        \"ticketPrice\": {\n          \"currencyCode\": \"USD\",\n          \"value\": \"100.00\"\n        }      },      {\n        \"verificationId\": \"{{vid2}}\",\n        \"ticketPrice\": {\n          \"currencyCode\": \"USD\",\n          \"value\": \"100.00\"\n        }}    ]  }}",
        "expected": "Verify the tickets are listed successfully and below values displayed as expected in Response:\n-offer.id\n-offer.status: OPEN\n-marketplaceOfferId\n-marketplace.code: VIVIDSEATS\n-marketplace.description: Vividseats\n-requestType: BROKER\n-tickets.status: OPEN\n- Verification Id matches provided verification id\n-tickets.marketActionStatus: SUCCESS\n-tickets.sellableStatus: LISTED_ONLY_IN_CURRENT_MARKETPLACE\n-tickets.brokerId\n-patronAccounts\n\nNote the Offer Id\n\nVerify the Market Offer Details in PV UI:\nTicket Services -> Market Offer Search -> Enter External offer Id -> Offer status: open\nTicket Services -> Seat History Search -> Enter details -> Offer status: open\nTicket Services -> Order Page -> Click on Resale Link -> Offer status\n\nVerify the DB details:\n'ticket' table -> MARKET_OFFER_STATUS_CODE: O, MARKET_OFFER_TYPE_CODE: RS, MARKETPLACE_LAST_UPDATED_DATE"
      },
      {
        "content": "Purchase Broker Listed ticket from the Vividseats listing using a buyer account that already exists in PV\n\nSelect the method as POST\nRequest URL: https://test.pvapi.provenue.com/offers/{{vofferid}}/buy\n\n{\n    \"offer\": {\n        \"tickets\": [\n            {\n                \"verificationId\": \"{{vid1}}\",\n                \"soldTicketPrice\": {\n                    \"currencyCode\": \"USD\",\n                    \"value\": \"100.00\"\n                }            },            {\n                \"verificationId\": \"{{vid2}}\",\n                \"soldTicketPrice\": {\n                    \"currencyCode\": \"USD\",\n                    \"value\": \"100.00\"\n                }            }        ]    },\n    \"buyerAccount\": {\n        \"firstName\": \"Shirisha\",\n        \"lastName\": \"Annamaneni\",\n        \"email\": \"{{buyer_email}}\"\n    },\n    \"sellerAccount\": {\n        \"firstName\": \"Broker\",\n        \"lastName\": \"seatgeekTwo\",\n        \"email\": \"{{seller_email}}\",\n        \"mobilePhone\": {\n            \"countryCode\": \"USA\",\n            \"number\": \"555-555-5555\"\n        }    },\n    \"marketplaceTransactionId\": \"1234\",\n    \"totalSalesAmount\": {\n        \"currencyCode\": \"USD\",\n        \"value\": \"225.00\"\n    },\n    \"sellerFee\": {\n        \"total\": {\n            \"currencyCode\": \"USD\",\n            \"value\": \"20.00\"\n        },\n        \"inclusive\": true\n    },\n    \"buyerFee\": {\n        \"total\": {\n            \"currencyCode\": \"USD\",\n            \"value\": \"25.00\"\n        },\n        \"inclusive\": false\n    },\n    \"sellerPayoutToAccountCredit\": true,\n    \"sellerProceeds\": {\n        \"currencyCode\": \"USD\",\n        \"value\": \"180.00\"\n    }}",
        "expected": "Verify the Tickets are purchased off Secondary Market Place successfully and below values displayed as expected in Response:\n-offer.id\n-offer.status: SOLD\n-marketplaceOfferId\n-requestType: BROKER\n-marketType: SECONDARY\n-buyerAccount\n-marketplaceTransactionId\n- Verification Id matches provided verification id\n\nVerify the Market Offer Details in PV UI:\nTicket Services -> Market Offer Search -> Enter External offer Id -> Offer status: Completed\nTicket Services -> Seat History Search -> Enter details -> Offer status: Completed\nTicket Services -> Order Page -> Click on Resale Link -> Offer status: Completed\n\nVerify the DB details:\n'ticket' table -> MARKET_OFFER_STATUS_CODE: M, MARKET_OFFER_TYPE_CODE: RS, MARKETPLACE_TYPE_CODE: VS, MARKETPLACE_LAST_UPDATED_DATE, current_sold_market_offer_id\n\n'MARKET_OFFER' table -> MARKET_OFFER_STATUS_CODE: M, MARKET_OFFER_TYPE_CODE: RS, BUYER_PATRON_ACCOUNT_ID, SELLER_PATRON_ACCOUNT_ID, MARKETPLACE_TYPE_CODE: VS, LISTING_TYPE_CODE: MBR\n\n"
      },
      {
        "content": "Navigate to the Seller account Noted in Step 5 in PV UI and verify the tickets are no longer in that account",
        "expected": "Tickets are no longer associated with the Seller Account"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 33107662,
    "title": "MME Barcode Direct Flow",
    "section_id": 1890891,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 396,
    "created_on": 1713502525,
    "updated_by": 333,
    "updated_on": 1729803462,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 2,
    "custom_is_automated": true,
    "custom_pv_category": 28,
    "custom_refs": null,
    "custom_preconds": "Create a new Event/Package or use existing Event/Package ",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Lock Tickets using a Patron Account",
        "expected": "Tickets locked in Cart\nNote: Patron Account Id, First Name, Last Name, Email, Phone Number, Event Id"
      },
      {
        "content": "Check out Cart",
        "expected": "Tickets purchased\nNote: Ticket Id, Order Id\n\nVerify the Order and ticket Details in PV UI -> Ticket Services -> Orders"
      },
      {
        "content": "Print the Tickets via Print API\n\nLaunch Postman tool\nSelect the method as POST\nEnter Authorization and Header details\nRequest URL: https://test.pvapi.provenue.com/v2/print\n\n{\n    \"printRequest\": {\n        \"printAction\": \"REISSUE_PRINT\",\n        \"deliveryId\": {{deliveryId}},\n        \"patronAccount\": {\n            \"id\": {{pv_pid2}}\n                    }    }\n}",
        "expected": "Tickets printed successfully and Verify below values displayed as expected in Response:\n-printStatus: SUCCESSFUL\n-numberOfTicketsPrinted\n-barcode\n\nNote the barcodes of tickets from response"
      },
      {
        "content": "Get the Tickets with Ticket Details V2 API using barcodes from above step\n\nSelect the method as GET\nEnter Authorization and Header details\nRequest URL: https://test.pvapi.provenue.com/v2/tickets?validateMarketStatuses=true&barcode={{barcode1}}&barcode={{barcode2}}&validateBarcodeStatuses=true",
        "expected": "Verify Ticket Details contains Verification Ids of the Tickets purchased above and Verify below values for all the barcodes displayed as expected in Response:\n-marketStatuses.resellable = true\n-marketStatuses.marketStatus = true\n-marketStatuses.valid = true\n-tickets.currentlyPrinted = true\n-tickets.currentlyOnMarketOffer = false\n-tickets.active = true\n\nNote the Verification Ids"
      },
      {
        "content": "Barcode Direct Ticket on SeatGeek using a new Patron email (Patron that does not exist in PV), and verification id noted in step 4\n\nSelect the method as POST\nRequest URL: https://test.pvapi.provenue.com/offers/barcodeDirect\n\n{\n    \"offer\": {\n        \"marketplaceOfferId\": \"sg_1032001\",\n        \"tickets\": [\n            {\n                \"verificationId\": \"{{vid1}}\",\n                \"ticketPrice\": {\n                    \"currencyCode\": \"USD\",\n                    \"value\": \"100.00\"\n                }            },            {\n                \"verificationId\": \"{{vid2}}\",\n                \"ticketPrice\": {\n                    \"currencyCode\": \"USD\",\n                    \"value\": \"100.00\"\n                }            }        ],\n        \"sellerAccount\": {\n            \"firstName\": \"Jdirect223\",\n            \"lastName\": \"Patron88\",\n            \"email\": \"Garry.Ferry34@example.org\",\n            \"mobilePhone\": {\n                \"countryCode\": \"USA\",\n                \"number\": \"123-456-7890\"\n            }        }    }\n}",
        "expected": "Verify the tickets are listed successfully on SeatGeek and below values displayed as expected in Response:\n-offer.id\n-offer.status: OPEN\n-marketplaceOfferId\n-marketplace.code: SEATGEEK\n-marketplace.description: SeatGeek\n-requestType: BARCODE_DIRECT\n-tickets.status: OPEN\n- Verification Id matches provided verification id\n-tickets.marketActionStatus: SUCCESS\n-tickets.sellableStatus: LISTED_ONLY_IN_CURRENT_MARKETPLACE\n-patronAccounts\n\nNote the Offer Id\n\nVerify the Market Offer Details in PV UI:\nTicket Services -> Market Offer Search -> Enter External offer Id -> Offer status: open\nTicket Services -> Seat History Search -> Enter details -> Offer status: open\nTicket Services -> Order Page -> Click on Resale Link -> Offer status: open\n\nVerify the DB details:\n'ticket' table -> MARKET_OFFER_STATUS_CODE: O, MARKET_OFFER_TYPE_CODE: RS, MARKETPLACE_LAST_UPDATED_DATE"
      },
      {
        "content": "Repeat steps 1-4\nBarcode Direct List Ticket on StubHub using Patron details noted in above Step, and verification id noted in step 4\n\nSelect the method as POST\nRequest URL: https://test.pvapi.provenue.com/offers/barcodeDirect\n\n{\n    \"offer\": {\n        \"marketplaceOfferId\": \"sh_1032001\",\n        \"tickets\": [\n            {\n                \"verificationId\": \"{{vid1}}\",\n                \"ticketPrice\": {\n                    \"currencyCode\": \"USD\",\n                    \"value\": \"100.00\"\n                }            },            {\n                \"verificationId\": \"{{vid2}}\",\n                \"ticketPrice\": {\n                    \"currencyCode\": \"USD\",\n                    \"value\": \"100.00\"\n                }            }        ],\n        \"sellerAccount\": {\n            \"firstName\": \"Jdirect223\",\n            \"lastName\": \"Patron88\",\n            \"email\": \"Garry.Ferry34@example.org\",\n            \"mobilePhone\": {\n                \"countryCode\": \"USA\",\n                \"number\": \"123-456-7890\"\n            }        }    }\n}",
        "expected": "Verify the tickets are listed successfully on Stubhub and below values displayed as expected in Response:\n-offer.id\n-offer.status: OPEN\n-marketplaceOfferId\n-marketplace.code: STUBHUB\n-marketplace.description: Stubhub\n-requestType: BARCODE_DIRECT\n-tickets.status: OPEN\n- Verification Id matches provided verification id\n-tickets.marketActionStatus: SUCCESS\n-tickets.sellableStatus: LISTED_ONLY_IN_CURRENT_MARKETPLACE\n-patronAccounts\n\nNote the Offer Id\n\nVerify the Market Offer Details in PV UI:\nTicket Services -> Market Offer Search -> Enter External offer Id -> Offer status: open\nTicket Services -> Seat History Search -> Enter details -> Offer status: open\nTicket Services -> Order Page -> Click on Resale Link -> Offer status: open\n\nVerify the DB details:\n'ticket' table -> MARKET_OFFER_STATUS_CODE: O, MARKET_OFFER_TYPE_CODE: RS, MARKETPLACE_LAST_UPDATED_DATE"
      },
      {
        "content": "Purchase Barcode Direct Listed ticket from the Seatgeek listing using a buyer account that does not exist in PV\n\nSelect the method as POST\nRequest URL: https://test.pvapi.provenue.com/offers/{{vofferid}}/buy\n\n{\n    \"offer\": {\n        \"tickets\": [\n            {\n                \"verificationId\": \"{{vid1}}\",\n                \"soldTicketPrice\": {\n                    \"currencyCode\": \"USD\",\n                    \"value\": \"100.00\"\n                }            },            {\n                \"verificationId\": \"{{vid2}}\",\n                \"soldTicketPrice\": {\n                    \"currencyCode\": \"USD\",\n                    \"value\": \"100.00\"\n                }            }        ]\n    },\n    \"buyerAccount\": {\n        \"firstName\": \"Jdirect223\",\n        \"lastName\": \"Patron88\",\n        \"email\": \"shirisha.annamaneni@mlb.com\"\n    },\n    \"sellerAccount\": {\n        \"firstName\": \"Jdirect223\",\n        \"lastName\": \"Patron88\",\n        \"email\": \"Garry.Ferry34@example.org\",\n        \"mobilePhone\": {\n            \"countryCode\": \"USA\",\n            \"number\": \"555-555-5555\"\n        }    },\n    \"marketplaceTransactionId\": \"1234\",\n    \"totalSalesAmount\": {\n        \"currencyCode\": \"USD\",\n        \"value\": \"225.00\"\n    },\n    \"sellerFee\": {\n        \"total\": {\n            \"currencyCode\": \"USD\",\n            \"value\": \"20.00\"\n        },\n        \"inclusive\": true\n    },\n    \"buyerFee\": {\n        \"total\": {\n            \"currencyCode\": \"USD\",\n            \"value\": \"25.00\"\n        },\n        \"inclusive\": false\n    },\n    \"sellerPayoutToAccountCredit\": true,\n    \"sellerProceeds\": {\n        \"currencyCode\": \"USD\",\n        \"value\": \"180.00\"\n    }}",
        "expected": "Verify the Tickets are purchased off Secondary Market Place successfully and below values displayed as expected in Response:\n-offer.id\n-offer.status: SOLD\n-marketplaceOfferId\n-requestType: BARCODE_DIRECT\n-marketType: SECONDARY\n-buyerAccount\n-marketplaceTransactionId\n- Verification Id matches provided verification id\n\nVerify the Market Offer Details in PV UI:\nTicket Services -> Market Offer Search -> Enter External offer Id -> Offer status: Completed\nTicket Services -> Seat History Search -> Enter details -> Offer status: Completed\nTicket Services -> Order Page -> Click on Resale Link -> Offer status: Completed\n\nVerify the DB details:\n'ticket' table -> MARKET_OFFER_STATUS_CODE: M, MARKET_OFFER_TYPE_CODE: RS, MARKETPLACE_TYPE_CODE: VS, MARKETPLACE_LAST_UPDATED_DATE, current_sold_market_offer_id\n\n'MARKET_OFFER' table -> MARKET_OFFER_STATUS_CODE: M, MARKET_OFFER_TYPE_CODE: RS, BUYER_PATRON_ACCOUNT_ID, SELLER_PATRON_ACCOUNT_ID, MARKETPLACE_TYPE_CODE: SG, LISTING_TYPE_CODE: MBD"
      },
      {
        "content": "Try to Purchase the above Barcode Direct Purchased tickets on Stubhub using a buyer account that does not exist in PV\n\nSelect the method as POST\nRequest URL: https://test.pvapi.provenue.com/offers/{{vofferid}}/buy\n\n{\n    \"offer\": {\n        \"tickets\": [\n            {\n                \"verificationId\": \"{{vid1}}\",\n                \"soldTicketPrice\": {\n                    \"currencyCode\": \"USD\",\n                    \"value\": \"100.00\"\n                }            },            {\n                \"verificationId\": \"{{vid2}}\",\n                \"soldTicketPrice\": {\n                    \"currencyCode\": \"USD\",\n                    \"value\": \"100.00\"\n                }            }        ]\n    },\n    \"buyerAccount\": {\n        \"firstName\": \"Jdirect223\",\n        \"lastName\": \"Patron88\",\n        \"email\": \"shirisha.annamaneni1@mlb.com\"\n    },\n    \"sellerAccount\": {\n        \"firstName\": \"Jdirect223\",\n        \"lastName\": \"Patron88\",\n        \"email\": \"Garry.Ferry34@example.org\",\n        \"mobilePhone\": {\n            \"countryCode\": \"USA\",\n            \"number\": \"555-555-5555\"\n        }    },\n    \"marketplaceTransactionId\": \"1234\",\n    \"totalSalesAmount\": {\n        \"currencyCode\": \"USD\",\n        \"value\": \"225.00\"\n    },\n    \"sellerFee\": {\n        \"total\": {\n            \"currencyCode\": \"USD\",\n            \"value\": \"20.00\"\n        },\n        \"inclusive\": true\n    },\n    \"buyerFee\": {\n        \"total\": {\n            \"currencyCode\": \"USD\",\n            \"value\": \"25.00\"\n        },\n        \"inclusive\": false\n    },\n    \"sellerPayoutToAccountCredit\": true,\n    \"sellerProceeds\": {\n        \"currencyCode\": \"USD\",\n        \"value\": \"180.00\"\n    }}",
        "expected": "Verify the error in the response as below:\n\n{\n    \"error\": {\n        \"code\": \"mms.entity.not.found\",\n        \"httpMethod\": \"POST\",\n        \"message\": \"Offer with ID '84ec8aad-9898-4ed0-9066-087c4f6ad735' does not exist\",\n        \"requestUrl\": \"https://test.pvapi.provenue.com/v2/marketplace/offers/84ec8aad-9898-4ed0-9066-087c4f6ad735/buy\"\n    }\n}"
      },
      {
        "content": "Navigate to PV UI and Verify new Patron Account was created for the buyer that did not exist in PV noted in Step 7",
        "expected": "The new Buyer account is available in PV"
      },
      {
        "content": "Navigate to the Seller account Noted in Step 5 in PV UI and verify the tickets are no longer in that account",
        "expected": "Tickets are no longer associated with the Seller Account"
      },
      {
        "content": "Print Ticket of the Buyer using Print API\n\nSelect the method as POST\nEnter Authorization and Header details\nRequest URL: https://test.pvapi.provenue.com/v2/print\n\n{\n    \"printRequest\": {\n        \"printAction\": \"REISSUE_PRINT\",\n        \"deliveryId\": {{deliveryId of new order}},\n        \"patronAccount\": {\n            \"id\": {{Buyer ID}}\n                    }    }\n}",
        "expected": "New Tickets printed successfully and Verify below values displayed as expected in Response:\n-printStatus: SUCCESSFUL\n-numberOfTicketsPrinted\n-barcode\n\nNote the barcodes of tickets from response"
      },
      {
        "content": "Get the Tickets with Ticket Details V2 API using new barcodes from above step\n\nSelect the method as GET\nEnter Authorization and Header details\nRequest URL: https://test.pvapi.provenue.com/v2/tickets?validateMarketStatuses=true&barcode={{barcode1}}&barcode={{barcode2}}&validateBarcodeStatuses=true",
        "expected": "Verify Ticket Details contains Verification Ids of the Tickets purchased above and Verify below values for all the barcodes displayed as expected in Response:\n-marketStatuses.resellable = true\n-marketStatuses.marketStatus = true\n-marketStatuses.valid = true\n-tickets.currentlyPrinted = true\n-tickets.currentlyOnMarketOffer = false\n-tickets.active = true\n\nNote the Verification Ids"
      },
      {
        "content": "Barcode Direct Tickets on SeatGeek using a new Patron email (Patron that does not exist in PV), and verification id noted in above step\n\nSelect the method as POST\nRequest URL: https://test.pvapi.provenue.com/offers/barcodeDirect\n\n{\n    \"offer\": {\n        \"marketplaceOfferId\": \"sg_1032001\",\n        \"tickets\": [\n            {\n                \"verificationId\": \"{{vid1}}\",\n                \"ticketPrice\": {\n                    \"currencyCode\": \"USD\",\n                    \"value\": \"100.00\"\n                }            },            {\n                \"verificationId\": \"{{vid2}}\",\n                \"ticketPrice\": {\n                    \"currencyCode\": \"USD\",\n                    \"value\": \"100.00\"\n                }            }        ],\n        \"sellerAccount\": {\n            \"firstName\": \"Jdirect223\",\n            \"lastName\": \"Patron88\",\n            \"email\": \"Garry.Ferry34@example.org\",\n            \"mobilePhone\": {\n                \"countryCode\": \"USA\",\n                \"number\": \"123-456-7890\"\n            }        }    }\n}",
        "expected": "Verify the tickets are listed successfully on SeatGeek and below values displayed as expected in Response:\n-offer.id\n-offer.status: OPEN\n-marketplaceOfferId\n-marketplace.code: SEATGEEK\n-marketplace.description: SeatGeek\n-requestType: BARCODE_DIRECT\n-tickets.status: OPEN\n- Verification Id matches provided verification id\n-tickets.marketActionStatus: SUCCESS\n-tickets.sellableStatus: LISTED_ONLY_IN_CURRENT_MARKETPLACE\n-patronAccounts\n\nNote the Offer Id\n\nVerify the Market Offer Details in PV UI:\nTicket Services -> Market Offer Search -> Enter External offer Id -> Offer status: open\nTicket Services -> Seat History Search -> Enter details -> Offer status: open\nTicket Services -> Order Page -> Click on Resale Link -> Offer status: open\n\nVerify the DB details:\n'ticket' table -> MARKET_OFFER_STATUS_CODE: O, MARKET_OFFER_TYPE_CODE: RS, MARKETPLACE_LAST_UPDATED_DATE"
      },
      {
        "content": "Get Offer Details using Offer Id from above step\n\nSelect the method as GET\nEnter Authorization and Header details\nRequest URL: https://test.pvapi.provenue.com/offers/{{vofferid}}",
        "expected": "Verify below values displayed as expected in Response:\n-offer.id\n-offer.status: OPEN\n-tickets.verificationId\n\nNote the etag from Response Headers"
      },
      {
        "content": "Delist the Barcode Direct Listed tickets on SeatGeek using the Offer Id from above step\n\nSelect the method as DELETE\nEnter Authorization and Header details (If-Match: etag from Reponse Header noted in above step)\nRequest URL: https://test.pvapi.provenue.com/offers/{{vofferid}}",
        "expected": "Verify the tickets are delisted successfully and below values displayed as expected in Response:\n-offer.id\n-marketplace: SeatGeek\n-offer.status: CANCELLED\n-tickets.verificationId\n-tickets.status: CANCELLED\n\nVerify the Market Offer Details in PV UI:\nTicket Services -> Market Offer Search -> Enter External offer Id -> Offer status: ATM Cancelled\nTicket Services -> Seat History Search -> Enter details -> Offer status: ATM Cancelled\nTicket Services -> Order Page -> Click on N/A Link -> Offer status: ATM Cancelled\n\nVerify the DB details:\n'ticket' table -> MARKET_OFFER_STATUS_CODE: null, MARKET_OFFER_TYPE_CODE: null, MARKETPLACE_LAST_UPDATED_DATE"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 33103346,
    "title": "MME Fan_to_Fan Flow",
    "section_id": 1890891,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 396,
    "created_on": 1713422409,
    "updated_by": 333,
    "updated_on": 1729803462,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 3,
    "custom_is_automated": true,
    "custom_pv_category": 28,
    "custom_refs": null,
    "custom_preconds": "Create a new Event/Package or use existing Event/Package\r\nUse existing Buyer and Seller Patrons",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Lock Tickets using a Patron Account",
        "expected": "Tickets locked in Cart\nNote: Patron Account Id, First Name, Last Name, Email, Phone Number, Event Id"
      },
      {
        "content": "Check out Cart",
        "expected": "Tickets purchased\nNote: Ticket Id, Order Id\n\nVerify the Order and ticket Details in PV UI -> Ticket Services -> Orders"
      },
      {
        "content": "Get the Tickets with Ticket Details V2 API using Patron Account Id, Order Id, Event Id",
        "expected": "Verify Ticket Details contains Verification Ids of the Tickets purchased above\nNote the Verification Ids"
      },
      {
        "content": "Run PVO Patron/fan login api using Patron credentials\n\nLaunch Postman tool\nSelect the method as GET\nEnter Authorization and Header details\nRequest URL: https://mytickets-qastk1.tickets.com/buy/MyTicketsMobile?request={\"userName\":\"bddirectqa1@tickets.com\",\"password\":\"{{Password}}\"}&version=2&agency=UMGM_MYTIXX&orgid=48780&operationname=login",
        "expected": "Patron Logged in successfully\nNote the jwtToken from response"
      },
      {
        "content": "Validate F2F Listing-SeatGeek using Verification Ids from above step, Seller Email (Patron mapped with broker)\n\nLaunch Postman tool\nSelect the method as GET\nEnter Authorization and Header details (\"x-apitoken\": \"jwtToken\" from above step)\nRequest URL: https://test.pvapi.provenue.com/tickets/validate/fan?orgId=48780&agencyCode=UMGM_MYTIXX&patronId=38622&ticketId={{ticketid1}}&ticketId={{ticketid2}}",
        "expected": "Verify below values displayed as expected in Response:\n-ticketValidationStatus: VALID\n-tickets.status: VALID\n-token\n\nNote the token from response"
      },
      {
        "content": "Create F2F Offer on SEATGEEK using verification id noted in step 3\n\nSelect the method as POST\nEnter Authorization and Header details (\"mlb-f2f-token\": \"token from above step\")\nRequest URL: https://test.pvapi.provenue.com/offers/fan\n\n{\n  \"offer\": {\n    \"marketplaceOfferId\": \"seatgeek_1655495745888\",\n    \"tickets\": [\n      {\n        \"verificationId\": \"{{vid1}}\",\n        \"ticketPrice\": {\n          \"currencyCode\": \"USD\",\n          \"value\": \"100.00\"\n        }\n      },\n      {\n        \"verificationId\": \"{{vid2}}\",\n        \"ticketPrice\": {\n          \"currencyCode\": \"USD\",\n          \"value\": \"100.00\"\n        }      }    ]  }\n}",
        "expected": "Verify the tickets are listed successfully and below values displayed as expected in Response:\n-offer.id\n-offer.status: OPEN\n-marketplaceOfferId\n-marketplace.code: SEATGEEK\n-marketplace.description: SeatGeek\n-requestType: FAN_TO_FAN\n-tickets.status: OPEN\n- Verification Id matches provided verification id\n-tickets.marketActionStatus: SUCCESS\n-tickets.sellableStatus: LISTED_ONLY_IN_CURRENT_MARKETPLACE\n-patronAccounts\n\nNote the Offer Id\n\nVerify the Market Offer Details in PV UI:\nTicket Services -> Market Offer Search -> Enter External offer Id -> Offer status: open\nTicket Services -> Seat History Search -> Enter details -> Offer status: open\nTicket Services -> Order Page -> Click on Resale Link -> Offer status\n\nVerify the DB details:\n'ticket' table -> MARKET_OFFER_STATUS_CODE: O, MARKET_OFFER_TYPE_CODE: RS, MARKET_OFFER_TYPE_CODE: SG, MARKETPLACE_LAST_UPDATED_DATE"
      },
      {
        "content": "Purchase F2F Listed ticket from the SeatGeek listing using a buyer account that already exists in PV and seller credit \"true\"\n\nSelect the method as POST\nRequest URL: https://test.pvapi.provenue.com/offers/{{vofferid}}/buy\n\n{\n    \"offer\": {\n        \"id\": \"{{vofferid}}\",\n        \"tickets\": [\n      {\n        \"verificationId\": \"{{vid1}}\",\n        \"soldTicketPrice\": {\n          \"currencyCode\": \"USD\",\n          \"value\": \"100.00\"\n        }      }      ,\n         {\n        \"verificationId\": \"{{vid2}}\",\n        \"soldTicketPrice\": {\n          \"currencyCode\": \"USD\",\n          \"value\": \"100.00\"\n        }      }    ]\n    },\n      \"buyerAccount\": {\n        \"firstName\": \"Jdirect223\",\n        \"lastName\": \"Patron88\",\n        \"email\": \"Darlene.Steuber@example.com\"\n   \n    },\n    \"marketplaceTransactionId\": \"11111\",\n    \"totalSalesAmount\": {\n        \"currencyCode\": \"USD\",\n        \"value\": \"225.00\"\n    },\n    \"sellerFee\": {\n        \"total\": {\n            \"currencyCode\": \"USD\",\n            \"value\": \"20.00\"\n        },\n        \"inclusive\": true\n    },\n    \"buyerFee\": {\n        \"total\": {\n            \"currencyCode\": \"USD\",\n            \"value\": \"25.00\"\n        },\n        \"inclusive\": false\n    },\n    \"sellerPayoutToAccountCredit\": true,\n    \"sellerProceeds\": {\n        \"currencyCode\": \"USD\",\n        \"value\": \"180.00\"\n    }}",
        "expected": "Verify the Tickets are purchased off Secondary Market Place successfully and below values displayed as expected in Response:\n-offer.id\n-offer.status: SOLD\n-marketplaceOfferId\n-requestType: FAN_TO_FAN\n-marketType: SECONDARY\n-buyerAccount\n-marketplaceTransactionId\n- Verification Id matches provided verification id\n\nVerify the Market Offer Details in PV UI:\nTicket Services -> Market Offer Search -> Enter External offer Id -> Offer status: Completed\nTicket Services -> Seat History Search -> Enter details -> Offer status: Completed\nTicket Services -> Order Page -> Click on Resale Link -> Offer status: Completed and Tickets status: Inactive\n\nVerify the DB details:\n'ticket' table -> MARKET_OFFER_STATUS_CODE: M, MARKET_OFFER_TYPE_CODE: RS, MARKETPLACE_TYPE_CODE: SG, MARKETPLACE_LAST_UPDATED_DATE, current_sold_market_offer_id\n\n'MARKET_OFFER' table -> MARKET_OFFER_STATUS_CODE: M, MARKET_OFFER_TYPE_CODE: RS, BUYER_PATRON_ACCOUNT_ID, SELLER_PATRON_ACCOUNT_ID, MARKETPLACE_TYPE_CODE: SG, LISTING_TYPE_CODE: MFF\n\n"
      },
      {
        "content": "Navigate to PV UI -> Patron Accounts and verify that the correct amount of credit exists for the seller patron as Pending Credit",
        "expected": "Seller Patron credit exists in PV UI"
      },
      {
        "content": "Run the Credit Run Utility and convert the Pending Account Credit so that it can be consumed",
        "expected": "Pending Account Credit converted via Utility to be consumed"
      },
      {
        "content": "Purchase new tickets in PV UI using the Credit above",
        "expected": "Tickets purchased successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 33275169,
    "title": "MME Fan_to_Fan Direct Flow",
    "section_id": 1890891,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 396,
    "created_on": 1715670644,
    "updated_by": 333,
    "updated_on": 1729803462,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 4,
    "custom_is_automated": true,
    "custom_pv_category": 28,
    "custom_refs": null,
    "custom_preconds": "Create a new Event/Package or use existing Event/Package\r\nUse existing Seller Patron",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Lock Tickets using a Patron Account",
        "expected": "Tickets locked in Cart\nNote: Patron Account Id, First Name, Last Name, Email, Phone Number, Event Id"
      },
      {
        "content": "Check out Cart",
        "expected": "Tickets purchased\nNote: Ticket Id, Order Id\n\nVerify the Order and ticket Details in PV UI -> Ticket Services -> Orders"
      },
      {
        "content": "Get the Tickets with Ticket Details V2 API using Patron Account Id, Order Id, Event Id",
        "expected": "Verify Ticket Details contains Verification Ids of the Tickets purchased above\nNote the Verification Ids"
      },
      {
        "content": "Fetch the Fan access buyer token using OAuth 2.0 Authentication\n\nCallback URL - https://qa-aws.mlb.com/login\nAuth URL - https://qa-ids.mlb.com/oauth2/aus1lbfnhjui88leR0h8/v1/authorize\nAccess Token URL - https://qa-ids.mlb.com/oauth2/aus1lbfnhjui88leR0h8/v1/token\nClient ID",
        "expected": "Note the fan access buyer token"
      },
      {
        "content": "Create F2F_Direct Offer on SEATGEEK using verification id noted in step 3\n\nSelect the method as POST\nEnter Authorization and Header details (\"x-apitoken\": \"token from above step\")\nRequest URL: https://test.pvapi.provenue.com/offers/f2fDirect\n\n{\n  \"offer\": {\n    \"marketplaceOfferId\": \"SEATGEEK_F2F_direct1\",\n    \"tickets\": [        {\n            \"verificationId\": \"{{vid1}}\",\n            \"ticketPrice\": {\n                \"currencyCode\": \"USD\",\n                \"value\": \"100.00\"\n            }        },\n        {\n            \"verificationId\": \"{{vid2}}\",\n            \"ticketPrice\": {\n                \"currencyCode\": \"USD\",\n                \"value\": \"100.00\"\n            }        }    ],\n    \"sellerToolType\":\"testsellertype324234\",\n\"team\": {\n\"id\": 108\n},\n    \"sellerAccount\": {\n        \"email\": \"bddirectqa1@tickets.com\",\n        \"patronId\": 38622\n    }  }}",
        "expected": "Verify the tickets are listed successfully and below values displayed as expected in Response:\n-offer.id\n-offer.status: OPEN\n-marketplaceOfferId\n-marketplace.code: SEATGEEK\n-marketplace.description: SeatGeek\n-requestType: F2F_DIRECT\n-tickets.status: OPEN\n- Verification Id matches provided verification id\n-tickets.marketActionStatus: SUCCESS\n-tickets.sellableStatus: LISTED_ONLY_IN_CURRENT_MARKETPLACE\n-patronAccounts\n\nNote the Offer Id\n\nVerify the Market Offer Details in PV UI:\nTicket Services -> Market Offer Search -> Enter External offer Id -> Offer status: open\nTicket Services -> Seat History Search -> Enter details -> Offer status: open\nTicket Services -> Order Page -> Click on Resale Link -> Offer status\n\nVerify the DB details:\n'ticket' table -> MARKET_OFFER_STATUS_CODE: O, MARKET_OFFER_TYPE_CODE: RS, MARKET_OFFER_TYPE_CODE: SG, MARKETPLACE_LAST_UPDATED_DATE"
      },
      {
        "content": "Purchase F2F_Direct Listed ticket from the SeatGeek listing using a buyer account that already exists in PV and seller credit \"false\"\n\nSelect the method as POST\nRequest URL: https://test.pvapi.provenue.com/offers/{{vofferid}}/buy\n\n{\n    \"offer\": {\n        \"tickets\": [\n            {\n                \"verificationId\": \"{{vid1}}\",\n                \"soldTicketPrice\": {\n                    \"currencyCode\": \"USD\",\n                    \"value\": \"100.00\"\n                }            },            {\n                \"verificationId\": \"{{vid2}}\",\n                \"soldTicketPrice\": {\n                    \"currencyCode\": \"USD\",\n                    \"value\": \"100.00\"\n                }           }        ]    },\n    \"buyerAccount\": {\n        \"firstName\": \"Jdirect223\",\n        \"lastName\": \"Patron88\",\n        \"email\": \"Darlene.Steuber@example.com\"\n    },\n    \"sellerAccount\": {\n        \"firstName\": \"Bdpatron\",\n        \"lastName\": \"Bdpatron\",\n        \"email\": \"bddirectqa1@tickets.com\",\n        \"mobilePhone\": {\n            \"countryCode\": \"USA\",\n            \"number\": \"555-555-5555\"\n        }\n    },\n    \"marketplaceTransactionId\": \"1234\",\n    \"totalSalesAmount\": {\n        \"currencyCode\": \"USD\",\n        \"value\": \"225.00\"\n    },\n    \"sellerFee\": {\n        \"total\": {\n            \"currencyCode\": \"USD\",\n            \"value\": \"20.00\"\n        },\n        \"inclusive\": true\n    },    \"buyerFee\": {\n        \"total\": {\n            \"currencyCode\": \"USD\",\n            \"value\": \"25.00\"\n        },\n        \"inclusive\": false\n    },\n    \"sellerPayoutToAccountCredit\": false,\n    \"sellerProceeds\": {\n        \"currencyCode\": \"USD\",\n        \"value\": \"180.00\"\n    }}",
        "expected": "Verify the Tickets are purchased off Secondary Market Place successfully and below values displayed as expected in Response:\n-offer.id\n-offer.status: SOLD\n-marketplaceOfferId\n-requestType: F2F_DIRECT\n-marketType: SECONDARY\n-buyerAccount\n-marketplaceTransactionId\n- Verification Id matches provided verification id\n\nVerify the Market Offer Details in PV UI:\nTicket Services -> Market Offer Search -> Enter External offer Id -> Offer status: Completed\nTicket Services -> Seat History Search -> Enter details -> Offer status: Completed\nTicket Services -> Order Page -> Click on Resale Link -> Offer status: Completed and Tickets status: Inactive\n\nVerify the DB details:\n'ticket' table -> MARKET_OFFER_STATUS_CODE: M, MARKET_OFFER_TYPE_CODE: RS, MARKETPLACE_TYPE_CODE: SG, MARKETPLACE_LAST_UPDATED_DATE, current_sold_market_offer_id\n\n'MARKET_OFFER' table -> MARKET_OFFER_STATUS_CODE: M, MARKET_OFFER_TYPE_CODE: RS, BUYER_PATRON_ACCOUNT_ID, SELLER_PATRON_ACCOUNT_ID, MARKETPLACE_TYPE_CODE: SG, LISTING_TYPE_CODE: MFD\n\n"
      },
      {
        "content": "Navigate to the Seller account Noted in Step 5 in PV UI and verify the tickets are no longer in that account",
        "expected": "Tickets are no longer associated with the Seller Account"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 33406046,
    "title": "online renewal Single Release order Email",
    "section_id": 1917406,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 391,
    "created_on": 1717090904,
    "updated_by": 333,
    "updated_on": 1729803462,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 1,
    "custom_is_automated": true,
    "custom_pv_category": 2,
    "custom_refs": "Component testcases",
    "custom_preconds": "-Create a Renewal group (renewal category: Required & Consume Credit During Online Renewal Full Optional)\r\n-Create a new package1 or associate an existing package with above Renewal Group (Check Can Be Released Online)\r\n-Create a new package2 or associate an existing package with above Renewal Group (Uncheck Can Be Released Online)\r\n-Create a new patron\r\n-Complete a Package1 reservation transaction for the above patron\r\n-Complete a Package2 reservation transaction for the above patron\r\n-Set below property enabled in PV \r\n        email.confirmation.features.enabled\r\n        email.confirmation.one.dot.two.ftl.template.enabled\r\n\temail.confirmation.online.renewal.order.centric.enabled\r\n\temail.confirmation.release.delivery.summary.enabled\r\n\temail.confirmation.scheduled.payment.order.centric.enabled\r\n\temail.confirmation.test.order.centric.with.pv.transaction\r\n\temail.confirmations.enabled.for.utility.e\r\n\temail.confirmations.enabled.for.utility.f\r\n\temail.confirmations.enabled.for.utility.msp\r\n\temail.confirmations.enabled.for.utility.r\r\n\temail.confirmations.enabled.for.utility.rai\r\n\temail.confirmations.enabled.for.utility.v\r\n\temail.enable.auto.confirm.guest_checkout\r\n\temail.enable.auto.confirm.msp\r\n\temail.enable.auto.confirm.online_renewal_checkout\r\n\temail.marketing.features.enabled\r\n\r\n\r\n\r\n- under system setup- system adminstation-codes-email service provide- define mandrill configuration as below screenshot:\r\n![](index.php?/attachments/get/13762588)\r\n\r\n\r\n\r\n",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Precondition 1:\nCreate a Renewal group (renewal category: Required & Consume Credit During Online Renewal Full Optional)\n-Login to PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Event Groups\n-Select Renewal Group from \"Event Group Type\"\n-Click New button\n-Enter the Mandatory fields\nSelect renewal category \"Required\" & Consume Credit During Online Renewal \"Full-Optional\"\n-Click Save button",
        "expected": "New Renewal Group created successfully"
      },
      {
        "content": "\t\nPrecondition 2:\nCreate a new Package1 or associate an existing Package with above Renewal Group\n-Login to PV application\n-Navigate to Package Administration\n-Search existing package\n-Assign the above Renewal Group(Renewal Group created in Precondition1) \n-Check Can Be Released Online checkbox",
        "expected": "Package created successfully & associated with Renewal Group (Check Can Be Released Online)"
      },
      {
        "content": "\t\nPrecondition 3:\nCreate a new Package2 or associate an existing Package with above Renewal Group\n-Login to PV application\n-Navigate to Package Administration\n-Search existing package\n-Assign the above Renewal Group(Renewal Group created in Precondition1)\n-Uncheck Can Be Released Online checkbox",
        "expected": "Package created successfully & associated with Renewal Group "
      },
      {
        "content": "Precondition 4\n\n-Create a new patron \n-Login to PV application\n-Navigate to Patron Management\n-Enter mandatory field & create new patron\n",
        "expected": "patron created successfully "
      },
      {
        "content": "Precondition 5:\n-Complete a Package reservation transaction for (Precondition 2)package with (Precondition 4)patron",
        "expected": "Package1 reservations transaction completed successfully"
      },
      {
        "content": "Precondition 6:\n-Complete a Package reservation transaction for (Precondition 3)package with (Precondition 4)patron",
        "expected": "Package2 reservations transaction completed successfully"
      },
      {
        "content": "Precondition 7:\n- Set below application properties set to true \nemail.confirmation.features.enabled\nemail.confirmation.one.dot.two.ftl.template.enabled\nemail.confirmation.online.renewal.order.centric.enabled\nemail.confirmation.release.delivery.summary.enabled\nemail.confirmation.scheduled.payment.order.centric.enabled\nemail.confirmation.test.order.centric.with.pv.transaction\nemail.confirmations.enabled.for.utility.e\nemail.confirmations.enabled.for.utility.f\nemail.confirmations.enabled.for.utility.msp\nemail.confirmations.enabled.for.utility.r\nemail.confirmations.enabled.for.utility.rai\nemail.confirmations.enabled.for.utility.v\nemail.enable.auto.confirm.guest_checkout\nemail.enable.auto.confirm.msp\nemail.enable.auto.confirm.online_renewal_checkout\nemail.marketing.features.enabled",
        "expected": "The application properties should be set to true\n\n"
      },
      {
        "content": "Launch Postman tool\nSelect the method as GET\nEnter Authorization and Header details\nRun Get Renewal Order Group v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/patrons/37714/renewalOrderGroups?renewalOrderCategory=ALL_UNASSIGNED_ORDERS",
        "expected": "verify \"hasReservationsThatCanBeReleased\": true displayed as expected in Response\n"
      },
      {
        "content": "Select the method as GET\nRun Get Renewal Order v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/patrons/37714/renewalOrders?renewalOrderCategory=ALL_UNASSIGNED_ORDERS&renewalGroupId=1444",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-\"hasReservationsThatCanBeReleased\": true \n-Total Amount\n-Renew together type\n-Consume Credit Value"
      },
      {
        "content": "Select the method as POST\nRun Create Cart v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/carts/renew\n\n{\n  \"renewalCartRequest\": {\n    \"renewalGroupId\": 1444,\n    \"patronAccount\": {\n      \"id\": 42556\n    },\n    \"renewalOrders\": [\n      {\n        \"order\": {\n          \"id\": 18076004\n        },\n        \"paymentPlan\": {\n          \"id\": 1182\n        }\n      }\n    ],\n    \"releaseOrders\": [\n      {\n        \"id\": 18076003\n      }\n    ]\n  }\n}",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-releasedInThisCart\": true \n-Total Amount\n-Renew together type\n-Consume Credit Value\n-orderInstallmentsSummaries\n-dueAmount\n-dueDate\n\nget the Cart id & ETag value"
      },
      {
        "content": "\t\nGet the cartId & ETag value from Create Cart response (Step 11 response)\nEnter the ETag value in header \"If-Match\" before run checkout API\n\nRun Checkout v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/carts/344496119/checkout/renewal\n\n{\n  \"cart\": {\n    \"id\": 352226010,\n    \"payments\": [\n      {\n        \"amount\": {\n          \"currencyCode\": \"USD\",\n          \"value\": 75\n        },\n        \"paymentMethod\": {\n          \"id\": 6\n        },\n        \"digitalWalletItem\": {\n          \"id\": \"21340001\"\n        },\n        \"cardSecurityCode\": \"200\",\n        \"externallyAuthorized\": false\n      }\n    ],\n    \"orderInstallmentsSummaries\": [\n      {\n        \"order\": {\n          \"id\": 18076003\n        },\n        \"paymentPlan\": {\n          \"id\": 2322\n        }\n      },\n      {\n        \"order\": {\n          \"id\": 18076004\n        },\n        \"paymentPlan\": {\n          \"id\": 1182\n        },\n        \"installments\": [\n          {\n            \"installmentDate\": \"2024-07-31\",\n            \"scheduledPayments\": [\n              {\n                \"amount\": {\n                  \"value\": 75,\n                  \"currencyCode\": \"USD\"\n                },\n                \"digitalWalletItem\": {\n                  \"id\": 21340001\n                }\n              }\n            ]\n          }\n        ]\n      }\n    ],\n    \"transactionPatronAccount\": {\n      \"id\": 42556,\n      \"accountName\": \"Email250, Mpv\"\n    }\n  }\n}",
        "expected": "Cart checkout should complete successfully\nVerify below values displayed as expected in Response\n-Orders\n-releasedInThisCart\": true\n-CreditsApplied Amount\n-orderInstallmentsSummaries\n-AppliedCreditAmount\n-dueAmount\n-dueDate"
      },
      {
        "content": "Verify that the order centric mail is triggered ",
        "expected": "The mail should be received at the patrons primary email address "
      },
      {
        "content": "Verify the contents on the email ",
        "expected": "The mail should contain the following details :\n- Patron Details (Account ID , Account Name)\n- Itemized listing of all tickets in the order along with Ticket Type, Price, Qty and Amount \n- RELEASED TICKETS Section with  Released Order Number  & Paid in transaction:0.00\n- Order Number \n- Total Amount\n- Handling /service Charges \n- Due Amount already paid \n- Installment Dates \n- Future Installment amounts\n- Payment Method Details (Card number in encrypted format , Authorization number , Amount )"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 33426823,
    "title": "online renewal Multiple Release order Email",
    "section_id": 1917406,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 391,
    "created_on": 1717429126,
    "updated_by": 333,
    "updated_on": 1729803462,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 2,
    "custom_is_automated": true,
    "custom_pv_category": 2,
    "custom_refs": "Component testcases",
    "custom_preconds": "-Create a Renewal group (renewal category: Required & Consume Credit During Online Renewal Full Optional)\r\n-Create a new package1 or associate an existing package with above Renewal Group (Check Can Be Released Online)\r\n-Create a new package1 or associate an existing package with above Renewal Group (Check Can Be Released Online)\r\n-Create a new package2 or associate an existing package with above Renewal Group (Uncheck Can Be Released Online)\r\n-Create a new patron\r\n-Complete a Package1 reservation transaction for the above patron\r\n-Complete a Package2 reservation transaction for the above patron\r\n-Complete a Package2 receivable transaction for the above patron\r\n-Set below property enabled in PV \r\n        email.confirmation.features.enabled\r\n        email.confirmation.one.dot.two.ftl.template.enabled\r\n\temail.confirmation.online.renewal.order.centric.enabled\r\n\temail.confirmation.release.delivery.summary.enabled\r\n\temail.confirmation.scheduled.payment.order.centric.enabled\r\n\temail.confirmation.test.order.centric.with.pv.transaction\r\n\temail.confirmations.enabled.for.utility.e\r\n\temail.confirmations.enabled.for.utility.f\r\n\temail.confirmations.enabled.for.utility.msp\r\n\temail.confirmations.enabled.for.utility.r\r\n\temail.confirmations.enabled.for.utility.rai\r\n\temail.confirmations.enabled.for.utility.v\r\n\temail.enable.auto.confirm.guest_checkout\r\n\temail.enable.auto.confirm.msp\r\n\temail.enable.auto.confirm.online_renewal_checkout\r\n\temail.marketing.features.enabled\r\n\r\n\r\n\r\n- under system setup- system adminstation-codes-email service provide- define mandrill configuration as below screenshot:\r\n![](index.php?/attachments/get/13762588)\r\n\r\n\r\n\r\n",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Precondition 1:\nCreate a Renewal group (renewal category: Required & Consume Credit During Online Renewal Full Optional)\n-Login to PV application\n-Navigate to Ticketing Setup\n-Select the supplier from Supplier Administration\n-Click Event Groups\n-Select Renewal Group from \"Event Group Type\"\n-Click New button\n-Enter the Mandatory fields\nSelect renewal category \"Required\" & Consume Credit During Online Renewal \"Full-Optional\"\n-Click Save button",
        "expected": "New Renewal Group created successfully"
      },
      {
        "content": "\t\nPrecondition 2:\nCreate a new Package1 or associate an existing Package with above Renewal Group\n-Login to PV application\n-Navigate to Package Administration\n-Search existing package\n-Assign the above Renewal Group(Renewal Group created in Precondition1) \n-Check Can Be Released Online checkbox",
        "expected": "Package created successfully & associated with Renewal Group (Check Can Be Released Online)"
      },
      {
        "content": "\t\nPrecondition 3:\nCreate a new Package2 or associate an existing Package with above Renewal Group\n-Login to PV application\n-Navigate to Package Administration\n-Search existing package\n-Assign the above Renewal Group(Renewal Group created in Precondition1)\n-Uncheck Can Be Released Online checkbox",
        "expected": "Package created successfully & associated with Renewal Group "
      },
      {
        "content": "Precondition 4\n\n-Create a new patron \n-Login to PV application\n-Navigate to Patron Management\n-Enter mandatory field & create new patron\n",
        "expected": "patron created successfully "
      },
      {
        "content": "Precondition 5:\n-Complete a Package reservation transaction for (Precondition 2)package with (Precondition 4)patron",
        "expected": "Package1 reservations transaction completed successfully"
      },
      {
        "content": "Precondition 6:\n-Complete a Package reservation transaction for (Precondition 2)package with (Precondition 4)patron",
        "expected": "Package1 reservations transaction completed successfully"
      },
      {
        "content": "Precondition 7:\n-Complete a Package reservation transaction for (Precondition 3)package with (Precondition 4)patron",
        "expected": ""
      },
      {
        "content": "Precondition 8:\n- Set below application properties set to true \nemail.confirmation.features.enabled\nemail.confirmation.one.dot.two.ftl.template.enabled\nemail.confirmation.online.renewal.order.centric.enabled\nemail.confirmation.release.delivery.summary.enabled\nemail.confirmation.scheduled.payment.order.centric.enabled\nemail.confirmation.test.order.centric.with.pv.transaction\nemail.confirmations.enabled.for.utility.e\nemail.confirmations.enabled.for.utility.f\nemail.confirmations.enabled.for.utility.msp\nemail.confirmations.enabled.for.utility.r\nemail.confirmations.enabled.for.utility.rai\nemail.confirmations.enabled.for.utility.v\nemail.enable.auto.confirm.guest_checkout\nemail.enable.auto.confirm.msp\nemail.enable.auto.confirm.online_renewal_checkout\nemail.marketing.features.enabled",
        "expected": "The application properties should be set to true\n\n"
      },
      {
        "content": "Launch Postman tool\nSelect the method as GET\nEnter Authorization and Header details\nRun Get Renewal Order Group v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/patrons/37714/renewalOrderGroups?renewalOrderCategory=ALL_UNASSIGNED_ORDERS",
        "expected": "verify \"hasReservationsThatCanBeReleased\": true displayed as expected in Response\n"
      },
      {
        "content": "Select the method as GET\nRun Get Renewal Order v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/patrons/37714/renewalOrders?renewalOrderCategory=ALL_UNASSIGNED_ORDERS&renewalGroupId=1444",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-\"hasReservationsThatCanBeReleased\": true \n-Total Amount\n-Renew together type\n-Consume Credit Value"
      },
      {
        "content": "Select the method as POST\nRun Create Cart v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/carts/renew\n\n{\n  \"renewalCartRequest\": {\n    \"renewalGroupId\": 1444,\n    \"patronAccount\": {\n      \"id\": 42556\n    },\n    \"renewalOrders\": [\n      {\n        \"order\": {\n          \"id\": 18086006\n        },\n        \"paymentPlan\": {\n          \"id\": 1182\n        }\n      }\n    ],\n    \"releaseOrders\": [\n      {\n        \"id\": 18086004\n      },\n      {\n        \"id\": 18086007\n      }\n    ]\n  }\n}",
        "expected": "Verify below values displayed as expected in Response\n-Renewal Orders\n-Orders\n-releasedInThisCart\": true \n-Total Amount\n-Renew together type\n-Consume Credit Value\n-orderInstallmentsSummaries\n-dueAmount\n-dueDate\n\nget the Cart id & ETag value"
      },
      {
        "content": "\t\nGet the cartId & ETag value from Create Cart response (Step 11 response)\nEnter the ETag value in header \"If-Match\" before run checkout API\n\nRun Checkout v2 API\n\nhttps://ph31mldvapppvn10.back.tickets.com:18443/api/v2/carts/344496119/checkout/renewal\n\n{\n  \"cart\": {\n    \"id\": 352236015,\n    \"payments\": [\n      {\n        \"amount\": {\n          \"currencyCode\": \"USD\",\n          \"value\": 75\n        },\n        \"paymentMethod\": {\n          \"id\": 6\n        },\n        \"digitalWalletItem\": {\n          \"id\": \"21340001\"\n        },\n        \"cardSecurityCode\": \"200\",\n        \"externallyAuthorized\": false\n      }\n    ],\n    \"orderInstallmentsSummaries\": [\n      {\n        \"order\": {\n          \"id\": 18086004\n        },\n        \"paymentPlan\": {\n          \"id\": 2322\n        }\n      },\n      {\n        \"order\": {\n          \"id\": 18086006\n        },\n        \"paymentPlan\": {\n          \"id\": 1182\n        },\n        \"installments\": [\n          {\n            \"installmentDate\": \"2024-07-31\",\n            \"scheduledPayments\": [\n              {\n                \"amount\": {\n                  \"value\": 75,\n                  \"currencyCode\": \"USD\"\n                },\n                \"digitalWalletItem\": {\n                  \"id\": 21340001\n                }\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"order\": {\n          \"id\": 18086007\n        },\n        \"paymentPlan\": {\n          \"id\": 2322\n        }\n      }\n    ],\n    \"transactionPatronAccount\": {\n      \"id\": 42556,\n      \"accountName\": \"Email250, Mpv\"\n    }\n  }\n}\n",
        "expected": "Cart checkout should complete successfully\nVerify below values displayed as expected in Response\n-Orders\n-releasedInThisCart\": true\n-CreditsApplied Amount\n-orderInstallmentsSummaries\n-AppliedCreditAmount\n-dueAmount\n-dueDate"
      },
      {
        "content": "Verify that the order centric mail is triggered ",
        "expected": "The mail should be received at the patrons primary email address "
      },
      {
        "content": "Verify the contents on the email ",
        "expected": "The mail should contain the following details :\n- Patron Details (Account ID , Account Name)\n- Itemized listing of all tickets in the order along with Ticket Type, Price, Qty and Amount \n- RELEASED TICKETS Section with  Released Order Number  & Paid in transaction:0.00\n- Order Number \n- Total Amount\n- Handling /service Charges \n- Due Amount already paid \n- Installment Dates \n- Future Installment amounts\n- Payment Method Details (Card number in encrypted format , Authorization number , Amount )"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 33779965,
    "title": "Complete a single event ticket purchase totaling between $35-$2950 using Zip payment method (API)",
    "section_id": 1949342,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 391,
    "created_on": 1722267557,
    "updated_by": 333,
    "updated_on": 1729803462,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 1,
    "custom_is_automated": true,
    "custom_pv_category": 2,
    "custom_refs": "Component testcases",
    "custom_preconds": "-Set Application property buy.now.pay.later.features.enabled should be true\r\n-Create Buy Now Pay Later Provider\r\n-Assign Buy Now Pay Later Provider at supplier (Event Access level) \r\n-Create a Event/associate an existing event with above supplier\r\n-Complete a single event ticket purchase totaling between $35 to $2950 using Zip payment method\r\n\r\n\r\n\r\n",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Precondition 1:\nSet Application property buy.now.pay.later.features.enabled should be true\n-Login to PV application\n-Navigate to System Administration-->Application Properties\n-Click New\n-Enter the(Property Key/Description &Property Value)\n-Click save\n",
        "expected": "The application properties should be set to true\n\n"
      },
      {
        "content": "Precondition 2:\nCreate Buy Now Pay Later Provider\n-Login to PV application\n-Navigate to System Administration-->Codes\n-Select the  Buy Now Pay Later Provider\n-Click New\nEnter the mandatory field & click save button",
        "expected": "Buy Now Pay Later Provider created successfully"
      },
      {
        "content": "Precondition 3:\nAssign Buy Now Pay Later Provider at supplier (Event Access level) \n-Login to PV application\n-Navigate to Ticketing Setup-->Supplier Administration\n-Select the supplier\n-navigate to Event Access\n-Select Set/Modify \"General\" \n-new Buy Now Pay Later Provider label and dropdown should display at EXTERNAL SETTINGS\n-Set the BNPL Provider & click apply changes\n\nNote: BNPL Provider is mapped at an agency-context level",
        "expected": "Assign Buy Now Pay Later Provider at supplier (Event Access level) "
      },
      {
        "content": "Precondition 4:\nCreate a new event event with above Buy Now Pay Later Provider\n-Login to PV application\n-Navigate to Event Administration\n-Select the Supplier(Supplier associated with BNPLP in Precondition 3)\n-Click new\n-Enter the mandatory field & click save button\n \nNote: Navigate to event access & confirm BNPL Provider is mapped at an agency-context level",
        "expected": "Event created successfully & associated with  BNPL Provider"
      },
      {
        "content": "Complete a single event ticket purchase totaling between $35 to $2950 using Zip payment method\n\n\nLOCK API\n\nPost:https://ph31mldvapppvn10.back.tickets.com:18443/api/v2/carts/lock\n\n{\n    \"lockSeats\": {\n        \"saleType\": \"SINGLE\",\n        \"accessible\": false,\n        \"numberOfSeats\": 1,\n        \"priceScales\": [\n            {\n                \"id\": \"2670\"\n            }\n        ],\n        \"sections\": [\n            {\n                \"id\": \"3196\"\n            }\n        ],\n        \"buyerTypeSeatsList\": [\n            {\n                \"numberOfSeats\": 1,\n                \"buyerType\": {\n                    \"id\": \"1201\"\n                }\n            }\n        ],\n        \"event\": {\n            \"id\": \"5750\"\n        }\n    }\n}",
        "expected": "PV’s cart response should return buyNowPayLater as TRUE\n\n{\n\t\"cart\": {\n\t\t\"buyNowPayLater\": {\n\t\t\t\"cartEligible\": true\n\t\t}\n\t}\n}\n\n"
      },
      {
        "content": "Note:cart value should between $35 to $2950\nGet the cart ID from above response\n\nCheckout API\n\nPost:https://ph31mldvapppvn10.back.tickets.com:18443/api/v2/carts/354626139/checkout\n\n\n{\n  \"cart\": {\n    \"id\": 354836019,\n    \"deliveries\": [\n      {\n        \"deliveryMethod\": {\n          \"id\": 11\n        },\n        \"person\": {\n          \"firstName\": \"Token\",\n          \"lastName\": \"Patron59\"\n        }\n      }\n    ],\n    \"payments\": [\n      {\n        \"cardExpiration\": \"2025-12\",\n        \"cardNumber\": \"4111111111111111\",\n        \"cardSecurityCode\": \"200\",\n        \"cardPresent\": false,\n        \"cardSwiped\": false,\n        \"externallyAuthorized\": false,\n        \"nameOnCard\": \"Token Patron57\",\n         \"buyNowPayLaterProvider\": {\n          \"id\": 1028\n         },\n        \"amount\": {\n          \"currencyCode\": \"USD\",\n          \"value\": 55\n        },\n        \"paymentMethod\": {\n          \"id\": 6\n        },\n        \"billingAddress\": {\n          \"address1\": \"535 Anton Blvd\",\n          \"address2\": \"\",\n          \"city\": \"Costa Mesa\",\n          \"postalCode\": \"92626\",\n          \"countryCode\": \"USA\",\n          \"subCountryCode\": \"CA\"\n        },\n        \"tokenized\": false\n      }\n    ],\n    \"totalSalesRevenue\": {\n      \"currencyCode\": \"USD\",\n      \"value\": 55\n    },\n    \"transactionPatronAccount\": {\n      \"patronContacts\": [\n        {\n          \"person\": {\n            \"firstName\": \"Token\",\n            \"lastName\": \"Patron59\"\n          },\n          \"patronContactEmails\": [\n            {\n              \"emailAddress\": \"token.patron59@ticc.com\"\n            }\n          ],\n          \"patronContactPhones\": [\n            {\n              \"mobile\": true,\n              \"primary\": true,\n              \"phone\": {\n                \"display\": \"9898989898\",\n                \"number\": \"9898989898\"\n              }\n            }\n          ],\n          \"patronContactAddresses\": [\n            {\n              \"address\": {\n                \"address1\": \"535 Anton Blvd\",\n                \"address2\": \"\",\n                \"postalCode\": \"92626\",\n                \"countryCode\": \"USA\",\n                \"subCountryCode\": \"CA\",\n                \"city\": \"Costa Mesa\"\n              }\n            }\n          ]\n        }\n      ],\n      \"patronAccountDataProtections\": []\n    }\n  }\n}",
        "expected": "Cart checkout should complete successfully\nVerify below values displayed as expected in Response\n-orderId\n-transaction id\n-patronAccounts\n-paymentMethods\n-totalSalesRevenue\n-deliveryMethods\n"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 33875192,
    "title": "Complete a single event ticket purchase totaling between $35-$2950 using Zip payment method (UI)",
    "section_id": 1977815,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 391,
    "created_on": 1723657111,
    "updated_by": 333,
    "updated_on": 1729803462,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 1,
    "custom_is_automated": true,
    "custom_pv_category": 2,
    "custom_refs": "Component testcases",
    "custom_preconds": "-Set Application property buy.now.pay.later.features.enabled should be true\r\n-Create Buy Now Pay Later Provider\r\n-Assign Buy Now Pay Later Provider at supplier (Event Access level) \r\n-Create a Event/associate an existing event with above supplier\r\n-Try to Complete a single event ticket purchase totaling less than $35 using Zip payment method\r\n- Try to Complete a single event ticket purchase totaling greater than $2950 using Zip payment method\r\n-Complete a single event ticket purchase totaling between $35 to $2950 using Zip payment method\r\n-verify ZIP details updated in patron wallet\r\n\r\n\r\n\r\n",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Precondition 1:\nSet Application property buy.now.pay.later.features.enabled should be true\n-Login to PV application\n-Navigate to System Administration-->Application Properties\n-Click New\n-Enter the(Property Key/Description &Property Value)\n-Click save\n",
        "expected": "The application properties should be set to true\n\n"
      },
      {
        "content": "Precondition 2:\nCreate Buy Now Pay Later Provider\n-Login to PV application\n-Navigate to System Administration-->Codes\n-Select the  Buy Now Pay Later Provider\n-Click New\nEnter the mandatory field & click save button",
        "expected": "Buy Now Pay Later Provider created successfully"
      },
      {
        "content": "Precondition 3:\nAssign Buy Now Pay Later Provider at supplier (Event Access level) \n-Login to PV application\n-Navigate to Ticketing Setup-->Supplier Administration\n-Select the supplier\n-navigate to Event Access\n-Select Set/Modify \"General\" \n-new Buy Now Pay Later Provider label and dropdown should display at EXTERNAL SETTINGS\n-Set the BNPL Provider & click apply changes\n\nNote: BNPL Provider is mapped at an agency-context level",
        "expected": "Assign Buy Now Pay Later Provider at supplier (Event Access level) "
      },
      {
        "content": "Precondition 4:\nCreate a new event event with above Buy Now Pay Later Provider\n-Login to PV application\n-Navigate to Event Administration\n-Select the Supplier(Supplier associated with BNPLP in Precondition 3)\n-Click new\n-Enter the mandatory field & click save button\n \nNote: Navigate to event access & confirm BNPL Provider is mapped at an agency-context level",
        "expected": "Event created successfully & associated with  BNPL Provider"
      },
      {
        "content": "Try to Complete a single event ticket purchase totaling less than $35 using Zip payment method\n-Login to MPV application\n-Click Buy Tickets\n-Select the event created in Precondition4 \n-Select the section & seats\n-Click Add to cart\n-select the method\n-application will navigate to Shopping cart page\n-Select ZIP (Buy now,pay later) payment method\n-Click \"PAY LATER WITH ZIP\" button\n\n\n",
        "expected": "application should display \"Your requested order amount of $ was less than MLB-Tickets.com's required minimum order amount of $35.00\"\n\n\n\n\n\n"
      },
      {
        "content": "Click back to MLB-Tickets.com button",
        "expected": "application should navigate to shopping cart page"
      },
      {
        "content": "Try to Complete a single event ticket purchase totaling greater than $2950 using Zip payment method\n-Login to MPV application\n-Click Buy Tickets\n-Select the event created in Precondition4 \n-Select the section & seats\n-Click Add to cart\n-select the method\n-application will navigate to Shopping cart page\n-Select ZIP (Buy now,pay later) payment method\n-Click \"PAY LATER WITH ZIP\" button\n\n\n",
        "expected": "application should display \"Your requested order amount of $ was greated than MLB-Tickets.com's required minimum order amount of $2950.00\"\n\n\n\n"
      },
      {
        "content": "Click back to MLB-Tickets.com button",
        "expected": "application should navigate to shopping cart page"
      },
      {
        "content": "Try to Complete a single event ticket purchase totaling between $35 to $2950 using Zip payment method\n-Login to MPV application\n-Click Buy Tickets\n-Select the event created in Precondition4 \n-Select the section & seats\n-Click Add to cart\n-select the method\n-application will navigate to Shopping cart page\n-Select ZIP (Buy now,pay later) payment method\n-Click \"PAY LATER WITH ZIP\" button\n-Enter the mobile number & complete the sale transaction\n\n",
        "expected": "Transaction should complete successfully via ZIP payment & order summary details should display as expected"
      },
      {
        "content": "-verify ZIP details updated in patron wallet\n\n-Login to PV application\n-Navigate to Patron Management\n-select the above transaction patron\n-Navigate to wallet\n-click credit card\n-Click show disabled checkbox\n",
        "expected": "ZIP card details should display with ZIP icon"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 33780116,
    "title": "PV admin remove BNPL as a payment method for an event after a patron has already completed a purchase for the same event using Zip",
    "section_id": 1977815,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 391,
    "created_on": 1722291010,
    "updated_by": 333,
    "updated_on": 1729803462,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 2,
    "custom_is_automated": true,
    "custom_pv_category": 2,
    "custom_refs": "Component testcases",
    "custom_preconds": "-Set Application property buy.now.pay.later.features.enabled should be true\r\n-Create Buy Now Pay Later Provider\r\n-Assign Buy Now Pay Later Provider at supplier (Event Access level) \r\n-Create a Event/associate an existing package with above supplier\r\n-Create patron with ZIP wallet\r\n-Complete a Event Sale transaction for the above patron\r\n\r\n\r\n\r\n\r\n",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Precondition 1:\nSet Application property buy.now.pay.later.features.enabled should be true\n-Login to PV application\n-Navigate to System Administration-->Application Properties\n-Click New\n-Enter the(Property Key/Description &Property Value)\n-Click save\n",
        "expected": "The application properties should be set to true\n\n"
      },
      {
        "content": "Precondition 2:\nCreate Buy Now Pay Later Provider\n-Login to PV application\n-Navigate to System Administration-->Codes\n-Select the  Buy Now Pay Later Provider\n-Click New\nEnter the mandatory field & click save button",
        "expected": "Buy Now Pay Later Provider created successfully"
      },
      {
        "content": "Precondition 3:\nAssign Buy Now Pay Later Provider at supplier (Event Access level) \n-Login to PV application\n-Navigate to Ticketing Setup-->Supplier Administration\n-Select the supplier\n-navigate to Event Access\n-Select Set/Modify \"General\" \n-new Buy Now Pay Later Provider label and dropdown should display at EXTERNAL SETTINGS\n-Set the BNPL Provider & click apply changes\n\nNote: BNPL Provider is mapped at an agency-context level",
        "expected": "Assign Buy Now Pay Later Provider at supplier (Event Access level) "
      },
      {
        "content": "Precondition 4:\nCreate a new event event with above Buy Now Pay Later Provider\n-Login to PV application\n-Navigate to Event Administration\n-Select the Supplier(Supplier associated with BNPLP in Precondition 3)\n-Click new\n-Enter the mandatory field & click save button\n \nNote: Navigate to event access & confirm BNPL Provider is mapped at an agency-context level",
        "expected": "Event created successfully & associated with  BNPL Provider"
      },
      {
        "content": "Precondition 5:\nCreate patron with ZIP wallet\n-Login to PV application\n-Navigate to Patron Management\n-Click new\n-Enter the mandatory fields & click save\n-Navigate to wallet\n-Select Payment type \"Credit card\"\n-Click new\n-Enter the mandatory fields\n(Card Type (VISA)/Card/Name on Card/Exp.Date)\n-Check Default\n-Click Save button\n\n",
        "expected": "Patron created with ZIP wallet\n\nNote: new Zip icon should display"
      },
      {
        "content": "Complete a single event ticket purchase totaling between $1500 to $3000 using Zip payment method\n-Login to PV application\n-Navigate to Ticketing-->Ticket Sales\n-Select the event created in Precondition4 \n-Assign the Financial patron created in Precondition5\n-Select the seats\n-Assign the delivery method\n-navigate to payment method\n-select the method\n-Credit cards-payments on file should display with new BNPL header column with hover text, BNPL ZIP icon & BNPL remaining balance amount should display\n-Click ok\n-Click accept payment\n-Click checkout\n\n",
        "expected": "Transaction should complete successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 33798555,
    "title": "PV admin refund a single event ticket purchase that was completed with Zip BNPL as the payment method, with the funds being returned to the appropriate Zip virtual PAN",
    "section_id": 1977815,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 391,
    "created_on": 1722378893,
    "updated_by": 333,
    "updated_on": 1729803462,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 3,
    "custom_is_automated": true,
    "custom_pv_category": 2,
    "custom_refs": "Component testcases",
    "custom_preconds": "-Set Application property buy.now.pay.later.features.enabled should be true\r\n-Create Buy Now Pay Later Provider\r\n-Assign Buy Now Pay Later Provider at supplier (Event Access level) \r\n-Create a Event/associate an existing package with above supplier\r\n-Create patron with ZIP wallet\r\n-Complete a Event Sale transaction for the above patron\r\n-Return the ticket via Event Return/Reverse utility\r\n-verify the balance in Patron management\r\n\r\n\r\n\r\n",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Precondition 1:\nSet Application property buy.now.pay.later.features.enabled should be true\n-Login to PV application\n-Navigate to System Administration-->Application Properties\n-Click New\n-Enter the(Property Key/Description &Property Value)\n-Click save\n",
        "expected": "The application properties should be set to true\n\n"
      },
      {
        "content": "Precondition 2:\nCreate Buy Now Pay Later Provider\n-Login to PV application\n-Navigate to System Administration-->Codes\n-Select the  Buy Now Pay Later Provider\n-Click New\nEnter the mandatory field & click save button",
        "expected": "Buy Now Pay Later Provider created successfully"
      },
      {
        "content": "Precondition 3:\nAssign Buy Now Pay Later Provider at supplier (Event Access level) \n-Login to PV application\n-Navigate to Ticketing Setup-->Supplier Administration\n-Select the supplier\n-navigate to Event Access\n-Select Set/Modify \"General\" \n-new Buy Now Pay Later Provider label and dropdown should display at EXTERNAL SETTINGS\n-Set the BNPL Provider & click apply changes\n\nNote: BNPL Provider is mapped at an agency-context level",
        "expected": "Assign Buy Now Pay Later Provider at supplier (Event Access level) "
      },
      {
        "content": "Precondition 4:\nCreate a new event event with above Buy Now Pay Later Provider\n-Login to PV application\n-Navigate to Event Administration\n-Select the Supplier(Supplier associated with BNPLP in Precondition 3)\n-Click new\n-Enter the mandatory field & click save button\n \nNote: Navigate to event access & confirm BNPL Provider is mapped at an agency-context level",
        "expected": "Event created successfully & associated with  BNPL Provider"
      },
      {
        "content": "Precondition 5:\nCreate patron with ZIP wallet\n-Login to PV application\n-Navigate to Patron Management\n-Click new\n-Enter the mandatory fields & click save\n-Navigate to wallet\n-Select Payment type \"Credit card\"\n-Click new\n-Enter the mandatory fields\n(Card Type (VISA)/Card/Name on Card/Exp.Date)\n-Check Default\n-Click Save button\n\n",
        "expected": "Patron created with ZIP wallet\n\nNote: new Zip icon should display"
      },
      {
        "content": "Complete a single event ticket purchase totaling between $1500 to $3000 using Zip payment method\n-Login to PV application\n-Navigate to Ticketing-->Ticket Sales\n-Select the event created in Precondition4 \n-Assign the Financial patron created in Precondition5\n-Select the seats\n-Assign the delivery method\n-navigate to payment method\n-select the method\n-Credit cards-payments on file should display with new BNPL header column with hover text, BNPL ZIP icon & BNPL remaining balance amount should display\n-Click ok\n-Click accept payment\n-Click checkout\n\n",
        "expected": "Transaction should complete successfully"
      },
      {
        "content": "Return the ticket via Event Return/Reverse utility\n-Login to PV application\n-Navigate to Event Return/Reverse\n-Enter the mandatory field in Criteria Tab\n-Navigate to Runtime options tab\nCheck \"Apply Refund To Original Credit Card\" in credit card Refund\n-Select the Liability type\n-Click Run Utility\n-",
        "expected": "Event return utility should complete successfully"
      },
      {
        "content": "verify the balance in Patron management\n-Login to PV application\n-Navigate to Patron Management \n-Search the patron \n-click wallet\nverify the credit balance\n",
        "expected": "credit should returned successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 34309230,
    "title": "Create Price point for microPricing",
    "section_id": 1994923,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 168,
    "created_on": 1731513043,
    "updated_by": 168,
    "updated_on": 1731513043,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": null,
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 34534966,
    "title": "Ticket Details Barcode",
    "section_id": 2013034,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 419,
    "created_on": 1736961724,
    "updated_by": 419,
    "updated_on": 1736961724,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": null,
    "custom_preconds": "Access to API Requests, access to MMS Data",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Lock Tickets using a Patron Account",
        "expected": "Tickets locked in Cart\nNote: Patron Account Id, First Name, Last Name, Email, Phone Number, Event Id"
      },
      {
        "content": "Check out Tickets",
        "expected": "Tickets purchased\nNote: Ticket Id, Order Id"
      },
      {
        "content": "Print the Tickets via Print API\n\nLaunch Postman tool\nSelect the method as POST\nEnter Authorization and Header details\nRequest URL: https://test.pvapi.provenue.com/v2/print\n\n{\n\"printRequest\": {\n\"printAction\": \"REISSUE_PRINT\",\n\"deliveryId\": {{deliveryId}},\n\"patronAccount\": {\n\"id\": {{pv_pid2}}\n} }\n}",
        "expected": "Tickets printed successfully and Verify below values displayed as expected in Response:\n-printStatus: SUCCESSFUL\n-numberOfTicketsPrinted\n-barcode\n\nNote the barcodes of tickets from response"
      },
      {
        "content": "Get the Tickets with Ticket Details V2 API using barcodes from above step\n\nSelect the method as GET\nEnter Authorization and Header details\nRequest URL: https://test.pvapi.provenue.com/v2/tickets?validateMarketStatuses=true&barcode={{barcode1}}&barcode={{barcode2}}&validateBarcodeStatuses=true",
        "expected": "Verify Ticket Details contains Verification Ids of the Tickets purchased above and Verify below values for all the barcodes displayed as expected in Response:\n-marketStatuses.resellable = true\n-marketStatuses.marketStatus = true\n-marketStatuses.valid = true\n-tickets.currentlyPrinted = true\n-tickets.currentlyOnMarketOffer = false\n-tickets.active = true\n\nNote the Verification Ids"
      },
      {
        "content": "Barcode Direct Ticket on SeatGeek using a new Patron email (Patron that does not exist in PV), and verification id noted in step 4\nSelect the method as POST\nRequest URL: https://test.pvapi.provenue.com/offers/barcodeDirect\n{\n\"offer\": {\n\"marketplaceOfferId\": \"sg_1032001\",\n\"tickets\": [\n{\n\"verificationId\": \"{{vid1}}\",\n\"ticketPrice\": {\n\"currencyCode\": \"USD\",\n\"value\": \"100.00\"\n} }, {\n\"verificationId\": \"{{vid2}}\",\n\"ticketPrice\": {\n\"currencyCode\": \"USD\",\n\"value\": \"100.00\"\n} } ],\n\"sellerAccount\": {\n\"firstName\": \"Jdirect223\",\n\"lastName\": \"Patron88\",\n\"email\": \"Garry.Ferry34@example.org\",\n\"mobilePhone\": {\n\"countryCode\": \"USA\",\n\"number\": \"123-456-7890\"\n} } }\n}",
        "expected": "Verify the tickets are listed successfully on SeatGeek and below values displayed as expected in Response:\n-offer.id\n-offer.status: OPEN\n-marketplaceOfferId\n-marketplace.code: SEATGEEK\n-marketplace.description: SeatGeek\n-requestType: BARCODE_DIRECT\n-tickets.status: OPEN\n- Verification Id matches provided verification id\n-tickets.marketActionStatus: SUCCESS\n-tickets.sellableStatus: LISTED_ONLY_IN_CURRENT_MARKETPLACE\n-patronAccounts\n\nNote the Offer Id"
      },
      {
        "content": "Get the Tickets with Ticket Details V2 API using barcodes from above step\n\nSelect the method as GET\nEnter Authorization and Header details\nRequest URL: https://test.pvapi.provenue.com/v2/tickets?validateMarketStatuses=true&barcode={{barcode1}}&barcode={{barcode2}}&validateBarcodeStatuses=true",
        "expected": "Verify Ticket Details contains Verification Ids of the Tickets purchased above and Verify below values for all the barcodes displayed as expected in Response:\n-marketStatuses.resellable = true\n-marketStatuses.marketStatus = true\n-marketStatuses.valid = true\n-tickets.currentlyPrinted = true\n-tickets.currentlyOnMarketOffer = true\n-tickets.active = true\n\nNote the Verification Ids"
      },
      {
        "content": "Purchase Barcode Direct Listed ticket from the Seatgeek listing using a buyer account that does exist in PV\n\nSelect the method as POST\nRequest URL: https://test.pvapi.provenue.com/offers/{{vofferid}}/buy\n\n{\n\"offer\": {\n\"tickets\": [\n{\n\"verificationId\": \"{{vid1}}\",\n\"soldTicketPrice\": {\n\"currencyCode\": \"USD\",\n\"value\": \"100.00\"\n} }, {\n\"verificationId\": \"{{vid2}}\",\n\"soldTicketPrice\": {\n\"currencyCode\": \"USD\",\n\"value\": \"100.00\"\n} } ]\n},\n\"buyerAccount\": {\n\"firstName\": \"Jdirect223\",\n\"lastName\": \"Patron88\",\n\"email\": \"shirisha.annamaneni@mlb.com\"\n},\n\"sellerAccount\": {\n\"firstName\": \"Jdirect223\",\n\"lastName\": \"Patron88\",\n\"email\": \"Garry.Ferry34@example.org\",\n\"mobilePhone\": {\n\"countryCode\": \"USA\",\n\"number\": \"555-555-5555\"\n} },\n\"marketplaceTransactionId\": \"1234\",\n\"totalSalesAmount\": {\n\"currencyCode\": \"USD\",\n\"value\": \"225.00\"\n},\n\"sellerFee\": {\n\"total\": {\n\"currencyCode\": \"USD\",\n\"value\": \"20.00\"\n},\n\"inclusive\": true\n},\n\"buyerFee\": {\n\"total\": {\n\"currencyCode\": \"USD\",\n\"value\": \"25.00\"\n},\n\"inclusive\": false\n},\n\"sellerPayoutToAccountCredit\": true,\n\"sellerProceeds\": {\n\"currencyCode\": \"USD\",\n\"value\": \"180.00\"\n}}",
        "expected": "Verify the Tickets are purchased off Secondary Market Place successfully and below values displayed as expected in Response:\n-offer.id\n-offer.status: SOLD\n-marketplaceOfferId\n-requestType: BARCODE_DIRECT\n-marketType: SECONDARY\n-buyerAccount\n-marketplaceTransactionId\n\nNote verification id"
      },
      {
        "content": "Get the Tickets with Ticket Details V2 API using Ticket Verification Id from above step\n\nSelect the method as GET\nEnter Authorization and Header details\nRequest URL: {{pv_base_url}}/v2/tickets?patronAccountId={{patronAccountId}}&verificationId={{vid1}}",
        "expected": "Verify Ticket Details contains Verification Ids of the Tickets purchased above and Verify below values for all the barcodes displayed as expected in Response:\n-marketStatuses.resellable = true\n-marketStatuses.marketStatus = true\n-marketStatuses.valid = true\n-tickets.currentlyPrinted = true\n-tickets.currentlyOnMarketOffer = false\n-tickets.active = true\n-attendingPatron.id = buyer patron account"
      },
      {
        "content": "Get the Tickets with Ticket Details V2 API using Patron Account and Event Id from above step\n\nSelect the method as GET\nEnter Authorization and Header details\nRequest URL:https://test.pvapi.provenue.com/v2/tickets?patronAccountId={{patronAccountId}}&verificationId={{vid1}}",
        "expected": "currentlyScanned = false"
      },
      {
        "content": "scan tickets for entry using Scan Api {{base_url}}/api/v2/accessControl/scans",
        "expected": "Ticket is successfully scanned"
      },
      {
        "content": "Get the Tickets with Ticket Details V2 API using Patron Account and Event Id from above step\n\nSelect the method as GET\nEnter Authorization and Header details\nRequest URL:https://test.pvapi.provenue.com/v2/tickets?patronAccountId={{patronAccountId}}&verificationId={{vid1}}",
        "expected": "currentlyScanned = true"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 34534967,
    "title": "Ballpark Ticket Details",
    "section_id": 2013034,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 419,
    "created_on": 1736961724,
    "updated_by": 419,
    "updated_on": 1736961724,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Lock Tickets using a Patron Account",
        "expected": "Tickets locked in Cart\nNote: Patron Account Id, First Name, Last Name, Email, Phone Number, Event Id"
      },
      {
        "content": "Check out Tickets",
        "expected": "Tickets purchased\nNote: Ticket Id, Order Id"
      },
      {
        "content": "Get the Tickets with Ticket Details V2 API using barcodes from above step\n\nSelect the method as GET\nEnter Authorization and Header details\nRequest URL: https://test.pvapi.provenue.com/v2/tickets?validateMarketStatuses=true&barcode={{barcode1}}&barcode={{barcode2}}&validateBarcodeStatuses=true",
        "expected": "Verify Ticket Details contains Verification Ids of the Tickets purchased above and Verify below values for all the barcodes displayed as expected in Response:\n-marketStatuses.resellable = true\n-marketStatuses.marketStatus = true\n-marketStatuses.valid = true\n-tickets.currentlyPrinted = true\n-tickets.currentlyOnMarketOffer = false\n-tickets.active = true\n\nNote the Verification Ids"
      },
      {
        "content": "Get the Tickets with Ticket Details V2 API using Patron Account and Event Id from above step\n\nSelect the method as GET\nEnter Authorization and Header details\nRequest URL:https://test.pvapi.provenue.com/v2/tickets?patronAccountId={{patronAccountId}}&verificationId={{vid1}}",
        "expected": "Verify Ticket Details contains Verification Ids of the Tickets purchased above and Verify below values for all the barcodes displayed as expected in Response:\n-marketStatuses.resellable = true\n-marketStatuses.marketStatus = true\n-marketStatuses.valid = true\n-tickets.currentlyPrinted = true\n-tickets.currentlyOnMarketOffer = false\n-tickets.active = true\n\nNote the Verification Ids"
      },
      {
        "content": "Barcode Direct Ticket on SeatGeek using a new Patron email (Patron that does not exist in PV), and verification id noted in step 4\nSelect the method as POST\nRequest URL: https://test.pvapi.provenue.com/offers/barcodeDirect\n{\n\"offer\": {\n\"marketplaceOfferId\": \"sg_1032001\",\n\"tickets\": [\n{\n\"verificationId\": \"{{vid1}}\",\n\"ticketPrice\": {\n\"currencyCode\": \"USD\",\n\"value\": \"100.00\"\n} }, {\n\"verificationId\": \"{{vid2}}\",\n\"ticketPrice\": {\n\"currencyCode\": \"USD\",\n\"value\": \"100.00\"\n} } ],\n\"sellerAccount\": {\n\"firstName\": \"Jdirect223\",\n\"lastName\": \"Patron88\",\n\"email\": \"Garry.Ferry34@example.org\",\n\"mobilePhone\": {\n\"countryCode\": \"USA\",\n\"number\": \"123-456-7890\"\n} } }\n}",
        "expected": "Verify the tickets are listed successfully on SeatGeek and below values displayed as expected in Response:\n-offer.id\n-offer.status: OPEN\n-marketplaceOfferId\n-marketplace.code: SEATGEEK\n-marketplace.description: SeatGeek\n-requestType: BARCODE_DIRECT\n-tickets.status: OPEN\n- Verification Id matches provided verification id\n-tickets.marketActionStatus: SUCCESS\n-tickets.sellableStatus: LISTED_ONLY_IN_CURRENT_MARKETPLACE\n-patronAccounts\n\nNote the Offer Id"
      },
      {
        "content": "Get the Tickets with Ticket Details V2 API using Patron Account and Event Id from above step\n\nSelect the method as GET\nEnter Authorization and Header details\nRequest URL:https://test.pvapi.provenue.com/v2/tickets?patronAccountId={{patronAccountId}}&verificationId={{vid1}}",
        "expected": "Verify Ticket Details contains Verification Ids of the Tickets purchased above and Verify below values for all the barcodes displayed as expected in Response:\n-marketStatuses.resellable = true\n-marketStatuses.marketStatus = true\n-marketStatuses.valid = true\n-tickets.currentlyPrinted = true\n-tickets.currentlyOnMarketOffer = true\n-tickets.active = true\n\nNote the Verification Ids"
      },
      {
        "content": "Purchase Barcode Direct Listed ticket from the Seatgeek listing using a buyer account that does exist in PV\n\nSelect the method as POST\nRequest URL: https://test.pvapi.provenue.com/offers/{{vofferid}}/buy\n\n{\n\"offer\": {\n\"tickets\": [\n{\n\"verificationId\": \"{{vid1}}\",\n\"soldTicketPrice\": {\n\"currencyCode\": \"USD\",\n\"value\": \"100.00\"\n} }, {\n\"verificationId\": \"{{vid2}}\",\n\"soldTicketPrice\": {\n\"currencyCode\": \"USD\",\n\"value\": \"100.00\"\n} } ]\n},\n\"buyerAccount\": {\n\"firstName\": \"Jdirect223\",\n\"lastName\": \"Patron88\",\n\"email\": \"shirisha.annamaneni@mlb.com\"\n},\n\"sellerAccount\": {\n\"firstName\": \"Jdirect223\",\n\"lastName\": \"Patron88\",\n\"email\": \"Garry.Ferry34@example.org\",\n\"mobilePhone\": {\n\"countryCode\": \"USA\",\n\"number\": \"555-555-5555\"\n} },\n\"marketplaceTransactionId\": \"1234\",\n\"totalSalesAmount\": {\n\"currencyCode\": \"USD\",\n\"value\": \"225.00\"\n},\n\"sellerFee\": {\n\"total\": {\n\"currencyCode\": \"USD\",\n\"value\": \"20.00\"\n},\n\"inclusive\": true\n},\n\"buyerFee\": {\n\"total\": {\n\"currencyCode\": \"USD\",\n\"value\": \"25.00\"\n},\n\"inclusive\": false\n},\n\"sellerPayoutToAccountCredit\": true,\n\"sellerProceeds\": {\n\"currencyCode\": \"USD\",\n\"value\": \"180.00\"\n}}",
        "expected": "Verify the Tickets are purchased off Secondary Market Place successfully and below values displayed as expected in Response:\n-offer.id\n-offer.status: SOLD\n-marketplaceOfferId\n-requestType: BARCODE_DIRECT\n-marketType: SECONDARY\n-buyerAccount\n-marketplaceTransactionId\n\nNote purchaser account id, event id"
      },
      {
        "content": "Get the Tickets with Ticket Details V2 API using Patron Account and Event Id from above step\n\nSelect the method as GET\nEnter Authorization and Header details\nRequest URL:https://test.pvapi.provenue.com/v2/tickets?patronAccountId={{patronAccountId}}&verificationId={{vid1}}",
        "expected": "Verify Ticket Details contains Verification Ids of the Tickets purchased above and Verify below values for all the barcodes displayed as expected in Response:\n-marketStatuses.resellable = true\n-marketStatuses.marketStatus = true\n-marketStatuses.valid = true\n-tickets.currentlyPrinted = true\n-tickets.currentlyOnMarketOffer = true\n-tickets.active = true\n-currentlyScanned = false\n\nNote the Verification Ids"
      },
      {
        "content": "scan tickets for entry using Scan Api {{base_url}}/api/v2/accessControl/scans",
        "expected": "Ticket is successfully scanned"
      },
      {
        "content": "Get the Tickets with Ticket Details V2 API using Patron Account and Event Id from above step\n\nSelect the method as GET\nEnter Authorization and Header details\nRequest URL:https://test.pvapi.provenue.com/v2/tickets?patronAccountId={{patronAccountId}}&verificationId={{vid1}}",
        "expected": "currentlyScanned = true"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 34780242,
    "title": "Real-Time Fraud flow - Guest cart and checkout",
    "section_id": 2035041,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 461,
    "created_on": 1744300534,
    "updated_by": 333,
    "updated_on": 1744821405,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 1,
    "custom_is_automated": true,
    "custom_pv_category": 2,
    "custom_refs": "Component testcases",
    "custom_preconds": " - setup to integrate to RT or what is needed to mock the responses should be in place based on implementation.\r\n - Application property real.time.fraud.integration.feature.enabled should be set to 'true'.\r\n - Any other properties/ permissions that will be implemented for Real-Time Fraud should also be turned on (properties to be determined) note: if we are trying to mock a RTF response scenarios this test cases should use the address and card number/ amount to mimic those responses based on the configutation and the mock that will be implemented\r\n",
    "custom_test_purpose": "Verify flow of real-time fraud via a component test - mocking MPV calls and Accertify service.",
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Call Lock seats V2 APi with the relevant headers and request (Replace eventId and patron information.)\n\nLOCK API Example:\nAddress: POST /api/v2/carts/lock\n\nContent-Type: application/json\nHeaders: {Accept=[application/json], \nAuthorization=[Basic (Password not shown)], pv-api-key=[(provided)], pv-application-id=[com.tickets.clientapp], x-function-context=[GUEST_CHECKOUT]}\nUsername: {{apiuser}}\nPV-API-Key: (valid api key)\nPayload: \n{\n    \"lockSeats\": {\n        \"event\": {\n            \"id\": 1296\n        },\n        \"numberOfSeats\": 2,\n        \"saleType\": \"SINGLE\",\n        \"transactionType\": \"SALE\",\n        \"buyerTypeSeatsList\": [\n            {\n                \"buyerType\": {\n                    \"id\": 1201\n                },\n                \"numberOfSeats\": 2\n            }\n        ]\n    }\n}",
        "expected": " - Seats are locked, Cart ID is sent back in response.\n - If any information related to RTF enabling is implemented at a event or lock seats response than we should validate that information is present"
      },
      {
        "content": "V2 checkout api for the above cart with additional Accertify fields\n\nPOST {/api/v2/carts/354836019/checkout\nContent-Type: application/json\nHeaders: {Accept=[application/json], Authorization=[Basic (Password not shown)],if-match=[\"etag from lock\"],pv-api-key=[(provided)], pv-application-id=[com.tickets.clientapp], x-function-context=[GUEST_CHECKOUT]}\nUsername: {{apiuser}}\nPV-API-Key: (valid api key)\nPayload:\n{\n\"cart\": {\n\"totalSalesRevenue\": {\n\"currencyCode\": \"USD\",\n\"value\": {{totalSalesRevenue}}\n},\n// using the sample feild and these should be updated to reflect the correct and relevant values from implementation\n\"ubaDeviceFields\": {\n\n        \"deviceTransactionID\": \"1234\",\n\n        \"sessionId\": \"5678\",\n\n        \"ubaSessionId\": \"abcd\",\n\n        \"ubaId\": \"efgh\",\n\n        \"pageId\": \"ijkl\",\n\n        \"ubaEvents\": \"mnop\",\n\n        \"userAgent\": \"qrst\",\n\n        \"ipAddress\": \"uvwx\"\n\n    },\n\n\"payments\": [\n  {\n    \"cardExpiration\": \"{{nextYear}}-12\",\n    \"cardNumber\": \"4111111111111111\",\n    \"cardPresent\": false,\n    \"cardSecurityCode\": \"111\",\n    \"cardSwiped\": \"false\",\n    \"externallyAuthorized\": false,\n    \"nameOnCard\": \"Betty Boop\",\n    \"amount\": {\n      \"currencyCode\": \"USD\",\n      \"value\": {{totalSalesRevenue}}\n    },\n    \"paymentMethod\": { \"id\": 7 },\n    \"billingAddress\": {\n      \"address1\": \"766 East Chester Street\",\n      \"address2\": \"11th floor\",\n      \"city\": \"Meridan\",\n      \"countryCode\": \"USA\",\n      \"postalCode\": \"03345\",\n      \"subCountryCode\": \"CT\",\n      \"subCountryName\": \"Connecticut\"\n    }\n  }\n]\n}\n}",
        "expected": " - The checkout call to PV should initiate a request to accertify which would evaluate the data and check out api response as 200 (in observation mode)\n - note: additional feilds any that will be sent in the checkout response should be asserted once identified and implemented."
      },
      {
        "content": "Request to accertify API should be logged (request docuemnted in the accertify integration documentation)\n\nhttps://baseball.atlassian.net/wiki/spaces/BET/pages/4643880990/Real-Time+Fraud+Decision+Accertify+Integration+-+WIP",
        "expected": "Check PV logs to see if PV initiate a call to ACCERTIFY similar to the sample, request mentioned in the design document."
      },
      {
        "content": "Response from accertify API should be logged (response mentioned in the accertify integration documentation)\nhttps://baseball.atlassian.net/wiki/spaces/BET/pages/4643880990/Real-Time+Fraud+Decision+Accertify+Integration+-+WIP",
        "expected": "Check PV logs to see if PV dcoumented the response back from ACCERTIFY based on the sample, request mentioned in the design document.\nThe response score is documented into PV DB"
      },
      {
        "content": "PV should also initiate a call to Payment processor after the response from accertify to process the credit card for payment",
        "expected": "verify the call is made to processor or dummy in this case to process the payment and we get response back which will be used in the checkout"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  },
  {
    "id": 34780701,
    "title": "Real-Time Fraud flow - Authenticated cart and checkout",
    "section_id": 2035041,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 461,
    "created_on": 1744389750,
    "updated_by": 333,
    "updated_on": 1744837174,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 633438,
    "display_order": 2,
    "custom_is_automated": true,
    "custom_pv_category": 2,
    "custom_refs": "Component testcases",
    "custom_preconds": "- setup to integrate to RT or what is needed to mock the responses should be in place based on implementation.\r\n- Application property real.time.fraud.integration.feature.enabled should be set to 'true'.\r\n- Any other properties/ permissions that will be implemented for Real-Time Fraud should also be turned on (properties to be determined)\r\nnote:\r\nif we are trying to mock a RTF response scenarios this test cases should use the address and card number/ amount to mimic those responses based on the configutation and the mock that will be implemented",
    "custom_test_purpose": "Verify flow of real-time fraud via a component test - mocking MPV calls and Accertify service.",
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "Call Lock seats V2 APi with the relevant headers and request (Replace eventId and patron information.)\n\nLOCK API Example:\nAddress: POST /api/v2/carts/lock\nContent-Type: application/json\nHeaders: {Accept=[application/json], Authorization=[Basic (Password not shown)], pv-application-id=[com.tickets.clientapp], \nUsername: {{apiuser}}\nPV-API-Key: (valid api key)\nPayload: \n{\"lockSeats\":{\"event\":{\"id\":5632},\"transactionPatronAccount\":{\"id\":54883},\"numberOfSeats\":2,\"creditsRequested\":true,\"saleType\":\"SINGLE\",\"buyerTypeSeatsList\":[{\"buyerType\":{\"id\":1201},\"numberOfSeats\":2}],\"priceScales\":[{\"id\":2665}],\"accessible\":\"false\",\"sections\":[{\"id\":3183}]}}",
        "expected": "Seats are locked, Cart ID is sent back in response.\nIf any information related to RTF enabling is implemented at a event or lock seats response than we should validate that information is present"
      },
      {
        "content": "Assign Delivery to the locked seats.\n\nNOTE:  Get the cart ID from step 1 response.\n\nAddress: PUT /api/v2/carts/350256334/deliveries/assign\nContent-Type: application/json\nHeaders: {Accept=[application/json], Authorization=[Basic (Password not shown)],if-match=[\"ETAGE from lock\"],pv-application-id=[com.tickets.clientapp], \nUsername: {{apiuser}}\nPV-API-Key: (valid api key)\nPayload: \n{\"deliveryAssignment\":{\"deliveries\":[{\"person\":{\"firstName\":\"Rivi\",\"lastName\":\"Asd\"},\"deliveryMethod\":{\"id\":10},\"emailAddress\":\"rivisaf283@dpcos.com\"}]}}",
        "expected": "Should get a successful response back - 200 With a delivery assigned and update sales amount is   Example response:\n"
      },
      {
        "content": "V2 checkout api for the above cart with additional accerify feilds\n\nPOST {/api/v2/carts/350256334/checkout\nContent-Type: application/json\nHeaders: {Accept=[application/json], Authorization=[Basic (Password not shown)],if-match=[\"ETAG from Assigndelivery\"],pv-application-id=[com.tickets.clientapp], \nUsername: {{apiuser}}\nPV-API-Key: (valid api key)\nPayload: \n{\n  \"cart\": {\n    \"totalSalesRevenue\": {\n      \"currencyCode\": \"USD\",\n      \"value\": {{totalSalesRevenue}}\n    },\n// using the sample fields and these should be updated to reflect the correct and relevant values from implementation\n\"ubaDeviceFields\": {\n\n\t\t\t\"deviceTransactionID\": \"1234\",\n\n\t\t\t\"sessionId\": \"5678\",\n\n\t\t\t\"ubaSessionId\": \"abcd\",\n\n\t\t\t\"ubaId\": \"efgh\",\n\n\t\t\t\"pageId\": \"ijkl\",\n\n\t\t\t\"ubaEvents\": \"mnop\",\n\n\t\t\t\"userAgent\": \"qrst\",\n\n\t\t\t\"ipAddress\": \"uvwx\"\n\n\t\t},\n\n    \"payments\": [\n      {\n        \"cardExpiration\": \"{{nextYear}}-12\",\n        \"cardNumber\": \"4111111111111111\",\n        \"cardPresent\": false,\n        \"cardSecurityCode\": \"111\",\n        \"cardSwiped\": \"false\",\n        \"externallyAuthorized\": false,\n        \"nameOnCard\": \"Betty Boop\",\n        \"amount\": {\n          \"currencyCode\": \"USD\",\n          \"value\": {{totalSalesRevenue}}\n        },\n        \"paymentMethod\": { \"id\": 7 },\n        \"billingAddress\": {\n          \"address1\": \"766 East Chester Street\",\n          \"address2\": \"11th floor\",\n          \"city\": \"Meridan\",\n          \"countryCode\": \"USA\",\n          \"postalCode\": \"03345\",\n          \"subCountryCode\": \"CT\",\n          \"subCountryName\": \"Connecticut\"\n        }\n      }\n    ]\n        \n  }\n}\n",
        "expected": "The checkout call to PV should initiate a request to accertify which would evaluate the data and check out api response as 200 (in observation mode)\nnote: additional feilds any that will be sent in the checkout response should be asserted once identified and implemented."
      },
      {
        "content": "Request to accertify API should be logged (request docuemnted in the accertify integration documentation)\n\nhttps://baseball.atlassian.net/wiki/spaces/BET/pages/4643880990/Real-Time+Fraud+Decision+Accertify+Integration+-+WIP \n",
        "expected": "Check PV logs to see if PV initiate a call to ACCERTIFY similar to the sample, request mentioned in the design document."
      },
      {
        "content": "Response from accertify API should be logged (response mentioned in the accertify integration documentation)\nhttps://baseball.atlassian.net/wiki/spaces/BET/pages/4643880990/Real-Time+Fraud+Decision+Accertify+Integration+-+WIP ",
        "expected": "Check PV logs to see if PV dcoumented the response back from ACCERTIFY based on the sample, request mentioned in the design document.\nThe response score is documented into PV DB"
      },
      {
        "content": "PV should also initiate a call to Payment processor after the response from accertify to process the credit card for payment",
        "expected": "verify the call is made to processor or dummy in this case to process the payment and we get response back which will be used in the checkout"
      }
    ],
    "custom_comment": null,
    "custom_jiras": null
  }
]