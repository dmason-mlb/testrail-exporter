[
  {
    "id": 30696334,
    "title": "Verifying whether an incorrect error message is displayed when From Date comes after To Date in Data Range fields of Event Advance search",
    "section_id": 1685219,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-15560",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 27,
    "custom_refs": "C68875",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the application.\r\n2. Login using valid username and password.\r\n2. Navigate to Ticketing tab and select Ticket Sales portal\r\n3. Click on Advanced Search button\r\n4. Enter/Select a date on 'Date' field such that the 'From Date' field is greater than 'To Date' field.\r\n5. Press enter key or Click on Find button.\r\n6. Click on Logout link",
        "expected": "1. The login should be successful and the 'Home' page  of the application should be displayed.\r\n2. The Ticket Sales portal should be dispaleyd.\r\n3. Advance Search should be opened\r\n4. From date should come after to date\r\n5. Error msg:\" The to date must come after the from date\" should be displayed.\r\n6. User should be logged out of the application successfully."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "1.3"
  },
  {
    "id": 30696335,
    "title": "Unexpected Error occurs while creating a Payment Receivable - 14701",
    "section_id": 1685219,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-14701",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 13,
    "custom_refs": "C68876",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to PVNG\r\n2. 2. Navigate to Ticket Sales\r\n3. Select any Event and add a new patron\r\n4. Input the number of seats and click on Best Available button\r\n5. Select and apply any delivery method that requires patron\r\n6. Navigate to Receivables tab.\r\n7. 1. Select create tab and go to Custom Plan\r\n2. Check Custom Plan and input required Quantity and Interval from Quantity and Interval fields\r\n3. Select an option from drop down list and click on Build button\r\n4. Choose a Receivable note type from drop down and click on Apply Receivable button",
        "expected": "1. Home page of the application displayed\r\n2. Ticket Sale portal should be displayed\r\n3. Patron should be added for the selected event\r\n4. The page should be displayed with cart details\r\n5. Delivery method should be added\r\n6. Reveivables page should be displayed\r\n7. The message \" An unexpected errror occured and the operation cannot be completed\" should not get display"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.30"
  },
  {
    "id": 30696336,
    "title": "Verify locking additional seats for an existing package offer or locking seats for a second package",
    "section_id": 1685220,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-20194",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 13,
    "custom_refs": "C40160",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the below package link \r\n\r\nhttp://pvoqa1.tickets.com/buy/MLBEventInfo?pid=7125099&agency=NGBT_ROYALS_MLB\r\n2. select number of seats and click on continue\r\n3. Click on add  button to add more seats and select number of seats\r\n4. Repeat the same steps for event link \r\n\r\nhttp://pvoqa1.tickets.com/buy/MLBEventInfo?pid=7125049&agency=NGBT_ROYALS_MLB",
        "expected": "1. User should be able to launch\r\n2. Seats should be successfully added to shopping cart\r\n3. Additional seats should be successfully added to shopping cart\r\n4. Additional seats are successfully added to shopping cart"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.5.00"
  },
  {
    "id": 31015038,
    "title": "Verify locking additional seats for an existing package offer or locking seats for a second package",
    "section_id": 1685220,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-20194",
    "created_by": 391,
    "created_on": 1689628913,
    "updated_by": 391,
    "updated_on": 1689628913,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 13,
    "custom_refs": "C40160",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the below package link \r\n\r\nhttp://pvoqa1.tickets.com/buy/MLBEventInfo?pid=7125099&agency=NGBT_ROYALS_MLB\r\n2. select number of seats and click on continue\r\n3. Click on add  button to add more seats and select number of seats\r\n4. Repeat the same steps for event link \r\n\r\nhttp://pvoqa1.tickets.com/buy/MLBEventInfo?pid=7125049&agency=NGBT_ROYALS_MLB",
        "expected": "1. User should be able to launch\r\n2. Seats should be successfully added to shopping cart\r\n3. Additional seats should be successfully added to shopping cart\r\n4. Additional seats are successfully added to shopping cart"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.5.00"
  },
  {
    "id": 30696337,
    "title": "Verify the best seat rollver message is cleared on tickets sales portal while navigating from other portals.",
    "section_id": 1685220,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17440",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C40161",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre requisite:\r\nAt Package list level:\r\nset 'Best Seat Rollover' setting as 'Any scale'.\r\n1.Create a Flex package in PV for a three games with min and max limit as 1 to 3.\r\n2.One event in the flex package should have no availability to the selected section\r\n3.package list seat type is 'Any Seat'.\r\n2. 1. Launch PV application.\r\n2. Login using valid username and password.\r\n3. 1. Enter the package name configured above in the search field\r\n2. Click on Find button\r\n4. 1. Select the 3 events under the package event list\r\n2.Click on Continue button\r\n5. 1. Enter patron name in search field.\r\n2. Click on Find button\r\n3. Click on Set as patron button.\r\n6. 1. Enter the required number of seats and select the section as mentioned in pre requisite.\r\n7. Click on lock seats button.\r\n8. enter the cart details and complete the transaction\r\n9. Go to ticket services and verify the seat details are displaying correctly.\r\n10. Select Logout\r\n11. navigate to ticket sales portal and verify the best seat rollver message is cleared on tickets sales portal while navigating from other portals.",
        "expected": "1. Prerequiste should be successful.\r\n2. The user should be logged in successfully.\r\n3. Events under the flex package event list should be displayed.\r\n4. Seat selection page should be displayed\r\n5. Patron name should be displayed in the Patron portal\r\nSeat selection portal should be displayed\r\n6. cart should be displayed with details of seats requested and section selected.\r\n7. \"Unable to fulfill seat requests to match the selected criteria for the following event(s): SEC_FLEXEVENT2. The best available seat(s) have been locked \"\r\nas any scale logic is used for one of the event.\r\n8. Transaction should be completed successfully.\r\n9. seat details along with the selected section should display correctly.\r\n10. User should be logged out from the application\r\n11. previpusly selected package should display but best rollver message should be cleared on ticket sales portal."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.40"
  },
  {
    "id": 30696338,
    "title": "Verify the best seat rollover functionality for a flex package , seat type as any seat in the ProVenue best available UI when Best Seat Rollover option is set to Not available for one of the PEL.",
    "section_id": 1685220,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17175",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C40162",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre requisite:\r\nCreate a Package with 2 PELs as mentioned below\r\nAt Package list level: for PEL1\r\nset 'Best Seat Rollover' setting as 'Not available'.\r\n1.Create a Flex PEL in PV for a three games with min and max limit as 1 to 3.\r\n2.One event in the flex package should have no availability to the selected price scale\r\n3.seat type as 'any seat' in the ProVenue best available UI\r\nAt Package list level: for PEL2\r\nset 'Best Seat Rollover' setting as 'Any scale'.\r\n1.Create a Flex PEL in PV for a three games with min and max limit as 1 to 3.\r\n2.One event in the flex package should have no availability to the selected price scale\r\n3.seat type as 'any seat' in the ProVenue best available UI\r\n2. 1. Launch PV application.\n2. Login using valid username and password.\r\n3. 1. Enter the package name configured above in the search field\n2. Click on Find button\r\n4. 1. Select the 3 events under the package event list\n2. Click on Continue button\r\n5. 1. Enter patron name in search field.\n2. Click on Find button\n3. Click on Set as patron button\r\n6. 1. Enter the required number of seats and select the price scale as mentioned in pre requisite.\r\n7. Click on lock seats button.\r\nVerify user able to see error message\r\n\"The system was unable to lock seats matching your request\"\r\n8. Select another price scale and click on lock seats.\r\n9. Click on lock seats button.\r\n10. enter the cart details and complete the transaction\r\n11. Go to ticket services and verify the seat details are displaying correctly.\r\n12. Select Logout",
        "expected": "1. Prerequiste should be successful.\r\n2. The user should be logged in successfully.\r\n3. Events under the flex package event list should be displayed\r\n4. Seat selection page should be displayed\r\n5. Patron name should be displayed in the Patron portal\nSeat selection portal should be displayed\r\n6. cart should be displayed with details of seats requested and price scale selected.\r\n7. \"The system was unable to lock seats matching your request\" error message should be displayed.\r\n8. user should be navigated to next PEL to selet the seats\r\n9. \"Unable to fulfill seat requests in the requested price scale for the following event(s):,BR FLEX EVE2. The best available seat(s) have been locked. \" \r\nas any scale logic is used for one of the event.\r\n10. Transaction should be completed successfully.\r\n11. seat details along with the selected price scale should display correctly.\r\n12. User should be logged out from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.40"
  },
  {
    "id": 30696339,
    "title": "Verify the best seat rollover functionality for a flex package , package list seat type is Any Seat when Best Seat Rollover option is set to Not available for one of the PEL.",
    "section_id": 1685220,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17175",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C40163",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre requisite:\r\nCreate a Package with 2 PELs as mentioned below\r\nAt Package list level: for PEL1\r\nset 'Best Seat Rollover' setting as 'Not available'.\r\n1.Create a Flex PEL in PV for a three games with min and max limit as 1 to 3.\r\n2.One event in the flex package should have no availability to the selected price scale\r\n3.package list seat type is Any Seat \r\nAt Package list level: for PEL2\r\nset 'Best Seat Rollover' setting as 'Any scale'.\r\n1.Create a Flex PEL in PV for a three games with min and max limit as 1 to 3.\r\n2.One event in the flex package should have no availability to the selected price scale\r\n3.package list seat type is Any Seat\r\n2. Click on lock seats button.\r\nVerify user able to see error message\r\n\"The system was unable to lock seats matching your request\"\r\n3. 1. Launch PV application.\n2. Login using valid username and password.\r\n4. 1. Enter the package name configured above in the search field\n2. Click on Find button\r\n5. 1. Select the 3 events under the package event list\n2. Click on Continue button\r\n6. 1. Enter patron name in search field.\n2. Click on Find button\n3. Click on Set as patron button\r\n7. 1. Enter the required number of seats and select the price scale as mentioned in pre requisite.\r\n8. Select another price scale and click on lock seats.\r\n9. Click on lock seats button.\r\n10. enter the cart details and complete the transaction\r\n11. Go to ticket services and verify the seat details are displaying correctly.\r\n12. Select Logout",
        "expected": "1. Prerequiste should be successful.\r\n2. \"The system was unable to lock seats matching your request\" error message should be displayed.\r\n3. The user should be logged in successfully.\r\n4. Events under the flex package event list should be displayed\r\n5. Seat selection page should be displayed\r\n6. Patron name should be displayed in the Patron portal\nSeat selection portal should be displayed\r\n7. cart should be displayed with details of seats requested and price scale selected.\r\n8. user should be navigated to next PEL to selet the seats\r\n9. \"Unable to fulfill seat requests in the requested price scale for the following event(s):,BR FLEX EVE2. The best available seat(s) have been locked. \" \r\nas any scale logic is used for one of the event.\r\n10. Transaction should be completed successfully.\r\n11. seat details along with the selected price scale should display correctly.\r\n12. User should be logged out from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.40"
  },
  {
    "id": 30696340,
    "title": "Verify the best seat rollover functionality for a flex package When Best Seat Rollover option is set to Any scale and Any Seat in the ProVenue best available UI",
    "section_id": 1685220,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17175",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C40164",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre requisite:\r\nAt Package list level:\r\nset 'Best Seat Rollover' setting as 'Any scale'.\r\n1.Create a Flex package in PV for a three games with min and max limit as 1 to 3.\r\n2.One event in the flex package should have no availability to the selected price scale\r\n3.seat type as 'any seat' in the ProVenue best available UI\r\n2. 1. Launch PV application.\r\n2. Login using valid username and password.\r\n3. 1. Enter the package name configured above in the search field\r\n2. Click on Find button\r\n4. 1. Select the 3 events under the package event list\r\n2.Click on Continue button\r\n5. 1. Enter patron name in search field.\n2. Click on Find button\n3. Click on Set as patron button\r\n6. 1. Enter the required number of seats and select the price scale as mentioned in pre requisite.\r\n7. Click on lock seats button\r\n8. Go to ticket services and verify the seat details are displaying correctly.\r\n9. Select Logout\r\n10. enter the cart details and complete the transaction",
        "expected": "1. Prerequiste should be successful.\r\n2. The user should be logged in successfully.\r\n3. Events under the flex package event list should be displayed.\r\n4. Seat selection page should be displayed\r\n5. Patron name should be displayed in the Patron portal\nSeat selection portal should be displayed\r\n6. cart should be displayed with details of seats requested and price scale selected.\r\n7. \"Unable to fulfill seat requests in the requested price scale for the following event(s):,BR FLEX EVE2. The best available seat(s) have been locked. \" \r\nas any scale logic is used for one of the event.\r\n8. seat details along with the selected price scale should display correctly.\r\n9. User should be logged out from the application\r\n10. Transaction should be completed successfully."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.40"
  },
  {
    "id": 30696341,
    "title": "Verify the best seat rollover functionality for a flex package When Best Seat Rollover option is set to Any scale and package list seat type is Any Seat",
    "section_id": 1685220,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17175",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C40165",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre requisite:\r\nAt Package list level:\r\nset 'Best Seat Rollover' setting as 'Any scale'.\r\n1.Create a Flex package in PV for a three games with min and max limit as 1 to 3.\r\n2.One event in the flex package should have no availability to the selected price scale\r\n3.package list seat type is 'Any Seat'.\r\n2. 1. Launch PV application.\r\n2. Login using valid username and password.\r\n3. 1. Enter the package name configured above in the search field\r\n2. Click on Find button\r\n4. 1. Select the 3 events under the package event list\r\n2.Click on Continue button\r\n5. 1. Enter patron name in search field.\r\n2. Click on Find button\r\n3. Click on Set as patron button.\r\n6. 1. Enter the required number of seats and select the price scale as mentioned in pre requisite.\r\n7. Click on lock seats button.\r\n8. enter the cart details and complete the transaction\r\n9. Go to ticket services and verify the seat details are displaying correctly.\r\n10. Select Logout",
        "expected": "1. Prerequiste should be successful.\r\n2. The user should be logged in successfully.\r\n3. Events under the flex package event list should be displayed.\r\n4. Seat selection page should be displayed\r\n5. Patron name should be displayed in the Patron portal\r\nSeat selection portal should be displayed\r\n6. cart should be displayed with details of seats requested and price scale selected.\r\n7. \"Unable to fulfill seat requests in the requested price scale for the following event(s):,BR FLEX EVE2. The best available seat(s) have been locked. \" \r\nas any scale logic is used for one of the event.\r\n8. Transaction should be completed successfully.\r\n9. seat details along with the selected price scale should display correctly.\r\n10. User should be logged out from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.40"
  },
  {
    "id": 30696342,
    "title": "Verify the best seat rollover is able to apply on focused tab When user selected both price scale and section but focused on section tab",
    "section_id": 1685220,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17175",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C40166",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre requisite:\r\nAt Package list level:\r\nset 'Best Seat Rollover' setting as 'Any scale'.\r\n1.Create a Flex package in PV for a three games with min and max limit as 1 to 3.\r\n2.One event in the flex package should have no availability to the selected section\r\n3.seat type as 'any seat' in the ProVenue best available UI\r\n2. 1. Launch PV application.\r\n2. Login using valid username and password.\r\n3. 1. Enter the package name configured above in the search field\r\n2. Click on Find button\r\n4. 1. Select the 3 events under the package event list\r\n2.Click on Continue button\r\n5. 1. Enter patron name in search field.\r\n2. Click on Find button\r\n3. Click on Set as patron button.\r\n6. Request seats to a flex package, select price scale,and select a specific section.focus on section tab and click on Lock seats button\r\n7. Click on lock seats button.\r\n8. enter the cart details and complete the transaction\r\n9. Go to ticket services and verify the seat details are displaying correctly.\r\n10. Select Logout",
        "expected": "1. Prerequiste should be successful.\r\n2. The user should be logged in successfully.\r\n3. Events under the flex package event list should be displayed.\r\n4. Seat selection page should be displayed\r\n5. Patron name should be displayed in the Patron portal\r\nSeat selection portal should be displayed\r\n6. cart should be displayed with details of seats requested and section selected.\r\n7. \"Unable to fulfill seat requests to match the selected criteria for the following event(s): SEC_FLEXEVENT2. The best available seat(s) have been locked \"\r\nas any scale logic is used for one of the event.\r\n8. Transaction should be completed successfully.\r\n9. seat details along with the selected section should display correctly.\r\n10. User should be logged out from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.40"
  },
  {
    "id": 30696343,
    "title": "Verify the best seat rollover functionality for a flex package ,Best Seat Rollover option is set to Any scale and seat type as any seat in the ProVenue best available UI when none of  the games seats are not available in the requested price scale.",
    "section_id": 1685220,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17175",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 9,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C40167",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre requisite:\nAt Package list level:\nset ?Best Seat Rollover? setting as 'Any Scale'.\n1.Create a Flex package in PV for a three games with min and max limit as 1 to 3.\n2.none the events in the flex package should have availability to the selected price scale3.seat type as 'any seat' in the ProVenue best available UI\r\n2. 1. Launch PV application.\n2. Login using valid username and password.\r\n3. 1. Enter the package name configured above in the search field\n2. Click on Find button\r\n4. 1. Select the 3 events under the package event list\n2. Click on Continue button\r\n5. 1. Enter patron name in search field.\n2. Click on Find button\n3. Click on Set as patron button\r\n6. 1. Enter the required number of seats and select the price scale as mentioned in pre requisite.\r\n7. Click on lock seats button.And complete the transaction\r\n8. Go to ticket services and verify the seat details are displaying correctly.\r\n9. Select Logout",
        "expected": "1. Prerequiste should be successful.\r\n2. The user should be logged in successfully.\r\n3. Events under the flex package event list should be displayed\r\n4. Seat selection page should be displayed\r\n5. Patron name should be displayed in the Patron portal\nSeat selection portal should be displayed\r\n6. cart should be displayed with details of seats requested and price scale selected.\r\n7. \"Unable to fulfill seat requests in the requested price scale for the following event(s):BR FLEX EVE1,BR FLEX EVE2, BR FLEX EVE3. The best available seat(s) have been locked. ? \nas any scale logic is used for all events.\nTransaction should be completed successfully.\r\n8. seat details with the price scale  opted should display correctly.\r\n9. User should be logged out from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.40"
  },
  {
    "id": 30696344,
    "title": "Verify the best seat rollover functionality for a flex package ,Best Seat Rollover option is set to Any scale and package list seat type is Any Seat in the ProVenue best available UI when none of the price scale have sufficient seats.",
    "section_id": 1685220,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17175",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 10,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C40168",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. At Package list level:\nset ?Best Seat Rollover? setting as 'Any Scale'.\n1.Create a Flex package in PV for a three games with min and max limit as 1 to 3.\n2.none the events in the flex package should have availability to the selected price scale\n3.seat type as 'any seat' in the ProVenue best available UI\r\n2. 1. Launch PV application.\n2. Login using valid username and password.\r\n3. 1. Enter the package name configured above in the search field\n2. Click on Find button\r\n4. 1. Select the 3 events under the package event list\n2. Click on Continue button\r\n5. 1. Enter patron name in search field.\n2. Click on Find button\n3. Click on Set as patron button\r\n6. 1. Enter the required number of seats and select the price scale as mentioned in pre requisite.\nEg:number of seats requests should be greater than the max no of available seats among the price scales.\r\n7. Click on lock seats button.\r\n8. edit the cart details and complete the transaction\r\n9. Go to ticket services and verify the seat details are displaying correctly.\r\n10. Select Logout",
        "expected": "1. Prerequiste should be successful.\r\n2. The user should be logged in successfully.\r\n3. Events under the flex package event list should be displayed\r\n4. Seat selection page should be displayed\r\n5. Patron name should be displayed in the Patron portal\nSeat selection portal should be displayed\r\n6. cart should be displayed with details of seats requested and price scale selected.\r\n7. \"The system was unable to lock seats matching your request.\" error message should display.\n user should be able to see above error message in the cart page for all the events as none of the price scales have sufficient seats, even though best available rollover is applied .\r\n8. Transaction should be completed successfully.\r\n9. seat details along with the selected price scale should display correctly.\r\n10. User should be logged out from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.40"
  },
  {
    "id": 30696345,
    "title": "Verify the best seat rollover functionality for a flex package ,Best Seat Rollover option is set to Any scale and seat type as any seat in the ProVenue best available UI when selected price scale for all the events have sufficient seats.",
    "section_id": 1685220,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17175",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 11,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C40169",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre requisite:\nAt Package list level:\nset ?Best Seat Rollover? setting as 'Any Scale'.\n1.Create a Flex package in PV for a three games with min and max limit as 1 to 3.\n2.All the events in the flex package should have availability to the selected price scale\n3.seat type as 'any seat' in the ProVenue best available UI\r\n2. 1. Launch PV application.\n2. Login using valid username and password.\r\n3. 1. Enter the package name configured above in the search field\n2. Click on Find button\r\n4. 1. Select the 3 events under the package event list\n2. Click on Continue button\r\n5. 1. Enter patron name in search field.\n2. Click on Find button\n3. Click on Set as patron button\r\n6. 1. Enter the required number of seats and select the price scale as mentioned in pre requisite.\r\n7. Click on lock seats button.And complete the transaction\r\n8. Go to ticket services and verify the seat details are displaying correctly.\r\n9. Select Logout",
        "expected": "1. Prerequiste should be successful.\r\n2. The user should be logged in successfully.\r\n3. Events under the flex package event list should be displayed\r\n4. Seat selection page should be displayed\r\n5. Patron name should be displayed in the Patron portal\nSeat selection portal should be displayed\r\n6. cart should be displayed with details of seats requested and price scale selected.\r\n7. System should be able to lock seats in the requested price scale for the flex package without using 'Any scale' logic as All of the events in the flex package have the availability to the selected price scale.\nTransaction should be completed successfully.\r\n8. seat details along with the selected price scale should display correctly.\r\n9. User should be logged out from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.40"
  },
  {
    "id": 30696346,
    "title": "Verify the best seat rollover functionality for section of flex package When Best Seat Rollover option is set to Any scale and package list seat type is Any Seat",
    "section_id": 1685220,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17175",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 12,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C40170",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre requisite:\r\nAt Package list level:\r\nset 'Best Seat Rollover' setting as 'Any scale'.\r\n1.Create a Flex package in PV for a three games with min and max limit as 1 to 3.\r\n2.One event in the flex package should have no availability to the selected section\r\n3.package list seat type is 'Any Seat'.\r\n2. 1. Launch PV application.\r\n2. Login using valid username and password.\r\n3. 1. Enter the package name configured above in the search field\r\n2. Click on Find button\r\n4. 1. Select the 3 events under the package event list\r\n2.Click on Continue button\r\n5. 1. Enter patron name in search field.\r\n2. Click on Find button\r\n3. Click on Set as patron button.\r\n6. 1. Enter the required number of seats and select the section as mentioned in pre requisite.\r\n7. Click on lock seats button.\r\n8. enter the cart details and complete the transaction\r\n9. Go to ticket services and verify the seat details are displaying correctly.\r\n10. Select Logout",
        "expected": "1. Prerequiste should be successful.\r\n2. The user should be logged in successfully.\r\n3. Events under the flex package event list should be displayed.\r\n4. Seat selection page should be displayed\r\n5. Patron name should be displayed in the Patron portal\r\nSeat selection portal should be displayed\r\n6. cart should be displayed with details of seats requested and section selected.\r\n7. \"Unable to fulfill seat requests to match the selected criteria for the following event(s): SEC_FLEXEVENT2. The best available seat(s) have been locked \"\r\nas any scale logic is used for one of the event.\r\n8. Transaction should be completed successfully.\r\n9. seat details along with the selected section should display correctly.\r\n10. User should be logged out from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.40"
  },
  {
    "id": 30696347,
    "title": "Verify the best seat rollover is able to discard the section selections criteria When Best Seat Rollover option is set to Any scale and seat type as any seat in the ProVenue best available UI for a flex package.",
    "section_id": 1685220,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17175",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 13,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C40171",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre requisite:\nCreate a Package with 2 PELs as mentioned below\nAt Package list level: for PEL1\nset ?Best Seat Rollover? setting as 'Not available'.\n1.Create a Flex PEL in PV for a three games with min and max limit as 1 to 3.\n2.One event in the flex package should have no availability to the selected price scale\n3.seat type as 'any seat' in the ProVenue best available UI\nAt Package list level: for PEL2\nset ?Best Seat Rollover? setting as 'Any scale'.\n1.Create a Flex PEL in PV for a three games with min and max limit as 1 to 3.\n2.One event in the flex package should have no availability to the selected price scale\n3.seat type as 'any seat' in the ProVenue best available UI\r\n2. 1. Launch PV application.\n2. Login using valid username and password.\r\n3. 1. Enter the package name configured above in the search field\n2. Click on Find button\r\n4. 1. Select the 3 events under the package event list\n2.Click on Continue button\r\n5. 1. Enter patron name in search field.\n2. Click on Find button\n3. Click on Set as patron button.\r\n6. 1. Enter the required number of seats and select the price scale as mentioned in pre requisite.\r\n7. Click on lock seats button.\r\n8. enter the cart details and complete the transaction\r\n9. Go to ticket services and verify the seat details are displaying correctly.\r\n10. Select Logout\r\n11. Click on lock seats button.\nVerify user able to see error message\n\"The system was unable to lock seats matching your request\"\r\n12. Select another price scale and click on lock seats.\r\n13. Click on lock seats button.\r\n14. enter the cart details and complete the transaction\r\n15. Go to ticket services and verify the seat details are displaying correctly.\r\n16. Select Logout",
        "expected": "1. Prerequiste should be successful.\r\n2. The user should be logged in successfully.\r\n3. Events under the flex package event list should be displayed.\r\n4. Seat selection page should be displayed\r\n5. Patron name should be displayed in the Patron portal\nSeat selection portal should be displayed.\r\n6. cart should be displayed with details of seats requested and price scale selected.\r\n7. \"Unable to fulfill seat requests in the requested price scale for the following event(s):,BR FLEX EVE2. The best available seat(s) have been locked. ? \nas any scale logic is used for one of the event.\r\n8. Transaction should be completed successfully.\r\n9. seat details along with the selected price scale should display correctly.\r\n10. User should be logged out from the application\r\n11. \"The system was unable to lock seats matching your request\" error message should be displayed.\r\n12. user should be navigated to next PEL to selet the seats\r\n13. \"Unable to fulfill seat requests in the requested price scale for the following event(s):,BR FLEX EVE2. The best available seat(s) have been locked. ? \nas any scale logic is used for one of the event.\r\n14. Transaction should be completed successfully.\r\n15. seat details along with the selected price scale should display correctly.\r\n16. User should be logged out from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.40"
  },
  {
    "id": 30696348,
    "title": "Verify the best seat rollover functionality for a flex package When Best Seat Rollover option is set to Any scale and seat type as same price scale in the ProVenue best available UI",
    "section_id": 1685220,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17175",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 14,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C40172",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre requisite:\nAt Package list level:\nset ?Best Seat Rollover? setting as 'Any Scale'.\n1.Create a Flex package in PV for a three games with min and max limit as 1 to 3.\n2.One event in the flex package should have no availability to the selected price scale\n3.seat type as  'same price scale' in the ProVenue best available UI\r\n2. 1. Launch PV application.\n2. Login using valid username and password.\r\n3. 1. Enter the package name configured above in the search field\n2. Click on Find button\r\n4. 1. Select the 3 events under the package event list\n2.Click on Continue button\r\n5. 1. Enter patron name in search field.\n2. Click on Find button\n3. Click on Set as patron button.\r\n6. 1. Enter the required number of seats and select the price scale as mentioned in pre requisite.\r\n7. Click on lock seats button.\r\n8. edit the cart details and complete the transaction\r\n9. Go to ticket services and verify the seat details are displaying correctly.\r\n10. Select Logout",
        "expected": "1. Prerequiste should be successful.\r\n2. The user should be logged in successfully.\r\n3. Events under the flex package event list should be displayed.\r\n4. Seat selection page should be displayed\r\n5. Patron name should be displayed in the Patron portal\nSeat selection portal should be displayed.\r\n6. cart should be displayed with details of seats requested and price scale selected.\r\n7. \"? The system was unable to lock seats matching your request ? error message should be displayed\nsystem should not apply Best available Rollover as selected seat is same price scale in the ProVenue best available UI\r\n8. Transaction should be completed successfully.\r\n9. seat details with the price scale  opted should display correctly.\r\n10. User should be logged out from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.40"
  },
  {
    "id": 30696349,
    "title": "Verify the best seat rollover functionality for a flex package When Best Seat Rollover option is set to Any scale and seat type as same seat in the ProVenue best available UI",
    "section_id": 1685220,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17175",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 15,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C40173",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre requisite:\nAt Package list level:\nset ?Best Seat Rollover? setting as 'Any Scale'.\n1.Create a Flex package in PV for a three games with min and max limit as 1 to 3.\n2.One event in the flex package should have no availability to the selected price scale\n3.seat type as 'same seat' in the ProVenue best available UI\r\n2. 1. Launch PV application.\n2. Login using valid username and password.\r\n3. 1. Enter the package name configured above in the search field\n2. Click on Find button\r\n4. 1. Select the 3 events under the package event list\n2.Click on Continue button\r\n5. 1. Enter patron name in search field.\n2. Click on Find button\n3. Click on Set as patron button.\r\n6. 1. Enter the required number of seats and select the price scale as mentioned in pre requisite.\r\n7. Click on lock seats button.\r\n8. edit the cart details and complete the transaction\r\n9. Go to ticket services and verify the seat details are displaying correctly.\r\n10. Select Logout",
        "expected": "1. Prerequiste should be successful.\r\n2. The user should be logged in successfully.\r\n3. Events under the flex package event list should be displayed.\r\n4. Seat selection page should be displayed\r\n5. Patron name should be displayed in the Patron portal\nSeat selection portal should be displayed.\r\n6. cart should be displayed with details of seats requested and price scale selected.\r\n7. \"? The system was unable to lock seats matching your request ? error message should be displayed\nsystem should not apply Best available Rollover as selected seat is same seat in the ProVenue best available UI\r\n8. Transaction should be completed successfully.\r\n9. seat details with the price scale  opted should display correctly.\r\n10. User should be logged out from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.40"
  },
  {
    "id": 30696350,
    "title": "Verify the best seat rollover functionality for a flex package When Best Seat Rollover option is set to Not available and seat type of Any seat in the ProVenue best available UI.",
    "section_id": 1685220,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17175",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 16,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C40174",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre requisite:\r\nAt Package list level:\r\nset 'Best Seat Rollover' setting as 'Not available'.\r\n1.Create a Flex package in PV for a three games with min and max limit as 1 to 3.\r\n2.One event in the flex package should have no availability to the selected price scale\r\n3.seat type of 'Any seat' in the ProVenue best available UI\r\n2. 1. Launch PV application.\n2. Login using valid username and password.\r\n3. 1. Enter the package name configured above in the search field\n2. Click on Find button\r\n4. 1. Select the 3 events under the package event list\n2. Click on Continue button\r\n5. 1. Enter patron name in search field.\n2. Click on Find button\n3. Click on Set as patron button\r\n6. 1. Enter the required number of seats and select the price scale as mentioned in pre requisite.\r\n7. Click on lock seats button.\r\n8. edit the cart details and complete the transaction\r\n9. Go to ticket services and verify the seat details are displaying correctly.\r\n10. Select Logout",
        "expected": "1. Prerequiste should be successful.\r\n2. The user should be logged in successfully.\r\n3. Events under the flex package event list should be displayed\r\n4. Seat selection page should be displayed\r\n5. Patron name should be displayed in the Patron portal\nSeat selection portal should be displayed\r\n6. cart should be displayed with details of seats requested and price scale selected.\r\n7. \"? The system was unable to lock seats matching your request ? error message should be displayed\nsystem should not apply Best available Rollover as ?Best Seat Rollover? setting is Not available at Package list level.\r\n8. Transaction should be completed successfully.\r\n9. seat details with the price scale  opted should display correctly.\r\n10. User should be logged out from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.40"
  },
  {
    "id": 30696351,
    "title": "Verify the best seat rollover functionality for a flex package ,Best Seat Rollover option is set to Any scale and package list seat type is Any Seat when none of  the games seats are not available in the requested price scale.",
    "section_id": 1685220,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17175",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 17,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C40175",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre requisite:\nAt Package list level:\nset ?Best Seat Rollover? setting as 'Any Scale'.\n1.Create a Flex package in PV for a three games with min and max limit as 1 to 3.\n2.none the events in the flex package should have availability to the selected price scale\n3.package list seat type is 'Any Seat'\r\n2. 1. Launch PV application.\n2. Login using valid username and password.\r\n3. 1. Enter the package name configured above in the search field\n2. Click on Find button\r\n4. 1. Select the 3 events under the package event list\n2. Click on Continue button\r\n5. 1. Enter patron name in search field.\n2. Click on Find button\n3. Click on Set as patron button\r\n6. 1. Enter the required number of seats and select the price scale as mentioned in pre requisite.\r\n7. Click on lock seats button.And complete the transaction\r\n8. Go to ticket services and verify the seat details are displaying correctly.\r\n9. Select Logout",
        "expected": "1. Prerequiste should be successful.\r\n2. The user should be logged in successfully.\r\n3. Events under the flex package event list should be displayed\r\n4. Seat selection page should be displayed\r\n5. Patron name should be displayed in the Patron portal\nSeat selection portal should be displayed\r\n6. cart should be displayed with details of seats requested and price scale selected.\r\n7. \"Unable to fulfill seat requests in the requested price scale for the following event(s):BR FLEX EVE1,BR FLEX EVE2, BR FLEX EVE3. The best available seat(s) have been locked. ? \nas any scale logic is used for all events.\nTransaction should be completed successfully.\r\n8. seat details with the price scale  opted should display correctly.\r\n9. User should be logged out from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.40"
  },
  {
    "id": 30696352,
    "title": "Verify the best seat rollover functionality for a flex package ,Best Seat Rollover option is set to Any scale and package list seat type is Any Seat when none of the price scale have sufficient seats.",
    "section_id": 1685220,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17175",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 18,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C40176",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre requisite:\nAt Package list level:\nset ?Best Seat Rollover? setting as 'Any Scale'.\n1.Create a Flex package in PV for a three games with min and max limit as 1 to 3.\n2.none the events in the flex package should have availability to the selected price scale.\n3.package list seat type is 'Any Seat'\r\n2. 1. Launch PV application.\n2. Login using valid username and password.\r\n3. 1. Enter the package name configured above in the search field\n2. Click on Find button\r\n4. 1. Select the 3 events under the package event list\n2. Click on Continue button\r\n5. 1. Enter patron name in search field.\n2. Click on Find button\n3. Click on Set as patron button\r\n6. 1. Enter the required number of seats and select the price scale as mentioned in pre requisite.\nEg:number of seats requests should be greater than the max no of available seats among the price scales.\r\n7. Click on lock seats button.\r\n8. edit the cart details and complete the transaction\r\n9. Go to ticket services and verify the seat details are displaying correctly.\r\n10. Select Logout",
        "expected": "1. Prerequiste should be successful.\r\n2. The user should be logged in successfully.\r\n3. Events under the flex package event list should be displayed\r\n4. Seat selection page should be displayed\r\n5. Patron name should be displayed in the Patron portal\nSeat selection portal should be displayed\r\n6. cart should be displayed with details of seats requested and price scale selected.\r\n7. \"The system was unable to lock seats matching your request.\" error message should display.\n user should be able to see above error message in the cart page for all the events as none of the price scales have sufficient seats, even though best available rollover is applied .\r\n8. Transaction should be completed successfully.\r\n9. seat details along with the selected price scale should display correctly.\r\n10. User should be logged out from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.40"
  },
  {
    "id": 30696353,
    "title": "Verify the best seat rollover functionality for a flex package ,Best Seat Rollover option is set to Any scale and package list seat type is Any Seat when selected price scale for all the events have sufficient seats.",
    "section_id": 1685220,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17175",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 19,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C40177",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. At Package list level:\nset ?Best Seat Rollover? setting as 'Any Scale'.\n1.Create a Flex package in PV for a three games with min and max limit as 1 to 3.\n2.All the events in the flex package should have availability to the selected price scale\n3.package list seat type is 'Any Seat'\r\n2. 1. Launch PV application.\n2. Login using valid username and password.\r\n3. 1. Enter the package name configured above in the search field\n2. Click on Find button\r\n4. 1. Select the 3 events under the package event list\n2. Click on Continue button\r\n5. 1. Enter patron name in search field.\n2. Click on Find button\n3. Click on Set as patron button\r\n6. 1. Enter the required number of seats and select the price scale as mentioned in pre requisite.\r\n7. Click on lock seats button.And complete the transaction\r\n8. Go to ticket services and verify the seat details are displaying correctly.\r\n9. Select Logout",
        "expected": "1. Prerequiste should be successful.\r\n2. The user should be logged in successfully.\r\n3. Events under the flex package event list should be displayed\r\n4. Seat selection page should be displayed\r\n5. Patron name should be displayed in the Patron portal\nSeat selection portal should be displayed\r\n6. cart should be displayed with details of seats requested and price scale selected.\r\n7. System should be able to lock seats in the requested price scale for the flex package without using 'Any scale' logic as All of the events in the flex package have the availability to the selected price scale.\nTransaction should be completed successfully.\r\n8. seat details along with the selected price scale should display correctly.\r\n9. User should be logged out from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.40"
  },
  {
    "id": 30696354,
    "title": "Verify the best seat rollover functionality for extended seat definition of flex package When Best Seat Rollover option is set to Any scale and package list seat type is Any Seat",
    "section_id": 1685220,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17175",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 20,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C40178",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch PV Application\r\n2. Login using suitable credentials.\r\n3. Create a extended seat config 'BSR1' and assign some seats to 'other1' (7 seats) and 'other2' (20 seats)\r\n4. Create package with flex package event list (with min/max limit 1 to 3) \r\n5. At Package list level: set 'Best Seat Rollover' setting as 'Any Scale'.\r\n6. Package list seat types is 'Any seat.\r\n7. Perform a sale transaction of extended seat definition'other1' seats for one of the constituent events (SEC_FLEXEVE1).\r\n For this event after sale transaction of 4 seats, only 3 'other1' seats are available where as remaining constituent events have 7 seats in 'Other1'\r\n2. 1. Launch PV application.\r\n2. Login using valid username and password.\r\n3. 1. Enter the package name configured above in the search field\r\n2. Click on Find button\r\n4. 1. Select the 3 events under the package event list\r\n2.Click on Continue button\r\n5. 1. Enter patron name in search field.\r\n2. Click on Find button\r\n3. Click on Set as patron button.\r\n6. 1. Enter the required number of seats and select the extended seat definition as mentioned in pre requisite.\r\n7. Click on lock seats button.\r\n8. enter the cart details and complete the transaction\r\n9. Go to ticket services and verify the seat details are displaying correctly.\r\n10. Select Logout",
        "expected": "1. Prerequiste should be successful.\r\n2. The user should be logged in successfully.\r\n3. Events under the flex package event list should be displayed.\r\n4. Seat selection page should be displayed\r\n5. Patron name should be displayed in the Patron portal\r\nSeat selection portal should be displayed\r\n6. cart should be displayed with details of seats requested and extended seat definiton selected.\r\n7. \"Unable to fulfill seat requests to match the selected criteria for the following event(s): SEC_FLEXEVENT2. The best available seat(s) have been locked\"\r\nas any scale logic is used for one of the event.\r\nsystem should able to lock the seats in another available extended seat definiton.\r\n8. Transaction should be completed successfully.\r\n9. seat details along with the selected extended seat definition details should display correctly.\r\n10. User should be logged out from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.40"
  },
  {
    "id": 30696355,
    "title": "Verify the best seat rollover is able to apply on focused tab When user selected both price scale and section but focused on price scale tab",
    "section_id": 1685220,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17175",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 21,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C40179",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre requisite:\r\nAt Package list level:\r\nset 'Best Seat Rollover' setting as 'Any scale'.\r\n1.Create a Flex package in PV for a three games with min and max limit as 1 to 3.\r\n2.One event in the flex package should have no availability to the selected price scale\r\n3.package list seat type is 'Any Seat'.\r\n2. 1. Launch PV application.\r\n2. Login using valid username and password.\r\n3. 1. Enter the package name configured above in the search field\r\n2. Click on Find button\r\n4. 1. Select the 3 events under the package event list\r\n2.Click on Continue button\r\n5. 1. Enter patron name in search field.\r\n2. Click on Find button\r\n3. Click on Set as patron button.\r\n6. Request seats to a flex package, select section and select a specific price scale.focus on price scale tab and click on Lock seats button\r\n7. Click on lock seats button.\r\n8. enter the cart details and complete the transaction\r\n9. Go to ticket services and verify the seat details are displaying correctly.\r\n10. Select Logout",
        "expected": "1. Prerequiste should be successful.\r\n2. The user should be logged in successfully.\r\n3. Events under the flex package event list should be displayed.\r\n4. Seat selection page should be displayed\r\n5. Patron name should be displayed in the Patron portal\r\nSeat selection portal should be displayed\r\n6. cart should be displayed with details of seats requested and price scale selected.\r\n7. \"Unable to fulfill seat requests in the requested price scale for the following event(s):,BR FLEX EVE2. The best available seat(s) have been locked. \" \r\nas any scale logic is used for one of the event.\r\n8. Transaction should be completed successfully.\r\n9. seat details along with the selected price scale should display correctly.\r\n10. User should be logged out from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.40"
  },
  {
    "id": 30696356,
    "title": "Verify the best seat rollover is able to discard the section selections criteria When Best Seat Rollover option is set to Any scale and package list seat type is any seat for a flex package.",
    "section_id": 1685220,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17175",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 22,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C40180",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. At Package list level:\nset ?Best Seat Rollover? setting as 'Any Scale'.\n1.Create a Flex package in PV for a three games with min and max limit as 1 to 3.\n2.One event in the flex package should have no availability to the selected price scale\n3.package list seat type is 'Any Seat'\r\n2. 1. Launch PV application.\n2. Login using valid username and password.\r\n3. 1. Enter the package name configured above in the search field\n2. Click on Find button\r\n4. 1. Select the 3 events under the package event list\n2.Click on Continue button\r\n5. 1. Enter patron name in search field.\n2. Click on Find button\n3. Click on Set as patron button.\r\n6. 1. Enter the required number of seats and select the price scale as mentioned in pre requisite.\r\n7. Click on lock seats button.\r\n8. edit the cart details and complete the transaction\r\n9. Verify the best seat rollover is able to discard the section selections in ticket services.\r\n10. Select Logout",
        "expected": "1. Prerequiste should be successful.\r\n2. The user should be logged in successfully.\r\n3. Events under the flex package event list should be displayed.\r\n4. Seat selection page should be displayed\r\n5. Patron name should be displayed in the Patron portal\nSeat selection portal should be displayed.\r\n6. cart should be displayed with details of seats requested and price scale selected.\r\n7. \"Unable to fulfill seat requests in the requested price scale for the following event(s):,BR FLEX EVE2. The best available seat(s) have been locked. ? \nas any scale logic is used for one of the event.\nsection selections criteria should be discarded.\r\n8. Transaction should be completed successfully.\r\n9. Best seat rollover should be able to discard the section selections criteria\r\n10. User should be logged out from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.40"
  },
  {
    "id": 30696357,
    "title": "Verify the best seat rollover functionality for a flex package When Best Seat Rollover option is set to Any scale and package list seat type is same price scale",
    "section_id": 1685220,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17175",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 23,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C40181",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre requisite:\nAt Package list level:\nset ?Best Seat Rollover? setting as 'Any Scale'.\n1.Create a Flex package in PV for a three games with min and max limit as 1 to 3.\n2.One event in the flex package should have no availability to the selected price scale\n3.seat type as  'same price scale' in the ProVenue best available UI\r\n2. 1. Launch PV application.\n2. Login using valid username and password.\r\n3. 1. Enter the package name configured above in the search field\n2. Click on Find button\r\n4. 1. Select the 3 events under the package event list\n2.Click on Continue button\r\n5. 1. Enter patron name in search field.\n2. Click on Find button\n3. Click on Set as patron button.\r\n6. 1. Enter the required number of seats and select the price scale as mentioned in pre requisite.\r\n7. Click on lock seats button.\r\n8. edit the cart details and complete the transaction\r\n9. Go to ticket services and verify the seat details are displaying correctly.\r\n10. Select Logout",
        "expected": "1. Prerequiste should be successful.\r\n2. The user should be logged in successfully.\r\n3. Events under the flex package event list should be displayed.\r\n4. Seat selection page should be displayed\r\n5. Patron name should be displayed in the Patron portal\nSeat selection portal should be displayed.\r\n6. cart should be displayed with details of seats requested and price scale selected.\r\n7. \"? The system was unable to lock seats matching your request ? error message should be displayed\nsystem should not apply Best available Rollover as selected seat is same price scale in the ProVenue best available UI\r\n8. Transaction should be completed successfully.\r\n9. seat details with the price scale  opted should display correctly.\r\n10. User should be logged out from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.40"
  },
  {
    "id": 30696358,
    "title": "Verify the best seat rollover functionality for a flex package When Best Seat Rollover option is set to Any scale and package list seat type is same seat",
    "section_id": 1685220,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17175",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 24,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C40182",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. At Package list level:\nset ?Best Seat Rollover? setting as 'Any Scale'.\n1.Create a Flex package in PV for a three games with min and max limit.\n2.One event in the flex package should have no availability to the selected price scale\n3.package list seat type is 'Same Seat'.\r\n2. Launch the PV Application URL with a valid login credentials\r\n3. 1. Select ticket sales from drop down of ticketing tab\r\n4. 1. Enter the flex package name configured above in the search field\n2. Click on Find button\r\n5. 1. Select the 3 events under the package event list\n2. Click on Continue button\r\n6. 1. Enter patron name in search field.\n2. Click on Find button\n3. Click on Set as patron button\r\n7. 1. Enter the required number of seats and select the price scale as mentioned in pre requisite.\r\n8. 1.Click on lock seats button and the system will throw an error message as displayed       \"* flex package is being offered in only two price scales and some of the events being offered in the flex package do not have availability in one of the price scales*\"\r\n9. 1.Edit the cart and select the best available seats from another price scale.\n2. click on lock seats\r\n10. 1.Enter the delivery method and payment method\n2. Accept payment and checkout.\r\n11. 1. Click on the confirmation id and it is navigated to ticket servies\r\n12. Go to ticket services and verify the seat details are displaying correctly.",
        "expected": "1. The pre requisite should be successful.\r\n2. Url Should be launched successfully and the home page of PV should get displayed.\r\n3. Ticket sales portal should get displayed.\r\n4. Events under the flex package event list should be displayed\r\n5. Seat selection page should be displayed\r\n6. Patron name should be displayed in the Patron portal\nSeat selection portal should be displayed\r\n7. cart should be displayed with details of seats requested and price scale selected.\r\n8. System should display the error message successfully .\r\n9. User should able to lock the seat from another price scale.\r\n10. Transaction should get completed and confirmation id will be generated\r\n11. Ticket services page should get displayed.\r\n12. seat details along with the selected price scale should display correctly."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.40"
  },
  {
    "id": 30696359,
    "title": "Verify the best seat rollover functionality for a flex package When Best Seat Rollover option is set to Not available and package list seat type is Any Seat",
    "section_id": 1685220,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17175",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 25,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C40183",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. At Package list level:\r\nset 'Best Seat Rollover' setting as 'Not available'.\r\n1.Create a Flex package in PV for a three games with min and max limit.\r\n2.One event in the flex package should have no availability to the selected price scale\r\n3.package list seat type is 'Any Seat'.\r\n2. Launch the PV Application URL with a valid login credentials\r\n3. 1. Select ticket sales from drop down of ticketing tab\r\n4. 1. Enter the flex package name configured above in the search field\n2. Click on Find button\r\n5. 1. Select the 3 events under the package event list\n2. Click on Continue button\r\n6. 1. Enter patron name in search field.\n2. Click on Find button\n3. Click on Set as patron button\r\n7. 1. Enter the required number of seats and select the price scale as mentioned in pre requisite.\r\n8. 1.Click on lock seats button and the system will throw an error message as displayed       \"* flex package is being offered in only two price scales and some of the events being offered in the flex package do not have availability in one of the price scales*\"\r\n9. 1.Edit the cart and select the best available seats from another price scale.\n2. click on lock seats\r\n10. 1.Enter the delivery method and payment method\n2. Accept payment and checkout.\r\n11. 1. Click on the confirmation id and it is navigated to ticket servies\r\n12. Go to ticket services and verify the seat details are displaying correctly.",
        "expected": "1. The pre requisite should be successful.\r\n2. Url Should be launched successfully and the home page of PV should get displayed.\r\n3. Ticket sales portal should get displayed.\r\n4. Events under the flex package event list should be displayed\r\n5. Seat selection page should be displayed\r\n6. Patron name should be displayed in the Patron portal\nSeat selection portal should be displayed\r\n7. cart should be displayed with details of seats requested and price scale selected.\r\n8. System should display the error message successfully .\r\n9. User should able to lock the seat from another price scale.\r\n10. Transaction should get completed and confirmation id will be generated\r\n11. Ticket services page should get displayed.\r\n12. seat details along with the selected price scale should display correctly."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.40"
  },
  {
    "id": 30696360,
    "title": "Verify the Best Seat Rollover option can be overridden at the package list level when Best Seat Rollover option is set as Any scale at package list level.",
    "section_id": 1685220,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17175",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 26,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C40184",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. At supplier -> Package list level:\nset ?Best Seat Rollover? setting as 'Not available'.\nAt Package list level:\nset ?Best Seat Rollover? setting as 'Any scale'.\n1.Create a Flex package in PV for a three games with min and max limit.\n2.One event in the flex package should have no availability to the selected price scale\r\n2. Launch the PV Application URL with a valid login credentials\r\n3. 1. Select ticket sales from drop down of ticketing tab\r\n4. 1. Enter the flex package name configured above in the search field\n2. Click on Find button\r\n5. 1. Select the 3 events under the package event list\n2. Click on Continue button\r\n6. 1. Enter patron name in search field.\n2. Click on Find button\n3. Click on Set as patron button\r\n7. 1. Enter the required number of seats and select the price scale as mentioned in pre requisite.\r\n8. 1.Click on lock seats button and the system will throw an appropriate message as displayed \"* Unable to fulfill seat requests in the requested price scale for the following event(s):  .  The best available seat(s) have been locked.*\"\r\n9. 1.Override the best seat rollover option\r\n10. 1.Enter the delivery method and payment method\n2. Accept payment and checkout.\r\n11. 1. Click on the confirmation id and it is navigated to ticket servies\r\n12. Go to ticket services and verify the seat details are displaying correctly.",
        "expected": "1. The pre requisite should be successful.\r\n2. Url Should be launched successfully and the home page of PV should get displayed.\r\n3. Ticket sales portal should get displayed.\r\n4. Events under the flex package event list should be displayed\r\n5. Seat selection page should be displayed\r\n6. Patron name should be displayed in the Patron portal\nSeat selection portal should be displayed\r\n7. cart should be displayed with details of seats requested and price scale selected.\r\n8. System should display the appropriate message successfully .\r\n9. User should able to override the best seat  rollover option.\r\n10. Transaction should get completed and confirmation id will be generated\r\n11. Ticket services page should get displayed.\r\n12. seat details along with the selected price scale should display correctly."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.40"
  },
  {
    "id": 30696361,
    "title": "Verify the Best Seat Rollover option can be overridden at the package list level when Best Seat Rollover option is set as Not available at package list level",
    "section_id": 1685220,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17175",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 27,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C40185",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. At supplier -> Package list level:\nset ?Best Seat Rollover? setting as 'Any scale'.\nAt Package list level:\nset ?Best Seat Rollover? setting as 'Not available'.\n1.Create a Flex package in PV for a three games with min and max limit as 1 to 3\n2.One event in the flex package should have no availability to the selected price scale\r\n2. Launch the PV Application URL with a valid login credentials\r\n3. 1. Select ticket sales from drop down of ticketing tab\r\n4. 1. Enter the flex package name configured above in the search field\n2. Click on Find button\r\n5. 1. Select the 3 events under the package event list\n2. Click on Continue button\r\n6. 1. Enter patron name in search field.\n2. Click on Find button\n3. Click on Set as patron button\r\n7. 1. Enter the required number of seats and select the price scale as mentioned in pre requisite.\r\n8. 1.Click on lock seats button and the system will throw an error message as displayed \"* The system was unable to lock seats matching your request*\" due to unavailability of seats in the pre requisite price scale.\r\n9. 1.Edit the cart and select the best available seats from another price scale.\n2. click on lock seats\r\n10. 1.Enter the delivery method and payment method\n2. Accept payment and checkout.\r\n11. 1. Click on the confirmation id and it is navigated to ticket servies\r\n12. Go to ticket services and verify the seat details are displaying correctly.",
        "expected": "1. The pre requisite should be successful.\r\n2. Url Should be launched successfully and the home page of PV should get displayed.\r\n3. Ticket sales portal should get displayed.\r\n4. Events under the flex package event list should be displayed\r\n5. Seat selection page should be displayed\r\n6. Patron name should be displayed in the Patron portal\nSeat selection portal should be displayed\r\n7. cart should be displayed with details of seats requested and price scale selected.\r\n8. System should display the error message successfully .\r\n9. User should able to lock the seat from another price scale.\r\n10. Transaction should get completed and confirmation id will be generated\r\n11. Ticket services page should get displayed.\r\n12. seat details along with the selected price scale should display correctly."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.40"
  },
  {
    "id": 30696362,
    "title": "Verify the ?Best Seat Rollover? option is inherited to all the levels",
    "section_id": 1685220,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17175",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 28,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C40186",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the PV Application URL with a valid login credentials\r\n2. 1. Select Supplier Administration from drop down of ticketing setup tab\r\n3. 1.Navigate to Package list access tab\r\n4. 1.Set value for Best seat rollover option \n2.Click on apply changes\r\n5. 1. Select Package event lists from drop down of ticketing setup tab\n2. Follow the step 3\r\n6. 1.Verify  \"Best Seat rollover\" option is inherited to the all the levels",
        "expected": "1. Url Should be launched successfully and the home page of PV should get displayed.\r\n2. Supplier Administration portal should get displayed.\r\n3. Package list access page should get displayed.\r\n4. Value should be successfully applied on the option\r\n5. Package event lists portal should get displayed.\r\n6. The values set in the best seat rollover option at the supplier level should get inherited to all the levels."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.40"
  },
  {
    "id": 30696363,
    "title": "UI Verification of the ?Best Seat Rollover? option at the package event list level",
    "section_id": 1685220,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17175",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 29,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C40187",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the PV Application URL with a valid login credentials\r\n2. 1. Select Package event lists from drop down of ticketing setup tab\r\n3. 1.Navigate to Package list access tab\r\n4. 1.Check \"Best seat Rollover\" option is added below the Best Available Stranding Seats.\n2.The drop down option should listed with two values namely.\no Not available (default)\no Any Scale\r\n5. 1.verify user is able to see \"Best seat Rollover\" option at the package list level.",
        "expected": "1. Url Should be launched successfully and the home page of PV should get displayed.\r\n2. Package event list portal should get displayed.\r\n3. Package list access page should get displayed.\r\n4. \"Best seat Rollover\" option is added below Best Available Stranding Seats with the two values listed.\r\n5. All users should be able to see the option \"Best seat Rollover\" at the package list level."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.40"
  },
  {
    "id": 30696364,
    "title": "UI Verification of the ?Best Seat Rollover? option at the supplier level",
    "section_id": 1685220,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17175",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 30,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C40188",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the PV Application URL with a valid login credentials\r\n2. 1. Select supplier administration from drop down of ticketing setup tab\r\n3. 1.Navigate to Package list access tab\r\n4. 1.Check \"Best seat Rollover\" option is added below the Best Available Stranding Seats.\n2.The drop down option should listed with two values namely.\no Not available (default)\no Any Scale\r\n5. 1.verify user is able to see \"Best seat Rollover\" option at the supplier level.",
        "expected": "1. Url Should be launched successfully and the home page of PV should get displayed.\r\n2. Supplier Administration portal should get displayed.\r\n3. Package list access page should get displayed.\r\n4. \"Best seat Rollover\" option is added below Best Available Stranding Seats with the two values listed.\r\n5. All users should be able to see the option \"Best seat Rollover\" at the supplier level."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.40"
  },
  {
    "id": 30696365,
    "title": "Verify if master event or other inconsistent events are displayed",
    "section_id": 1685221,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-15365",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 12,
    "custom_refs": "C54511",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Select Package event lists from the drop down\r\n2. 1) Input the required fields\r\n2) Click on Apply changes button\r\n3. 1) Search for season\r\n2) Choose price structure and ticket format\r\n3) Click on 'Apply Changes'\r\n4) Navigate to Detail tab\r\n5) Change status to 'Available' - Apply Changes\r\n4. 1) Create a new package \r\n2) Input the required fields\r\n3) Click on 'Apply Changes' button\r\n5. 1) Search for package event list created in Step 3\r\n2) Choose sales assignment type\r\n3) Click on 'Apply Changes'\r\n4) Navigate to Detail tab\r\n5) Change status to 'Available' - Apply Changes\r\n6. 1. Input * in the search field\r\n2. Click on Find button\r\n3. Click on the code of the newly created package\r\n7. Check for events listed in the package event list configuration\r\n8. 1. Click on the events tab\n2. Input the min/max number of events in the events portlet\n3. Click on the Apply changes button\r\n9. Repeat the same steps by adding an1) Event Run and 2)Event group\r\n10. Call \r\n11. Call",
        "expected": "1. The user should be displayed the Package event lists portal\r\n2. The user should be displayed the confirm message after saving the details of newly created flex package event list\r\n3. The user should be able to save the season details and change the status of the package event list to 'Available'\r\n4. The user should be displayed the details of the newly created package\r\n5. The user should be able to add the previously created package event list to the package newly created\r\n6. 1.The user should be displayed all the packages in the search grid\r\n2. For the newly created package the events should be correctly displayed  (master events/events that do not match the package event list configuration should not be displayed)\r\n7. The events listed should not include master events or events that do not match the package event list configuration\r\n8. Min/max events should get updated\r\n9. While selecting the package in ticket sales portal:The events listed should not include master events or events that do not match the package event list configuration\r\n10. \r\n11."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.2.00"
  },
  {
    "id": 30696366,
    "title": "Verify whether the Select All and Clear All Link should not disappear when Scrolling for Flex and Variable Pacakge",
    "section_id": 1685222,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-15132",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 12,
    "custom_refs": "C76622",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Create 10 Fixed Events\n2. Create 1 Flex Event List and associate all the      Fixed Events with respect to Season and set the Min Max Value as 3 to 5\r\n2. 1. Create 10 Vairable Events\n2. Create Variable Event List and associate all the Variable Events and set the Min Max value as 2:4\r\n3. 1. Create a Pacakge1\n2. Include both the Flex and Variable Packge Event Lists \n3. Set the Affinity Value Any X: as 1:2 and check the Required Option button\nMake the Package On Sale\r\n4. Launch PVNG application\nLogin using suitable credentials\r\n5. Perform a Sale for the above created package: Package1\r\n6. Verify whether Select All and Clear All Link is not disappeared when scrolling the Flex Events\r\n7. Select the # of Events as requested for Flex Pacakge and click on Continue\n\nEx: Select the # of Events as 4\r\n8. Provide the # of Tickets needed for Fixed Events and Click on Best Available\r\n9. Verify whether Select All and Clear All Link is not disappeared when scrolling the Flex Events\r\n10. Select the # of Events required for Variable Events as per the Affinity value of Prerequisite 3 and click on Continue\n\nEx: Select 2 Events in the Variable Event List\r\n11. Verify whether Select All and Clear All Link is not disappeared when scrolling the Flex Events\r\n12. Select # of Variable Events in Each window which was prompted as per the the Prerequisite 2\n\nEx: Select 3 Events in each group and click on Continue\r\n13. Provide the # of Tickets needed for Variable Events and Click on Best Available and complete the Sale Transaction\r\n14. Click on Logoff",
        "expected": "1. Fixed Events and Event List should be Created with the Min Max Value\r\n2. Variable Events and Variable Package Event List should be created with the Min max Value\r\n3. Pacakge Should be created with the Affinity value for both the Flex and Variable Event Lists\r\n4. Login should be successful\r\n5. All 10 Fixed Events should be displayed with the Min Max range value as 3 to 5\r\n6. Both the Clear All and Select All Link should not be disappeared when scrolling the Events\r\n7. All 10 Fixed Events should be displayed and the Requested Fixed Events should be selected\n\nEx: 4 Fixed Events should be selected\r\n8. # of Tickets should be provided and navigated to the Variable Event selection Page, which should show all the 4 Events selected in the Step 3\n\nEx: With respect to the affinity value provided in the Prerequisite 3, it would show the # of Flex Events range to be selected as 1 to 2\r\n9. Both the Clear All and Select All Link should not be disappeared when scrolling the Events\r\n10. # of Variable Events should be selected as per the Affinity Value\n\nEx: It would show as 2 different Groups in a separate window with all the 10 Variable Events\r\n11. Both the Clear All and Select All Link should not be disappeared when scrolling the Events\r\n12. It should navigate to the Ticket cart Page\r\n13. # of Tickets should be provided and the Ticket Sale transaction should be completed.\r\n14. User should be Logged off"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.00"
  },
  {
    "id": 30696367,
    "title": "Verify whether the Clear Button is available Lower Left corner for Flex and Variable Pacakge",
    "section_id": 1685222,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-15132",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 12,
    "custom_refs": "C76623",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Create 10 Fixed Events\n2. Create 1 Flex Event List and associate all the      Fixed Events with respect to Season and set the Min Max Value as 3 to 5\r\n2. 1. Create 10 Vairable Events\n2. Create Variable Event List and associate all the Variable Events and set the Min Max value as 2:4\r\n3. 1. Create a Pacakge1\n2. Include both the Flex and Variable Packge Event Lists \n3. Set the Affinity Value Any X: as 1:2 and check the Required Option button\nMake the Package On Sale\r\n4. Launch PVNG application\nLogin using suitable credentials\r\n5. Perform a Sale for the above created package: Package1\r\n6. Select the # of Events as requested for Flex Pacakge and click on Continue\n\nEx: Select the # of Events as 4\r\n7. Verify whether the Clear button is availabe at the Lower Left corner of the Flex Package\r\n8. Provide the # of Tickets needed for Fixed Events and Click on Best Available\r\n9. Verify whether the Clear button is availabe at the Lower Left corner of the Flex Package\r\n10. Select the # of Events required for Variable Events as per the Affinity value of Prerequisite 3 and click on Continue\n\nEx: Select 2 Events in the Variable Event List\r\n11. Verify whether the Clear button is availabe at the Lower Left corner of the Flex Package\r\n12. Select # of Variable Events in Each window which was prompted as per the the Prerequisite 2\n\nEx: Select 3 Events in each group and click on Continue\r\n13. Provide the # of Tickets needed for Variable Events and Click on Best Available and complete the Sale Transaction\r\n14. Click on Logoff",
        "expected": "1. Fixed Events and Event List should be Created with the Min Max Value\r\n2. Variable Events and Variable Package Event List should be created with the Min max Value\r\n3. Pacakge Should be created with the Affinity value for both the Flex and Variable Event Lists\r\n4. Login should be successful\r\n5. All 10 Fixed Events should be displayed with the Min Max range value as 3 to 5\r\n6. All 10 Fixed Events should be displayed and the Requested Fixed Events should be selected\n\nEx: 4 Fixed Events should be selected\r\n7. Clear button should be available at the Lower Left corner of the Page\r\n8. # of Tickets should be provided and navigated to the Variable Event selection Page, which should show all the 4 Events selected in the Step 3\n\nEx: With respect to the affinity value provided in the Prerequisite 3, it would show the # of Flex Events range to be selected as 1 to 2\r\n9. Clear button should be available at the Lower Left corner of the Page\r\n10. # of Variable Events should be selected as per the Affinity Value\n\nEx: It would show as 2 different Groups in a separate window with all the 10 Variable Events\r\n11. Clear button should be available at the Lower Left corner of the Page\r\n12. It should navigate to the Ticket cart Page\r\n13. # of Tickets should be provided and the Ticket Sale transaction should be completed.\r\n14. User should be Logged off"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.00"
  },
  {
    "id": 30696368,
    "title": "Verify whether the Cancel Pacakge Button is available Lower Right corner for Flex and Variable Pacakge",
    "section_id": 1685222,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-15132",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_pv_category": 12,
    "custom_refs": "C76624",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Create 10 Fixed Events\n2. Create 1 Flex Event List and associate all the      Fixed Events with respect to Season and set the Min Max Value as 3 to 5\r\n2. 1. Create 10 Vairable Events\n2. Create Variable Event List and associate all the Variable Events and set the Min Max value as 2:4\r\n3. 1. Create a Pacakge1\n2. Include both the Flex and Variable Packge Event Lists \n3. Set the Affinity Value Any X: as 1:2 and check the Required Option button\nMake the Package On Sale\r\n4. Launch PVNG application\nLogin using suitable credentials\r\n5. Perform a Sale for the above created package: Package1\r\n6. Verify whether the Cancel package button is avaialable at the Lower Right Corner of the Portal\r\n7. Click on the cancel package button and verify whether the Package is getting cancelled or not\r\n8. Logoff from the Application",
        "expected": "1. Fixed Events and Event List should be Created with the Min Max Value\r\n2. Variable Events and Variable Package Event List should be created with the Min max Value\r\n3. Pacakge Should be created with the Affinity value for both the Flex and Variable Event Lists\r\n4. Login should be successful\r\n5. All 10 Fixed Events should be displayed with the Min Max range value as 3 to 5\r\n6. Cancel Package button should be available at the Lower Right corner of the Portal\r\n7. Package Should be cancelled\r\n8. Application should be logged off"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.00"
  },
  {
    "id": 30696369,
    "title": "Verify the Table style should display as grid with alternative  colors for rows for Flex and Variable Pacakge",
    "section_id": 1685222,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-15132",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_pv_category": 12,
    "custom_refs": "C76625",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Create 10 Fixed Events\n2. Create 1 Flex Event List and associate all the      Fixed Events with respect to Season and set the Min Max Value as 3 to 5\r\n2. 1. Create 10 Vairable Events\n2. Create Variable Event List and associate all the Variable Events and set the Min Max value as 2:4\r\n3. 1. Create a Pacakge1\n2. Include both the Flex and Variable Packge Event Lists \n3. Set the Affinity Value Any X: as 1:2 and check the Required Option button\nMake the Package On Sale\r\n4. Launch PVNG application\nLogin using suitable credentials\r\n5. Perform a Sale for the above created package: Package1\r\n6. Verify whether the Table style should display as grid with alternating colors for rows\r\n7. Select the # of Events as requested for Flex Pacakge and click on Continue\n\nEx: Select the # of Events as 4\r\n8. Provide the # of Tickets needed for Fixed Events and Click on Best Available\r\n9. Verify whether the Table style should display as grid with alternating colors for rows\r\n10. Select the # of Events required for Variable Events as per the Affinity value of Prerequisite 3 and click on Continue\n\nEx: Select 2 Events in the Variable Event List\r\n11. Verify whether the Table style should display as grid with alternating colors for rows\r\n12. Select # of Variable Events in Each window which was prompted as per the the Prerequisite 2\n\nEx: Select 3 Events in each group and click on Continue\r\n13. Provide the # of Tickets needed for Variable Events and Click on Best Available and complete the Sale Transaction\r\n14. Click on Logoff",
        "expected": "1. Fixed Events and Event List should be Created with the Min Max Value\r\n2. Variable Events and Variable Package Event List should be created with the Min max Value\r\n3. Pacakge Should be created with the Affinity value for both the Flex and Variable Event Lists\r\n4. Login should be successful\r\n5. All 10 Fixed Events should be displayed with the Min Max range value as 3 to 5\r\n6. Table should be displayed in the alternative colors\r\n7. All 10 Fixed Events should be displayed and the Requested Fixed Events should be selected\n\nEx: 4 Fixed Events should be selected\r\n8. # of Tickets should be provided and navigated to the Variable Event selection Page, which should show all the 4 Events selected in the Step 3\n\nEx: With respect to the affinity value provided in the Prerequisite 3, it would show the # of Flex Events range to be selected as 1 to 2\r\n9. Table should be displayed in the alternative colors\r\n10. # of Variable Events should be selected as per the Affinity Value\n\nEx: It would show as 2 different Groups in a separate window with all the 10 Variable Events\r\n11. Table should be displayed in the alternative colors\r\n12. It should navigate to the Ticket cart Page\r\n13. # of Tickets should be provided and the Ticket Sale transaction should be completed.\r\n14. User should be Logged off"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.00"
  },
  {
    "id": 30696370,
    "title": "Verify whether the Select All, Clear All Link is available for Each Event List Group for Flex and Variable Pacakge",
    "section_id": 1685222,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-15132",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_pv_category": 12,
    "custom_refs": "C76626",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Create 10 Fixed Events\r\n2. Create 1 Flex Event List and associate all the      Fixed Events with respect to Season and set the Min Max Value as 3 to 5\r\n2. 1. Create 10 Vairable Events\n2. Create Variable Event List and associate all the Variable Events and set the Min Max value as 2:4\r\n3. 1. Create a Pacakge1\n2. Include both the Flex and Variable Packge Event Lists \n3. Set the Affinity Value Any X: as 1:2 and check the Required Option button\nMake the Package On Sale\r\n4. Launch PVNG application\nLogin using suitable credentials\r\n5. Perform a Sale for the above created package: Package1\r\n6. Select the # of Events as requested for Flex Pacakge and click on Continue\n\nEx: Select the # of Events as 4\r\n7. Verify whether the Select All and Clear All link is available\r\n8. Provide the # of Tickets needed for Fixed Events and Click on Best Available\r\n9. Verify whether the Select All and Clear All link is available\r\n10. Select the # of Events required for Variable Events as per the Affinity value of Prerequisite 3 and click on Continue\n\nEx: Select 2 Events in the Variable Event List\r\n11. Verify whether the Select All and Clear All link is available\r\n12. Select # of Variable Events in Each window which was prompted as per the the Prerequisite 2\n\nEx: Select 3 Events in each group and click on Continue\r\n13. Provide the # of Tickets needed for Variable Events and Click on Best Available and complete the Sale Transaction\r\n14. Click on Logoff",
        "expected": "1. Fixed Events and Event List should be Created with the Min Max Value\r\n2. Variable Events and Variable Package Event List should be created with the Min max Value\r\n3. Pacakge Should be created with the Affinity value for both the Flex and Variable Event Lists\r\n4. Login should be successful\r\n5. All 10 Fixed Events should be displayed with the Min Max range value as 3 to 5\r\n6. All 10 Fixed Events should be displayed and the Requested Fixed Events should be selected\n\nEx: 4 Fixed Events should be selected\r\n7. Select All and Clear All should be available for Sale\r\n8. # of Tickets should be provided and navigated to the Variable Event selection Page, which should show all the 4 Events selected in the Step 3\n\nEx: With respect to the affinity value provided in the Prerequisite 3, it would show the # of Flex Events range to be selected as 1 to 2\r\n9. Select All and Clear All should be available for Sale\r\n10. # of Variable Events should be selected as per the Affinity Value\n\nEx: It would show as 2 different Groups in a separate window with all the 10 Variable Events\r\n11. Select All and Clear All should be available for Sale\r\n12. It should navigate to the Ticket cart Page\r\n13. # of Tickets should be provided and the Ticket Sale transaction should be completed.\r\n14. User should be Logged off"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.00"
  },
  {
    "id": 30696371,
    "title": "Verify the event detail should display in a single line with the Format as EVENT CODE ? Event description ? Event Date for Flex Package",
    "section_id": 1685222,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-15132",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_pv_category": 12,
    "custom_refs": "C76627",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Create 10 Fixed Events\n2. Create 1 Flex Event List and associate all the      Fixed Events with respect to Season and set the Min Max Value as 3 to 5\r\n2. 1. Create 10 Vairable Events\n2. Create Variable Event List and associate all the Variable Events and set the Min Max value as 2:4\r\n3. 1. Create a Pacakge1\n2. Include both the Flex and Variable Packge Event Lists \n3. Set the Affinity Value Any X: as 1:2 and check the Required Option button\nMake the Package On Sale\r\n4. Launch PVNG application\nLogin using suitable credentials\r\n5. Perform a Sale for the above created package: Package1\r\n6. Verify event detail should display in a single line with the Format as EVENT CODE ? Event description ? Event Date for Flex Package\r\n7. Click on Logoff",
        "expected": "1. Fixed Events and Event List should be Created with the Min Max Value\r\n2. Variable Events and Variable Package Event List should be created with the Min max Value\r\n3. Pacakge Should be created with the Affinity value for both the Flex and Variable Event Lists\r\n4. Login should be successful\r\n5. All 10 Fixed Events should be displayed with the Min Max range value as 3 to 5\r\n6. Event Detail should display correctly\r\n7. User should be Logged off"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.00"
  },
  {
    "id": 30696372,
    "title": "Verify whether the Scroll bar is available within the list of events for Flex and Variable Pacakge",
    "section_id": 1685222,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-15132",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_pv_category": 12,
    "custom_refs": "C76628",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Create 10 Fixed Events\n2. Create 1 Flex Event List and associate all the      Fixed Events with respect to Season and set the Min Max Value as 3 to 5\r\n2. 1. Create 10 Vairable Events\n2. Create Variable Event List and associate all the Variable Events and set the Min Max value as 2:4\r\n3. 1. Create a Pacakge1\n2. Include both the Flex and Variable Packge Event Lists \n3. Set the Affinity Value Any X: as 1:2 and check the Required Option button\nMake the Package On Sale\r\n4. Launch PVNG application\nLogin using suitable credentials\r\n5. Perform a Sale for the above created package: Package1\r\n6. Verify whether the Scroll bar is available with in the Flex event list\r\n7. Select the # of Events as requested for Flex Pacakge and click on Continue\n\nEx: Select the # of Events as 4\r\n8. Provide the # of Tickets needed for Fixed Events and Click on Best Available\r\n9. Verify whether the Scroll bar is available with in the Flex event list\r\n10. Select the # of Events partially by clicking the checkbox required for Variable Events as per the Affinity value of Prerequisite 3 and click on Continue\n\nEx: Select 2 Events in the Variable Event List\r\n11. Select # of Variable Events partially by clicking the checkbox in Each window which was prompted as per the the Prerequisite 2\n\nEx: Select 3 Events in each group and click on Continue\r\n12. Provide the # of Tickets needed for Variable Events and Click on Best Available and complete the Sale Transaction\r\n13. Click on Logoff",
        "expected": "1. Fixed Events and Event List should be Created with the Min Max Value\r\n2. Variable Events and Variable Package Event List should be created with the Min max Value\r\n3. Pacakge Should be created with the Affinity value for both the Flex and Variable Event Lists\r\n4. Login should be successful\r\n5. All 10 Fixed Events should be displayed with the Min Max range value as 3 to 5\r\n6. Scroll Bar should be available. It will be availabe only when More # of events are selected\r\n7. All 10 Fixed Events should be displayed and the Requested Fixed Events should be selected\n\nEx: 4 Fixed Events should be selected\r\n8. # of Tickets should be provided and navigated to the Variable Event selection Page, which should show all the 4 Events selected in the Step 3\n\nEx: With respect to the affinity value provided in the Prerequisite 3, it would show the # of Variable Events range to be selected as 1 to 2\r\n9. Scroll Bar should be available. It will be availabe only when More # of events are selected\r\n10. # of Variable Events should be selected as per the Affinity Value\n\nEx: It would show as 2 different Groups in a separate window with all the 10 Variable Events\r\n11. It should navigate to the Ticket cart Page and verify the scroll bar is available\r\n12. # of Tickets should be provided and the Ticket Sale transaction should be completed.\r\n13. User should be Logged off"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.00"
  },
  {
    "id": 30696373,
    "title": "Verify partial selection of events through Select all link and deselect few events by unchecking the events check box for Flex and Variable Pacakge",
    "section_id": 1685222,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-15132",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_pv_category": 12,
    "custom_refs": "C76629",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Create 10 Fixed Events\n2. Create 1 Flex Event List and associate all the      Fixed Events with respect to Season and set the Min Max Value as 3 to 5\r\n2. 1. Create 10 Vairable Events\n2. Create Variable Event List and associate all the Variable Events and set the Min Max value as 2:4\r\n3. 1. Create a Pacakge1\n2. Include both the Flex and Variable Packge Event Lists \n3. Set the Affinity Value Any X: as 1:2 and check the Required Option button\nMake the Package On Sale\r\n4. Launch PVNG application\nLogin using suitable credentials\r\n5. Perform a Sale for the above created package: Package1\r\n6. Verify the Select All link selects all the events\r\n7. Deselect few events by unchecking the events check box for flex package\r\n8. Select the # of Events as requested for Flex Pacakge and click on Continue\n\nEx: Select the # of Events as 4\r\n9. Provide the # of Tickets needed for Fixed Events and Click on Best Available\r\n10. Verify the Select All link selects all the events\r\n11. Deselect few events by unchecking the events check box for flex package\r\n12. Select the # of Events required for Variable Events as per the Affinity value of Prerequisite 3 and click on Continue\n\nEx: Select 2 Events in the Variable Event List\r\n13. Verify the Select All link selects all the events\r\n14. Deselect few events by unchecking the events check box for flex package\r\n15. Select # of Variable Events in Each window which was prompted as per the the Prerequisite 2\n\nEx: Select 3 Events in each group and click on Continue\r\n16. Provide the # of Tickets needed for Variable Events and Click on Best Available and complete the Sale Transaction\r\n17. Click on Logoff",
        "expected": "1. Fixed Events and Event List should be Created with the Min Max Value\r\n2. Variable Events and Variable Package Event List should be created with the Min max Value\r\n3. Pacakge Should be created with the Affinity value for both the Flex and Variable Event Lists\r\n4. Login should be successful\r\n5. All 10 Fixed Events should be displayed with the Min Max range value as 3 to 5\r\n6. All events should get selected\r\n7. Few events should get deselected and leave remaining events that are checked (i.e) Partially selecting the events through select All link\r\n8. All 10 Fixed Events should be displayed and the Requested Fixed Events should be selected\n\nEx: 4 Fixed Events should be selected\r\n9. # of Tickets should be provided and navigated to the Variable Event selection Page, which should show all the 4 Events selected in the Step 3\n\nEx: With respect to the affinity value provided in the Prerequisite 3, it would show the # of Variable Events range to be selected as 1 to 2\r\n10. All events should get selected\r\n11. Few events should get deselected and leave remaining events that are checked (i.e) Partially selecting the events through select All link\r\n12. # of Variable Events should be selected as per the Affinity Value\n\nEx: It would show as 2 different Groups in a separate window with all the 10 Variable Events\r\n13. All events should get selected\r\n14. Few events should get deselected and leave remaining events that are checked (i.e) Partially selecting the events through select All link\r\n15. It should navigate to the Ticket cart Page\r\n16. # of Tickets should be provided and the Ticket Sale transaction should be completed.\r\n17. User should be Logged off"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.00"
  },
  {
    "id": 30696374,
    "title": "Verify partial selection of events by checking the event check boxes individually in the Group frame for Flex and Variable Pacakge",
    "section_id": 1685222,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-15132",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 9,
    "custom_is_automated": false,
    "custom_pv_category": 12,
    "custom_refs": "C76630",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Create 10 Fixed Events\n2. Create 1 Flex Event List and associate all the      Fixed Events with respect to Season and set the Min Max Value as 3 to 5\r\n2. 1. Create 10 Vairable Events\n2. Create Variable Event List and associate all the Variable Events and set the Min Max value as 2:4\r\n3. 1. Create a Pacakge1\n2. Include both the Flex and Variable Packge Event Lists \n3. Set the Affinity Value Any X: as 1:2 and check the Required Option button\nMake the Package On Sale\r\n4. Launch PVNG application\nLogin using suitable credentials\r\n5. Perform a Sale for the above created package: Package1\r\n6. Select the # of Events as requested for Flex Pacakge and click on Continue\n\nEx: Select the # of Events as 4\r\n7. Provide the # of Tickets needed for Fixed Events and Click on Best Available\r\n8. Select the # of Events partially by clicking the checkbox required for Variable Events as per the Affinity value of Prerequisite 3 and click on Continue\n\nEx: Select 2 Events in the Variable Event List\r\n9. Select # of Variable Events partially by clicking the checkbox in Each window which was prompted as per the the Prerequisite 2\n\nEx: Select 3 Events in each group and click on Continue\r\n10. Provide the # of Tickets needed for Variable Events and Click on Best Available and complete the Sale Transaction\r\n11. Click on Logoff",
        "expected": "1. Fixed Events and Event List should be Created with the Min Max Value\r\n2. Variable Events and Variable Package Event List should be created with the Min max Value\r\n3. Pacakge Should be created with the Affinity value for both the Flex and Variable Event Lists\r\n4. Login should be successful\r\n5. All 10 Fixed Events should be displayed with the Min Max range value as 3 to 5\r\n6. All 10 Fixed Events should be displayed and the Requested Fixed Events should be selected\n\nEx: 4 Fixed Events should be selected\r\n7. # of Tickets should be provided and navigated to the Variable Event selection Page, which should show all the 4 Events selected in the Step 3\n\nEx: With respect to the affinity value provided in the Prerequisite 3, it would show the # of Variable Events range to be selected as 1 to 2\r\n8. # of Variable Events should be selected as per the Affinity Value\n\nEx: It would show as 2 different Groups in a separate window with all the 10 Variable Events\r\n9. It should navigate to the Ticket cart Page\r\n10. # of Tickets should be provided and the Ticket Sale transaction should be completed.\r\n11. User should be Logged off"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.00"
  },
  {
    "id": 30696375,
    "title": "Verify the select All Link selects all the Events in the Group Frame for Flex and Variable Pacakge",
    "section_id": 1685222,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-15132",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 10,
    "custom_is_automated": false,
    "custom_pv_category": 12,
    "custom_refs": "C76631",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Create 10 Fixed Events\n2. Create 1 Flex Event List and associate all the      Fixed Events with respect to Season and set the Min Max Value as 3 to 5\r\n2. 1. Create 10 Vairable Events\n2. Create Variable Event List and associate all the Variable Events and set the Min Max value as 2:4\r\n3. 1. Create a Pacakge1\n2. Include both the Flex and Variable Packge Event Lists \n3. Set the Affinity Value Any X: as 1:2 and check the Required Option button\nMake the Package On Sale\r\n4. Launch PVNG application\nLogin using suitable credentials\r\n5. Perform a Sale for the above created package: Package1\r\n6. Verify the Select All link selects all the events\r\n7. Select the # of Events as requested for Flex Pacakge and click on Continue\n\nEx: Select the # of Events as 4\r\n8. Provide the # of Tickets needed for Fixed Events and Click on Best Available\r\n9. Verify the Select All link selects all the events\r\n10. Select the # of Events required for Variable Events as per the Affinity value of Prerequisite 3 and click on Continue\n\nEx: Select 2 Events in the Variable Event List\r\n11. Verify the Select All link selects all the events\r\n12. Select # of Variable Events in Each window which was prompted as per the the Prerequisite 2\n\nEx: Select 3 Events in each group and click on Continue\r\n13. Provide the # of Tickets needed for Variable Events and Click on Best Available and complete the Sale Transaction\r\n14. Click on Logoff",
        "expected": "1. Fixed Events and Event List should be Created with the Min Max Value\r\n2. Variable Events and Variable Package Event List should be created with the Min max Value\r\n3. Pacakge Should be created with the Affinity value for both the Flex and Variable Event Lists\r\n4. Login should be successful\r\n5. All 10 Fixed Events should be displayed with the Min Max range value as 3 to 5\r\n6. All events should get selected and and select only the # of events as per the Min Max value\r\n7. All 10 Fixed Events should be displayed and the Requested Fixed Events should be selected\n\nEx: 4 Fixed Events should be selected\r\n8. # of Tickets should be provided and navigated to the Variable Event selection Page, which should show all the 4 Events selected in the Step 3\n\nEx: With respect to the affinity value provided in the Prerequisite 3, it would show the # of Variable Events range to be selected as 1 to 2\r\n9. All events should get selected and and select only the # of events as per the Min Max value\r\n10. # of Variable Events should be selected as per the Affinity Value\n\nEx: It would show as 2 different Groups in a separate window with all the 10 Variable Events\r\n11. All events should get selected and and select only the # of events as per the Min Max value\r\n12. It should navigate to the Ticket cart Page\r\n13. # of Tickets should be provided and the Ticket Sale transaction should be completed.\r\n14. User should be Logged off"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.00"
  },
  {
    "id": 30696376,
    "title": "Verify the Clear All Link deselects all the Events in the Group Frame for Flex and Variable Pacakge",
    "section_id": 1685222,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-15132",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 11,
    "custom_is_automated": false,
    "custom_pv_category": 12,
    "custom_refs": "C76632",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Create 10 Fixed Events\n2. Create 1 Flex Event List and associate all the      Fixed Events with respect to Season and set the Min Max Value as 3 to 5\r\n2. 1. Create 10 Vairable Events\n2. Create Variable Event List and associate all the Variable Events and set the Min Max value as 2:4\r\n3. 1. Create a Pacakge1\n2. Include both the Flex and Variable Packge Event Lists \n3. Set the Affinity Value Any X: as 1:2 and check the Required Option button\nMake the Package On Sale\r\n4. Launch PVNG application\nLogin using suitable credentials\r\n5. Perform a Sale for the above created package: Package1\r\n6. Select the # of Events as requested for Flex Pacakge and click on Continue\n\nEx: Select the # of Events as 4\r\n7. Verify the Clear All link Deselects all the selected Events and again Select the # of events\r\n8. Provide the # of Tickets needed for Fixed Events and Click on Best Available\r\n9. Select the # of Events required for Variable Events as per the Affinity value of Prerequisite 3 and click on Continue\n\nEx: Select 2 Events in the Variable Event List\r\n10. Verify the Clear All link Deselects all the selected Events and again Select the # of events\r\n11. Select # of Variable Events in Each window which was prompted as per the the Prerequisite 2\n\nEx: Select 3 Events in each group and click on Continue\r\n12. Verify the Clear All link Deselects all the selected Events and again Select the # of events\r\n13. Provide the # of Tickets needed for Variable Events and Click on Best Available and complete the Sale Transaction\r\n14. Click on Logoff",
        "expected": "1. Fixed Events and Event List should be Created with the Min Max Value\r\n2. Variable Events and Variable Package Event List should be created with the Min max Value\r\n3. Pacakge Should be created with the Affinity value for both the Flex and Variable Event Lists\r\n4. Login should be successful\r\n5. All 10 Fixed Events should be displayed with the Min Max range value as 3 to 5\r\n6. All 10 Fixed Events should be displayed and the Requested Fixed Events should be selected\n\nEx: 4 Fixed Events should be selected\r\n7. Events should be deselected and selected\r\n8. # of Tickets should be provided and navigated to the Variable Event selection Page, which should show all the 4 Events selected in the Step 3\n\nEx: With respect to the affinity value provided in the Prerequisite 3, it would show the # of Variable Events range to be selected as 1 to 2\r\n9. # of Variable Events should be selected as per the Affinity Value\n\nEx: It would show as 2 different Groups in a separate window with all the 10 Variable Events\r\n10. Events should be deselected and selected\r\n11. It should navigate to the Ticket cart Page\r\n12. Events should be deselected and selected\r\n13. # of Tickets should be provided and the Ticket Sale transaction should be completed.\r\n14. User should be Logged off"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.00"
  },
  {
    "id": 30696377,
    "title": "Flex packages_Verify the validation when seat selection for all the events is incomplete",
    "section_id": 1685222,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-14473",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 12,
    "custom_is_automated": false,
    "custom_pv_category": 12,
    "custom_refs": "C76633",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Create a Flex package with 6 events in the package event list. \r\n2. Go package event list->Events tab \r\n    Set the min/max events value to 2 to 5\r\n2. 1. Input the Flex package created in the search field\r\n2. Click on Find button\r\n3. Click on the code of a package\r\n3. 1. Select less number of events than the minimum number configured as mentioned in the pre-requisite (EG: 1 event)\r\n2. Click on Continue\r\n4. 1. Select more number of events than the maximum number configured as mentioned in the pre-requisite (EG: 6 event)\r\n2. Click on Continue button\r\n5. 1. Select minimum number of events equal to the minimum value (Eg: 2 events) \r\n2. Click on Continue button\r\n3. Click on View Map button\r\n6. 1. Select the package list bar on the right side, expand and switch to event view\r\n2. Select the first event\r\n3. select some seats from the map\r\n4. Click on the ADD AND GOTO CART button\r\n7. 1.Verify that a validation message \"Incomplete offer\" is displayed in the cart and the transaction cannot be completed\r\n2. A link should be displayed to continue the sale process\r\n3. Click on the link\r\n8. 1. Select the package list bar on the right side, expand and switch to event view\r\n2. Select the second event\r\n3. Select some seats from the map\r\n4. Click on the ADD AND GOTO CART button\r\n9. 1. Select a patron\r\n2. Select a delivery method\r\n3. Select a payment method\r\n4. Complete the sale transaction\r\n10. Call",
        "expected": "1. \r\n2. Package sales portal should be displayed with option to select events from the package event list\r\n3. An error message should be displayed saying \"Number of events did not meet the minimum for the package event list\"\r\n4. An error message should be displayed saying \"Number of events is over the maximum allowed for Group \"\r\n5. The map should be displayed\r\n6. 1. The event for which seats are assigned should be marked with a yellow symbol to indicate that event has had a seat assigned\r\n2. The user should be navigate to the shopping cart\r\n7. 1.A validation message \"Incomplete offer\" should be displayed in the cart and the transaction cannot be completed\r\n2. A link should be diplayed to continue the sale process\r\n3. On clicking on the link the user should be navigated to map sales\r\n8. The event for which seats are assigned should be marked with a yellow symbol to indicate that event has had a seat assigned\r\nThe user should be navigate to the shopping cart\r\n9. The transaction should be completed successfully and the confirmation number should be displayed\r\n10."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.4.00"
  },
  {
    "id": 30696378,
    "title": "Flex packages_Perform map sales with events within the min max values",
    "section_id": 1685222,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-14473",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 13,
    "custom_is_automated": false,
    "custom_pv_category": 12,
    "custom_refs": "C76634",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Create a Flex package with 6 events in the package event list. \r\n2. Go package event list->Events tab \r\n    Set the min/max events value to 2 to 5\r\n2. 1. Input the Flex package created in the search field\r\n2. Click on Find button\r\n3. Click on the code of a package\r\n3. 1. Select less number of events than the minimum number configured as mentioned in the pre-requisite (EG: 1 event)\r\n2. Click on Continue\r\n4. 1. Select more number of events than the maximum number configured as mentioned in the pre-requisite (EG: 6 event)\r\n2. Click on Continue button\r\n5. 1. Select minimum number of events within the min max value (Eg: 4 events) \r\n2. Click on Continue button\r\n3. Click on View Map button\r\n6. 1. Select the package list bar on the right side, expand and switch to event view\r\n2. Select the first event\r\n3. select some seats from the map\r\n4. Click on the ADD TO CART button\r\n7. 1. Select the package list bar on the right side, expand and switch to event view\r\n2. Select the each event one by one and assign seats\r\n3. Click on the ADD AND GOTO CART button\r\n8. 1. Select a patron\r\n2. Select a delivery method\r\n3. Select a payment method\r\n4. Complete the sale transaction\r\n9. Call",
        "expected": "1. \r\n2. Package sales portal should be displayed with option to select events from the package event list\r\n3. An error message should be displayed saying \"Number of events did not meet the minimum for the package event list\"\r\n4. An error message should be displayed saying \"Number of events is over the maximum allowed for Group \"\r\n5. The map should be displayed\r\n6. The event for which seats are assigned should be marked with a yellow symbol to indicate that event has had a seat assigned\r\n7. The event for which seats are assigned should be marked with a yellow symbol to indicate that event has had a seat assigned\r\nThe user should be navigate to the shopping cart\r\n8. The transaction should be completed successfully and the confirmation number should be displayed\r\n9."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.2.00"
  },
  {
    "id": 30696379,
    "title": "Flex packages_Perform map sales with events equal to the max value",
    "section_id": 1685222,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-14473",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 14,
    "custom_is_automated": false,
    "custom_pv_category": 12,
    "custom_refs": "C76635",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Create a Flex package with 6 events in the package event list. \r\n2. Go package event list->Events tab \r\n    Set the min/max events value to 2 to 5\r\n2. 1. Input the Flex package created in the search field\r\n2. Click on Find button\r\n3. Click on the code of a package\r\n3. 1. Select less number of events than the minimum number configured as mentioned in the pre-requisite (EG: 1 event)\r\n2. Click on Continue\r\n4. 1. Select more number of events than the maximum number configured as mentioned in the pre-requisite (EG: 6 event)\r\n2. Click on Continue button\r\n5. 1. Select minimum number of events equal to the minimum value (Eg: 2 events) \r\n2. Click on Continue button\r\n3. Click on View Map button\r\n6. 1. Select the package list bar on the right side, expand and switch to event view\r\n2. Select the first event\r\n3. select some seats from the map\r\n4. Click on the ADD TO CART button\r\n7. 1. Select the package list bar on the right side, expand and switch to event view\r\n2. Select the each event one by one and assign seats\r\n3. Click on the ADD AND GOTO CART button\r\n8. Click on the Logout link\r\n9. 1. Select a patron\r\n2. Select a delivery method\r\n3. Select a payment method\r\n4. Complete the sale transaction\r\n10. Call",
        "expected": "1. \r\n2. Package sales portal should be displayed with option to select events from the package event list\r\n3. An error message should be displayed saying \"Number of events did not meet the minimum for the package event list\"\r\n4. An error message should be displayed saying \"Number of events is over the maximum allowed for Group \"\r\n5. The map should be displayed\r\n6. The event for which seats are assigned should be marked with a yellow symbol to indicate that event has had a seat assigned\r\n7. The event for which seats are assigned should be marked with a yellow symbol to indicate that event has had a seat assigned\r\nThe user should be navigate to the shopping cart\r\n8. The user should be logged out successfully\r\n9. The transaction should be completed successfully and the confirmation number should be displayed\r\n10."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.2.00"
  },
  {
    "id": 30696380,
    "title": "Flex packages_Perform map sales with events equal to the min value",
    "section_id": 1685222,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-14473",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 15,
    "custom_is_automated": false,
    "custom_pv_category": 12,
    "custom_refs": "C76636",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Create a Flex package with 6 events in the package event list. \r\n2. Go package event list->Events tab \r\n    Set the min/max events value to 2 to 5\r\n2. 1. Input the Flex package created in the search field\r\n2. Click on Find button\r\n3. Click on the code of a package\r\n3. 1. Select less number of events than the minimum number configured as mentioned in the pre-requisite (EG: 1 event)\r\n2. Click on Continue\r\n4. 1. Select more number of events than the maximum number configured as mentioned in the pre-requisite (EG: 6 event)\r\n2. Click on Continue button\r\n5. 1. Select minimum number of events equal to the minimum value (Eg: 2 events) \r\n2. Click on Continue button\r\n3. Click on View Map button\r\n6. 1. Select the package list bar on the right side, expand and switch to event view\r\n2. Select the first event\r\n3. select some seats from the map\r\n4. Click on the ADD TO CART button\r\n7. 1. Select the package list bar on the right side, expand and switch to event view\r\n2. Select the second event\r\n3. Select some seats from the map\r\n4. Click on the ADD AND GOTO CART button\r\n8. 1. Select a patron\r\n2. Select a delivery method\r\n3. Select a payment method\r\n4. Complete the sale transaction\r\n9. Call",
        "expected": "1. \r\n2. Package sales portal should be displayed with option to select events from the package event list\r\n3. An error message should be displayed saying \"Number of events did not meet the minimum for the package event list\"\r\n4. An error message should be displayed saying \"Number of events is over the maximum allowed for Group \"\r\n5. The map should be displayed\r\n6. The event for which seats are assigned should be marked with a yellow symbol to indicate that event has had a seat assigned\r\n7. The event for which seats are assigned should be marked with a yellow symbol to indicate that event has had a seat assigned\r\nThe user should be navigate to the shopping cart\r\n8. The transaction should be completed successfully and the confirmation number should be displayed\r\n9."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.2.00"
  },
  {
    "id": 30696381,
    "title": "Verify the logs when the  flex package doesnt include package id",
    "section_id": 1685223,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17223",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": "C76672",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Create a season\n2. Create 5 Events associated with above season\n3. Create 2 Eventlist associated with above season\n4. Associate 2 events to first eventlist and 3 events to second eventlist, with min value as 2 and max value as 5\n5. Associate these 2 eventlist to a flex package\r\n2. 1. Launch the Maintenance site\n2. Perf accept all the events\n3. Select Flex pack under supplier related\n4. Enter the details and input any one of the event perf id as proxy event id(Perf id to use for availability)\n5. Create sub groups for 2 Package eventlist with perf group id\r\n3. 1.Login to Maintainence site\r\n2.Go to Supplier and click on Flex-pack\r\nDo not give value \"PV package id \" field and save changes\r\n4. Launch  MLB PV single tickets application with the following URL \n\r\n5. Verify the list of Event Ids is displayed in the PV Bots logs along with proxy event id for a flex package\r\n6. 1.Select a number from the drop down list as >.\n2. Select Price Level as Best Available.\n3. Click on Continue button.\r\n7. 1. Enter the Recaptcha  displayed in the Recaptcha  verification image.\n2. Click the continue button.\r\n8. Click the continue button.\r\n9. Click the continue button.\r\n10. Enter value for the following required fields:First name \nLast name \nAdd 1 \nCity, Postal Code \nState \nEmail Confirm Email \nPhone \nCC Type : Visa \nCC no \nEXP \nCVV>   \nDelivery Method \r\n11. Click on Buy Tickets in the Summary frame\r\n12. Verify that the confirmation email is sent to the buyer's email id\nVerify the content of the email\r\n13. Verify the Logs \r\n\r\n\r\n    - 16:35:13,009 [Operator(id=1004, userLogin=pvo_single_tix), Agency(id=1004, code=PVO-IA), ] WARN  [AvailabilityRequestParser] Performance code tag value: is not a valid Long. It should be the event id or package id..\"",
        "expected": "1. \r\n2. \r\n3. The Pre-requisite  should be set\r\n4. The application should be launched.\r\n5. All the event id's should get displayed in the log along with the proxy event id\r\n6. Recaptcha verification page should be displayed\r\n7. The ticket price details page should be displayed.\r\n8. The shopping mart page should be displayed.\r\n9. The payment page should be displayed.\r\n10. User able to enter the payment info\r\n11. Thanks for your Order page should be displayed with the following Details:\nBill To/Ship To: (Address, Payment Details)\nConfirmation no. : (Bots Patron Id / Order no.).\r\n12. The Confirmation email should be received  by the buyer.\nThe ticket details,venue details , payment details ,shipping details and patron information should be same as that in the \"Thanks for your Order\" page\r\n13. The Logs should display as the above"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.0.00"
  },
  {
    "id": 30696382,
    "title": "Verify the logs when  incorrect format(alphabets and numbers ) are given in the  event id field",
    "section_id": 1685223,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17223",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": "C76673",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Create a season\n2. Create 5 Events associated with above season\n3. Create 2 Eventlist associated with above season\n4. Associate 2 events to first eventlist and 3 events to second eventlist, with min value as 2 and max value as 5\n5. Associate these 2 eventlist to a flex package\r\n2. 1. Launch the Maintenance site\n2. Perf accept all the events\n3. Select Flex pack under supplier related\n4. Enter the details and input any one of the event perf id as proxy event id(Perf id to use for availability)\n5. Create sub groups for 2 Package eventlist with perf group id\r\n3. 1.Login to Maintainence site\r\n2.Go to Supplier and click on Flex-pack\r\n3.Give Incorrect format for the field\"Perf id to use for Availability\"  and save changes\r\n4. Launch  MLB PV single tickets application with the following URL \n\r\n5. Verify the list of Event Ids is displayed in the PV Bots logs along with proxy event id for a flex package\r\n6. 1.Select a number from the drop down list as >.\n2. Select Price Level as Best Available.\n3. Click on Continue button.\r\n7. 1. Enter the Recaptcha  displayed in the Recaptcha  verification image.\n2. Click the continue button.\r\n8. Click the continue button.\r\n9. Click the continue button.\r\n10. Enter value for the following required fields:First name \nLast name \nAdd 1 \nCity, Postal Code \nState \nEmail Confirm Email \nPhone \nCC Type : Visa \nCC no \nEXP \nCVV>   \nDelivery Method \r\n11. Click on Buy Tickets in the Summary frame\r\n12. Verify that the confirmation email is sent to the buyer's email id\nVerify the content of the email\r\n13. Verify the Logs \r\n\r\n 17:14:16,920 [Operator(id=1004, userLogin=pvo_single_tix), Agency(id=1004, code=PVO-IA), ] WARN  [AvailabilityRequestParser] \"event_id\" or \"event_ids\" tag must be numeric or a comma-separated list of numeric values. Actual value was \"1015a\".",
        "expected": "1. \r\n2. \r\n3. The Pre-requisite  should be set\r\n4. The application should be launched.\r\n5. All the event id's should get displayed in the log along with the proxy event id\r\n6. Recaptcha verification page should be displayed\r\n7. The ticket price details page should be displayed.\r\n8. The shopping mart page should be displayed.\r\n9. The payment page should be displayed.\r\n10. User able to enter the payment info\r\n11. Thanks for your Order page should be displayed with the following Details:\nBill To/Ship To: (Address, Payment Details)\nConfirmation no. : (Bots Patron Id / Order no.).\r\n12. The Confirmation email should be received  by the buyer.\nThe ticket details,venue details , payment details ,shipping details and patron information should be same as that in the \"Thanks for your Order\" page\r\n13. The Logs should display as the above"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.0.00"
  },
  {
    "id": 30696383,
    "title": "Verify the logs when the  flex package doesnt include a proxy performance code",
    "section_id": 1685223,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17223",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": "C76674",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Create a season\n2. Create 5 Events associated with above season\n3. Create 2 Eventlist associated with above season\n4. Associate 2 events to first eventlist and 3 events to second eventlist, with min value as 2 and max value as 5\n5. Associate these 2 eventlist to a flex package\r\n2. 1. Launch the Maintenance site\n2. Perf accept all the events\n3. Select Flex pack under supplier related\n4. Enter the details and input any one of the event perf id as proxy event id(Perf id to use for availability)\n5. Create sub groups for 2 Package eventlist with perf group id\r\n3. Launch  MLB PV single tickets application with the following URL \n\r\n4. Verify the list of Event Ids is displayed in the PV Bots logs along with proxy event id for a flex package\r\n5. 1.Select a number from the drop down list as >.\n2. Select Price Level as Best Available.\n3. Click on Continue button.\r\n6. 1. Enter the Recaptcha  displayed in the Recaptcha  verification image.\n2. Click the continue button.\r\n7. Click the continue button.\r\n8. Click the continue button.\r\n9. Enter value for the following required fields:First name \nLast name \nAdd 1 \nCity, Postal Code \nState \nEmail Confirm Email \nPhone \nCC Type : Visa \nCC no \nEXP \nCVV>   \nDelivery Method \r\n10. Click on Buy Tickets in the Summary frame\r\n11. Verify that the confirmation email is sent to the buyer's email id\nVerify the content of the email\r\n12. 1.Login to Maintainence site\r\n2.Go to Supplier and click on Flex-pack\r\nDo not give value \"Perf id to use for Availability\" field and save changes\r\n13. Verify the Logs \r\n\r\n\"01:06:55,058 [Operator(id=2281, userLogin=phlpvo6bos), Agency(id=1423, code=INTSIX), ] WARN [BaseWebServiceController] Availability request received without an event id.\"",
        "expected": "1. \r\n2. \r\n3. The application should be launched.\r\n4. All the event id's should get displayed in the log along with the proxy event id\r\n5. Recaptcha verification page should be displayed\r\n6. The ticket price details page should be displayed.\r\n7. The shopping mart page should be displayed.\r\n8. The payment page should be displayed.\r\n9. User able to enter the payment info\r\n10. Thanks for your Order page should be displayed with the following Details:\nBill To/Ship To: (Address, Payment Details)\nConfirmation no. : (Bots Patron Id / Order no.).\r\n11. The Confirmation email should be received  by the buyer.\nThe ticket details,venue details , payment details ,shipping details and patron information should be same as that in the \"Thanks for your Order\" page\r\n12. The Pre-requisite  should be set\r\n13. The Logs should display as the above"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.0.00"
  },
  {
    "id": 30696384,
    "title": "Verify the list of Event Ids is displayed in the PV Bots for a flex package",
    "section_id": 1685224,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17305",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": "C76676",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Create a season\n2. Create 5 Events associated with above season\n3. Create 2 Eventlist associated with above season\n4. Associate 2 events to first eventlist and 3 events to second eventlist, with min value as 2 and max value as 5\n5. Associate these 2 eventlist to a flex package\r\n2. 1. Launch the Maintenance site\r\n2. Perf accept all the events\r\n3. Select Flex pack under supplier related\r\n4. Enter the details and input any one of the event perf id as proxy event id(Perf id to use for availability)\r\n5. Create sub groups for 2 Package eventlist with perf group id\r\n3. Launch  MLB PV single tickets application with the following URL \n\r\n4. Verify the list of Event Ids is displayed in the PV Bots logs along with proxy event id for a flex package\r\n5. 1.Select a number from the drop down list as >.\n2. Select Price Level as Best Available.\n3. Click on Continue button.\r\n6. 1. Enter the Recaptcha  displayed in the Recaptcha  verification image.\n2. Click the continue button.\r\n7. Click the continue button.\r\n8. Click the continue button.\r\n9. Enter value for the following required fields:First name \nLast name \nAdd 1 \nCity, Postal Code \nState \nEmail Confirm Email \nPhone \nCC Type : Visa \nCC no \nEXP \nCVV>   \nDelivery Method \r\n10. Click on Buy Tickets in the Summary frame\r\n11. Verify that the confirmation email is sent to the buyer's email id\nVerify the content of the email",
        "expected": "1. \r\n2. \r\n3. The application should be launched.\r\n4. All the event id's should get displayed in the log along with the proxy event id\r\n5. Recaptcha verification page should be displayed\r\n6. The ticket price details page should be displayed.\r\n7. The shopping mart page should be displayed.\r\n8. The payment page should be displayed.\r\n9. User able to enter the payment info\r\n10. Thanks for your Order page should be displayed with the following Details:\nBill To/Ship To: (Address, Payment Details)\nConfirmation no. : (Bots Patron Id / Order no.).\r\n11. The Confirmation email should be received  by the buyer.\nThe ticket details,venue details , payment details ,shipping details and patron information should be same as that in the \"Thanks for your Order\" page"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.40"
  },
  {
    "id": 30696385,
    "title": "Verify Ticket Services after a Flex Package Sale in PVO",
    "section_id": 1685224,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-14809",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 12,
    "custom_refs": "C76677",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the PVNG portal and login as a BO user\r\n2. Navigate to Ticket Services\r\n3. Search for the Transaction mentioned in Pre-Condition\r\n4. - Verify the Transaction details\r\n- Verify for Package/Package Event List/event Names\r\n- Verify for No.of Seats/Amount etc\r\n5. Click on the 'Logout' link\r\n6. - In PV a Flex Package should be set\r\n- Perf Accept the Package and complete a Transaction in PVO\r\n- Note down the Transaction Id",
        "expected": "1. Application should be launched successfully and user should able to login\r\n2. Ticket Services Portal should be opened.\r\n3. Transaction details should be displayed\r\n4. All Transaction details displayed should be correct.\r\n5. User should be logged out successfully.\r\n6."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.4.00"
  },
  {
    "id": 30696386,
    "title": "Verify the Fusebox values when user remove the payment from the cart before checkout",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-21048",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C41875",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Setup a credit card for fusebox server\r\n2. Enable the DEBUG mode in the log file to catch protobase messages:\r\nAdd the following in log4j.xml file present in the location:jboss\\default\\conf \r\n\r\n\r\n\r\n   \r\n   \r\n      \r\n   \r\n2. 1. Select the Application Feature Permission\r\n\r\n2. Set the \"Default Card Transaction Source\" to Retail and inherit till the user level\r\n3. \r\n4. Login as a valid user using the following credentials:\n1. Username: \n2. Password: \r\n5. 1. Open Ticket Sales\r\n2. Search and select any event\r\n3. Input any number of tickets\r\n4. Click on BEST AVAILABLE\r\n5. Search and select any patron\r\n6. Select any delivery\r\n7. Clcik on \"Apply\" button\r\n6. 1. Selet credit card from the payment type drop down\r\n2. Input the following fields\r\na. Card Number\r\nb. CVV number\r\n3. Click on \"Accept payment\" button but don't click on checkout\r\n7. Verify Fusebox don't send field 701 (street address line 1) when the data is empty/null\r\n8. Verify Protobase sends field 701 (street address line 1) when the data is empty/null",
        "expected": "1. \r\n2. The  \"Default Card Transaction Source\" to Retail and inherit till the user level should be completed sucessfully\r\n3. Site should be launched\r\n4. User should be logged in\r\n5. The user should be navigated to payment page\r\n6. Payment should be accepted\r\n7. Fusebox should not send field 701 when the street address line 1 is empty/null for the patron\r\n8. Protobase should send field 701 when the street address line 1 is empty/null for the patron"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.2.00"
  },
  {
    "id": 30696387,
    "title": "verify orderless transaction messages is supported for pre payments, liability distribution, disbursement or write-off",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-20806",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 27,
    "custom_refs": "C41876",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link\r\nLogin with valid credentials\r\n2. Navigate to patron management\r\nNavigate to Account Balanace tab\r\n3. Click on Add credit\r\nSelect credit source as Pre payment, amount\r\nSelect the credit card for payment and complete the transaction\r\n4. verify orderless transaction messages is \r\nsupported for pre payments, liability distribution, \r\ndisbursement or write-off\r\n5. Set the property: \r\n\"jms.TicketActionMsgCreator.enable.orderless.messages\" and \r\norder.util.TicketActionMsgCreator.create.message\"  to true",
        "expected": "1. Application should be launched\r\n2. User should be able to naviagate\r\n3. User should be able to complete the transaction\r\n4. orderless transaction messages should be supported in logs and logs Message similar to the below should be sent: \r\n[clientId=clientID;CorrelationId=orderlessTransaction;MessageType=TicketFact] \r\n\"FORM_CODE=TICKET_FACT&ADAPTER_CODE=orderlessTransaction&txnId=366007\"\r\n5. Property should be set in application properties"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.4.10.xx"
  },
  {
    "id": 30696388,
    "title": "Verify Patron able to disburse the Account Credit to Patron Card on File",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19924",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_pv_category": 27,
    "custom_refs": "C41877",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the application. \r\n2. Login using valid username and password.\r\n2. Navigate to the Ticket sales portal\r\n3. Sell 2 tickets for an event and assign to a new \r\npatron.\r\n4. Pay with a Credit Card and check out.\r\n5. Return 1 of the tickets to an account credit and complete the transaction\r\n6. Navigate to the patron's account balance tab and select to disbuse the credit.\r\n7. Verify at the payment tab in the cart, click on the Card on File icon.\r\n8. check out the cart\r\nVerify the same for Reverse payment\r\n9. - Select the Logout link",
        "expected": "1. The login should be successful and the 'Home' page  of the application should be displayed.\r\n2. User should be able to enter successfully\r\n3. Event should be selected successfully and patron should be assigned\r\n4. Actins should be performed successfully\r\n5. Transaction should be completed\r\n6. User able to perform the action\r\n7. Credit cards should be populated\r\n8. The user should be able to complete the  transaction successfully\r\n9. User should be Logged out successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.4.00"
  },
  {
    "id": 30696389,
    "title": "Verify Complementary & Upsell Locks if the user has no selectable hold codes.",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19908",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C41878",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Sell all the seats belonging to the target extended seat for the upsell event\r\n2. Launch the link for PV Application\r\n3. Go to the TicketSales from the Ticketing tab of the PV Application\r\n4. Select the Upsell Event  that is set\r\n5. Give the number of Tickets in the Seat Request  and click on Lock Tickets button with a Patron\r\n6. Verify that the Multiple Offer Modal Window should not be displayed.\r\n\r\nOnly the primary offer should be displayed\r\n7. Select the Delivery Method from the delivery method drop down and click on Apply  Button\r\n8. Select the Payment method and click on Accept Payment\r\n9. Call",
        "expected": "1. \r\n2. The PV application should be launched successfully\r\n3. The user should be navigated to the Ticket Sales\r\n4. The user should be able  to select the Upsell Event successfully\r\n5. The user should be displayed a Multiple Offer Pop up modal window with the Primary and the Secondary offers set\r\n6. The Multiple Offer Modal Window should not be displayed. Only the primary offer should be displayed\r\n7. The user should be able to select the Delivery method from the drop down and navigated to the Payment\r\n8. The user should be able to complete the transaction successfully and the transaction id should be displayed\r\n9."
      },
      {
        "content": "1. Sell all the seats belonging to the target extended seat for the upsell event\r\n2. Launch the link for PV Application\r\n3. Go to the TicketSales from the Ticketing tab of the PV Application\r\n4. Select the Upsell Event  that is set\r\n5. Give the number of Tickets in the Seat Request  and click on Lock Tickets button with a Patron\r\n6. Verify that the Multiple Offer Modal Window should not be displayed.\r\n\r\nOnly the primary offer should be displayed\r\n7. Select the Delivery Method from the delivery method drop down and click on Apply  Button\r\n8. Select the Payment method and click on Accept Payment\r\n9. Call",
        "expected": "1. \r\n2. The PV application should be launched successfully\r\n3. The user should be navigated to the Ticket Sales\r\n4. The user should be able  to select the Upsell Event successfully\r\n5. The user should be displayed a Multiple Offer Pop up modal window with the Primary and the Secondary offers set\r\n6. The Multiple Offer Modal Window should not be displayed. Only the primary offer should be displayed\r\n7. The user should be able to select the Delivery method from the drop down and navigated to the Payment\r\n8. The user should be able to complete the transaction successfully and the transaction id should be displayed\r\n9."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.5.00\n3.5.00"
  },
  {
    "id": 30696390,
    "title": "Verify the proper UI is displayed for Ticket Sales page after an Upsell offer",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-18591",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C41880",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Two extended seat definitions should be available which are complementary to each other. Let the extended seat definitins be PUPSEL and SUPSEL\r\n2.Assign these extended seat definitions to all the seats of any particular section S1 in any venue.\r\n3.Note the ranking of the seats. Let the seats of PUPSEL extended seat definition has higher rank compared to that of seats with SUPSEL extended seat definition\r\n4.Create a new event of this venue.\r\n2. Launch PV Application using the link provided\r\n3. Login to the Application using suitable credentials\r\n4. 1. Navigate to Ticket sales\r\n2. Select the event mentioned above\r\n3. Lock seats of ESD PUPSEL or SUPSEL\r\n5. Select an UPsell offer\r\nComplte the transaction\r\n6. Click on Confirmation link\r\nNavigate to Order details page\r\n7. Navigate to Ticket Sales page from the Order details page\r\n8. 1. Click on Log out link.",
        "expected": "1. Pre Requisite should be completed successfully\r\n2. PV Application should be launched succesfully\r\n3. Login should be successfull\r\n4. 1. User should be able to select the seats under the desired Section.\r\n2. \"SELECT AN OFFER\" modal window should be displayed with the primary offer and the UPsell offer.\r\n5. UPsell offer transaction should be completed successfully\r\n6. Ticket Services-Order details page is displayed as expected\r\n7. Ticket details page should be displayed with correct UI\r\n8. User should be able to log out from the application successfully."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.1.00xx"
  },
  {
    "id": 30696391,
    "title": "Verify the Cart expired message is not displayed when Esc key is hit  hit from the upsell modal window when upsell is set",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16567",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C41881",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link for PV Application\r\n2. Go to the TicketSales from the Ticketing tab of the PV Application\r\n3. Select the Upsell Event  that is set\r\n4. Give the number of Tickets in the Seat Request  and click on Lock Tickets button with a Patron\r\n5. Verify the Multiple Offer Modal Window :\r\n\r\n1)The Multiple Offer with Event name,date and time should be displayed.\r\n\r\n2)Primary Offer  and Secondary offer as the header and within  the box Extended Seat Definition,Offer Number,Seat ,Row Section with Select Button for both Primary and Secondary offer .\r\n\r\n3)Cancel Button\r\n6. Verify by hitting the Esc key from the Upsell modal window which represents the cancellation of tickets\r\n7. Verify the Cart Expired message\r\n8. Call",
        "expected": "1. The PV application should be launched successfully\r\n2. The user should be navigated to the Ticket Sales\r\n3. The user should be able  to select the Upsell Event successfully\r\n4. The user should be displayed a Multiple Offer Pop up modal window with the Primary and the Secondary offers set\r\n5. The Multiple Offer Modal Window should be displayed as per the Description\r\n6. The user should be navigated to the Ticket sales Page with no tickets in the cart\r\n7. The Cart Expired message should not be displayed in the Ticket Sales Page\r\n8."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696392,
    "title": "Verify the Cart expired message is not displayed when Esc key is hit from the upsell modal window when Alternate offer  is set",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16567",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C41882",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link for PV Application\r\n2. Go to the TicketSales from the Ticketing tab of the PV Application\r\n3. Select the Event that associated to the Alternate offer\r\n4. Give the number of Tickets in the Seat Request  and click on Lock Tickets button with a Patron\r\n5. Verify the Multiple Offer Modal Window :\r\n\r\n1)The Multiple Offer with Event name,date and time should be displayed.\r\n\r\n2)Primary Offer  and Secondary offer as the header and within  the box Extended Seat Definition,Offer Number,Seat ,Row Section with Select Button for both Primary and Secondary offer .\r\n\r\n3)Cancel Button\r\n6. Verify by hitting the Esc key  from the Upsell modal window which represents the cancellation of tickets\r\n7. Verify the Cart Expired message\r\n8. Call",
        "expected": "1. The PV application should be launched successfully\r\n2. The user should be navigated to the Ticket Sales\r\n3. The user should be able  to select the Upsell Event successfully\r\n4. The user should be displayed a Multiple Offer Pop up modal window with the Primary and the Secondary offers set\r\n5. The Multiple Offer Modal Window should be displayed as per the Description\r\n6. The user should be navigated to the Ticket sales Page with no tickets in the cart\r\n7. The Cart Expired message should not be displayed in the Ticket Sales Page\r\n8."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696393,
    "title": "Verify the Cart expired message is not displayed when cancel button is hit from the upsell modal window when Alternate offer  is set",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16567",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C41883",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link for PV Application\r\n2. Go to the TicketSales from the Ticketing tab of the PV Application\r\n3. Select the Event that associated to the Alternate offer\r\n4. Give the number of Tickets in the Seat Request  and click on Lock Tickets button with a Patron\r\n5. Verify the Multiple Offer Modal Window :\r\n\r\n1)The Multiple Offer with Event name,date and time should be displayed.\r\n\r\n2)Primary Offer  and Secondary offer as the header and within  the box Extended Seat Definition,Offer Number,Seat ,Row Section with Select Button for both Primary and Secondary offer .\r\n\r\n3)Cancel Button\r\n6. Click the cancel button from the Upsell modal window which represents the cancellation of tickets\r\n7. Verify the Cart Expired message\r\n8. Call",
        "expected": "1. The PV application should be launched successfully\r\n2. The user should be navigated to the Ticket Sales\r\n3. The user should be able  to select the Upsell Event successfully\r\n4. The user should be displayed a Multiple Offer Pop up modal window with the Primary and the Secondary offers set\r\n5. The Multiple Offer Modal Window should be displayed as per the Description\r\n6. The user should be navigated to the Ticket sales Page with no tickets in the cart\r\n7. The Cart Expired message should not be displayed in the Ticket Sales Page\r\n8."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696394,
    "title": "Verify the Cart expired message is not displayed when cancel button is hit from the upsell modal window when upsell is set",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16567",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 9,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C41884",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link for PV Application\r\n2. Go to the TicketSales from the Ticketing tab of the PV Application\r\n3. Select the Upsell Event  that is set\r\n4. Give the number of Tickets in the Seat Request  and click on Lock Tickets button with a Patron\r\n5. Verify the Multiple Offer Modal Window :\r\n\r\n1)The Multiple Offer with Event name,date and time should be displayed.\r\n\r\n2)Primary Offer  and Secondary offer as the header and within  the box Extended Seat Definition,Offer Number,Seat ,Row Section with Select Button for both Primary and Secondary offer .\r\n\r\n3)Cancel Button\r\n6. Click the cancel button from the Upsell modal window which represents the cancellation of tickets\r\n7. Verify the Cart Expired message\r\n8. Call",
        "expected": "1. The PV application should be launched successfully\r\n2. The user should be navigated to the Ticket Sales\r\n3. The user should be able  to select the Upsell Event successfully\r\n4. The user should be displayed a Multiple Offer Pop up modal window with the Primary and the Secondary offers set\r\n5. The Multiple Offer Modal Window should be displayed as per the Description\r\n6. The user should be navigated to the Ticket sales Page with no tickets in the cart\r\n7. The Cart Expired message should not be displayed in the Ticket Sales Page\r\n8."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696395,
    "title": "Verify the shopping cart when clicked cancel button  from the Upsell modal window",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16531",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 10,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C41885",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link for PV Application\r\n2. Go to the TicketSales from the Ticketing tab of the PV Application\r\n3. Select the Upsell Event  that is set\r\n4. Give the number of Tickets in the Seat Request  and click on Lock Tickets button with a Patron\r\n5. Verify the Multiple Offer Modal Window :\r\n\r\n1)The Multiple Offer with Event name,date and time should be displayed.\r\n\r\n2)Primary Offer  and Secondary offer as the header and within  the box Extended Seat Definition,Offer Number,Seat ,Row Section with Select Button for both Primary and Secondary offer .\r\n\r\n3)Cancel Button\r\n6. Click the cancel button from the Upsell modal window which represents the cancellation of tickets\r\n7. Call",
        "expected": "1. The PV application should be launched successfully\r\n2. The user should be navigated to the Ticket Sales\r\n3. The user should be able  to select the Upsell Event successfully\r\n4. The user should be displayed a Multiple Offer Pop up modal window with the Primary and the Secondary offers set\r\n5. The Multiple Offer Modal Window should be displayed as per the Description\r\n6. The user should be navigated to the Ticket sales Page with no tickets in the cart\r\n7."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696396,
    "title": "Verify the shopping cart when clicked Esc key from the Upsell modal window",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16531",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 11,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C41886",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link for PV Application\r\n2. Go to the TicketSales from the Ticketing tab of the PV Application\r\n3. Select the Upsell Event  that is set\r\n4. Give the number of Tickets in the Seat Request  and click on Lock Tickets button with a Patron\r\n5. Verify the Multiple Offer Modal Window :\r\n\r\n1)The Multiple Offer with Event name,date and time should be displayed.\r\n\r\n2)Primary Offer  and Secondary offer as the header and within  the box Extended Seat Definition,Offer Number,Seat ,Row Section with Select Button for both Primary and Secondary offer .\r\n\r\n3)Cancel Button\r\n6. Hit the Esc Key from the Upsell modal window which represents the cancellation of tickets\r\n7. Call",
        "expected": "1. The PV application should be launched successfully\r\n2. The user should be navigated to the Ticket Sales\r\n3. The user should be able  to select the Upsell Event successfully\r\n4. The user should be displayed a Multiple Offer Pop up modal window with the Primary and the Secondary offers set\r\n5. The Multiple Offer Modal Window should be displayed as per the Description\r\n6. The user should be navigated to the Ticket sales Page with no tickets in the cart\r\n7."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696397,
    "title": "Verify the Upsell if available or Alternate if available offer",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 12,
    "custom_is_automated": false,
    "custom_pv_category": 27,
    "custom_refs": "C41887",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the PVNG application\r\n2. Input the following credentials:\r\n  \r\n  \r\n2. 1. Navigate to Supplier Admin\r\n2. Select a supplier\r\n3. Select the Configuration tab\r\n4. Select Extended Seat Definition from the Change Configuration for drop down\r\n5. Click on the New button\r\n6. Input the required details and create one extended seat definition eg: ESD1\r\n7. Create another new extended seat definition eg: ESD2\r\n3. 1. Select the first Extended seat definition ESD1\r\n2. Select the second extended seat definition ESD2 from the Upsell definition drop down\r\n3. Click on Apply Changes\r\n4. 1. Navigate to Venue Administration\r\n2. Select a venue\r\n3. Select he master configuration\r\n4. Naviagte to extended Seat\r\n5. Create a new extended seat configuration\r\n6. Select some seats to the two new extended seat definition created eg: ESD1 and ESD2\r\n7. Save changes\r\n5. 1.Select the venue configuration\r\n2. Add the newly created extended seat configuration to the venue configuration\r\n3. Save changes\r\n6. Select the option Event administration from the drop dwon in the Home page\r\n7. Input the required details and create a new event\r\n8. 1.Go to Event Access tab\r\n2.Click Event link\r\n3.Select the option Upsell if available or Alternate if available from the drop down Automatic Multiple Offers under Tickets/Seats section\r\n4.Click Apply Changes button\r\n9. 1.Click User link\r\n2.Input the required User code in the User search field\r\n3.Select the check box inherit against the field Automatic Multiple Offers\r\n3.Click Apply Changes button\r\n10. 1. Navigate to ticket sales\r\n2. Select the event\r\n3. Input the number of tickets and click on the Lock seats button\r\n4. Verify the Multiple offer pop up\r\n    The Secondary offer should be displayed as upsell\r\n11. 1. Select a delivery method\r\n2. Select a payment method\r\n3. Complete the transaction",
        "expected": "1. The user should be able to log in successfully\r\n2. \r\n3. The changes should be saved successfully\r\n4. The seats should be added to the newly created extended seat definition\r\n5. The changes should be saved successfully\r\n6. The Event search page should be displayed\r\n7. The event should be created successfully\r\n8. The field Automatic Multiple Offers should be updated with the option Upsell if available or Alternate if available\r\n9. The value Upsell if available or Alternate if available should be available in the field Automatic Multiple Offers\r\n10. The multiple offer popup should be displayed\r\n11. The transaction should be completed successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696398,
    "title": "Verify the Alternate if available or Upsell if available offer",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 13,
    "custom_is_automated": false,
    "custom_pv_category": 27,
    "custom_refs": "C41888",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the PVNG application\r\n2. Input the following credentials:\r\n  \r\n  \r\n2. 1. Navigate to Supplier Admin\r\n2. Select a supplier\r\n3. Select the Configuration tab\r\n4. Select Extended Seat Definition from the Change Configuration for drop down\r\n5. Click on the New button\r\n6. Input the required details and create one extended seat definition eg: ESD1\r\n7. Create another new extended seat definition eg: ESD2\r\n3. 1. Select the first Extended seat definition ESD1\r\n2. Select the second extended seat definition ESD2 from the Upsell definition drop down\r\n3. Click on Apply Changes\r\n4. 1. Navigate to Venue Administration\r\n2. Select a venue\r\n3. Select he master configuration\r\n4. Naviagte to extended Seat\r\n5. Create a new extended seat configuration\r\n6. Select some seats to the two new extended seat definition created eg: ESD1 and ESD2\r\n7. Save changes\r\n5. 1.Select the venue configuration\r\n2. Add the newly created extended seat configuration to the venue configuration\r\n3. Save changes\r\n6. Select the option Event administration from the drop dwon in the Home page\r\n7. Input the required details and create a new event\r\n8. 1.Go to Event Access tab\r\n2.Click Event link\r\n3.Select the option Alternate if available or Upsell if available from the drop down Automatic Multiple Offers under Tickets/Seats section\r\n4.Click Apply Changes button\r\n9. 1.Click User link\r\n2.Input the required User code in the User search field\r\n3.Select the check box inherit against the field Automatic Multiple Offers\r\n3.Click Apply Changes button\r\n10. 1. Navigate to ticket sales\r\n2. Select the event\r\n3. Input the number of tickets and click on the Lock seats button\r\n4. Verify the Multiple offer pop up\r\n    The Secondary offer should be displayed as alternate\r\n11. 1. Select a delivery method\r\n2. Select a payment method\r\n3. Complete the transaction",
        "expected": "1. The user should be able to log in successfully\r\n2. \r\n3. The changes should be saved successfully\r\n4. The seats should be added to the newly created extended seat definition\r\n5. The changes should be saved successfully\r\n6. The Event search page should be displayed\r\n7. The event should be created successfully\r\n8. The field Automatic Multiple Offers should be updated with the option Alternate if available or Upsell if available\r\n9. The value Alternate if available or Upsell if available should be available in the field Automatic Multiple Offers\r\n10. The multiple offer popup should be displayed\r\n11. The transaction should be completed successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696399,
    "title": "Verify the upsell request for seats having more than one upsell pointer with extended seat definition with same lowest display order",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 14,
    "custom_is_automated": false,
    "custom_pv_category": 27,
    "custom_refs": "C41889",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the PVNG application\r\n2. Input the following credentials:\r\n  \r\n  \r\n2. 1. Navigate to Supplier Admin\r\n2. Select a supplier\r\n3. Select the Configuration tab\r\n4. Select Extended Seat Definition from the Change Configuration for drop down\r\n5. Click on the New button\r\n6. Input the required details and create one extended seat definition eg: ESD1\r\n7. Create new extended seat definition \r\n    ESD1 has upsell pointer to ESD2. ESD1 with display order 1 and ESD2 with display order 1  \r\n    ESD3 has upsell pointer to ESD4. ESD3 with display order 1 and ESD4 with display order 1\r\n3. 1. Select the first Extended seat definition ESD1\r\n2. Select the second extended seat definition ESD2 from the Upsell definition drop down\r\n3. Click on Apply Changes\r\n4. 1. Navigate to Venue Administration\r\n2. Select a venue\r\n3. Select he master configuration\r\n4. Naviagte to extended Seat\r\n5. Create a new extended seat configuration\r\n6. Select some seats to the two new extended seat definition created \r\nEg: Create multiple extended seat config\r\n          ESDC1 includes ESD1 and ESD2. Add some seats to ESD1 and ESD2\r\n          ESDC2 includes ESD3 and ESD4. Add the same seats to ESD3 and ESD4\r\n7. Save changes\r\n5. 1.Select the venue configuration\r\n2. Add the newly created extended seat configuration to the venue configuration\r\n3. Save changes\r\n6. Select the option Event administration from the drop dwon in the Home page\r\n7. Input the required details and create a new event\r\n8. 1.Go to Event Access tab\r\n2.Click Event link\r\n3.Select the option Upsell from the drop down Automatic Multiple Offers under Tickets/Seats section\r\n4.Click Apply Changes button\r\n9. 1.Click User link\r\n2.Input the required User code in the User search field\r\n3.Select the check box inherit against the field Automatic Multiple Offers\r\n3.Click Apply Changes button\r\n10. 1. Navigate to ticket sales\r\n2. Search for the event\r\n3. Input the number of tickets and click on lock seats\r\n11. 1. Select the delivery method\r\n2. Select the payment method\r\n3. Complete the transaction",
        "expected": "1. The user should be able to log in successfully\r\n2. The extended seat definitions should be created successfully\r\n3. The changes should be saved successfully\r\n4. The seats should be added to the newly created extended seat definition\r\n5. The changes should be saved successfully\r\n6. The Event search page should be displayed\r\n7. The event should be created successfully\r\n8. The field Automatic Multiple Offers should be updated with the option Upsell\r\n9. The value Upsell should be available in the field Automatic Multiple Offers\r\n10. The multiple offer popup window should be displayed\r\nThe extended seat definition code that is first in an ascending sort order will be displayed as the secondary offer\r\n    eg: ESD2 with lowest code should be displayed as the secondary offer\r\n11. The transaction should be completed successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696400,
    "title": "Verify the upsell request for seats having more than one upsell pointer",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 15,
    "custom_is_automated": false,
    "custom_pv_category": 27,
    "custom_refs": "C41890",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the PVNG application\r\n2. Input the following credentials:\r\n  \r\n  \r\n2. 1. Navigate to Supplier Admin\r\n2. Select a supplier\r\n3. Select the Configuration tab\r\n4. Select Extended Seat Definition from the Change Configuration for drop down\r\n5. Click on the New button\r\n6. Input the required details and create one extended seat definition eg: ESD1\r\n7. Create new extended seat definition \r\n    EG: ESD1 has upsell pointer to ESD2. ESD1 with display order 1 and ESD2 with display order 2  \r\n     ESD3 has upsell pointer to ESD4. ESD3 with display order 3 and ESD4 with display order 4\r\n3. 1. Select the first Extended seat definition ESD1\r\n2. Select the second extended seat definition ESD2 from the Upsell definition drop down\r\n3. Click on Apply Changes\r\n4. 1. Navigate to Venue Administration\r\n2. Select a venue\r\n3. Select he master configuration\r\n4. Naviagte to extended Seat\r\n5. Create a new extended seat configuration\r\n6. Select some seats to the two new extended seat definition created \r\nEg: Create multiple extended seat config\r\n          ESDC1 includes ESD1 and ESD2. Add some seats to ESD1 and ESD2\r\n          ESDC2 includes ESD3 and ESD4. Add the same seats to ESD3 and ESD4\r\n7. Save changes\r\n5. 1.Select the venue configuration\r\n2. Add the newly created extended seat configuration to the venue configuration\r\n3. Save changes\r\n6. Select the option Event administration from the drop dwon in the Home page\r\n7. Input the required details and create a new event\r\n8. 1.Go to Event Access tab\r\n2.Click Event link\r\n3.Select the option Upsell from the drop down Automatic Multiple Offers under Tickets/Seats section\r\n4.Click Apply Changes button\r\n9. 1.Click User link\r\n2.Input the required User code in the User search field\r\n3.Select the check box inherit against the field Automatic Multiple Offers\r\n3.Click Apply Changes button\r\n10. 1. Navigate to ticket sales\r\n2. Search for the event\r\n3. Input the number of tickets and click on lock seats\r\n11. 1. Select the delivery method\r\n2. Select the payment method\r\n3. Complete the transaction",
        "expected": "1. The user should be able to log in successfully\r\n2. The extended seat definitions should be created successfully\r\n3. The changes should be saved successfully\r\n4. The seats should be added to the newly created extended seat definition\r\n5. The changes should be saved successfully\r\n6. The Event search page should be displayed\r\n7. The event should be created successfully\r\n8. The field Automatic Multiple Offers should be updated with the option Upsell\r\n9. The value Upsell should be available in the field Automatic Multiple Offers\r\n10. The multiple offer popup window should be displayed\r\nThe extended seat definition with the lowest display order should be displayed as the secondary offer\r\n    eg: ESD2 with display order 2 should be displayed as the secondary offer\r\n11. The transaction should be completed successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696401,
    "title": "Verify the Upsell if available or Alternate if available request for an extended seat definition having same Complementary pointer and an Upsell pointer",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 16,
    "custom_is_automated": false,
    "custom_pv_category": 27,
    "custom_refs": "C41891",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the PVNG application\r\n2. Input the following credentials:\r\n  \r\n  \r\n2. 1. Navigate to Supplier Admin\r\n2. Select a supplier\r\n3. Select the Configuration tab\r\n4. Select Extended Seat Definition from the Change Configuration for drop down\r\n5. Click on the New button\r\n6. Input the required details and create one extended seat definition eg: ESD1\r\n7. Create another new extended seat definition eg: ESD2\r\n3. 1. Select the first Extended seat definition ESD1\r\n2. Select the second extended seat definition ESD2 from the Complementary definition drop down\r\n2. Select the second extended seat definition ESD2 from the Upsell definition drop down\r\n3. Click on Apply Changes\r\n4. 1. Navigate to Venue Administration\r\n2. Select a venue\r\n3. Select he master configuration\r\n4. Naviagte to extended Seat\r\n5. Create a new extended seat configuration\r\n6. Select some seats to the two new extended seat definition created eg: ESD1 and ESD2\r\n7. Save changes\r\n5. 1.Select the venue configuration\r\n2. Add the newly created extended seat configuration to the venue configuration\r\n3. Save changes\r\n6. Select the option Event administration from the drop dwon in the Home page\r\n7. 1.Go to Event Access tab\r\n2.Click Event link\r\n3.Select the option upsell from the drop down Upsell if available or Alternate if available Multiple Offers under Tickets/Seats section\r\n4.Click Apply Changes button\r\n8. 1.Click User link\r\n2.Input the required User code in the User search field\r\n3.Select the check box inherit against the field Automatic Multiple Offers\r\n3.Click Apply Changes button\r\n9. Input the required details and create a new event\r\n10. 1. Navigate to ticket sales\r\n2. Select the event\r\n3. Select the patron\r\n4. Input the number of tickets\r\n5. Select the extended seat definition EG: ESD1\r\n6. Click on lock seats\r\n11. Verify the following in the multiple offer popup window\r\na. The secondary offer should be labled as Upsell\r\nb. The seats deatils should be displayed correctly.\r\nc. The secondary offer seats should be coresponding to the target complementary seat.\r\n12. 1. Select the secondary event from the multiple offer window\r\n2. Select the delivery method\r\n3. Select the payment method\r\n4. Complete the transaction\r\n13. 1. Navigate to ticket services\r\n2. Verify the seats should belong to the target extended seat definition\r\n  eg: ESD2",
        "expected": "1. The user should be able to log in successfully\r\n2. \r\n3. A warning message \"The Complementary and Upsell extended seat definitions have been set to the same value.  If this was not your intention, please make the appropriate adjustment.\" should be displayed.\r\nThe changes should be saved successfully\r\n4. The seats should be added to the newly created extended seat definition\r\n5. The changes should be saved successfully\r\n6. The Event search page should be displayed\r\n7. The field Automatic Multiple Offers should be updated with the option Upsell if available or Alternate if available\r\n8. The value Upsell if available or Alternate if available should be available in the field Automatic Multiple Offers\r\n9. The event should be created successfully\r\n10. The Multiple offer popup should be displayed\r\n11. The details should be displayed correctly in the multiple offer window\r\n12. The transaction should be completed successfully\r\n13. The seats should belong to the target extended seat definition"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696402,
    "title": "Verify the Alternate if available or Upsell if available request for an extended seat definition having same Complementary pointer and an Upsell pointer",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 17,
    "custom_is_automated": false,
    "custom_pv_category": 27,
    "custom_refs": "C41892",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the PVNG application\r\n2. Input the following credentials:\r\n  \r\n  \r\n2. 1. Navigate to Supplier Admin\r\n2. Select a supplier\r\n3. Select the Configuration tab\r\n4. Select Extended Seat Definition from the Change Configuration for drop down\r\n5. Click on the New button\r\n6. Input the required details and create one extended seat definition eg: ESD1\r\n7. Create another new extended seat definition eg: ESD2\r\n3. 1. Select the first Extended seat definition ESD1\r\n2. Select the second extended seat definition ESD2 from the Complementary definition drop down\r\n2. Select the second extended seat definition ESD2 from the Upsell definition drop down\r\n3. Click on Apply Changes\r\n4. 1. Navigate to Venue Administration\r\n2. Select a venue\r\n3. Select he master configuration\r\n4. Naviagte to extended Seat\r\n5. Create a new extended seat configuration\r\n6. Select some seats to the two new extended seat definition created eg: ESD1 and ESD2\r\n7. Save changes\r\n5. 1.Select the venue configuration\r\n2. Add the newly created extended seat configuration to the venue configuration\r\n3. Save changes\r\n6. Select the option Event administration from the drop dwon in the Home page\r\n7. Input the required details and create a new event\r\n8. 1.Go to Event Access tab\r\n2.Click Event link\r\n3.Select the option upsell from the drop down Alternate if available or Upsell if available Multiple Offers under Tickets/Seats section\r\n4.Click Apply Changes button\r\n9. 1.Click User link\r\n2.Input the required User code in the User search field\r\n3.Select the check box inherit against the field Automatic Multiple Offers\r\n3.Click Apply Changes button\r\n10. 1. Navigate to ticket sales\r\n2. Select the event\r\n3. Select the patron\r\n4. Input the number of tickets\r\n5. Select the extended seat definition EG: ESD1\r\n6. Click on lock seats\r\n11. Verify the following in the multiple offer popup window\r\na. The secondary offer should be labled as Alternate\r\nb. The seats deatils should be displayed correctly.\r\nc. The secondary offer seats should be coresponding to the target complementary seat.\r\n12. 1. Select the secondary event from the multiple offer window\r\n2. Select the delivery method\r\n3. Select the payment method\r\n4. Complete the transaction\r\n13. 1. Navigate to ticket services\r\n2. Verify the seats should belong to the target extended seat definition\r\n  eg: ESD2",
        "expected": "1. The user should be able to log in successfully\r\n2. \r\n3. A warning message \"The Complementary and Upsell extended seat definitions have been set to the same value.  If this was not your intention, please make the appropriate adjustment.\" should be displayed.\r\nThe changes should be saved successfully\r\n4. The seats should be added to the newly created extended seat definition\r\n5. The changes should be saved successfully\r\n6. The Event search page should be displayed\r\n7. The event should be created successfully\r\n8. The field Automatic Multiple Offers should be updated with the option Alternate if available or Upsell if available\r\n9. The value Alternate if available or Upsell if available should be available in the field Automatic Multiple Offers\r\n10. The Multiple offer popup should be displayed\r\n11. The details should be displayed correctly in the multiple offer window\r\n12. The transaction should be completed successfully\r\n13. The seats should belong to the target extended seat definition"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696403,
    "title": "UI verification of the Multiple Offers for non inventory event",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 18,
    "custom_is_automated": false,
    "custom_pv_category": 27,
    "custom_refs": "C41893",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the PVNG application\r\n2. Input the following credentials:\r\n  \r\n  \r\n2. 1. Navigate to Event Admin\r\n2. Select a supplier\r\n3.Create a non inventory event \r\n4.Verify that the multiple offer feature available\r\n3. Logoff",
        "expected": "1. The user should be able to log in successfully\r\n2. Multiple offer feature should not be available in event access for non inverntory event\r\n3. User should be able to logoff from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696404,
    "title": "Verify the warning message displayed for an extended seat definition having same Complementary pointer and an Upsell pointer",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 19,
    "custom_is_automated": false,
    "custom_pv_category": 27,
    "custom_refs": "C41894",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the PVNG application\r\n2. Input the following credentials:\r\n  \r\n  \r\n2. 1. Navigate to Supplier Admin\r\n2. Select a supplier\r\n3. Select the Configuration tab\r\n4. Select Extended Seat Definition from the Change Configuration for drop down\r\n5. Click on the New button\r\n6. Input the required details and create one extended seat definition eg: ESD1\r\n7. Create another new extended seat definition eg: ESD2\r\n3. 1. Select the first Extended seat definition ESD1\r\n2. Select the second extended seat definition ESD2 from the Complementary definition drop down\r\n2. Select the second extended seat definition ESD2 from the Upsell definition drop down\r\n3. Click on Apply Changes\r\n4. Logoff",
        "expected": "1. The user should be able to log in successfully\r\n2. \r\n3. A warning message \"The Complementary and Upsell extended seat definitions have been set to the same value.  If this was not your intention, please make the appropriate adjustment.\" should be displayed.\r\nThe changes should be saved successfully\r\n4. User should be able to logoff from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696405,
    "title": "Verify the upsell request for an extended seat definition having same Complementary pointer and an Upsell pointer",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 20,
    "custom_is_automated": false,
    "custom_pv_category": 27,
    "custom_refs": "C41895",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the PVNG application\r\n2. Input the following credentials:\r\n  \r\n  \r\n2. 1. Navigate to Supplier Admin\r\n2. Select a supplier\r\n3. Select the Configuration tab\r\n4. Select Extended Seat Definition from the Change Configuration for drop down\r\n5. Click on the New button\r\n6. Input the required details and create one extended seat definition eg: ESD1\r\n7. Create another new extended seat definition eg: ESD2\r\n3. 1. Select the first Extended seat definition ESD1\r\n2. Select the second extended seat definition ESD2 from the Complementary definition drop down\r\n2. Select the second extended seat definition ESD2 from the Upsell definition drop down\r\n3. Click on Apply Changes\r\n4. 1. Navigate to Venue Administration\r\n2. Select a venue\r\n3. Select he master configuration\r\n4. Naviagte to extended Seat\r\n5. Create a new extended seat configuration\r\n6. Select some seats to the two new extended seat definition created eg: ESD1 and ESD2\r\n7. Save changes\r\n5. 1.Select the venue configuration\r\n2. Add the newly created extended seat configuration to the venue configuration\r\n3. Save changes\r\n6. Select the option Event administration from the drop dwon in the Home page\r\n7. Input the required details and create a new event\r\n8. 1.Go to Event Access tab\r\n2.Click Event link\r\n3.Select the option upsell from the drop down Automatic Multiple Offers under Tickets/Seats section\r\n4.Click Apply Changes button\r\n9. 1.Click User link\r\n2.Input the required User code in the User search field\r\n3.Select the check box inherit against the field Automatic Multiple Offers\r\n3.Click Apply Changes button\r\n10. 1. Navigate to ticket sales\r\n2. Select the event\r\n3. Select the patron\r\n4. Input the number of tickets\r\n5. Select the extended seat definition EG: ESD1\r\n6. Click on lock seats\r\n11. Verify the following in the multiple offer popup window\r\na. The secondary offer should be labled as Upsell\r\nb. The seats deatils should be displayed correctly.\r\nc. The secondary offer seats should be coresponding to the target complementary seat.\r\n12. 1. Select the secondary event from the multiple offer window\r\n2. Select the delivery method\r\n3. Select the payment method\r\n4. Complete the transaction\r\n13. 1. Navigate to ticket services\r\n2. Verify the seats should belong to the target extended seat definition\r\n  eg: ESD2",
        "expected": "1. The user should be able to log in successfully\r\n2. \r\n3. A warning message \"The Complementary and Upsell extended seat definitions have been set to the same value.  If this was not your intention, please make the appropriate adjustment.\" should be displayed.\r\nThe changes should be saved successfully\r\n4. The seats should be added to the newly created extended seat definition\r\n5. The changes should be saved successfully\r\n6. The Event search page should be displayed\r\n7. The event should be created successfully\r\n8. The field Automatic Multiple Offers should be updated with the option Upsell\r\n9. The value Upsell should be available in the field Automatic Multiple Offers\r\n10. The Multiple offer popup should be displayed\r\n11. The details should be displayed correctly in the multiple offer window\r\n12. The transaction should be completed successfully\r\n13. The seats should belong to the target extended seat definition"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696406,
    "title": "Verify the offer when upsell lock is not successful",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 21,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C41896",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link for PV Application\r\n2. Go to the TicketSales from the Ticketing tab of the PV Application\r\n3. Select the Upsell Event  that is set\r\n4. Give the number of Tickets in the Seat Request  and click on Lock Tickets button with a Patron\r\n5. Verify that the Multiple Offer Modal Window should not be displayed.\r\n\r\nOnly the primary offer should be displayed\r\n6. Select the Delivery Method from the delivery method drop down and click on Apply  Button\r\n7. Select the Payment method and click on Accept Payment\r\n8. Sell all the seats belonging to the target extended seat for the upsell event\r\n9. Call",
        "expected": "1. The PV application should be launched successfully\r\n2. The user should be navigated to the Ticket Sales\r\n3. The user should be able  to select the Upsell Event successfully\r\n4. The user should be displayed a Multiple Offer Pop up modal window with the Primary and the Secondary offers set\r\n5. The Multiple Offer Modal Window should not be displayed. Only the primary offer should be displayed\r\n6. The user should be able to select the Delivery method from the drop down and navigated to the Payment\r\n7. The user should be able to complete the transaction successfully and the transaction id should be displayed\r\n8. \r\n9."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696407,
    "title": "Verify the overriden value of the Automatic Multiple Offer field at the event level",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 22,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C41897",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Go to Supplier ,Event access and set the Automatic Multiple offer to a value in Supplier,user,Agency,Channel level\r\n2. Go to Event Event  access and set the Automatic Multiple offer to a  different value which is not set in (Supplier Level)  in Supplier,user,Agency,Channel level\r\n3. Launch the link for PV Application\r\n4. Go to the Ticket Sales\r\n5. Select the Tickets  of the event and Lock the Tickets\r\n6. Verify the values set in the Event level is displayed in the Upsell Window .The values set in the Event Level  is overridden by the Supplier level values\r\n7. Verify that the user is able to complete the transaction as per the Automatic Multiple Offer set in the Prerequisite 2",
        "expected": "1. The Automatic Multiple Offer should be set at the Supplier Administration level\r\n2. The Automatic Multiple Offer should be set at the Event Level\r\n3. The PV application should be launched successfully\r\n4. The user should be navigated to the Ticket sales\r\n5. The user should be able to lock the tickets\r\n6. The Upsell window with the Value set as per Prerequisite 2 should be displayed\r\n7. The user should be able to complete the transaction suucessfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696408,
    "title": "UI verification of the alternate offer",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 23,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C41898",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link for PV Application\r\n2. Go to the TicketSales from the Ticketing tab of the PV Application\r\n3. Select the alternate Event  that is set\r\n4. Give the number of Tickets in the Seat Request  and click on Lock Tickets button with a Patron\r\n5. Verify the Multiple Offer Modal Window :\r\n\r\n1) The extended seat definition used as the source for the upsell offer should be displayed after the term 'Primary Offer'.\r\n\r\n2)The second offer should be the alternate offer\r\n\r\n3) The 'Enter' key shall invoke the 'Select' action for the primary offer\r\n\r\n4)The Multiple Offer with Event name,date and time should be displayed.\r\n\r\n5)Primary Offer  and Secondary offer as the header and within  the box Extended Seat Definition,Offer Number,Seat ,Row Section with Select Button for both Primary and Secondary offer .\r\n\r\n6)When one of the 'Select' actions is invoked, the seats associated with the other offer are released by the system and the business use case continues.\r\n\r\n7)If the cancel action is invoked, both offers are released.\r\n\r\n8)The 'Esc' key shall invoke the 'Cancel' action.\r\n6. Click on the Select Button against the Primary/ Secondary offer iin the Multiple Offer Modal Window\r\n7. Select the Delivery Method from the delivery method drop down and click on Apply  Button\r\n8. Select the Payment method and click on Accept Payment\r\n9. Call",
        "expected": "1. The PV application should be launched successfully\r\n2. The user should be navigated to the Ticket Sales\r\n3. The user should be able  to select the Upsell Event successfully\r\n4. The user should be displayed a Multiple Offer Pop up modal window with the Primary and the Secondary offers set\r\n5. The Multiple Offer Modal Window should be displayed as per the Description\r\n6. The selected  offer  should be added to  the cart\r\n7. The user should be able to select the Delivery method from the drop down and navigated to the Payment\r\n8. The user should be able to complete the transaction successfully and the transaction id should be displayed\r\n9."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696409,
    "title": "Verify the Upsell Public description when the value is set to NULL",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 24,
    "custom_is_automated": false,
    "custom_pv_category": 27,
    "custom_refs": "C41899",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the PVNG application\r\n2. Input the following credentials:\r\n  \r\n  \r\n2. 1. Navigate to Supplier Admin\r\n2. Select a supplier\r\n3. Select the Configuration tab\r\n4. Select Extended Seat Definition from the Change Configuration for drop down\r\n5. Click on the New button\r\n6. Input the required details and create one extended seat definition eg: ESD1\r\n7. Do not input any value for the Upsell Public description field\r\n8. Create another new extended seat definition eg: ESD2 with value in Upsell description filed\r\n3. 1. Select the first Extended seat definition ESD1\r\n2. Select the second extended seat definition ESD2 from the Upsell definition drop down\r\n3. Click on Apply Changes\r\n4. 1. Navigate to Venue Administration\r\n2. Select a venue\r\n3. Select he master configuration\r\n4. Naviagte to extended Seat\r\n5. Create a new extended seat configuration\r\n6. Select some seats to the two new extended seat definition created eg: ESD1 and ESD2\r\n7. Save changes\r\n5. 1.Select the venue configuration\r\n2. Add the newly created extended seat configuration to the venue configuration\r\n3. Save changes\r\n6. Select the option Event administration from the drop dwon in the Home page\r\n7. Input the required details and create a new event\r\n8. 1.Go to Event Access tab\r\n2.Click Event link\r\n3.Select the option Upsell from the drop down Automatic Multiple Offers under Tickets/Seats section\r\n4.Click Apply Changes button\r\n9. 1.Click User link\r\n2.Input the required User code in the User search field\r\n3.Select the check box inherit against the field Automatic Multiple Offers\r\n3.Click Apply Changes button\r\n10. 1. Navigate to ticket sales\r\n2. Select the event\r\n3. Select the patron\r\n4. Input the number of tickets\r\n5. Select the extended seat definition EG: ESD1\r\n6. Click on lock seats\r\n11. Verify the following in the multiple offer popup window\r\na. The description for the Upsell offer should be displayed as the Upsell description in the target extended seat definition\r\nEg: The description should be displayed as the Upsell decription added in ESD2\r\n12. 1. Select the secondary event from the multiple offer window\r\n2. Select the delivery method\r\n3. Select the payment method\r\n4. Complete the transaction\r\n13. 1. Navigate to ticket services\r\n2. Verify the seats should belong to the target extended seat definition\r\n  eg: ESD2\r\n14. Repeat step1 to 13  with no value in Upsell definition of the target extended seat\r\nVerify the description for the Upsell offer should be displayed as the description entered in the Upsell description field\r\nEg: Upsell description entered in ESD2",
        "expected": "1. The user should be able to log in successfully\r\n2. The extended seat definitions should be created successfully\r\n3. The changes should be saved successfully\r\n4. The seats should be added to the newly created extended seat definition\r\n5. The changes should be saved successfully\r\n6. The Event search page should be displayed\r\n7. The event should be created successfully\r\n8. The field Upsell Multiple Offers should be updated with the option Alternate\r\n9. The value Upsell should be available in the field Automatic Multiple Offers\r\n10. The Multiple offer popup should be displayed\r\n11. The details should be displayed correctly in the multiple offer window\r\n12. The transaction should be completed successfully\r\n13. The seats should belong to the target extended seat definition\r\n14. The details should be displayed correctly in the multiple offer window"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696410,
    "title": "Verify the Upsell description when the value is set to NULL",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 25,
    "custom_is_automated": false,
    "custom_pv_category": 27,
    "custom_refs": "C41900",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the PVNG application\r\n2. Input the following credentials:\r\n  \r\n  \r\n2. 1. Navigate to Supplier Admin\r\n2. Select a supplier\r\n3. Select the Configuration tab\r\n4. Select Extended Seat Definition from the Change Configuration for drop down\r\n5. Click on the New button\r\n6. Input the required details and create one extended seat definition eg: ESD1\r\n7. Do not input any value for the upsell description field\r\n8. Create another new extended seat definition eg: ESD2\r\n3. 1. Select the first Extended seat definition ESD1\r\n2. Select the second extended seat definition ESD2 from the upsell definition drop down\r\n3. Click on Apply Changes\r\n4. 1. Navigate to Venue Administration\r\n2. Select a venue\r\n3. Select he master configuration\r\n4. Naviagte to extended Seat\r\n5. Create a new extended seat configuration\r\n6. Select some seats to the two new extended seat definition created eg: ESD1 and ESD2\r\n7. Save changes\r\n5. 1.Select the venue configuration\r\n2. Add the newly created extended seat configuration to the venue configuration\r\n3. Save changes\r\n6. Select the option Event administration from the drop dwon in the Home page\r\n7. Input the required details and create a new event\r\n8. 1.Go to Event Access tab\r\n2.Click Event link\r\n3.Select the option upsell from the drop down Automatic Multiple Offers under Tickets/Seats section\r\n4.Click Apply Changes button\r\n9. 1.Click User link\r\n2.Input the required User code in the User search field\r\n3.Select the check box inherit against the field Automatic Multiple Offers\r\n3.Click Apply Changes button\r\n10. 1. Navigate to ticket sales\r\n2. Select the event\r\n3. Select the patron\r\n4. Input the number of tickets\r\n5. Select the extended seat definition EG: ESD1\r\n6. Click on lock seats\r\n11. Verify the following in the multiple offer popup window\r\na. The description for the upsell offer should be displayed as the description in the target extended seat definition\r\nEg: The description should be displayed as the decription added in ESD2\r\n12. 1. Select the secondary event from the multiple offer window\r\n2. Select the delivery method\r\n3. Select the payment method\r\n4. Complete the transaction\r\n13. 1. Navigate to ticket services\r\n2. Verify the seats should belong to the target extended seat definition\r\n  eg: ESD2\r\n14. Repeat step1 to 13  with value in upsell definition\r\nVerify the description for the upsell offer should be displayed as the description entered in the upsell description field\r\nEg: upsell description entered in ESD1",
        "expected": "1. The user should be able to log in successfully\r\n2. \r\n3. The changes should be saved successfully\r\n4. The seats should be added to the newly created extended seat definition\r\n5. The changes should be saved successfully\r\n6. The Event search page should be displayed\r\n7. The event should be created successfully\r\n8. The field Automatic Multiple Offers should be updated with the option upsell\r\n9. The value upsell should be available in the field Automatic Multiple Offers\r\n10. The Multiple offer popup should be displayed\r\n11. The details should be displayed correctly in the multiple offer window\r\n12. The transaction should be completed successfully\r\n13. The seats should belong to the target extended seat definition\r\n14. The details should be displayed correctly in the multiple offer window"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696411,
    "title": "Verify the inherited value of the Automatic Multiple Offer field at the event level",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 26,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C41901",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link for PV Application\r\n2. Go to the Ticket Sales\r\n3. Select the Tickets  of the event and Lock the Tickets\r\n4. Go to Event Event  access and set the Automatic Multiple offer to a value in Supplier,user,Agency,Channel level\r\n5. Verfiy the Upsell window with the value set in the Automatic Multiple Offer is displayed\r\n6. Verify that the user is able to complete the transaction as per the Automatic Multiple Offer set in the Prerequisite\r\n7. Go to Supplier  Event  access and set the Automatic Multiple offer to a value Supplier,user,Agency,Channel level",
        "expected": "1. The PV application should be launched successfully\r\n2. The user should be navigated to the Ticket sales\r\n3. The user should be able to lock the tickets\r\n4. The Automatic Multiple Offer should be set at the Event Level\r\n5. The Upsell window with the Value set as per Prerequisite 1 and 2  is displayed\r\n6. The user should be able to complete the transaction suucessfully\r\n7. The Automatic Multiple Offer should be set at the Supplier  Level"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696412,
    "title": "Verify the Complementary Public description when the value is set to NULL",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 27,
    "custom_is_automated": false,
    "custom_pv_category": 27,
    "custom_refs": "C41902",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the PVNG application\r\n2. Input the following credentials:\r\n  \r\n  \r\n2. 1. Navigate to Supplier Admin\r\n2. Select a supplier\r\n3. Select the Configuration tab\r\n4. Select Extended Seat Definition from the Change Configuration for drop down\r\n5. Click on the New button\r\n6. Input the required details and create one extended seat definition eg: ESD1\r\n7. Do not input any value for the Complementary Public description field\r\n8. Create another new extended seat definition eg: ESD2 with value in complementary description filed\r\n3. 1. Select the first Extended seat definition ESD1\r\n2. Select the second extended seat definition ESD2 from the Complementary definition drop down\r\n3. Click on Apply Changes\r\n4. 1. Navigate to Venue Administration\r\n2. Select a venue\r\n3. Select he master configuration\r\n4. Naviagte to extended Seat\r\n5. Create a new extended seat configuration\r\n6. Select some seats to the two new extended seat definition created eg: ESD1 and ESD2\r\n7. Save changes\r\n5. 1.Select the venue configuration\r\n2. Add the newly created extended seat configuration to the venue configuration\r\n3. Save changes\r\n6. Select the option Event administration from the drop dwon in the Home page\r\n7. Input the required details and create a new event\r\n8. 1.Go to Event Access tab\r\n2.Click Event link\r\n3.Select the option Alternate from the drop down Automatic Multiple Offers under Tickets/Seats section\r\n4.Click Apply Changes button\r\n9. 1.Click User link\r\n2.Input the required User code in the User search field\r\n3.Select the check box inherit against the field Automatic Multiple Offers\r\n3.Click Apply Changes button\r\n10. 1. Navigate to ticket sales\r\n2. Select the event\r\n3. Select the patron\r\n4. Input the number of tickets\r\n5. Select the extended seat definition EG: ESD1\r\n6. Click on lock seats\r\n11. Verify the following in the multiple offer popup window\r\na. The description for the complementary offer should be displayed as the complemetary description in the target extended seat definition\r\nEg: The description should be displayed as the complementary decription added in ESD2\r\n12. 1. Select the secondary event from the multiple offer window\r\n2. Select the delivery method\r\n3. Select the payment method\r\n4. Complete the transaction\r\n13. 1. Navigate to ticket services\r\n2. Verify the seats should belong to the target extended seat definition\r\n  eg: ESD2\r\n14. Repeat step1 to 13  with no value in complementary definition of the target extended seat\r\nVerify the description for the complementary offer should be displayed as the description entered in the complementary description field\r\nEg: complementary description entered in ESD2",
        "expected": "1. The user should be able to log in successfully\r\n2. \r\n3. The changes should be saved successfully\r\n4. The seats should be added to the newly created extended seat definition\r\n5. The changes should be saved successfully\r\n6. The Event search page should be displayed\r\n7. The event should be created successfully\r\n8. The field Automatic Multiple Offers should be updated with the option Alternate\r\n9. The value Alternate should be available in the field Automatic Multiple Offers\r\n10. The Multiple offer popup should be displayed\r\n11. The details should be displayed correctly in the multiple offer window\r\n12. The transaction should be completed successfully\r\n13. The seats should belong to the target extended seat definition\r\n14. The details should be displayed correctly in the multiple offer window"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696413,
    "title": "Verify the upsell request with add offer",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 28,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C41903",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link for PV Application\r\n2. Go to the TicketSales from the Ticketing tab of the PV Application\r\n3. Select the Upsell Event  that is set\r\n4. Give the number of Tickets in the Seat Request  and click on Lock Tickets button with a Patron\r\n5. Verify the Multiple Offer Modal Window :\r\n\r\n1)The Multiple Offer with Event name,date and time should be displayed.\r\n\r\n2)Primary Offer  and Secondary offer as the header and within  the box Extended Seat Definition,Offer Number,Seat ,Row Section with Select Button for both Primary and Secondary offer .\r\n\r\n3)Cancel Button\r\n6. Click on the Select Button against the primary Offer in the Multiple Offer Modal Window\r\n7. Select the Delivery Method from the delivery method drop down and click on Apply  Button\r\n8. Select the Payment method and click on Accept Payment\r\n9. Logoff\r\n10. Click on Add offer \r\nSelect the same upsell event \r\nSelect the tickets\r\nClick on the Select Button against the secondary Offer in the Multiple Offer Modal Window\r\n11. Call",
        "expected": "1. The PV application should be launched successfully\r\n2. The user should be navigated to the Ticket Sales\r\n3. The user should be able  to select the Upsell Event successfully\r\n4. The user should be displayed a Multiple Offer Pop up modal window with the Primary and the Secondary offers set\r\n5. The Multiple Offer Modal Window should be displayed as per the Description\r\n6. The primary offer should be added to  the cart\r\n7. The user should be able to select the Delivery method from the drop down and navigated to the Payment\r\n8. The user should be able to complete the transaction successfully and the transaction id should be displayed\r\n9. User should be able logoff from the application\r\n10. User should be able to add the same event\r\n11."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696414,
    "title": "Verification of the seat selection type attibute of Upsell",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 29,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C41904",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link for PV Application\r\n2. Go to the TicketSales from the Ticketing tab of the PV Application\r\n3. Select the Upsell Event  that is set\r\n4. Give the number of Tickets in the Seat Request  and click on Lock Tickets button with a Patron\r\n5. Verify the Multiple Offer Modal Window :\r\n\r\n1)The Multiple Offer with Event name,date and time should be displayed.\r\n\r\n2)Primary Offer  and Secondary offer as the header and within  the box Extended Seat Definition,Offer Number,Seat ,Row Section with Select Button for both Primary and Secondary offer .\r\n\r\n3)Cancel Button\r\n6. Click on the Select Button against the Secondary Offer in the Multiple Offer Modal Window\r\n7. Select the Delivery Method from the delivery method drop down and click on Apply  Button\r\n8. Select the Payment method and click on Accept Payment\r\n9. 1)Navigate to Ticket services\r\n2)Note down the transaction id\r\n10. 1)Launch the DB\r\n2)Verify the seat selection type attribute\r\n11. Logoff\r\n12. Call",
        "expected": "1. The PV application should be launched successfully\r\n2. The user should be navigated to the Ticket Sales\r\n3. The user should be able  to select the Upsell Event successfully\r\n4. The user should be displayed a Multiple Offer Pop up modal window with the Primary and the Secondary offers set\r\n5. The Multiple Offer Modal Window should be displayed as per the Description\r\n6. The Secondary offer should be added to  the cart\r\n7. The user should be able to select the Delivery method from the drop down and navigated to the Payment\r\n8. The user should be able to complete the transaction successfully and the transaction id should be displayed\r\n9. The transaction id should be note down\r\n10. The seat selection type attribute should be \"Upsell\"\r\n11. User should be able logoff from the application\r\n12."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696415,
    "title": "Verification of the seat selection type attibute of Best with Upsell",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 30,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C41905",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link for PV Application\r\n2. Go to the TicketSales from the Ticketing tab of the PV Application\r\n3. Select the Upsell Event  that is set\r\n4. Give the number of Tickets in the Seat Request  and click on Lock Tickets button with a Patron\r\n5. Verify the Multiple Offer Modal Window :\r\n\r\n1)The Multiple Offer with Event name,date and time should be displayed.\r\n\r\n2)Primary Offer  and Secondary offer as the header and within  the box Extended Seat Definition,Offer Number,Seat ,Row Section with Select Button for both Primary and Secondary offer .\r\n\r\n3)Cancel Button\r\n6. Click on the Select Button against the primary Offer in the Multiple Offer Modal Window\r\n7. Select the Delivery Method from the delivery method drop down and click on Apply  Button\r\n8. Select the Payment method and click on Accept Payment\r\n9. Note down the transaction id\r\n10. 1)Launch the DB\r\n2)Verify the seat selection type attribute\r\n11. Logoff\r\n12. Call",
        "expected": "1. The PV application should be launched successfully\r\n2. The user should be navigated to the Ticket Sales\r\n3. The user should be able  to select the Upsell Event successfully\r\n4. The user should be displayed a Multiple Offer Pop up modal window with the Primary and the Secondary offers set\r\n5. The Multiple Offer Modal Window should be displayed as per the Description\r\n6. The primary offer should be added to  the cart\r\n7. The user should be able to select the Delivery method from the drop down and navigated to the Payment\r\n8. The user should be able to complete the transaction successfully and the transaction id should be displayed\r\n9. The transaction id should be note down.\r\n10. The seat selection type attribute should be \"Best with Upsell\"\r\n11. User should be able logoff from the application\r\n12."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696416,
    "title": "Verify the upsell request for reservation exchange with a different event with alternate request",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 31,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C41906",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link for PV Application\r\n2. Go to the TicketSales from the Ticketing tab of the PV Application\r\n3. Select the Upsell Event  that is set\r\n4. Give the number of Tickets in the Seat Request  and click on Lock Tickets button with a Patron\r\n5. Verify the Multiple Offer Modal Window :\r\n\r\n1)The Multiple Offer with Event name,date and time should be displayed.\r\n\r\n2)Primary Offer  and Secondary offer as the header and within  the box Extended Seat Definition,Offer Number,Seat ,Row Section with Select Button for both Primary and Secondary offer .\r\n\r\n3)Cancel Button\r\n6. Click on the Select Button against the secondary Offer in the Multiple Offer Modal Window\r\n7. Select the Delivery Method from the delivery method drop down and click on Apply  Button\r\n8. Select the Payment method and click on Accept Payment\r\n9. Select the Order id \r\nSelect Exchange from the Action drop down\r\nclick on apply actions\r\n10. Select the alternate event\r\nSelect the number of tickets required \r\nClick on the Select Button against the primary Offer in the Multiple Offer Modal Window\r\nAnd complete the transaction\r\n11. Select the Reserve link and click on Set to Reservation\r\n12. Logoff\r\n13. Call",
        "expected": "1. The PV application should be launched successfully\r\n2. The user should be navigated to the Ticket Sales\r\n3. The user should be able  to select the Upsell Event successfully\r\n4. The user should be displayed a Multiple Offer Pop up modal window with the Primary and the Secondary offers set\r\n5. The Multiple Offer Modal Window should be displayed as per the Description\r\n6. The secondary offer should be added to  the cart\r\n7. The user should be able to select the Delivery method from the drop down and navigated to the Payment\r\n8. The user should be able to complete the transaction successfully and the transaction id should be displayed\r\n9. User should be able to view the exchange cart page\r\n10. User should be able to complete the transaction \r\nTicket services should be dispalyed\r\n11. The user should be able to complete the transaction successfully and the transaction id should be displayed\r\n12. User should be able to logoff from the application\r\n13."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696417,
    "title": "Verification of the seat selection type attibute of Complementary",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 32,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C41907",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link for PV Application\r\n2. Go to the TicketSales from the Ticketing tab of the PV Application\r\n3. Select the Upsell Event  that is set\r\n4. Give the number of Tickets in the Seat Request  and click on Lock Tickets button with a Patron\r\n5. Verify the Multiple Offer Modal Window :\r\n\r\n1)The Multiple Offer with Event name,date and time should be displayed.\r\n\r\n2)Primary Offer  and Secondary offer as the header and within  the box Extended Seat Definition,Offer Number,Seat ,Row Section with Select Button for both Primary and Secondary offer .\r\n\r\n3)Cancel Button\r\n6. Click on the Select Button against the Secondary Offer in the Multiple Offer Modal Window\r\n7. Select the Delivery Method from the delivery method drop down and click on Apply  Button\r\n8. Select the Payment method and click on Accept Payment\r\n9. 1)Navigate to Ticket services\r\n2)Note down the transaction id\r\n10. 1)Launch the DB\r\n2)Verify the seat selection type attribute\r\n11. Logoff\r\n12. Call",
        "expected": "1. The PV application should be launched successfully\r\n2. The user should be navigated to the Ticket Sales\r\n3. The user should be able  to select the Upsell Event successfully\r\n4. The user should be displayed a Multiple Offer Pop up modal window with the Primary and the Secondary offers set\r\n5. The Multiple Offer Modal Window should be displayed as per the Description\r\n6. The Secondary offer should be added to  the cart\r\n7. The user should be able to select the Delivery method from the drop down and navigated to the Payment\r\n8. The user should be able to complete the transaction successfully and the transaction id should be displayed\r\n9. The transaction id should be note down\r\n10. The seat selection type attribute should be \"Complementary\"\r\n11. User should be able logoff from the application\r\n12."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696418,
    "title": "Verification of the seat selection type attibute of Best with Complementary",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 33,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C41908",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link for PV Application\r\n2. Go to the TicketSales from the Ticketing tab of the PV Application\r\n3. Select the Upsell Event  that is set\r\n4. Give the number of Tickets in the Seat Request  and click on Lock Tickets button with a Patron\r\n5. Verify the Multiple Offer Modal Window :\r\n\r\n1)The Multiple Offer with Event name,date and time should be displayed.\r\n\r\n2)Primary Offer  and Secondary offer as the header and within  the box Extended Seat Definition,Offer Number,Seat ,Row Section with Select Button for both Primary and Secondary offer .\r\n\r\n3)Cancel Button\r\n6. Click on the Select Button against the primary Offer in the Multiple Offer Modal Window\r\n7. Select the Delivery Method from the delivery method drop down and click on Apply  Button\r\n8. Select the Payment method and click on Accept Payment\r\n9. Note down the transaction id\r\n10. 1)Launch the DB\r\n2)Verify the seat selection type attribute\r\n11. Logoff\r\n12. Call",
        "expected": "1. The PV application should be launched successfully\r\n2. The user should be navigated to the Ticket Sales\r\n3. The user should be able  to select the Upsell Event successfully\r\n4. The user should be displayed a Multiple Offer Pop up modal window with the Primary and the Secondary offers set\r\n5. The Multiple Offer Modal Window should be displayed as per the Description\r\n6. The primary offer should be added to  the cart\r\n7. The user should be able to select the Delivery method from the drop down and navigated to the Payment\r\n8. The user should be able to complete the transaction successfully and the transaction id should be displayed\r\n9. The transaction id should be note down.\r\n10. The seat selection type attribute should be \"Best with Complementary\"\r\n11. User should be able logoff from the application\r\n12."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696419,
    "title": "Verification of the seat selection type attibute of By seat for Master event expansion",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 34,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C41909",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Create one Expanded Master event\r\n2. Launch the link for PV Application\r\n3. 1)Navigate to Ticket sales\r\n2)Select the Event created in prerequisite\r\n3)Lock the seats \r\n4)Complete the transaction\r\n4. 1)Navigate to Ticket services\r\n2)Note down the transaction id\r\n5. 1)Launch the DB\r\n2)Verify the seat selection type attribute\r\n6. Logoff",
        "expected": "1. The Precondition should be created successfully\r\n2. The PV application should be launched successfully\r\n3. The transaction should be completed successfully.\r\n4. The transaction id should be note down\r\n5. The seat selection type attribute should be \"By Seat\"\r\n6. The user should be able be to Logout successfully."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696420,
    "title": "Verify the upsell request for reservation exchange with a different event with upsell request",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 35,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C41910",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link for PV Application\r\n2. Go to the TicketSales from the Ticketing tab of the PV Application\r\n3. Select the Upsell Event  that is set\r\n4. Give the number of Tickets in the Seat Request  and click on Lock Tickets button with a Patron\r\n5. Verify the Multiple Offer Modal Window :\r\n\r\n1)The Multiple Offer with Event name,date and time should be displayed.\r\n\r\n2)Primary Offer  and Secondary offer as the header and within  the box Extended Seat Definition,Offer Number,Seat ,Row Section with Select Button for both Primary and Secondary offer .\r\n\r\n3)Cancel Button\r\n6. Click on the Select Button against the secondary Offer in the Multiple Offer Modal Window\r\n7. Select the Delivery Method from the delivery method drop down and click on Apply  Button\r\n8. Select the Payment method and click on Accept Payment\r\n9. Select the Order id \r\nSelect Exchange from the Action drop down\r\nclick on apply actions\r\n10. Select the Upsell event\r\nSelect the number of tickets required \r\nClick on the Select Button against the primary Offer in the Multiple Offer Modal Window\r\nAnd complete the transaction\r\n11. Logoff\r\n12. Select the Reserve link and click on Set to Reservation\r\n13. Call",
        "expected": "1. The PV application should be launched successfully\r\n2. The user should be navigated to the Ticket Sales\r\n3. The user should be able  to select the Upsell Event successfully\r\n4. The user should be displayed a Multiple Offer Pop up modal window with the Primary and the Secondary offers set\r\n5. The Multiple Offer Modal Window should be displayed as per the Description\r\n6. The secondary offer should be added to  the cart\r\n7. The user should be able to select the Delivery method from the drop down and navigated to the Payment\r\n8. The user should be able to complete the transaction successfully and the transaction id should be displayed\r\n9. User should be able to view the exchange cart page\r\n10. User should be able to complete the transaction \r\nTicket services should be dispalyed\r\n11. User should be able logoff from the application\r\n12. The user should be able to complete the transaction successfully and the transaction id should be displayed\r\n13."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696421,
    "title": "Verify the Complementary description when the value is set to NULL",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 36,
    "custom_is_automated": false,
    "custom_pv_category": 27,
    "custom_refs": "C41911",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the PVNG application\r\n2. Input the following credentials:\r\n  \r\n  \r\n2. 1. Navigate to Supplier Admin\r\n2. Select a supplier\r\n3. Select the Configuration tab\r\n4. Select Extended Seat Definition from the Change Configuration for drop down\r\n5. Click on the New button\r\n6. Input the required details and create one extended seat definition eg: ESD1\r\n7. Do not input any value for the Complementary description field\r\n8. Create another new extended seat definition eg: ESD2\r\n3. 1. Select the first Extended seat definition ESD1\r\n2. Select the second extended seat definition ESD2 from the Complementary definition drop down\r\n3. Click on Apply Changes\r\n4. 1. Navigate to Venue Administration\r\n2. Select a venue\r\n3. Select he master configuration\r\n4. Naviagte to extended Seat\r\n5. Create a new extended seat configuration\r\n6. Select some seats to the two new extended seat definition created eg: ESD1 and ESD2\r\n7. Save changes\r\n5. 1.Select the venue configuration\r\n2. Add the newly created extended seat configuration to the venue configuration\r\n3. Save changes\r\n6. Select the option Event administration from the drop dwon in the Home page\r\n7. Input the required details and create a new event\r\n8. 1.Go to Event Access tab\r\n2.Click Event link\r\n3.Select the option Alternate from the drop down Automatic Multiple Offers under Tickets/Seats section\r\n4.Click Apply Changes button\r\n9. 1.Click User link\r\n2.Input the required User code in the User search field\r\n3.Select the check box inherit against the field Automatic Multiple Offers\r\n3.Click Apply Changes button\r\n10. 1. Navigate to ticket sales\r\n2. Select the event\r\n3. Select the patron\r\n4. Input the number of tickets\r\n5. Select the extended seat definition EG: ESD1\r\n6. Click on lock seats\r\n11. Verify the following in the multiple offer popup window\r\na. The description for the complementary offer should be displayed as the description in the target extended seat definition\r\nEg: The description should be displayed as the decription added in ESD2\r\n12. 1. Select the secondary event from the multiple offer window\r\n2. Select the delivery method\r\n3. Select the payment method\r\n4. Complete the transaction\r\n13. 1. Navigate to ticket services\r\n2. Verify the seats should belong to the target extended seat definition\r\n  eg: ESD2\r\n14. Repeat step1 to 13  with value in complementary definition\r\nVerify the description for the complementary offer should be displayed as the description entered in the complementary description field\r\nEg: complementary description entered in ESD1",
        "expected": "1. The user should be able to log in successfully\r\n2. \r\n3. The changes should be saved successfully\r\n4. The seats should be added to the newly created extended seat definition\r\n5. The changes should be saved successfully\r\n6. The Event search page should be displayed\r\n7. The event should be created successfully\r\n8. The field Automatic Multiple Offers should be updated with the option Alternate\r\n9. The value Alternate should be available in the field Automatic Multiple Offers\r\n10. The Multiple offer popup should be displayed\r\n11. The details should be displayed correctly in the multiple offer window\r\n12. The transaction should be completed successfully\r\n13. The seats should belong to the target extended seat definition\r\n14. The details should be displayed correctly in the multiple offer window"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696422,
    "title": "Verify the upsell request for exchange with a different event with alternate request",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 37,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C41912",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link for PV Application\r\n2. Go to the TicketSales from the Ticketing tab of the PV Application\r\n3. Select the Upsell Event  that is set\r\n4. Give the number of Tickets in the Seat Request  and click on Lock Tickets button with a Patron\r\n5. Verify the Multiple Offer Modal Window :\r\n\r\n1)The Multiple Offer with Event name,date and time should be displayed.\r\n\r\n2)Primary Offer  and Secondary offer as the header and within  the box Extended Seat Definition,Offer Number,Seat ,Row Section with Select Button for both Primary and Secondary offer .\r\n\r\n3)Cancel Button\r\n6. Click on the Select Button against the secondary Offer in the Multiple Offer Modal Window\r\n7. Select the Delivery Method from the delivery method drop down and click on Apply  Button\r\n8. Select the Payment method and click on Accept Payment\r\n9. Select the Order id \r\nSelect Exchange from the Action drop down\r\nclick on apply actions\r\n10. Select the alternate event set \r\nSelect the number of tickets required \r\nClick on the Select Button against the primary Offer in the Multiple Offer Modal Window\r\nAnd complete the transaction\r\n11. Logoff\r\n12. Call",
        "expected": "1. The PV application should be launched successfully\r\n2. The user should be navigated to the Ticket Sales\r\n3. The user should be able  to select the Upsell Event successfully\r\n4. The user should be displayed a Multiple Offer Pop up modal window with the Primary and the Secondary offers set\r\n5. The Multiple Offer Modal Window should be displayed as per the Description\r\n6. The secondary offer should be added to  the cart\r\n7. The user should be able to select the Delivery method from the drop down and navigated to the Payment\r\n8. The user should be able to complete the transaction successfully and the transaction id should be displayed\r\n9. User should be able to view the exchange cart page\r\n10. User should be able to complete the transaction \r\nTicket services should be dispalyed\r\n11. User should be able logoff from the application\r\n12."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696423,
    "title": "Verification of the seat selection type attribute of External Seat Map",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 38,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C41913",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Complete a Single Sales  transaction from PVO side\r\n2. Launch the link for PV Application\r\n3. Navigate to Ticket services\r\n4. Verify the order details in theTicket services  by giving the Confirmation id\r\n5. Verify the seat selection type attribute\r\n6. Logoff\r\n7. Note the Confirmation id after completing the transaction in PVO",
        "expected": "1. The user should be able to complete a transaction successfully\r\n2. The PV application should be launched successfully\r\n3. The Ticket services portal should be launched successfully.\r\n4. The order details should be dispalyed.\r\n5. The seat selection type attribute should be \"External Seat Map\"\r\n6. The user should be able be to Logout successfully.\r\n7. The user should make note of the Confirmation id in the Confirmation page"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696424,
    "title": "Setup an alternate event",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 39,
    "custom_is_automated": false,
    "custom_pv_category": 27,
    "custom_refs": "C41914",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the PVNG application\r\n2. Input the following credentials:\r\n  \r\n  \r\n2. 1. Navigate to Supplier Admin\r\n2. Select a supplier\r\n3. Select the Configuration tab\r\n4. Select Extended Seat Definition from the Change Configuration for drop down\r\n5. Click on the New button\r\n6. Input the required details and create one extended seat definition eg: ESD1\r\n7. Create another new extended seat definition eg: ESD2\r\n3. 1. Select the first Extended seat definition ESD1\r\n2. Select the second extended seat definition ESD2 from the Complementary definition drop down\r\n3. Click on Apply Changes\r\n4. 1. Navigate to Venue Administration\r\n2. Select a venue\r\n3. Select he master configuration\r\n4. Naviagte to extended Seat\r\n5. Create a new extended seat configuration\r\n6. Select some seats to the two new extended seat definition created eg: ESD1 and ESD2\r\n7. Save changes\r\n5. 1.Select the venue configuration\r\n2. Add the newly created extended seat configuration to the venue configuration\r\n3. Save changes\r\n6. Select the option Event administration from the drop dwon in the Home page\r\n7. Input the required details and create a new event\r\n8. 1.Go to Event Access tab\r\n2.Click Event link\r\n3.Select the option Alternate from the drop down Automatic Multiple Offers under Tickets/Seats section\r\n4.Click Apply Changes button\r\n9. 1.Click User link\r\n2.Input the required User code in the User search field\r\n3.Select the check box inherit against the field Automatic Multiple Offers\r\n3.Click Apply Changes button",
        "expected": "1. The user should be able to log in successfully\r\n2. \r\n3. The changes should be saved successfully\r\n4. The seats should be added to the newly created extended seat definition\r\n5. The changes should be saved successfully\r\n6. The Event search page should be displayed\r\n7. The event should be created successfully\r\n8. The field Automatic Multiple Offers should be updated with the option Alternate\r\n9. The value Alternate should be available in the field Automatic Multiple Offers"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696425,
    "title": "Verify the upsell request for reservation exchange with a different event without multiple offer",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 40,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C41915",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link for PV Application\r\n2. Go to the TicketSales from the Ticketing tab of the PV Application\r\n3. Select the Upsell Event  that is set\r\n4. Give the number of Tickets in the Seat Request  and click on Lock Tickets button with a Patron\r\n5. Verify the Multiple Offer Modal Window :\r\n\r\n1)The Multiple Offer with Event name,date and time should be displayed.\r\n\r\n2)Primary Offer  and Secondary offer as the header and within  the box Extended Seat Definition,Offer Number,Seat ,Row Section with Select Button for both Primary and Secondary offer .\r\n\r\n3)Cancel Button\r\n6. Click on the Select Button against the secondary Offer in the Multiple Offer Modal Window\r\n7. Select the Reserve link and click on Set to Reservation\r\n8. Select the Order id \r\nSelect Exchange from the Action drop down\r\nclick on apply actions\r\n9. Select the normal event(Not the Upsell event)\r\nSelect the number of tickets required\r\n10. Logoff\r\n11. Select the Delivery Method from the delivery method drop down and click on Apply  Button\r\n12. Select the Payment method and click on Accept Payment\r\n13. Call",
        "expected": "1. The PV application should be launched successfully\r\n2. The user should be navigated to the Ticket Sales\r\n3. The user should be able  to select the Upsell Event successfully\r\n4. The user should be displayed a Multiple Offer Pop up modal window with the Primary and the Secondary offers set\r\n5. The Multiple Offer Modal Window should be displayed as per the Description\r\n6. The secondary offer should be added to  the cart\r\n7. The user should be able to complete the transaction successfully and the transaction id should be displayed\r\n8. User should be able to view the exchange cart page\r\n9. User should be able to select the tickets\r\n10. User should be able logoff from the application\r\n11. The user should be able to select the Delivery method from the drop down and navigated to the Payment\r\n12. The user should be able to complete the transaction successfully and the transaction id should be displayed\r\n13."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696426,
    "title": "Verification of the seat selection type attibute of By seat for Rollover",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 41,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C41916",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Create one Package is rolled over with the 'same seat' option\r\n2. Launch the link for PV Application\r\n3. 1)Navigate to Ticket sales\r\n2)Select the Package created in Prerequisite\r\n3)Lock the seats \r\n4)Complete the transaction\r\n4. 1)Navigate to Ticket services\r\n2)Note down the transaction id\r\n5. 1)Launch the DB\r\n2)Verify the seat selection type attribute\r\n6. Logoff",
        "expected": "1. The Precondition should be created successfully\r\n2. The PV application should be launched successfully\r\n3. The transaction should be completed successfully.\r\n4. The transaction id should be note down\r\n5. The seat selection type attribute should be \"By Seat\"\r\n6. The user should be able be to Logout successfully."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696427,
    "title": "Verify the upsell request for exchange with a different event with upsell request",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 42,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C41917",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link for PV Application\r\n2. Go to the TicketSales from the Ticketing tab of the PV Application\r\n3. Select the Upsell Event  that is set\r\n4. Give the number of Tickets in the Seat Request  and click on Lock Tickets button with a Patron\r\n5. Verify the Multiple Offer Modal Window :\r\n\r\n1)The Multiple Offer with Event name,date and time should be displayed.\r\n\r\n2)Primary Offer  and Secondary offer as the header and within  the box Extended Seat Definition,Offer Number,Seat ,Row Section with Select Button for both Primary and Secondary offer .\r\n\r\n3)Cancel Button\r\n6. Click on the Select Button against the secondary Offer in the Multiple Offer Modal Window\r\n7. Select the Delivery Method from the delivery method drop down and click on Apply  Button\r\n8. Select the Payment method and click on Accept Payment\r\n9. Select the Order id \r\nSelect Exchange from the Action drop down\r\nclick on apply actions\r\n10. Select the Upsell event\r\nSelect the number of tickets required \r\nClick on the Select Button against the primary Offer in the Multiple Offer Modal Window\r\nAnd complete the transaction\r\n11. Logoff\r\n12. Call",
        "expected": "1. The PV application should be launched successfully\r\n2. The user should be navigated to the Ticket Sales\r\n3. The user should be able  to select the Upsell Event successfully\r\n4. The user should be displayed a Multiple Offer Pop up modal window with the Primary and the Secondary offers set\r\n5. The Multiple Offer Modal Window should be displayed as per the Description\r\n6. The secondary offer should be added to  the cart\r\n7. The user should be able to select the Delivery method from the drop down and navigated to the Payment\r\n8. The user should be able to complete the transaction successfully and the transaction id should be displayed\r\n9. User should be able to view the exchange cart page\r\n10. User should be able to complete the transaction \r\nTicket services should be dispalyed\r\n11. User should be able logoff from the application\r\n12."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696428,
    "title": "Verification of the seat selection type attribute of Seat Map",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 43,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C41918",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link for PV Application\r\n2. Navigate to Ticket services\r\n3. Verify the order details in theTicket services\r\n4. Verify the seat selection type attribute\r\n5. Logoff\r\n6. Complete a transaction in PV side via Seat Map\r\n7. Make note of the Confirmation id  in the PV side",
        "expected": "1. The PV application should be launched successfully\r\n2. The Ticket services portal should be launched successfully.\r\n3. The order details should be dispalyed.\r\n4. The seat selection type attribute should be \"Seat Map\"\r\n5. The user should be able be to Logout successfully.\r\n6. The user should be able to complete a transaction successfully\r\n7. The user should make note of the Confirmation id after completing the transaction successfully in the PV side"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696429,
    "title": "Verification of the seat selection type attibute of Best for All seat selection",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 44,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C41919",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Check the permission \"Can Use Any/All Seat Selection\" in Event access.\r\n2.Uncheck the Permission \"Automatic multiple offers\"\r\n2. Launch the link for PV Application\r\n3. 1)Navigate to Ticket sales\r\n2)Select the Event\r\n3)Select the search type as \"All Seats\"\r\n4)Lock the seats \r\n5)Complete the transaction\r\n4. 1)Navigate to Ticket services\r\n2)Note down the transaction id\r\n5. 1)Launch the DB\r\n2)Verify the seat selection type attribute\r\n6. Logoff\r\n7. Repeat all above steps to Group,Package,Partial Package",
        "expected": "1. The Precondition should be created successfully\r\n2. The PV application should be launched successfully\r\n3. The transaction should be completed successfully.\r\n4. The transaction id should be note down.\r\n5. The seat selection type attribute should be \"BEST\"\r\n6. The user should be able be to Logout successfully.\r\n7. The seat selection type attribute should be \"BEST\" for all this transactions"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696430,
    "title": "Verify the alternate request for an extended seat definition having same Complementary pointer and an Upsell pointer",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 45,
    "custom_is_automated": false,
    "custom_pv_category": 27,
    "custom_refs": "C41920",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the PVNG application\r\n2. Input the following credentials:\r\n  \r\n  \r\n2. 1. Navigate to Supplier Admin\r\n2. Select a supplier\r\n3. Select the Configuration tab\r\n4. Select Extended Seat Definition from the Change Configuration for drop down\r\n5. Click on the New button\r\n6. Input the required details and create one extended seat definition eg: ESD1\r\n7. Create another new extended seat definition eg: ESD2\r\n3. 1. Select the first Extended seat definition ESD1\r\n2. Select the second extended seat definition ESD2 from the Complementary definition drop down\r\n2. Select the second extended seat definition ESD2 from the Upsell definition drop down\r\n3. Click on Apply Changes\r\n4. 1. Navigate to Venue Administration\r\n2. Select a venue\r\n3. Select he master configuration\r\n4. Naviagte to extended Seat\r\n5. Create a new extended seat configuration\r\n6. Select some seats to the two new extended seat definition created eg: ESD1 and ESD2\r\n7. Save changes\r\n5. 1.Select the venue configuration\r\n2. Add the newly created extended seat configuration to the venue configuration\r\n3. Save changes\r\n6. Select the option Event administration from the drop dwon in the Home page\r\n7. Input the required details and create a new event\r\n8. 1.Go to Event Access tab\r\n2.Click Event link\r\n3.Select the option Alternate from the drop down Automatic Multiple Offers under Tickets/Seats section\r\n4.Click Apply Changes button\r\n9. 1.Click User link\r\n2.Input the required User code in the User search field\r\n3.Select the check box inherit against the field Automatic Multiple Offers\r\n3.Click Apply Changes button\r\n10. 1. Navigate to ticket sales\r\n2. Select the event\r\n3. Select the patron\r\n4. Input the number of tickets\r\n5. Select the extended seat definition EG: ESD1\r\n6. Click on lock seats\r\n11. Verify the following in the multiple offer popup window\r\na. The secondary offer should be labled as ALTERNATE OFFER\r\nb. The seats deatils should be displayed correctly.\r\nc. The secondary offer seats should be coresponding to the target complementary seat.\r\n12. 1. Select the secondary event from the multiple offer window\r\n2. Select the delivery method\r\n3. Select the payment method\r\n4. Complete the transaction\r\n13. 1. Navigate to ticket services\r\n2. Verify the seats should belong to the target extended seat definition\r\n  eg: ESD2",
        "expected": "1. The user should be able to log in successfully\r\n2. \r\n3. A warning message \"The Complementary and Upsell extended seat definitions have been set to the same value.  If this was not your intention, please make the appropriate adjustment.\" should be displayed.\r\nThe changes should be saved successfully\r\n4. The seats should be added to the newly created extended seat definition\r\n5. The changes should be saved successfully\r\n6. The Event search page should be displayed\r\n7. The event should be created successfully\r\n8. The field Automatic Multiple Offers should be updated with the option Alternate\r\n9. The value Alternate should be available in the field Automatic Multiple Offers\r\n10. The Multiple offer popup should be displayed\r\n11. The details should be displayed correctly in the multiple offer window\r\n12. The transaction should be completed successfully\r\n13. The seats should belong to the target extended seat definition"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696431,
    "title": "Verification of the seat selection type attibute of Best for Any seat selection",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 46,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C41921",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Check the permission \"Can Use Any/All Seat Selection\" in Event access.\r\n2.Uncheck the Permission \"Automatic multiple offers\"\r\n2. Launch the link for PV Application\r\n3. 1)Navigate to Ticket sales\r\n2)Select the Event\r\n3)Select the search type as \"Any Seats\"\r\n4)Lock the seats \r\n5)Complete the transaction\r\n4. 1)Navigate to Ticket services\r\n2)Select the above order\r\n5. 1)Launch the DB\r\n2)Verify the seat selection type attribute\r\n6. Logoff\r\n7. Repeat all above steps to Group,Package,Partial Package",
        "expected": "1. The Precondition should be created successfully\r\n2. The PV application should be launched successfully\r\n3. The transaction should be completed successfully.\r\n4. The order details should be note down.\r\n5. The seat selection type attribute should be \"BEST\"\r\n6. The user should be able be to Logout successfully.\r\n7. The seat selection type attribute should be \"BEST\" for all this transactions"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696432,
    "title": "Verify the upsell request for exchange with a different event without multiple offer",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 47,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C41922",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link for PV Application\r\n2. Go to the TicketSales from the Ticketing tab of the PV Application\r\n3. Select the Upsell Event  that is set\r\n4. Give the number of Tickets in the Seat Request  and click on Lock Tickets button with a Patron\r\n5. Verify the Multiple Offer Modal Window :\r\n\r\n1)The Multiple Offer with Event name,date and time should be displayed.\r\n\r\n2)Primary Offer  and Secondary offer as the header and within  the box Extended Seat Definition,Offer Number,Seat ,Row Section with Select Button for both Primary and Secondary offer .\r\n\r\n3)Cancel Button\r\n6. Click on the Select Button against the secondary Offer in the Multiple Offer Modal Window\r\n7. Select the Delivery Method from the delivery method drop down and click on Apply  Button\r\n8. Select the Payment method and click on Accept Payment\r\n9. Select the Order id \r\nSelect Exchange from the Action drop down\r\nclick on apply actions\r\n10. Select the normal event(Not the Upsell event)\r\nSelect the number of tickets required \r\nAnd complete the transaction\r\n11. Logoff\r\n12. Call",
        "expected": "1. The PV application should be launched successfully\r\n2. The user should be navigated to the Ticket Sales\r\n3. The user should be able  to select the Upsell Event successfully\r\n4. The user should be displayed a Multiple Offer Pop up modal window with the Primary and the Secondary offers set\r\n5. The Multiple Offer Modal Window should be displayed as per the Description\r\n6. The secondary offer should be added to  the cart\r\n7. The user should be able to select the Delivery method from the drop down and navigated to the Payment\r\n8. The user should be able to complete the transaction successfully and the transaction id should be displayed\r\n9. User should be able to view the exchange cart page\r\n10. User should be able to complete the transaction \r\nTicket services should be dispalyed\r\n11. User should be able logoff from the application\r\n12."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696433,
    "title": "Verification of the seat selection type attibute of Best for Best seat selection",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 48,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C41923",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link for PV Application\r\n2. 1)Navigate to Ticket sales\r\n2)Select the Event\r\n3)Select the search type as \"Best Availaible\"\r\n4)Lock the seats \r\n5)Complete the transaction\r\n3. 1)Navigate to Ticket services\r\n2)Note down the transaction id\r\n4. 1)Launch the DB\r\n2)Verify the seat selection type attribute\r\n5. Logoff\r\n6. 1.Check the permission \"Can Use Any/All Seat Selection\" in Event access.\r\n2.Uncheck the Permission \"Automatic multiple offers\"\r\n7. Repeat all above steps to Group,Package,Partial package",
        "expected": "1. The PV application should be launched successfully\r\n2. The transaction should be completed successfully.\r\n3. The transaction id details should be note down.\r\n4. The seat selection type attribute should be \"BEST\"\r\n5. The user should be able be to Logout successfully.\r\n6. The Precondition should be created successfully\r\n7. The seat selection type attribute should be \"BEST\" for all this transactions"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696434,
    "title": "UI verification of the upsell offer when Cancel action is invoked",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 49,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C41924",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link for PV Application\r\n2. Go to the TicketSales from the Ticketing tab of the PV Application\r\n3. Select the Upsell Event  that is set\r\n4. Give the number of Tickets in the Seat Request  and click on Lock Tickets button with a Patron\r\n5. Verify the Multiple Offer Modal Window :\r\n\r\n1) The extended seat definition used as the source for the upsell offer should be displayed after the term 'Primary Offer'.\r\n\r\n2)The second offer should be the upsell offer\r\n\r\n3) The 'Enter' key shall invoke the 'Select' action for the primary offer\r\n\r\n4)The Multiple Offer with Event name,date and time should be displayed.\r\n\r\n5)Primary Offer  and Secondary offer as the header and within  the box Extended Seat Definition,Offer Number,Seat ,Row Section with Select Button for both Primary and Secondary offer .\r\n\r\n6)When one of the 'Select' actions is invoked, the seats associated with the other offer are released by the system and the business use case continues.\r\n\r\n7)If the cancel action is invoked, both offers are released.\r\n\r\n8)The 'Esc' key shall invoke the 'Cancel' action.\r\n6. Verify the  cancellation  of offers by two ways :\r\n\r\n1)Click on the Cancel Button from the Upsell offer modal window \r\n\r\n2)Verify the cancel Action by clicking  \"Esc' Key\r\n7. Verify the offers in the cart when  cancel action is revoked\r\n8. Call",
        "expected": "1. The PV application should be launched successfully\r\n2. The user should be navigated to the Ticket Sales\r\n3. The user should be able  to select the Upsell Event successfully\r\n4. The user should be displayed a Multiple Offer Pop up modal window with the Primary and the Secondary offers set\r\n5. The Multiple Offer Modal Window should be displayed as per the Description\r\n6. The upsell modal window should be disappeared and the user should be taken to the Ticket Sales Page upon by performing the two ways\r\n7. The Offers should be released  and should not be added to the cart when the Cancel Button is Selected\r\n8."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696435,
    "title": "Verification of the seat selection type attibute of Unknown",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 50,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C41925",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link for PV Application\r\n2. Navigate to Ticket services\r\n3. Select any existing order\r\n4. Verify the seat selection type attribute\r\n5. Logoff",
        "expected": "1. The PV application should be launched successfully\r\n2. The Ticket services portal should be launched successfully.\r\n3. The order details should be dispalyed.\r\n4. The seat selection type attribute should be \"Unknown\"\r\n5. The user should be able be to Logout successfully."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696436,
    "title": "UI verification of the upsell offer",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 51,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C41926",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link for PV Application\r\n2. Go to the TicketSales from the Ticketing tab of the PV Application\r\n3. Select the Upsell Event  that is set\r\n4. Give the number of Tickets in the Seat Request  and click on Lock Tickets button with a Patron\r\n5. Verify the Multiple Offer Modal Window :\r\n\r\n1) The extended seat definition used as the source for the upsell offer should be displayed after the term 'Primary Offer'.\r\n\r\n2)The second offer should be the upsell offer\r\n\r\n3) The 'Enter' key shall invoke the 'Select' action for the primary offer\r\n\r\n4)The Multiple Offer with Event name,date and time should be displayed.\r\n\r\n5)Primary Offer  and Secondary offer as the header and within  the box Extended Seat Definition,Offer Number,Seat ,Row Section with Select Button for both Primary and Secondary offer .\r\n\r\n6)When one of the 'Select' actions is invoked, the seats associated with the other offer are released by the system and the business use case continues.\r\n\r\n7)If the cancel action is invoked, both offers are released.\r\n\r\n8)The 'Esc' key shall invoke the 'Cancel' action.\r\n6. Click on the Select Button against the Primary/ Secondary offer iin the Multiple Offer Modal Window\r\n7. Select the Delivery Method from the delivery method drop down and click on Apply  Button\r\n8. Select the Payment method and click on Accept Payment\r\n9. Call",
        "expected": "1. The PV application should be launched successfully\r\n2. The user should be navigated to the Ticket Sales\r\n3. The user should be able  to select the Upsell Event successfully\r\n4. The user should be displayed a Multiple Offer Pop up modal window with the Primary and the Secondary offers set\r\n5. The Multiple Offer Modal Window should be displayed as per the Description\r\n6. The Sselected  offer  should be added to  the cart\r\n7. The user should be able to select the Delivery method from the drop down and navigated to the Payment\r\n8. The user should be able to complete the transaction successfully and the transaction id should be displayed\r\n9."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696437,
    "title": "Verify the upsell request for single ticket  reservation  with the secondary offer",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 52,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C41927",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link for PV Application\r\n2. Go to the TicketSales from the Ticketing tab of the PV Application\r\n3. Select the Upsell Event  that is set\r\n4. Give the number of Tickets in the Seat Request  and click on Lock Tickets button with a Patron\r\n5. Verify the Multiple Offer Modal Window :\r\n\r\n1)The Multiple Offer with Event name,date and time should be displayed.\r\n\r\n2)Primary Offer  and Secondary offer as the header and within  the box Extended Seat Definition,Offer Number,Seat ,Row Section with Select Button for both Primary and Secondary offer .\r\n\r\n3)Cancel Button\r\n6. Click on the Select Button against the Secondary offer iin the Multiple Offer Modal Window\r\n7. Select the Reserve Option in the Patron Cart and give the Reservation date if required and Click on the button Set to Reservation,\r\n8. Click on the Logout link\r\n9. Verify the transaction is completed successfully\r\n10. Call",
        "expected": "1. The PV application should be launched successfully\r\n2. The user should be navigated to the Ticket Sales\r\n3. The user should be able  to select the Upsell Event successfully\r\n4. The user should be displayed a Multiple Offer Pop up modal window with the Primary and the Secondary offers set\r\n5. The Multiple Offer Modal Window should be displayed as per the Description\r\n6. The Secondary offer  should be added to  the cart\r\n7. The user should be able to Reserve the Tickets and the status of the Ticket should be achenged to Single Reservation in the Patron cart\r\n8. The user should be logged out successfully.\r\n9. The user should be able to complete the transaction successfully and the transaction id should be displayed\r\n10."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696438,
    "title": "Verify the upsell request for single ticket reservation with the primary offer",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 53,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C41928",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link for PV Application\r\n2. Go to the TicketSales from the Ticketing tab of the PV Application\r\n3. Select the Upsell Event  that is set\r\n4. Give the number of Tickets in the Seat Request  and click on Lock Tickets button with a Patron\r\n5. Verify the Multiple Offer Modal Window :\r\n\r\n1)The Multiple Offer with Event name,date and time should be displayed.\r\n\r\n2)Primary Offer  and Secondary offer as the header and within  the box Extended Seat Definition,Offer Number,Seat ,Row Section with Select Button for both Primary and Secondary offer .\r\n\r\n3)Cancel Button\r\n6. Click on the Select Button against the Primary Offer in the Multiple Offer Modal Window\r\n7. Verify the transaction is completed\r\n8. Select the Reserve Option in the Patron Cart and give the Reservation date if required and Click on the button Set to Reservation,\r\n9. Call",
        "expected": "1. The PV application should be launched successfully\r\n2. The user should be navigated to the Ticket Sales\r\n3. The user should be able  to select the Upsell Event successfully\r\n4. The user should be displayed a Multiple Offer Pop up modal window with the Primary and the Secondary offers set\r\n5. The Multiple Offer Modal Window should be displayed as per the Description\r\n6. The Primary offer should be added to  the cart\r\n7. The user should be able to complete the transaction successfully and the transaction id should be displayed\r\n8. The user should be able to Reserve the Tickets and the status of the Ticket should be achenged to Single Reservation in the Patron cart\r\n9."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696439,
    "title": "Verify the upsell request for single ticket sale with the secondary offer",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 54,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C41929",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link for PV Application\r\n2. Go to the TicketSales from the Ticketing tab of the PV Application\r\n3. Select the Upsell Event  that is set\r\n4. Give the number of Tickets in the Seat Request  and click on Lock Tickets button with a Patron\r\n5. Verify the Multiple Offer Modal Window :\r\n\r\n1)The Multiple Offer with Event name,date and time should be displayed.\r\n\r\n2)Primary Offer  and Secondary offer as the header and within  the box Extended Seat Definition,Offer Number,Seat ,Row Section with Select Button for both Primary and Secondary offer .\r\n\r\n3)Cancel Button\r\n6. Click on the Select Button against the Secondary Offer in the Multiple Offer Modal Window\r\n7. Select the Delivery Method from the delivery method drop down and click on Apply  Button\r\n8. Select the Payment method and click on Accept Payment\r\n9. Call",
        "expected": "1. The PV application should be launched successfully\r\n2. The user should be navigated to the Ticket Sales\r\n3. The user should be able  to select the Upsell Event successfully\r\n4. The user should be displayed a Multiple Offer Pop up modal window with the Primary and the Secondary offers set\r\n5. The Multiple Offer Modal Window should be displayed as per the Description\r\n6. The Secondary offer should be added to  the cart\r\n7. The user should be able to select the Delivery method from the drop down and navigated to the Payment\r\n8. The user should be able to complete the transaction successfully and the transaction id should be displayed\r\n9."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696440,
    "title": "Verify the upsell request for single ticket sale with the primary offer",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 55,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C41930",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link for PV Application\r\n2. Go to the TicketSales from the Ticketing tab of the PV Application\r\n3. Select the Upsell Event  that is set\r\n4. Give the number of Tickets in the Seat Request  and click on Lock Tickets button with a Patron\r\n5. Verify the Multiple Offer Modal Window :\r\n\r\n1)The Multiple Offer with Event name,date and time should be displayed.\r\n\r\n2)Primary Offer  and Secondary offer as the header and within  the box Extended Seat Definition,Offer Number,Seat ,Row Section with Select Button for both Primary and Secondary offer .\r\n\r\n3)Cancel Button\r\n6. Click on the Select Button against the Primary Offer in the Multiple Offer Modal Window\r\n7. Select the Delivery Method from the delivery method drop down and click on Apply  Button\r\n8. Select the Logout link\r\n9. Select the Payment method and click on Accept Payment\r\n10. Call",
        "expected": "1. The PV application should be launched successfully\r\n2. The user should be navigated to the Ticket Sales Portal\r\n3. The user should be able  to select the Upsell Event successfully\r\n4. The user should be displayed a Multiple Offer Pop up modal window with the Primary and the Secondary offers set\r\n5. The Multiple Offer Modal Window should be displayed as per the Description\r\n6. The Primary offer should be added to  the cart\r\n7. The user should be able to select the Delivery method from the drop down and navigated to the Payment\r\n8. The user should be logged out successfully\r\n9. The user should be able to complete the transaction successfully and the transaction id should be displayed\r\n10."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696441,
    "title": "UI verification of the Extended seat definition maintenance",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 56,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C41931",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link for PV Application\r\n2. Go to the TicketingSetup  tab and Select Supplier Administration\r\n3. Give the Suppliername  in the Supplier search and click Find\r\n4. Select the Configuration  tab of the Supplier\r\n5. Verify that the following are displayed under the  Extended Seat Definition :\r\n1.Extended Seat Definition Ribbon in Grey Colour Should be displayed on top.\r\n2.The four new description fields  should be displayed :\r\n   a)Complemetary Description\r\n   b)Complementary Public Desc\r\n   c)Upsell Description\r\n   d)Upsell Public Description \r\n3. The 'Complementary Definition' should be  coupled with an 'Upsell Definition'.\r\n4.The Fieldset should contain drop down for Complementary Definition and an Upsell       Definition .",
        "expected": "1. The PV application should be launched successfully\r\n2. The user should be navigated to the Supplier Portal\r\n3. The user should be navigated to the Corresponding Supplier\r\n4. The user should be navigated to the Extended Seat Configuration of the Supplier\r\n5. The values should be displayed in the Extended Seat configuration as per the Description"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696442,
    "title": "Setup an upsell event",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 57,
    "custom_is_automated": false,
    "custom_pv_category": 27,
    "custom_refs": "C41932",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the PVNG application\r\n2. Input the following credentials:\r\n  \r\n  \r\n2. Select the option Event administration from the drop dwon in the Home page\r\n3. Input the required details and create a new event\r\n4. 1.Go to Event Access tab\r\n2.Click Event link\r\n3.Select the option Upsell from the drop down Automatic Multiple Offers under Tickets/Seats section\r\n4.Click Apply Changes button\r\n5. 1.Click User link\r\n2.Input the required User code in the User search field\r\n3.Select the check box inherit against the field Automatic Multiple Offers\r\n3.Click Apply Changes button\r\n6. 1. Navigate to Supplier Admin\r\n2. Select a supplier\r\n3. Select the Configuration tab\r\n4. Select Extended Seat Definition from the Change Configuration for drop down\r\n5. Click on the New button\r\n6. Input the required details and create one extended seat definition eg: ESD1\r\n7. Create another new extended seat definition eg: ESD2\r\n7. 1. Select the first Extended seat definition ESD1\r\n2. Select the second extended seat definition ESD2 from the Upsell definition drop down\r\n3. Click on Apply Changes\r\n8. 1. Navigate to Venue Administration\r\n2. Select a venue\r\n3. Select the master configuration\r\n4. Navigate to extended Seat\r\n5. Create a new extended seat configuration\r\n6. Select some seats to the two new extended \r\nseat definition created eg: ESD1 and ESD2\r\n7. Save changes\r\n9. 1.Select the venue configuration\r\n2. Add the newly created extended seat configuration to the venue configuration\r\n3. Save changes",
        "expected": "1. The user should be able to log in successfully\r\n2. The Event search page should be displayed\r\n3. The event should be created successfully\r\n4. The field Automatic Multiple Offers should be updated with the option Upsell\r\n5. The value Upsell should be available in the field Automatic Multiple Offers\r\n6. \r\n7. The changes should be saved successfully\r\n8. The seats should be added to the newly created extended seat definition\r\n9. The changes should be saved successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696443,
    "title": "UI verification of the Automatic Multiple Offer field at the event level",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 58,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C41933",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link for PV Application\r\n2. Go to the TicketingSetup  tab and Select Event Administration\r\n3. Give the Eventrname  in the Event search and click Find\r\n4. Select the Event Access tab of the Supplier\r\n5. Verify the  Automatic Multiple Offers under the Event Access tab following values  :\r\n -None (default)\r\n -Alternate\r\n- Upsell (New)\r\n -Alternate if available or Upsell if available\r\n -Upsell if available or Alternate if available",
        "expected": "1. The PV application should be launched successfully\r\n2. The user should be navigated to the Event Portal\r\n3. The user should be navigated to the Corresponding Event\r\n4. The user should be navigated to the Event Access of the Supplier\r\n5. The user should be able be displayed  all the four values"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30696444,
    "title": "UI verification of the Automatic Multiple Offer field at the supplier level",
    "section_id": 1685225,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16300",
    "created_by": 399,
    "created_on": 1684989766,
    "updated_by": 399,
    "updated_on": 1684989766,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611461,
    "display_order": 59,
    "custom_is_automated": false,
    "custom_pv_category": 29,
    "custom_refs": "C41934",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link for PV Application\r\n2. Go to the TicketingSetup  tab and Select Supplier Administration\r\n3. Give the Suppliername  in the Supplier search and click Find\r\n4. Select the Event Access tab of the Supplier\r\n5. Verify the  Automatic Multiple Offers under the Event Access tab following values  :\r\n -None (default)\r\n -Alternate\r\n- Upsell (New)\r\n -Alternate if available or Upsell if available\r\n -Upsell if available or Alternate if available",
        "expected": "1. The PV application should be launched successfully\r\n2. The user should be navigated to the Supplier Portal\r\n3. The user should be navigated to the Corresponding Supplier\r\n4. The user should be navigated to the Event Access of the Supplier\r\n5. The user should be displayed all the four values"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  }
]