[
  {
    "id": 30683929,
    "title": "Unknown cart error is shown when user tries to check out without Making payment",
    "section_id": 1684670,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-20067",
    "created_by": 399,
    "created_on": 1684926991,
    "updated_by": 399,
    "updated_on": 1684926991,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 27,
    "custom_refs": "C63538",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to PV application. Provide valid credentials\r\nUsername: \r\nPassword:\r\n2. Select Ticket Sales from Drop down\r\n3. 1. Input the event name in the Selected Event Text box\r\n2. Click on \"Find\" button\r\n4. 1. Input the number of seats and click on \"Best Available\"  button\r\n5. 1.Select a delivery method from the drop down\r\n2. click on \"Apply\" button\r\n6. Do not select any payment method and click on \r\ncheckout\r\n7. In Confirm tab:\r\nErrors should be displayed for giving full payment\r\n8. 1. Select \"Logout\" from the drop down",
        "expected": "1. Login should be successful\r\n2. The ticet sales portal should be displayed\r\n3. The seat details should be displayed\r\n4. The Shopping cart should be displayed\r\n5. The user should be navigated to payment method page\r\n6. User should be able to click on checkout\r\n7. A message should be displayed for giving full payment\r\n8. The user should be successfully logged off"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.5.00"
  },
  {
    "id": 30683930,
    "title": "Verify previously added card which is added by Unchecking the checbox Sync to Digital Wallet is shown in the Digital wallet for scheduling the payment for a receivable transaction",
    "section_id": 1684670,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19646",
    "created_by": 399,
    "created_on": 1684926991,
    "updated_by": 399,
    "updated_on": 1684926991,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C63539",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV applcation\r\n2. Login using a valid username and password\r\n3. Go to Ticket Sales\r\n4. Select an Event\r\n5. 1)Select an Patron\r\n6. 1)Enter the No of Tickets \r\n2)Click the Best Available button\r\n7. Choose a delivery method and continue\r\n8. Split payment in to three\r\n\r\nPay 1st amount with Amex (Amex card is from \r\nhis\\her wallet)\r\n\r\nPay 2nd amount with adding a new card (Visa \r\nadded newly)\r\n\r\nPay 3rd amount by creating account credit (visa \r\ncard is from his\\her wallet)\r\n9. Complete the transaction\r\n10. Verify the patron management ->digital wallet\r\n11. Verify the DB details",
        "expected": "1. Application should be launched successfully\r\n2. User should be able to login successfully\r\n3. Ticket Sales portal should be launched successfully\r\n4. Event should be displayed\r\n5. User should be able to Select the patron successfully\r\n6. User should be able to input the parameters\r\n7. User should be able to select the delivery \r\nmethod successfully.\r\n8. User should be able to complete the payment\r\n9. User should beable to complete the transaction\r\n10. All the card details should be updated as expected.\r\n11. All detials displayed correctly."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.4.10.xx"
  },
  {
    "id": 30683931,
    "title": "Verify user is getting correct validation message when user tries to select another card from the dropdown in payment page after selecting one card from Credit Cards on File_UnCheck the checkbox Sync To Digital Wallet.",
    "section_id": 1684670,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19646",
    "created_by": 399,
    "created_on": 1684926991,
    "updated_by": 399,
    "updated_on": 1684926991,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C63540",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV applcation\r\n2. Login using a valid username and password\r\n3. Go to Ticket Sales\r\n4. Select an Event\r\n5. 1)Select an Patron\r\n6. 1)Enter the No of Tickets \r\n2)Click the Best Available button\r\n7. Choose a delivery method and continue\r\n8. Split payment in to three\r\n\r\nPay 1st amount with Amex (Amex card is from \r\nhis\\her wallet)\r\n\r\nPay 2nd amount with adding a new card (Visa \r\nadded newly)\r\n\r\nPay 3rd amount by creating account credit (visa \r\ncard is from his\\her wallet)\r\n9. Complete the transaction\r\n10. Verify the patron management ->digital wallet\r\n11. Verify the DB details",
        "expected": "1. Application should be launched successfully\r\n2. User should be able to login successfully\r\n3. Ticket Sales portal should be launched successfully\r\n4. Event should be displayed\r\n5. User should be able to Select the patron successfully\r\n6. User should be able to input the parameters\r\n7. User should be able to select the delivery \r\nmethod successfully.\r\n8. User should be able to complete the payment\r\n9. User should beable to complete the transaction\r\n10. All the card details should be updated as expected.\r\n11. All detials displayed correctly."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.4.10.xx"
  },
  {
    "id": 30683932,
    "title": "Verify the card is added to Digital Wallet when user doing a REFUND transaction",
    "section_id": 1684670,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19646",
    "created_by": 399,
    "created_on": 1684926991,
    "updated_by": 399,
    "updated_on": 1684926991,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C63541",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV applcation\r\n2. Login using a valid username and password\r\n3. Go to Ticket Sales\r\n4. Select an Event\r\n5. 1)Select an Patron\r\n6. 1)Enter the No of Tickets \r\n2)Click the Best Available button\r\n7. Choose a delivery method and continue\r\n8. Split payment in to three\r\n\r\nPay 1st amount with Amex (Amex card is from \r\nhis\\her wallet)\r\n\r\nPay 2nd amount with adding a new card (Visa \r\nadded newly)\r\n\r\nPay 3rd amount by creating account credit (visa \r\ncard is from his\\her wallet)\r\n9. Complete the transaction\r\n10. Verify the patron management ->digital wallet\r\n11. Verify the DB details",
        "expected": "1. Application should be launched successfully\r\n2. User should be able to login successfully\r\n3. Ticket Sales portal should be launched successfully\r\n4. Event should be displayed\r\n5. User should be able to Select the patron successfully\r\n6. User should be able to input the parameters\r\n7. User should be able to select the delivery \r\nmethod successfully.\r\n8. User should be able to complete the payment\r\n9. User should beable to complete the transaction\r\n10. All the card details should be updated as expected.\r\n11. All detials displayed correctly."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.4.10.xx"
  },
  {
    "id": 30683933,
    "title": "Verify the created_date and created_by_operator_id values are not longer updated (only inserted) in PATRON_CARD_ON_FILE table",
    "section_id": 1684670,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19646",
    "created_by": 399,
    "created_on": 1684926991,
    "updated_by": 399,
    "updated_on": 1684926991,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C63542",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV applcation\r\n2. Login using a valid username and password\r\n3. Go to Ticket Sales\r\n4. Select an Event\r\n5. 1)Select an Patron\r\n6. 1)Enter the No of Tickets \r\n2)Click the Best Available button\r\n7. Choose a delivery method and continue\r\n8. Split payment in to three\r\n\r\nPay 1st amount with Amex (Amex card is from \r\nhis\\her wallet)\r\n\r\nPay 2nd amount with adding a new card (Visa \r\nadded newly)\r\n\r\nPay 3rd amount by creating account credit (visa \r\ncard is from his\\her wallet)\r\n9. Complete the transaction\r\n10. Verify the patron management ->digital wallet\r\n11. Verify the DB details",
        "expected": "1. Application should be launched successfully\r\n2. User should be able to login successfully\r\n3. Ticket Sales portal should be launched successfully\r\n4. Event should be displayed\r\n5. User should be able to Select the patron successfully\r\n6. User should be able to input the parameters\r\n7. User should be able to select the delivery \r\nmethod successfully.\r\n8. User should be able to complete the payment\r\n9. User should beable to complete the transaction\r\n10. All the card details should be updated as expected.\r\n11. All detials displayed correctly."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.4.10.xx"
  },
  {
    "id": 30683934,
    "title": "Verify previously added card which is added by checking the checbox Sync to Digital Wallet is shown in the Digital wallet for scheduling the payment for a receivable transaction",
    "section_id": 1684670,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19646",
    "created_by": 399,
    "created_on": 1684926991,
    "updated_by": 399,
    "updated_on": 1684926991,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C63543",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV applcation\r\n2. Login using a valid username and password\r\n3. Go to Ticket Sales\r\n4. Select an Event\r\n5. 1)Select an Patron\r\n6. 1)Enter the No of Tickets \r\n2)Click the Best Available button\r\n7. Choose a delivery method and continue\r\n8. Split payment in to three\r\n\r\nPay 1st amount with Amex (Amex card is from \r\nhis\\her wallet)\r\n\r\nPay 2nd amount with adding a new card (Visa \r\nadded newly)\r\n\r\nPay 3rd amount by creating account credit (visa \r\ncard is from his\\her wallet)\r\n9. Complete the transaction\r\n10. Verify the patron management ->digital wallet\r\n11. Verify the DB details",
        "expected": "1. Application should be launched successfully\r\n2. User should be able to login successfully\r\n3. Ticket Sales portal should be launched successfully\r\n4. Event should be displayed\r\n5. User should be able to Select the patron successfully\r\n6. User should be able to input the parameters\r\n7. User should be able to select the delivery \r\nmethod successfully.\r\n8. User should be able to complete the payment\r\n9. User should beable to complete the transaction\r\n10. All the card details should be updated as expected.\r\n11. All detials displayed correctly."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.4.10.xx"
  },
  {
    "id": 30683935,
    "title": "Verify user is getting correct validation message when user tries to select another card from the dropdown in payment page after selecting one card from Credit Cards on File_Check the checkbox Sync To Digital Wallet",
    "section_id": 1684670,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19646",
    "created_by": 399,
    "created_on": 1684926991,
    "updated_by": 399,
    "updated_on": 1684926991,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C63544",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV applcation\r\n2. Login using a valid username and password\r\n3. Go to Ticket Sales\r\n4. Select an Event\r\n5. 1)Select an Patron\r\n6. 1)Enter the No of Tickets \r\n2)Click the Best Available button\r\n7. Choose a delivery method and continue\r\n8. Split payment in to three\r\n\r\nPay 1st amount with Amex (Amex card is from \r\nhis\\her wallet)\r\n\r\nPay 2nd amount with adding a new card (Visa \r\nadded newly)\r\n\r\nPay 3rd amount by creating account credit (visa \r\ncard is from his\\her wallet)\r\n9. Complete the transaction\r\n10. Verify the patron management ->digital wallet\r\n11. Verify the DB details",
        "expected": "1. Application should be launched successfully\r\n2. User should be able to login successfully\r\n3. Ticket Sales portal should be launched successfully\r\n4. Event should be displayed\r\n5. User should be able to Select the patron successfully\r\n6. User should be able to input the parameters\r\n7. User should be able to select the delivery \r\nmethod successfully.\r\n8. User should be able to complete the payment\r\n9. User should beable to complete the transaction\r\n10. All the card details should be updated as expected.\r\n11. All detials displayed correctly."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.4.10.xx"
  },
  {
    "id": 30683936,
    "title": "Verify user is able to add credit card on same time with the different card details",
    "section_id": 1684670,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19646",
    "created_by": 399,
    "created_on": 1684926991,
    "updated_by": 399,
    "updated_on": 1684926991,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C63545",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV applcation\r\n2. Login using a valid username and password\r\n3. Go to Ticket Sales\r\n4. Select an Event\r\n5. 1)Select an Patron\r\n6. 1)Enter the No of Tickets \r\n2)Click the Best Available button\r\n7. Choose a delivery method and continue\r\n8. Split payment in to three\r\n\r\nPay 1st amount with Amex (Amex card is from \r\nhis\\her wallet)\r\n\r\nPay 2nd amount with adding a new card (Visa \r\nadded newly)\r\n\r\nPay 3rd amount by creating account credit (visa \r\ncard is from his\\her wallet)\r\n9. Complete the transaction\r\n10. Verify the patron management ->digital wallet\r\n11. Verify the DB details",
        "expected": "1. Application should be launched successfully\r\n2. User should be able to login successfully\r\n3. Ticket Sales portal should be launched successfully\r\n4. Event should be displayed\r\n5. User should be able to Select the patron successfully\r\n6. User should be able to input the parameters\r\n7. User should be able to select the delivery \r\nmethod successfully.\r\n8. User should be able to complete the payment\r\n9. User should beable to complete the transaction\r\n10. All the card details should be updated as expected.\r\n11. All detials displayed correctly."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.4.10.xx"
  },
  {
    "id": 30683937,
    "title": "Verify the card details are displayed correctly in PATRON_CARD_ON_FILE, PAYMENT, CARD_RESPONSE table after completing transaction using credit card",
    "section_id": 1684670,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19646",
    "created_by": 399,
    "created_on": 1684926991,
    "updated_by": 399,
    "updated_on": 1684926991,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 9,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C63546",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV applcation\r\n2. Login using a valid username and password\r\n3. Go to Ticket Sales\r\n4. Select an Event\r\n5. 1)Select an Patron\r\n6. 1)Enter the No of Tickets \r\n2)Click the Best Available button\r\n7. Choose a delivery method and continue\r\n8. Split payment in to three\r\n\r\nPay 1st amount with Amex (Amex card is from \r\nhis\\her wallet)\r\n\r\nPay 2nd amount with adding a new card (Visa \r\nadded newly)\r\n\r\nPay 3rd amount by creating account credit (visa \r\ncard is from his\\her wallet)\r\n9. Complete the transaction\r\n10. Verify the patron management ->digital wallet\r\n11. Verify the DB details",
        "expected": "1. Application should be launched successfully\r\n2. User should be able to login successfully\r\n3. Ticket Sales portal should be launched successfully\r\n4. Event should be displayed\r\n5. User should be able to Select the patron successfully\r\n6. User should be able to input the parameters\r\n7. User should be able to select the delivery \r\nmethod successfully.\r\n8. User should be able to complete the payment\r\n9. User should beable to complete the transaction\r\n10. All the card details should be updated as expected.\r\n11. All detials displayed correctly."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.4.10.xx"
  },
  {
    "id": 30683938,
    "title": "Verify user is able to add credit card on same time with the same card details",
    "section_id": 1684670,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19646",
    "created_by": 399,
    "created_on": 1684926991,
    "updated_by": 399,
    "updated_on": 1684926991,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 10,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C63547",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV applcation\r\n2. Login using a valid username and password\r\n3. Go to Ticket Sales\r\n4. Select an Event\r\n5. 1)Select an Patron\r\n6. 1)Enter the No of Tickets \r\n2)Click the Best Available button\r\n7. Choose a delivery method and continue\r\n8. Split payment in to three\r\n\r\nPay 1st amount with Amex (Amex card is from \r\nhis\\her wallet)\r\n\r\nPay 2nd amount with adding a new card (Visa \r\nadded newly)\r\n\r\nPay 3rd amount by creating account credit (visa \r\ncard is from his\\her wallet)\r\n9. Complete the transaction\r\n10. Verify the patron management ->digital wallet\r\n11. Verify the DB details",
        "expected": "1. Application should be launched successfully\r\n2. User should be able to login successfully\r\n3. Ticket Sales portal should be launched successfully\r\n4. Event should be displayed\r\n5. User should be able to Select the patron successfully\r\n6. User should be able to input the parameters\r\n7. User should be able to select the delivery \r\nmethod successfully.\r\n8. User should be able to complete the payment\r\n9. User should beable to complete the transaction\r\n10. All the card details should be updated as expected.\r\n11. All detials displayed correctly."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.4.10.xx"
  },
  {
    "id": 30683939,
    "title": "Verify new card is added to Payment Page_Credit Cards on File after completing one transaction using the card.",
    "section_id": 1684670,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19646",
    "created_by": 399,
    "created_on": 1684926991,
    "updated_by": 399,
    "updated_on": 1684926991,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 11,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C63548",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV applcation\r\n2. Login using a valid username and password\r\n3. Go to Ticket Sales\r\n4. Select an Event\r\n5. 1)Select an Patron\r\n6. 1)Enter the No of Tickets \r\n2)Click the Best Available button\r\n7. Choose a delivery method and continue\r\n8. Split payment in to three\r\n\r\nPay 1st amount with Amex (Amex card is from \r\nhis\\her wallet)\r\n\r\nPay 2nd amount with adding a new card (Visa \r\nadded newly)\r\n\r\nPay 3rd amount by creating account credit (visa \r\ncard is from his\\her wallet)\r\n9. Complete the transaction\r\n10. Verify the patron management ->digital wallet\r\n11. Verify the DB details",
        "expected": "1. Application should be launched successfully\r\n2. User should be able to login successfully\r\n3. Ticket Sales portal should be launched successfully\r\n4. Event should be displayed\r\n5. User should be able to Select the patron successfully\r\n6. User should be able to input the parameters\r\n7. User should be able to select the delivery \r\nmethod successfully.\r\n8. User should be able to complete the payment\r\n9. User should beable to complete the transaction\r\n10. All the card details should be updated as expected.\r\n11. All detials displayed correctly."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.4.10.xx"
  },
  {
    "id": 30683940,
    "title": "Verify that created date updated correctly foe wallet items.",
    "section_id": 1684670,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19523",
    "created_by": 399,
    "created_on": 1684926991,
    "updated_by": 399,
    "updated_on": 1684926991,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 12,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C63549",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV applcation\r\n2. Login using a valid username and password\r\n3. Go to Ticket Sales\r\n4. Select an Event\r\n5. 1)Select an Patron\r\n6. 1)Enter the No of Tickets \r\n2)Click the Best Available button\r\n7. Choose a delivery method and continue\r\n8. Split payment in to three\r\n\r\nPay 1st amount with Amex (Amex card is from \r\nhis\\her wallet)\r\n\r\nPay 2nd amount with adding a new card (Visa \r\nadded newly)\r\n\r\nPay 3rd amount by creating account credit (visa \r\ncard is from his\\her wallet)\r\n9. Complete the transaction\r\n10. Verify the patron management ->digital wallet\r\n11. Verify the DB details",
        "expected": "1. Application should be launched successfully\r\n2. User should be able to login successfully\r\n3. Ticket Sales portal should be launched successfully\r\n4. Event should be displayed\r\n5. User should be able to Select the patron successfully\r\n6. User should be able to input the parameters\r\n7. User should be able to select the delivery \r\nmethod successfully.\r\n8. User should be able to complete the payment\r\n9. User should beable to complete the transaction\r\n10. All the card details should be updated as expected.\r\n11. All detials displayed correctly."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30683941,
    "title": "Verify that card details are updated correctly if user uses Credit Card Payment with a mix of 2 card types and data from 2 digital wallet items.",
    "section_id": 1684670,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19523",
    "created_by": 399,
    "created_on": 1684926991,
    "updated_by": 399,
    "updated_on": 1684926991,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 13,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C63550",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV applcation\r\n2. Login using a valid username and password\r\n3. Go to Ticket Sales\r\n4. Select an Event\r\n5. 1)Select an Patron\r\n6. 1)Enter the No of Tickets \r\n2)Click the Best Available button\r\n7. Choose a delivery method and continue\r\n8. Split payment in to three\r\n\r\nPay 1st amount with Amex (Amex card is from \r\nhis\\her wallet)\r\n\r\nPay 2nd amount with adding a new card (Visa \r\nadded newly)\r\n\r\nPay 3rd amount by creating account credit (visa \r\ncard is from his\\her wallet)\r\n9. Complete the transaction\r\n10. Verify the patron management ->digital wallet\r\n11. Verify the DB details",
        "expected": "1. Application should be launched successfully\r\n2. User should be able to login successfully\r\n3. Ticket Sales portal should be launched successfully\r\n4. Event should be displayed\r\n5. User should be able to Select the patron successfully\r\n6. User should be able to input the parameters\r\n7. User should be able to select the delivery \r\nmethod successfully.\r\n8. User should be able to complete the payment\r\n9. User should beable to complete the transaction\r\n10. All the card details should be updated as expected.\r\n11. All detials displayed correctly."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30683942,
    "title": "Verify user is able to complete the transaction successfully when user tries to complete an initial partial payment via Sync to Digital Wallet option and then tries to create receivables.",
    "section_id": 1684670,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19465",
    "created_by": 399,
    "created_on": 1684926991,
    "updated_by": 399,
    "updated_on": 1684926991,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 14,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C63551",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV applcation\r\n2. Login using a valid username and password\r\n3. Go to Ticket Sales\r\n4. Select an Event\r\n5. 1)Select an Patron\r\n6. 1)Enter the No of Tickets \r\n2)Click the Best Available button\r\n7. Choose a delivery method and continue\r\n8. Add new credit card and do a partial payment\r\n9. Checkout from the cart\r\n10. Create a receivable for the remaining amount, \r\nselect and apply the payment plan from the \r\npre-req\r\n11. Navigate to Schedule payment modal \r\nand Scheduled the installments.\r\n12. Load the Digital Wallet tab and add the same card \r\nused for payment\r\n13. Assign the payment method and apply to all \r\npayments",
        "expected": "1. Application should be launched successfully\r\n2. User should be able to login successfully\r\n3. Ticket Sales portal should be launched successfully\r\n4. Event should be displayed\r\n5. User should be able to Select the patron successfully\r\n6. User should be able to input the parameters\r\n7. User should be able to select the delivery \r\nmethod successfully.\r\n8. User should be able to complete partial payment\r\n9. EXPECTED BEHAVIOR:\r\nImprove the cart process so that the cart can \r\ncheckout successfully in the described work \r\nflow.\r\nIdeally if the card was selected to Sync in the \r\npayment tab it would be available for selection in \r\nthe Digital Wallet tab, this avoids double entry.\r\nOr the cart could gracefully skip the second card \r\ninsert call if the same card was called for in a \r\nsingle transaction.\r\n10. User should be able to create a receivable\r\n11. User should be navigate to the schedule \r\npayment modal and able to schedule the \r\npayments successfully.\r\n12. User should be able to add the credit card \r\nsuccessfully.\r\n13. User should be assign the payment method to \r\nall and save the changes made"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30683943,
    "title": "Verify newly added card is shown in the Digital wallet tab of Scheduled Payment modal when user added a new credit card during an initial partial payment via Sync to Digital Wallet option.",
    "section_id": 1684670,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19465",
    "created_by": 399,
    "created_on": 1684926991,
    "updated_by": 399,
    "updated_on": 1684926991,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 15,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C63552",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV applcation\r\n2. Login using a valid username and password\r\n3. Go to Ticket Sales\r\n4. Select an Event\r\n5. 1)Select an Patron\r\n6. 1)Enter the No of Tickets \r\n2)Click the Best Available button\r\n7. Add new credit card and do a partial payment\r\n8. Navigate to Digital wallet tab of Scheduled \r\nPayment modal\r\nVerify the card is added to the Digital wallet tab of \r\nScheduled Payment modal\r\n9. Choose a delivery method and continue",
        "expected": "1. Application should be launched successfully\r\n2. User should be able to login successfully\r\n3. Ticket Sales portal should be launched successfully\r\n4. Event should be displayed\r\n5. User should be able to Select the patron successfully\r\n6. User should be able to input the parameters\r\n7. User should be able to complete partial payment\r\n8. EXPECTED BEHAVIOR:\r\nImprove the cart process so that the cart can \r\ncheckout successfully in the described work \r\nflow.\r\nIdeally if the card was selected to Sync \r\nin the payment tab it would be available \r\nfor selection in the Digital Wallet tab, \r\nthis avoids double entry.\r\nOr the cart could gracefully skip the second \r\ncard insert call if the same card was called \r\nfor in a single transaction.\r\n9. User should be able to select the delivery \r\nmethod successfully."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30683944,
    "title": "Verify whether Unexpected error message is shown when multiple consumptions are made against the same credit on the same order using Reoffer",
    "section_id": 1684670,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-13248",
    "created_by": 399,
    "created_on": 1684926991,
    "updated_by": 399,
    "updated_on": 1684926991,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 16,
    "custom_is_automated": false,
    "custom_pv_category": 27,
    "custom_refs": "C63553",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Complete a transaction with a patron. Note down the order ID. Navigate to Ticket Services and return the order by creating credit via. - In Lieu of Refund credit. Complete transaction.\r\n2. Navigate to Ticket sales.\r\nSelect an event and same patron(pre-requisite) to perform a transaction.\r\n3. Create a receivable with due amount and complete transaction.\r\nNote down the Order ID\r\n4. Navigate to Ticket Services. \r\nSearch for the Order ID.\r\n5. Click 'Create Cash Receipt'.\r\n6. In Receivable tab, pay the full due amount using the available account credit.\r\nComplete transaction\r\n7. Navigate to Ticket Services. \r\nSearch for the this Order ID(step 6).\r\n8. Select Reoffer.\r\n9. In the cart, Reprice a seat to a higher ticket value making an amount due.\r\n\r\nIn Payment tab, select the same account credit again and click Accept Payment.\r\nComplete Transaction.",
        "expected": "1. The transaction must be completed successfully.\r\n2. The Event and Patron must be selected successfully.\r\n3. The transaction must be completed successfully and the Order ID must be noted.\r\n4. The Order ID details must be displayed\r\n5. User will be navigated to Tickets cart\r\n6. The transaction must be completed successfully\r\n7. The Order ID details must be displayed\r\n8. User will be navigated to Tickets cart\r\n9. The transaction must be completed successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.10"
  },
  {
    "id": 30683945,
    "title": "Verify whether Unexpected error message is shown when multiple consumptions are made against the same credit on the same order",
    "section_id": 1684670,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-13248",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 17,
    "custom_is_automated": false,
    "custom_pv_category": 27,
    "custom_refs": "C63554",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Complete a transaction with a patron. Note down the order ID. Navigate to Ticket Services and return the order by creating credit via. - In Lieu of Refund credit. Complete transaction.\r\n2. Navigate to Ticket sales.\r\nSelect an event and same patron(pre-requisite) to perform a transaction.\r\n3. Create a receivable with due amount and complete transaction.\r\nNote down the Order ID\r\n4. Navigate to Ticket Services. \r\nSearch for the Order ID.\r\n5. Click 'Create Cash Receipt'.\r\n6. 1)In Receivable tab pay an amount less than full amount due and less than available credit using account credit.\r\n2)In payment tab, use account credit\r\n3)Complete transaction\r\n7. Navigate to Ticket Services. \r\nSearch for the same Order ID(step 4) again.\r\n8. Click 'Create Cash Receipt'.\r\n9. 1)In Receivable tab,create reduction for remainder of due amount\r\n2)In payment tab select account credit again \r\n3)Click Accept payment button\r\n10. Complete the transaction\r\n11. Click on Logout link",
        "expected": "1. The transaction must be completed successfully.\r\n2. The Event and Patron must be selected successfully.\r\n3. The transaction must be completed successfully and the Order ID must be noted.\r\n4. The Order ID details must be displayed\r\n5. User should be navigated to Tickets shopping cart\r\n6. The transaction should be be completed successfully\r\n7. The Order ID details must be displayed\r\n8. User should be navigated to Tickets cart\r\n9. Payment should be completed without any error\r\n10. The transaction should be be completed successfully\r\n11. User should be logged out of the application successfully."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.10"
  },
  {
    "id": 30683946,
    "title": "Verify no script error is displayed if a payment method is not selected in ticket sale",
    "section_id": 1684670,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-13853",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 18,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C63555",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV applcation\r\n2. Login using a valid username and password\r\n3. Go to Ticket Sales\r\n4. Select an Event\r\n5. 1)Select an Patron\r\n6. 1)Enter the No of Tickets \r\n2)Click the Best Available button\r\n7. 1)Click Payments tab\r\n2)In Payment , Select \"No Method \"\r\n3)Click Accept Payment\r\n8. Verify no script error is generated if the user is not selecting any payment method",
        "expected": "1. Application should be launched successfully\r\n2. User should be able to login successfully\r\n3. Ticket Sales portal should be launched successfully\r\n4. Event should be displayed\r\n5. User should be able to Select the patron successfully\r\n6. User should be able to input the parameters\r\n7. Error message should be shown , select an payment method\r\n8. Script error should not be generated"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30683947,
    "title": "Verify event access settings,keywords and extended seat settings",
    "section_id": 1684670,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PV-26028",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 19,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C907765",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Create new event with an extended seat configuration defined as â€˜Exclude from Capacityâ€™.\nAdd in keywords & assign ESD for the event\n\nAssign event-level sales access for the user\n\nAssign event-level hold code access for the user\n\r\n2. Navigate to Supplier > Venue \nNavigate to Master Configuration & click on â€˜Extended Seat Configsâ€™ tab\nMaster configuration- kept on available\n\nClick on hyperlink for the â€˜Removeâ€™ ESD Config\n\nChange status from Available > Maintenance\n\nGo into designer mode & pull up a seat map\nOn left side, select the Extended Seat Config to modify from dropdown [Remove, in this case]\nHighlight seats to assign, select definition, select â€˜Add 40 seatsâ€™\n\nSave to Apply Changes\nSelect â€˜Editâ€™ under Extended Seat Config name\nAt pop-up screen, change status from Maintenance to Available click Done\nSave changes\r\n3. Navigate back to event\nNote the keywords are not missing  and are correct\nNote the Extended Seat Configurations assigned Correctly\r\n4. Click on Event Access tab for the user modified\nNote that the specific settings in place\r\n5. Pull up Hold Code access.\nNote that the user-specific settings are correct.",
        "expected": "1. Success\r\n2. Success\r\n3. Success\r\n4. Success\r\n5. Success"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.0.60"
  },
  {
    "id": 30683948,
    "title": "Verify whether audit history of deletes and inserts to patron entities are correct after patron merge",
    "section_id": 1684670,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PV-26218",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 20,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C907766",
    "custom_preconds": "Note:\r\nsource patron_account_id \r\ntarget patron_account_id \r\naudit_group_id",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Merge the source patron to target patron\r\n2. Verify audit_history\nselect AUDIT_ACTION_TYPE_CODE, ENTITY_ID, ENTITY_NAME, REF_ENTITY_ID, REF_ENTITY_NAME, ENTITY_AUDIT_TYPE_CODE, CREATED_DATE \nfrom audit_history where audit_group_id =  order by entity_name",
        "expected": "1. Success\r\n2. The details should be correctly displayed in audit_history table after merge:\npatron_contact_address\npatron_contact_email\npatron_contact_phone\npatron_trait"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.0.60"
  },
  {
    "id": 30683949,
    "title": "Verify whether user is able to map the DPU to marketing domain which is not associated to the mapped Organization",
    "section_id": 1684670,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PV-26469",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 21,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C907767",
    "custom_preconds": "Note:\r\nsource patron_account_id \r\ntarget patron_account_id \r\naudit_group_id",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Create a Marketing Domain.\nFew DPUs are mapped to the Data protection settings under REDSOX org.\n\r\n2. Go to Marketing Domain Org Admin and search for the above marketing domain\nSearch for a DPU which is not mapped in the associated Org\nSelect a different DPU from the search result and apply the External List Identifier\nVerify whether user is able to map the DPU to marketing domain which is not associated to the mapped Organization",
        "expected": "1. Success\r\n2. User should not be able to map the DPU to the marketing domain which is not associated to the mapped Org."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.0.60"
  },
  {
    "id": 30683950,
    "title": "Verify whether card present checkbox remain enabled in accordance with sales AFP",
    "section_id": 1684670,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PV-26472",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 22,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C907768",
    "custom_preconds": "AFP setting 'Change Card Present (if not swiped)' for the Operator/ Agency:  True",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to PV\nLock seat in the cart\nEnter credit card via Manual keyboard entry\r\n2. Lock seat in the cart\nUse DWI for the payment",
        "expected": "1. Card present checkbox should be enabled\r\n2. Card present checkbox should be enabled"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.0.60"
  },
  {
    "id": 30683951,
    "title": "Verify whether internal users whose password is reset via PV are inactivated when inactive thread is run after the configured time",
    "section_id": 1684670,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PV-26477",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 23,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C907769",
    "custom_preconds": "Set active.interval.minutes.after.password.reset=15",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to PV\nReset password of internal user via PV > User Management > Details > RESET PASSWORD\r\n2. Login and verify [ inactive user thread is run within 15 minutes after password is reset]",
        "expected": "1. Success\r\n2. Internal users whose password is reset via PV should be inactivated when inactive thread is run after the configured time."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.0.60"
  },
  {
    "id": 30683952,
    "title": "Verify whether invalid postal codes are accepted for level 3 processing postal code",
    "section_id": 1684670,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PV-26482",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 24,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C907770",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to PV\n\r\n2. Select Supplier\nSet invalid postal code in Level III Postal Code field\nApply changes",
        "expected": "1. Success\r\n2. Proper error message should be generated."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.0.60"
  },
  {
    "id": 30683953,
    "title": "Verify whether Credit Card DWIs added via V2 Update Patron API are verified",
    "section_id": 1684670,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PV-26483",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 25,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C907771",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Create a VISA Payment Method(LVISA) with Card Not Present Merchant=ACH_BRAINTRE\nCreate a new patron \r\n2. Add VISA Card DWI via V2 Update Patron API: Successful response is returned\nVerify Visa Card DWI is added in PV > Patron Management > Digital Wallet tab\nVerify the same in v_patron_card_on_file table",
        "expected": "1. Success\r\n2. Visa Card DWI is added and verified"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.0.60"
  },
  {
    "id": 30683954,
    "title": "Verify whether Disabled Credit Card DWI added via PV Patron Management/V2 Create Digital Wallet Item API are verified",
    "section_id": 1684670,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PV-26485",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 26,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C907772",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Create a new patron\nAdd disabled credit card via V2 Create Digital Wallet API\r\n2. Verify Visa Card DWI is added in PV > Patron Management > Digital Wallet tab",
        "expected": "1. Success\r\n2. Disabled Visa Card DWI should be added and but should not be \"Verified\""
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.0.60"
  },
  {
    "id": 30683955,
    "title": "Verify whether PV is resolving to a different payment method context based on the rules instead of using the one provided in the V2 Checkout API call",
    "section_id": 1684670,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PV-26487",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 27,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C907773",
    "custom_preconds": "Payment method x is mapped to fusebox",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Make a master card payment via MPV- Confirm V2 checkout API is sending payment method x\r\n2. Verify the payment processed by PV is not resolving to any different payment [eg: setup to use Briantree processing for card not present: 4623]",
        "expected": "1. Success\r\n2. Payment should resolve to Fusebox"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.0.60"
  },
  {
    "id": 30683956,
    "title": "Verify whether disabled ACH digital wallet item is not removed/unvaulted",
    "section_id": 1684670,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PV-26488",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 28,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C907774",
    "custom_preconds": "Payment method x is mapped to fusebox",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Create a bank account DWI\r\n2. Disable the bank account DWI",
        "expected": "1. Success\r\n2. The account should be unvaulted from Braintree\nDWI account_verified = 0\nencrypted/hashed verification token= null\ndate= null"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.0.60"
  },
  {
    "id": 30683957,
    "title": "Verify for Checkout via v2Apis does not fail when address uses apostrophe â€™ instead of apostrophe '",
    "section_id": 1684670,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26124",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 29,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1127942",
    "custom_preconds": "Make payment method with TNS pay cards for patron",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Lock seats\r\n2. Enter in billing address with apostrophe â€™ instead of apostrophe '\r\n3. Check out with TNS pay Cards\r\n4. Verify for Checkout via v2Apis\r\n5. Verify the same via PV, PVO and MPV",
        "expected": "1. seats should be locked and navigated to payment page.\r\n2. Expected should be entered.\r\n3. payment should be done with TNS pay cards.\r\n4. Checkout via v2Apis should not be failed\r\n5. Checkout via v2Apis should not be failed"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.1.00"
  },
  {
    "id": 30683958,
    "title": "Verify payee email is not included in the apple pay sale request",
    "section_id": 1684670,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PV-26873",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 30,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C1128091",
    "custom_preconds": "Set debug level for com.tickets.integration.adapters.braintree.AbstractBraintreeClient",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Run V2 Lock Seats API\r\n2. Run V2 Checkout API with Apple Pay wallet\r\n3. Verify payee email is not included in the apple sale request",
        "expected": "1. Success\r\n2. Success\r\n3. payee email should not be included in request"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.1.00"
  },
  {
    "id": 30683959,
    "title": "Verify whether error message displayed whlie uploadind the file with improper values",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-22395",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65808",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to Pv application\r\n2. Navigate to Tickets sales\r\n3. create an order w/ a receivable; checkout\r\n4. Navigate to utilities.Select Data Import.create a \r\nreceivable activity import job\r\n5. create a receivable activity import file with  \r\nimproper values\r\n6. Verify whether error message displayed \r\nwhlie uploadind the file with improper values",
        "expected": "1. Login successfully\r\n2. Navigated successfully\r\n3. Receivable order creaed successfully\r\n4. Receivable activity import job created \r\nsuccessfully\r\n5. File created successfully\r\n6. Upload the file successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.8.30"
  },
  {
    "id": 30683960,
    "title": "Verify whether the card number and truncated PAN in Payment and CardResponse is correct >> Case 1",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-27627",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C1677595",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to Pv application\r\n2. Make a purchase using (e.g.) VISA ****4448 where the card merchant is our DummyProvider or a non-Braintree card merchant\r\n3. Switch to VISA payment method to use the Braintree card merchant\r\n4. Add another VISA card in patronâ€™s digital wallet (e.g. **** 0004)\nCard should be verified & vaulted in Braintree\r\n5. Lock 2 seats & select the patron\r\n6. Select (e.g.) VISA****4448 from the previous card payment modal\r\n7. Switch the Payment Method to another method (e.g., Account Credit)\r\n8. Re-select Visa as the payment method\r\n9. Select the verified patron card (VISA ****0004)\r\n10. Add Payment & Checkout\r\n11. Verify the  last 4 digits shown in the Payment tab\r\n12. truncated PAN in  PAYMENT and CARD_RESPONSE tables\n\nselect ENCRYPTED_CARD_NMBR, TRUNCATED_PAN from PVQAF02.CARD_RESPONSE where PAYMENT_ID=24749118;\n\nselect ENCRYPTED_CARD_NMBR, TRUNCATED_PAN from PVQAF02.PAYMENT where PAYMENT_ID=24749118;",
        "expected": "1. Login successfully\r\n2. \r\n3. \r\n4. \r\n5. \r\n6. \r\n7. \r\n8. \r\n9. \r\n10. \r\n11. Success\r\n12. Success"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.3.00"
  },
  {
    "id": 30683961,
    "title": "Verify whether the card number and truncated PAN in Payment and CardResponse is correct >> Case 1",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-27641",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C1677610",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to Pv application\r\n2. Make a purchase using (e.g.) VISA ****4448 where the card merchant is our DummyProvider or a non-Braintree card merchant\r\n3. Switch to VISA payment method to use the Braintree card merchant\r\n4. Add another VISA card in patronâ€™s digital wallet (e.g. **** 0004)\nCard should be verified & vaulted in Braintree\r\n5. Lock 2 seats & select the patron\r\n6. Select (e.g.) VISA****4448 from the previous card payment modal\r\n7. Switch the Payment Method to another method (e.g., Account Credit)\r\n8. Re-select Visa as the payment method\r\n9. Select the verified patron card (VISA ****0004)\r\n10. Add Payment & Checkout\r\n11. Verify the  last 4 digits shown in the Payment tab\r\n12. truncated PAN in  PAYMENT and CARD_RESPONSE tables\n\nselect ENCRYPTED_CARD_NMBR, TRUNCATED_PAN from PVQAF02.CARD_RESPONSE where PAYMENT_ID=24749118;\n\nselect ENCRYPTED_CARD_NMBR, TRUNCATED_PAN from PVQAF02.PAYMENT where PAYMENT_ID=24749118;",
        "expected": "1. Login successfully\r\n2. \r\n3. \r\n4. \r\n5. \r\n6. \r\n7. \r\n8. \r\n9. \r\n10. \r\n11. Success\r\n12. Success"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.4.00"
  },
  {
    "id": 30683962,
    "title": "Verify whether the card number and truncated PAN in Payment and CardResponse is correct >> Case 2",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-27627",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C1677600",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to Pv application\r\n2. Make a purchase using (e.g.) VISA ****4448 where the card merchant is our DummyProvider or a non-Braintree card merchant\r\n3. Switch to VISA payment method to use the Braintree card merchant\r\n4. Lock 2 seats & select the patron\r\n5. Select (e.g.) VISA****4448 from the previous card payment modal\r\n6. Switch the Payment Method to another method (e.g., Account Credit)\r\n7. Re-select Visa as the payment method\r\n8. Enter a new Visa card (e.g. VISA ****0004) and select sync to wallet\r\n9. Add Payment & Checkout\r\n10. Verify the  last 4 digits shown in the Payment tab\r\n11. truncated PAN in  PAYMENT and CARD_RESPONSE tables\n\nselect ENCRYPTED_CARD_NMBR, TRUNCATED_PAN from PVQAF02.CARD_RESPONSE where PAYMENT_ID=24749118;\n\nselect ENCRYPTED_CARD_NMBR, TRUNCATED_PAN from PVQAF02.PAYMENT where PAYMENT_ID=24749118;\r\n12. Continue steps 1 to 11,  Skip step 6 & 7",
        "expected": "1. Login successfully\r\n2. \r\n3. \r\n4. \r\n5. \r\n6. \r\n7. \r\n8. \r\n9. \r\n10. Success\r\n11. Success\r\n12."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.3.00"
  },
  {
    "id": 30683963,
    "title": "Verify whether the card number and truncated PAN in Payment and CardResponse is correct >> Case 2",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-27641",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C1677612",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to Pv application\r\n2. Make a purchase using (e.g.) VISA ****4448 where the card merchant is our DummyProvider or a non-Braintree card merchant\r\n3. Switch to VISA payment method to use the Braintree card merchant\r\n4. Lock 2 seats & select the patron\r\n5. Select (e.g.) VISA****4448 from the previous card payment modal\r\n6. Switch the Payment Method to another method (e.g., Account Credit)\r\n7. Re-select Visa as the payment method\r\n8. Enter a new Visa card (e.g. VISA ****0004) and select sync to wallet\r\n9. Add Payment & Checkout\r\n10. Verify the  last 4 digits shown in the Payment tab\r\n11. truncated PAN in  PAYMENT and CARD_RESPONSE tables\n\nselect ENCRYPTED_CARD_NMBR, TRUNCATED_PAN from PVQAF02.CARD_RESPONSE where PAYMENT_ID=24749118;\n\nselect ENCRYPTED_CARD_NMBR, TRUNCATED_PAN from PVQAF02.PAYMENT where PAYMENT_ID=24749118;",
        "expected": "1. Login successfully\r\n2. \r\n3. \r\n4. \r\n5. \r\n6. \r\n7. \r\n8. \r\n9. \r\n10. Success\r\n11. Success"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.4.00"
  },
  {
    "id": 30683964,
    "title": "Verify whether the card number and truncated PAN in Payment and CardResponse is correct >> Case 3",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-27627",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C1677607",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to Pv application\r\n2. Make a purchase using (e.g.) VISA ****4448 where the card merchant is Fusebox/DummyProvider\r\n3. Create digital wallet item but use a different VISA (e.g., ****0004)\r\n4. Lock 2 seats & select the patron\r\n5. Select (e.g.) VISA****4448 from the previous card payment modal\r\n6. Switch the Payment Method to another method (e.g., Account Credit) \r\n7. Re-select Visa as the payment method\r\n8. Select the (e.g.) VISA ****0004 digital wallet item\r\n9. Add Payment & Checkout\r\n10. Verify the  last 4 digits shown in the Payment tab\r\n11. truncated PAN in  PAYMENT and CARD_RESPONSE tables\n\nselect ENCRYPTED_CARD_NMBR, TRUNCATED_PAN from PVQAF02.CARD_RESPONSE where PAYMENT_ID=24749118;\n\nselect ENCRYPTED_CARD_NMBR, TRUNCATED_PAN from PVQAF02.PAYMENT where PAYMENT_ID=24749118;\r\n12. Continue steps 1 to 11,  Skip step 6 & 7",
        "expected": "1. Login successfully\r\n2. \r\n3. \r\n4. \r\n5. \r\n6. \r\n7. \r\n8. \r\n9. \r\n10. Success\r\n11. Success\r\n12."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.3.00"
  },
  {
    "id": 30683965,
    "title": "Verify whether the card number and truncated PAN in Payment and CardResponse is correct >> Case 3",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-27641",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C1677616",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to Pv application\r\n2. Make a purchase using (e.g.) VISA ****4448 where the card merchant is Fusebox/DummyProvider\r\n3. Create digital wallet item but use a different VISA (e.g., ****0004)\r\n4. Lock 2 seats & select the patron\r\n5. Select (e.g.) VISA****4448 from the previous card payment modal\r\n6. Switch the Payment Method to another method (e.g., Account Credit) \r\n7. Re-select Visa as the payment method\r\n8. Select the (e.g.) VISA ****0004 digital wallet item\r\n9. Add Payment & Checkout\r\n10. Verify the  last 4 digits shown in the Payment tab\r\n11. truncated PAN in  PAYMENT and CARD_RESPONSE tables\n\nselect ENCRYPTED_CARD_NMBR, TRUNCATED_PAN from PVQAF02.CARD_RESPONSE where PAYMENT_ID=24749118;\n\nselect ENCRYPTED_CARD_NMBR, TRUNCATED_PAN from PVQAF02.PAYMENT where PAYMENT_ID=24749118;",
        "expected": "1. Login successfully\r\n2. \r\n3. \r\n4. \r\n5. \r\n6. \r\n7. \r\n8. \r\n9. \r\n10. Success\r\n11. Success"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.4.00"
  },
  {
    "id": 30683966,
    "title": "Verify whether error message displayed whlie validating the import file with cash receipt amount is greater than the amount due",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-22395",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65809",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to Pv application\r\n2. Navigate to Tickets sales\r\n3. create an order w/ a receivable; checkout\r\n4. Navigate to utilities.Select Data Import.create a \r\nreceivable activity import job\r\n5. create a receivable activity import file with cash \r\nreceipt amount is greater than the amount due\r\n6. Upload the file\r\n7. After successful uploaded, validate the file \r\nVerify whether error message displayed \r\nwhlie validating the import file with cash \r\nreceipt amount is greater than the amount due",
        "expected": "1. Login successfully\r\n2. Navigated successfully\r\n3. Receivable order creaed successfully\r\n4. Receivable activity import job created \r\nsuccessfully\r\n5. File created successfully\r\n6. Upload the file successfully\r\n7. Expected result:\r\n \r\nProper error message should be displayed"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.8.30"
  },
  {
    "id": 30683967,
    "title": "Verify whether user is able to run the the import run sucessfully with the same payment amount",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-22395",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 9,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65812",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to Pv application\r\n2. Navigate to Tickets sales\r\n3. create an order w/ a receivable; checkout\r\n4. Navigate to utilities.Select Data Import.create a \r\nreceivable activity import job\r\n5. create a receivable activity import file with the same payment amount\r\n6. upload & validate the file\r\n7. After successful validation, click on \"Continue on Error\" and \"Run\"\r\n8. Verify whether user is able to run the the import run sucessfully",
        "expected": "1. Login successfully\r\n2. Navigated successfully\r\n3. Receivable order creaed successfully\r\n4. Receivable activity import job created \r\nsuccessfully\r\n5. File created successfully\r\n6. Upload & validate the file successfully\r\n7. click on \"Continue on Error\" and \"Run\"\r\n successfully\r\n8. User should be  able to run the the import run sucessfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.8.30"
  },
  {
    "id": 30683968,
    "title": "Verify that last_used_date column is updated when user complete the scheduled payment  transcation",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-22224",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 10,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65814",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login into PV\r\n2. Create a new patron\r\n3. Navigate digital wallet and add new card\r\n4. complete an receivable    transcation\r\n5. Navigate ticket service page and click on \r\nscheduled payment\r\n6. Add card to this scheduled payment\r\n7. Vaerify DB",
        "expected": "1. User should be able to login successfully\r\n2. patron should be created successfully\r\n3. new card should be added\r\n4. transcation should be completed\r\n5. successfully navigated\r\n6. successfully added\r\n7. Expected result\r\nthe last_used_date column should be  updated \r\nwhen user complete the scheduled payment \r\nn  transcation"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.8.30"
  },
  {
    "id": 30683969,
    "title": "verify  LAST_USED_DATE of MasterCard is updated when  credit card is switched from visa to master card in scheduled paymet transaction",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-22224",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 11,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65816",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login into PV\r\n2. Create a new patron\r\n3. Navigate digital wallet and add new card\r\n4. complete the transcation and select scheduled \r\npayment and change the credit card\r\n5. Vaerify DB",
        "expected": "1. User should be able to login successfully\r\n2. patron should be created successfully\r\n3. new card should be added\r\n4. transcation should be completed\r\n5. last_used_date column should  be  updated"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.8.30"
  },
  {
    "id": 30683970,
    "title": "Verify LAST_USED_DATE is  not  updated When a credit card is removed from a scheduled payment",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-22224",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 12,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65818",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login into PV\r\n2. Create a new patron\r\n3. Navigate digital wallet and add new card\r\n4. complete the transcation and select \r\nscheduled payment and remove the credit \r\ncard\r\n5. Vaerify DB",
        "expected": "1. User should be able to login successfully\r\n2. patron should be created successfully\r\n3. new card should be added\r\n4. transcation should be completed\r\n5. last_used_date column should not be  updated"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.8.30"
  },
  {
    "id": 30683971,
    "title": "Verify that last_used_date column is updated when user click  on Accept payment button",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-22224",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 13,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65820",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login into PV\r\n2. Create a new patron\r\n3. Navigate digital wallet and add new card\r\n4. complete the transcation\r\n5. Vaerify DB",
        "expected": "1. User should be able to login successfully\r\n2. patron should be created successfully\r\n3. new card should be added\r\n4. transcation should be completed\r\n5. last_used_date column is updated when user \r\nClick on Accept payment button"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.8.30"
  },
  {
    "id": 30683972,
    "title": "Verify that last_used_date column is updated when user complete the PVO online renewal  Cash Receipt cart with scheduled payment",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-22224",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 14,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65823",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login into PV\r\n2. Create a new patron\r\n3. Navigate digital wallet and add new card\r\n4. complete an receivable  transcation\r\n5. Login into Mytixx and navigate To Do List\r\n6. complete the transcation\r\n7. Vaerify DB",
        "expected": "1. User should be able to login successfully\r\n2. patron should be created successfully\r\n3. new card should be added\r\n4. transcation should be completed\r\n5. successfully navigated\r\n6. transcation should be completed\r\n7. Expected result\r\nthe last_used_date column should be updated"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.8.30"
  },
  {
    "id": 30683973,
    "title": "Verify that last_used_date column is updated when user complete the PVO online renewal  Claim  cart with scheduled payment",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-22224",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 15,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65825",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login into PV\r\n2. Create a new patron\r\n3. Navigate digital wallet and add new card\r\n4. complete anreservation   transcation\r\n5. Login into Mytixx and navigate To Do List\r\n6. complete the transcation\r\n7. Vaerify DB",
        "expected": "1. User should be able to login successfully\r\n2. patron should be created successfully\r\n3. new card should be added\r\n4. transcation should be completed\r\n5. successfully navigated\r\n6. transcation should be completed\r\n7. Expected result\r\nthe last_used_date column should be updated"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.8.30"
  },
  {
    "id": 30683974,
    "title": "Verify that last_used_date column is updated when user complete the claim reservation transcation",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-22224",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 16,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65827",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login into PV\r\n2. Create a new patron\r\n3. Navigate digital wallet and add new card\r\n4. complete anreservation   transcation\r\n5. Navigate ticket service page and click on claim \r\nreservation\r\n6. complete the transcation\r\n7. Vaerify DB",
        "expected": "1. User should be able to login successfully\r\n2. patron should be created successfully\r\n3. new card should be added\r\n4. transcation should be completed\r\n5. successfully navigated\r\n6. transcation should be completed\r\n7. Expected result\r\nthe last_used_date column should be  updated \r\nwhen user complete the claim \r\nreservation  transcation"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.8.30"
  },
  {
    "id": 30683975,
    "title": "Verify that last_used_date column is updated when user complete the cash receipt transcation",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-22224",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 17,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65829",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login into PV\r\n2. Create a new patron\r\n3. Navigate digital wallet and add new card\r\n4. complete an receivable  transcation\r\n5. Navigate ticket service page and click on cash \r\nreceipt\r\n6. complete the transcation\r\n7. Vaerify DB",
        "expected": "1. User should be able to login successfully\r\n2. patron should be created successfully\r\n3. new card should be added\r\n4. transcation should be completed\r\n5. successfully navigated\r\n6. transcation should be completed\r\n7. Expected result\r\nthe last_used_date column should be  updated \r\nwhen user complete the cash \r\nreceipt  transcation"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.8.30"
  },
  {
    "id": 30683976,
    "title": "Verify that last_used_date column is updated when user complete the reverse payment transcation",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-22224",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 18,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65831",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login into PV\r\n2. Create a new patron\r\n3. Navigate digital wallet and add new card\r\n4. complete an receivable  transcation\r\n5. Navigate ticket service page and click on \r\npayment tab\r\n6. click on reverse payment and complete the \r\ntranscation\r\n7. Vaerify DB",
        "expected": "1. User should be able to login successfully\r\n2. patron should be created successfully\r\n3. new card should be added\r\n4. transcation should be completed\r\n5. successfully navigated\r\n6. reverse payment transcation should be \r\ncompleted\r\n7. Expected result\r\nthe last_used_date column should be  updated \r\nwhen user complete the reverse payment \r\ntranscation"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.8.30"
  },
  {
    "id": 30683977,
    "title": "Verify that last_used_date column is updated when user complete the transaction using card",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-22224",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 19,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65833",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login into PV\r\n2. Create a new patron\r\n3. Navigate digital wallet and add new card\r\n4. complete the transcation\r\n5. Vaerify DB",
        "expected": "1. User should be able to login successfully\r\n2. patron should be created successfully\r\n3. new card should be added\r\n4. transcation should be completed\r\n5. last_used_date column is updated when user \r\ncomplete the transaction using card"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.8.30"
  },
  {
    "id": 30683978,
    "title": "Verify that last_used_date column is updated when user make changes in digital wallet in patron management",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-22224",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 20,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65835",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login into PV\r\n2. Create a new patron\r\n3. Navigate digital wallet and add new card\r\n4. Click on edit and make some changes\r\n5. Vaerify DB",
        "expected": "1. User should be able to login successfully\r\n2. patron should be created successfully\r\n3. new card should be added\r\n4. card should be updated\r\n5. The last_used_date column is updated when \r\nuser make changes in digital wallet in patron \r\nmanagement"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.8.30"
  },
  {
    "id": 30683979,
    "title": "Verify that new nullable column ?LAST USED DATE?is available in PATRON CARD ON FILE table",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-22224",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 21,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65837",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login into PV\r\n2. Create a new patron\r\n3. Navigate digital wallet and add new card\r\n4. Complete the transcation using cards\r\n5. Vaerify DB",
        "expected": "1. User should be able to login successfully\r\n2. patron should be created successfully\r\n3. new card should be added\r\n4. Transcation should be completed\r\n5. The new column LAST_USED_DATE in table \r\nPATRON_CARD_ON_FILE table should be \r\npresent"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.8.30"
  },
  {
    "id": 30683980,
    "title": "Verify that when a user pays off a receivable that has been rescheduled, the cart shows only the receivables and installments with a balance greater than 0",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-22191",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 22,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C65840",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. In PV App, navigate to Ticketing > Ticket Sales and lock tickets for an event.\r\n2. In the payment cart, create a receivable with multiple installments.\r\n3. Complete the Order.\r\n4. Navigate to the completed order in Ticket Services and click on the ?Receivables? tab.\r\n5. Click the ?Reschedule? button.\r\n6. Select new payment plan with installments.\r\n7. Once the receivable has been rescheduled, navigate to the ?Account Balance? tab in the Patron Account.\r\n8. Click ?Make Payment? button.\r\n9. The order is brought into the cart for payment.",
        "expected": "1. \r\n2. \r\n3. \r\n4. \r\n5. \r\n6. \r\n7. \r\n8. \r\n9. Expected Result: cart shows only the receivables and installments with a balance greater than 0"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.8.30"
  },
  {
    "id": 30683981,
    "title": "Verify the user is able to create EFT digital wallet using the special character double quotes and greater than sign",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-22098",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 23,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65842",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link\r\n2. Login using valid credentials\r\n3. Navigate to Patron Management\r\n4. Select an existing patron\r\n5. Navigate to Digital Wallet tab\r\n6. Select EFT option from dropdown\r\n7. Click on NEW\r\n8. Enter valid details which will end with \"> except routing number and bank account number\r\n9. Click on SAVE and verify the behavior",
        "expected": "1. Link should be launched successfully\r\n2. User should be able to login successfully\r\n3. User should be navigated to patron management portal successfully\r\n4. user should be able to select an existing patron successfully\r\n5. User should be able to navigate to digital wallet tab successfully\r\n6. user should be able to select EFT option from the dropdown successfully\r\n7. New page should be displayed successfully\r\n8. user should be able to enter the details successfully\r\n9. User should be able to save the changes successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "1.4.4"
  },
  {
    "id": 30683982,
    "title": "Verify the user is able to create EFT digital wallet using the special character double quotes",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-22098",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 24,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65844",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link\r\n2. Login using valid credentials\r\n3. Navigate to Patron Management\r\n4. Select an existing patron\r\n5. Navigate to Digital Wallet tab\r\n6. Select EFT option from dropdown\r\n7. Click on NEW\r\n8. Enter valid details which will end with \" except routing number and \r\nbank account number\r\n9. Click on SAVE and verify the behavior",
        "expected": "1. Link should be launched successfully\r\n2. User should be able to login successfully\r\n3. User should be navigated to patron management portal successfully\r\n4. user should be able to select an existing patron successfully\r\n5. User should be able to navigate to digital wallet tab successfully\r\n6. user should be able to select EFT option from the dropdown successfully\r\n7. New page should be displayed successfully\r\n8. user should be able to enter the details successfully\r\n9. User should be able to save the changes successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "1.4.4"
  },
  {
    "id": 30683983,
    "title": "Verify the user is able to create credit card digital wallet using the special character double quotes and greater than sign",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-22098",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 25,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65847",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link\r\n2. Login using valid credentials\r\n3. Navigate to Patron Management\r\n4. Select an existing patron\r\n5. Navigate to Digital Wallet tab\r\n6. Select credit card option from dropdown\r\n7. Click on NEW\r\n8. Enter valid details which will end with \"> except routing number and bank account number\r\n9. Click on SAVE and verify the behavior",
        "expected": "1. Link should be launched successfully\r\n2. User should be able to login successfully\r\n3. User should be navigated to patron management portal successfully\r\n4. user should be able to select an existing patron successfully\r\n5. User should be able to navigate to digital wallet tab successfully\r\n6. user should be able to select EFT option from the dropdown successfully\r\n7. New page should be displayed successfully\r\n8. user should be able to enter the details successfully\r\n9. User should be able to save the changes successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "1.4.4"
  },
  {
    "id": 30683984,
    "title": "Verify the user is able to create credit card digital wallet using the special character double quotes",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-22098",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 26,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65849",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link\r\n2. Login using valid credentials\r\n3. Navigate to Patron Management\r\n4. Select an existing patron\r\n5. Navigate to Digital Wallet tab\r\n6. Select credit card option from dropdown\r\n7. Click on NEW\r\n8. Enter valid details which will end with \" except routing number and \r\nbank account number\r\n9. Click on SAVE and verify the behavior",
        "expected": "1. Link should be launched successfully\r\n2. User should be able to login successfully\r\n3. User should be navigated to patron management portal successfully\r\n4. user should be able to select an existing patron successfully\r\n5. User should be able to navigate to digital wallet tab successfully\r\n6. user should be able to select EFT option from the dropdown successfully\r\n7. New page should be displayed successfully\r\n8. user should be able to enter the details successfully\r\n9. User should be able to save the changes successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "1.4.4"
  },
  {
    "id": 30683985,
    "title": "Verify that  when PV receives a 20 byte AMEX cryptogram from Apple Pay, all 20 bytes are put in block A, and block B is filled with 20 spaces",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-22109",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 27,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65851",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite:\r\nEnable Apple Pay Card Merchant and choose location\r\n2. Complete a transaction using Amex card\r\n3. Verify the logs in jboss\r\n4. Check whether when PV receives a 20 byte \r\nAMEX cryptogram from Apple Pay, all 20 bytes \r\nshould be put in block A, and block B should be \r\nfilled with 20 spaces",
        "expected": "1. All prerequisites are met\r\n2. User is able to complete the transaction\r\n3. Logs are retured successfully.\r\n4. The logs are successful as expected."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.8.30"
  },
  {
    "id": 30683986,
    "title": "verify display of card information in data feeds",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-21596",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 28,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65854",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Complete a card payment transaction\r\n2. Connect to Remote server: 10.32.32.30Select \r\nthe path: \r\nC:\\Informatica\\9.1.0\\clients\\PowerCenterClient\\client\\bin under run\r\nClick ok\r\n3. Select pmdesign\r\nClick ok\r\n4. Select workflow manager (W)\r\nRight click - Connect\r\n5. Enter username and password: \r\nssubramaniyam/Password1\r\nClick on Connect\r\n6. Select PV_CustomerConnect/Workflows and Start workflow from task\r\n7. For WINSCP:\r\n\r\nConnect to Remote server: 10.33.32.25\r\n\r\nFile Protocol: SFTP (default)\r\nHost Name: 216.32.146.23\r\nUsername : v_qa\r\nPassword: tDcw1dg3ts\r\nPath to verify the output files: /home/v_qa\r\n8. To verify the output files navigate and select the folder v_qa\r\n9. Need to verify the output file corresponding to the transaction that we are doing in PV",
        "expected": "1. Preerquisite should be met\r\n2. user should connect successsfully\r\n3. pmdesign should get selected\r\n4. login page should display\r\n5. user should connect successfully\r\n6. Once started, workflow monitor should display and each output file will run and succeed\r\n7. user should login successfully and path should selected\r\n8. folder should get selected\r\n9. string should  include the last 4 digits of the credit card number, with the preceding digits each replaced by an asterisk"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.8.20"
  },
  {
    "id": 30683987,
    "title": "Verify the display of card number in reports",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-21596",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 29,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65855",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Complete a card payment transaction\r\n2. Launch PV and login as valid user\r\n3. Navigate to reports and select a report which \r\nshows payment details\r\n4. Give input parameters for the transaction \r\nmentioned in prerequisite\r\n5. Verify display of card number in report",
        "expected": "1. Preerquisite should be met\r\n2. user should login successsfully\r\n3. report input parameter page should display\r\n4. report should launch successfully\r\n5. string should  include the last 4 digits of the \r\ncredit card number, with the preceding digits \r\neach replaced by an asterisk"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.8.20"
  },
  {
    "id": 30683988,
    "title": "Verify the display of card number in receipt for payment details",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-21596",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 30,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65857",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Complete a card payment transaction\r\n2. Launch PV and login as valid user\r\n3. Navigate to ticket services and select order \r\nmentioned in prerequisite\r\n4. Navigate to payment page and verify display of \r\ncard number\r\n5. click actions button and select print receipt from \r\nmenu\r\n6. verify display of card number in receipt",
        "expected": "1. Preerquisite should be met\r\n2. user should login successsfully\r\n3. order should get selected\r\n4. string should  include the last 4 digits of the credit \r\ncard number, with the preceding digits each \r\nreplaced by an asterisk\r\n5. reciept should get printed\r\n6. string should  include the last 4 digits of the credit card number, with the preceding digits each replaced by an asterisk"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.8.20"
  },
  {
    "id": 30683989,
    "title": "Verify truncated card number field included in V_payment View",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-21596",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 31,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65859",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Complete a card payment transaction\r\n2. Launch DB tool\r\n3. Navigate to DB connection\r\n4. verify that truncated card number field is included \r\nin V_payment view by running query",
        "expected": "1. Transaction should get completed with card\r\n2. Tool should launch successfully\r\n3. succesful connection should set up\r\n4. Column should be available in V_payment view"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.8.20"
  },
  {
    "id": 30683990,
    "title": "Verify truncated card number field included in payment table",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-21596",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 32,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65861",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Complete a card payment transaction\r\n2. Launch DB tool\r\n3. Navigate to DB connection\r\n4. verify that truncated card number field is included in payment table by running query\r\nSELECT * FROM PVQAF02.PAYMENT WHERE CONDITION;",
        "expected": "1. Transaction should get completed with card\r\n2. Tool should launch successfully\r\n3. succesful connection should set up\r\n4. Column should be available in table"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.8.20"
  },
  {
    "id": 30683991,
    "title": "Verify that the user is able to do full payment reversal",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-21644",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 33,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65863",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. launch the pv url\r\n2. Login as a box office user using the following credentials:\nUsername: \nPassword: \r\n3. Select Ticket Sales   using the dropdown\r\n4. Search for any event and select the event from Event portlet\r\n5. Select Single Sales as the Sales Type\r\n6. Input the number of Seats\r\nClick Best Available\r\n7. Search and select any patron from patron portlet\r\n8. 1.Select any delivery method and Apply\r\n2.Select any payment method\r\n3.Click Accept Payment button\r\n9. Navigate to Order detials-Payments tab\r\nSelect Reverse Payment\r\nSelect the order\r\nComplete the reversal\r\n10. Select Logout using the dropdown",
        "expected": "1. Site should be launched\r\n2. User should be logged in\r\n3. Ticket Sales  page should be displayed to the user\r\n4. User should be able to select an event for the transaction\r\n5. User should be able to select Single  Sales as the sales type\r\n6. User should be nvigated to the cart with seats selected\r\n7. User should be able to select any patron for the transaction\r\n8. User should be able to complete the transaction\r\n9. The payment should be reversed\r\n10. 1. User should be logged out\n2. User should be navigated to the Login page"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.8.00"
  },
  {
    "id": 30683992,
    "title": "Verify that Cash drawer opened successfully message displayed when user opens cash drawer.",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-21510",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 34,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65864",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login into PV\r\n2. Complete a sales transaction along with a \r\npayment method enabled for cash drawer.\r\n3. Verify the messaging after cash drawer is \r\nopened.",
        "expected": "1. user should be able to login successfully\r\n2. user should be successfully completing\r\n3. message should be displayed"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.8.00"
  },
  {
    "id": 30683993,
    "title": "Verify that Overriding option for Open Cash Drawer is present in supplier context for the payment method",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-21489",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 35,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65866",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login into PV\r\n2. Navigate system setup->Payment methods\r\n3. Go to supplier context\r\n4. Verify that Overriding option for Open Cash \r\nDrawer is present in supplier context for the \r\npayment method",
        "expected": "1. user should be able to login successfully\r\n2. User should be navigating successfully\r\n3. successfully navigating\r\n4. Overriding option for Open Cash Drawer is \r\npresent in supplier context for the payment \r\nmethod"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.8.00"
  },
  {
    "id": 30683994,
    "title": "Verify that the payment method is updating to reflect the new card type if a payment plan is rescheduled to a new different credit card type",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-21557",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 36,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65868",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-requisites:\r\n\r\n1. Payment plan must have Scheduled Payments = Required\r\n2. Login to PV using valid credentials.\r\n3. 1. Create an order and put the order on a scheduled payment type \r\nreceivable with more than 1 installment. \r\n2. Assign a credit card to the payments and note the card type.\r\n4. Reschedule the receivable and assign a new credit card that is a \r\ndifferent type (VISA, AMEX, MSTR etc) to the installments.\r\n5. After rescheduling view the installments and verify that the \r\npayment method displayed matched the card type.\r\n\r\n\r\nNote : Also test for 2nd reschedule.",
        "expected": "1. Pre-requisite should be met.\r\n2. Login should be successful.\r\n3. Paymnet type should be displayed correctly.\r\n4. Reschedule and assign a different credit card.\r\n5. The payment method should be updated to the \r\ncorrect credit card type that is assigned to \r\nthe installments."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.8.00"
  },
  {
    "id": 30683995,
    "title": "Verify User is not getting technical difficulties error message while renewing the receivable order in MyTixx.",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-20919",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 37,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65871",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the PV link: \r\nhttp://irutapppvn54.back.tickets.com:18080/\r\n2. Login using credentials: Pvopvuser1 / \r\nPvopvuser123\r\n3. Navigate to Ticket Sales and select the event and \r\npatron\r\n4. Select the number of seats and click on LOCK \r\nSEATS\r\n5. select the delivery method and navigate to \r\nReceivable tab\r\n6. 1.select the payment method and click on BUILD \r\nbutton\r\n2.then click on apply and checkout from cart\r\n7. 1.Launch the MyTixx link:\r\nhttp://pvoqa1.tickets.com/buy/MyTicketsServlet?orgid=22829&agency=NGBS_MYTIXX_MLB\r\n2.Login using: 124434/password\r\n8. Navigate to To Do List -> Pending Renewals tab\r\n9. Select the order and click on Renew button\r\n10. Select the payment method and click on submit payment button\r\n11. Verify User is not getting error message.",
        "expected": "1. User should able to launch the applicatin\r\n2. The user should be able to log in successfully\r\n3. Event and patron shoudl be selcted in ticket sales \r\npage\r\n4. User able to lock the seats\r\nUser will navigate to shopping cart\r\n5. User able to select the delivery method\r\n6. Payment method should be selected and usr bale \r\nto click on build button\r\nTransactin should be successful\r\n7. User should able to launch and login to the \r\napplication successfully\r\n8. User should navigate to Pending Renewals tab \r\npage\r\n9. User should able to select the order\r\n10. Payment should be selected\r\n11. User should not get any error message"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.7.00"
  },
  {
    "id": 30683996,
    "title": "Verify that the user is able to complete sale using the payment methods when Payment Type is non editable",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-20505",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 38,
    "custom_is_automated": false,
    "custom_pv_category": 24,
    "custom_refs": "C65873",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PVNG application\r\nLogin to the application\r\n2. Navigate to Payment Method \r\nAdministration\r\nClick on New\r\n3. Enter all mandatory fields \r\nand select a Payment True \r\nType\r\nClick on Apply Changes\r\n4. Verify that the user is \r\nable to complete sale \r\nusing the payment \r\nmethod when Payment \r\nType is non editable\r\n5. Lock seats for an event \r\nMake payment using the above created payment method",
        "expected": "1. PVNG application launched successfully.\r\n2. New payment Method creation page should be \r\ndisplayed\r\n3. Payment method should be created successfully\r\n4. The user is able to complete sale using the \r\npayment method when Payment Type is \r\nnon editable\r\n5. The user should be able to make payment \r\nsuccessfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.6.00"
  },
  {
    "id": 30683997,
    "title": "Verify that the Payment Type is not editable for an existing payment method",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-20505",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 39,
    "custom_is_automated": false,
    "custom_pv_category": 24,
    "custom_refs": "C65875",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PVNG application\r\nLogin to the application\r\n2. Navigate to Payment \r\nMethod Administration\r\nSelect an Existing \r\nPayment Method\r\n3. Verify that the Payment \r\nType is not editable for \r\nan existing payment \r\nmethod",
        "expected": "1. PVNG application launched successfully.\r\n2. The selected payment Method details page \r\nshould be displayed\r\n3. The Payment Type should not be editable \r\nfor an existing payment method"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.6.00"
  },
  {
    "id": 30683998,
    "title": "Verify that the Payment Type is not editable once the new payment method is created",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-20505",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 40,
    "custom_is_automated": false,
    "custom_pv_category": 24,
    "custom_refs": "C65877",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PVNG application\r\nLogin to the application\r\n2. Navigate to Payment Method \r\nAdministration\r\nClick on New\r\n3. Enter all mandatory fields \r\nand select a Payment True \r\nType\r\nClick on Apply Changes\r\n4. Verify that the Payment \r\nType is not editable once \r\nthe new payment method \r\nis created",
        "expected": "1. PVNG application launched successfully.\r\n2. New payment Method creation page should be \r\ndisplayed\r\n3. Payment method should be created successfully\r\n4. The Payment Type should not be editable \r\nonce the new payment method is created"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.6.00"
  },
  {
    "id": 30683999,
    "title": "Verify that Payer ID is updated in  gateway_payer_id column  in Braintree Sandbox,Braintree logs and card_response table in DB  for refund transaction completed using paypal payment method.",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-20304",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 41,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65879",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PVO single sales link for an event\r\n2. Select Payment Method as Paypal and try to \r\ncomplete a sale transaction.\r\n3. Navigate to DB and verify the column \r\ngateway_payer_id in card_response table.\r\n4. Now,return/refund the ticket via Paypal\r\n5. Verify the gateway_payment_id in Braintree \r\nSandbox,Braintree logs and  card_response \r\ntable in DB",
        "expected": "1. \r\n2. \r\n3. \r\n4. \r\n5. Payer ID should be displayed in Braintree \r\nSandbox,Braintree logs and card_response table \r\nin DB"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.6.00"
  },
  {
    "id": 30684000,
    "title": "Verify that Payer ID is updated in  gateway_payer_id column in Braintree Sandbox,Braintree logs and card_response table in DB for sale transaction completed using paypal payment method.",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-20304",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 42,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65880",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PVO single sales link for an event\r\n2. Select Payment Method as Paypal and try to \r\ncomplete a sale transaction.\r\n3. Verify the gateway_payment_id in Braintree \r\nSandbox,Braintree logs and card_response table \r\nin DB",
        "expected": "1. \r\n2. \r\n3. Payer ID should be displayed in Braintree \r\nSandbox,Braintree logs and card_response table \r\nin DB"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.6.00"
  },
  {
    "id": 30684001,
    "title": "Verify for a user with Read access (No Cash Receipt or Consolidate or Create access) Cancel button in the modal frame is enabled.",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19537",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 43,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65882",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Have a scheduled payment plan run with installments that didn't go thorugh leaving them in a resolution required \r\nstatus\r\nExisting order with an installment having a resolution required should be avialable.\r\n\r\n\r\nTake away all access to payment types, payment plans, ticket sales access and give the agency read only \r\naccess to the open item receviable type in org admin.\r\n2. 1. Launch the PV application.\r\n2. Login using valid username and password.\r\n3. Navigate to ticket services and serch for the order \r\ncreated in pre-requisite\r\n4. Verify for a user with Read access (No Cash \r\nReceipt or Consolidate or Create access) Cancel \r\nbutton in the modal frame is enabled.",
        "expected": "1. \r\n2. The login should be successful and the Home page of the \r\napplication should be displayed.\r\n3. User should able to Perform the actions\r\n4. User should able to Perform the actions"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.5.00"
  },
  {
    "id": 30684002,
    "title": "Verify for a user with Read access (No Cash Receipt or Consolidate or Create access) all buttons and triggers at the installment level and modal frame are disabled.",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19537",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 44,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65883",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Have a scheduled payment plan run with installments that didn't go thorugh leaving them in a resolution required \r\nstatus\r\nExisting order with an installment having a resolution required should be avialable.\r\n\r\n\r\nTake away all access to payment types, payment plans, ticket sales access and give the agency read only \r\naccess to the open item receviable type in org admin.\r\n2. 1. Launch the PV application.\r\n2. Login using valid username and password.\r\n3. Navigate to ticket services and serch for the order \r\ncreated in pre-requisite\r\n4. Verify for a user with Read access (No Cash \r\nReceipt or Consolidate or Create access) all \r\nbuttons and triggers at the installment level and \r\nmodal frame are disabled.",
        "expected": "1. \r\n2. The login should be successful and the Home page of the \r\napplication should be displayed.\r\n3. User should able to Perform the actions\r\n4. User should able to Perform the actions"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.5.00"
  },
  {
    "id": 30684003,
    "title": "Verify for a user with create or Consolidate access, but not Cash Receipt no changes are reflected in Digital Wallet tab after schedule, cancel or edit scheduled installments.",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19537",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 45,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65884",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Have a scheduled payment plan run with installments that didn't go thorugh leaving them in a resolution required \r\nstatus\r\nExisting order with an installment having a resolution required should be avialable.\r\n2. 1. Launch the PV application.\r\n2. Login using valid username and password.\r\n3. Navigate to ticket services and serch for the order \r\ncreated in pre-requisite\r\n4. Add or edit the schedule payements page.\r\n5. Verify if the user able process a payment via the \r\nRetry button in the payments tab\r\n6. Verify for a user with create or Consolidate \r\naccess, but not Cash Receipt no changes are \r\nreflected in Digital Wallet tab after schedule, \r\ncancel or edit scheduled installments.",
        "expected": "1. \r\n2. The login should be successful and the Home page of the \r\napplication should be displayed.\r\n3. User should able to Perform the actions\r\n4. User should able to Perform the actions\r\n5. User should able to Perform the actions\r\n6. User should able to Perform the actions"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.5.00"
  },
  {
    "id": 30684004,
    "title": "Verify for a user with create or Consolidate access, but not Cash Receipt the Retry button should be disabled in the payments tab.",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19537",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 46,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65886",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Have a scheduled payment plan run with installments that didn't go thorugh leaving them in a resolution required \r\nstatus\r\nExisting order with an installment having a resolution required should be avialable.\r\n2. 1. Launch the PV application.\r\n2. Login using valid username and password.\r\n3. Navigate to ticket services and serch for the order \r\ncreated in pre-requisite\r\n4. Verify for a user with create or Consolidate \r\naccess, but not Cash Receipt the Retry button \r\nshould be disabled in the payments tab",
        "expected": "1. \r\n2. The login should be successful and the Home page of the \r\napplication should be displayed.\r\n3. User should able to Perform the actions\r\n4. User should able to Perform the actions"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.5.00"
  },
  {
    "id": 30684005,
    "title": "Verify if the user is having create or Consolidate access, but not Cash Receipt then they should be able to cancel installments",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19537",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 47,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65887",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Have a scheduled payment plan run with installments that didn't go thorugh leaving them in a resolution required \r\nstatus\r\nExisting order with an installment having a resolution required should be avialable.\r\n2. 1. Launch the PV application.\r\n2. Login using valid username and password.\r\n3. Navigate to ticket services and serch for the order \r\ncreated in pre-requisite\r\n4. Cancel the Schedule Payments via ticket services \r\nfor the order created above",
        "expected": "1. \r\n2. The login should be successful and the Home page of the \r\napplication should be displayed.\r\n3. User should able to Perform the actions\r\n4. User should able to Perform the actions"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.5.00"
  },
  {
    "id": 30684006,
    "title": "Verify if the user is having create or Consolidate access, but not Cash Receipt then they should be able to edit scheduled installments",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19537",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 48,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65889",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Have a scheduled payment plan run with installments that didn't go thorugh leaving them in a resolution required \r\nstatus\r\nExisting order with an installment having a resolution required should be avialable.\r\n2. 1. Launch the PV application.\r\n2. Login using valid username and password.\r\n3. Navigate to ticket services and serch for the order \r\ncreated in pre-requisite\r\n4. Edit the Schedule Payments via ticket services \r\nfor the order created above",
        "expected": "1. \r\n2. The login should be successful and the Home page of the \r\napplication should be displayed.\r\n3. User should able to Perform the actions\r\n4. User should able to Perform the actions"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.5.00"
  },
  {
    "id": 30684007,
    "title": "Verify if the user is having create or Consolidate access, but not Cash Receipt then they should be able to schedule installments",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19537",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 49,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65890",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Have a scheduled payment plan run with installments that didn't go thorugh leaving them in a resolution required \r\nstatus\r\nExisting order with an installment having a resolution required should be avialable.\r\n2. 1. Launch the PV application.\r\n2. Login using valid username and password.\r\n3. Navigate to ticket services and serch for the order \r\ncreated in pre-requisite\r\n4. Schedule the Payments via ticket services for the \r\norder created above",
        "expected": "1. \r\n2. The login should be successful and the Home page of the \r\napplication should be displayed.\r\n3. User should able to Perform the actions\r\n4. User should able to Perform the actions"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.5.00"
  },
  {
    "id": 30684008,
    "title": "Verify for a user with cash receipt access no changes are reflected in Digital Wallet tab after schedule, cancel or edit scheduled installments.",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19537",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 50,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65892",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Have a scheduled payment plan run with installments that didn't go thorugh leaving them in a resolution required \r\nstatus\r\nExisting order with an installment having a resolution required should be avialable.\r\n2. 1. Launch the PV application.\r\n2. Login using valid username and password.\r\n3. Navigate to ticket services and serch for the order \r\ncreated in pre-requisite\r\n4. Verify if the user is having cash receipt \r\naccess then they should be able process a \r\npayment via the Retry button in the payments \r\ntab\r\n5. Add or edit the schedule payements page.\r\n6. Verify for a user with cash receipt access no \r\nchanges are reflected in Digital Wallet tab \r\nafter schedule, cancel or edit scheduled \r\ninstallments.",
        "expected": "1. \r\n2. The login should be successful and the Home page of the \r\napplication should be displayed.\r\n3. User should able to Perform the actions\r\n4. User should able to Perform the actions\r\n5. User should able to Perform the actions\r\n6. User should able to Perform the actions"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.5.00"
  },
  {
    "id": 30684009,
    "title": "Verify if the user is having cash receipt access then they should be able process a payment via the Retry button in the payments tab",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19537",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 51,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65893",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Have a scheduled payment plan run with installments that didn't go thorugh leaving them in a resolution required \r\nstatus\r\nExisting order with an installment having a resolution required should be avialable.\r\n2. 1. Launch the PV application.\r\n2. Login using valid username and password.\r\n3. Navigate to ticket services and serch for the order \r\ncreated in pre-requisite\r\n4. Verify if the user is having cash receipt \r\naccess then they should be able process a \r\npayment via the Retry button in the payments \r\ntab",
        "expected": "1. \r\n2. The login should be successful and the Home page of the \r\napplication should be displayed.\r\n3. User should able to Perform the actions\r\n4. User should able to Perform the actions"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.5.00"
  },
  {
    "id": 30684010,
    "title": "Verify if the user is having cash receipt access then they should be able to edit scheduled installments",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19537",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 52,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65894",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Have a scheduled payment plan run with installments that didn't go thorugh leaving them in a resolution required \r\nstatus\r\nExisting order with an installment having a resolution required should be avialable.\r\n2. 1. Launch the PV application.\r\n2. Login using valid username and password.\r\n3. Navigate to ticket services and serch for the order \r\ncreated in pre-requisite\r\n4. Edit the Schedule Payments via ticket services \r\nfor the order created above",
        "expected": "1. \r\n2. The login should be successful and the Home page of the \r\napplication should be displayed.\r\n3. User should able to Perform the actions\r\n4. User should able to Perform the actions"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.5.00"
  },
  {
    "id": 30684011,
    "title": "Verify if the user is having cash receipt access then they should be able to cancel installments",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19537",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 53,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65896",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Have a scheduled payment plan run with installments that didn't go thorugh leaving them in a resolution required \r\nstatus\r\nExisting order with an installment having a resolution required should be avialable.\r\n2. 1. Launch the PV application.\r\n2. Login using valid username and password.\r\n3. Navigate to ticket services and serch for the order \r\ncreated in pre-requisite\r\n4. Cancel the Schedule Payments via ticket services \r\nfor the order created above",
        "expected": "1. \r\n2. The login should be successful and the Home page of the \r\napplication should be displayed.\r\n3. User should able to Perform the actions\r\n4. User should able to Perform the actions"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.5.00"
  },
  {
    "id": 30684012,
    "title": "Verify if the user is having cash receipt access then they should be able to schedule installments.",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19537",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 54,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65897",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Have a scheduled payment plan run with installments that didn't go thorugh leaving them in a resolution required \r\nstatus\r\nExisting order with an installment having a resolution required should be avialable.\r\n2. Navigate to ticket services and serch for the order \r\ncreated in pre-requisite\r\n3. Schedule the Payments via ticket services for the \r\norder created above\r\n4. 1. Launch the PV application.\r\n2. Login using valid username and password.",
        "expected": "1. \r\n2. User should able to Perform the actions\r\n3. User should able to Perform the actions\r\n4. The login should be successful and the Home page of the \r\napplication should be displayed."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.5.00"
  },
  {
    "id": 30684013,
    "title": "Verify whether PV sales with onestep cards generates card response records  correctly  if a PV error happens after capture",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19663",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 55,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65899",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Event should be created\r\n2. set application property \".simulate.checkout.error.on.phase\" value as 7\r\n2. Launch PV and login using valid credentials\r\n3. Navigate to ticket sales and select event and patron\r\n4. Enter number of tickets and lock seats\r\n5. Verify in logs and DB\r\n\r\nSelect * from card_response order by last_updated_date desc;\r\n6. Repeat the above steps with gift card\r\n7. Select a delivery method and apply\r\n8. Select a Paypal payment method and accept payment\r\n9. Checkout",
        "expected": "1. \r\n2. User should be able to login to PV successfully\r\n3. Event and patron should be selected in Ticket sales\r\n4. Lock seats should be successfull\r\n5. card_response record1 with card_action_code: AUTHCAP, card_response_status_code: UC (Unconsumed Cap), \r\ncard_result_code: OK, card_tran_status_code: OK, transaction_id: null, payment_id: null.\r\n\r\ncard_response record2 with card_action_code: REFUND, card_response_status_code: null, card_result_code: OK, \r\ncard_tran_status_code: OK, transaction_id: null, payment_id: null.\r\n6. \r\n7. \r\n8. \r\n9. Error should be thrown"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.5.00"
  },
  {
    "id": 30684014,
    "title": "Verify whether PVO single sales with onestep cards generates card response records  correctly  if a PV error happens after capture",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19663",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 56,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65901",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Event should be created\r\n2. set application property \".simulate.checkout.error.on.phase\" value as 7\r\n2. Launch PVO single sales URL\r\n3. Enter the number of tickets and continue\r\n4. Verify in logs and DB\r\n\r\nSelect * from card_response order by last_updated_date desc;\r\n5. Repeat the above steps with gift card\r\n6. Select PayPal as payment method and buy tickets",
        "expected": "1. \r\n2. PVO single sale page should be launched\r\n3. \r\n4. card_response record1 with card_action_code: AUTHCAP, card_response_status_code: UC (Unconsumed Cap), \r\ncard_result_code: OK, card_tran_status_code: OK, transaction_id: null, payment_id: null.\r\n\r\ncard_response record2 with card_action_code: REFUND, card_response_status_code: null, card_result_code: OK, \r\ncard_tran_status_code: OK, transaction_id: null, payment_id: null.\r\n5. \r\n6. Error should be thrown"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.5.00"
  },
  {
    "id": 30684015,
    "title": "Verify whether PV Checkout API with onestep cardsgenerates card response records  correctly  if a PV error happens after capture",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19663",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 57,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65902",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Event should be created\r\n2. set application property \".simulate.checkout.error.on.phase\" value as 7\r\n2. Launch rest client and run lock seats API for the event\r\n3. Run Checkout API with PayPal payment method\r\n4. Verify in logs and DB\r\n\r\nSelect * from card_response order by last_updated_date desc;\r\n5. Repeat the above steps with gift card",
        "expected": "1. \r\n2. lock seats api should run successfully\r\n3. Checkout error should be thrown\r\n4. card_response record1 with card_action_code: AUTHCAP, card_response_status_code: UC (Unconsumed Cap), \r\ncard_result_code: OK, card_tran_status_code: OK, transaction_id: null, payment_id: null.\r\n\r\ncard_response record2 with card_action_code: REFUND, card_response_status_code: null, card_result_code: OK, \r\ncard_tran_status_code: OK, transaction_id: null, payment_id: null.\r\n5."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.5.00"
  },
  {
    "id": 30684016,
    "title": "Verify whether PVO sellseats API with onestep cards generates card response records  correctly  if a PV error happens after capture",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19663",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 58,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65904",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Event should be created\r\n2. set application property \".simulate.checkout.error.on.phase\" value as 7\r\n2. Launch Advanced rest client API and run lock seats API for the event\r\n3. Run Sell Seats API with PayPal payment method\r\n4. Verify in logs and DB\r\n\r\nSelect * from card_response order by last_updated_date desc;\r\n5. Repeat the above steps with gift card",
        "expected": "1. \r\n2. lock seats api should run successfully\r\n3. Checkout error should be thrown\r\n4. card_response record1 with card_action_code: AUTHCAP, card_response_status_code: UC (Unconsumed Cap), \r\ncard_result_code: OK, card_tran_status_code: OK, transaction_id: null, payment_id: null.\r\n\r\ncard_response record2 with card_action_code: REFUND, card_response_status_code: null, card_result_code: OK, \r\ncard_tran_status_code: OK, transaction_id: null, payment_id: null.\r\n5."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.5.00"
  },
  {
    "id": 30684017,
    "title": "Verify whether the installments are updated properly  if installment was partially paid before a full order Bulk return",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19721",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 59,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65905",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV and Login with valid credentials\r\n2. 1.Navigate to patron management\r\n2.Create a new patron\r\n3.Click on Digital wallet tab\r\n4.Add good card on file(eg:4911111111111105 ) \r\nand a known to fail card on file \r\n(eg:4911111111111113)\r\n3. 1.Navigate to Supplier Administration\r\n2.Create a Payment plan with 3 installments, \r\n33/33/34%, require scheduled installments\r\n4. 1.Create a Payment plan with 3 installments, \r\n33/33/34%, require scheduled installments\r\n2.Navigate to ticket sale\r\n3.assign the receivable, scheduled the \r\ninstallments using the bad card on file\r\n4.Sell another order, assign the receivable, \r\nschedule the installments using 2 payments per \r\ninstallment, good card first, then bad card\r\n5. Select  Utility for Scheduled payment run and \r\nrun the first installment for both orders\r\n6. Navigate to Ticket services and serach for \r\nboth the orders\r\n7. 1.Do bulk return for the above event\r\n\r\n2.Navigate to ticket services and search for both \r\nthe orders",
        "expected": "1. User should be able to login\r\n2. User should be able to create a new patron\r\n3. Payment plan should be created sucessfully\r\n4. Two transactions should be completed\r\n5. Verify whether both installments returs an error\r\n6. Verify whether both order's installment \r\nshows the error\r\n7. Verify whether both the orders  shows all 3 \r\ninstallments at $0 due"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.5.00"
  },
  {
    "id": 30684018,
    "title": "Verify whether the installments are canceled if installment was partially paid before a full order cash Receipt",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19721",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 60,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65907",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV and Login with valid credentials\r\n2. 1.Navigate to patron management\r\n2.Create a new patron\r\n3.Click on Digital wallet tab\r\n4.Add good card on file(eg:4911111111111105 ) \r\nand a known to fail card on file \r\n(eg:4911111111111113)\r\n3. 1.Navigate to Supplier Administration\r\n2.Create a Payment plan with 3 installments, \r\n33/33/34%, require scheduled installments\r\n4. 1.Create a Payment plan with 3 installments, \r\n33/33/34%, require scheduled installments\r\n2.Navigate to ticket sale\r\n3.assign the receivable, scheduled the \r\ninstallments using the bad card on file\r\n4.Sell another order, assign the receivable, \r\nschedule the installments using 2 payments per \r\ninstallment, good card first, then bad card\r\n5. Select  Utility for Scheduled payment run and \r\nrun the first installment for both orders\r\n6. Navigate to Ticket services and serach for \r\nboth the orders\r\n7. 1.Do a cash Receipt for both orders\r\n2.Navigate to ticket services and search for both \r\nthe orders",
        "expected": "1. User should be able to login\r\n2. User should be able to create a new patron\r\n3. Payment plan should be created sucessfully\r\n4. Two transactions should be completed\r\n5. Verify whether both installments returs an error\r\n6. Verify whether both order's installment \r\nshows the error\r\n7. Verify whether both the orders  shows all 3 \r\ninstallments at $0 due"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.5.00"
  },
  {
    "id": 30684019,
    "title": "Verify whether the installments are canceled if installment was partially paid before a full order return",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19721",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 61,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65909",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV and Login with valid credentials\r\n2. 1.Navigate to patron management\r\n2.Create a new patron\r\n3.Click on Digital wallet tab\r\n4.Add good card on file(eg:4911111111111105 ) \r\nand a known to fail card on file \r\n(eg:4911111111111113)\r\n3. 1.Navigate to Supplier Administration\r\n2.Create a Payment plan with 3 installments, \r\n33/33/34%, require scheduled installments\r\n4. 1.Create a Payment plan with 3 installments, \r\n33/33/34%, require scheduled installments\r\n2.Navigate to ticket sale\r\n3.assign the receivable, scheduled the \r\ninstallments using the bad card on file\r\n4.Sell another order, assign the receivable, \r\nschedule the installments using 2 payments per \r\ninstallment, good card first, then bad card\r\n5. Select  Utility for Scheduled payment run and \r\nrun the first installment for both orders\r\n6. Navigate to Ticket services and serach for \r\nboth the orders\r\n7. 1.Return both the orders and return the money \r\npaiyed in the second order\r\n2.Navigate to ticket services and search for both \r\nthe orders",
        "expected": "1. User should be able to login\r\n2. User should be able to create a new patron\r\n3. Payment plan should be created sucessfully\r\n4. Two transactions should be completed\r\n5. Verify whether both installments returs an error\r\n6. Verify whether both order's installment \r\nshows the error\r\n7. Verify whether both the orders  shows all 3 \r\ninstallments at $0 due"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.5.00"
  },
  {
    "id": 30684020,
    "title": "Verify whether the info bubble is not displayed next to the Security Code field in the payment page.",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19332",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 62,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65910",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link and login with valid credentials\r\n2. navigate to ticket sales\r\n3. select ana event, patron and click on lock seats.\r\n4. select delivery method and continue\r\n5. select any credit card as payment method\r\n6. Verify whether the info bubble is not displayed next to the Security Code field.",
        "expected": "1. User should be logged into the application successfully\r\n2. user should be navigate to ticket sales successfully\r\n3. user should be able to lock the seat successfully\r\n4. user should be able to select the delivery method successfully\r\n5. user should be able to select the payment method successfully\r\n6. The info bubble should not display next to the Security Code \r\nfield."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.5.00"
  },
  {
    "id": 30684021,
    "title": "Verify whether unexpected errors are not thown while creating new or updating existing  payment methods",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19740",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 63,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65912",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the PV apllication.\r\nLogin with valid credetials\r\n2. Navigate to Payment methods by select the same from the system setup dropdown\r\n3. Create Payment Type by selecting the type in the drop down\r\n4. Select the Payment method which created in step 3\r\n5. Edit the context rules of that payment method by clicking on the Edit button\r\n6. Select a supplier\r\n7. Verify include and exclude context rule at supplier, event, channel and agency level\r\n8. Verify the same in Context rule block\r\n9. Verify the Payment method is available at respective levels\r\n10. 1. Navigate to Payment method in system setup\r\n2. Search for the payment method created in step 3\r\n3. Edit and apply changes\r\n4. Verify whether the Payment method is updated successfully",
        "expected": "1. Application should be launched successfully.\r\n2. Payment methods portal should be dispalyed\r\n3. Payment method should be created successfully\r\n4. Payment method should be selected \r\nsuccessfully\r\n5. The page displaying all the rules and the various tabs should be displayed\r\n6. Supplier should be added and price scale tab should be editable\r\n7. User should be able to include and exclude context rule at each level\r\n8. The one that added in the Context rule page, \r\nshould be displayed in the context rule block as \r\nwell.\r\n9. Payment method should be available at \r\nrespective levels\r\n10. Payment method should be updated successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.5.00"
  },
  {
    "id": 30684022,
    "title": "Verify payment method context rules at event(s), supplier, agency, channel levels",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19740",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 64,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65913",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the PV apllication.\r\nLogin with valid credetials\r\n2. Navigate to Payment methods by select the same from the system setup dropdown\r\n3. Create Payment Type by selecting the type in the drop down\r\n4. Select the Payment method which created in step 3\r\n5. Edit the context rules of that service charge by clicking on the Edit button\r\n6. Select a supplier\r\n7. Verify include and exclude context rule at supplier, event, channel and agency level\r\n8. Verify the same in Context rule block\r\n9. Verify the Payment method is available at respective levels\r\n10. Repeat above steps  with different types of Payment",
        "expected": "1. Application should be launched successfully.\r\n2. Payment methods portal should be dispalyed\r\n3. Payment method should be created successfully\r\n4. Payment method should be selected \r\nsuccessfully\r\n5. The page displaying all the rules and the various tabs should be displayed\r\n6. Supplier should be added and price scale tab should be editable\r\n7. User should be able to include and exclude context rule at each level\r\n8. The one that added in the Context rule page, \r\nshould be displayed in the context rule block as \r\nwell.\r\n9. Payment method should be available at \r\nrespective levels\r\n10."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.5.00"
  },
  {
    "id": 30684023,
    "title": "Verify that the cart id is not saved when generates an error in utilities that creates transaction",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19435",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 65,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65914",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite:-\r\nA valid event should be available\r\n2. Login to PV with valid credentials\r\n3. Enter invalid card details and make error on \r\ncheckout - In any Utilities that creates a \r\ntransaction\r\n(error in card processing)\r\n4. Verify that the cart id is not saved when \r\ncreates card processing error",
        "expected": "1. \r\n2. PV Application should be lauched\r\n3. User shoould not be able to checkout the \r\ntransaction\r\nError should be generated\r\n4. Copy of the cart is NOT saved on card \r\nprocessing/credit processing"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.4.00"
  },
  {
    "id": 30684024,
    "title": "Verify that the cart id is not saved in normal portal transaction when card processing error occurs",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19435",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 66,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65916",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite:-\r\nA valid event should be available\r\n2. Login to PV with valid credentials\r\n3. Navigate to Ticket sales and select the event \r\nwhich is selected in pre requisite\r\n4. Select ticket quantity and lock seats\r\n5. Cart page-->Select delivery method\r\n6. Enter invalid card details and make error on \r\ncheckout\r\n(error in card processing)\r\n7. Verify that the cart id is not saved when \r\ncreates card processing error",
        "expected": "1. \r\n2. PV Application should be lauched\r\n3. Event should be selected\r\n4. Seats should be locked and user should be \r\nnavigated to cart page\r\n5. Delivery method should be selected\r\n6. User shoould not be able to checkout the \r\ntransaction\r\n7. Copy of the cart is NOT saved on card \r\nprocessing/credit processing"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.4.00"
  },
  {
    "id": 30684025,
    "title": "Verify the user is able to complete transaction via apply pay where address US",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26825",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 67,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1127189",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch MPV\n\nhttps://mpvqa1.tickets.com/?agency=NGSS_MLB_MPV&orgId=22571&pid=7162971 \nLogin : Deepthi.soman@ust-global.com/password\n\r\n2. Lock Tickets\r\n3. Select apply pay payment method\r\n4. Login to apply pay and select US address\n\r\n5. Complete the transaction",
        "expected": "1. \r\n2. \r\n3. \r\n4. \r\n5. User is able to complete the transaction successfully."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.1.00"
  },
  {
    "id": 30684026,
    "title": "Verify the user is able to complete transaction via Paypal where address US",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26825",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 68,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C1127188",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch MPV\n\nhttps://mpvqa1.tickets.com/?agency=NGSS_MLB_MPV&orgId=22571&pid=7162971 \nLogin : Deepthi.soman@ust-global.com/password\n\r\n2. Lock Tickets\r\n3. Select paypal payment method\r\n4. Login to Paypal and select US address\n\r\n5. Complete the transaction",
        "expected": "1. \r\n2. \r\n3. \r\n4. \r\n5. User is able to complete the transaction successfully."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.1.00"
  },
  {
    "id": 30684027,
    "title": "Verify the user gets an info message if the user does not have a default open item receivable type defined, filter payment plan partial payment information while locking seats",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19380",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 69,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C65917",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Run the LockSeat API for the Package .Verify the payment plan details in response.\r\n2. Navigate to AFP  \r\nSet Default Open Item Receivable Type to NULL\r\n3. Run the LockSeat API for the Package  and verify the info in response\r\n4. Pre-requisite\r\n1.      Launch the link \r\n2.      Login using valid credentials\r\n3.      Create a Package and Payment Plan\r\n4.      Associate the payment plan to the Package \r\n5.      Navigate to AFP  \r\n6.      Set Default Open Item Receivable Type to OPNREC-Receivable\r\n5. Launch the Tool - REST client",
        "expected": "1. payment plan details should be displayed correctly\r\n2. \r\n3. 11:41:05,428 [Operator(id=1005, userLogin=pvo_dev_single_tix), Agency(id=1004, code=PVO-IA), ] INFO  [AbstractCartServiceImpl] AbstractCartServiceImpl.updateRevisedCart() partial payment during sales enabled and cart/request qualified, but requesting user/agency does not have a default open item recievable defined in Security AFPs. Hence, no payment plan/installment set data is being calculated.\r\n4. \r\n5."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.3.00"
  },
  {
    "id": 30684028,
    "title": "Verify the PVO external transaction id for renewal transactions",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19285",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 70,
    "custom_is_automated": false,
    "custom_pv_category": 3,
    "custom_refs": "C65919",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.An Event should be available with perf accepted against renewals supplier\r\n2.Note down the PefrID\r\n3.A Patron should be available with credits\r\n2. Login to PV application\r\n3. 1. Select the event and patron\r\n2. Enter the number of tickets \r\n3. Select Buyer Type\r\n4.Select the delievery method\r\n5.Click on recievables tab and create your payment plan\r\n6.Click on apply\r\n4. Click on checkout\r\n5. Create a renewal Payment plan for the PerfID in maintenance site\r\n6. Login to PVO mytickets with the account\r\n7. 1.Navigate to ToDo list portal\r\n2.Click on renewal button\r\n3.Input the details and select payment via credits\r\n8. Complete renewal tramsaction and verify",
        "expected": "1. Pre-Requisite should be satisfied\r\n2. User has to be logged in successfully\r\n3. \r\n4. System should display the Transaction Confirmation Number .\r\n5. Payment plan should be created successfully\r\n6. User should be able to login\r\n7. Actions should be performed\r\n8. PV should be capturing the external transaction id in table if/when the external system provides it."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.3.00"
  },
  {
    "id": 30684029,
    "title": "Verify the dropdown values added  in card server screen",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-18747",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 71,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65920",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login as a cm user using the following credentials:\nUsername: \nPassword: \r\n2. Select System Administration from the drop down\r\n3. Select Merchants tab\r\n4. Select CardServers tab\r\n5. Verify the Cad server type dropdown added with Fusebox",
        "expected": "1. User should be logged in\r\n2. System Administration page should be displayed to the user\r\n3. Card Servers and Card Merchants tab should be displayed\r\n4. CardServers Search page should be displayed\r\n5. Fusebox should display in the dropdown"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "Not Specified"
  },
  {
    "id": 30684030,
    "title": "Verify whether the refund transaction is succesful using a new payment method",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19071",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 72,
    "custom_is_automated": false,
    "custom_pv_category": 41,
    "custom_refs": "C65922",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform a sales transaction using an existing event and patron\r\n2. Spilt the payments - half via cheque and rest via card. Complete the transaction.\r\n3. Navigate to order and confirm that the payment details are updated as expected.\r\n4. Perform a return of the ticket using a new payment method\r\n5. Verify whether the transaction is successful.\r\n6. Check and confirm that the tickets are inactive",
        "expected": "1. User should be able to complete the sale\r\n2. User should be able to complete the transaction\r\n3. User should be displayed with payment modes selected for the initial payment\r\n4. User should be able to use the refund mode\r\n5. The transaction should be succesful\r\n6. The tickets returned should be inactive"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.2.00"
  },
  {
    "id": 30684031,
    "title": "Verify whether the refund transaction is succesful using one of the card types used for the payment_Cheque_with negative service charge",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19071",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 73,
    "custom_is_automated": false,
    "custom_pv_category": 41,
    "custom_refs": "C65924",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform a sales transaction using an existing event and patron\r\n2. Spilt the payments - half via cheque and rest via card. Complete the transaction.\r\n3. Navigate to order and confirm that the payment details are updated as expected.\r\n4. Perform a return of the ticket using cheque\r\n5. Verify whether the transaction is successful.\r\n6. Check and confirm that the tickets are inactive\r\n7. Create a service charge",
        "expected": "1. User should be able to complete the sale\r\n2. User should be able to complete the transaction\r\n3. User should be displayed with payment modes selected for the initial payment\r\n4. User should be able to use the refund mode\r\n5. The transaction should be succesful\r\n6. The tickets returned should be inactive\r\n7. User should be able to setup a service charge"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.2.00"
  },
  {
    "id": 30684032,
    "title": "Verify whether the refund transaction is succesful using one of the card types used for the payment_Visa_with negative service charge",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19071",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 74,
    "custom_is_automated": false,
    "custom_pv_category": 41,
    "custom_refs": "C65925",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform a sales transaction using an existing event and patron\r\n2. Spilt the payments - half via cheque and rest via card. Complete the transaction.\r\n3. Navigate to order and confirm that the payment details are updated as expected.\r\n4. Perform a return of the ticket using VISA\r\n5. Verify whether the transaction is successful.\r\n6. Check and confirm that the tickets are inactive\r\n7. Create a service charge",
        "expected": "1. User should be able to complete the sale\r\n2. User should be able to complete the transaction\r\n3. User should be displayed with payment modes selected for the initial payment\r\n4. User should be able to use the refund mode\r\n5. The transaction should be succesful\r\n6. The tickets returned should be inactive\r\n7. User should be able to create a service charge"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.2.00"
  },
  {
    "id": 30684033,
    "title": "Verify whether the refund transaction is succesful using one of the card types used for the payment_Cheque",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19071",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 75,
    "custom_is_automated": false,
    "custom_pv_category": 41,
    "custom_refs": "C65927",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform a sales transaction using an existing event and patron\r\n2. Spilt the payments - half via cheque and rest via card. Complete the transaction.\r\n3. Navigate to order and confirm that the payment details are updated as expected.\r\n4. Perform a return of the ticket using cheque\r\n5. Verify whether the transaction is successful.\r\n6. Check and confirm that the tickets are inactive",
        "expected": "1. User should be able to complete the sale\r\n2. User should be able to complete the transaction\r\n3. User should be displayed with payment modes selected for the initial payment\r\n4. User should be able to use the refund mode\r\n5. The transaction should be succesful\r\n6. The tickets returned should be inactive"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.2.00"
  },
  {
    "id": 30684034,
    "title": "Verify whether the refund transaction is succesful using one of the card types used for the payment_Visa",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19071",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 76,
    "custom_is_automated": false,
    "custom_pv_category": 41,
    "custom_refs": "C65928",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform a sales transaction using an existing event and patron\r\n2. Spilt the payments - half via cheque and rest via card. Complete the transaction.\r\n3. Navigate to order and confirm that the payment details are updated as expected.\r\n4. Perform a return of the ticket using VISA\r\n5. Verify whether the transaction is successful.\r\n6. Check and confirm that the tickets are inactive",
        "expected": "1. User should be able to complete the sale\r\n2. User should be able to complete the transaction\r\n3. User should be displayed with payment modes selected for the initial payment\r\n4. User should be able to use the refund mode\r\n5. The transaction should be succesful\r\n6. The tickets returned should be inactive"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.2.00"
  },
  {
    "id": 30684035,
    "title": "Verify Recalculate button which can be used after each transaction or utility to verify the payments have been adjusted correctly",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-18779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 77,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65930",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the PV application.\n2. Login using valid username and password.\r\n2. 1. Select an event\n2. Perform a receivable and complete the transaction\r\n3. Schedule the Payments via ticket services for the order created above\r\n4. Navigate to Ticket Services> create cash Reciept\r\n5. Navigate to Utility and Run the scheduled payment such that the first installment will be processed.\r\n6. Verify Recalculate button which can be used after each transaction or utility to verify the payments have been adjusted correctly\r\n7. Logout from the application",
        "expected": "1. The login should be successful and the Home page of the application should be displayed.\r\n2. User should able to Perform the actions\r\n3. User should able to Perform the actions\r\n4. User should able to reduce some amount\r\n5. User should able to Perform the actions\r\n6. Recalculate button can be used after each transaction or utility to verify the payments have been adjusted correctly\r\n7. User should be able to log off from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.2.00"
  },
  {
    "id": 30684036,
    "title": "Verify scheduled payments are reduced when Reducing service charges via service charge edits from ticket services",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-18779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 78,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65931",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the PV application.\n2. Login using valid username and password.\r\n2. 1. Select an event\n2. Perform a receivable and complete the transaction\r\n3. Schedule the Payments via ticket services for the order created above\r\n4. Navigate to Ticket Services> Reduce service charges from Service charges edit\r\n5. Navigate to Utility and Run the scheduled payment such that the first installment will be processed.\r\n6. Verify the scheduled payment runs successfully\r\n7. Logout from the application",
        "expected": "1. The login should be successful and the Home page of the application should be displayed.\r\n2. User should able to Perform the actions\r\n3. User should able to Perform the actions\r\n4. User should able to reduce service Charge\r\n5. User should able to Perform the actions\r\n6. The scheduled payment should not fail and the amount should be deducted correctly\r\n7. User should be able to log off from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.2.00"
  },
  {
    "id": 30684037,
    "title": "Verify that Scheduled payments are persisted in the install_payment table",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-18779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 79,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65932",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the PV application.\n2. Login using valid username and password.\r\n2. 1. Select an event\n2. Perform a receivable and complete the transaction\r\n3. Schedule the Payments via ticket services for the order created above\r\n4. Verify in DB the the install_payment table\r\n5. Logout from the application",
        "expected": "1. The login should be successful and the Home page of the application should be displayed.\r\n2. User should able to Perform the actions\r\n3. User should able to Perform the actions\r\n4. Schedule  Payment should be persisted in the the install_payment table\r\n5. User should be able to log off from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.2.00"
  },
  {
    "id": 30684038,
    "title": "Verify Scheduled Payment Status  is CANCELED for the  write-off activities",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-18779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 80,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65934",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the PV application.\n2. Login using valid username and password.\r\n2. 1. Select an event\n2. Perform a receivable and complete the transaction\r\n3. Schedule the Payments via ticket services for the order created above\r\n4. Navigate to Ticket Services> Perform Receivable Write ofF\r\n5. Verify in DB the Schedule Payment Status\r\n6. Logout from the application",
        "expected": "1. The login should be successful and the Home page of the application should be displayed.\r\n2. User should able to Perform the actions\r\n3. User should able to Perform the actions\r\n4. User should able to Perform Perform Receivable Write off\r\n5. Schedule  Payment status should be CANCELED\r\n6. User should be able to log off from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.2.00"
  },
  {
    "id": 30684039,
    "title": "Verify Scheduled Payment Status  is CANCELED for the reduction",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-18779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 81,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65935",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the PV application.\n2. Login using valid username and password.\r\n2. 1. Select an event\n2. Perform a receivable and complete the transaction\r\n3. Schedule the Payments via ticket services for the order created above\r\n4. Navigate to Ticket Services> Perform Receivable Reduction>Return some Tickets\r\n5. Verify in DB the Schedule Payment Status\r\n6. Logout from the application",
        "expected": "1. The login should be successful and the Home page of the application should be displayed.\r\n2. User should able to Perform the actions\r\n3. User should able to Perform the actions\r\n4. User should able to Perform Perform Receivable Reduction\r\n5. Schedule  Payment status should be CANCELED\r\n6. User should be able to log off from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.2.00"
  },
  {
    "id": 30684040,
    "title": "Verify Scheduled Payment Status  is CANCELED for the consolidation",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-18779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 82,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65937",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the PV application.\n2. Login using valid username and password.\r\n2. 1. Select an event\n2. Perform a receivable and complete the transaction\r\n3. Schedule the Payments via ticket services for the order created above\r\n4. Navigate to Ticket Services> \r\nExchange some of the tickets\r\nCreate Receivable \r\nFrom Ticket Services Perform Receivable consolidation for the 2  receivables\r\n5. Verify in DB the Schedule Payment Status\r\n6. Logout from the application",
        "expected": "1. The login should be successful and the Home page of the application should be displayed.\r\n2. User should able to Perform the actions\r\n3. User should able to Perform the actions\r\n4. User should able to Perform Receivable consolidation\r\n5. Schedule  Payment status should be CANCELED\r\n6. User should be able to log off from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.2.00"
  },
  {
    "id": 30684041,
    "title": "Verify Scheduled Payment Status is PAID for cash receipt activity",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-18779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 83,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65938",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the PV application.\n2. Login using valid username and password.\r\n2. 1. Select an event\n2. Perform a receivable and complete the transaction\r\n3. Schedule the Payments via ticket services for the order created above\r\n4. Navigate to Ticket Services> Create Cash Receipt\r\n5. Verify in DB the Schedule Payment Status\r\n6. Logout from the application",
        "expected": "1. The login should be successful and the Home page of the application should be displayed.\r\n2. User should able to Perform the actions\r\n3. User should able to Perform the actions\r\n4. User should able to create Cash Receipt\r\n5. Schedule  Payment status should be PAID\r\n6. User should be able to log off from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.2.00"
  },
  {
    "id": 30684042,
    "title": "Verify scheduled payments are not reduced when a payment order reversal is done",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-18779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 84,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65939",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the PV application.\n2. Login using valid username and password.\r\n2. 1. Select an event\n2. Perform a receivable and complete the transaction\r\n3. Schedule the Payments via ticket services for the order created above\r\n4. Navigate to Ticket Services> Reverse Payment order\r\n5. Navigate to Utility and Run the scheduled payment such that the first installment will be processed.\r\n6. Verify the scheduled payment does not runs successfully\r\n7. Logout from the application",
        "expected": "1. The login should be successful and the Home page of the application should be displayed.\r\n2. User should able to Perform the actions\r\n3. User should able to Perform the actions\r\n4. User should able to Reverse Payment order\r\n5. User should able to Perform the actions\r\n6. The scheduled payment should fail and the amount should be manually corrected\r\n7. User should be able to log off from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.2.00"
  },
  {
    "id": 30684043,
    "title": "Verify scheduled payments are reduced when an installment is paid partially from two cards",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-18779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 85,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65941",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the PV application.\n2. Login using valid username and password.\r\n2. 1. Select an event\n2. Perform a receivable and complete the transaction\r\n3. Schedule the Payments via ticket services for the order created above\r\n4. Create Cash Receipt for the order and complete the transaction. For Eg. If the 1st installment is 50$ pay only 45$  paying partially from two cards and complete the transaction\r\n5. Navigate to Utility and Run the scheduled payment such that the first installment will be processed.\r\n6. Verify the scheduled payment runs successfully\r\n7. Logout from the application",
        "expected": "1. The login should be successful and the Home page of the application should be displayed.\r\n2. User should able to Perform the actions\r\n3. User should able to Perform the actions\r\n4. User should able to Perform the actions\r\n5. User should able to Perform the actions\r\n6. The scheduled payment should not fail and the amount should be deducted correctly\r\n7. User should be able to log off from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.2.00"
  },
  {
    "id": 30684044,
    "title": "Verify scheduled payments are reduced for receivables of same patron  when user creates cash receipt for both the receivables",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-18779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 86,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65942",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the PV application.\r\n2. Login using valid username and password.\r\n\r\nPre-requisite:\r\nCreate two receivables with scheduled payment plan for the same patron\r\n2. 1. Select an event\n2. Perform a receivable and complete the transaction\r\n3. Schedule the Payments via ticket services for the order created above\r\n4. Create cash receipt for both the receivables from patron management\r\n5. Navigate to Utility and Run the scheduled payment for both the recievables such that the first installment will be processed.\r\n6. Verify the scheduled payment runs successfully\r\n7. Logout from the application",
        "expected": "1. The login should be successful and the Home page of the application should be displayed.\r\n2. User should able to Perform the actions\r\n3. User should able to Perform the actions\r\n4. User should able to Perform the actions\r\n5. User should able to Perform the actions\r\n6. The scheduled payment should not fail and the amount should be deducted correctly from both the scheduled palns\r\n7. User should be able to log off from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.2.00"
  },
  {
    "id": 30684045,
    "title": "Verify scheduled payments are reduced when user Execute bulk event return",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-18779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 87,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65944",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the PV application.\r\n2. Login using valid username and password.\r\n3.Create Two events\r\n2. 1. Select an event\r\n2. Perform a receivable and complete the transaction\r\n3.Add offer select Event2 and take one seat such that it take the amount less than the 1st installment\r\n3. Schedule the Payments via ticket services for the order created above\r\n4. Navigate to Utilities>\r\nEvent Return/Release\r\nSelect Event2\r\n5. Navigate to Utility and Run the scheduled payment such that the first installment will be processed.\r\n6. Verify the scheduled payment runs successfully\r\n7. Logout from the application",
        "expected": "1. The login should be successful and the Home page of the application should be displayed.\r\n2. User should able to Perform the actions\r\n3. User should able to Perform the actions\r\n4. User should able to Execute  bulk event return\r\n5. User should able to Perform the actions\r\n6. The scheduled payment should not fail and the amount should be deducted correctly\r\n7. User should be able to log off from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.2.00"
  },
  {
    "id": 30684046,
    "title": "Verify scheduled payments are reduced when user Execute receivable activity import",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-18779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 88,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65945",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the PV application.\n2. Login using valid username and password.\r\n2. 1. Select an event\n2. Perform a receivable and complete the transaction\r\n3. Schedule the Payments via ticket services for the order created above\r\n4. Navigate to Data Import>Select Receivable Activity Import>Create an Import run>create Import file-give a small amount in the ampount column,save the file as csv>Load Data>Validate and Run\r\n5. Navigate to Utility and Run the scheduled payment such that the first installment will be processed.\r\n6. Verify the scheduled payment runs successfully\r\n7. Logout from the application",
        "expected": "1. The login should be successful and the Home page of the application should be displayed.\r\n2. User should able to Perform the actions\r\n3. User should able to Perform the actions\r\n4. User should able to Execute receivable activity import\r\n5. User should able to Perform the actions\r\n6. The scheduled payment should not fail and the amount should be deducted correctly\r\n7. User should be able to log off from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.2.00"
  },
  {
    "id": 30684047,
    "title": "Verify scheduled payments are reduced when user Execute credit consumption utility",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-18779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 89,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65947",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the PV application.\r\n2. Login using valid username and password.\r\n3.Create an event\r\n4.Create a patron and add credits to the patron\r\n2. 1. Select an event\n2. Perform a receivable and complete the transaction\r\n3. Schedule the Payments via ticket services for the order created above\r\n4. Navigate to Utilities>Credit Run Utility>Run Type set as Consumption >Consume the credit for the patron >Credit amount should be less than the 1st installment\r\n5. Navigate to Utility and Run the scheduled payment such that the first installment will be processed.\r\n6. Verify the scheduled payment runs successfully\r\n7. Logout from the application",
        "expected": "1. Pre-Requisite should be completed succesfully\r\n2. User should able to Perform the actions\r\n3. User should able to Perform the actions\r\n4. User should able to Execute credit consumption\r\n5. User should able to Perform the actions\r\n6. The scheduled payment should not fail and the amount should be deducted correctly\r\n7. User should be able to log off from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.2.00"
  },
  {
    "id": 30684048,
    "title": "Verify scheduled payments are reduced when user Partially return the order Combining with cash receipt activity",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-18779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 90,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65948",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the PV application.\n2. Login using valid username and password.\r\n2. 1. Select an event\n2. Perform a receivable and complete the transaction\r\n3. Schedule the Payments via ticket services for the order created above\r\n4. Perform Partial Return  combining with Cash Receipt\r\nSelect few tickets and perform return actionfrom ticket services\r\nNavigate to Ticket Services and create Cash Receipt\r\n5. Navigate to Utility and Run the scheduled payment such that the first installment will be processed.\r\n6. Verify the scheduled payment runs successfully\r\n7. Logout from the application",
        "expected": "1. The login should be successful and the Home page of the application should be displayed.\r\n2. User should able to Perform the actions\r\n3. User should able to Perform the actions\r\n4. User should able to Perform partial return and create cash receipt in the same cart\r\n5. User should able to Perform the actions\r\n6. The scheduled payment should not fail and the amount should be deducted correctly\r\n7. User should be able to log off from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.2.00"
  },
  {
    "id": 30684049,
    "title": "Verify scheduled payments are reduced when user Partially return the order",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-18779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 91,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65951",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the PV application.\n2. Login using valid username and password.\r\n2. 1. Select an event\n2. Perform a receivable and complete the transaction\r\n3. Schedule the Payments via ticket services for the order created above\r\n4. Perform Partial Return:\r\nSelect few tickets and perform return actionfrom ticket services\r\n5. Navigate to Utility and Run the scheduled payment such that the first installment will be processed.\r\n6. Verify the scheduled payment runs successfully\r\n7. Logout from the application",
        "expected": "1. The login should be successful and the Home page of the application should be displayed.\r\n2. User should able to Perform the actions\r\n3. User should able to Perform the actions\r\n4. User should able to Perform partial return\r\n5. User should able to Perform the actions\r\n6. The scheduled payment should not fail and the amount should be deducted correctly\r\n7. User should be able to log off from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.2.00"
  },
  {
    "id": 30684050,
    "title": "Verify scheduled payments are reduced when payments are made or credits are applied against the order",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-18779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 92,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65954",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the PV application.\n2. Login using valid username and password.\r\n2. 1. Select an event\n2. Perform a receivable and complete the transaction\r\n3. Schedule the Payments via ticket services for the order created above\r\n4. Create Cash Receipt for the order and complete the transaction. For Eg. If the 1st installment is 50$ pay only 45$ and complete the transaction\r\n5. Navigate to Utility and Run the scheduled payment such that the first installment will be processed.\r\n6. Verify the scheduled payment runs successfully\r\n7. Logout from the application",
        "expected": "1. The login should be successful and the Home page of the application should be displayed.\r\n2. User should able to Perform the actions\r\n3. User should able to Perform the actions\r\n4. User should able to Perform the actions\r\n5. User should able to Perform the actions\r\n6. The scheduled payment should not fail and the amount should be deducted correctly\r\n7. User should be able to log off from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.2.00"
  },
  {
    "id": 30684051,
    "title": "Verify Payment - Transfer Payment method not  fails in cart with  Invalid card message",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-18317",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 93,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65955",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to the PV application using valid credentials.\r\n2. Create a payment method of type Payment Transfer under System Setup\r\n3. 1. Navigate to ticket sale \r\n2. Select an Package\r\n3. Select Financial Patron \r\n4. Enter number of tickets required and click on Lock Seats \r\n5. Select  delivery method as DHL enter the deatils in Delivery tab and click on apply changes \r\n6. Select the newly cretaed payment method  of type Payment Transfer  \r\n7.Try to complete the transaction and verfy the page\r\n4. Pre-Requisite: a. Setup a Payment Method under System Set up b. Create Event, Patron",
        "expected": "1. User should be logged in successfully.\r\n2. User should be able to create the payment method of type Payment Transfer\r\n3. Ticket Sale  transaction should be successful.\r\n2.User should get a transaction confirmation and transaction ID - T1\r\n4. The user should be able to complete the pre-requisite successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "Not Specified"
  },
  {
    "id": 30684052,
    "title": "verify User redirected to Receivable Create Tab on Full Payment of receivable balance while Creating Cash Receipt",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17935",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 94,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65957",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Launch PVNG application\n2.Input the following BO user credentials:\n1.\n2.\n3.Click on Login button\r\n2. create a recievable\r\n3. Create Cash Receipt\r\n4. do the full recevable payment and click on the apply button\r\n5. 1.Fill the mandatory fields  in the confirmation tab,if any\n2.Click on Done button\r\n6. Perform a ticket sale with a patron",
        "expected": "1. The user should be able to log in successfully\r\n2. recievable amount shoulb be updated successsfully\r\n3. The user should be navigated to recivable payment tab\r\n4. user should retained in the recivable payment tab\r\n5. The transaction should be completed successfully\r\n6."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.0.00"
  },
  {
    "id": 30684053,
    "title": "Verifying the patron cannot be change if the Payment Method id Account Credit Option in the cart",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-18004",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 95,
    "custom_is_automated": false,
    "custom_pv_category": 27,
    "custom_refs": "C65959",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. A Patron should be available with credits for a particular event\r\n2. Launch PV Application\r\n3. Login as bouser\r\n4. Go to Ticket Sales page\r\n5. Select an event and a patron.\nThe Patron must have atleast one credit available for this event.\r\n6. 1. Enter the number of seats required in  the text box provided.\n2. Click BEST AVAILABLE button\r\n7. Select a delivery method under Deliver Tab and click APPLY button\r\n8. 1. Go to Payment Tab.\n2. Select 'Account Credit' from the drop down list provided.\r\n9. Try to change the patron",
        "expected": "1. Pre Requisite should be done.\r\n2. Should be able to launch PV Application\r\n3. Should be able to login as bouser.\r\n4. User should be able to navigate to Ticket Sales Page\r\n5. User must be able to select event and Patron\r\n6. User must be navigated to the Patron Cart.\r\n7. User should be able rto select a delivery method successfully.\r\n8. The Account Credit Pane should be displayed with the various credits available\r\n9. User should not be able to change the patron if the payment method is account credit  and An error message should be displayed"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.0.00"
  },
  {
    "id": 30684054,
    "title": "Verify User is able to Retrieve Results on Card Merchants Search",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17958",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 96,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65961",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. http://testpvng.back.tickets.com:18080/portal\r\n2. Login as a cm user using the following credentials:\nUsername: \nPassword: \r\n3. Select System Administration from the drop down\r\n4. Select Merchants tab\r\n5. Select CardMerchants tab\r\n6. 1.Input * as search criteria\n2.Click Find button\r\n7. Verify the search results displayed\r\n8. 1.Input any specific search criteria\n2.Click Find button\r\n9. Verify the search results displayed\r\n10. Select Logout using the dropdown",
        "expected": "1. Site should be launched\r\n2. User should be logged in\r\n3. System Administration page should be displayed to the user\r\n4. Card Servers and Card Merchants tab should be displayed\r\n5. CardMerchants Search page should be displayed\r\n6. Search results should be displayed.\r\n7. All the cardmerchants should be displayed\r\n8. Search results should be displayed.\r\n9. Search results corresponding to the search criteria only should be displayed\r\n10. 1. User should be logged out\n2. User should be navigated to the Login page"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.0.00"
  },
  {
    "id": 30684055,
    "title": "Verify the Blacklisted cards should not be used to authorize payments",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17546",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 97,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65963",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the application & login with valid credentials\r\n2. 1.Navigate to Utilities\r\n2.Select the \"Credit card Black list\" from the drop doen\r\n3.Click on NEW\r\n4.Enter the details;Add a new credit card to Black listed cards\r\n5.Click on Apply changes\r\n3. 1.Launch ticket sales \r\n2.Add some ticket to the cart & patron \r\n3. Use the same blacklisted card for authorization in payment page (payment gets authorized and card response is created)\r\n4.Click on check out\r\n4. In the Payment page select Payment Method as Credit Card\r\n5. In the Payment page, verify that the black listed creditcard is not selectable",
        "expected": "1. User should logged into the application successfully\r\n2. Card should be added to Blacklisted cards list from Utility successfully\r\n3. An error message should be displayed\r\n4. Avalible credit card of the patron should be listed\r\n5. An error message should be displayed about  blacklisted card."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.0.00"
  },
  {
    "id": 30684056,
    "title": "Verify the concurrancy error message is displaying if the open item liabilities available credit amount has changed since the lock call_Package",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17552",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 98,
    "custom_is_automated": false,
    "custom_pv_category": 3,
    "custom_refs": "C65964",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.An Package should be available with perf accepted against renewals supplier\r\n2.Note down the PefrID\r\n3.A Patron should be available with credits\r\n2. Login to PV application\r\n3. 1. Select the event and patron\r\n2. Enter the number of tickets \r\n3. Select Buyer Type\r\n4.Select the delievery method\r\n5.Click on recievables tab and create your payment plan\r\n6.Click on apply\r\n4. Click on checkout\r\n5. Create a renewal Payment plan for the PerfID in maintenance site\r\n6. Login to PVO mytickets with the account\r\n7. 1.Navigate to ToDo list portal\r\n2.Click on renewal button\r\n3.Input the details and select payment via credits\r\n8. Navigate to PV and select the patron\r\n9. Edit the credit amount for the patron and click on save\r\n10. Immediately Navigate to PVO renewal payment page and make payment for the instsallment and complete the process.\r\n11. Verify the error message in PV, PVO logs",
        "expected": "1. Pre-Requisite should be satisfied\r\n2. User has to be logged in successfully\r\n3. \r\n4. System should display the Transaction Confirmation Number .\r\n5. Payment plan should be created successfully\r\n6. User should be able to login\r\n7. Actions should be performed\r\n8. The patron has to be selected\r\n9. Changes should be saved\r\n10. Error should be thrown uder the condition AVAILABLE_CREDIT_CHANGED_SINCE_LOCK\r\n11. 1.PV log should display error message with error code 10054\r\n2.PVO log should display error message with error code 319"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.50"
  },
  {
    "id": 30684057,
    "title": "Verify the concurrancy error message is displaying if the open item liabilities available credit amount has changed since the lock call_Event",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17552",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 99,
    "custom_is_automated": false,
    "custom_pv_category": 3,
    "custom_refs": "C65965",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.An Event should be available with perf accepted against renewals supplier\r\n2.Note down the PefrID\r\n3.A Patron should be available with credits\r\n2. Login to PV application\r\n3. 1. Select the event and patron\r\n2. Enter the number of tickets \r\n3. Select Buyer Type\r\n4.Select the delievery method\r\n5.Click on recievables tab and create your payment plan\r\n6.Click on apply\r\n4. Click on checkout\r\n5. Create a renewal Payment plan for the PerfID in maintenance site\r\n6. Login to PVO mytickets with the account\r\n7. 1.Navigate to ToDo list portal\r\n2.Click on renewal button\r\n3.Input the details and select payment via credits\r\n8. Navigate to PV and select the patron\r\n9. Immediately Navigate to PVO renewal payment page and make payment for the instsallment and complete the process.\r\n10. Verify the error message in PV, PVO logs\r\n11. Edit the credit amount for the patron and click on save",
        "expected": "1. Pre-Requisite should be satisfied\r\n2. User has to be logged in successfully\r\n3. \r\n4. System should display the Transaction Confirmation Number .\r\n5. Payment plan should be created successfully\r\n6. User should be able to login\r\n7. Actions should be performed\r\n8. The patron has to be selected\r\n9. Error should be thrown uder the condition AVAILABLE_CREDIT_CHANGED_SINCE_LOCK\r\n10. 1.PV log should display error message with error code 10054\r\n2.PVO log should display error message with error code 319\r\n11. Changes should be saved"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.50"
  },
  {
    "id": 30684058,
    "title": "Verify the concurrancy error message is displaying when multiple PVO renewals making a payment on the same PV reservation order at the same time_Package",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17552",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 100,
    "custom_is_automated": false,
    "custom_pv_category": 3,
    "custom_refs": "C65966",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.A Package should be available with perf accepted against renewals supplier\r\n2.Note down the PefrID\r\n3.A Patron should be available with credits\r\n2. Login to PV application\r\n3. 1. Select the event\r\n2. Enter the number of tickets \r\n3. Select Buyer Type\r\n4. Click Best Available button\r\n5.Click on the 'Reservation' link above the Subtotal in the Offer details\r\n6.click on set to reservation button\r\n4. 1. Type * in the Patron Portlet on the Ticket Sale Screen\r\n2. Click Find button\r\n3. Select a Patron by clicking on the \"+\" icon\r\n5. Click on checkout\r\n6. Create a renewal Payment plan for the PerfID in maintenance site\r\n7. Login to PVO mytickets with the account\r\n8. 1.Navigate to ToDo list portal\r\n2.Click on renewal button\r\n3.Input the details and select payment via credits\r\n9. 1.Meanwhile claim for the same order in PV side\r\n2.Select payment via credits\r\n10. Navigate to PVO renewal payment page and make payment for the instsallment and complete the process.\r\n11. Immediately navigate to PV application and try to complete the payment\r\n12. Verify the error message in PV, PVO logs",
        "expected": "1. Pre-Requisite should be satisfied\r\n2. User has to be logged in successfully\r\n3. The tickets has to be reserved\r\n4. Patron has to be selected\r\n5. System should display the Transaction Confirmation Number .\r\n6. Payment plan should be created successfully\r\n7. User should be able to login\r\n8. Actions should be performed\r\n9. Actions should be performed\r\n10. Payment should be completed\r\n11. Error message should be displayed\r\n12. 1.PV log should display error message with error code 10054\r\n2.PVO log should display error message with error code 319"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.50"
  },
  {
    "id": 30684059,
    "title": "Verify the concurrancy error message is displaying when multiple PVO renewals making a payment on the same PV recievables order at the same time_Package",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17552",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 101,
    "custom_is_automated": false,
    "custom_pv_category": 3,
    "custom_refs": "C65967",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.A Package should be available with perf accepted against renewals supplier\r\n2.Note down the PefrID\r\n3.A Patron should be available with credits\r\n2. Login to PV application\r\n3. 1. Select the event and patron\r\n2. Enter the number of tickets \r\n3. Select Buyer Type\r\n4.Select the delievery method\r\n5.Click on recievables tab and create your payment plan\r\n6.Click on apply\r\n4. Click on checkout\r\n5. Create a renewal Payment plan for the PerfID in maintenance site\r\n6. Login to PVO mytickets with the account\r\n7. 1.Navigate to ToDo list portal\r\n2.Click on renewal button\r\n3.Input the details and select payment via credits\r\n8. 1.Meanwhile claim for the same order in PV side\r\n2.Select payment via credits\r\n9. Navigate to PVO renewal payment page and make payment for the instsallment and complete the process.\r\n10. Immediately navigate to PV application and try to complete the payment\r\n11. Verify the error message in PV, PVO logs",
        "expected": "1. Pre-Requisite should be satisfied\r\n2. User has to be logged in successfully\r\n3. \r\n4. System should display the Transaction Confirmation Number .\r\n5. Payment plan should be created successfully\r\n6. User should be able to login\r\n7. Actions should be performed\r\n8. Actions should be performed\r\n9. Payment should be completed\r\n10. Error message should be displayed\r\n11. 1.PV log should display error message with error code 10054\r\n2.PVO log should display error message with error code 319"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.50"
  },
  {
    "id": 30684060,
    "title": "Verify the concurrancy error message is displaying when multiple PVO renewals making a payment on the same PV recievables order at the same time_Event",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17552",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 102,
    "custom_is_automated": false,
    "custom_pv_category": 3,
    "custom_refs": "C65968",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.An Event should be available with perf accepted against renewals supplier\r\n2.Note down the PefrID\r\n3.A Patron should be available with credits\r\n2. Login to PV application\r\n3. 1. Select the event and patron\r\n2. Enter the number of tickets \r\n3. Select Buyer Type\r\n4.Select the delievery method\r\n5.Click on recievables tab and create your payment plan\r\n6.Click on apply\r\n4. Click on checkout\r\n5. Create a renewal Payment plan for the PerfID in maintenance site\r\n6. Login to PVO mytickets with the account\r\n7. 1.Navigate to ToDo list portal\r\n2.Click on renewal button\r\n3.Input the details and select payment via credits\r\n8. 1.Meanwhile claim for the same order in PV side\r\n2.Select payment via credits\r\n9. Navigate to PVO renewal payment page and make payment for the instsallment and complete the process.\r\n10. Immediately navigate to PV application and try to complete the payment\r\n11. Verify the error message in PV, PVO logs",
        "expected": "1. Pre-Requisite should be satisfied\r\n2. User has to be logged in successfully\r\n3. \r\n4. System should display the Transaction Confirmation Number .\r\n5. Payment plan should be created successfully\r\n6. User should be able to login\r\n7. Actions should be performed\r\n8. Actions should be performed\r\n9. Payment should be completed\r\n10. Error message should be displayed\r\n11. 1.PV log should display error message with error code 10054\r\n2.PVO log should display error message with error code 319"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.50"
  },
  {
    "id": 30684061,
    "title": "Verify the concurrancy error message is displaying when multiple PVO renewals making a payment on the same PV reservation order at the same time_Event",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17552",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 103,
    "custom_is_automated": false,
    "custom_pv_category": 3,
    "custom_refs": "C65969",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.An Event should be available with perf accepted against renewals supplier\r\n2.Note down the PefrID\r\n3.A Patron should be available with credits\r\n2. Login to PV application\r\n3. 1. Select the event\r\n2. Enter the number of tickets \r\n3. Select Buyer Type\r\n4. Click Best Available button\r\n5.Click on the 'Reservation' link above the Subtotal in the Offer details\r\n6.click on set to reservation button\r\n4. 1. Type * in the Patron Portlet on the Ticket Sale Screen\r\n2. Click Find button\r\n3. Select a Patron by clicking on the \"+\" icon\r\n5. Click on checkout\r\n6. Create a renewal Payment plan for the PerfID in maintenance site\r\n7. Login to PVO mytickets with the account\r\n8. 1.Navigate to ToDo list portal\r\n2.Click on renewal button\r\n3.Input the details and select payment via credits\r\n9. 1.Meanwhile claim for the same order in PV side\r\n2.Select payment via credits\r\n10. Navigate to PVO renewal payment page and make payment for the instsallment and complete the process.\r\n11. Immediately navigate to PV application and try to complete the payment\r\n12. Verify the error message in PV, PVO logs",
        "expected": "1. Pre-Requisite should be satisfied\r\n2. User has to be logged in successfully\r\n3. The tickets has to be reserved\r\n4. Patron has to be selected\r\n5. System should display the Transaction Confirmation Number .\r\n6. Payment plan should be created successfully\r\n7. User should be able to login\r\n8. Actions should be performed\r\n9. Actions should be performed\r\n10. Payment should be completed\r\n11. Error message should be displayed\r\n12. 1.PV log should display error message with error code 10054\r\n2.PVO log should display error message with error code 319"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.50"
  },
  {
    "id": 30684062,
    "title": "Verify that the card Merchant admin DB allows entry of 148 chars for CVV and AVS",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17148",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 104,
    "custom_is_automated": false,
    "custom_pv_category": 24,
    "custom_refs": "C65970",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the database.\r\n2. 1.Verify that In database table CARD_MERCHANT, CVV_RESPONSES and AVS_RESPONSES are set to VARCHAR2(128 char).\r\n3. Select Logout .",
        "expected": "1. Database should be launched\r\n2. The VARCHAR2 should be set to limit 128 char.\r\n3. 1. User should be logged out"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.50"
  },
  {
    "id": 30684063,
    "title": "Verify that the card Merchant admin UI allows entry of 64 chars for CVV and AVS.",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17148",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 105,
    "custom_is_automated": false,
    "custom_pv_category": 24,
    "custom_refs": "C65971",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the PV application.\r\n2. Login as user using the following credentials:\r\nUsername: \r\nPassword: \r\n3. Select System Administration from the drop down\r\n4. Select Merchants tab\r\n5. Select Merchant Configuration as Card Merchant.\r\n6. 1.Input * as search criteria\n2.Click Find button\r\n7. Select a card Merchant.\r\n8. 1.Enter 64 Characters for AVS and CVV Response.\r\n9. Select Logout .",
        "expected": "1. Site should be launched\r\n2. User should be logged in\r\n3. System Administration page should be displayed to the user\r\n4. Card Servers and Card Merchants tab should be displayed\r\n5. CardMerchants Search page should be displayed\r\n6. Search results should be displayed.\r\n7. The cardmerchant's details should be displayed\r\n8. The user is able to enter 64 chars.\r\n9. 1. User should be logged out\n2. User should be navigated to the Login page"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.50"
  },
  {
    "id": 30684064,
    "title": "Verify that the default postal code value 13201 will not fail the credit card authentication",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17272",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 106,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65972",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-requisite:\n1.An event,patron should be available\r\n2. Login to PV with valid credentials\r\n3. 1.Navigate to to Ticket Sales portal\n2.Enter the Event and patron\n3.Enter the number of seats\n4.Click on Checkout\r\n4. 1.Select a Delivery method\r\n5. Select the payment method as Credit card.\r\nEnter the Required Fields\r\nEnter the Postal code as 13201\r\nClick on Accept payment\r\n6. Click on Checkout",
        "expected": "1. Event and patron should be Successfully created\r\n2. Login should be successful and the home page of the applcation should be launched\r\n3. User should be able to lock the seats succesfully and navigates to the cart\r\n4. Delivery method should be succesfuly assigned and should navigate to the payment page\r\n5. Credit card Authentication should not fail and Payment should be accepted\r\n6. Transaction should be completed succesfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.0.00"
  },
  {
    "id": 30684065,
    "title": "Verify that the postal code value set for the new property will fail the credit card authentication",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17272",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 107,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65973",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-requisite:\n1.An event,patron should be available\n2.A postal code value for the property dummy.cc.provider.postal.code.to.fail.avs should be set\r\n2. Login to PV with valid credentials\r\n3. 1.Navigate to to Ticket Sales portal\r\n2.Enter the Event and patron\r\n3.Enter the number of seats\r\n4.Click on Checkout\r\n4. 1.Select a Delivery method\r\n5. Select the payment method as Credit card.\nEnter the Required Fields\nEnter the Postal code set in prerequisite\nClick on Accept payment\r\n6. Select the payment method as Credit card.\nEnter the Required Fields\nEnter the Postal code other than the one set in prerequisite\nClick on Accept payment\r\n7. Click on Checkout",
        "expected": "1. 1.Event and patron should be Successfully created\n2.The property should be set to value\r\n2. Login should be successful and the home page of the applcation should be launched\r\n3. User should be able to lock the seats succesfully and navigates to the cart\r\n4. Delivery method should be succesfuly assigned and should navigate to the payment page\r\n5. Credit card Authentication should fail and an error should be shown\r\n6. Credit card Authentication should pass and payment should be accepted\r\n7. Transaction should be completed succesfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.0.00"
  },
  {
    "id": 30684066,
    "title": "Verify that the default postal code value 99999 will fail the credit card authentication",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17272",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 108,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65974",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-requisite:\n1.An event,patron should be available\r\n2. Login to PV with valid credentials\r\n3. 1.Navigate to to Ticket Sales portal\n2.Enter the Event and patron\n3.Enter the number of seats\n4.Click on Checkout\r\n4. 1.Select a Delivery method\r\n5. Select the payment method as Credit card.\nEnter the Required Fields\nEnter the Postal code as 99999\nClick on Accept payment",
        "expected": "1. Event and patron should be Successfully created\r\n2. Login should be successful and the home page of the applcation should be launched\r\n3. User should be able to lock the seats succesfully and navigates to the cart\r\n4. Delivery method should be succesfuly assigned and should navigate to the payment page\r\n5. Credit card Authentication should fail and an error should be shown"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.0.00"
  },
  {
    "id": 30684067,
    "title": "Verify that the user gets valid authorization error message while changing the CVV response code",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17246",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 109,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65975",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch the PV application\r\n2. Login using valid username and password.\r\n2. Go to system administration-->Merchants-->Select Card Merchants from the dropdown-->Change the CVV Response value for both 'protobase card holder present' and 'Protobase card holder not present'\r\nEx:-Change the value to 'Test'\r\n3. Go to application feature permissions-->select sales permissions-->select required for 'card not present security code level'\r\n4. Do a payment with a valid event and patron,\r\nSelect the payment method properly\r\n5. scenario-1\r\nSelect card present check box then click on accept payment\r\nscenario-2\r\nuncheck the card present check box\r\n6. check the card_response table in DB(PVQAF2)\r\n7. set background thread sleep time to 5 or 10 mins in application property to run background thead.\r\ncardResponse.refund.thread.interval.seconds=600\r\n8. check the card response status for reversed card response after defined thread sleep time.",
        "expected": "1. The login should be successful and the Home page of the application should get displayed.\r\n2. Card merchats should be updated successfully.\r\n3. Permission should be updated successfully\r\n4. User should able to do the mentioned steps\r\n5. In both scenarios an error message like \"card authorization error\" should displayed\r\n6. it should have two records one for auth with card result=failed another for reverse with card_response_status=UA and card_result=OK\r\n7. User should able to do the mentioned steps\r\n8. check the card response status for reversed card response after defined thread sleep time.(the status should  gets changed.)"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.30"
  },
  {
    "id": 30684068,
    "title": "Package-Verify whether the payment status in DB after payment reversal when partially paid initial transaction is Exchanged with a new Package",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17207",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 110,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C65976",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to the application using valid credentials\r\n2. Create an Package EVT1 with No Service Charge -SC1 .\nCreate Package EVT2 with Inclusive Service Charge.\r\n3. 1.Navigate to Ticket Sales.\n2.Perform a Receivable transaction with EVT1.(Partially make the payment)\r\n4. Navigate to Ticket Services.\r\n5. Perform and Exchange transaction with EVT2.\r\n6. 1.Navigate to Ticket Services.\n2.Take Payment tab and Click on the arrow button. \n3.Select Reverse the payment option.\n4.Reverse the Partial amount.\r\n7. Verify in DB whether ticket's payment status have the correct full (F), partial (P) or unpaid (U) statues.",
        "expected": "1. User logged in successfully.\r\n2. Packages created and associated with Inclusive Service Charge.\r\n3. Receivable transaction done.\r\n4. Ticket Service portal is loaded.\r\n5. Exchange done successfully.\r\n6. Payment is reversed successfully.\r\n7. The status of the tickets should be Partial.(P)."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.20"
  },
  {
    "id": 30684069,
    "title": "Package-Verify whether the payment status in DB after payment reversal when initial transaction has fully paid and partially paid orders.",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17207",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 111,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C65977",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to the application using valid credentials\r\n2. Create an Package EVT1 with Inclusive Service Charge -SC1\r\n3. 1.Navigate to Ticket Sales.\n2.Perform a Receivable transaction with EVT1.(Don't make the payment)\r\n4. Navigate to Ticket Services.\r\n5. 1.Take Payment tab and Click on the arrow button. \n2.Select Reverse the payment option.\n3.Reverse the Partial amount.\r\n6. Verify in DB whether ticket's payment status have the correct full (F), partial (P) or unpaid (U) statues.\r\n7. Verify in DB whether ticket's payment status have the correct full (F), partial (P) or unpaid (U) statues.\r\n8. Navigate to Ticket Services.\r\n9. Now partially pay the amount and Reverse the payment.\r\n10. Verify in DB whether ticket's payment status have the correct full (F), partial (P) or unpaid (U) statues.",
        "expected": "1. User logged in successfully.\r\n2. Package created and associated with Inclusive Service Charge.\r\n3. Receivable transaction done.\r\n4. Ticket Service portal is loaded.\r\n5. Payment is reversed successfully.\r\n6. The status of the tickets should be Partial.(P).\r\n7. The status of the tickets should be Unpaid(U).\r\n8. Ticket Service portal is loaded.\r\n9. Payment is reversed successfully.\r\n10. The status of the tickets should be Partial.(P)."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.20"
  },
  {
    "id": 30684070,
    "title": "Package-Verify whether the payment status in DB after payment reversal when initial transaction has multiple orders.",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17207",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 112,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C65978",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to the application using valid credentials\r\n2. Create an Package EVT1 with Inclusive Service Charge -SC1 .\nCreate Package EVT2 with no Service Charge.\r\n3. 1.Navigate to Ticket Sales.\n2.Perform a sales transaction with EVT1.\n3.Add offer EVT2.\n4.Complete Sale transaction.\r\n4. Navigate to Ticket Services.\r\n5. 1.Take Payment tab and Click on the arrow button. \n2.Select Reverse the payment option.\n3.Reverse the Full amount.\r\n6. Verify in DB whether ticket's payment status have the correct full (F), partial (P) or unpaid (U) statues.",
        "expected": "1. User logged in successfully.\r\n2. Package created and associated with Inclusive Service Charge.\r\n3. Sales transaction done.\r\n4. Ticket Service portal is loaded.\r\n5. Payment is reversed successfully.\r\n6. The status of the tickets should be Unpaid.(U)."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.20"
  },
  {
    "id": 30684071,
    "title": "Package-Verify whether the payment status in DB after payment reversal when initial transaction is fully paid.",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17207",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 113,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C65979",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to the application using valid credentials\r\n2. Create an Package EVT1 with Inclusive Service Charge -SC1\r\n3. 1.Navigate to Ticket Sales.\n2.Perform a sales transaction with EVT1.\r\n4. Navigate to Ticket Services.\r\n5. 1.Take Payment tab and Click on the arrow button. \n2.Select Reverse the payment option.\n3.Reverse the Full amount.\r\n6. Verify in DB whether ticket's payment status have the correct full (F), partial (P) or unpaid (U) statues.",
        "expected": "1. User logged in successfully.\r\n2. Package created and associated with Inclusive Service Charge.\r\n3. Sales transaction done.\r\n4. Ticket Service portal is loaded.\r\n5. Payment is reversed successfully.\r\n6. The status of the tickets should be Unpaid.(U)."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.20"
  },
  {
    "id": 30684072,
    "title": "Event-Verify whether the payment status in DB after payment reversal when partially paid initial transaction is Exchanged with a new event",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17207",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 114,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C65980",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to the application using valid credentials\r\n2. Create an Event EVT1 with No Service Charge -SC1 .\nCreate Event EVT2 with Inclusive Service Charge.\r\n3. 1.Navigate to Ticket Sales.\n2.Perform a Receivable transaction with EVT1.(Partially make the payment)\r\n4. Navigate to Ticket Services.\r\n5. Perform and Exchange transaction with EVT2.\r\n6. 1.Navigate to Ticket Services.\n2.Take Payment tab and Click on the arrow button. \n3.Select Reverse the payment option.\n4.Reverse the Partial amount.\r\n7. Verify in DB whether ticket's payment status have the correct full (F), partial (P) or unpaid (U) statues.",
        "expected": "1. User logged in successfully.\r\n2. Events created and associated with Inclusive Service Charge.\r\n3. Receivable transaction done.\r\n4. Ticket Service portal is loaded.\r\n5. Exchange done successfully.\r\n6. Payment is reversed successfully.\r\n7. The status of the tickets should be Partial.(P)."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.20"
  },
  {
    "id": 30684073,
    "title": "Event-Verify whether the payment status in DB after payment reversal when initial transaction has fully paid and partially paid orders.",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17207",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 115,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C65981",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to the application using valid credentials\r\n2. Create an Event EVT1 with Inclusive Service Charge -SC1\r\n3. 1.Navigate to Ticket Sales.\n2.Perform a Receivable transaction with EVT1.(Don't make the payment)\r\n4. Navigate to Ticket Services.\r\n5. 1.Take Payment tab and Click on the arrow button. \n2.Select Reverse the payment option.\n3.Reverse the Partial amount.\r\n6. Verify in DB whether ticket's payment status have the correct full (F), partial (P) or unpaid (U) statues.\r\n7. Verify in DB whether ticket's payment status have the correct full (F), partial (P) or unpaid (U) statues.\r\n8. Navigate to Ticket Services.\r\n9. Now partially pay the amount and Reverse the payment.\r\n10. Verify in DB whether ticket's payment status have the correct full (F), partial (P) or unpaid (U) statues.",
        "expected": "1. User logged in successfully.\r\n2. Event created and associated with Inclusive Service Charge.\r\n3. Receivable transaction done.\r\n4. Ticket Service portal is loaded.\r\n5. Payment is reversed successfully.\r\n6. The status of the tickets should be Partial.(P).\r\n7. The status of the tickets should be Unpaid(U).\r\n8. Ticket Service portal is loaded.\r\n9. Payment is reversed successfully.\r\n10. The status of the tickets should be Partial.(P)."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.20"
  },
  {
    "id": 30684074,
    "title": "Event-Verify whether the payment status in DB after payment reversal when initial transaction has multiple orders.",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17207",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 116,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C65982",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to the application using valid credentials\r\n2. Create an Event EVT1 with Inclusive Service Charge -SC1 .\nCreate Event EVT2 with no Service Charge.\r\n3. 1.Navigate to Ticket Sales.\n2.Perform a sales transaction with EVT1.\n3.Add offer EVT2.\n4.Complete Sale transaction.\r\n4. Navigate to Ticket Services.\r\n5. 1.Take Payment tab and Click on the arrow button. \n2.Select Reverse the payment option.\n3.Reverse the Full amount.\r\n6. Verify in DB whether ticket's payment status have the correct full (F), partial (P) or unpaid (U) statues.",
        "expected": "1. User logged in successfully.\r\n2. Event created and associated with Inclusive Service Charge.\r\n3. Sales transaction done.\r\n4. Ticket Service portal is loaded.\r\n5. Payment is reversed successfully.\r\n6. The status of the tickets should be Unpaid.(U)."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.20"
  },
  {
    "id": 30684075,
    "title": "Event-Verify whether the payment status in DB after payment reversal when initial transaction is fully paid.",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17207",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 117,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C65983",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to the application using valid credentials\r\n2. Create an Event EVT1 with Inclusive Service Charge -SC1\r\n3. 1.Navigate to Ticket Sales.\n2.Perform a sales transaction with EVT1.\r\n4. Navigate to Ticket Services.\r\n5. 1.Take Payment tab and Click on the arrow button. \n2.Select Reverse the payment option.\n3.Reverse the Full amount.\r\n6. Verify in DB whether ticket's payment status have the correct full (F), partial (P) or unpaid (U) statues.",
        "expected": "1. User logged in successfully.\r\n2. Event created and associated with Inclusive Service Charge.\r\n3. Sales transaction done.\r\n4. Ticket Service portal is loaded.\r\n5. Payment is reversed successfully.\r\n6. The status of the tickets should be Unpaid.(U)."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.20"
  },
  {
    "id": 30684076,
    "title": "Verify that unique reference number is shown for the sunsequent transactions done  using credit cards",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16663",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 118,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65984",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Set Card Present Merchant as Protobase Card Holder Present and Card Not Present Merchant as Card Holder Not Present for VISA-Visa payment methodfor Arts Supplier\r\n\r\n2.Set Card Present Merchant as Protobase Card Holder Present and Card Not Present Merchant as Card Holder Not Present for MSTR-Mastercard payment methodfor Arts Supplier\r\n2. 1.Select an event and lock the seats using a patron\r\n2.Select the delivery method and navigate to Payment page\r\n3. Make the payment using a credit card(Visa or master) and checkout\r\n4. Click on Confirmation Number and naviagte to Ticket Services portal\r\n5. Click on payemnt tab\r\n6. Click on 'Int' link\r\n7. Verify the reference number displayed\r\n8. Again perform transactions using credit card and verify that unique refernce number is displayed for each transaction",
        "expected": "1. set up should be done\r\n2. Payment page is displayed\r\n3. Confirmation page is displayed\r\n4. Ticket Services portal is displayed\r\n5. Payment details are displayed correctly\r\n6. Authorization detail window is displayed\r\n7. Note the reference number\r\n8. Unique reference number should be shown for each transaction"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.30"
  },
  {
    "id": 30684077,
    "title": "Verify Payment methods Details page is loading properly while clicking on the hyper link of type Account Credit in the Payment method search results.",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16771",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 119,
    "custom_is_automated": false,
    "custom_pv_category": 24,
    "custom_refs": "C65985",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV aaplication\r\n2. Login as user USER to the application\r\n3. Open Payment Methods Portal from System Setup\r\n4. 1. Click Find button.\r\n2. Verify all active available payment methods\r\n5. 1.Click on Account Credit  type Payment Method link\r\nFor eg : \"CRDT\"",
        "expected": "1. The application should be launched successfully.\r\n2. USER should be able to login successfully.\r\n3. Payment Methods Portal should be opened from System Setup\r\n4. 1. The list of payment methods should be displayed.\r\n5. Page should load properly.\r\nPayment methods Details page should be opened while clicking on the hyper link in the search results"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.30"
  },
  {
    "id": 30684078,
    "title": "Verify Payment methods Details page is loading properly while clicking on the hyper link of type Gift card in the Payment method search results.",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16771",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 120,
    "custom_is_automated": false,
    "custom_pv_category": 24,
    "custom_refs": "C65986",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV aaplication\r\n2. Login as user USER to the application\r\n3. Open Payment Methods Portal from System Setup\r\n4. 1. Click Find button.\r\n2. Verify all active available payment methods\r\n5. 1.Click on Gift card type Payment Method link\r\nFor eg : \"Blackhawk Gift Card\"",
        "expected": "1. The application should be launched successfully.\r\n2. USER should be able to login successfully.\r\n3. Payment Methods Portal should be opened from System Setup\r\n4. 1. The list of payment methods should be displayed.\r\n5. Page should load properly.\r\nPayment methods Details page should be opened while clicking on the hyper link in the search results"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.30"
  },
  {
    "id": 30684079,
    "title": "Verify Payment methods Details page is loading properly while clicking on the hyper link of type Credit card in the Payment method search results.",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16771",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 121,
    "custom_is_automated": false,
    "custom_pv_category": 24,
    "custom_refs": "C65987",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV aaplication\r\n2. Login as user USER to the application\r\n3. Open Payment Methods Portal from System Setup\r\n4. 1. Click Find button.\r\n2. Verify all active available payment methods\r\n5. 1.Click on Credit card type Payment Method link\r\nFor eg : \"Amex Card\"",
        "expected": "1. The application should be launched successfully.\r\n2. USER should be able to login successfully.\r\n3. Payment Methods Portal should be opened from System Setup\r\n4. 1. The list of payment methods should be displayed.\r\n5. Page should load properly.\r\nPayment methods Details page should be opened while clicking on the hyper link in the search results"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.30"
  },
  {
    "id": 30684080,
    "title": "Verify whether correct data is captured in Merchant_Id and Merchant_Number columns when CC fails for a Reoffer transaction",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16646",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 122,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65988",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. System should contain an Event EVT1 and Patron P1.\r\n2. Login to PV application.\r\n3. Perform a Reoffer transaction in which Credit card is used to pay the amount, such that the transaction Fails\r\n4. Navigate to Ticket Services\nNote the Merchant ID, Merchant number and Reference number in ticket services\r\n5. Login to PV DB as a valid user.\r\n6. Provide the query\nSelect * from PTSE1P.card_response cr where cr.reference_number = 'Reference number'\r\n7. Verify whether correct data is captured in Merchant_Id and Merchant_Number columns when CC fails",
        "expected": "1. \r\n2. Logged in successfully.\r\n3. CC Transaction is failed.\r\n4. Details are noted.\r\n5. User logged in successfully\r\n6. Data is retrieved.\r\n7. The data captured correctly.\n\nThe MERCHANT_ID number is showing in the MERCHANT_ID field in the failed transactions, \nand the MERCHANT_ID field value should be the MERCHANT_ID value."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.30"
  },
  {
    "id": 30684081,
    "title": "Verify whether correct data is captured in Merchant_Id and Merchant_Number columns when CC fails for a Partially paid transaction",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16646",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 123,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65989",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. System should contain an Event EVT1 and Patron P1.\r\n2. Login to PV application.\r\n3. Perform a Receivable transaction in which Credit card is used to pay the partial amount, such that the transaction Fails\r\n4. Navigate to Ticket Services\nNote the Merchant ID, Merchant number and Reference number in ticket services\r\n5. Login to PV DB as a valid user.\r\n6. Provide the query\nSelect * from PTSE1P.card_response cr where cr.reference_number = 'Reference number'\r\n7. Verify whether correct data is captured in Merchant_Id and Merchant_Number columns when CC fails",
        "expected": "1. \r\n2. Logged in successfully.\r\n3. CC Transaction is failed.\r\n4. Details are noted.\r\n5. User logged in successfully\r\n6. Data is retrieved.\r\n7. The data captured correctly.\n\nThe MERCHANT_ID number is showing in the MERCHANT_ID field in the failed transactions, \nand the MERCHANT_ID field value should be the MERCHANT_ID value."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.30"
  },
  {
    "id": 30684082,
    "title": "Verify whether correct data is captured in Merchant_Id and Merchant_Number columns when CC fails for a Sales transaction",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16646",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 124,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65990",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. System should contain an Event EVT1 and Patron P1.\r\n2. Login to PV application.\r\n3. Perform a sales transaction using Credit card, such that the transaction Fails\r\n4. Navigate to Ticket Services\nNote the Merchant ID, Merchant number and Reference number in ticket services\r\n5. Login to PV DB as a valid user.\r\n6. Provide the query\nSelect * from PTSE1P.card_response cr where cr.reference_number = 'Reference number'\r\n7. Verify whether correct data is captured in Merchant_Id and Merchant_Number columns when CC fails",
        "expected": "1. \r\n2. Logged in successfully.\r\n3. CC Transaction is failed.\r\n4. Details are noted.\r\n5. User logged in successfully\r\n6. Data is retrieved.\r\n7. The data captured correctly.\n\nThe MERCHANT_ID number is showing in the MERCHANT_ID field in the failed transactions, \nand the MERCHANT_ID field value should be the MERCHANT_ID value."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.30"
  },
  {
    "id": 30684083,
    "title": "Verify that the card type vlaue for the payment method is null even after changing the Status of Supplier Context for a Non-CC payment method",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16454",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 125,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65991",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to the PV application using valid credentials.\r\n2. Navigates to the Payment Method and Search for the payment methods.\r\n3. Select a payment method - cash or check type.\r\n4. Verify  the value of card_type_code for this payment in the DB.\r\nSELECT pm.card_type_code\r\n     , pm.payment_type_code\r\n     , pm.payment_method_id\r\n     , pm.payment_method_code\r\n  FROM payment_method pm\r\n     , (SELECT ct.card_type_code card_type_code\r\n             , COUNT(DISTINCT pm.payment_type_code)\r\n          FROM card_type ct, payment_method pm \r\n         WHERE ct.card_type_code = pm.card_type_code\r\n         GROUP BY ct.card_type_code \r\n        HAVING COUNT(DISTINCT pm.payment_type_code) > 1) tmp \r\nWHERE pm.card_type_code = tmp.card_type_code \r\nORDER BY pm.card_type_code, pm.payment_type_code, pm.payment_method_code, pm.payment_method_id\r\n5. Navigate to the Payment method and change the status on the associated supplier context Active to Inactive.\r\n6. Verify the value of card_type_code for this payment in the DB again.\r\n7. Repeat the steps for another non - CC/ Gift card payment methods",
        "expected": "1. User should be logged in successfully.\r\n2. Search results should be displayed.\r\n3. A payment method should be opened.\r\n4. In DB, card_type_code should be null\r\n5. Status should be changed as Active to Inactive.\r\n6. In DB, still card_type_code should be null\r\n7. In DB, still card_type_code should be null"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.30"
  },
  {
    "id": 30684084,
    "title": "Verify whether the application is working under secure network-HTTPS",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16245",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 126,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65992",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login as a valid user\r\n2. Launch the application using http.\r\n3. Navigate to Ticket Sales portal.\r\n4. Verify whether the following portals are also launched automatically using https\r\n1.      Ticket Services\r\n2.      Patron Management\r\n3.      Will Call Service\r\n4.      Utilities\r\n5.      User Management",
        "expected": "1. Logged in successfully\r\n2. The application should be launched in http.\r\n3. The Ticket Sales portal will be automatically launched in https.\r\n4. The application should succesfully launch the portals in https."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30684085,
    "title": "Verify whether the decrypted last four digits of the credit card number is displayed in Ticket Sales, Patron Management portals.",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16245",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 127,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65993",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Login as box office user\n2. Select ticket sales from the drop down\r\n2. 1. Input the  event code\n2. Click on find button\r\n3. 1, Input required n umber of seats\n2. Click on best available button\r\n4. 1. Input patron name\n2. Click on find button\n3. Click on set as patron button\r\n5. 1. Click on payment tab\r\n2. Select master card\r\n3. Input card number or Swipe the card\r\n4. Verify that the card number is masked on either of the below actions\r\n\r\nTab out to next field\r\nMouse click on next field\r\nHitting enter key\r\n6. Verify whether last 4 digits of credit card number is displayed from Patron Management portal and Ticket Sales portal",
        "expected": "1. Ticket ales should be displayed\r\n2. Ticket sale portal should be displayed with the event selected\r\n3. The patron cart should be selected\r\n4. Patron should get selected\r\n5. The card number should be masked on either of the actions\r\n6. The last 4 digit of the credit card should be displayed from Patron Management portal and Ticket Sales portal"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30684086,
    "title": "Verify whether the credit card number is encrypted in payment table",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16245",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 128,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65994",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Login as box office user\n2. Select ticket sales from the drop down\r\n2. 1. Input the  event code\n2. Click on find button\r\n3. 1, Input required n umber of seats\n2. Click on best available button\r\n4. 1. Input patron name\n2. Click on find button\n3. Click on set as patron button\r\n5. 1. Click on payment tab\n2. Select master card\n3. Input card number or Swipe the card\n4. Verify that the card number is masked on either of the below actions\n\nTab out to next field\nMouse click on next field\nHitting enter key\r\n6. Login to Database and check payment table whether the credit card number is encrypted",
        "expected": "1. Ticket ales should be displayed\r\n2. Ticket sale portal should be displayed with the event selected\r\n3. The patron cart should be selected\r\n4. Patron should get selected\r\n5. The card number should be masked on either of the actions\r\n6. Credit card number should be encrypted in the payment table"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30684087,
    "title": "Verify the credit card number masking in Ticket sale",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16245",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 129,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65995",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Login as box office user\n2. Select ticket sales from the drop down\r\n2. 1. Input the  event code\n2. Click on find button\r\n3. 1, Input required n umber of seats\n2. Click on best available button\r\n4. 1. Input patron name\n2. Click on find button\n3. Click on set as patron button\r\n5. 1. Click on payment tab\r\n2. Select master card\r\n3. Input card number or Swipe the card\r\n4. Verify that the card number is masked on either of the below actions\r\n\r\nTab out to next field\r\nMouse click on next field\r\nHitting enter key\r\n6. Select Ticket Services\r\n1. Select credit card from search for drop down\r\n2. Input credit card number\r\n3. Verify that the card number is masked on either of the below actions\r\n\r\nTab out to next field\r\nMouse click on next field\r\nHitting enter key\r\n\r\nAlso Verify card number masking in order Details and Transaction details.",
        "expected": "1. Ticket ales should be displayed\r\n2. Ticket sale portal should be displayed with the event selected\r\n3. The patron cart should be selected\r\n4. Patron should get selected\r\n5. The card number should be masked on either of the actions\r\n6. The card number should be masked on either of the actions"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.10"
  },
  {
    "id": 30684088,
    "title": "Payment admins - no longer have All supplier option - prevents access to payment method  if supplier not yet assigned",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16118",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 130,
    "custom_is_automated": false,
    "custom_pv_category": 24,
    "custom_refs": "C65996",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PVNG application\r\n2. Create new Payment Method. But Do NOT assign a supplier specific context to the new delivery method.\r\n3. Search for the payment Method Created.\r\n4. Log out",
        "expected": "1. PVNG application launched successfully.\r\n2. New payment Method should be created successfully.\r\n3. The created payment Method should be displayed in the search result.\r\n4. Application should be logged out successfully."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.00"
  },
  {
    "id": 30684089,
    "title": "Verify whether the Card Type is displayed in the ascending alphabetical Order in the payment method if the card type is changed to INACTIVE",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-15321",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 131,
    "custom_is_automated": false,
    "custom_pv_category": 24,
    "custom_refs": "C65997",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV application\r\n2. 1. System Setup -> System Administration\n2. Select the Code List as Card Type and Click on New\n3. Provide the Card Type name as Card1 and the other Necessary details, Select Active and Click on Apply Changes\r\n3. 1. System Setup -> Payment Methods\n2. Click on New\n3. Provide all the Necessary details\n4. Select Payment Type as Credit card \n5. Select the Card Type as Card1 and Click on Apply Changes\r\n4. 1. Navigate to New Card Type\n2. Select the Status as \"Inactive\" and apply Changes\r\n5. Verify the Card List Type\r\n6. Click on Log Out",
        "expected": "1. Launch PVNG using the Following Credentials.\n\n\r\n2. New Card Type should be created\r\n3. New Payment Method should be created with the New Card Type \"Card1\" \n\n2. All the Card Type List should be in Ascending Alphabetical Order\r\n4. New Card Type should be Inactivated\r\n5. All the Card Type List should be in Ascending Alphabetical Order and the New Card Type should not be available in the Payment Method\r\n6. User Should be able to Loged off from the Application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.2.00"
  },
  {
    "id": 30684090,
    "title": "Verify Payment Plan drop down is empty while trying to reschedule, consolidate receivables even with accessible payment plans at package, event, season access levels",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-15327",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 132,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C65998",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Create a Season\r\n2. Create a Event with season created above\r\n3. Create a Package with season created above\r\n4. Create a Payment plan and assign it to Event, Package and Season Access levels\r\n2. Login to PVNG applicartion using the following credentials:\nhttp://irutapppvn54.back.tickets.com:18080/portal\nUsrname: \nPassword:\r\n3. 1. Navigate to Ticket Services\n2. Input patron &  # of Tickets\n3. Select the delivery Method\n4. Creat a Receivable with the Payment plan Created above\n5. Complete the Transaction\r\n4. 1. Navigate to Ticket Services\n2. Select Receivables tab\n3. Click on Reschedule\n4. Click on Payment Plan\r\n5. Verify the Payment plan Drop down list for the Package\r\n6. Repeat Steps from 2 to 4 for Event Sale\r\n7. Log off from the application",
        "expected": "1. User should able to create.\r\n2. The PV application has to Display\r\n3. User should able to complete the receivable transaction\r\n4. User should able to perform the actions\r\n5. List of payment plan for the package should get displayed\r\n6. List of payment plan for the Event should get displayed\r\n7. User should able to logoff from the application"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.2.00"
  },
  {
    "id": 30684091,
    "title": "Verfify whether the Text box to search the  General Ledger number field is available",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-14935",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 133,
    "custom_is_automated": false,
    "custom_pv_category": 8,
    "custom_refs": "C65999",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to PV application\r\n2. Click on new button\r\n3. Click on the General Ledger Number Search icon\r\n4. Verfify whetherthe text box to search  the General Ledger number  field is available",
        "expected": "1. User should be login to PV application\r\n2. payment method portal should be displayed\r\n3. General Ledger Number  search window shoud be displayed\r\n4. The  text box to search  General Ledger number field should be available"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.2.00"
  },
  {
    "id": 30684092,
    "title": "Verify whether CARD_RESULT_NMBR column is added to CARD_RESULT table",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-14860",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 134,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66000",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Squirrel SQL\r\n2. Connect to PVQAF3\r\n3. Select Table CARD_RESULT from tables\r\n4. Verify whether the column CARD_RESULT_NMBR is present in the CARD_RESULT table\r\n5. Verfiy whether the following fields are present in the CARD_RESULT_NMBR column\r\n00 -      OK,\r\n01 -      DECLINED,\r\n02 -      CALL_AUTH_CENTER,\r\n03 -      GENERAL_ERROR,\r\n04 -      AVS_FAILED,\r\n05 -      COMMS_FAILED,\r\n06 -      BAD_CARD_HOLDER,\r\n07 -      BAD_CARD_NUMBER,\r\n08 -      BAD_START_DATE,\r\n09 -      BAD_EXPIRY_DATE,\r\n10 -      BAD_ISSUE_NUMBER,\r\n11 -      BAD_CARD_SOURCE,\r\n12 -      BAD_TRANSACTION_SOURCE,\r\n13 -      BAD_AMOUNT,\r\n14 -      BAD_MERCHANT_ID,\r\n15 -      BAD_SERVER_ID,\r\n16 -      BAD_TRANSACTION_CODE,\r\n17 -      AUTH_REQUIRED,\r\n18 -      NETWORK_ERROR,\r\n19 -      CVV_FAILED,       \r\n20 -      PIN_FAILED,\r\n21 -      INSUFFICIENT_FUNDS, //for gift card\r\n22 -      BAD_AUTH_AMOUNT,\r\n23 -      BAD_TRANSACTION_STATUS,\r\n24 -      TOO_MANY_REQUESTS,\r\n25 -      TOO_MANY_ERRORS,\r\n26 -      NETWORK_NO_RESPONSE;\r\n6. Verify whether the type of CARD_RESULT_NUMBR is VARCHAR2",
        "expected": "1. SQL squirrel should be launched successfully\r\n2. User should be connected to DF of PVQAF3\r\n3. CARD_RESULT table should be selected successfully\r\n4. CARD_RESULT_NMBR should be present in the CARD_RESULT table\r\n5. The following fields should be present in the CARD_RESULT_NMBR column:\r\n00 -      OK,\r\n01 -      DECLINED,\r\n02 -      CALL_AUTH_CENTER,\r\n03 -      GENERAL_ERROR,\r\n04 -      AVS_FAILED,\r\n05 -      COMMS_FAILED,\r\n06 -      BAD_CARD_HOLDER,\r\n07 -      BAD_CARD_NUMBER,\r\n08 -      BAD_START_DATE,\r\n09 -      BAD_EXPIRY_DATE,\r\n10 -      BAD_ISSUE_NUMBER,\r\n11 -      BAD_CARD_SOURCE,\r\n12 -      BAD_TRANSACTION_SOURCE,\r\n13 -      BAD_AMOUNT,\r\n14 -      BAD_MERCHANT_ID,\r\n15 -      BAD_SERVER_ID,\r\n16 -      BAD_TRANSACTION_CODE,\r\n17 -      AUTH_REQUIRED,\r\n18 -      NETWORK_ERROR,\r\n19 -      CVV_FAILED,       \r\n20 -      PIN_FAILED,\r\n21 -      INSUFFICIENT_FUNDS, //for gift card\r\n22 -      BAD_AUTH_AMOUNT,\r\n23 -      BAD_TRANSACTION_STATUS,\r\n24 -      TOO_MANY_REQUESTS,\r\n25 -      TOO_MANY_ERRORS,\r\n26 -      NETWORK_NO_RESPONSE;\r\n6. The type of CARD_RESULT_NUMBR should be VARCHAR2"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.2.00"
  },
  {
    "id": 30684093,
    "title": "Verify the Payment status of tickets after reducing the service charge amount of a Receivable Order to ZERO if the remaining amount of this receivbale order is already paid off partially",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-14545",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 135,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C66001",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.A delivery service charge SC1 of calculation rule 'per seat' should be available for a delivery method DM1\r\n\r\n2.Perform a Receivable Transaction for seats of any event with DM1 selected as delivery method. (Receivable should be craeted for the entire amount of thsi order)\r\n3.Note down the Order ID\r\n\r\n(This Receivable order should have the delivery service charge SC1 should be available for this order\r\n\r\n4.Note down the amount corresponding to the delivery service SC1 in this order\r\n2. Launch PV Application\r\n3. Login to the Application using suitable credentials\r\n4. 1.navigate to Ticket Services\r\n2.search and select the Receivable order created in Pre Requisite 1\r\n5. In Ticket service portal, select the Cash Receipt option from the combo box on the top left corner.\r\n6. 1.Enter a part of amount of the order after excluding the delivery service charge amount in the 'Amount' text box in the 'pay' sub tab under RECEIVABLES tab\r\n2.Click APPLY\r\n3.Navigate to PAYMENT tab\r\n4.select a payment method for this amount\r\n5.Click ACCEPT PAYMENT\r\n7. 1. Navigate to Ticket services portal.\r\n2.select the order again\r\n3.Verify the sales Balance amount for this order\r\n8. 1.Navigate to Receivables tab\r\n2.Click the DETAILS option to display the Service charge details window\r\n3.Select the delivery service charge mentioned above\r\n4.Click EDIT\r\n9. 1.Click the EDIT icon against this delivery service charge\r\n2.Enter the new amaount for tshi charge as ZERO\r\n3.Click UPDATE\r\n4.Click CHECKOUT and complete the Transaction\r\n10. 1. Navigate to Ticket services portal.\r\n2.select the order again\r\n3.Verify the sales Balance amount for this order\r\n11. 1.Launch the squirel DB tool\r\n2.Login using suitable credentials\r\n3.Execute the query and verify the payment status of the tickets in the order mentioned above",
        "expected": "1. A Receivable Order should be available with a delivery service charge.\r\n2. PV Application should be launched successfully.\r\n3. Login should be successful\r\n4. Order Details should be displayed to the user\r\n5. User should be navigated to the cart where he can make the payment.\r\n\r\nUser should be navigated to to the 'Pay' sub tab under RECEIVABLES tab\r\n6. User should be able to pay a part of the Receivable successfully.\r\n7. Sales Balance for this order should  be reduced as a part of thsi amount is paid off.\r\n\r\nThe Sales balance amount should be greater than the delivery service charge amount\r\n8. User should be navigated to financial cart for service charge editing\r\n9. Delivery service charge should be reduced to ZERO and the Transaction should be completed successfully\r\n10. The delivery service charge amount should get reduced from the sales balance for this order\r\n11. The payment status of the tickets in thsi order should be \"P'' indicating that the tickets are only partially paid"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.30"
  },
  {
    "id": 30684094,
    "title": "Verify whether payment plan code not accepting  greater than 10 characters",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-13206",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 136,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66002",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV Application.\r\n2. Login as bouser\r\n3. Navigate to Supplier Administration portal.\r\n4. Navigate to Payment Plans tab.\r\n5. Click on New button to create a new payment plan.\r\n6. Enter a 11 digit code and other mandatory fields.\r\n7. Reenter the code and make it 10 digits and Click on Setup Installments button.\r\n8. Click on Apply changes after filling all mandatory informations.",
        "expected": "1. PV Application should be launched successfully\r\n2. Login should be successful\r\n3. Supplier Administration portal is displayed.\r\n4. Payment Plans portal is displayed.\r\n5. A screen to enter the details of a new payment plan is displayed.\r\n6. Cursor will not proceed more than 10 digit code\r\n7. Installment Set ups details are displayed.\r\n8. The New payment plan should get Saved with 10 digits code."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.2.00"
  },
  {
    "id": 30684095,
    "title": "Verify whether payment plan code accepts less than 10 characters",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-13206",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 137,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66003",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV Application.\r\n2. Login as bouser\r\n3. Navigate to Supplier Administration portal.\r\n4. Navigate to Payment Plans tab.\r\n5. Click on New button to create a new payment plan.\r\n6. Enter a 9 digit code and other mandatory fields.\r\n7. Click on Setup Installments button.\r\n8. Click on Apply changes after filling all mandatory informations.",
        "expected": "1. PV Application should be launched successfully\r\n2. Login should be successful\r\n3. Supplier Administration portal is displayed.\r\n4. Payment Plans portal is displayed.\r\n5. A screen to enter the details of a new payment plan is displayed.\r\n6. System accepts 9 digit code.\r\n7. Installment Set ups details are displayed.\r\n8. The New payment plan should get Saved with 13 digits code."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.2.00"
  },
  {
    "id": 30684096,
    "title": "Verify whether payment plan code accepts 10 characters",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-13206",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 138,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66004",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV Application.\r\n2. Login as bouser\r\n3. Navigate to Supplier Administration portal.\r\n4. Navigate to Payment Plans tab.\r\n5. Click on Setup Installments button.\r\n6. Enter a 10 digit code and other mandatory fields.\r\n7. Click on New button to create a new payment plan.\r\n8. Click on Apply changes after filling all mandatory informations.",
        "expected": "1. PV Application should be launched successfully\r\n2. Login should be successful\r\n3. Supplier Administration portal is displayed.\r\n4. Payment Plans portal is displayed.\r\n5. Installment Set ups details are displayed.\r\n6. System accepts 10 digit code.\r\n7. A screen to enter the details of a new payment plan is displayed.\r\n8. The New payment plan should get Saved with 10 digits code."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.2.00"
  },
  {
    "id": 30684097,
    "title": "Verify the Payment status of tickets after reducing the service charge amount of a Receivable Order to ZERO if the remaining amount of this receivbale order is already paid off fully",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-14545",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 139,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C66005",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.A delivery service charge SC1 of calculation rule 'per seat' should be available for a delivery method DM1\r\n\r\n2.Perform a Receivable Transaction for seats of any event with DM1 selected as delivery method. (Receivable should be craeted for the entire amount of thsi order)\r\n3.Note down the Order ID\r\n\r\n(This Receivable order should have the delivery service charge SC1 should be available for this order\r\n\r\n4.Note down the amount corresponding to the delivery service SC1 in this order\r\n2. Launch PV Application\r\n3. In Ticket service portal, select the Cash Receipt option from the combo box on the top left corner.\r\n4. 1.Enter the amount of the order after excluding the delivery service charge amount in the 'Amount' text box in the 'pay' sub tab under RECEIVABLES tab\r\n2.Click APPLY\r\n3.Navigate to PAYMENT tab\r\n4.select a payment method for this amount\r\n5.Click ACCEPT PAYMENT\r\n5. 1. Navigate to Ticket services portal.\r\n2.select the order again\r\n3.Verify the sales Balance amount for this order\r\n6. 1.Navigate to Receivables tab\r\n2.Click the DETAILS option to display the Service charge details window\r\n3.Select the delivery service charge mentioned above\r\n4.Click EDIT\r\n7. 1.Click the EDIT icon against this delivery service charge\r\n2.Enter the new amaount for tshi charge as ZERO\r\n3.Click UPDATE\r\n4.Click CHECKOUT and complete the Transaction\r\n8. Login to the Application using suitable credentials\r\n9. 1.navigate to Ticket Services\r\n2.search and select the Receivable order created in Pre Requisite 1\r\n10. 1. Navigate to Ticket services portal.\r\n2.select the order again\r\n3.Verify the sales Balance amount for this order\r\n11. 1.Launch the squirel DB tool\r\n2.Login using suitable credentials\r\n3.Execute the query and verify the payment status of the tickets in the order mentioned above",
        "expected": "1. A Receivable Order should be available with a delivery service charge.\r\n2. PV Application should be launched successfully.\r\n3. User should be navigated to the cart where he can make the payment.\r\n\r\nUser should be navigated to to the 'Pay' sub tab under RECEIVABLES tab\r\n4. User should be able to pay the Receivable successfully. (Paid amount does not include the delivery service charge)\r\n5. Sales Balance for this order should now equal the delivery service charge amount\r\n6. User should be navigated to financial cart for service charge editing\r\n7. Delivery service charge should be reduced to ZERO and the Transaction should be completed successfully\r\n8. Login should be successful\r\n9. Order Details should be displayed to the user\r\n10. Sales Balance for this order should now become ZERO\r\n11. The payment status of the tickets in thsi order should be \"F'' indicating that the tickets are fully  paid"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.30"
  },
  {
    "id": 30684098,
    "title": "The receivable tabs display",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-14619",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 140,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66006",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-requisite:\r\n1. Take the Application Feature Permission and set \"Patron Permission\" to \"NO address\" required. \r\n2.Create a patron without address\r\n2. Navigate to ticket sales portal.\r\n3. Search for the patron created without address.\r\n4. Select an event and navigate to the cart.\r\n5. Navigate to the receivable tab to create receivables.\r\n6. Check the On File combo.\r\n7. Check whether checkbox \"Use current address on Order\" is displayed.\r\n8. check whether \"Apply Receivable\" button was disable  and click the payment tab\r\n9. enter the payment and click checkout button\r\n10. click \"logout\" button",
        "expected": "1. A patron with out address is created successfully.\r\n2. Ticket Sales portal is displayed.\r\n3. Patron is selected.\r\n4. Cart is displayed with out any error.\r\n5. Create receivable tab is displayed with all its options.\r\n1.Billing Info\r\n2.Payment Plan\r\n3.Custom Plan\r\n6. OnFile combo should be disabled\r\n7. Check box \"Use current address on Order\" is not displayed, since the patron selected has no address.\r\n8. application should navigate to payment tab\r\n9. transaction should complete and a confirmation number display to the user\r\n10. application should logged out"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.02"
  },
  {
    "id": 30684099,
    "title": "Province is required error message is displayed for country other than USA for credit card payment method",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-14604",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 141,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66007",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to PVNG application\r\n2. Select Patron Permissions option from the combo box.\r\n3. Navigate to Application Features Permission Portal.\r\n4. Select a Channel and set the Patron Contact Address as \"No address required\" and click on Apply changes button.\r\n5. Go to Ticket sales and create a Patron with no address.\r\n6. Perform a transaction with this new patron created and navigate to cart.\r\n7. In the payment tab select the payment method as credit card.\r\n8. Insert Province and Check whether error message 'Province is required' is displayed for that country.\r\n9. Change the country to any other country other than USA.\r\n10. Select the blank option in ON FILE.",
        "expected": "1. PVNG application should be loaded successfully.\r\n2. User is able to select the Patron Permissions option from the combo box.\r\n3. Application Features Permission Portal is loaded successfully.\r\n4. The change made is saved successfully.\r\n5. Patron is created successfully.\r\n6. Cart is loaded successfully.\r\n7. The credit card payment page is loaded.\r\n8. Province is required message should not be displayed.\r\n9. System accepts the change.\r\n10. Note that the other address fields should get removed."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.30"
  },
  {
    "id": 30684100,
    "title": "Verify whether General Ledger Number can be assigned to Payment Voucher payment method",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-14508",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 142,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66008",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV application using the following url:\r\n2. Login using the relevant user login credentials:\n\npassword:\r\n3. Navigate to Payment Methods  portal by select the same from the drop down.\r\n4. Click New button\r\n5. Input the following details:\n1.Code\n2.Description\n3.Public description\n4.Payment Type\n5.Card Type if applicable\n6.Display Order\n7.Status\r\n6. Click Apply Changes button\r\n7. Verify whether user is able to input a General Ledger Number\r\n8. Select logout from the drop down",
        "expected": "1. Application should be launched successfully with the login page\r\n2. Login should be successful and home page should be displayed\r\n3. Payment Methods  portal should be displayed\r\n4. User should be navigated to select supplier page\r\n5. User should be able to input details\r\n6. The payment method of type account credit should be created\r\n7. Search icon should not be displayed against General Ledger Number and user should not be able to input a General Ledger Number for Account credit payment method\r\n8. user should be logged out successfully and login screen should be displayed"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.30"
  },
  {
    "id": 30684101,
    "title": "Verify whether General Ledger Number can be assigned to Account Credit payment method",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-14508",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 143,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66009",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV application using the following url:\r\n2. Login using the relevant user login credentials:\n\npassword:\r\n3. Navigate to Payment Methods  portal by select the same from the drop down.\r\n4. Click New button\r\n5. Input the following details:\n1.Code\n2.Description\n3.Public description\n4.Payment Type\n5.Card Type if applicable\n6.Display Order\n7.Status\r\n6. Click Apply Changes button\r\n7. Verify whether user is able to input a General Ledger Number\r\n8. Select logout from the drop down",
        "expected": "1. Application should be launched successfully with the login page\r\n2. Login should be successful and home page should be displayed\r\n3. Payment Methods  portal should be displayed\r\n4. User should be navigated to select supplier page\r\n5. User should be able to input details\r\n6. The payment method of type account credit should be created\r\n7. Search icon should not be displayed against General Ledger Number and user should not be able to input a General Ledger Number for Account credit payment method\r\n8. user should be logged out successfully and login screen should be displayed"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.30"
  },
  {
    "id": 30684102,
    "title": "Verification of Cash Change display in the payment page for Package till check out happens",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-14072",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 144,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66010",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Login as box office user\n2. Select ticket sales from the drop down\r\n2. 1. Input the  package code\r\n2. Click on find button\r\n3. 1. Input patron name\n2. Click on find button\n3. Click on set as patron button\r\n4. 1. Input required number of seats\r\n2. Click on best available button\r\n5. 1. Click on payment tab\r\n2. Select CASH Payment\r\n3. Enter the cash needed for purchasing the ticket in Amount field\r\n4.Enter tendered amount ( it should be higher than sum entered in Amount field) \r\n5.Click on 'Accept Payment' button\r\n6. Verify the Cash Change Amount and its display\r\n7. Select one delivery method\r\n8. Verify the Cash Change Amount display\r\n9. Click on CHECK OUT button",
        "expected": "1. Ticket Sales portal should be displayed\r\n2. Ticket sale portal should be displayed with the package selected\r\n3. Patron should get selected\r\n4. The patron cart should be selected\r\n5. The tickets should be purchased and 'Cash Change' should display above CANCEL button\r\n6. The 'cash change'  amount should be = ( Amount - Cash Tendered). \r\n\r\nThe Cash Change value should display on the page until the user checks out.\r\n7. Delivery method should get  selected\r\n8. The Cash Change value should stay on the page until the user checks out.\r\n9. The User should reach confirmation page and completes the transaction."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.30"
  },
  {
    "id": 30684103,
    "title": "Verification of Cash Change display in the payment page for Events till check out happens",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-14072",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 145,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66011",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Login as box office user\n2. Select ticket sales from the drop down\r\n2. 1. Input the  event code\n2. Click on find button\r\n3. 1. Input required number of seats\r\n2. Click on best available button\r\n4. 1. Input patron name\n2. Click on find button\n3. Click on set as patron button\r\n5. 1. Click on payment tab\r\n2. Select CASH Payment\r\n3. Enter the cash needed for purchasing the ticket in Amount field\r\n4.Enter tendered amount ( it should be higher than sum entered in Amount field) \r\n5.Click on 'Accept Payment' button\r\n6. Verify the Cash Change Amount and its display\r\n7. Select one delivery method\r\n8. Click on CHECK OUT button\r\n9. Verify the Cash Change Amount display",
        "expected": "1. Ticket Sales portal should be displayed\r\n2. Ticket sale portal should be displayed with the event selected\r\n3. The patron cart should be selected\r\n4. Patron should get selected\r\n5. The tickets should be purchased and 'Cash Change' should display above CANCEL button\r\n6. The 'cash change'  amount should be = ( Amount - Cash Tendered). \r\n\r\nThe Cash Change value should display on the page until the user checks out.\r\n7. Delivery method should get  selected\r\n8. The User should reach confirmation page and completes the transaction.\r\n9. The Cash Change value should stay on the page until the user checks out."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.30"
  },
  {
    "id": 30684104,
    "title": "Create a Payment Method with General ledger number associated to it.",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12783",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 146,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66012",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Navigate to System Setup tab.\r\n2. Select Payment Methods.\r\n2. Click on New Button\r\n3. 1. Enter the required fields.\r\n2. Select appropriate Payment Type\r\n\r\nNote: If Payment Type is selected as Card\r\nselect the card type\r\n4. Click on Apply Changes\r\n5. 1. Click on \"Search\" icon corresponding to general ledger number\r\n2. Input the General Ledger number created in Pre-requisite and click o \"Find\"\r\n3. Click on \"Ok\" button\r\n6. Call",
        "expected": "1. User must be navigated to Payment Methods page.\r\n2. The Payment Method details page must be shown.\r\n3. The required details must be entered.\r\n4. The Payment method must be created and successfully associated to the General ledger number.\r\n5. The general ledger number should be entered successfully\r\n6."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "Not Specified"
  },
  {
    "id": 30684105,
    "title": "Verify the check numbers in the Datababse  after the payment process",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-14096",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 147,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66013",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PVNG application using a valid user name and password\r\n2. 1. Go to ticket sales portal\r\n2. Select event , enter the no of tickets , patron \r\n3.Select the Delivery method\r\n3. 1)Click Payments tab \r\n2)Select Check from the drop down \r\n3)Enter the check number as \"1234567890123456789\" (19 digits) for partial payment\r\n4)Enter the check number as \"123456789012345678\"(18 digits) for partial payment\r\n5)Enter the check number as \"12345678901234567\"(17 digits) for the remaining payment\r\n6)Click Accept Payment button\r\n7)Complete the transaction\r\n4. 1)Login to Database \r\n2)Verify the check numbers in  the Database using  the following fields\r\nPAYMENT_ID\",\"TRANSACTION_ID\",\"NAME_ON_CHECK\",\"CHECK_NMBR\"",
        "expected": "1. User should be able to login successfully.\r\n2. User should be able to input the parameters\r\n3. Sales transaction should be performed using multiple check payments\r\n4. Check numbers should be displayed as the same in the Database as entered in step 3 ."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.10"
  },
  {
    "id": 30684106,
    "title": "Verify the check numbers in the UI during the payment process",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-14096",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 148,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66014",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Go to ticket sales portal\r\n2. Select event , enter the no of tickets , patron \r\n3.Select the Delivery method\r\n2. Launch PVNG application using a valid user name and password\r\n3. 1)Click Payments tab \r\n2)Select Check from the drop down \r\n3)Enter the check number as \"1234567890123456789\" (19 digits) for partial payment\r\n4)Enter the check number as \"123456789012345678\"(18 digits) for partial payment\r\n5)Enter the check number as \"12345678901234567\"(17 digits) for the remaining payment\r\n6)Click Accept Payment button\r\n4. 1)Verify the check numbers in  the UI after clicking the Accept payment button in the Payments tab below.",
        "expected": "1. User should be able to input the parameters\r\n2. User should be able to login successfully.\r\n3. Sales transaction should be performed using multiple check payments\r\n4. Check numbers should be displayed as the same entered in step 3, UI should not truncate or round the value"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.10"
  },
  {
    "id": 30684107,
    "title": "CC balck list-  Add a Credit cart to black list",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-13579",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 149,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66015",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV Application using the link provided\r\n2. Login using suitable credentials\r\n3. 1.Navigate to Ticket Sales page\r\n2.select any event\r\n3.Select seats for this event\r\n4.select the patron\r\n4. 1.Navigate to the PAYMENT tab in the cart\r\n2.Select Credit card as the payment method\r\n5. 1.Enter correct details corresponding to the credit card selected\r\n2.Enter address details\r\n3.Click ACCEPT PAYMENT\r\n6. 1, Navigate to ticket service\r\n2. Select transaction id from search field\r\n3. Input transaction id\r\n4. Click on find button\r\n7. 1. Navigate to the payment tab.\r\n2. Click on blacklist action icon\r\n8. 1. Enter comments\r\n2.  Click on Apply Chnages\r\n9. 1. Go to ticket sale\r\n2. Perform a ticket sale with the blaclisted CC number\r\n3. Veridy the message",
        "expected": "1. PV Application should be launched successfully\r\n2. Login should be successfull\r\n3. User should be able to select seats for any event in Ticket Sales\r\n4. User should be able to select credit card as payment method\r\n5. Payment should be successful and the transaction should be completed successfully\r\n6. Transaction details should be displayed\r\n7. User should able to navigated to the Credit Card Blacklist utility with pre-populated info.\r\n  Select 'Apply Changes.'\r\n8. The utility should show a sucess message\r\nthe cc should add in the blacklist\r\n9. 1. User should not make payment using blacklisted credit card.\r\n2. Appropriate error message should be displayed when try to check out."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30684108,
    "title": "CC balck list-  Verify the error message when attempting to add a CC to backlist",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-13579",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 150,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66016",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV Application using the link provided\r\n2. Login using suitable credentials\r\n3. 1.Navigate to Ticket Sales page\r\n2.select any event\r\n3.Select seats for this event\r\n4.select the patron\r\n4. 1.Navigate to the PAYMENT tab in the cart\r\n2.Select Credit card as the payment method\r\n5. 1.Enter correct details corresponding to the credit card selected\r\n2.Enter address details\r\n3.Click ACCEPT PAYMENT\r\n6. 1, Navigate to ticket service\r\n2. Select transaction id from search field\r\n3. Input transaction id\r\n4. Click on find button\r\n7. 1. Navigate to the payment tab.\r\n2. Click on blacklist action icon\r\n8. 1. With the pre populated values Click on Apply Chnages\r\n9. 1. Verify the breadcrum in the blacklist utility",
        "expected": "1. PV Application should be launched successfully\r\n2. Login should be successfull\r\n3. User should be able to select seats for any event in Ticket Sales\r\n4. User should be able to select credit card as payment method\r\n5. Payment should be successful and the transaction should be completed successfully\r\n6. Transaction details should be displayed\r\n7. User should able to navigated to the Credit Card Blacklist utility with pre-populated info.\r\n5.  Select 'Apply Changes.'\r\n8. The utility should show an error message conveying 'Comment is required.'\r\n9. Bread crumb should be displayed"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30684109,
    "title": "Make a payment using Account Credit type payment method which has a General Ledger association",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 151,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66017",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Step 1 : Navigate to System Setup-->System Administration\r\nStep 2 : Select [ codes ] tab and select [ General Ledger ] from the drop down\r\nStep 3 : Click on the [ New ] Button\r\nStep 4 : Input the parameters for Code, Description\r\nStep 5 : Select [ Active ] status\r\nStep 6 : Click on the [ Apply Changes ]\r\nStep 7: Create a Account Credit type payment method associating the Ledger created.\r\n2. Launch PVNG application\r\n3. Login as Box Office User\r\n4. Go to Ticket Sales\r\n5. Select a Event or Package\r\nSelect a patron\r\n6. Input the no of tickets to be bought into the no of tickets filed and click the Best Avalilable button.\r\n7. Choose a delivery method and set it.\r\n8. Choose a Payment type of Account Credit type payment method which was created\r\n9. Verify if general Ledger iss associated when we make the payment\r\n10. Checkout the sale.\r\n11. Logout of the application",
        "expected": "1. General Ledger should be created\r\n2. PV application should be launched\r\n3. User should be able to login\r\n4. Ticket Sales portal shoudl be opened.\r\n5. Event or package and patron shoudl be selected.\r\n6. The cart shoudl be displayed.\r\n7. The Delivery methos shoudl be set.\r\n8. Account Credit type payment method  shodul be choosed.\r\n9. The general Ledger shodul be associated when we make the payment.\r\n10. The sale shodul be completed and the confiremation Id shoul be displayed.\r\n11. The application shodul be logged out successfully."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30684110,
    "title": "Make a payment using other type  payment method which has a General Ledger association",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 152,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66018",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Step 1 : Navigate to System Setup-->System Administration\r\nStep 2 : Select [ codes ] tab and select [ General Ledger ] from the drop down\r\nStep 3 : Click on the [ New ] Button\r\nStep 4 : Input the parameters for Code, Description\r\nStep 5 : Select [ Active ] status\r\nStep 6 : Click on the [ Apply Changes ]\r\nStep 7: Create a other  type payment methodassociating the Ledger created.\r\n2. Launch PVNG application\r\n3. Login as Box Office User\r\n4. Go to Ticket Sales\r\n5. Select a Event or Package\r\nSelect a patron\r\n6. Input the no of tickets to be bought into the no of tickets filed and click the Best Avalilable button.\r\n7. Choose a delivery method and set it.\r\n8. Choose a Payment type of other type payment methodwhich was created\r\n9. Verify if general Ledger iss associated when we make the payment\r\n10. Checkout the sale.\r\n11. Logout of the application",
        "expected": "1. General Ledger should be created\r\n2. PV application should be launched\r\n3. User should be able to login\r\n4. Ticket Sales portal shoudl be opened.\r\n5. Event or package and patron shoudl be selected.\r\n6. The cart shoudl be displayed.\r\n7. The Delivery methos shoudl be set.\r\n8. other  type payment method   shodul be choosed.\r\n9. The general Ledger shodul be associated when we make the payment.\r\n10. The sale shodul be completed and the confiremation Id shoul be displayed.\r\n11. The application shodul be logged out successfully."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30684111,
    "title": "Make a payment using Payment Transfer type payment method which has a General Ledger association",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 153,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66019",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Step 1 : Navigate to System Setup-->System Administration\r\nStep 2 : Select [ codes ] tab and select [ General Ledger ] from the drop down\r\nStep 3 : Click on the [ New ] Button\r\nStep 4 : Input the parameters for Code, Description\r\nStep 5 : Select [ Active ] status\r\nStep 6 : Click on the [ Apply Changes ]\r\nStep 7: Create a Payment Transfer type payment methodassociating the Ledger created.\r\n2. Launch PVNG application\r\n3. Login as Box Office User\r\n4. Go to Ticket Sales\r\n5. Select a Event or Package\r\nSelect a patron\r\n6. Input the no of tickets to be bought into the no of tickets filed and click the Best Avalilable button.\r\n7. Choose a delivery method and set it.\r\n8. Choose a Payment type of Payment Transfer type payment methodwhich was created\r\n9. Verify if general Ledger iss associated when we make the payment\r\n10. Checkout the sale.\r\n11. Logout of the application",
        "expected": "1. General Ledger should be created\r\n2. PV application should be launched\r\n3. User should be able to login\r\n4. Ticket Sales portal shoudl be opened.\r\n5. Event or package and patron shoudl be selected.\r\n6. The cart shoudl be displayed.\r\n7. The Delivery methos shoudl be set.\r\n8. Payment Transfer type payment method   shodul be choosed.\r\n9. The general Ledger shodul be associated when we make the payment.\r\n10. The sale shodul be completed and the confiremation Id shoul be displayed.\r\n11. The application shodul be logged out successfully."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30684112,
    "title": "Make a payment using Account Transfer typepayment method  which has a General Ledger association",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 154,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66020",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Step 1 : Navigate to System Setup-->System Administration\r\nStep 2 : Select [ codes ] tab and select [ General Ledger ] from the drop down\r\nStep 3 : Click on the [ New ] Button\r\nStep 4 : Input the parameters for Code, Description\r\nStep 5 : Select [ Active ] status\r\nStep 6 : Click on the [ Apply Changes ]\r\nStep 7: Create a Account Transfer type payment method associating the Ledger created.\r\n2. Launch PVNG application\r\n3. Login as Box Office User\r\n4. Go to Ticket Sales\r\n5. Select a Event or Package\r\nSelect a patron\r\n6. Input the no of tickets to be bought into the no of tickets filed and click the Best Avalilable button.\r\n7. Choose a delivery method and set it.\r\n8. Choose a Payment type of Account Transfer type payment method which was created\r\n9. Verify if general Ledger iss associated when we make the payment\r\n10. Checkout the sale.\r\n11. Logout of the application",
        "expected": "1. General Ledger should be created\r\n2. PV application should be launched\r\n3. User should be able to login\r\n4. Ticket Sales portal shoudl be opened.\r\n5. Event or package and patron shoudl be selected.\r\n6. The cart shoudl be displayed.\r\n7. The Delivery methos shoudl be set.\r\n8. Account Transfer type payment method   shodul be choosed.\r\n9. The general Ledger shodul be associated when we make the payment.\r\n10. The sale shodul be completed and the confiremation Id shoul be displayed.\r\n11. The application shodul be logged out successfully."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30684113,
    "title": "Make a payment using Non Revenue credit type payment method  which has a General Ledger association",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 155,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66021",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Step 1 : Navigate to System Setup-->System Administration\r\nStep 2 : Select [ codes ] tab and select [ General Ledger ] from the drop down\r\nStep 3 : Click on the [ New ] Button\r\nStep 4 : Input the parameters for Code, Description\r\nStep 5 : Select [ Active ] status\r\nStep 6 : Click on the [ Apply Changes ]\r\nStep 7: Create a Non Revenue credit type payment method  associating the Ledger created.\r\n2. Launch PVNG application\r\n3. Login as Box Office User\r\n4. Go to Ticket Sales\r\n5. Select a Event or Package\r\nSelect a patron\r\n6. Input the no of tickets to be bought into the no of tickets filed and click the Best Avalilable button.\r\n7. Choose a delivery method and set it.\r\n8. Choose a Payment type of Non Revenue credit type payment method which was created\r\n9. Verify if general Ledger iss associated when we make the payment\r\n10. Checkout the sale.\r\n11. Logout of the application",
        "expected": "1. General Ledger should be created\r\n2. PV application should be launched\r\n3. User should be able to login\r\n4. Ticket Sales portal shoudl be opened.\r\n5. Event or package and patron shoudl be selected.\r\n6. The cart shoudl be displayed.\r\n7. The Delivery methos shoudl be set.\r\n8. Non Revenue credit type payment method  shodul be choosed.\r\n9. The general Ledger shodul be associated when we make the payment.\r\n10. The sale shodul be completed and the confiremation Id shoul be displayed.\r\n11. The application shodul be logged out successfully."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30684114,
    "title": "Make a payment using payment voucher  type payment method which has a General Ledger association",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 156,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66022",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Step 1 : Navigate to System Setup-->System Administration\nStep 2 : Select [ codes ] tab and select [ General Ledger ] from the drop down\nStep 3 : Click on the [ New ] Button\nStep 4 : Input the parameters for Code, Description\nStep 5 : Select [ Active ] status\nStep 6 : Click on the [ Apply Changes ]\nStep 7: Create a payment voucher  type payment method associating the Ledger created.\r\n2. Launch PVNG application\r\n3. Login as Box Office User\r\n4. Go to Ticket Sales\r\n5. Select a Event or Package\nSelect a patron\r\n6. Input the no of tickets to be bought into the no of tickets filed and click the Best Avalilable button.\r\n7. Choose a delivery method and set it.\r\n8. Choose a Payment type of payment voucher type payment method which was created\r\n9. Checkout the sale.\r\n10. Logout of the application",
        "expected": "1. General Ledger should be created\r\n2. PV application should be launched\r\n3. User should be able to login\r\n4. Ticket Sales portal shoudl be opened.\r\n5. Event or package and patron shoudl be selected.\r\n6. The cart shoudl be displayed.\r\n7. The Delivery methos shoudl be set.\r\n8. The payment voucher type payment method shodul be choosed.\r\n9. The sale should be completed and the confirmation Id should be displayed.\r\n10. The application shodul be logged out successfully."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30684115,
    "title": "Make a payment using Gift card type payment method which has a General Ledger association",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 157,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66023",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Step 1 : Navigate to System Setup-->System Administration\r\nStep 2 : Select [ codes ] tab and select [ General Ledger ] from the drop down\r\nStep 3 : Click on the [ New ] Button\r\nStep 4 : Input the parameters for Code, Description\r\nStep 5 : Select [ Active ] status\r\nStep 6 : Click on the [ Apply Changes ]\r\nStep 7: Create a Gift card Payment Method associating the Ledger created.\r\n2. Launch PVNG application\r\n3. Login as Box Office User\r\n4. Go to Ticket Sales\r\n5. Select a Event or Package\r\nSelect a patron\r\n6. Input the no of tickets to be bought into the no of tickets filed and click the Best Avalilable button.\r\n7. Choose a delivery method and set it.\r\n8. Choose a Payment type of Gift Card payment which was created\r\n9. Verify if general Ledger iss associated when we make the payment\r\n10. Checkout the sale.\r\n11. Logout of the application",
        "expected": "1. General Ledger should be created\r\n2. PV application should be launched\r\n3. User should be able to login\r\n4. Ticket Sales portal shoudl be opened.\r\n5. Event or package and patron shoudl be selected.\r\n6. The cart shoudl be displayed.\r\n7. The Delivery methos shoudl be set.\r\n8. The Gift card payment shodul be choosed.\r\n9. The general Ledger shodul be associated when we make the payment.\r\n10. The sale shodul be completed and the confiremation Id shoul be displayed.\r\n11. The application shodul be logged out successfully."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30684116,
    "title": "Make a payment using Check type payment method which has a General Ledger association",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 158,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66024",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Create a check payment method associated with General Ledger number which is supplier context\r\n2. Login to PV application\r\n3. 1. Goto Ticket sales\r\n2.Select an event\r\n3. Enter the number of seats and choose Best available\r\n4.Goto Delivery tab and Select Delivery method and click Apply\r\n5. Goto  Payment tab\r\n6.Select payment method as check method created in Pre-requiste\r\n7.Click Accept payment\r\n8.Goto confirm tab and click Check out",
        "expected": "1. \r\n2. The application should be logged in  successfully\r\n3. The event transaction should be completed successfully with Check payment method that has General Ledger association"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30684117,
    "title": "Make a payment using Credit card type payment method which has a General Ledger association",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 159,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66025",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Step 1 : Navigate to System Setup-->System Administration\r\nStep 2 : Select [ codes ] tab and select [ General Ledger ] from the drop down\r\nStep 3 : Click on the [ New ] Button\r\nStep 4 : Input the parameters for Code, Description\r\nStep 5 : Select [ Active ] status\r\nStep 6 : Click on the [ Apply Changes ]\r\nStep 7: Create a Payment Method associating the Ledger created.\r\n2. Launch PVNG application\r\n3. Login as Box Office User\r\n4. Go to Ticket Sales\r\n5. Select a Event or Package\r\nSelect a patron\r\n6. Input the no of tickets to be bought into the no of tickets filed and click the Best Avalilable button.\r\n7. Choose a delivery method and set it.\r\n8. Choose a Payment type of Credit card payment which was created\r\n9. Verify if general Ledger iss associated when we make the payment\r\n10. Checkout the sale.\r\n11. Logout of the application",
        "expected": "1. General Ledger should be created\r\n2. PV application should be launched\r\n3. User should be able to login\r\n4. Ticket Sales portal shoudl be opened.\r\n5. Event or package and patron shoudl be selected.\r\n6. The cart shoudl be displayed.\r\n7. The Delivery methos shoudl be set.\r\n8. The created Credit card payment shodul be choosed.\r\n9. The general Ledger shodul be associated when we make the payment.\r\n10. The sale shodul be completed and the confiremation Id shoul be displayed.\r\n11. The application shodul be logged out successfully."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30684118,
    "title": "Make a payment using Cash type payment method which has a General Ledger association",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 160,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66026",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Create a cash payment method associated with General Ledger number which is supplier context\r\n2. Login to PV application\r\n3. 1. Goto Ticket sales\r\n2.Select an event\r\n3. Enter the number of seats and choose Best available\r\n4.Goto Delivery tab and Select Delivery method and click Apply\r\n5. Goto  Payment tab\r\n6.Select payment method as cash method created in Pre-requiste\r\n7.Click Accept payment\r\n8.Goto confirm tab and click Check out",
        "expected": "1. \r\n2. The application should be logged in  successfully\r\n3. The event transaction should be completed successfully with Cash payment method that has General Ledger association"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30684119,
    "title": "Verify for a patron with a primary contact who has primary address only has the address populated that of primary contact s primary address for Payment method - American Express.",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12798",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 161,
    "custom_is_automated": false,
    "custom_pv_category": 25,
    "custom_refs": "C66027",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Create a patron with primary contact where the primary contact has only primary address.\r\n2. 1. Launch PV application.\r\n2. Login using valid username and password.\r\n3. Select 'Ticket Sales' from the main dropdown.\r\n4. 1. Select an Event for sale.\r\n2. Select the newly created patron.\r\n3. Input the number of seats required.\r\n4. Click on 'Best Available' button.\r\n5. 1. Click on the 'Payment' tab.\r\n2. Select a Payment method - American Express from the Method dropdown.\r\n6. 1. Click on 'Accept payment' button.\r\n2. Click on 'Checkout' button.",
        "expected": "1. The patron must be created successfully.\r\n2. The login should be successful and the 'Home' page of the application should be displayed.\r\n3. The 'Ticket Sales' portal should be displayed.\r\n4. The application should navigate to the Cart.\r\n5. 1. The Contact dropdown must have selection on the Primary Contact.\r\n2. The On file dropdown must have selection on the primary address of the Primary contact\r\n3. Billing address,State, City,Country,Pin Code must be populated with that of Primary contact's primary address.\r\n6. The transaction should be completed."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30684120,
    "title": "Verify for a patron with a primary contact who has primary and non primary address has the address populated that of primary contact s primary address  for Payment method - American Express.",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12798",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 162,
    "custom_is_automated": false,
    "custom_pv_category": 25,
    "custom_refs": "C66028",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Create a patron with primary contact where the primary contact has primary and non primary address.\r\n2. 1. Launch PV application.\r\n2. Login using valid username and password.\r\n3. Select 'Ticket Sales' from the main dropdown.\r\n4. 1. Select an Event for sale.\r\n2. Select the newly created patron.\r\n3. Input the number of seats required.\r\n4. Click on 'Best Available' button.\r\n5. 1. Click on the 'Payment' tab.\r\n2. Select a Payment method - American Express from the Method dropdown.\r\n6. Select the non primary address from the On file dropdown.\r\n7. 1. Click on 'Accept payment' button.\r\n2. Click on 'Checkout' button.",
        "expected": "1. The patron must be created successfully.\r\n2. The login should be successful and the 'Home' page of the application should be displayed.\r\n3. The 'Ticket Sales' portal should be displayed.\r\n4. The application should navigate to the Cart.\r\n5. 1. The Contact dropdown must have selection on the Primary Contact.\r\n2. The On file dropdown must have selection on the primary address of the Primary contact\r\n3. Billing address,State, City,Country,Pin Code must be populated with that of Primary contact's primary address.\r\n6. The non-primary address of the primary contact must be populated.\r\n7. The transaction should be completed."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30684121,
    "title": "Verify for a patron with a primary contact who has primary address and a non primary contact who has primary address has the address populated with that of primary contact s primary address for Payment method - American Express.",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12798",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 163,
    "custom_is_automated": false,
    "custom_pv_category": 25,
    "custom_refs": "C66029",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Create a patron with primary and non primary contact where the primary contact and non primary contact  has primary address only.\r\n2. 1. Launch PV application.\r\n2. Login using valid username and password.\r\n3. Select 'Ticket Sales' from the main dropdown.\r\n4. 1. Select an Event for sale.\r\n2. Select the newly created patron.\r\n3. Input the number of seats required.\r\n4. Click on 'Best Available' button.\r\n5. 1. Click on the 'Payment' tab.\r\n2. Select a Payment method - American Express from the Method dropdown.\r\n6. Select the non primary contact from the Contact dropdown.\r\n7. 1. Click on 'Accept payment' button.\r\n2. Click on 'Checkout' button.",
        "expected": "1. The patron must be created successfully.\r\n2. The login should be successful and the 'Home' page of the application should be displayed.\r\n3. The 'Ticket Sales' portal should be displayed.\r\n4. The application should navigate to the Cart.\r\n5. 1. The Contact dropdown must have selection on the Primary Contact.\r\n2. The On file dropdown must have selection on the primary address of the Primary contact\r\n3. Billing address,State, City,Country,Pin Code must be populated with that of Primary contact's primary address.\r\n6. 1. The On file dropdown must have selection on the primary address of the non Primary contact\r\n2. The primary address of the non primary contact must be populated.\r\n7. The transaction should be completed."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30684122,
    "title": "Verify for a patron with a primary contact who has primary address only and a non primary contact who has primary and non primary address has the address populated with that of primary contact s primary address for Payment method - American Express.",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12798",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 164,
    "custom_is_automated": false,
    "custom_pv_category": 25,
    "custom_refs": "C66030",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Create a patron with primary and non primary contact where the primary contact has primary address only and non primary contact has primary and non primary address.\r\n2. 1. Launch PV application.\r\n2. Login using valid username and password.\r\n3. Select 'Ticket Sales' from the main dropdown.\r\n4. 1. Select an Event for sale.\r\n2. Select the newly created patron.\r\n3. Input the number of seats required.\r\n4. Click on 'Best Available' button.\r\n5. 1. Click on the 'Payment' tab.\r\n2. Select a Payment method - American Express from the Method dropdown.\r\n6. Select the non primary contact from the Contact dropdown.\r\n7. 1. Click on 'Accept payment' button.\r\n2. Click on 'Checkout' button.",
        "expected": "1. The patron must be created successfully.\r\n2. The login should be successful and the 'Home' page of the application should be displayed.\r\n3. The 'Ticket Sales' portal should be displayed.\r\n4. The application should navigate to the Cart.\r\n5. 1. The Contact dropdown must have selection on the Primary Contact.\r\n2. The On file dropdown must have selection on the primary address of the Primary contact\r\n3. Billing address,State, City,Country,Pin Code must be populated with that of Primary contact's primary address.\r\n6. 1. The On file dropdown must have selection on the primary address of the non Primary contact\r\n2. The primary address of the non primary contact must be populated.\r\n3. user must be able to select the non primary address from the On File dropdown.\r\n7. The transaction should be completed."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30684123,
    "title": "Verify that OTHER type payment methods can be created with or without General Ledger Association",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 165,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66031",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Step 1 : Navigate to System Setup-->System Administration\r\nStep 2 : Select [ codes ] tab and select [ General Ledger ] from the drop down\r\nStep 3 : Click on the [ New ] Button\r\nStep 4 : Input the parameters for Code, Description\r\nStep 5 : Select [ Active ] status\r\nStep 6 : Click on the [ Apply Changes ]\r\n2. Launch PVNG application\r\n3. Login as Box Office User\r\n4. Navigate System setup-->Payment Methods\r\n5. Click on  the [ New ] button\r\n6. Input the parameters code and decription\r\n7. Choose payment method as [ OTHER ]\r\n8. Input general ledger Number\r\nClick apply changes\r\n9. Click on [ Apply Changes ]\r\n10. Verify that [ OTHER ] type payment methods can be created with General Ledger\r\n11. Verify that [ OTHER ]  type payment methods can be created  without General Ledger Association",
        "expected": "1. General Ledger should be created\r\n2. PV application should be launched\r\n3. User should be able to login\r\n4. Payment methods portal should be displayed\r\n5. New window should be opened\r\n6. User should be able to input all the parameters\r\n7. User should be able to input the payment type as OTHER\r\n8. User should be able to input the ledger number\r\n9. User should be able to create new payment method with payment type\r\n10. Verify that [ OTHER ]  type payment methods can be created with General Ledger\r\n11. Verify that [ OTHER ]  type payment methods can be created  without General Ledger Association"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30684124,
    "title": "Verify that Payment Transfer type payment methods can be created with or without General Ledger Association",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 166,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66032",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Step 1 : Navigate to System Setup-->System Administration\r\nStep 2 : Select [ codes ] tab and select [ General Ledger ] from the drop down\r\nStep 3 : Click on the [ New ] Button\r\nStep 4 : Input the parameters for Code, Description\r\nStep 5 : Select [ Active ] status\r\nStep 6 : Click on the [ Apply Changes ]\r\n2. Launch PVNG application\r\n3. Login as Box Office User\r\n4. Navigate System setup-->Payment Methods\r\n5. Click on  the [ New ] button\r\n6. Input the parameters code and decription\r\n7. Choose payment method as [ Payment Transfer ]\r\n8. Input general ledger Number\r\nClick apply changes\r\n9. Click on [ Apply Changes ]\r\n10. Verify that [ Payment Transfer ] type payment methods can be created with General Ledger\r\n11. Verify that [ Payment Transfer ]  type payment methods can be created  without General Ledger Association",
        "expected": "1. General Ledger should be created\r\n2. PV application should be launched\r\n3. User should be able to login\r\n4. Payment methods portal should be displayed\r\n5. New window should be opened\r\n6. User should be able to input all the parameters\r\n7. User should be able to input the payment type as Account Transfer\r\n8. User should be able to input the ledger number\r\n9. User should be able to create new payment method with payment type\r\n10. Verify that [ Payment Transfer ]  type payment methods can be created with General Ledger\r\n11. Verify that [ Payment Transfer ]  type payment methods can be created  without General Ledger Association"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30684125,
    "title": "Verify that Account Transfer type payment methods can be created with or without General Ledger Association",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 167,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66033",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Step 1 : Navigate to System Setup-->System Administration\r\nStep 2 : Select [ codes ] tab and select [ General Ledger ] from the drop down\r\nStep 3 : Click on the [ New ] Button\r\nStep 4 : Input the parameters for Code, Description\r\nStep 5 : Select [ Active ] status\r\nStep 6 : Click on the [ Apply Changes ]\r\n2. Launch PVNG application\r\n3. Login as Box Office User\r\n4. Navigate System setup-->Payment Methods\r\n5. Click on  the [ New ] button\r\n6. Input the parameters code and decription\r\n7. Choose payment method as [ Account Transfer ]\r\n8. Input general ledger Number\r\nClick apply changes\r\n9. Click on [ Apply Changes ]\r\n10. Verify that [ Account Transfer ] type payment methods can be created with General Ledger\r\n11. Verify that [ Account Transfer ]  type payment methods can be created  without General Ledger Association",
        "expected": "1. General Ledger should be created\r\n2. PV application should be launched\r\n3. User should be able to login\r\n4. Payment methods portal should be displayed\r\n5. New window should be opened\r\n6. User should be able to input all the parameters\r\n7. User should be able to input the payment type as Account Transfer\r\n8. User should be able to input the ledger number\r\n9. User should be able to create new payment method with payment type\r\n10. Verify that [ Account Transfer ]  type payment methods can be created with General Ledger\r\n11. Verify that [ Account Transfer ]  type payment methods can be created  without General Ledger Association"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30684126,
    "title": "Verify that Non Revenue credit type payment methods can be created with or without General Ledger Association",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 168,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66034",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Step 1 : Navigate to System Setup-->System Administration\r\nStep 2 : Select [ codes ] tab and select [ General Ledger ] from the drop down\r\nStep 3 : Click on the [ New ] Button\r\nStep 4 : Input the parameters for Code, Description\r\nStep 5 : Select [ Active ] status\r\nStep 6 : Click on the [ Apply Changes ]\r\n2. Launch PVNG application\r\n3. Login as Box Office User\r\n4. Navigate System setup-->Payment Methods\r\n5. Click on  the [ New ] button\r\n6. Input the parameters code and decription\r\n7. Choose payment method as [ Non Revenue credit  ]\r\n8. Input general ledger Number\r\nClick apply changes\r\n9. Click on [ Apply Changes ]\r\n10. Verify that [ Non Revenue credit ] type payment methods can be created with General Ledger\r\n11. Verify that [ Non Revenue credit ]  type payment methods can be created  without General Ledger Association",
        "expected": "1. General Ledger should be created\r\n2. PV application should be launched\r\n3. User should be able to login\r\n4. Payment methods portal should be displayed\r\n5. New window should be opened\r\n6. User should be able to input all the parameters\r\n7. User should be able to input the payment type asNon Revenue credit\r\n8. User should be able to input the ledger number\r\n9. User should be able to create new payment method with payment type\r\n10. Verify that [ Non Revenue credit ]  type payment methods can be created with General Ledger\r\n11. Verify that [ Non Revenue credit ]  type payment methods can be created  without General Ledger Association"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30684127,
    "title": "Verify that Receivable Write off type payment methods can be created with or without General Ledger Association",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 169,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66035",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Step 1 : Navigate to System Setup-->System Administration\r\nStep 2 : Select [ codes ] tab and select [ General Ledger ] from the drop down\r\nStep 3 : Click on the [ New ] Button\r\nStep 4 : Input the parameters for Code, Description\r\nStep 5 : Select [ Active ] status\r\nStep 6 : Click on the [ Apply Changes ]\r\n2. Launch PVNG application\r\n3. Login as Box Office User\r\n4. Navigate System setup-->Payment Methods\r\n5. Click on  the [ New ] button\r\n6. Input the parameters code and decription\r\n7. Choose payment method as [ Receivable Write off ]\r\n8. Input general ledger Number\r\nClick apply changes\r\n9. Click on [ Apply Changes ]\r\n10. Verify that [ Receivable Write off ] type payment methods can be created with General Ledger\r\n11. Verify that [ Receivable Write off ]  type payment methods can be created  without General Ledger Association",
        "expected": "1. General Ledger should be created\r\n2. PV application should be launched\r\n3. User should be able to login\r\n4. Payment methods portal should be displayed\r\n5. New window should be opened\r\n6. User should be able to input all the parameters\r\n7. User should be able to input the payment type as Receivable Write off\r\n8. User should be able to input the ledger number\r\n9. User should be able to create new payment method with payment type\r\n10. Verify that [ Receivable Write off ]  type payment methods can be created with General Ledger\r\n11. Verify that [ Receivable Write off ]  type payment methods can be created  without General Ledger Association"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30684128,
    "title": "Verify that Payment Voucher type payment methods can be created with or without General Ledger Association",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 170,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66036",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PVNG application\r\n2. Navigate System setup-->Payment Methods\r\n3. Click on  the [ New ] button\r\n4. Step 1 : Navigate to System Setup-->System Administration\r\nStep 2 : Select [ codes ] tab and select [ General Ledger ] from the drop down\r\nStep 3 : Click on the [ New ] Button\r\nStep 4 : Input the parameters for Code, Description\r\nStep 5 : Select [ Active ] status\r\nStep 6 : Click on the [ Apply Changes ]\r\n5. Login as Box Office User\r\n6. Input the parameters code and decription\r\n7. Choose payment method as [ Payment Voucher ]\r\n8. Input general ledger Number\r\nClick apply changes\r\n9. Click on [ Apply Changes ]\r\n10. Verify that Payment Voucher  type payment methods can be created with General Ledger\r\n11. Verify that Payment Voucher  type payment methods can be created  without General Ledger Association",
        "expected": "1. PV application should be launched\r\n2. Payment methods portal should be displayed\r\n3. New window should be opened\r\n4. General Ledger should be created\r\n5. User should be able to login\r\n6. User should be able to input all the parameters\r\n7. User should be able to input the payment type as Payment Voucher\r\n8. User should be able to input the ledger number\r\n9. User should be able to create new payment method with payment type\r\n10. Verify that Payment Voucher  type payment methods can be created with General Ledger\r\n11. Verify that Payment Voucher  type payment methods can be created  without General Ledger Association"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30684129,
    "title": "Verify that Check type payment methods can be created with or without General Ledger Association",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 171,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66037",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to PV application\r\n2. Goto Payment methods portal\r\n3. Click on new button\r\nInput code and decription\r\nChoose payment method as check\r\nInput general ledger Number\r\nClick apply changes\r\n4. Click on new button\r\nInput code and decription\r\nChoose payment method as check\r\nClick apply changes",
        "expected": "1. PV application should be launched\r\n2. Payment methods portal should be displayed\r\n3. User should be able to create new payment method with payment type as check\r\n4. User should be able to create new payment method with payment type as check and without general ledger number"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30684130,
    "title": "Verify that Gift Card type payment methods can be created with or without General Ledger Association",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 172,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66038",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to PV application\r\n2. Goto Payment methods portal\r\n3. Click on new button\r\nInput code and decription\r\nChoose payment method as Gift card\r\nChoose any card type\r\nInput general ledger Number\r\nClick apply changes\r\n4. Click on new button\r\nInput code and decription\r\nChoose payment method as Giftcard\r\nClick apply changes",
        "expected": "1. PV application should be launched\r\n2. Payment methods portal should be displayed\r\n3. User should be able to create new payment method with payment type as Gift card\r\n4. User should be able to create new payment method with payment type as Gift card and without general ledger number"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30684131,
    "title": "Verify that creditCard type payment methods can be created with or without General Ledger Association",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 173,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66039",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to PV application\r\n2. Goto Payment methods portal\r\n3. Click on new button\r\nInput code and decription\r\nChoose payment method as credit card\r\nChoose any card type\r\nInput general ledger Number\r\nClick apply changes\r\n4. Click on new button\r\nInput code and decription\r\nChoose payment method as credit card\r\nClick apply changes",
        "expected": "1. PV application should be launched\r\n2. Payment methods portal should be displayed\r\n3. User should be able to create new payment method with payment type as credit card\r\n4. User should be able to create new payment method with payment type as credit card and without general ledger number"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30684132,
    "title": "Verify that Cash type payment methods can be created with or without General Ledger Association",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12779",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 174,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66040",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to PV application\r\n2. Goto Payment methods portal\r\n3. Click on new button\r\nInput code and decription\r\nChoose payment method as cash\r\nClick apply changes\r\n4. Click on new button\r\nInput code and decription\r\nChoose payment method as cash\r\nInput general ledger Number\r\nClick apply changes",
        "expected": "1. PV application should be launched\r\n2. Payment methods portal should be displayed\r\n3. User should be able to create new payment method with payment type as cash and without general ledger number\r\n4. User should be able to create new payment method with payment type as cash"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30684133,
    "title": "Verify credit card payment method after adding all suppliers to it",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-8830",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 175,
    "custom_is_automated": false,
    "custom_pv_category": 24,
    "custom_refs": "C66041",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV aaplication\r\n2. Login as user USER1 to the application\r\n3. Open Payment Methods Portal from System Setup\r\n4. 1. Click Find button.\r\n2. Verify all active available payment methods\r\n3.Click on Code of a payment method which is to be selected For eg : \"Master Card\"\r\n5. 1. Click on suppliers link in supplier specific contexts\n2. verify the various tabs\r\n6. 1. Click on find button in suppliers tab\n2. Verify the results below.\n3. Check All\n4. Click Add\n5. Select 'Card holder present' and 'Card holder not present' values for all the suppliers selected at once.\n6. Click Apply changes\r\n7. 1. Remove the added supplier\n2. Verify the result",
        "expected": "1. The application should be launched successfully.\r\n2. USER1 should be able to login successfully.\r\n3. Payment Methods Portal should be opened from System Setup\r\n4. 1. The list of payment methods should be displayed.\n2. Payment method should be selected.\n3. Details page of the payment method Account credit should be displayed.\r\n5. The page should be navigated to the supplier page.\nThe supplier,event,agency,channel,transaction and sales type tabs should be present.\r\n6. All the suppliers should be saved Successfully.\nAll added suppliers should be displayed in Include corner.\r\n7. 1. Validation messages \" Card Present Merchant is required\" and \" Card Note Present Merchant required\" should be displayed \n2. Supplier should be  removed from the list"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30684134,
    "title": "Verify payment method after adding all suppliers to it",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-8830",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 176,
    "custom_is_automated": false,
    "custom_pv_category": 24,
    "custom_refs": "C66042",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV aaplication\r\n2. Login as user USER1 to the application\r\n3. Open Payment Methods Portal from System Setup\r\n4. 1. Click Find button.\r\n2. Verify all active available payment methods\r\n3.Click on Code of a payment method which is to be selected say Account credit\r\n5. 1. Click on suppliers link in supplier specific contexts\n2. verify the various tabs\r\n6. 1. Click on find button in suppliers tab\r\n2. Verify the results below.\r\n3. Check All\r\n4. Click Add\r\n5. Click Apply changes\r\n7. 1. Remove the added supplier\n2. Verify the result",
        "expected": "1. The application should be launched successfully.\r\n2. USER1 should be able to login successfully.\r\n3. Payment Methods Portal should be opened from System Setup\r\n4. 1. The list of payment methods should be displayed.\n2. Payment method should be selected.\n3. Details page of the payment method Account credit should be displayed.\r\n5. The page should be navigated to the supplier page.\nThe supplier,event,agency,channel,transaction and sales type tabs should be present.\r\n6. All the suppliers should be saved Successfully.\nAll added suppliers should be displayed in Include corner.\r\n7. 1. Supplier should be  removed from the list"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30684135,
    "title": "Disbursing account credit",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12181",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 177,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C66043",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. \r\n2. Login to the application.\r\n3. Select Ticket Sales   using the dropdown\r\n4. 1. Search and select a patron who has an multiple account credit\r\n2. Got o account balance of the patron\r\n5. 1. Select the more than one credit to be disbursed\r\n2. Click on Disburse button\r\n6. 1. Click on Notes tab\r\n7. 1. Select a note type \r\n2,. Enter the value\r\n3. Click on Apply\r\n8. 1. Select any payment method\r\n2.Click Accept Payment button\r\n9. Select Logout using the dropdown",
        "expected": "1. Site should be launched\r\n2. User should be logged in\r\n3. Ticket Sales portal should be launched.\r\n4. Account balance details of the patron should be displayed\r\n5. Financial cart should be displayed\r\n6. Notes tab should be opened without any error\r\n7. New note should be added\r\n8. User should be able to complete the transaction\r\n9. 1. User should be logged out\n2. User should be navigated to the Login page"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.0.20"
  },
  {
    "id": 30684136,
    "title": "Financial cart - Add notes while editing disbursing account credit",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12995",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 178,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C66044",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. \r\n2. Login to the application.\r\n3. Select Ticket Sales   using the dropdown\r\n4. 1. Search and select a patron who has an account credit\r\n2. Got o account balance of the patron\r\n5. 1. Select the credit to be disbursed\r\n2. Click on Disburse button\r\n6. 1. Click on Notes tab\r\n7. 1. Select a note type \r\n2,. Enter the value\r\n3. Click on Apply\r\n8. 1. Select any payment method\r\n2.Click Accept Payment button\r\n9. Select Logout using the dropdown",
        "expected": "1. Site should be launched\r\n2. User should be logged in\r\n3. Ticket Sales portal should be launched.\r\n4. Account balance details of the patron should be displayed\r\n5. Financial cart should be displayed\r\n6. Notes tab should be opened without any error\r\n7. New note should be added\r\n8. User should be able to complete the transaction\r\n9. 1. User should be logged out\n2. User should be navigated to the Login page"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.0.20"
  },
  {
    "id": 30684137,
    "title": "Editing service charges and completing the Transaction for event with large price structure",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12181",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 179,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C66045",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. \r\n2. Login to the application.\r\n3. Select Ticket Sales   using the dropdown\r\n4. Perform a ticket sales transaction for the event mentioned in pre-requiste with service charges included.\r\n5. 1. Select Ticket Services.\r\n2. Enter transaction ID and search for the transaction.\r\n6. 1. Select Service Charges Tab.\r\n2. Select a Service Charge and click Edit\r\n7. 1.Edit the service charge amount\r\n2. Select any payment method\r\n3.Click Accept Payment button\r\n8. Select Logout using the dropdown\r\n9. pre-requiste:\r\ni.Goto supplier administration\r\nii.Click on price structures tab and click on new button\r\niii.Select venue,buyer type,price scale\r\niv.Create a price structure with 1000+ price points\r\nv.Create the event and associate  the above  price structue",
        "expected": "1. Site should be launched\r\n2. User should be logged in\r\n3. Ticket Sales portal should be launched.\r\n4. User should be able to complete the transaction\r\n5. Transaction details should be displayed.\r\n6. Financial cart should be loaded.\r\n7. User should be able to complete the transaction\r\n8. 1. User should be logged out\n2. User should be navigated to the Login page\r\n9."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.0.20"
  },
  {
    "id": 30684138,
    "title": "Ticket Return Verify Default to Credit Card used for initial payment",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-10498",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 180,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66046",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform a ticket sale tarnsaction for which payment method is credit card.\r\nNote down the details\r\n2. Login to the application.\r\n3. 1. Search for the transaction done above with transaction id.\r\n2. select 'Return' from the 'Select Action' drop down.\r\n4. Open Ticket Services portal\r\n5. Verfiy the payemnt method.\r\n6. Complete the transaction",
        "expected": "1. \r\n2. Login should be successful.\r\n3. User should be moved to the ticket cart.\r\n4. Ticket services portal should be selected.\r\n5. The payment details should dispaly the credit card.\r\nThe credit card number should be displayed with which transaction was done.\r\n6. Transaction should be complete."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.00"
  },
  {
    "id": 30684139,
    "title": "Financial Cart-Unable to create Receivables for the extra amount obtained by editing the service charge",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12273",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 181,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66047",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. \r\n2. Login to the application.\r\n3. Select Ticket Sales   using the dropdown\r\n4. Perform a ticket sales transaction with service charges included.\r\n5. 1. Create a receivable for the payment amount.\r\n2. Complete transaction.\r\n3. Note the transaction id.\r\n6. 1. Select Ticket Services.\r\n2. Enter transaction ID and search for the transaction.\r\n7. 1. Select Service Charges Tab.\r\n2. Select a Service Charge and click Edit\r\n3. Edit the service charge amount to a higher amount and click \"Update\"\r\n4. Click Payment Tab.\r\n8. 1. Click Receivables Tab.\r\n2. Create receivable for the added service charge amount.\r\n9. Select Logout using the dropdown",
        "expected": "1. Site should be launched\r\n2. User should be logged in\r\n3. Ticket Sales portal should be launched.\r\n4. User should be able to complete the transaction with service charge included.\r\n5. Receivable should be created for the amount.\r\n\r\nThe user should be able to complete  transaction\r\n6. Transaction details should be displayed.\r\n7. The added service charge amount should be displayed in the Payment Tab.\r\n8. User should be able to create receivable.\r\n9. 1. User should be logged out\n2. User should be navigated to the Login page"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2"
  },
  {
    "id": 30684140,
    "title": "Verify the field ?No Code Reason? when the field Security Code is Empty",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12047",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 182,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C66048",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Set the AFP for the User as following:\r\nIn Sales Permissions, set the fields 'Swiped Security Code Level', 'Not Swiped Security Code Level', 'Card Holder not Present Security Code Level' to the value 'Preferred'.\r\n2. Login to the Application\r\n3. Navigate to the Ticket Sales Portal\r\n4. 1. Update the Required details \r\n-- Event Name\r\n-- Seat Number\r\n-- Patron Name\r\n-- Delivery Method\r\n2. Navigate to Payment Tab\r\n5. Input the following required details\r\n\r\n-- Amount\r\n-- Card Number\r\n-- Exp Date\r\n-- Address\r\n6. Click on 'Accept Payment' button without inputting the field 'Security Code'\r\n7. Input the field Securiy Code' and change the focus (Tab out) from the field\r\n8. Delete the value entered in the field 'Security Code'\r\n9. Select any value for 'No Code Reason' and complete the Ticket Sale Transaction\r\n10. Logout from the application\r\n11. Select Payment Method as Master Card/Visa Card",
        "expected": "1. \r\n2. User should be logged in to the application successfully\r\n3. Ticket sales portal should be displayed\r\n4. 1. User should be able to input the required details \r\n2. Payment Tab should be displayed\r\n5. User should be able to input the required details\r\n6. 1. The Error message \"Please enter Security code or no code reason\" should be displayed        2. The field 'No Code Reason' dropdown should be displayed.\r\n7. The field 'No Code Reason' should be disappeared\r\n8. The field 'No Code Reason' should be appeared\r\n9. Transaction should be completed successfully\r\n10. User should be able to logout from the application successfully.\r\n11. User should be able to select the 'Master Card/Visa' Payment method"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2"
  },
  {
    "id": 30684141,
    "title": "Verify the Card Authorization detail modal is opened in Ticket Services when externallyAuthorized is true and mode of payment is paypal",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-24414",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 183,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C137594",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch and login PV with valid credentials\r\n2. Run lock seats API\r\n3. Run checkout API ( keeping \"externallyAuthorized\" as true, \"walletType\" as \"PAYPAL\")\r\n4. Navigate to payment tab under ticket services of this order\r\n5. click on Ext link under Auth column",
        "expected": "1. Login successful\r\n2. Success\r\n3. Success\r\n4. Ext link under Auth column should be seen\r\n5. Authorization detail modal should be opened."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "4.0.40"
  },
  {
    "id": 30684142,
    "title": "Verify the Card Authorization detail modal is opened in Ticket Services when externallyAuthorized is true and mode of payment is G Pay",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-24414",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 184,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C137595",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch and login PV with valid credentials\r\n2. Run lock seats API\r\n3. Run checkout API ( keeping \"externallyAuthorized\" as true, \"walletType\" as \"G Pay\")\r\n4. Navigate to payment tab under ticket services of this order\r\n5. click on Ext link under Auth column",
        "expected": "1. Login successful\r\n2. Success\r\n3. Success\r\n4. Ext link under Auth column should be seen\r\n5. Authorization detail modal should be opened."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "4.0.40"
  },
  {
    "id": 30684143,
    "title": "Verify the Card Authorization detail modal is opened in Ticket Services when externallyAuthorized is true and mode of payment is Apple Pay",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-24414",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 185,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C137596",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch and login PV with valid credentials\r\n2. Run lock seats API\r\n3. Run checkout API ( keeping \"externallyAuthorized\" as true, \"walletType\" as \"Apple Pay\")\r\n4. Navigate to payment tab under ticket services of this order\r\n5. click on Ext link under Auth column",
        "expected": "1. Login successful\r\n2. Success\r\n3. Success\r\n4. Ext link under Auth column should be seen\r\n5. Authorization detail modal should be opened."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "4.0.40"
  },
  {
    "id": 30684144,
    "title": "Verify whether the card masking is displayed correctly while adding Amex card in payment method of ticket salesÂ ",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-24696",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 186,
    "custom_is_automated": false,
    "custom_pv_category": 16,
    "custom_refs": "C141122",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV aaplication\r\n2. Navigate to Tickets sales\r\n3. Select the event, patron and number of tickets \r\n4. navigate to payment method,select Amex card from the dropdown\r\n5. Added amex card and click Apply button\r\n6. Verify whether the card masking is displayed correctly while adding Amex card in payment method of ticket salesÂ ",
        "expected": "1. The application should be launched successfully.\r\n2. Navigation successfully.\r\n3. Selected successfully\r\n4. selection successfully\r\n5. card added successfully\r\n6. Card number ,everything except the last 4 characters should be masked, regardless of the length of the card."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "4.0.50.05"
  },
  {
    "id": 30684145,
    "title": "Verify whether the Amex card masking is displayed correctly while selecting payment tab in Tickets service page",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-24696",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 187,
    "custom_is_automated": false,
    "custom_pv_category": 16,
    "custom_refs": "C141123",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV aaplication\r\n2. Navigate to Tickets sales\r\n3. Select the event, patron and number of tickets \r\n4. navigate to payment method,select Amex card from the dropdown\r\n5. Added amex card and click Apply button\r\n6. Complete the transaction using the Amex card\r\n7. Verify whether the Amex card masking is displayed correctly while selecting payment tab in Tickets service page",
        "expected": "1. The application should be launched successfully.\r\n2. Navigation successfully.\r\n3. Selected successfully\r\n4. selection successfully\r\n5. card added successfully\r\n6. Transaction completed successfully\r\n7. Expected result:\nIn tickets sales and tickets services page the card number ,everything except the last 4 characters should be masked, regardless of the length of the card."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "4.0.50.05"
  },
  {
    "id": 30684146,
    "title": "Verify whether the card masking is displayed correctly while adding Amex card Digital wallet of patron portal",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-24696",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 188,
    "custom_is_automated": false,
    "custom_pv_category": 16,
    "custom_refs": "C141124",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV aaplication\r\n2. Navigate to Patron portal.Select the patron \r\n3. Add Amex card in the digital wallet \r\n4. Verify whether the card masking is displayed correctly while adding Amex card Digital wallet of patron portal",
        "expected": "1. The application should be launched successfully.\r\n2. Navigation successfully.\r\n3. Card added successfully\r\n4. Card masking should be displayed correctly while adding Amex card Digital wallet of patron portal successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "4.0.50.05"
  },
  {
    "id": 30684147,
    "title": "Verify whether the card masking is displayed correctly while selecting Digital wallet of patron portal after adding Amex card",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-24696",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 189,
    "custom_is_automated": false,
    "custom_pv_category": 16,
    "custom_refs": "C141125",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV aaplication\r\n2. Navigate to Patron portal.Select the patron \r\n3. Add Amex card in the digital wallet \r\n4. Verify whether the card masking is displayed correctly while selecting Digital wallet of patron portal after adding Amex card",
        "expected": "1. The application should be launched successfully.\r\n2. Navigation successfully.\r\n3. Card added successfully\r\n4. Card masking should be displayed correctly while adding Amex card Digital wallet of patron portal successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "4.0.50.05"
  },
  {
    "id": 30684148,
    "title": "Verify whether the card masking is displayed correctly while adding Amex card in payment method of ticket salesÂ ",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-24696",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 190,
    "custom_is_automated": false,
    "custom_pv_category": 16,
    "custom_refs": "C141126",
    "custom_preconds": "Add Amex card for patron A",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV aaplication\r\n2. Navigate to Tickets sales\r\n3. Select the event, patron A and number of tickets \r\n4. navigate to payment method,select the card on file \r\n5. Verify whether the card masking is displayed correctly while adding Amex card in payment method of ticket salesÂ ",
        "expected": "1. The application should be launched successfully.\r\n2. Navigation successfully.\r\n3. Selected successfully\r\n4. selection successfully\r\n5. Card number ,everything except the last 4 characters should be masked, regardless of the length of the card."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "4.0.50.05"
  },
  {
    "id": 30684149,
    "title": "Verify V2 checkout API in single sale with APPLE PAY payment method",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-24325",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 191,
    "custom_is_automated": false,
    "custom_pv_category": 2,
    "custom_refs": "C154795",
    "custom_preconds": "Set  APPLE_PAY payment",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite\n1. Create an event in PV\r\n2. Launch Rest client application\r\n3. Load lock request with the details of the event created\nRun the request\r\n4. Launch again rest client application\r\n5. Load checkout API in single sale with APPLE PAY payment method, externally authorized is set as True\r\n6. Verify in ticket services\r\n7. Verify Payment and Card Response table",
        "expected": "1. Prerequiste should be met\r\n2. Rest client application should get opened successfully\r\n3. Successful response should obtain\r\n4. The application should open successfully\r\n5. The response should display Wallet Type as APPLE PAY\n\n\r\n6. Wallet icon should be displayed\r\n7. The payment and card response should be displayed for APPLE_PAY"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "4.0.40.10"
  },
  {
    "id": 30684150,
    "title": "Verify card number is lost or masked when during will call services search",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26350",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 192,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C893481",
    "custom_preconds": "Login to PVNG\r\nhttps://pvqaf2.provenueapp.com:18443/",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Complete a ticket sale with credit card in will call delivery\r\n2. Navigate to will call services and search the delivery \nCard # Field\nDelivery Search Fields\nPatron Field with a CC number",
        "expected": "1. The transaction is successful\r\n2. The search should be succesful"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.0.50"
  },
  {
    "id": 30684151,
    "title": "Verify ticket services using credit card in Delivery Tab in Order & Transaction Detail View",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26350",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 193,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C893482",
    "custom_preconds": "Login to PVNG\r\nhttps://pvqaf2.provenueapp.com:18443/",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Complete a ticket sale with credit card in will call delivery\r\n2. Navigate to Ticket services and search the delivery (Simple and advanced Search)\n \r\n3. Search the order, Transaction and delivery",
        "expected": "1. The transaction is successful\r\n2. The search should be succesful\r\n3. The action should be succesful"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.0.50"
  },
  {
    "id": 30684152,
    "title": "Verify ticket sales using credit card when card true type is swipe/manual",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26350",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 194,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C893484",
    "custom_preconds": "Login to PVNG\r\nhttps://pvqaf2.provenueapp.com:18443/",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Set the card true type as Swipe/Manual\r\n2. Navigate to Ticket Sales with credit card",
        "expected": "1. Success\r\n2.  The sale should be succesful"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.0.50"
  },
  {
    "id": 30684153,
    "title": "Verify Schedule payment  using credit card when card true type is swipe/manual",
    "section_id": 1684671,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-26350",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 195,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C893485",
    "custom_preconds": "Login to PVNG\r\nhttps://pvqaf2.provenueapp.com:18443/",
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Set the card true type as Swipe/Manual\r\n2. Set receivables in Ticket sales, Scheduled payment icon and add/ edit digital wallet\n \r\n3. Repeat the same for ticket services receivable tab, and ticket services package info tab (when the package & payment plan are auto-renew)\n\nVerify also for full encryption",
        "expected": "1. Success\r\n2. The schedule payment action is succesful\r\n3. Success"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "5.0.50"
  },
  {
    "id": 30684154,
    "title": "Veriy that an error message is getting displayed for Searching Event s in Payment Methods Portal for No Search Result",
    "section_id": 1684672,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12350",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 25,
    "custom_refs": "C76166",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Launch PV Application using the link provided\r\n2. Login to the Application using suitable credentials\r\n3. System Setup->Payment methods\r\n4. Click on Find button\r\nSelect a Payment method from the result displayed\r\n5. 1. Add a supplier and Navigate to Events Tab\r\n2. Search for an event which is not existing\r\n6. 1. Navigate to events tab\r\n2. Search for an existing event",
        "expected": "1. PV Application should be launched successfully\r\n2. Login should be successfull\r\n3. user should succesfully navigate to Delivery method portal\r\n4. Payment  Method should be selected succesfully\r\n5. An error message \"No search Result Found\",\"Should displayed for 'Searching Event s in Delivery Methods Portal' for No Search  Result\r\n6. Event should be succesfully displayed"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.30"
  },
  {
    "id": 30684155,
    "title": "Verify Venue and Supplier details are displayed for event search in context rules of payment methods",
    "section_id": 1684672,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-9338",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 14,
    "custom_refs": "C76167",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the application URL\r\n2. Login to the application\r\n3. Select the \"Payment Method\" from System Setup menu\r\n4. Click on \"Find\" button\r\n5. Click any Payment Method\r\n6. Click on the Supplier link displayed under 'Supplier specific context' portal.\r\n7. Click on \"Find\" button\r\n8. 1.Select any suppliers in the list excluding the ones that are already included for the payment method.\r\n2.Click on \"ADD\" Button\r\n3. Clcik \"Apply Changes\" button\r\n9. Click on \"Logout\" at the top right side of the corner\r\n10. 1. Input * in the Event Search textbox\r\n2. Click on FIND button\r\n3.Verify the following details for the fileds are displayed\r\nCode,description,Venue,Event date,Supplier",
        "expected": "1. 1.The application should be launched successfully\r\n2. Login page should be displayed\r\n2. The user should be logged in\r\n3. Payment Method Portal should be displayed\r\n4. The list of Payment methods should be displayed\r\n5. Payment method page with Details, Supplier Specific Contexts should be displayed\r\n6. Suppliers tab enabling in the Payment method page should be displayed\r\n7. The list of suppliers should be displayed\r\n8. The list of suppliers should be added to the Payment methods successfully\r\n9. 1. The user should be logged out\r\n2. Login page should be displayed\r\n10. All the events should be displayed with the following details code,description,Venue,Event date,Supplier"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.10"
  },
  {
    "id": 30684156,
    "title": "Verify that no error message is displayed if an Open Item Receivable Activity Note Type is avilable",
    "section_id": 1684673,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19706",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 27,
    "custom_refs": "C63083",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV Application\r\n2. Login to the Application using suitable credentials\r\n3. 1.Navigate to Ticket sales\r\n2.Select a patron\r\n3.Select an event\r\n4.Select seats of this event and navigate to cart\r\n5.Assign Deliveryt method\r\n6.DO NOT make payment\r\n7.Create Receivable for the cart amount\r\n8.Enter reason note and complete the \r\nTransaction\r\n4. 1.Navigate to Event Admin\r\n2.Select the event for which transaction was completed above\r\n3.Change the status of the event to 'Off Sale'\r\n4.Click APPLY CHANGES\r\n5. 1.Navigate to Order Details\r\n2.Select the order created above\r\n3.Navigate to Receivables tab\r\n4.Click the icon against the Receivable\r\n5.Enter the amount to be written off\r\n6.Click APPLY\r\n6. Verify that no error message is displayed if an \r\nOpen Item Receivable Activity Note Typeis \r\navilable",
        "expected": "1. PV Application should be launched successfully\r\n2. Login should be successful\r\n3. Transaction should be completed successfully\r\n4. Status of the event should be chnaged to 'Off Sale' successfully\r\n5. Write off should be completed successfully\r\n6. No error message should be displayed"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.5.00"
  },
  {
    "id": 30684157,
    "title": "Verify the message is correct if the user does not have an Open Item Receivable Activity Note Type set up",
    "section_id": 1684673,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19706",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 27,
    "custom_refs": "C63084",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV Application\r\n2. Login to the Application using suitable credentials\r\n3. 1.Navigate to Ticket sales\r\n2.Select a patron\r\n3.Select an event\r\n4.Select seats of this event and navigate to cart\r\n5.Assign Deliveryt method\r\n6.DO NOT make payment\r\n7.Create Receivable for the cart amount\r\n8.Do note enter reason note and complete the \r\nTransaction\r\n4. 1.Navigate to Event Admin\r\n2.Select the event for which transaction was completed above\r\n3.Change the status of the event to 'Off Sale'\r\n4.Click APPLY CHANGES\r\n5. 1.Navigate to Order Details\r\n2.Select the order created above\r\n3.Navigate to Receivables tab\r\n4.Click the icon against the Receivable\r\n5.Enter the amount to be written off\r\n6.Click APPLY\r\n6. Verify the message is correct if the user does \r\nnot have an Open Item Receivable Activity Note \r\nType set up",
        "expected": "1. PV Application should be launched successfully\r\n2. Login should be successful\r\n3. Transaction should be completed successfully\r\n4. Status of the event should be chnaged to 'Off Sale' successfully\r\n5. Write off should be completed successfully\r\n6. Message displayed should be \r\n\"There are no open item receivable activity note \r\ntypes available.  Please contact your \r\nadministrator\""
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.5.00"
  },
  {
    "id": 30684158,
    "title": "Verify the datmart tables after performing Receivable Writeoff",
    "section_id": 1684673,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16673",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_pv_category": 17,
    "custom_refs": "C63085",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV Application\r\n2. Login to the Application using suitable credentials\r\n3. 1.Navigate to Ticket sales\r\n2.Select a patron\r\n3.Select an event\r\n4.Select seats of this event and navigate to cart\r\n5.Assign Deliveryt method\r\n6.DO NOT make payment\r\n7.Create Receivable for the cart amount and complete the Transaction\r\n4. 1.Navigate to Event Admin\r\n2.Select the event for which transaction was completed above\r\n3.Change the status of the event to 'Off Sale'\r\n4.Click APPLY CHANGES\r\n5. 1.Navigate to Order Details\r\n2.Select the order created above\r\n3.Navigate to Receivables tab\r\n4.Click the icon against the Receivable\r\n5.Enter the amount to be written off\r\n6.Click APPLY\r\n6. Login to squirel application\r\n5.Connect to Datmart schema\r\n6.Verify the TICKET_DIM, ACTIVITY_DIM, EVEN_DIM, TICKET_FACT for the transaction completed above",
        "expected": "1. PV Application should be launched successfully\r\n2. Login should be successful\r\n3. Transaction should be completed successfully\r\n4. Status of the event should be chnaged to 'Off Sale' successfully\r\n5. Write off should be completed successfully\r\n6. Details should be updated correctly in these tables"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.20"
  },
  {
    "id": 30684159,
    "title": "Verify whether user is getting error message while  doing  a receivable write off, when event associated to that receivable is in ?closed ? event status",
    "section_id": 1684673,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19601",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_pv_category": 27,
    "custom_refs": "C63086",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Event and patron should be avaialble\r\nEvent status should be on sale\r\n2. Login to PV application using the suitablecredentials:\r\n3. 1. Navigate to nticket sales and select event and \r\npatron, then lock seats\r\n2. Select a delivery method and apply\r\n3. On receivables tab, set intervals and all and \r\napply receivables\r\n4. Check out\r\n4. 1. Navigate to event administration\r\n2.Search for the event\r\n3. Change the event status to closed\r\n4. Click on apply changes\r\n5. Either click on the transaction id generated or \r\nnavigate to ticket services and entering that \r\ntransaction id, get the details\r\n6. 1.Navigate to receivables tab\r\n2.Click on the details icon\r\n3.Click on write off\r\n4.Enter the amount and select reason code\r\n5.Click on apply changes\r\n7. Verify whether the write off went success or \r\nnot\r\n8. Click on Log out.",
        "expected": "1. Pre-requisite should be created successfully.\r\n2. User log in to the application successfully.\r\n3. Receivable transaction should be successful\r\n4. Event status should be successfully changed\r\n5. Details should be available in the ticket service \r\npage\r\n6. The Liability window should be succesfully closed.\r\n7. User should get error message while  doing  a \r\nreceivable write off, when event associated to \r\nthat receivable is in ?closed ? event status\r\n8. The application should log out the user successfully."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.4.00"
  },
  {
    "id": 30684160,
    "title": "Verify whether user can do a receivable write off, when event associated to that receivable is in ?off sale ? event status",
    "section_id": 1684673,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19601",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_pv_category": 27,
    "custom_refs": "C63087",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Event and patron should be avaialble\r\nEvent status should be on sale\r\n2. Login to PV application using the suitablecredentials:\r\n3. 1. Navigate to nticket sales and select event and \r\npatron, then lock seats\r\n2. Select a delivery method and apply\r\n3. On receivables tab, set intervals and all and \r\napply receivables\r\n4. Check out\r\n4. Either click on the transaction id generated or \r\nnavigate to ticket services and entering that \r\ntransaction id, get the details\r\n5. 1.Navigate to receivables tab\r\n2.Click on the details icon\r\n3.Click on write off\r\n4.Enter the amount and select reason code\r\n5.Click on apply changes\r\n6. Verify whether the write off went success or \r\nnot\r\n7. Click on Log out.\r\n8. 1. Navigate to event administration\r\n2.Search for the event\r\n3. Change the event status to off sale\r\n4. Click on apply changes",
        "expected": "1. Pre-requisite should be created successfully.\r\n2. User log in to the application successfully.\r\n3. Receivable transaction should be successful\r\n4. Details should be available in the ticket service \r\npage\r\n5. The Liability window should be succesfully closed.\r\n6. User should be able to do a receivable write off, \r\nwhen event associated to that receivable is in ?off \r\nsale ? event status\r\n7. The application should log out the user successfully.\r\n8. Event status should be successfully changed"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.4.00"
  },
  {
    "id": 30684161,
    "title": "Verify whether user can do a receivable write off, when event associated to that receivable is in ?on sale ? event status",
    "section_id": 1684673,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-19601",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_pv_category": 27,
    "custom_refs": "C63088",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Event and patron should be avaialble\r\nEvent status should be on sale\r\n2. Login to PV application using the suitablecredentials:\r\n3. 1. Navigate to nticket sales and select event and \r\npatron, then lock seats\r\n2. Select a delivery method and apply\r\n3. On receivables tab, set intervals and all and \r\napply receivables\r\n4. Check out\r\n4. Either click on the transaction id generated or \r\nnavigate to ticket services and entering that \r\ntransaction id, get the details\r\n5. 1.Navigate to receivables tab\r\n2.Click on the details icon\r\n3.Click on write off\r\n4.Enter the amount and select reason code\r\n5.Click on apply changes\r\n6. Verify whether the write off went success or \r\nnot\r\n7. Click on Log out.",
        "expected": "1. Pre-requisite should be created successfully.\r\n2. User log in to the application successfully.\r\n3. Receivable transaction should be successful\r\n4. Details should be available in the ticket service \r\npage\r\n5. The Liability window should be succesfully closed.\r\n6. User should be able to do a receivable write off, \r\nwhen event associated to that receivable is in ?on \r\nsale ? event status\r\n7. The application should log out the user successfully."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "3.4.00"
  },
  {
    "id": 30684162,
    "title": "Verify the unexpected error not displayed when user trying to view the transaction for a Liability Write Off",
    "section_id": 1684673,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-17830",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_pv_category": 27,
    "custom_refs": "C63089",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Create a account credit for the patron\r\n2. Login to PV application using the following credentials:\r\n\r\nUrl: http://pvngqa5.back.tickets.com:18080/portal\r\nUsername: qauser_01\r\nPassword: Password00\r\n3. 1. Select \"Patron Management\" from Ticketing drop down\r\n2. Input the patron id or \"Account name\" and click on \"Find\" button\r\n3. Click on \"Account Balance\" button\r\n4. 1. Click on \"Details\" icon.\r\n2. Input $100 or any valid value corresponding to Amount text box.\r\n3. Select the Reason code.\r\n4. Input the Reason Text\r\n5. Click on \"Write Off\" button\r\n5. Click on \"Close' button\r\n6. 1.Navigate to Ticket Services\r\n2. Select \"Transaction Id\" from Search using Drop down\r\n3. Select the radio button corresponding to \"Transaction\"\r\n4. Input the above created transaction id (For Write off transaction )\r\n5. Click on \"Find\" button\r\n6.Verify the unexpected error not displayed when user trying to view the transaction for a Liability Write Off\r\n7. Click on Log out.",
        "expected": "1. Pre-requisite should be created successfully.\r\n2. User log in to the application successfully.\r\n3. The account credit details of that particular Patron should be displayed.\r\n4. A new transaction with Id should be created as expected for the writeoff done.\r\n5. The Liability window should be succesfully closed.\r\n6. 1. Unexpected error should not displayed\r\n2. The transaction details should be displayed successfully\r\n7. The application should log out the user successfully."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.10"
  },
  {
    "id": 30684163,
    "title": "Verify Patron account Credit is successfully  Writeoff",
    "section_id": 1684673,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-14236",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_pv_category": 27,
    "custom_refs": "C63090",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Create an account credit for the patron\r\n2. Login to PV application using the suitablecredentials:\r\n3. 1. Select \"Patron Management\" from Ticketing drop down\r\n2. Input the patron id or \"Account name\" and click on \"Find\" button\r\n3. Click on \"Account Balance\" button\r\n4. 1. Click on \"Details\" icon.\r\n2. Input $100 or any valid value corresponding to Amount text box.\r\n3. Select the Reason code.\r\n4. Input the Reason Text\r\n5. Click on \"Write Off\" button\r\n5. Click on \"Close' button\r\n6. 1.Navigate to Ticket Services\r\n2. Select \"Transaction Id\" from Search using Drop down\r\n3. Select the radio button corresponding to \"Transaction\"\r\n4. Input the above created transaction id (For Write off transaction )\r\n5. Click on \"Find\" button\r\n6. Click on \"Payments tab\"\r\n7. Click on Log out.",
        "expected": "1. Pre-requisite should be created successfully.\r\n2. User log in to the application successfully.\r\n3. The account credit details of that particular Patron should be displayed.\r\n4. A new transaction with Id should be created as expected for the writeoff done.\r\n5. The Liability window should be succesfully closed.\r\n6. 1. The transaction details should be displayed successfully\r\n2. The Payment details should be displayed correctly\r\n7. The application should log out the user successfully."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.1.10"
  },
  {
    "id": 30684164,
    "title": "Verify whether voucher created can be redeemed successfully",
    "section_id": 1684674,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-12815",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C62793",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV Application\r\n2. Login to the Application uisng suitable credentials\r\n3. 1.Create an event EVT1 of class 'Primary'\r\n2.Include it in event list PEL1\r\n3.Include this event list in a package PKG1\r\n4. 1.Create an event EVT2 with class as 'voucher'\r\n2.Include this event in a package event list PEL2 of class 'voucher'\r\n3. Select the package PKG1 create as Redemption Target package and PEL1 as Redemption Target Package List\r\n4.Include this event list in a package PKG2\r\n5. 1.Navigate to Ticket Sales\r\n2.Perform sales transaction for the voucher package PKG2 with printed tickets\r\n3.Note down the barcode of the printed tickets\r\n6. 1.Navigate to Ticket Sales\r\n2.Select seats of the event EVT1 (constituent event in the Redemption Target Package List) to sales cart\r\n3.Select patron\r\n4.Assign delivery method\r\n5.Navigate to payment method tab\r\n6.Choose any voucher payment method\r\n7.Enter the barcode created for the voucher package transaction in above step(step 5)\r\n8.Click ACCEPT PAYMENT\r\n7. 1.Click CHECKOUT to complete the transaction",
        "expected": "1. PV Application should be launched successfully\r\n2. Login should be successful\r\n3. Package PKG1 should be created succesfully\r\n4. Voucher package should be created successfully\r\n5. Transaction should be completed successfully.\r\n6. Payment should be accepted succesfully\r\n7. Transaction should be completed succesfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.30"
  },
  {
    "id": 30684165,
    "title": "Verify the field security code 43 is logged in the logs for sale transactions using Givex gift cards.",
    "section_id": 1684674,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16610",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_pv_category": 25,
    "custom_refs": "C62794",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Launch PV Application using the link provided\r\n2. Input the BO user details\nUsername:\nPassword:\r\n3. Click the Ticket sales link\r\n4. Input \"*\" in the search field of Ticket Sales page\r\n5. Click the sell icon of the required event\r\n6. 1.Select the required seats\r\n2.Select the Patron\r\n3.Select the Delivery method\r\n4.Select \" Givex gift card\" from the drop down box in the Payment tab \r\n5.input values in the fields\r\n should be done\r\n6.Click the Accept Payment button\r\n7. 1.Click the Confirm tab\n2.Note the Confirmation number\r\n8. Click the log out link at the top right corner of the page.\r\n9. Verify the Request and response logs are generated correctly.\r\nVerify for 43 field ,Givex security code value is logged  in the response",
        "expected": "1. The site should be launched successfully\r\n2. User should be logged in successfully\r\n3. The Ticket sales page should be displayed\r\n4. All the available events should be displayed to the user\r\n5. The Event should be getting selected. \r\nThe details of the event should be displayed\r\n6. The transaction should be done successfully\r\n7. The confirmation number should be displayed to the user\r\n8. The user should be able to log out from the application\r\n9. Verify the Request and response logs should generated correctly.\r\nGivex security code value should be logged for field 43  in the response."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.30"
  },
  {
    "id": 30684166,
    "title": "Verify that Givex Card number is getting masked or not as per the givex rule on receipt",
    "section_id": 1684674,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16903",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_pv_category": 25,
    "custom_refs": "C62795",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Select System setup>System Administration>Devices>Workstations.\r\n2. Click on the New button.\r\n3. Enter code, Description, Station Type, Station Group, External Station Id and a valid IP Address.\r\n4. Click on 'Apply Changes' button.\r\n2. 1. Slelet System setup>System Administration>Devices>Print attributes> Print Format. \r\n2. In the print attributes select the format type as Receipt\r\n3. Click on 'Apply Changes' button\r\n3. Design a ticket in the Ticket Designer with the newly created receipt format type\r\n4. 1. Select the Application Feature Permissions\r\n2. Open the User tab\r\n3. Select print permissions from the Set/Modify drop down\r\n4. Open the corresponding user\r\n5. Uncheck the inherit option of the Receipt Print Format drop down \r\n5 From the Receipt Print Format drop down, select the already designed ticket\r\n6. Click on Apply changes\r\n5. 1. Navigate to Ticket Sales\r\n2.Select seats and Patron\r\n3. Select the delivery method as Print Now\r\n4. Select Givex card payment method\r\n5. complete the transaction\r\n6. 1. After completing the transaction, a print format setup popup \r\n2. Select print card \r\n3.. Select \"Receipt\" as checked\r\n4. Click on Print",
        "expected": "1. The prereuisite step should be done successfully\r\n2. The receipt format type should be created succesfully\r\n3. The Ticket should be designed with the newly created receipt format type\r\n4. The Printing Permissions with the selected Receipt Print Format should get saved successfully\r\n5. Verify the Amount,Balance Amout and Auth amount\r\n\r\nThe ticket sale transaction should be done successfully\r\n6. 1. The receipt should be printed successfully\r\n2. Verify the receipt printed."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.30"
  },
  {
    "id": 30684167,
    "title": "Verify the user is able to use Givex gift cards for redemption to perform Package purchase and wait till the cart get expired",
    "section_id": 1684674,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16610",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_pv_category": 25,
    "custom_refs": "C62796",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Launch PV Application using the link provided\r\n2. Input the BO user details\nUsername:\nPassword:\r\n3. Click the Ticket sales link\r\n4. Input \"*\" in the search field of Ticket Sales page\r\n5. Click the sell icon of the required Package\r\n6. 1.Select the required seats\r\n2.Select the Patron\r\n3.Select the Delivery method\r\n4.Select \" Givex gift card\" from the drop down box in the Payment tab \r\n5.input values in the fields\r\n should be done\r\n6.Click the Accept Payment button\r\n7. Dont click on Check out button.Wait till the cart get expired",
        "expected": "1. The site should be launched successfully\r\n2. User should be logged in successfully\r\n3. The Ticket sales page should be displayed\r\n4. All the available package should be displayed to the user\r\n5. The Package should be getting selected.\r\n6. The transaction should be done successfully\r\n7. user should be able to complete package purchase and the cart should expired after a long time"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.30"
  },
  {
    "id": 30684168,
    "title": "Verify user can can change the patron when payment method as credit card only",
    "section_id": 1684674,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16742",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C62797",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. We have a credit card\r\n2.Event/package should be available for Sales\r\n2. 1. Login to PV with valid user and User ID\r\n3. 1. Search and select the Event\r\n\r\n2. click on the Sell icon in the Search Results Grid\r\n4. 1.Search and select the patron created\r\n2. Select a patron from the list by clicking the (+) button\r\n5. 1. Input no. of seats in the offer page\r\n6. 1. Click on the delivery tab.\r\n2.Select a delivery method from the drop down.\r\n3. Populate the address from the file\r\n4.Click Apply button.\r\n7. 1. Select credit card in the payment portlet\r\n2. Input Valid PIN number\r\n3. Click Accept Payment\r\n8. 1.Select for SEARCH option from 'Find Patron'option.\r\n2. Search and and select for a patron\r\n3. Verify whether user can change the patron.",
        "expected": "1. We have a protobase gift card avaiable for sales with a low balance say $20\r\n2. user can successfully loged in to PV\r\n3. The Selected Event should be listed in the My Events list and should be available for the Sale\r\n4. Patron should be listed in the Patron Portlet\r\n5. Patron cart should be displayed with Seat Details(make sure the transaction amount is equal to the available credit of the gift card in pre requisite step)\r\n6. System should able to allow the user to select a delivery method from the drop down and the address field should be populated by selecting an address from the file.\r\n7. Payment should be successful with the  protobase Gift card\r\n8. User should be able to change the patron and complete the transaction."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "1.3"
  },
  {
    "id": 30684169,
    "title": "Verify user can can change the patron when payment method as cash only.",
    "section_id": 1684674,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16742",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C62798",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Event/package should be available for Sales\r\n2. 1. Login to PV with valid user and User ID\r\n3. 1. Search and select the Event\r\n\r\n2. click on the Sell icon in the Search Results Grid\r\n4. 1.Search and select the patron created\r\n2. Select a patron from the list by clicking the (+) button\r\n5. 1. Input no. of seats in the offer page\r\n6. 1. Click on the delivery tab.\r\n2.Select a delivery method from the drop down.\r\n3. Populate the address from the file\r\n4.Click Apply button.\r\n7. 1. Select cash as payment method\r\n8. 1.Select for SEARCH option from 'Find Patron'option.\r\n2. Search and and select for a patron\r\n3. Verify whether user can change the patron.\r\n9. Verify the user is able to complete the transaction",
        "expected": "1. We have a protobase gift card avaiable for sales with a low balance say $20\r\n2. user can successfully loged in to PV\r\n3. The Selected Event should be listed in the My Events list and should be available for the Sale\r\n4. Patron should be listed in the Patron Portlet\r\n5. Patron cart should be displayed with Seat Details(make sure the transaction amount is equal to the available credit of the gift card in pre requisite step)\r\n6. System should able to allow the user to select a delivery method from the drop down and the address field should be populated by selecting an address from the file.\r\n7. Payment should be successful with the  cash only.\r\n8. User should be able to change the patron and all previous delivery and payment details should be removed.\r\n9. User should be able to complete the transaction."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "1.3"
  },
  {
    "id": 30684170,
    "title": "Verify the user is able to use Givex gift cards for redemption to perform a sale transaction when card balance is greater than the trasaction amount_MLB",
    "section_id": 1684674,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16610",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_pv_category": 25,
    "custom_refs": "C62799",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Set up BOTS for Gift Card\r\nSet up FOTS for Gift Card\r\nA Givex gift card whose available balance is greater than the trasaction amount should be present.\r\n(Example:Givex card balance is $ 35 transaction amount is $ 30)\r\n2. Launch PVO-PV application using the link provided\r\n3. 1. Click on the Buy Tickets Link of any event in the Event Schedule page 2. Select the number of tickets: and continue 3. Navigate till the payment page\r\n4. Fill in all the required billing details, email address, confirm email address fields\r\n5. Choose a delivery method\r\n6. Choose Givex card as the payment method\r\nInput necessary fields\r\n7. 1. Verify that in the confirmation page the gift card numbers along with the amount deducted from each are displayed correctly \r\n2. Verify that the credit card number is displayed correctly. And if any amount is deducted form credit card it is also displayed.\r\n8. Verify that the patron receives the email of the transaction\r\n9. 1. Verify that in the email the gift card numbers along with the amount deducted from each are displayed correctly \r\n2. Verify that the credit card number is displayed correctly. And if any amount is deducted form credit card it is also displayed.\r\n10. 1. Launch PV application and login 2. Select Ticket services from the drop down\r\n11. 1. Select Transaction ID from the Search For drop down 2. enter the transaction ID noted in step 6 in the Search Value text box 3. Click on FIND button\r\n12. In the order details page click on the Payment tab\r\n13. 1. Verify that in the payment tab the gift card numbers along with the amount deducted from each are displayed correctly 2. Verify that the credit card number is displayed correctly. And if any amount is deducted form credit card it is also displayed.\r\n14. Select Logout from the drop down",
        "expected": "1. \r\n2. PVO-PV MLB site should be launched\r\n3. User should be able to navigate till the payment page\r\n4. User should be able to edit the fields\r\n5. User should be able to select a delivery method\r\n6. Transaction should be completed successfully. Amount should be deducted from the valid gift card numbers .Confirmation page should be displayed Note down the transaction number\r\n7. 1.In the confirmation page the gift card numbers along with the amount deducted from each should be displayed correctly\r\n2. The credit card number should be displayed correctly. And if any amount is deducted from credit card it should also be displayed.\r\n8. Patron should receive an email\r\n9. 1.In the email the gift card numbers along with the amount deducted from each should be displayed correctly \r\n2. The credit card number should be displayed correctly. And if any amount is deducted from credit card it should also be displayed.\r\n10. Ticket service portal should be displayed\r\n11. Order details of the transaction should be displayed\r\n12. Payment details of the transaction should be displayed\r\n13. 1.In the payment tab the gift card numbers along with the amount deducted from each should be displayed correctly 2. The credit card number should be displayed correctly. And if any amount is deducted from credit card it should also be displayed.\r\n14. User should be logged out successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.30"
  },
  {
    "id": 30684171,
    "title": "Verify the user is able to use Givex gift cards for redemption to perform a sale transaction when card balance is greater than the trasaction amount_GPL",
    "section_id": 1684674,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16610",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_pv_category": 25,
    "custom_refs": "C62800",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Set up BOTS for Gift Card\r\nSet up FOTS for Gift Card\r\nA Givex gift card whose available balance is greater than the trasaction amount should be present\r\n(Example:Givex card balance is $ 35 transaction amount is $ 30)\r\n2. Launch PVO-PV application using the link provided\r\n3. 1. Click on the Buy Tickets Link of any event in the Event Schedule page 2. Select the number of tickets: and continue 3. Navigate till the payment page\r\n4. Fill in all the required billing details, email address, confirm email address fields\r\n5. Choose a delivery method\r\n6. Choose Givex card as the payment method\r\nInput necessary fields\r\n7. 1. Verify that in the confirmation page the gift card numbers along with the amount deducted from each are displayed correctly \r\n2. Verify that the credit card number is displayed correctly. And if any amount is deducted form credit card it is also displayed.\r\n8. Verify that the patron receives the email of the transaction\r\n9. 1. Verify that in the email the gift card numbers along with the amount deducted from each are displayed correctly \r\n2. Verify that the credit card number is displayed correctly. And if any amount is deducted form credit card it is also displayed.\r\n10. 1. Launch PV application and login 2. Select Ticket services from the drop down\r\n11. 1. Select Transaction ID from the Search For drop down 2. enter the transaction ID noted in step 6 in the Search Value text box 3. Click on FIND button\r\n12. In the order details page click on the Payment tab\r\n13. 1. Verify that in the payment tab the gift card numbers along with the amount deducted from each are displayed correctly 2. Verify that the credit card number is displayed correctly. And if any amount is deducted form credit card it is also displayed.\r\n14. Select Logout from the drop down",
        "expected": "1. \r\n2. PVO-PV GPL site should be launched\r\n3. User should be able to navigate till the payment page\r\n4. User should be able to edit the fields\r\n5. User should be able to select a delivery method\r\n6. Transaction should be completed successfully. Amount should be deducted from the valid gift card numbers .Confirmation page should be displayed Note down the transaction number\r\n7. 1.In the confirmation page the gift card numbers along with the amount deducted from each should be displayed correctly\r\n2. The credit card number should be displayed correctly. And if any amount is deducted from credit card it should also be displayed.\r\n8. Patron should receive an email\r\n9. 1.In the email the gift card numbers along with the amount deducted from each should be displayed correctly \r\n2. The credit card number should be displayed correctly. And if any amount is deducted from credit card it should also be displayed.\r\n10. Ticket service portal should be displayed\r\n11. Order details of the transaction should be displayed\r\n12. Payment details of the transaction should be displayed\r\n13. 1.In the payment tab the gift card numbers along with the amount deducted from each should be displayed correctly 2. The credit card number should be displayed correctly. And if any amount is deducted from credit card it should also be displayed.\r\n14. User should be logged out successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.30"
  },
  {
    "id": 30684172,
    "title": "Verify the user is able to use Givex gift cards for redemption to perform a sale transaction when card balance is lessthan the trasaction amount_GPL",
    "section_id": 1684674,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16610",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 9,
    "custom_is_automated": false,
    "custom_pv_category": 25,
    "custom_refs": "C62801",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Set Up Gift cards from BOTS and FOTS\r\n2. A Givex gift card whose available balance less than the trasaction amount should be provided\r\n2. Launch GPL single tickets application with the following URL \r\n\r\n3. Select the number of tickets from the drop down list as >.\r\n2. Select Tickets with greater amount than available amount in givex gift card\r\n3.Click on Continue button.\r\n4. 1. Enter the Word/image displayed in the /Recaptcha image.\r\n2. Click the continue button.\r\n5. Click the Continue button.\r\n6. 1. Select choice button against I already have an account on MLB.com. 2. Enter E-mail address:  Password:  3. Click on Login button\r\n7. Payement should be done using the gift card adn credit card\r\n\r\n8. Click on Buy Tickets in the Summary frame\r\n9. The event details (including the event name and description), the seat details, the price and fee details of all the different offers present in the Order Summary should be correct.\r\nDifferent Links available in the confirmation page\r\n10. In the Order Confirmation Page verify and Note the values for the Following Payment Details:\r\nCard Type\r\nCard Number (Encrypted)\r\nAmount for which the Card is Charged\r\nTotall Transaction Amount",
        "expected": "1. \r\n2. The application should be launched\r\n3. Appliaction should show a Recaptcha modal ( Recaptcha Pop up)\r\n4. The entry is accepted and the Shopping Cart page should be displayed.\r\n5. Log In or Register page should be displayed as pop up ( Login Modal) in the shopping cart page\r\n6. The payment page should be displayed.\r\n7. The user should be able to enter all the details\r\n8. Thanks for your Order page should be displayed with the following Details:\r\nBill To: (Address, Payment Details)\r\nDeliver To: (Patron, Shipping Details)\r\nConfirmation no. : (Bots Patron Id / Order no.)\r\nAmount should be charged from Gift card and credit card as expected.\r\n9. 1. The event details (including the event name and description), the seat details, the price and fee details of all the different offers present in the Order Summary should be correct.\r\n3.Click on \"See More Events\" , should take the application to schedule page\r\n4. Also there are more links \"Seating & Pricing\", \"\r\nDirections & Parking\", \"Ballpark A to Z Guide\" & \r\n\"Local Area Information\" which should direct application to appropriate pages\r\n10. The details should be having the folowing values in it.\r\nCard Type : Gift Card & Visa card\r\nCard Number : Cardnumber(Encrypted) for Gift card & CC.\r\nAmount: Amount Set for Gift Card should be charged against Gift Card & Remaining amount should be charged against Credit Card.\r\nTotal Transaction Amount (Amount charged Against Gift Card + CC) should be the total amount shown in the Payment Information Page."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.30"
  },
  {
    "id": 30684173,
    "title": "Verify the user is able to use Givex gift cards for redemption to perform a sale transaction when card balance is lessthan the trasaction amount_MLB",
    "section_id": 1684674,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16610",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 10,
    "custom_is_automated": false,
    "custom_pv_category": 25,
    "custom_refs": "C62802",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Set Up Gift cards from BOTS and FOTS\r\n2. A Givex gift card whose available balance less than the trasaction amount should be provided\r\n2. Launch MLB single tickets application with the following URL \r\n\r\n3. Select the number of tickets from the drop down list as >.\r\n2. Select Tickets with greater amount than available amount in givex gift card\r\n3.Click on Continue button.\r\n4. 1. Enter the Word/image displayed in the /Recaptcha image.\r\n2. Click the continue button.\r\n5. Click the Continue button.\r\n6. 1. Select choice button against I already have an account on MLB.com. 2. Enter E-mail address:  Password:  3. Click on Login button\r\n7. Payement should be done using the gift card adn credit card\r\n\r\n8. Click on Buy Tickets in the Summary frame\r\n9. The event details (including the event name and description), the seat details, the price and fee details of all the different offers present in the Order Summary should be correct.\r\nDifferent Links available in the confirmation page\r\n10. In the Order Confirmation Page verify and Note the values for the Following Payment Details:\r\nCard Type\r\nCard Number (Encrypted)\r\nAmount for which the Card is Charged\r\nTotall Transaction Amount",
        "expected": "1. \r\n2. The application should be launched\r\n3. Appliaction should show a Recaptcha modal ( Recaptcha Pop up)\r\n4. The entry is accepted and the Shopping Cart page should be displayed.\r\n5. Log In or Register page should be displayed as pop up ( Login Modal) in the shopping cart page\r\n6. The payment page should be displayed.\r\n7. The user should be able to enter all the details\r\n8. Thanks for your Order page should be displayed with the following Details:\r\nBill To: (Address, Payment Details)\r\nDeliver To: (Patron, Shipping Details)\r\nConfirmation no. : (Bots Patron Id / Order no.)\r\nAmount should be charged from Gift card and credit card as expected.\r\n9. 1. The event details (including the event name and description), the seat details, the price and fee details of all the different offers present in the Order Summary should be correct.\r\n3.Click on \"See More Events\" , should take the application to schedule page\r\n4. Also there are more links \"Seating & Pricing\", \"\r\nDirections & Parking\", \"Ballpark A to Z Guide\" & \r\n\"Local Area Information\" which should direct application to appropriate pages\r\n10. The details should be having the folowing values in it.\r\nCard Type : Gift Card & Visa card\r\nCard Number : Cardnumber(Encrypted) for Gift card & CC.\r\nAmount: Amount Set for Gift Card should be charged against Gift Card & Remaining amount should be charged against Credit Card.\r\nTotal Transaction Amount (Amount charged Against Gift Card + CC) should be the total amount shown in the Payment Information Page."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.30"
  },
  {
    "id": 30684174,
    "title": "Perform a sale transaction in GPL single tixx using Givex gift card and credit card",
    "section_id": 1684674,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16610",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 11,
    "custom_is_automated": false,
    "custom_pv_category": 25,
    "custom_refs": "C62803",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Set Up Gift cards from BOTS and FOTS\r\n2. Launch GPL PV single tickets application with the following URL \r\n\r\n3. Select the number of tickets from the drop down list as >.\r\n2. Select Tickets with greater amount than available amount in givex gift card\r\n3.Click on Continue button.\r\n4. 1. Enter the Word/image displayed in the /Recaptcha image.\r\n2. Click the continue button.\r\n5. Click the Continue button.\r\n6. 1. Select choice button against I already have an account on MLB.com. 2. Enter E-mail address:  Password:  3. Click on Login button\r\n7. Payement should be done using the gift card adn credit card\r\n\r\n8. Click on Buy Tickets in the Summary frame\r\n9. The event details (including the event name and description), the seat details, the price and fee details of all the different offers present in the Order Summary should be correct.\r\nDifferent Links available in the confirmation page\r\n10. In the Order Confirmation Page verify and Note the values for the Following Payment Details:\r\nCard Type\r\nCard Number (Encrypted)\r\nAmount for which the Card is Charged\r\nTotall Transaction Amount",
        "expected": "1. \r\n2. The application should be launched\r\n3. Appliaction should show a Recaptcha modal ( Recaptcha Pop up)\r\n4. The entry is accepted and the Shopping Cart page should be displayed.\r\n5. Log In or Register page should be displayed as pop up ( Login Modal) in the shopping cart page\r\n6. The payment page should be displayed.\r\n7. The user should be able to enter all the details\r\n8. Thanks for your Order page should be displayed with the following Details:\r\nBill To: (Address, Payment Details)\r\nDeliver To: (Patron, Shipping Details)\r\nConfirmation no. : (Bots Patron Id / Order no.)\r\nAmount should be charged from Gift card and credit card as expected.\r\n9. 1. The event details (including the event name and description), the seat details, the price and fee details of all the different offers present in the Order Summary should be correct.\r\n3.Click on \"See More Events\" , should take the application to schedule page\r\n4. Also there are more links \"Seating & Pricing\", \"\r\nDirections & Parking\", \"Ballpark A to Z Guide\" & \r\n\"Local Area Information\" which should direct application to appropriate pages\r\n10. The details should be having the folowing values in it.\r\nCard Type : Gift Card & Visa card\r\nCard Number : Cardnumber(Encrypted) for Gift card & CC.\r\nAmount: Amount Set for Gift Card should be charged against Gift Card & Remaining amount should be charged against Credit Card.\r\nTotal Transaction Amount (Amount charged Against Gift Card + CC) should be the total amount shown in the Payment Information Page."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.30"
  },
  {
    "id": 30684175,
    "title": "Perform a sale transaction in MLB single tixx using Givex gift card and credit card.",
    "section_id": 1684674,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16610",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 12,
    "custom_is_automated": false,
    "custom_pv_category": 25,
    "custom_refs": "C62804",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Set Up Gift cards from BOTS and FOTS\r\n2. Launch MLB PV single tickets application with the following URL \r\n\r\n3. Select the number of tickets from the drop down list as >.\r\n2. Select Tickets with greater amount than available amount in givex gift card\r\n3.Click on Continue button.\r\n4. 1. Enter the Word/image displayed in the /Recaptcha image.\r\n2. Click the continue button.\r\n5. Click the Continue button.\r\n6. 1. Select choice button against I already have an account on MLB.com. 2. Enter E-mail address:  Password:  3. Click on Login button\r\n7. Payement should be done using the gift card adn credit card\r\n\r\n8. Click on Buy Tickets in the Summary frame\r\n9. The event details (including the event name and description), the seat details, the price and fee details of all the different offers present in the Order Summary should be correct.\r\nDifferent Links available in the confirmation page\r\n10. In the Order Confirmation Page verify and Note the values for the Following Payment Details:\r\nCard Type\r\nCard Number (Encrypted)\r\nAmount for which the Card is Charged\r\nTotall Transaction Amount",
        "expected": "1. \r\n2. The application should be launched\r\n3. Appliaction should show a Recaptcha modal ( Recaptcha Pop up)\r\n4. The entry is accepted and the Shopping Cart page should be displayed.\r\n5. Log In or Register page should be displayed as pop up ( Login Modal) in the shopping cart page\r\n6. The payment page should be displayed.\r\n7. The user should be able to enter all the details\r\n8. Thanks for your Order page should be displayed with the following Details:\r\nBill To: (Address, Payment Details)\r\nDeliver To: (Patron, Shipping Details)\r\nConfirmation no. : (Bots Patron Id / Order no.)\r\nAmount should be charged from Gift card and credit card as expected.\r\n9. 1. The event details (including the event name and description), the seat details, the price and fee details of all the different offers present in the Order Summary should be correct.\r\n3.Click on \"See More Events\" , should take the application to schedule page\r\n4. Also there are more links \"Seating & Pricing\", \"\r\nDirections & Parking\", \"Ballpark A to Z Guide\" & \r\n\"Local Area Information\" which should direct application to appropriate pages\r\n10. The details should be having the folowing values in it.\r\nCard Type : Gift Card & Visa card\r\nCard Number : Cardnumber(Encrypted) given in Step 11 for Gift card & CC.\r\nAmount: Amount Set for Gift Card should be charged against Gift Card & Remaining amount should be charged against Credit Card.\r\nTotal Transaction Amount (Amount charged Against Gift Card + CC) should be the total amount shown in the Payment Information Page."
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.30"
  },
  {
    "id": 30684176,
    "title": "Perform a sale transaction in GPL single tixx using Givex gift card only.",
    "section_id": 1684674,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16610",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 13,
    "custom_is_automated": false,
    "custom_pv_category": 25,
    "custom_refs": "C62805",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Set up BOTS for Gift Card\r\nSet up FOTS for Gift Card\r\n2. Launch PVO-PV application using the link provided\r\n3. 1. Click on the Buy Tickets Link of any event in the Event Schedule page 2. Select the number of tickets: and continue 3. Navigate till the payment page\r\n4. Fill in all the required billing details, email address, confirm email address fields\r\n5. Choose a delivery method\r\n6. Choose Givex card as the payment method\r\nInput necessary fields\r\n7. 1. Verify that in the confirmation page the gift card numbers along with the amount deducted from each are displayed correctly \r\n2. Verify that the credit card number is displayed correctly. And if any amount is deducted form credit card it is also displayed.\r\n8. Verify that the patron receives the email of the transaction\r\n9. 1. Verify that in the email the gift card numbers along with the amount deducted from each are displayed correctly \r\n2. Verify that the credit card number is displayed correctly. And if any amount is deducted form credit card it is also displayed.\r\n10. 1. Launch PV application and login 2. Select Ticket services from the drop down\r\n11. 1. Select Transaction ID from the Search For drop down 2. enter the transaction ID noted in step 6 in the Search Value text box 3. Click on FIND button\r\n12. In the order details page click on the Payment tab\r\n13. 1. Verify that in the payment tab the gift card numbers along with the amount deducted from each are displayed correctly 2. Verify that the credit card number is displayed correctly. And if any amount is deducted form credit card it is also displayed.\r\n14. Select Logout from the drop down",
        "expected": "1. \r\n2. PVO-PV GPL site should be launched\r\n3. User should be able to navigate till the payment page\r\n4. User should be able to edit the fields\r\n5. User should be able to select a delivery method\r\n6. Transaction should be completed successfully. Amount should be deducted from the valid gift card numbers .Confirmation page should be displayed Note down the transaction number\r\n7. 1.In the confirmation page the gift card numbers along with the amount deducted from each should be displayed correctly\r\n2. The credit card number should be displayed correctly. And if any amount is deducted from credit card it should also be displayed.\r\n8. Patron should receive an email\r\n9. 1.In the email the gift card numbers along with the amount deducted from each should be displayed correctly \r\n2. The credit card number should be displayed correctly. And if any amount is deducted from credit card it should also be displayed.\r\n10. Ticket service portal should be displayed\r\n11. Order details of the transaction should be displayed\r\n12. Payment details of the transaction should be displayed\r\n13. 1.In the payment tab the gift card numbers along with the amount deducted from each should be displayed correctly 2. The credit card number should be displayed correctly. And if any amount is deducted from credit card it should also be displayed.\r\n14. User should be logged out successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.30"
  },
  {
    "id": 30684177,
    "title": "Perform a sale transaction in MLB single tixx using Givex gift card only.",
    "section_id": 1684674,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16610",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 14,
    "custom_is_automated": false,
    "custom_pv_category": 25,
    "custom_refs": "C62806",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Set up BOTS for Gift Card\r\nSet up FOTS for Gift Card\r\n2. Launch PVO-PV application using the link provided\r\n3. 1. Click on the Buy Tickets Link of any event in the Event Schedule page 2. Select the number of tickets: and continue 3. Navigate till the payment page\r\n4. Fill in all the required billing details, email address, confirm email address fields\r\n5. Choose a delivery method\r\n6. Choose Givex card as the payment method\r\nInput necessary fields\r\n7. 1. Verify that in the confirmation page the gift card numbers along with the amount deducted from each are displayed correctly \r\n2. Verify that the credit card number is displayed correctly. And if any amount is deducted form credit card it is also displayed.\r\n8. Verify that the patron receives the email of the transaction\r\n9. 1. Verify that in the email the gift card numbers along with the amount deducted from each are displayed correctly \r\n2. Verify that the credit card number is displayed correctly. And if any amount is deducted form credit card it is also displayed.\r\n10. 1. Launch PV application and login 2. Select Ticket services from the drop down\r\n11. 1. Select Transaction ID from the Search For drop down 2. enter the transaction ID noted in step 6 in the Search Value text box 3. Click on FIND button\r\n12. In the order details page click on the Payment tab\r\n13. 1. Verify that in the payment tab the gift card numbers along with the amount deducted from each are displayed correctly 2. Verify that the credit card number is displayed correctly. And if any amount is deducted form credit card it is also displayed.\r\n14. Select Logout from the drop down",
        "expected": "1. \r\n2. PVO-PV MLB site should be launched\r\n3. User should be able to navigate till the payment page\r\n4. User should be able to edit the fields\r\n5. User should be able to select a delivery method\r\n6. Transaction should be completed successfully. Amount should be deducted from the valid gift card numbers .Confirmation page should be displayed Note down the transaction number\r\n7. 1.In the confirmation page the gift card numbers along with the amount deducted from each should be displayed correctly\r\n2. The credit card number should be displayed correctly. And if any amount is deducted from credit card it should also be displayed.\r\n8. Patron should receive an email\r\n9. 1.In the email the gift card numbers along with the amount deducted from each should be displayed correctly \r\n2. The credit card number should be displayed correctly. And if any amount is deducted from credit card it should also be displayed.\r\n10. Ticket service portal should be displayed\r\n11. Order details of the transaction should be displayed\r\n12. Payment details of the transaction should be displayed\r\n13. 1.In the payment tab the gift card numbers along with the amount deducted from each should be displayed correctly 2. The credit card number should be displayed correctly. And if any amount is deducted from credit card it should also be displayed.\r\n14. User should be logged out successfully"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.30"
  },
  {
    "id": 30684178,
    "title": "Verify the user is able to use Givex gift cards to create a  transaction using order trasaction import utility",
    "section_id": 1684674,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PV-16610",
    "created_by": 399,
    "created_on": 1684926992,
    "updated_by": 399,
    "updated_on": 1684926992,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611361,
    "display_order": 15,
    "custom_is_automated": false,
    "custom_pv_category": 28,
    "custom_refs": "C62807",
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": null,
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PV Application using the link provided\r\n2. Login to the Application as the user U1 mentioned in pre Requisite\r\n3. 1. Select Data Import from the drop down list\r\n2. Select Orders and Transaction from the drop down corresponding to 'Import Run Type'\r\n4. 1.Click on New\r\n2.Enter all the mandatory fields \r\n3.Click APPLY CHANGES\r\n5. Select Squirrel application\r\n6. Login to squirrel with valid credentials\r\n7. Insert Data to the TRANSACTION IMPORT table.\r\n(Import Run details should be corresponding to the Import Run created in step 4)\r\n\r\n\r\nRun the query:\r\n8. Create a Order using givex gift card in DB\r\nRun the query:\r\n9. 1.Launch PV Application\r\n2. Login to the PV application as the user U1 mentioned earlier\r\n10. 1. Select Data Import from the drop down list\r\n2. Select Orders and Transaction from the drop down corresponding to 'Import Run Type'\r\n11. Click on the Validate icon against the IMPORT RUN created in step 5\r\n12. Click on the RUN button\r\n13. Select Ticket Services from drop down\r\n14. 1. Select Ticket Services\r\n2. select Transaction Id from \"search for\" drop down\r\n3. Input the Transaction Id\r\n4. Click on \"Find\" button\r\n15. 1. Verify whether the details of the corresponding transaction are displayed\r\n2. Verify that all the details entered in the database are displayed correctly",
        "expected": "1. PV Application should be launched successfully\r\n2. Login should be successfull\r\n3. The Orders and Transaction Import page should be displayed\r\n4. A new import run should be created successfully\r\n5. The application should be launched\r\n6. User should be logged in successfully\r\n7. The data should be inserted successfully to the TRANSACTION IMPORT table\r\n8. The data should be inserted successfully to table\r\n9. Login should be successful\r\n10. The Orders and Transaction Import page should be displayed\r\n11. Validation should be completed successfully\r\n12. The Run should be completed successfully\r\n13. The Ticket Services portal should be displayed\r\n14. The order details page should be displayed\r\n15. The details of the corresponding transaction should be displayed correctly"
      }
    ],
    "custom_comment": null,
    "custom_jiras": "2.3.30"
  }
]