[
  {
    "id": 30692689,
    "title": "Verify completing the Single sales transaction with Masterpass for Masterpass optional event",
    "section_id": 1684981,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15837, PVO-18236",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C151320",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1. 1. set the Masterpass properties & Have a Masterpass Optional event\r\n2. Patron should have MasterCard added to the MasterPass Wallet\r\n3. For supplier set text code SPLITDE=false",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch MLB Single tickets application\r\nExpected Result:\r\nMLB Single tickets application should be launched\r\n2. Locks seats and click Continue\r\nExpected Result:\r\nUser should be navigated to Recaptcha page\r\n3. Enter Recaptcha and click Continue\r\nExpected Result:\r\nUser should be navigated to Shopping Cart page\r\n4. In the Shopping Cart page click Continue button\r\nExpected Result:\r\nUser should be navigated to Login page\r\n5. In the Login page login as a existing user\r\nExpected Result:\r\nUser should be navigated to Payment page\r\n6. In the Payment page select 'MasterPass' button\r\nExpected Result:\r\nUser should be navigated to MasterPass login page\r\n7. User enter security question in the Verification page and click Continue\r\nExpected Result:\r\nSecurity question should be accepted and user should be navigated to the Add Payment Card page\r\n8. In the Master Pass select the Master Card for payment and click CheckOut after consent Feature turned ON\r\nExpected Result:\r\nMaster Card should be selected for Payment\r\n9. Enter mandatory fields in the Payment page, Select MasterPass MasterCard and complete the transaction\r\nExpected Result:\r\nTransaction should be completed with MasterPass Master Card\r\n10. Verify the card is stored in the patron_card_info table\r\nExpected Result:\r\nCard should be stored in  patron_card_info table\r\n11. Verify PV and PVO logs for the credit card processing of the order\r\nExpected Result:\r\nLogs should not display any error.\ncard used should be displayed correctly\r\n12. Verify the order_text MPPPWI, MPTID, MPPCRD, MPPCISI\r\nExpected Result:\r\nText code values should be displayed correctly\n\n\"MPPPWI\"  - Wallet indicator to send to BOTS/Credit Card Processor \n\n\"MPTID\" - Contains the MasterPass Transaction ID\n\n\"MPPCRD\" - Contains the MasterPass post completion response data\n\nMPPCISI\" - contains the Patron_Card_Info Sequence Id of the MasterPass card that has been stored in our wallet.\r\n13. Launch and login PV application\nNavigate to the Ticket services\nSearch and select the above order\nIn payments tab, verify the card authorization details\r\nExpected Result:\r\nAuthorization details should be shown correctly",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch MLB Single tickets application\r\n2. Locks seats and click Continue\r\n3. Enter Recaptcha and click Continue\r\n4. In the Shopping Cart page click Continue button\r\n5. In the Login page login as a existing user\r\n6. In the Payment page select 'MasterPass' button\r\n7. User enter security question in the Verification page and click Continue\r\n8. In the Master Pass select the Master Card for payment and click CheckOut after consent Feature turned ON\r\n9. Enter mandatory fields in the Payment page, Select MasterPass MasterCard and complete the transaction\r\n10. Verify the card is stored in the patron_card_info table\r\n11. Verify PV and PVO logs for the credit card processing of the order\r\n12. Verify the order_text MPPPWI, MPTID, MPPCRD, MPPCISI\r\n13. Launch and login PV application\nNavigate to the Ticket services\nSearch and select the above order\nIn payments tab, verify the card authorization details",
        "expected": "1. MLB Single tickets application should be launched\r\n2. User should be navigated to Recaptcha page\r\n3. User should be navigated to Shopping Cart page\r\n4. User should be navigated to Login page\r\n5. User should be navigated to Payment page\r\n6. User should be navigated to MasterPass login page\r\n7. Security question should be accepted and user should be navigated to the Add Payment Card page\r\n8. Master Card should be selected for Payment\r\n9. Transaction should be completed with MasterPass Master Card\r\n10. Card should be stored in  patron_card_info table\r\n11. Logs should not display any error.\ncard used should be displayed correctly\r\n12. Text code values should be displayed correctly\n\n\"MPPPWI\"  - Wallet indicator to send to BOTS/Credit Card Processor \n\n\"MPTID\" - Contains the MasterPass Transaction ID\n\n\"MPPCRD\" - Contains the MasterPass post completion response data\n\nMPPCISI\" - contains the Patron_Card_Info Sequence Id of the MasterPass card that has been stored in our wallet.\r\n13. Authorization details should be shown correctly"
      }
    ],
    "custom_jiras": "58.1"
  },
  {
    "id": 30692690,
    "title": "Verify the Masterpass card image is not appearing in the confirmation page  during account credit transaction for upgrade online exchange transaction force use of credit enabled",
    "section_id": 1684981,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-16513",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C151321",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": "1. The Patron Account have credits available\r\n2. Eligible tickets for online exchange should be available in inventory.\r\n3.target event should be Masterpass optional.\r\n4.Payment plan should be associated to the event.\r\n5. Set FUACE to true for the event",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to My tickets as above patron and do an exchange action and proceed till payment page.\r\nExpected Result:\r\nPatron should reach on Payment page.\r\n2. Verify the Credit  card and Masterpass are available.\r\nExpected Result:\r\nCredit card and Masterpass should be available.\r\n3. Verify the Checkbox for account credit is not available\r\nExpected Result:\r\nCheckbox for account credit is not available\r\n4. Add Masterpass card and complete transaction with Account credit.\r\nExpected Result:\r\nTransaction should be completed successfully\r\n5. Verify the Masterpass card image is not appearing in the confirmation page.\n\r\nExpected Result:\r\nThe Masterpass card image should not be appeared in the confirmation page.\r\n6. Verify the Credit card number is not displaying (except last 4 digits)/payment method is not displaying in the confirmation email.\r\nExpected Result:\r\nThe card image should not appear in the confirmation page & last 4 digits of the card number should not be masked in the confirmation mail Payment deatils or that line it self should be removed.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to My tickets as above patron and do an exchange action and proceed till payment page.\r\n2. Verify the Credit  card and Masterpass are available.\r\n3. Verify the Checkbox for account credit is not available\r\n4. Add Masterpass card and complete transaction with Account credit.\r\n5. Verify the Masterpass card image is not appearing in the confirmation page.\n\r\n6. Verify the Credit card number is not displaying (except last 4 digits)/payment method is not displaying in the confirmation email.",
        "expected": "1. Patron should reach on Payment page.\r\n2. Credit card and Masterpass should be available.\r\n3. Checkbox for account credit is not available\r\n4. Transaction should be completed successfully\r\n5. The Masterpass card image should not be appeared in the confirmation page.\r\n6. The card image should not appear in the confirmation page & last 4 digits of the card number should not be masked in the confirmation mail Payment deatils or that line it self should be removed."
      }
    ],
    "custom_jiras": "65"
  },
  {
    "id": 30692691,
    "title": "Verify completing a transaction  after selecting a card via MasterPass from single tickets payment page when a patron has already a default card in the wallet",
    "section_id": 1684981,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PVO-14790",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C151322",
    "custom_pvo_pvodc_category": 10,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Have a patron craeted in PV with default designotr \ncheckbox checked for a credit card.\r\nExpected Result:\r\nPre-requisite should be met\r\n2. Launch Single tickets,select seats  and login as the patron \nmentioned in the per requisite.\r\nExpected Result:\r\nLogin should be successful.\r\n3. Navigate to payment page\r\nExpected Result:\r\nPatron should be displayed with payment page.\r\n4. Verify that  new column labeled â€˜Defaultâ€™ for digital wallet items \nis introduced and a green check is displayed against the \ndefault credit card.\r\nExpected Result:\r\nThe default card should be checked with green mark in the default column.\r\n5. Verify that  flag for card for which we checked default checkbox is passed as true in MaintainPatron API call.\r\nExpected Result:\r\nThe  flag for card for which we checked default checkbox should be passed as true.\r\n6. Verify PATRON_CARD_INFO table- Ensure that DEFAULT_CARD NUMBER column is set 1 for the card which is set as default\r\nExpected Result:\r\nDEFAULT_CARD NUMBER column should be set 1 for the card which is set as default .\r\n7. Click on Master pass button.\r\nExpected Result:\r\nMaster pass login modal should be displayed.\r\n8. Login with valid credentials and choose any cards \navailable in the login for primary purchase.\r\nExpected Result:\r\nUser should be navigated to payment page.\r\n9. Complete the transaction with the card assigned from \nmaster pass.\r\nExpected Result:\r\nTransaction should be completed \nsuccessfully.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Have a patron craeted in PV with default designotr \ncheckbox checked for a credit card.\r\n2. Launch Single tickets,select seats  and login as the patron \nmentioned in the per requisite.\r\n3. Navigate to payment page\r\n4. Verify that  new column labeled â€˜Defaultâ€™ for digital wallet items \nis introduced and a green check is displayed against the \ndefault credit card.\r\n5. Verify that  flag for card for which we checked default checkbox is passed as true in MaintainPatron API call.\r\n6. Verify PATRON_CARD_INFO table- Ensure that DEFAULT_CARD NUMBER column is set 1 for the card which is set as default\r\n7. Click on Master pass button.\r\n8. Login with valid credentials and choose any cards \navailable in the login for primary purchase.\r\n9. Complete the transaction with the card assigned from \nmaster pass.",
        "expected": "1. Pre-requisite should be met\r\n2. Login should be successful.\r\n3. Patron should be displayed with payment page.\r\n4. The default card should be checked with green mark in the default column.\r\n5. The  flag for card for which we checked default checkbox should be passed as true.\r\n6. DEFAULT_CARD NUMBER column should be set 1 for the card which is set as default .\r\n7. Master pass login modal should be displayed.\r\n8. User should be navigated to payment page.\r\n9. Transaction should be completed \nsuccessfully."
      }
    ],
    "custom_jiras": "62.2"
  },
  {
    "id": 30692692,
    "title": "Verify the MPPCRD text code is not  returned with errors in PVO orders after completing Singlesales transaction for Masterpass Optional event.",
    "section_id": 1684981,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-16128",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C151323",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Launch PVO Singlesales link for masterpass \noptional event\r\nExpected Result:\r\nPVO Singlesales link for Masterpass optional \nevent should be launched successfully\r\n2. Select Seats with greater than $ 1000\r\nExpected Result:\r\nSeats should be selected\r\n3. Continue to Shopping cart page\r\nExpected Result:\r\nShopping cart page should be displayed\r\n4. Login as New/Existing user\r\nExpected Result:\r\nLogin should be successfull\r\n5. Select Delivery method and click on Continue\r\nExpected Result:\r\nPayment page should be displayed\r\n6. Verify Masterpass is only payment method \navailable.\r\nExpected Result:\r\nMasterpass should be the only payment method \navailable.\r\n7. Login Masterpass and choose a card\r\nExpected Result:\r\nCard should be selected\r\n8. Return to payment page\r\nExpected Result:\r\nPayment page should be displayed\r\n9. Complete transaction\r\nExpected Result:\r\nTransaction should be completed successfully\r\n10. Verify the Order Texts\r\nExpected Result:\r\n\"MPWID\" - Wallet indicator to send to BOTS/Credit \nCard Processor \n \n\"MPTID\" - Contains the MasterPass Transaction ID\n \n\"MPPERMCD\"- Masterpass Permission code \nstored which is sent from PV.\n \nMPPCISI\" - contains the Patron_Card_Info \nSequence Id of the MasterPass card that has \nbeen stored in our wallet.\n\nPPFD-The Order text stores payment page form \ndata for payment page redraw.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PVO Singlesales link for masterpass \noptional event\r\n2. Select Seats with greater than $ 1000\r\n3. Continue to Shopping cart page\r\n4. Login as New/Existing user\r\n5. Select Delivery method and click on Continue\r\n6. Verify Masterpass is only payment method \navailable.\r\n7. Login Masterpass and choose a card\r\n8. Return to payment page\r\n9. Complete transaction\r\n10. Verify the Order Texts",
        "expected": "1. PVO Singlesales link for Masterpass optional \nevent should be launched successfully\r\n2. Seats should be selected\r\n3. Shopping cart page should be displayed\r\n4. Login should be successfull\r\n5. Payment page should be displayed\r\n6. Masterpass should be the only payment method \navailable.\r\n7. Card should be selected\r\n8. Payment page should be displayed\r\n9. Transaction should be completed successfully\r\n10. \"MPWID\" - Wallet indicator to send to BOTS/Credit \nCard Processor \n \n\"MPTID\" - Contains the MasterPass Transaction ID\n \n\"MPPERMCD\"- Masterpass Permission code \nstored which is sent from PV.\n \nMPPCISI\" - contains the Patron_Card_Info \nSequence Id of the MasterPass card that has \nbeen stored in our wallet.\n\nPPFD-The Order text stores payment page form \ndata for payment page redraw."
      }
    ],
    "custom_jiras": "64"
  },
  {
    "id": 30692693,
    "title": "Verify the UI displayed when retuning from masterpass page to single sales during Online Voucher transaction.",
    "section_id": 1684981,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-16119",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C151324",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Launch mytixx link\r\nExpected Result:\r\nMytixx should be launched successfully\r\n2. Login using valid credentials\r\nExpected Result:\r\nLogin should be successful\r\n3. Select ticket action as Redeem Voucher\r\nExpected Result:\r\nRedeem Voucher should be selected\r\n4. Complete the transaction with masterpass\r\nExpected Result:\r\nTransaction should be done with masterpass\r\n5. Verify the UI displayed when retuning from \nmasterpass page to single sales during Online \nVoucher transaction.\r\nExpected Result:\r\nThere should not be any distortion in UI",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch mytixx link\r\n2. Login using valid credentials\r\n3. Select ticket action as Redeem Voucher\r\n4. Complete the transaction with masterpass\r\n5. Verify the UI displayed when retuning from \nmasterpass page to single sales during Online \nVoucher transaction.",
        "expected": "1. Mytixx should be launched successfully\r\n2. Login should be successful\r\n3. Redeem Voucher should be selected\r\n4. Transaction should be done with masterpass\r\n5. There should not be any distortion in UI"
      }
    ],
    "custom_jiras": "64"
  },
  {
    "id": 30692694,
    "title": "Verify there is no duplicate Masterpass card is generated after adding a credit card from Masterpas wallet and delete the credit card from MTD and verify it can be added in PVO again",
    "section_id": 1684981,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15585",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C151325",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre - condition\r\n1. Set an event with Masterpass payment type \r\nonly option in PV\r\n2.Perf accept the event and configure the same \r\nas POID.",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the single sales link\r\nExpected Result:\r\nAvailability page should get launched\r\n2. From the buyer types listed,select the number of seats.\r\nExpected Result:\r\nUser is able to select the number of seats from the dropdown listed under each buyer type.\r\n3. click on continue.\nVerify whether user is navigated in to re captcha verification page.\r\nExpected Result:\r\nUser is successfully navigated in to re captcha verification page.\r\n4. After completeing the recaptcha verification, User will get navigated in to shopping cart page.\nVerify the UI of shopping cart page.\r\nExpected Result:\r\nShopping cart UI is getting displayed as expected.\r\n5. Click on continue.\r\nExpected Result:\r\nUser is navigated in to Login/register page.\r\n6. In the Login or register page, select  the radio \nbutton \"I already have an account on MLB.com\" \nand verify the UI.\r\nExpected Result:\r\nThe textboxes for entering email address and \npassword is getting displayed.\r\n7. Now, select \"I don't have an account on MLB.com\" and verify the UI\r\nExpected Result:\r\nTextboxes for entering email address, password and confirm password are getting displayed.\r\n8. Login/ sign up with valid credentials.\r\nExpected Result:\r\nUser will get navigated in to delivery page.\r\n9. From the delivery method page, select any of the delivery method and press continue button.\r\nExpected Result:\r\nUser will get navigated in to Payment page.\r\n10. Verify that Mater pass option only displayed in payment page\r\nExpected Result:\r\nMater pass option should only be displayed in payment page\r\n11. Select Masterpass option.\nIn the masterpass wallet, login with valid \ncredentials.\r\nExpected Result:\r\nUser is navigated to the masterpass wallet.\r\n12. Inside the wallet, press Add Card link.\r\nExpected Result:\r\nPage for adding your card will get displayed.\nEnter valid card number, expiration date and \nsecurity code .\r\n13. Press continue.\r\nExpected Result:\r\nUser is re navigated to payment page.\r\n14. Enter all the following required fields in the payment page.\n  \n\nTicket Insurance \nConfirm Email \nPlease select where you heard about us!.\n\n\nand Press Buy Tickets\r\nExpected Result:\r\nUser is navigated to confirmation page.\r\n15. Go to MTD and login with same patron and delete \nthe Card added via Masterpass\r\nExpected Result:\r\nThe card should be removed.\r\n16. Come back to PVOsingle sales and navigate \nup to payment page\r\nExpected Result:\r\nPatron should be sen the masterpass card \nwith the details honoring pv permission.\r\n17. Verify the user can re add the card as expected.\r\nExpected Result:\r\nExpected Result:\n \nThe patron should be able to add the card and \nthe user",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the single sales link\r\n2. From the buyer types listed,select the number of seats.\r\n3. click on continue.\nVerify whether user is navigated in to re captcha verification page.\r\n4. After completeing the recaptcha verification, User will get navigated in to shopping cart page.\nVerify the UI of shopping cart page.\r\n5. Click on continue.\r\n6. In the Login or register page, select  the radio \nbutton \"I already have an account on MLB.com\" \nand verify the UI.\r\n7. Now, select \"I don't have an account on MLB.com\" and verify the UI\r\n8. Login/ sign up with valid credentials.\r\n9. From the delivery method page, select any of the delivery method and press continue button.\r\n10. Verify that Mater pass option only displayed in payment page\r\n11. Select Masterpass option.\nIn the masterpass wallet, login with valid \ncredentials.\r\n12. Inside the wallet, press Add Card link.\r\n13. Press continue.\r\n14. Enter all the following required fields in the payment page.\n  \n\nTicket Insurance \nConfirm Email \nPlease select where you heard about us!.\n\n\nand Press Buy Tickets\r\n15. Go to MTD and login with same patron and delete \nthe Card added via Masterpass\r\n16. Come back to PVOsingle sales and navigate \nup to payment page\r\n17. Verify the user can re add the card as expected.",
        "expected": "1. Availability page should get launched\r\n2. User is able to select the number of seats from the dropdown listed under each buyer type.\r\n3. User is successfully navigated in to re captcha verification page.\r\n4. Shopping cart UI is getting displayed as expected.\r\n5. User is navigated in to Login/register page.\r\n6. The textboxes for entering email address and \npassword is getting displayed.\r\n7. Textboxes for entering email address, password and confirm password are getting displayed.\r\n8. User will get navigated in to delivery page.\r\n9. User will get navigated in to Payment page.\r\n10. Mater pass option should only be displayed in payment page\r\n11. User is navigated to the masterpass wallet.\r\n12. Page for adding your card will get displayed.\nEnter valid card number, expiration date and \nsecurity code .\r\n13. User is re navigated to payment page.\r\n14. User is navigated to confirmation page.\r\n15. The card should be removed.\r\n16. Patron should be sen the masterpass card \nwith the details honoring pv permission.\r\n17. Expected Result:\n \nThe patron should be able to add the card and \nthe user"
      }
    ],
    "custom_jiras": "63.2"
  },
  {
    "id": 30692695,
    "title": "Verify the user is able to complete transaction with Flex package with Masterpass only Events.",
    "section_id": 1684981,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15585",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_refs": "C151326",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre - condition1. Set up a Flex Packaget with Masterpass payment type only option in PV2.Perf accept the event and \r\nVerify the Proprties mentioned below (C 68).",
    "custom_test_purpose": null,
    "custom_steps": "1. From the buyer types listed,select the number of seats.\r\nExpected Result:\r\nUser is able to select the number of seats from the dropdown listed under each buyer type.\r\n2. Now, select \"I don't have an account on MLB.com\" and verify the UI .\r\nExpected Result:\r\nTextboxes for entering email address, password and confirm password are getting displayed.\r\n3. Login/ sign up with valid credentials.\r\nExpected Result:\r\nUser will get navigated in to delivery page.\r\n4. From the delivery method page, select any of the delivery method and press continue button.\r\nExpected Result:\r\nUser will get navigated in to Payment page.\r\n5. Verify that Mater pass option only displayed in payment page\r\nExpected Result:\r\nMater pass option should only be displayed in payment page\r\n6. Select masterpass option, sign in  and from the wallet select card and press continue.\r\nExpected Result:\r\nUser is again navigated in to payment page\r\n7. After completeing the recaptcha verification, User will get navigated in to shopping cart page.Verify the UI of shopping \ncart page.\r\nExpected Result:\r\nShopping cart UI is getting displayed as expected\r\n8. Click on continue.\r\nExpected Result:\r\nUser is navigated in to Login/register page.\r\n9. In the Login or register page, select  the radio button \"I already have an account on MLB.com\" and verify the UI.\r\nExpected Result:\r\nThe textboxes for entering email address and password is getting displayed.\r\n10. Enter all the following required fields in the payment page.  Ticket Insurance Confirm Email Please select where you \nheard about us!.and Press Buy Tickets .\r\nExpected Result:\r\nUser is navigated to confirmation page.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. From the buyer types listed,select the number of seats.\r\n2. Now, select \"I don't have an account on MLB.com\" and verify the UI .\r\n3. Login/ sign up with valid credentials.\r\n4. From the delivery method page, select any of the delivery method and press continue button.\r\n5. Verify that Mater pass option only displayed in payment page\r\n6. Select masterpass option, sign in  and from the wallet select card and press continue.\r\n7. After completeing the recaptcha verification, User will get navigated in to shopping cart page.Verify the UI of shopping \ncart page.\r\n8. Click on continue.\r\n9. In the Login or register page, select  the radio button \"I already have an account on MLB.com\" and verify the UI.\r\n10. Enter all the following required fields in the payment page.  Ticket Insurance Confirm Email Please select where you \nheard about us!.and Press Buy Tickets .",
        "expected": "1. User is able to select the number of seats from the dropdown listed under each buyer type.\r\n2. Textboxes for entering email address, password and confirm password are getting displayed.\r\n3. User will get navigated in to delivery page.\r\n4. User will get navigated in to Payment page.\r\n5. Mater pass option should only be displayed in payment page\r\n6. User is again navigated in to payment page\r\n7. Shopping cart UI is getting displayed as expected\r\n8. User is navigated in to Login/register page.\r\n9. The textboxes for entering email address and password is getting displayed.\r\n10. User is navigated to confirmation page."
      }
    ],
    "custom_jiras": "63.2"
  },
  {
    "id": 30692696,
    "title": "Verify that user is able to complete transaction with master pass payment only event option, after removing  masterpass event offer from the cart_multiple masterpass event offers are locked",
    "section_id": 1684981,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15837",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_refs": "C151327",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Prerequiste:\r\n1. Masterpass payment type only option to true event 1 and event 2\r\n2.Perf accept the event",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the single sales link for event 1\r\nExpected Result:\r\nEvent 1 availability page should be displayed\r\n2. Verify the availability response\r\nExpected Result:\r\nNo errros should be passed in the avialability response\r\n3. Select seats and add to cart\r\nExpected Result:\r\nShopping cart ppage should be displayed\r\n4. Add tickets to the cart\r\nExpected Result:\r\nPayment page should be displayed\r\n5. Add Event 2 (another masterpass event) to cart\r\nExpected Result:\r\nadding event 2 should be successful\r\n6. Login\r\nExpected Result:\r\nLogin should be successful\r\n7. Login to master pass and assign card\r\nExpected Result:\r\nMaster pass login and card assigning should be successful\r\n8. Remove the second event\r\nExpected Result:\r\nEvent removal should be successful\r\n9. Verify the UI of the payment page\r\nExpected Result:\r\nThe UI of the page should be proper\r\n10. Complete the transaction\r\nExpected Result:\r\nTransaction should be completed successfully",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the single sales link for event 1\r\n2. Verify the availability response\r\n3. Select seats and add to cart\r\n4. Add tickets to the cart\r\n5. Add Event 2 (another masterpass event) to cart\r\n6. Login\r\n7. Login to master pass and assign card\r\n8. Remove the second event\r\n9. Verify the UI of the payment page\r\n10. Complete the transaction",
        "expected": "1. Event 1 availability page should be displayed\r\n2. No errros should be passed in the avialability response\r\n3. Shopping cart ppage should be displayed\r\n4. Payment page should be displayed\r\n5. adding event 2 should be successful\r\n6. Login should be successful\r\n7. Master pass login and card assigning should be successful\r\n8. Event removal should be successful\r\n9. The UI of the page should be proper\r\n10. Transaction should be completed successfully"
      }
    ],
    "custom_jiras": "63.2"
  },
  {
    "id": 30692697,
    "title": "Verify that after adding a new credit card, user is able to complete a single sales transaction selecting MasterPass",
    "section_id": 1684981,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13480",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 9,
    "custom_is_automated": false,
    "custom_refs": "C151328",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Mastepass setup should be in place\r\nExpected Result:\r\nPrerequisite should be met\r\n2. Launch SIngle sales applicaiton link\r\nExpected Result:\r\nAvailability page is displayed\r\n3. Select desired number of seats from any price scale and click Continue button\r\nExpected Result:\r\nRecaptcha modal is displayed\r\n4. Enter text verfication code on recaptcha modal and click Continue button\r\nExpected Result:\r\nShopping cart is displayed\r\n5. Click Continue button on shopping cart page\r\nExpected Result:\r\nLogin modal is displayed\r\n6. Log in as existing patron\r\nExpected Result:\r\nPayment page is displayed\r\n7. Click Add new card button\r\nExpected Result:\r\nPayment/Billing details modal is displayed\r\n8. Fill in Card Info and Billing info and click Submit button\r\nExpected Result:\r\nPayment page is displayed and new card \nadded to shown in card grid\r\n9. Click Masterpass button and verify Lightbox is displayed\r\nExpected Result:\r\nMastepass lightbox is displayed\r\n10. 1.Select the lauguage and click Next\n2.Select Mastepass from the list of wallets displayed\n3.Enter login credentials:  Joe.test@email.com, abc123 and click Sign in button\n4.Answer the security question-fido and click Next button\n5.Select the card from 'Pay with' list and click Finish Shopping button\r\nExpected Result:\r\n1.User is navigated back to PVO Payment page. \n2.The card selected from Masterpass is \ndisplayed on payment page with Masterpass \nicon.\n3.The card is preselected.\r\n11. Fill in all other required field on Payment page and click on Buy Tickets button\r\nExpected Result:\r\nConfirmation page is displayed and payment \nis done through the card selected from \nMasterpass",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Mastepass setup should be in place\r\n2. Launch SIngle sales applicaiton link\r\n3. Select desired number of seats from any price scale and click Continue button\r\n4. Enter text verfication code on recaptcha modal and click Continue button\r\n5. Click Continue button on shopping cart page\r\n6. Log in as existing patron\r\n7. Click Add new card button\r\n8. Fill in Card Info and Billing info and click Submit button\r\n9. Click Masterpass button and verify Lightbox is displayed\r\n10. 1.Select the lauguage and click Next\n2.Select Mastepass from the list of wallets displayed\n3.Enter login credentials:  Joe.test@email.com, abc123 and click Sign in button\n4.Answer the security question-fido and click Next button\n5.Select the card from 'Pay with' list and click Finish Shopping button\r\n11. Fill in all other required field on Payment page and click on Buy Tickets button",
        "expected": "1. Prerequisite should be met\r\n2. Availability page is displayed\r\n3. Recaptcha modal is displayed\r\n4. Shopping cart is displayed\r\n5. Login modal is displayed\r\n6. Payment page is displayed\r\n7. Payment/Billing details modal is displayed\r\n8. Payment page is displayed and new card \nadded to shown in card grid\r\n9. Mastepass lightbox is displayed\r\n10. 1.User is navigated back to PVO Payment page. \n2.The card selected from Masterpass is \ndisplayed on payment page with Masterpass \nicon.\n3.The card is preselected.\r\n11. Confirmation page is displayed and payment \nis done through the card selected from \nMasterpass"
      }
    ],
    "custom_jiras": "59.1"
  },
  {
    "id": 30692698,
    "title": "Verify when clicked Learn More Link next to Materpass button, user is redircted to URL set in  MPWLMURL",
    "section_id": 1684981,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15837",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 10,
    "custom_is_automated": false,
    "custom_refs": "C151329",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1. set the below properties :\r\nMaster Pass request token API URL\r\n        Property = master.pass.request.token.url\r\n        QA value = https://sandbox.api.mastercard.com/oauth/consumer/v1/request_token\r\n\r\nMaster Pass access token API URL\r\n        Property = master.pass.access.token.url\r\n        QA value = https://sandbox.api.mastercard.com/ oauth/consumer/v1/access_token\r\n\r\nMaster Pass postback API URL\r\n        Property = master.pass.postback.url\r\n        QA value = https://sandbox.api.mastercard.com/online/v2/transaction\r\n\r\nMaster Pass consumer key\r\n        Property = master.pass.consumerkey\r\n        QA value = 0PLQ-x2n4q-GdgQDcaYR043w0NIcFS3vJs_VaAbh307eaea1!61616d555830624d47583258586f546c34562b3444513d3d\r\n\r\nMaster Pass checkout identifier\r\n        Property = master.pass. checkoutidentifier\r\n        QA value (same as prod) = a4a6w4vw7jn1qhud2dwq81hud4rw5b1bj\r\n\r\nTDC Master Pass Keystore - contains the TDC private key (for the domain, ie. onsale.tickets.com)\r\n        Property = master.pass.keystore.path\r\n        Default value = /opt/pvo/masterpass/certs/tdc_mp_keystore.p12\r\n\r\nMasterPass keystore password\r\n        Property = master.pass.keystore.password, master.pass.key.password\r\n        Default value = changeit\r\n\r\nMasterPass API connect timeout\r\n        Property = master.pass.api.connect.timeout.seconds\r\n        Default value = 5 (seconds)\r\n\r\nMasterPass API read timeout\r\n        Property = master.pass.api.read.timeout.seconds\r\n        Default value = 60 (seconds)\r\n\r\nMasterPass API XML version (no need to change the default value)\r\n        Property = master.pass.xml.version\r\n        Default value = v5\r\n\r\nProperty to configure TDC MasterPass card type mapping\r\n        Property = tdc.master.pass.card.type.mapping\r\n        Default value = master=MSTR|visa=VISA|amex=AMEX|discover=DISC\r\n        Format =  MasterPassCode1=TDCPaymentCode1|MasterPassCode2=TDCPaymentCode2\r\n        Note:  This property can be pre-fixed with lowercase Supplier Code and \".\" to configure the mapping at the supplier level for e.g. ngbt.tdc.master.pass.card.type.mapping\r\n\r\n\r\n\r\nSet \"MPPME\" - MASTER_PASS_PAYMENT_METHOD_ENABLED - true\r\n\r\n2. Add different types of cards for MasterPass to the supplier payment types\r\n3.Set MPWLMURL textcode with a non-default value",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch MLB Single tickets application\r\nExpected Result:\r\nMLB Single tickets application should be launched\r\n2. Locks seats and click Continue\r\nExpected Result:\r\nUser should be navigated to Recaptcha page\r\n3. Enter Recaptcha and click Continue\r\nExpected Result:\r\nUser should be navigated to Shopping Cart page\r\n4. In the Shopping Cart page click Continue button\r\nExpected Result:\r\nUser should be navigated to Login page\r\n5. In the Login page login as a existing user\r\nExpected Result:\r\nUser should be navigated to Payment page\r\n6. In the Payment page, verify that 'Learn More' link is displayed next to MasterPass button\r\nExpected Result:\r\nLearn More' link is displayed next to MasterPass button\r\n7. 1.Click on Learn More link\n2.Verify that a new tab is opened and user is re-directed to the web page set in MPWLMURL\r\nExpected Result:\r\nA new tab is opened and user is re-directed to the web page set in MPWLMURL",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch MLB Single tickets application\r\n2. Locks seats and click Continue\r\n3. Enter Recaptcha and click Continue\r\n4. In the Shopping Cart page click Continue button\r\n5. In the Login page login as a existing user\r\n6. In the Payment page, verify that 'Learn More' link is displayed next to MasterPass button\r\n7. 1.Click on Learn More link\n2.Verify that a new tab is opened and user is re-directed to the web page set in MPWLMURL",
        "expected": "1. MLB Single tickets application should be launched\r\n2. User should be navigated to Recaptcha page\r\n3. User should be navigated to Shopping Cart page\r\n4. User should be navigated to Login page\r\n5. User should be navigated to Payment page\r\n6. Learn More' link is displayed next to MasterPass button\r\n7. A new tab is opened and user is re-directed to the web page set in MPWLMURL"
      }
    ],
    "custom_jiras": "58.1"
  },
  {
    "id": 30692699,
    "title": "Verify that user is able to complete a single sales transaction using Masterpass with AKAMAI Enabled",
    "section_id": 1684981,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15837",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 11,
    "custom_is_automated": false,
    "custom_refs": "C151330",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "AKAMAI set up should be set correctly",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch and login PV application\nNavigate to the Ticket services\nSearch and select the above order\nIn payments tab, verify the card authorization details\r\nExpected Result:\r\nAuthorization details should be shown correctly\r\n2. 1. 1. set the below properties :\nMaster Pass request token API URL\n        Property = master.pass.request.token.url\n        QA value = https://sandbox.api.mastercard.com/oauth/consumer/v1/request_token\n\nMaster Pass access token API URL\n        Property = master.pass.access.token.url\n        QA value = https://sandbox.api.mastercard.com/ oauth/consumer/v1/access_token\n\nMaster Pass postback API URL\n        Property = master.pass.postback.url\n        QA value = https://sandbox.api.mastercard.com/online/v2/transaction\n\nMaster Pass consumer key\n        Property = master.pass.consumerkey\n        QA value = 0PLQ-x2n4q-GdgQDcaYR043w0NIcFS3vJs_VaAbh307eaea1!61616d555830624d47583258586f546c34562b3444513d3d\n\nMaster Pass checkout identifier\n        Property = master.pass. checkoutidentifier\n        QA value (same as prod) = a4a6w4vw7jn1qhud2dwq81hud4rw5b1bj\n\nTDC Master Pass Keystore - contains the TDC private key (for the domain, ie. onsale.tickets.com)\n        Property = master.pass.keystore.path\n        Default value = /opt/pvo/masterpass/certs/tdc_mp_keystore.p12\n\nMasterPass keystore password\n        Property = master.pass.keystore.password, master.pass.key.password\n        Default value = changeit\n\nMasterPass API connect timeout\n        Property = master.pass.api.connect.timeout.seconds\n        Default value = 5 (seconds)\n\nMasterPass API read timeout\n        Property = master.pass.api.read.timeout.seconds\n        Default value = 60 (seconds)\n\nMasterPass API XML version (no need to change the default value)\n        Property = master.pass.xml.version\n        Default value = v5\n\nProperty to configure TDC MasterPass card type mapping\n        Property = tdc.master.pass.card.type.mapping\n        Default value = master=MSTR|visa=VISA|amex=AMEX|discover=DISC\n        Format =  MasterPassCode1=TDCPaymentCode1|MasterPassCode2=TDCPaymentCode2\n        Note:  This property can be pre-fixed with lowercase Supplier Code and \".\" to configure the mapping at the supplier level for e.g. ngbt.tdc.master.pass.card.type.mapping\n\n\n\nSet \"MPPME\" - MASTER_PASS_PAYMENT_METHOD_ENABLED - true\n\n2. Patron should have Master/ VISA/ Discover/ AMEX Card added to the MasterPass Wallet\n3. For supplier enable AKAMAI\r\nExpected Result:\r\nPre-requisite should be met\r\n3. Launch MLB Single tickets application\r\nExpected Result:\r\nMLB Single tickets application should be launched\r\n4. Locks seats and click Continue\r\nExpected Result:\r\nUser should be navigated to Recaptcha page\r\n5. Enter Recaptcha and click Continue\r\nExpected Result:\r\nUser should be navigated to Shopping Cart page\r\n6. In the Shopping Cart page click Continue button\r\nExpected Result:\r\nUser should be navigated to Login page\r\n7. In the Login page login as a existing user\r\nExpected Result:\r\nUser should be navigated to Payment page\r\n8. In the Payment page select 'Buy with MasterPass' button\r\nExpected Result:\r\nUser should be navigated to MasterPass login page\r\n9. User enter security question in the Verification page and click Continue\r\nExpected Result:\r\nSecurity question should be accepted and user should be navigated to the Add Payment Card page\r\n10. In the Master Pass select the Master/ VISA/ Discover/ AMEX Card for payment and click CheckOut\r\nExpected Result:\r\nMaster/ VISA/ Discover/ AMEX Card should be selected for Payment\r\n11. Enter mandatory fields in the Payment page, Select MasterPass Master/ VISA/ Discover/ AMEX Card and complete the transaction\r\nExpected Result:\r\nTransaction should be completed with MasterPass Master/ VISA/ Discover/ AMEX Card\r\n12. Verify the card is stored in the patron_card_info table\r\nExpected Result:\r\nCard should be stored in  patron_card_info table\r\n13. Verify PV and PVO logs for the credit card processing of the order\r\nExpected Result:\r\nLogs should not display any error.\ncard used should be displayed correctly\r\n14. Verify the order_text MPPPWI, MPTID, MPPCRD, MPPCISI\r\nExpected Result:\r\nText code values should be displayed correctly\n\n\"MPPPWI\"  - Wallet indicator to send to BOTS/Credit Card Processor \n\n\"MPTID\" - Contains the MasterPass Transaction ID\n\n\"MPPCRD\" - Contains the MasterPass post completion response data\n\nMPPCISI\" - contains the Patron_Card_Info Sequence Id of the MasterPass card that has been stored in our wallet.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch and login PV application\nNavigate to the Ticket services\nSearch and select the above order\nIn payments tab, verify the card authorization details\r\n2. 1. 1. set the below properties :\nMaster Pass request token API URL\n        Property = master.pass.request.token.url\n        QA value = https://sandbox.api.mastercard.com/oauth/consumer/v1/request_token\n\nMaster Pass access token API URL\n        Property = master.pass.access.token.url\n        QA value = https://sandbox.api.mastercard.com/ oauth/consumer/v1/access_token\n\nMaster Pass postback API URL\n        Property = master.pass.postback.url\n        QA value = https://sandbox.api.mastercard.com/online/v2/transaction\n\nMaster Pass consumer key\n        Property = master.pass.consumerkey\n        QA value = 0PLQ-x2n4q-GdgQDcaYR043w0NIcFS3vJs_VaAbh307eaea1!61616d555830624d47583258586f546c34562b3444513d3d\n\nMaster Pass checkout identifier\n        Property = master.pass. checkoutidentifier\n        QA value (same as prod) = a4a6w4vw7jn1qhud2dwq81hud4rw5b1bj\n\nTDC Master Pass Keystore - contains the TDC private key (for the domain, ie. onsale.tickets.com)\n        Property = master.pass.keystore.path\n        Default value = /opt/pvo/masterpass/certs/tdc_mp_keystore.p12\n\nMasterPass keystore password\n        Property = master.pass.keystore.password, master.pass.key.password\n        Default value = changeit\n\nMasterPass API connect timeout\n        Property = master.pass.api.connect.timeout.seconds\n        Default value = 5 (seconds)\n\nMasterPass API read timeout\n        Property = master.pass.api.read.timeout.seconds\n        Default value = 60 (seconds)\n\nMasterPass API XML version (no need to change the default value)\n        Property = master.pass.xml.version\n        Default value = v5\n\nProperty to configure TDC MasterPass card type mapping\n        Property = tdc.master.pass.card.type.mapping\n        Default value = master=MSTR|visa=VISA|amex=AMEX|discover=DISC\n        Format =  MasterPassCode1=TDCPaymentCode1|MasterPassCode2=TDCPaymentCode2\n        Note:  This property can be pre-fixed with lowercase Supplier Code and \".\" to configure the mapping at the supplier level for e.g. ngbt.tdc.master.pass.card.type.mapping\n\n\n\nSet \"MPPME\" - MASTER_PASS_PAYMENT_METHOD_ENABLED - true\n\n2. Patron should have Master/ VISA/ Discover/ AMEX Card added to the MasterPass Wallet\n3. For supplier enable AKAMAI\r\n3. Launch MLB Single tickets application\r\n4. Locks seats and click Continue\r\n5. Enter Recaptcha and click Continue\r\n6. In the Shopping Cart page click Continue button\r\n7. In the Login page login as a existing user\r\n8. In the Payment page select 'Buy with MasterPass' button\r\n9. User enter security question in the Verification page and click Continue\r\n10. In the Master Pass select the Master/ VISA/ Discover/ AMEX Card for payment and click CheckOut\r\n11. Enter mandatory fields in the Payment page, Select MasterPass Master/ VISA/ Discover/ AMEX Card and complete the transaction\r\n12. Verify the card is stored in the patron_card_info table\r\n13. Verify PV and PVO logs for the credit card processing of the order\r\n14. Verify the order_text MPPPWI, MPTID, MPPCRD, MPPCISI",
        "expected": "1. Authorization details should be shown correctly\r\n2. Pre-requisite should be met\r\n3. MLB Single tickets application should be launched\r\n4. User should be navigated to Recaptcha page\r\n5. User should be navigated to Shopping Cart page\r\n6. User should be navigated to Login page\r\n7. User should be navigated to Payment page\r\n8. User should be navigated to MasterPass login page\r\n9. Security question should be accepted and user should be navigated to the Add Payment Card page\r\n10. Master/ VISA/ Discover/ AMEX Card should be selected for Payment\r\n11. Transaction should be completed with MasterPass Master/ VISA/ Discover/ AMEX Card\r\n12. Card should be stored in  patron_card_info table\r\n13. Logs should not display any error.\ncard used should be displayed correctly\r\n14. Text code values should be displayed correctly\n\n\"MPPPWI\"  - Wallet indicator to send to BOTS/Credit Card Processor \n\n\"MPTID\" - Contains the MasterPass Transaction ID\n\n\"MPPCRD\" - Contains the MasterPass post completion response data\n\nMPPCISI\" - contains the Patron_Card_Info Sequence Id of the MasterPass card that has been stored in our wallet."
      }
    ],
    "custom_jiras": "58.1"
  },
  {
    "id": 30692700,
    "title": "Verify Buy with MasterPass not displayed with Free Tickets Sales enabled",
    "section_id": 1684981,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15837",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 12,
    "custom_is_automated": false,
    "custom_refs": "C151331",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1. 1. set the below properties :\r\nMaster Pass request token API URL\r\n        Property = master.pass.request.token.url\r\n        QA value = https://sandbox.api.mastercard.com/oauth/consumer/v1/request_token\r\n\r\nMaster Pass access token API URL\r\n        Property = master.pass.access.token.url\r\n        QA value = https://sandbox.api.mastercard.com/ oauth/consumer/v1/access_token\r\n\r\nMaster Pass postback API URL\r\n        Property = master.pass.postback.url\r\n        QA value = https://sandbox.api.mastercard.com/online/v2/transaction\r\n\r\nMaster Pass consumer key\r\n        Property = master.pass.consumerkey\r\n        QA value = 0PLQ-x2n4q-GdgQDcaYR043w0NIcFS3vJs_VaAbh307eaea1!61616d555830624d47583258586f546c34562b3444513d3d\r\n\r\nMaster Pass checkout identifier\r\n        Property = master.pass. checkoutidentifier\r\n        QA value (same as prod) = a4a6w4vw7jn1qhud2dwq81hud4rw5b1bj\r\n\r\nTDC Master Pass Keystore - contains the TDC private key (for the domain, ie. onsale.tickets.com)\r\n        Property = master.pass.keystore.path\r\n        Default value = /opt/pvo/masterpass/certs/tdc_mp_keystore.p12\r\n\r\nMasterPass keystore password\r\n        Property = master.pass.keystore.password, master.pass.key.password\r\n        Default value = changeit\r\n\r\nMasterPass API connect timeout\r\n        Property = master.pass.api.connect.timeout.seconds\r\n        Default value = 5 (seconds)\r\n\r\nMasterPass API read timeout\r\n        Property = master.pass.api.read.timeout.seconds\r\n        Default value = 60 (seconds)\r\n\r\nMasterPass API XML version (no need to change the default value)\r\n        Property = master.pass.xml.version\r\n        Default value = v5\r\n\r\nProperty to configure TDC MasterPass card type mapping\r\n        Property = tdc.master.pass.card.type.mapping\r\n        Default value = master=MSTR|visa=VISA|amex=AMEX|discover=DISC\r\n        Format =  MasterPassCode1=TDCPaymentCode1|MasterPassCode2=TDCPaymentCode2\r\n        Note:  This property can be pre-fixed with lowercase Supplier Code and \".\" to configure the mapping at the supplier level for e.g. ngbt.tdc.master.pass.card.type.mapping\r\n\r\n\r\n\r\nSet \"MPPME\" - MASTER_PASS_PAYMENT_METHOD_ENABLED - true\r\n\r\n2. Patron should have Master/ VISA/ Discover/ AMEX Card added to the MasterPass Wallet\r\n3. For supplier set text code FTPME=true",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch MLB Single tickets application\r\nExpected Result:\r\nMLB Single tickets application should be launched\r\n2. Locks Comp seats and click Continue\r\nExpected Result:\r\nUser should be navigated to Recaptcha page\r\n3. Enter Recaptcha and click Continue\r\nExpected Result:\r\nUser should be navigated to Shopping Cart page\r\n4. In the Shopping Cart page click Continue button\r\nExpected Result:\r\nUser should be navigated to Login page\r\n5. In the Login page login as a existing user\r\nExpected Result:\r\nUser should be navigated to Payment page\r\n6. Buy with MasterPass' button should not display on the payment page\r\nExpected Result:\r\nThe 'Buy with MasterPass' button should be hidden and clicking on the area where it displays for priced tickets should not open the modal\r\n7. Select Free Tickets\nComplete transaction\r\nExpected Result:\r\nTransaction should complete",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch MLB Single tickets application\r\n2. Locks Comp seats and click Continue\r\n3. Enter Recaptcha and click Continue\r\n4. In the Shopping Cart page click Continue button\r\n5. In the Login page login as a existing user\r\n6. Buy with MasterPass' button should not display on the payment page\r\n7. Select Free Tickets\nComplete transaction",
        "expected": "1. MLB Single tickets application should be launched\r\n2. User should be navigated to Recaptcha page\r\n3. User should be navigated to Shopping Cart page\r\n4. User should be navigated to Login page\r\n5. User should be navigated to Payment page\r\n6. The 'Buy with MasterPass' button should be hidden and clicking on the area where it displays for priced tickets should not open the modal\r\n7. Transaction should complete"
      }
    ],
    "custom_jiras": "58.1"
  },
  {
    "id": 30692701,
    "title": "Verify completing the Single sales transaction with Masterpass for Masterpass Required event",
    "section_id": 1684981,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15837, PVO-18236",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 13,
    "custom_is_automated": false,
    "custom_refs": "C151332",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1. 1. set the Masterpass Properties and Have an Event with Masterpass Permission - Required\r\n\r\n2. Patron should have MasterCard added to the MasterPass Wallet\r\n3. For supplier set text code SPLITDE=true",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch MLB Single tickets application\r\nExpected Result:\r\nMLB Single tickets application should be launched\r\n2. Locks seats and click Continue\r\nExpected Result:\r\nUser should be navigated to Recaptcha page\r\n3. Enter Recaptcha and click Continue\r\nExpected Result:\r\nUser should be navigated to Shopping Cart page\r\n4. In the Shopping Cart page click Continue button\r\nExpected Result:\r\nUser should be navigated to Login page\r\n5. In the Login page login as a existing user\r\nExpected Result:\r\nUser should be navigated to Payment page\r\n6. In the Payment page , Verify Masterpass is the only \"Payment method\" vailable\r\nExpected Result:\r\nUser should be navigated to MasterPass login page\r\n7. User enter security question in the Verification page and click Continue\r\nExpected Result:\r\nSecurity question should be accepted and user should be navigated to the Add Payment Card page\r\n8. In the Master Pass select the Master Card for payment and click CheckOut\r\nExpected Result:\r\nMaster Card should be selected for Payment\r\n9. Enter mandatory fields in the Payment page, Select MasterPass MasterCard and complete the transaction & Consent option should be false\r\nExpected Result:\r\nTransaction should be completed with MasterPass Master Card\r\n10. Add more than one offer in the cart\r\nExpected Result:\r\nMore than one offer should be added in the cart\r\n11. In the Split Delivery select different delivery methods for each offer\r\nExpected Result:\r\nDifferent delivery methods should be selected for each offer\r\n12. Verify the card is not stored in the patron_card_info table\r\nExpected Result:\r\nCard should not be stored in  patron_card_info table\r\n13. Verify PV and PVO logs for the credit card processing of the order\r\nExpected Result:\r\nLogs should not display any error.\ncard used should be displayed correctly\r\n14. Verify the order_text MPPPWI, MPTID, MPPCRD, MPPCISI\r\nExpected Result:\r\nText code values should be displayed correctly\n\n\"MPPPWI\"  - Wallet indicator to send to BOTS/Credit Card Processor \n\n\"MPTID\" - Contains the MasterPass Transaction ID\n\n\"MPPCRD\" - Contains the MasterPass post completion response data\n\nMPPCISI\" - contains the Patron_Card_Info Sequence Id of the MasterPass card that has been stored in our wallet.\r\n15. Launch and login PV application\nNavigate to the Ticket services\nSearch and select the above order\nIn payments tab, verify the card authorization details\r\nExpected Result:\r\nAuthorization details should be shown correctly",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch MLB Single tickets application\r\n2. Locks seats and click Continue\r\n3. Enter Recaptcha and click Continue\r\n4. In the Shopping Cart page click Continue button\r\n5. In the Login page login as a existing user\r\n6. In the Payment page , Verify Masterpass is the only \"Payment method\" vailable\r\n7. User enter security question in the Verification page and click Continue\r\n8. In the Master Pass select the Master Card for payment and click CheckOut\r\n9. Enter mandatory fields in the Payment page, Select MasterPass MasterCard and complete the transaction & Consent option should be false\r\n10. Add more than one offer in the cart\r\n11. In the Split Delivery select different delivery methods for each offer\r\n12. Verify the card is not stored in the patron_card_info table\r\n13. Verify PV and PVO logs for the credit card processing of the order\r\n14. Verify the order_text MPPPWI, MPTID, MPPCRD, MPPCISI\r\n15. Launch and login PV application\nNavigate to the Ticket services\nSearch and select the above order\nIn payments tab, verify the card authorization details",
        "expected": "1. MLB Single tickets application should be launched\r\n2. User should be navigated to Recaptcha page\r\n3. User should be navigated to Shopping Cart page\r\n4. User should be navigated to Login page\r\n5. User should be navigated to Payment page\r\n6. User should be navigated to MasterPass login page\r\n7. Security question should be accepted and user should be navigated to the Add Payment Card page\r\n8. Master Card should be selected for Payment\r\n9. Transaction should be completed with MasterPass Master Card\r\n10. More than one offer should be added in the cart\r\n11. Different delivery methods should be selected for each offer\r\n12. Card should not be stored in  patron_card_info table\r\n13. Logs should not display any error.\ncard used should be displayed correctly\r\n14. Text code values should be displayed correctly\n\n\"MPPPWI\"  - Wallet indicator to send to BOTS/Credit Card Processor \n\n\"MPTID\" - Contains the MasterPass Transaction ID\n\n\"MPPCRD\" - Contains the MasterPass post completion response data\n\nMPPCISI\" - contains the Patron_Card_Info Sequence Id of the MasterPass card that has been stored in our wallet.\r\n15. Authorization details should be shown correctly"
      }
    ],
    "custom_jiras": "58.1"
  },
  {
    "id": 30692702,
    "title": "Verify the user is able to complete transaction with Fixed package whose events are differ in Masterpass Permission.",
    "section_id": 1684981,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15585",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 14,
    "custom_is_automated": false,
    "custom_refs": "C151333",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre - condition\r\n1. Set up a Fixed Package with events having \r\ndifferent Masterpass permissions  in PV\r\n2.Perf accept the event and Verify the Proprties \r\nmentioned below (C 68).",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the single sales link and choose the \nevnt from the list and continue.\r\nExpected Result:\r\nAvailability page should get launched\r\n2. From the buyer types listed,select the number of seats.\r\nExpected Result:\r\nUser is able to select the number of seats from the dropdown listed under each buyer type.\r\n3. click on continue.\nVerify whether user is navigated in to re captcha verification page.\r\nExpected Result:\r\nUser is successfully navigated in to re captcha verification page.\r\n4. After completeing the recaptcha verification, User will get navigated in to shopping cart page.\nVerify the UI of shopping cart page.\r\nExpected Result:\r\nShopping cart UI is getting displayed as expected.\r\n5. Click on continue.\r\nExpected Result:\r\nUser is navigated in to Login/register page.\r\n6. In the Login or register page, select  the radio \nbutton \"I already have an account on MLB.com\" \nand verify the UI.\r\nExpected Result:\r\nThe textboxes for entering email address and \npassword is getting displayed.\r\n7. Now, select \"I don't have an account on MLB.com\" and verify the UI\r\nExpected Result:\r\nTextboxes for entering email address, password and confirm password are getting displayed.\r\n8. Login/ sign up with valid credentials.\r\nExpected Result:\r\nUser will get navigated in to delivery page.\r\n9. From the delivery method page, select any of the delivery method and press continue button.\r\nExpected Result:\r\nUser will get navigated in to Payment page.\r\n10. VVerify that the Payment option is getting \ndisplayed based on the masterpass \npermission of the last event.\r\nExpected Result:\r\nPayment option is getting displayed based on the \nmasterpass permission of the last event.\r\n11. Select masterpass option, sign in  and from the \nwallet select card and press continue.\r\nExpected Result:\r\nUser is again navigated in to payment page\r\n12. Enter all the following required fields in the payment page.\n  \n\nTicket Insurance \nConfirm Email \nPlease select where you heard about us!.\n\n\nand Press Buy Tickets\r\nExpected Result:\r\nUser is navigated to confirmation page.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the single sales link and choose the \nevnt from the list and continue.\r\n2. From the buyer types listed,select the number of seats.\r\n3. click on continue.\nVerify whether user is navigated in to re captcha verification page.\r\n4. After completeing the recaptcha verification, User will get navigated in to shopping cart page.\nVerify the UI of shopping cart page.\r\n5. Click on continue.\r\n6. In the Login or register page, select  the radio \nbutton \"I already have an account on MLB.com\" \nand verify the UI.\r\n7. Now, select \"I don't have an account on MLB.com\" and verify the UI\r\n8. Login/ sign up with valid credentials.\r\n9. From the delivery method page, select any of the delivery method and press continue button.\r\n10. VVerify that the Payment option is getting \ndisplayed based on the masterpass \npermission of the last event.\r\n11. Select masterpass option, sign in  and from the \nwallet select card and press continue.\r\n12. Enter all the following required fields in the payment page.\n  \n\nTicket Insurance \nConfirm Email \nPlease select where you heard about us!.\n\n\nand Press Buy Tickets",
        "expected": "1. Availability page should get launched\r\n2. User is able to select the number of seats from the dropdown listed under each buyer type.\r\n3. User is successfully navigated in to re captcha verification page.\r\n4. Shopping cart UI is getting displayed as expected.\r\n5. User is navigated in to Login/register page.\r\n6. The textboxes for entering email address and \npassword is getting displayed.\r\n7. Textboxes for entering email address, password and confirm password are getting displayed.\r\n8. User will get navigated in to delivery page.\r\n9. User will get navigated in to Payment page.\r\n10. Payment option is getting displayed based on the \nmasterpass permission of the last event.\r\n11. User is again navigated in to payment page\r\n12. User is navigated to confirmation page."
      }
    ],
    "custom_jiras": "63.2"
  },
  {
    "id": 30692703,
    "title": "Verify the Changed DPA values from MTD My account is retained in Payment page after Masterpass card addition during Online exchange flow.",
    "section_id": 1684981,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-16273",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 15,
    "custom_is_automated": false,
    "custom_refs": "C151334",
    "custom_pvo_pvodc_category": 20,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre-requisite:\r\nChoose one patron in PV-Donâ€™t OPTIN Dpuâ€™s for that patron",
    "custom_test_purpose": null,
    "custom_steps": "1. launch PVO mytixx link.\r\nExpected Result:\r\nMyticket link should be launched successfully.\r\n2. Login as an existing user\r\nExpected Result:\r\nExisting user should get logged in.\r\n3. Select exchange tickets option from ticket \naction dropdown.\r\nExpected Result:\r\nExchange tickets option should be available\r\n4. Select tickets and click on continue\r\nExpected Result:\r\ntarget page should get displayed\r\n5. select a target event and lock seat and navigate \nto payment page.\r\nExpected Result:\r\nUser should be navigated to shopping cart page.\r\n6. Login to masterpass account.\r\nExpected Result:\r\nmaster pass account login should be successfull.\r\n7. Try to select a card from master pass wallet.\r\nExpected Result:\r\nuser should reach masterpass account with the card selected from masterpass wallet.\r\n8. Verify the Changed DPA values from MTD My \naccount is retained in Payment page after \nMasterpass card addition during Online exchange \nflow.\r\nExpected Result:\r\nChanged DPA values from MTD My account is \nretained in Payment page after Masterpass card \naddition during Online exchange flow.\r\n9. Complete the transaction\r\nExpected Result:\r\nTransaction completed successfully",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. launch PVO mytixx link.\r\n2. Login as an existing user\r\n3. Select exchange tickets option from ticket \naction dropdown.\r\n4. Select tickets and click on continue\r\n5. select a target event and lock seat and navigate \nto payment page.\r\n6. Login to masterpass account.\r\n7. Try to select a card from master pass wallet.\r\n8. Verify the Changed DPA values from MTD My \naccount is retained in Payment page after \nMasterpass card addition during Online exchange \nflow.\r\n9. Complete the transaction",
        "expected": "1. Myticket link should be launched successfully.\r\n2. Existing user should get logged in.\r\n3. Exchange tickets option should be available\r\n4. target page should get displayed\r\n5. User should be navigated to shopping cart page.\r\n6. master pass account login should be successfull.\r\n7. user should reach masterpass account with the card selected from masterpass wallet.\r\n8. Changed DPA values from MTD My account is \nretained in Payment page after Masterpass card \naddition during Online exchange flow.\r\n9. Transaction completed successfully"
      }
    ],
    "custom_jiras": "64.1"
  },
  {
    "id": 30692704,
    "title": "Verify Patron's First name and Last name fields in PVO when a new Patron completes single sales transaction with existing Masterpass account.",
    "section_id": 1684981,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PVO-16519",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 16,
    "custom_is_automated": false,
    "custom_refs": "C151335",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Should have an event with Master Pass setup.",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the Single sales URL of the vent mentioned in pre-requisite and Lock seats and reach payment page\r\nExpected Result:\r\nPatron should reach on payment page.\r\n2. Do not add a credit card, choose Masterpass. Log into existing Masterpass account - Note down the First and Last Name in \"Shipping To\" Section (Masterpass shows both First and Last name in a single field as a combined one. Say, if First Name is Pramod and Last Name is Madhav, Masterpass displays \"Pramod Madhav\" in Name field)\r\nExpected Result:\r\nMaster Pass card should be added to master pass table in Payment page.\r\n3. Complete transaction using Master Pass card. \r\nExpected Result:\r\nTransaction should be completed.\r\n4. Verify the name displayed in Bill To Section of the confirmation page-\r\nExpected Result:\r\nName should be same as that we noted down in Step 2. It should not be repeated.(It should display \"DDD MMM\" and it should not be repeated like \"DDD MMM DDD MMM\")\r\n5. Login into MTD and go to My account page and Verify First Name and Last Name fields\r\nExpected Result:\r\nFirst Name field should store only the First Name value from Masterpass Ship To address and Last Name field should store only the Last Name value from Masterpass Ship To address\r\n6. Verify DB- Patron info table.\r\nExpected Result:\r\nFirst Name field should store only the First Name value from Masterpass Ship To address and Last Name field should store only the Last Name value from Masterpass Ship To address\r\n7. Verify PV - Patron management\r\nExpected Result:\r\nFirst Name field should store only the First Name value from Masterpass Ship To address and Last Name field should store only the Last Name value from Masterpass Ship To address",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the Single sales URL of the vent mentioned in pre-requisite and Lock seats and reach payment page\r\n2. Do not add a credit card, choose Masterpass. Log into existing Masterpass account - Note down the First and Last Name in \"Shipping To\" Section (Masterpass shows both First and Last name in a single field as a combined one. Say, if First Name is Pramod and Last Name is Madhav, Masterpass displays \"Pramod Madhav\" in Name field)\r\n3. Complete transaction using Master Pass card. \r\n4. Verify the name displayed in Bill To Section of the confirmation page-\r\n5. Login into MTD and go to My account page and Verify First Name and Last Name fields\r\n6. Verify DB- Patron info table.\r\n7. Verify PV - Patron management",
        "expected": "1. Patron should reach on payment page.\r\n2. Master Pass card should be added to master pass table in Payment page.\r\n3. Transaction should be completed.\r\n4. Name should be same as that we noted down in Step 2. It should not be repeated.(It should display \"DDD MMM\" and it should not be repeated like \"DDD MMM DDD MMM\")\r\n5. First Name field should store only the First Name value from Masterpass Ship To address and Last Name field should store only the Last Name value from Masterpass Ship To address\r\n6. First Name field should store only the First Name value from Masterpass Ship To address and Last Name field should store only the Last Name value from Masterpass Ship To address\r\n7. First Name field should store only the First Name value from Masterpass Ship To address and Last Name field should store only the Last Name value from Masterpass Ship To address"
      }
    ],
    "custom_jiras": null
  },
  {
    "id": 30692705,
    "title": "Verify that the application is sending correct ApplePay Load datas in patron_Addres or Patron_Info tables  and corresponding Confirmation email  for a patron such that it exists in MLB but not in PVO",
    "section_id": 1684982,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14148",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C151336",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre requisite \r\n \r\nSet Properties,\r\nPokemon Properties\r\nhttps://pvoqa2.back.tickets.com/tdc_properties.jsp\r\n \r\n1)  Set property pvo.primary_sales.test_apple_payload to \r\ntrue on all web servers.\r\n2)  Set property \r\npvo.primary_sales.output_fake_apple_payload to true\r\n \r\n3)   Debug level set,\r\nPVOQA2\r\nhttp://irqaapppvo4.back.tickets.com:7001/Debug.jsp\r\nclassname = \r\ncom.tickets.util.HttpProcessor.GenericHttpTransporter  \r\ndebug level = 30\r\n \r\n4)MLB account which doesnt exists in PVO :\r\n \r\nLink a MyTickets account with MLB.com account and then \r\nunlink from the MLB.com account via MyAccount Unlink tab \r\n(or delete Sub_Agency_Patron row from DB) such that the \r\nMLB.com account does not exist in PVO DB. If you link a \r\nnewly created MyTickets account then make sure the email \r\nof this account is not the same as MLB.com email after \r\nunlink is done.",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Single sale application\n\r\nExpected Result:\r\nSingle sale availability page should be displayed\r\n2. Select tickets and continue to shopping cart\n\r\nExpected Result:\r\nShoipping cart should be displayed with \ncorrect ticket details\n(Verify the seat details in  Lock seats \nresponse)\r\n3. verify the details and continue to login modal\n\r\nExpected Result:\r\nTicket details should be correct\nLogin modal should be displayed\r\n4. Login with \"I already have\" option and enter the MLBAM \naccount email aid and details\n\r\nExpected Result:\r\nEnter existing email and password details\r\n5. Navigate to payment page\n\r\nExpected Result:\r\nPayment page should be displayed\r\n6. Enter delivey and email details\n\r\nExpected Result:\r\nuser should be able to select the delivery \ndetails and email\r\n7. Enter valid Payload data in to \nSetApplePayData modal\n\r\nExpected Result:\r\npayload data should be added in the modal\r\n8. Click on Buy Tickets button\n\r\nExpected Result:\r\nBuy Tickets button should be available\nUser should be navigated to  Confirmation \npage\r\n9. Verify that the confirmation email is being sent \nto user with correct details.\n\r\nExpected Result:\r\nVerify the details sent in confirmation email.\r\n10. Verify the payload data is being sent to PV in SellSeats \nrequest and PV returned correct payment details back to PVO \nin response\n\r\nExpected Result:\r\nTake SellSeats API cal request and response and \nverify that the payload data transaction details \nare passed as expected\r\n11. Verify the DB details are correct under \npatron_address / patron_info  tables.\nselect * from PVO.patron_address where \npatron_id =1030789876\nselect * from PVO.patron_info where \npatron_id=1030789876\r\nExpected Result:\r\nDB details should be correct\nCountry code should be USA",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Single sale application\n\r\n2. Select tickets and continue to shopping cart\n\r\n3. verify the details and continue to login modal\n\r\n4. Login with \"I already have\" option and enter the MLBAM \naccount email aid and details\n\r\n5. Navigate to payment page\n\r\n6. Enter delivey and email details\n\r\n7. Enter valid Payload data in to \nSetApplePayData modal\n\r\n8. Click on Buy Tickets button\n\r\n9. Verify that the confirmation email is being sent \nto user with correct details.\n\r\n10. Verify the payload data is being sent to PV in SellSeats \nrequest and PV returned correct payment details back to PVO \nin response\n\r\n11. Verify the DB details are correct under \npatron_address / patron_info  tables.\nselect * from PVO.patron_address where \npatron_id =1030789876\nselect * from PVO.patron_info where \npatron_id=1030789876",
        "expected": "1. Single sale availability page should be displayed\r\n2. Shoipping cart should be displayed with \ncorrect ticket details\n(Verify the seat details in  Lock seats \nresponse)\r\n3. Ticket details should be correct\nLogin modal should be displayed\r\n4. Enter existing email and password details\r\n5. Payment page should be displayed\r\n6. user should be able to select the delivery \ndetails and email\r\n7. payload data should be added in the modal\r\n8. Buy Tickets button should be available\nUser should be navigated to  Confirmation \npage\r\n9. Verify the details sent in confirmation email.\r\n10. Take SellSeats API cal request and response and \nverify that the payload data transaction details \nare passed as expected\r\n11. DB details should be correct\nCountry code should be USA"
      }
    ],
    "custom_jiras": "60.1"
  },
  {
    "id": 30692706,
    "title": "Verify completing a dual posting and purchase of parking +main tickets by a broker patron",
    "section_id": 1684983,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-Project 7",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C152185",
    "custom_pvo_pvodc_category": 19,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre-requisite:\n1.replay.enable.postings.on.multiple.marketplaces should be true in PV\n2.Set the textcodes SHIE=true and REPLAY2E=true\n3.A Mytickets patron with Broker trait should be available\n4.Acquire some parking and main tickets by a Broker patron mentioned in step 3.\r\nExpected Result:\r\nPre-requisits are met.\r\n2. Steps:\n1.Launch MyTickets and login as broker patron.\r\nExpected Result:\r\nLogin of broker patron is successful.\r\n3. 2.Post the acquired parking tickets and main tickets to Resale via MTD Replay 2.0\r\nExpected Result:\r\nTickets are posted to Replay.\r\n4. 3.Verify ticket status in Inventory page\r\nExpected Result:\r\nTicket status is pending resale-Replay.\r\n5. 4.Verify the offer in Replay history tab\r\nExpected Result:\r\nTicket status is onsale in replay history tab.\r\n6. 5.Verify PV transaction details\r\nExpected Result:\r\nTransaction details are recorded correctly and status is onsale.\r\n7. 6.Post the same parking tickets and main tickets to Resale via  INDY\r\nExpected Result:\r\nResale creation successful.\r\n8. 7.Verify ticket status in Inventory page\r\nExpected Result:\r\nStatus will be pending resale-Replay and @nd \nmarket place.\r\n9. 8.Verify the offer in Replay history tab\r\nExpected Result:\r\nStatus will be onsale in both replay and 2nd \nmarket place tab.\r\n10. 9.Verify PV transaction details\r\nExpected Result:\r\nTransaction details are recorded correctly and \nstatus is onsale.\r\n11. 10.Purchase the offer via Replay 2.0 B2C site\r\nExpected Result:\r\nPurchase successful.\r\n12. 11.Verify ticket status in Inventory page\r\nExpected Result:\r\nTicket status will be sold\r\n13. 12.Verify the offer in Replay and  2nd market place history tab\r\nExpected Result:\r\nTicket status in Replay tab will be sold and in 2nd \nmarket place tab it will be onsale.\r\n14. 13.Verify PV transaction details\r\nExpected Result:\r\nIn PV transaction will be completed and status \nwill be sold, followed by active for purchased \npatron.\r\n15. Verify the following in PV:\n1) API responses\n2) Ticket services: order/ transaction/ delivery\n3) Seat View\n4) Seat History\n5) Market Offer history\n6) BO Sales Map- seat History\n7) MO modal\n8) Barcode Lookup",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-requisite:\n1.replay.enable.postings.on.multiple.marketplaces should be true in PV\n2.Set the textcodes SHIE=true and REPLAY2E=true\n3.A Mytickets patron with Broker trait should be available\n4.Acquire some parking and main tickets by a Broker patron mentioned in step 3.\r\n2. Steps:\n1.Launch MyTickets and login as broker patron.\r\n3. 2.Post the acquired parking tickets and main tickets to Resale via MTD Replay 2.0\r\n4. 3.Verify ticket status in Inventory page\r\n5. 4.Verify the offer in Replay history tab\r\n6. 5.Verify PV transaction details\r\n7. 6.Post the same parking tickets and main tickets to Resale via  INDY\r\n8. 7.Verify ticket status in Inventory page\r\n9. 8.Verify the offer in Replay history tab\r\n10. 9.Verify PV transaction details\r\n11. 10.Purchase the offer via Replay 2.0 B2C site\r\n12. 11.Verify ticket status in Inventory page\r\n13. 12.Verify the offer in Replay and  2nd market place history tab\r\n14. 13.Verify PV transaction details\r\n15. Verify the following in PV:\n1) API responses\n2) Ticket services: order/ transaction/ delivery\n3) Seat View\n4) Seat History\n5) Market Offer history\n6) BO Sales Map- seat History\n7) MO modal\n8) Barcode Lookup",
        "expected": "1. Pre-requisits are met.\r\n2. Login of broker patron is successful.\r\n3. Tickets are posted to Replay.\r\n4. Ticket status is pending resale-Replay.\r\n5. Ticket status is onsale in replay history tab.\r\n6. Transaction details are recorded correctly and status is onsale.\r\n7. Resale creation successful.\r\n8. Status will be pending resale-Replay and @nd \nmarket place.\r\n9. Status will be onsale in both replay and 2nd \nmarket place tab.\r\n10. Transaction details are recorded correctly and \nstatus is onsale.\r\n11. Purchase successful.\r\n12. Ticket status will be sold\r\n13. Ticket status in Replay tab will be sold and in 2nd \nmarket place tab it will be onsale.\r\n14. In PV transaction will be completed and status \nwill be sold, followed by active for purchased \npatron.\r\n15."
      }
    ],
    "custom_jiras": "64"
  },
  {
    "id": 30692707,
    "title": "Verify completing a dual posting  and purchase of  multiple tickets with overlapping by a broker patron",
    "section_id": 1684983,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-Project 7",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C152186",
    "custom_pvo_pvodc_category": 19,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre-requisite:\n1.  replay.enable.postings.on.multiple.marketplaces should be true in PV.\n2.Set textcodes SHIE = true and REPLAY2E = true\n3.A Mytickets patron with Broker trait should be available.\n4.Acquire some tickets by a Broker patron mentioned in step 3..(Say \nTickets 2,3,4,6,8,9)\r\nExpected Result:\r\nPre-requisite should be met\r\n2. .Launch MyTickets link and login as the patron mentioned  in pre-requisite.\r\nExpected Result:\r\nPatron should be logged in\r\n3. Verify that user is displayed with \"Sell seats\" and \"Sell \non SH\" actions  in Mytickets inventory in Ticket action \ndropdown\r\nExpected Result:\r\n\"Sell seats\" and \"Sell on SH\" actions  in Mytickets inventory in Ticket action dropdown\r\n4. Choose acquired tickets and create a resale offer using Replay 2.0\n(Say Tickets 2,3,4,6)\r\nExpected Result:\r\nOffer should be created successfully\r\n5. Verify PersistInventoy call\r\nExpected Result:\r\nPersistInventory call is made to PV with all \ntransaction details\r\n6. Log in to Broker's Mytickets account and\nverify ticket status in Inventory page\r\nExpected Result:\r\nTicket status- Pending Resale-Replay for all tickets (2,3,4,6)\r\n7. Verify GetPatronInventory call\r\nExpected Result:\r\nThe following are passed from PV for all ticket put for resale (2,3,4,6)\n \n\nVALID  \n PENDING_RESALE \n REPLAY\r\n8. Verify the offer in Replay history tab\r\nExpected Result:\r\nThe offer created is displayed in Resale \noffers tab in history page with status as \nOpen\r\n9. Verify PV transaction details\r\nExpected Result:\r\nThe offer type is shown as \"Resale\". If click on \nthe Resale link, MO history modal is opened \nwith Current-Replay tab and it shows all details \nof Replay offer created above\r\n10. Verify the following tables in PVO:\n\npatron_inventory_seat table \ninventory table of  Replay 2.0 offer\ninventory_seat table of  Replay 2.0 offer\r\nExpected Result:\r\npatron_inventory_seat table ofÃ¿ Broker\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IR\n    \n    \n    \n    FORWARD_STATUS \n    \n    \n    ACQUIRED\n    \n    \n    \n    MARKET_OFFER_STATUS \n    \n    \n    PENDING_RESALE\n    \n    \n    \n    MARKETPLACES \n    \n    \n    REPLAY\n    \n\n\n  \n\n\n    \n        \n        \n    \n    \n    \n    inventory table ofÃ¿ Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IO\n    \n    \n    \n    SUB_AGENCY_CODE \n    \n    \n    NGSM_MLB_RESALE\n    \n\n\n  \n\n\n    \n        \n        \n    \n    \n    \n    inventory_seat table ofÃ¿ Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODEÃ¿ \n    \n    \n    IO\n    \n    \n    \n    FORWARD_STATUSÃ¿ \n    \n    \n    ACQUIRED\n    \n    \n    \n    MARKET_OFFER_STATUSÃ¿ \n    \n    \n    VALID\r\n11. Verify the following tables in PV\n\ntickets table\nmarket_offer table\r\nExpected Result:\r\nTicket table in PV\n    \n    \n     \n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    CURRENT_SOLD_MARKET_OFFER_ID\n    \n    \n    External offer ID of Replay 2.0 offer\n    \n    \n    \n     \n    \n    \n     \n    \n    \n    \n    Market_offer  table in PV for Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    MARKET_OFFER_ID\n    \n    \n    Market offer ID of replay 2.0 offer\n    \n    \n    \n    EXTERNAL_OFFER_ID\n    \n    \n    PVO inventory ID(External offer ID)\n    \n    \n    \n    EXTERNAL_AUCTION_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKER_OFFER_TYPE_CODE\n    \n    \n    RS\n    \n    \n    \n    MAREKT_OFFER_STATUS_CODE\n    \n    \n    O\n    \n    \n    \n    SELLER_PATRON_ACCOUNT_ID\n    \n    \n    Broker patron ID\n    \n    \n    \n    BUYER_PATRON_ACCOUNT_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKETPLACE_TYPE_CODE\n    \n    \n    RP\r\n12. Verify email is received by Replay seller as the \noffer is created\r\nExpected Result:\r\nEmail is received by Replay seller as the offer is created\r\n13. Post some of the tickets(must have seats common in both offers) to \nResale via  INDY (Say Tickets 6,8,9)\n\n(Seat 6 is in both offers)\r\nExpected Result:\r\nDual posting should be completed successfully.\r\n14. Verify LockInventory call made by stubhub and \nPersistInventoy call made by PVO\r\nExpected Result:\r\nLocinventory call is made by SH and PVO responds with inventory_id,status_code as OK, \nand agency_listing_id\n\nPersistInventory call is made by PVO to PV and PVO sends is_third_party_agency as true, \nauction_id with agency listing id\r\n15. Log in to Broker's Mytickets account and\nverify ticket status in Inventory page\r\nExpected Result:\r\nTicket status of \nSeat 6 =Pending Resale-Replay&Stubhub \nSeats 2,3,4 =Pending Resale-Replay\nSeats 8,9 =Pending Resale-SH\r\n16. Verify GetPatronInventory call\r\nExpected Result:\r\nThe following are passed from PV for the ticket put for resale\n \nSeat 6\n  \n\nVALID  \n PENDING_RESALE \n REPLAY,STUBHUB \n\n\nSeat 2,3,4\n\n1. VALID  \n2. PENDING_RESALE \n3. REPLAY \n\nSeat 8,9\n\n1. VALID  \n2. PENDING_RESALE \n3. STUBHUB\r\n17. Verify the offer in history tabs\r\nExpected Result:\r\nThe offer created via Replay  is displayed in Resale offers tab in history page with status as \nOpen\n\nThe SH offer created is not displayed in SH History tab\r\n18. Verify PV transaction details\r\nExpected Result:\r\nThe offer type is shown as \"Resale\". If click on the Resale link, MO history modal is opened \nwith Current-Replay tabs and Current-Stubhub.Both tabs show all details of offers created \nabove\r\n19. Verify the following tables in PVO:\n \npatron_inventory_seat table \ninventory table\ninventory_seat table\r\nExpected Result:\r\npatron_inventory_seat table ofÃ¿ Broker For seat 6\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IR\n    \n    \n    \n    FORWARD_STATUS \n    \n    \n    ACQUIRED\n    \n    \n    \n    MARKET_OFFER_STATUS \n    \n    \n    PENDING_RESALE\n    \n    \n    \n    MARKETPLACES \n    \n    \n    REPLAY,STUBHUB\n    \n\n\n    \n        \n        \n    \n    \n    \n     patron_inventory_seat table ofÃ¿ Broker For seat 2,3,4\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IR\n    \n    \n    \n    FORWARD_STATUS \n    \n    \n    ACQUIRED\n    \n    \n    \n    MARKET_OFFER_STATUS \n    \n    \n    PENDING_RESALE\n    \n    \n    \n    MARKETPLACES \n    \n    \n    REPLAY\n    \n\n\n    \n        \n        \n    \n    \n    \n     patron_inventory_seat table ofÃ¿ Broker For seat 8,9\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IR\n    \n    \n    \n    FORWARD_STATUS \n    \n    \n    ACQUIRED\n    \n    \n    \n    MARKET_OFFER_STATUS \n    \n    \n    PENDING_RESALE\n    \n    \n    \n    MARKETPLACES \n    \n    \n    STUBHUB\n    \n\n\n    \n        \n        \n    \n    \n    \n    inventory table ofÃ¿ Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IO\n    \n    \n    \n    SUB_AGENCY_CODE \n    \n    \n    NGSM_MLB_RESALE\n    \n\n\n    \n        \n        \n    \n    \n    \n    inventory_seat table ofÃ¿ Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODEÃ¿ \n    \n    \n    IO\n    \n    \n    \n    FORWARD_STATUSÃ¿ \n    \n    \n    ACQUIRED\n    \n    \n    \n    MARKET_OFFER_STATUSÃ¿ \n    \n    \n    VALID\n    \n\n\n    \n        \n        \n    \n    \n    \n    inventory table ofÃ¿ SH offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IO\n    \n    \n    \n    SUB_AGENCY_CODE \n    \n    \n    STUBINDY\n    \n\n\n    \n        \n        \n    \n    \n    \n    inventory_seat table of SH offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODEÃ¿ \n    \n    \n    IO\n    \n    \n    \n    FORWARD_STATUSÃ¿ \n    \n    \n    null\n    \n    \n    \n    MARKET_OFFER_STATUSÃ¿ \n    \n    \n    null\r\n20. Verify the following tables in PV\n \ntickets table\nmarket_offer table\r\nExpected Result:\r\nTicket table in PV for seat 2,3,4,6\n    \n    \n     \n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    CURRENT_SOLD_MARKET_OFFER_ID\n    \n    \n    External offer ID of Replay 2.0 offer\n    \n    \n    \n    Ticket table in PV for seat 8,9\n    \n    \n     \n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    CURRENT_SOLD_MARKET_OFFER_ID\n    \n    \n    External offer ID of SH offer\n    \n    \n    \n    Market_offer  table in PV for Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    MARKET_OFFER_ID\n    \n    \n    Market offer ID of replay 2.0 offer\n    \n    \n    \n    EXTERNAL_OFFER_ID\n    \n    \n    PVO inventory ID(External offer ID) of replay 2.0 offer\n    \n    \n    \n    EXTERNAL_AUCTION_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKER_OFFER_TYPE_CODE\n    \n    \n    RS\n    \n    \n    \n    MAREKT_OFFER_STATUS_CODE\n    \n    \n    O\n    \n    \n    \n    SELLER_PATRON_ACCOUNT_ID\n    \n    \n    Broker patron ID\n    \n    \n    \n    BUYER_PATRON_ACCOUNT_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKETPLACE_TYPE_CODE\n    \n    \n    RP\n    \n    \n    \n    Market_offer  table in PV for SH offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    MARKET_OFFER_ID\n    \n    \n    Market offer ID of SH offer\n    \n    \n    \n    EXTERNAL_OFFER_ID\n    \n    \n    PVO inventory ID(External offer ID) of SH offer\n    \n    \n    \n    EXTERNAL_AUCTION_ID\n    \n    \n    Agency listing ID received from PVO\n    \n    \n    \n    MARKER_OFFER_TYPE_CODE\n    \n    \n    RS\n    \n    \n    \n    MAREKT_OFFER_STATUS_CODE\n    \n    \n    O\n    \n    \n    \n    SELLER_PATRON_ACCOUNT_ID\n    \n    \n    SH seller ID\n    \n    \n    \n    BUYER_PATRON_ACCOUNT_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKETPLACE_TYPE_CODE\n    \n    \n    SH\r\n21. Verify no email is received by the SH seller once the SH offer is created\r\nExpected Result:\r\nNo email is received by the SH seller once the SH offer is created\r\n22. Purchase the offer via Replay 2.0 B2C site (seats 2,3,4,6)\r\nExpected Result:\r\nShould be able to purchase the offer\r\n23. Verify LockInventory call and MarketPayment call made \nby PVO\r\nExpected Result:\r\nPVO makes LockInventory call and MarketPayment call to PV with all transaction details\r\n24. Log in to Broker's mytixx account and verify ticket \nstatus in Inventory page\r\nExpected Result:\r\nTicket  status is -\n\nSeat 6- Sold-Replay\nSeat 2,3,4- Sold-Replay\nSeat 8,9-Pending Resale-Stubhub\r\n25. Verify GetPatronInventory call\r\nExpected Result:\r\nThe following are passed from PV for the ticket put for resale\n \nSeat 6\n  \n\nINVALID  \n TICKET_RESOLD \n REPLAY \n\n \nSeat 2,3,4\n \n1. INVALID  \n2. TICKET_RESOLD \n3. REPLAY \n \nSeat 8,9\n \n1. VALID  \n2. PENDING_RESALE \n3. STUBHUB\r\n26. Verify the offer in history tabs\r\nExpected Result:\r\nThe offer created via Replay  is displayed in Resale offers tab in history page with status as \nSold\n \nThe SH offer created is not displayed in SH History tab\r\n27. Verify PV transaction details\r\nExpected Result:\r\nThe offer type is shown as \"Resale\" with a tic mark. If click on the Resale link, MO history \nmodal is opened with Current-Replay tabs and Current-Stubhub.Both tabs show all details \nof offers created above.\n\nThe Replay offer is marked as completed and SH offer is still in open status\r\n28. Verify the following tables in PVO:\n \npatron_inventory_seat table \ninventory table\ninventory_seat table\r\nExpected Result:\r\npatron_inventory_seat table ofÃ¿ Broker for seat 2,3,4,6\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IS\n    \n    \n    \n    FORWARD_STATUS \n    \n    \n    null\n    \n    \n    \n    MARKET_OFFER_STATUS \n    \n    \n    TICKET_RESOLD\n    \n    \n    \n    MARKETPLACES \n    \n    \n    REPLAY\n    \n    \n    \n    patron_inventory_seat table ofÃ¿ Broker for seat 8,9\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IR\n    \n    \n    \n    FORWARD_STATUS \n    \n    \n    ACCQUIRED\n    \n    \n    \n    MARKET_OFFER_STATUS \n    \n    \n    PENDING_RESALE\n    \n    \n    \n    MARKETPLACES \n    \n    \n    STUBHUB\n    \n    \n    \n    inventory table ofÃ¿ Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IS\n    \n    \n    \n    SUB_AGENCY_CODE \n    \n    \n    NGSM_MLB_RESALE\n    \n    \n    \n    inventory_seat table ofÃ¿ Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODEÃ¿ \n    \n    \n    IS\n    \n    \n    \n    FORWARD_STATUSÃ¿ \n    \n    \n    ACQUIRED\n    \n    \n    \n    MARKET_OFFER_STATUSÃ¿ \n    \n    \n    VALID\n    \n    \n    \n    inventory table ofÃ¿ SH offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IO\n    \n    \n    \n    SUB_AGENCY_CODE \n    \n    \n    STUBINDY\n    \n    \n    \n    inventory_seat table of SH offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODEÃ¿ \n    \n    \n    IO\n    \n    \n    \n    FORWARD_STATUSÃ¿ \n    \n    \n    null\n    \n    \n    \n    MARKET_OFFER_STATUSÃ¿ \n    \n    \n    null\r\n29. Verify the following tabled in PV\n\nTickets table\nmarket_offer table\r\nExpected Result:\r\nTicket table in PV for seat 2,3,4,6\n    \n    \n     \n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    CURRENT_SOLD_MARKET_OFFER_ID\n    \n    \n    External offer ID of Replay 2.0 offer\n    \n    \n    \n    Ticket table in PV for seat 8,9\n    \n    \n     \n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    CURRENT_SOLD_MARKET_OFFER_ID\n    \n    \n    External offer ID of SH offer\n    \n    \n    \n    Market_offer  table in PV for Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    MARKET_OFFER_ID\n    \n    \n    Market offer ID of replay 2.0 offer\n    \n    \n    \n    EXTERNAL_OFFER_ID\n    \n    \n    PVO inventory ID(External offer ID) of replay 2.0 offer\n    \n    \n    \n    EXTERNAL_AUCTION_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKER_OFFER_TYPE_CODE\n    \n    \n    RS\n    \n    \n    \n    MAREKT_OFFER_STATUS_CODE\n    \n    \n    M\n    \n    \n    \n    SELLER_PATRON_ACCOUNT_ID\n    \n    \n    Broker patron ID\n    \n    \n    \n    BUYER_PATRON_ACCOUNT_ID\n    \n    \n    Buyer patron ID\n    \n    \n    \n    MARKETPLACE_TYPE_CODE\n    \n    \n    RP\n    \n    \n    \n     \n    \n    \n     \n    \n    \n    \n    Market_offer  table in PV for SH offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    MARKET_OFFER_ID\n    \n    \n    Market offer ID of SH offer\n    \n    \n    \n    EXTERNAL_OFFER_ID\n    \n    \n    PVO inventory ID(External offer ID) of SH offer\n    \n    \n    \n    EXTERNAL_AUCTION_ID\n    \n    \n    Agency listing ID received from PVO\n    \n    \n    \n    MARKER_OFFER_TYPE_CODE\n    \n    \n    RS\n    \n    \n    \n    MAREKT_OFFER_STATUS_CODE\n    \n    \n    O\n    \n    \n    \n    SELLER_PATRON_ACCOUNT_ID\n    \n    \n    SH seller ID\n    \n    \n    \n    BUYER_PATRON_ACCOUNT_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKETPLACE_TYPE_CODE\n    \n    \n    SH\r\n30. Verify email is received by the Replay seller and buyer \nonce the offer is purchased\r\nExpected Result:\r\nEmail is received by the Replay seller and buyer once the offer is purchased",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-requisite:\n1.  replay.enable.postings.on.multiple.marketplaces should be true in PV.\n2.Set textcodes SHIE = true and REPLAY2E = true\n3.A Mytickets patron with Broker trait should be available.\n4.Acquire some tickets by a Broker patron mentioned in step 3..(Say \nTickets 2,3,4,6,8,9)\r\n2. .Launch MyTickets link and login as the patron mentioned  in pre-requisite.\r\n3. Verify that user is displayed with \"Sell seats\" and \"Sell \non SH\" actions  in Mytickets inventory in Ticket action \ndropdown\r\n4. Choose acquired tickets and create a resale offer using Replay 2.0\n(Say Tickets 2,3,4,6)\r\n5. Verify PersistInventoy call\r\n6. Log in to Broker's Mytickets account and\nverify ticket status in Inventory page\r\n7. Verify GetPatronInventory call\r\n8. Verify the offer in Replay history tab\r\n9. Verify PV transaction details\r\n10. Verify the following tables in PVO:\n\npatron_inventory_seat table \ninventory table of  Replay 2.0 offer\ninventory_seat table of  Replay 2.0 offer\r\n11. Verify the following tables in PV\n\ntickets table\nmarket_offer table\r\n12. Verify email is received by Replay seller as the \noffer is created\r\n13. Post some of the tickets(must have seats common in both offers) to \nResale via  INDY (Say Tickets 6,8,9)\n\n(Seat 6 is in both offers)\r\n14. Verify LockInventory call made by stubhub and \nPersistInventoy call made by PVO\r\n15. Log in to Broker's Mytickets account and\nverify ticket status in Inventory page\r\n16. Verify GetPatronInventory call\r\n17. Verify the offer in history tabs\r\n18. Verify PV transaction details\r\n19. Verify the following tables in PVO:\n \npatron_inventory_seat table \ninventory table\ninventory_seat table\r\n20. Verify the following tables in PV\n \ntickets table\nmarket_offer table\r\n21. Verify no email is received by the SH seller once the SH offer is created\r\n22. Purchase the offer via Replay 2.0 B2C site (seats 2,3,4,6)\r\n23. Verify LockInventory call and MarketPayment call made \nby PVO\r\n24. Log in to Broker's mytixx account and verify ticket \nstatus in Inventory page\r\n25. Verify GetPatronInventory call\r\n26. Verify the offer in history tabs\r\n27. Verify PV transaction details\r\n28. Verify the following tables in PVO:\n \npatron_inventory_seat table \ninventory table\ninventory_seat table\r\n29. Verify the following tabled in PV\n\nTickets table\nmarket_offer table\r\n30. Verify email is received by the Replay seller and buyer \nonce the offer is purchased",
        "expected": "1. Pre-requisite should be met\r\n2. Patron should be logged in\r\n3. \"Sell seats\" and \"Sell on SH\" actions  in Mytickets inventory in Ticket action dropdown\r\n4. Offer should be created successfully\r\n5. PersistInventory call is made to PV with all \ntransaction details\r\n6. Ticket status- Pending Resale-Replay for all tickets (2,3,4,6)\r\n7. The following are passed from PV for all ticket put for resale (2,3,4,6)\n \n\nVALID  \n PENDING_RESALE \n REPLAY\r\n8. The offer created is displayed in Resale \noffers tab in history page with status as \nOpen\r\n9. The offer type is shown as \"Resale\". If click on \nthe Resale link, MO history modal is opened \nwith Current-Replay tab and it shows all details \nof Replay offer created above\r\n10. patron_inventory_seat table ofÃ¿ Broker\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IR\n    \n    \n    \n    FORWARD_STATUS \n    \n    \n    ACQUIRED\n    \n    \n    \n    MARKET_OFFER_STATUS \n    \n    \n    PENDING_RESALE\n    \n    \n    \n    MARKETPLACES \n    \n    \n    REPLAY\n    \n\n\n  \n\n\n    \n        \n        \n    \n    \n    \n    inventory table ofÃ¿ Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IO\n    \n    \n    \n    SUB_AGENCY_CODE \n    \n    \n    NGSM_MLB_RESALE\n    \n\n\n  \n\n\n    \n        \n        \n    \n    \n    \n    inventory_seat table ofÃ¿ Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODEÃ¿ \n    \n    \n    IO\n    \n    \n    \n    FORWARD_STATUSÃ¿ \n    \n    \n    ACQUIRED\n    \n    \n    \n    MARKET_OFFER_STATUSÃ¿ \n    \n    \n    VALID\r\n11. Ticket table in PV\n    \n    \n     \n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    CURRENT_SOLD_MARKET_OFFER_ID\n    \n    \n    External offer ID of Replay 2.0 offer\n    \n    \n    \n     \n    \n    \n     \n    \n    \n    \n    Market_offer  table in PV for Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    MARKET_OFFER_ID\n    \n    \n    Market offer ID of replay 2.0 offer\n    \n    \n    \n    EXTERNAL_OFFER_ID\n    \n    \n    PVO inventory ID(External offer ID)\n    \n    \n    \n    EXTERNAL_AUCTION_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKER_OFFER_TYPE_CODE\n    \n    \n    RS\n    \n    \n    \n    MAREKT_OFFER_STATUS_CODE\n    \n    \n    O\n    \n    \n    \n    SELLER_PATRON_ACCOUNT_ID\n    \n    \n    Broker patron ID\n    \n    \n    \n    BUYER_PATRON_ACCOUNT_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKETPLACE_TYPE_CODE\n    \n    \n    RP\r\n12. Email is received by Replay seller as the offer is created\r\n13. Dual posting should be completed successfully.\r\n14. Locinventory call is made by SH and PVO responds with inventory_id,status_code as OK, \nand agency_listing_id\n\nPersistInventory call is made by PVO to PV and PVO sends is_third_party_agency as true, \nauction_id with agency listing id\r\n15. Ticket status of \nSeat 6 =Pending Resale-Replay&Stubhub \nSeats 2,3,4 =Pending Resale-Replay\nSeats 8,9 =Pending Resale-SH\r\n16. The following are passed from PV for the ticket put for resale\n \nSeat 6\n  \n\nVALID  \n PENDING_RESALE \n REPLAY,STUBHUB \n\n\nSeat 2,3,4\n\n1. VALID  \n2. PENDING_RESALE \n3. REPLAY \n\nSeat 8,9\n\n1. VALID  \n2. PENDING_RESALE \n3. STUBHUB\r\n17. The offer created via Replay  is displayed in Resale offers tab in history page with status as \nOpen\n\nThe SH offer created is not displayed in SH History tab\r\n18. The offer type is shown as \"Resale\". If click on the Resale link, MO history modal is opened \nwith Current-Replay tabs and Current-Stubhub.Both tabs show all details of offers created \nabove\r\n19. patron_inventory_seat table ofÃ¿ Broker For seat 6\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IR\n    \n    \n    \n    FORWARD_STATUS \n    \n    \n    ACQUIRED\n    \n    \n    \n    MARKET_OFFER_STATUS \n    \n    \n    PENDING_RESALE\n    \n    \n    \n    MARKETPLACES \n    \n    \n    REPLAY,STUBHUB\n    \n\n\n    \n        \n        \n    \n    \n    \n     patron_inventory_seat table ofÃ¿ Broker For seat 2,3,4\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IR\n    \n    \n    \n    FORWARD_STATUS \n    \n    \n    ACQUIRED\n    \n    \n    \n    MARKET_OFFER_STATUS \n    \n    \n    PENDING_RESALE\n    \n    \n    \n    MARKETPLACES \n    \n    \n    REPLAY\n    \n\n\n    \n        \n        \n    \n    \n    \n     patron_inventory_seat table ofÃ¿ Broker For seat 8,9\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IR\n    \n    \n    \n    FORWARD_STATUS \n    \n    \n    ACQUIRED\n    \n    \n    \n    MARKET_OFFER_STATUS \n    \n    \n    PENDING_RESALE\n    \n    \n    \n    MARKETPLACES \n    \n    \n    STUBHUB\n    \n\n\n    \n        \n        \n    \n    \n    \n    inventory table ofÃ¿ Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IO\n    \n    \n    \n    SUB_AGENCY_CODE \n    \n    \n    NGSM_MLB_RESALE\n    \n\n\n    \n        \n        \n    \n    \n    \n    inventory_seat table ofÃ¿ Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODEÃ¿ \n    \n    \n    IO\n    \n    \n    \n    FORWARD_STATUSÃ¿ \n    \n    \n    ACQUIRED\n    \n    \n    \n    MARKET_OFFER_STATUSÃ¿ \n    \n    \n    VALID\n    \n\n\n    \n        \n        \n    \n    \n    \n    inventory table ofÃ¿ SH offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IO\n    \n    \n    \n    SUB_AGENCY_CODE \n    \n    \n    STUBINDY\n    \n\n\n    \n        \n        \n    \n    \n    \n    inventory_seat table of SH offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODEÃ¿ \n    \n    \n    IO\n    \n    \n    \n    FORWARD_STATUSÃ¿ \n    \n    \n    null\n    \n    \n    \n    MARKET_OFFER_STATUSÃ¿ \n    \n    \n    null\r\n20. Ticket table in PV for seat 2,3,4,6\n    \n    \n     \n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    CURRENT_SOLD_MARKET_OFFER_ID\n    \n    \n    External offer ID of Replay 2.0 offer\n    \n    \n    \n    Ticket table in PV for seat 8,9\n    \n    \n     \n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    CURRENT_SOLD_MARKET_OFFER_ID\n    \n    \n    External offer ID of SH offer\n    \n    \n    \n    Market_offer  table in PV for Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    MARKET_OFFER_ID\n    \n    \n    Market offer ID of replay 2.0 offer\n    \n    \n    \n    EXTERNAL_OFFER_ID\n    \n    \n    PVO inventory ID(External offer ID) of replay 2.0 offer\n    \n    \n    \n    EXTERNAL_AUCTION_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKER_OFFER_TYPE_CODE\n    \n    \n    RS\n    \n    \n    \n    MAREKT_OFFER_STATUS_CODE\n    \n    \n    O\n    \n    \n    \n    SELLER_PATRON_ACCOUNT_ID\n    \n    \n    Broker patron ID\n    \n    \n    \n    BUYER_PATRON_ACCOUNT_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKETPLACE_TYPE_CODE\n    \n    \n    RP\n    \n    \n    \n    Market_offer  table in PV for SH offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    MARKET_OFFER_ID\n    \n    \n    Market offer ID of SH offer\n    \n    \n    \n    EXTERNAL_OFFER_ID\n    \n    \n    PVO inventory ID(External offer ID) of SH offer\n    \n    \n    \n    EXTERNAL_AUCTION_ID\n    \n    \n    Agency listing ID received from PVO\n    \n    \n    \n    MARKER_OFFER_TYPE_CODE\n    \n    \n    RS\n    \n    \n    \n    MAREKT_OFFER_STATUS_CODE\n    \n    \n    O\n    \n    \n    \n    SELLER_PATRON_ACCOUNT_ID\n    \n    \n    SH seller ID\n    \n    \n    \n    BUYER_PATRON_ACCOUNT_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKETPLACE_TYPE_CODE\n    \n    \n    SH\r\n21. No email is received by the SH seller once the SH offer is created\r\n22. Should be able to purchase the offer\r\n23. PVO makes LockInventory call and MarketPayment call to PV with all transaction details\r\n24. Ticket  status is -\n\nSeat 6- Sold-Replay\nSeat 2,3,4- Sold-Replay\nSeat 8,9-Pending Resale-Stubhub\r\n25. The following are passed from PV for the ticket put for resale\n \nSeat 6\n  \n\nINVALID  \n TICKET_RESOLD \n REPLAY \n\n \nSeat 2,3,4\n \n1. INVALID  \n2. TICKET_RESOLD \n3. REPLAY \n \nSeat 8,9\n \n1. VALID  \n2. PENDING_RESALE \n3. STUBHUB\r\n26. The offer created via Replay  is displayed in Resale offers tab in history page with status as \nSold\n \nThe SH offer created is not displayed in SH History tab\r\n27. The offer type is shown as \"Resale\" with a tic mark. If click on the Resale link, MO history \nmodal is opened with Current-Replay tabs and Current-Stubhub.Both tabs show all details \nof offers created above.\n\nThe Replay offer is marked as completed and SH offer is still in open status\r\n28. patron_inventory_seat table ofÃ¿ Broker for seat 2,3,4,6\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IS\n    \n    \n    \n    FORWARD_STATUS \n    \n    \n    null\n    \n    \n    \n    MARKET_OFFER_STATUS \n    \n    \n    TICKET_RESOLD\n    \n    \n    \n    MARKETPLACES \n    \n    \n    REPLAY\n    \n    \n    \n    patron_inventory_seat table ofÃ¿ Broker for seat 8,9\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IR\n    \n    \n    \n    FORWARD_STATUS \n    \n    \n    ACCQUIRED\n    \n    \n    \n    MARKET_OFFER_STATUS \n    \n    \n    PENDING_RESALE\n    \n    \n    \n    MARKETPLACES \n    \n    \n    STUBHUB\n    \n    \n    \n    inventory table ofÃ¿ Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IS\n    \n    \n    \n    SUB_AGENCY_CODE \n    \n    \n    NGSM_MLB_RESALE\n    \n    \n    \n    inventory_seat table ofÃ¿ Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODEÃ¿ \n    \n    \n    IS\n    \n    \n    \n    FORWARD_STATUSÃ¿ \n    \n    \n    ACQUIRED\n    \n    \n    \n    MARKET_OFFER_STATUSÃ¿ \n    \n    \n    VALID\n    \n    \n    \n    inventory table ofÃ¿ SH offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IO\n    \n    \n    \n    SUB_AGENCY_CODE \n    \n    \n    STUBINDY\n    \n    \n    \n    inventory_seat table of SH offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODEÃ¿ \n    \n    \n    IO\n    \n    \n    \n    FORWARD_STATUSÃ¿ \n    \n    \n    null\n    \n    \n    \n    MARKET_OFFER_STATUSÃ¿ \n    \n    \n    null\r\n29. Ticket table in PV for seat 2,3,4,6\n    \n    \n     \n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    CURRENT_SOLD_MARKET_OFFER_ID\n    \n    \n    External offer ID of Replay 2.0 offer\n    \n    \n    \n    Ticket table in PV for seat 8,9\n    \n    \n     \n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    CURRENT_SOLD_MARKET_OFFER_ID\n    \n    \n    External offer ID of SH offer\n    \n    \n    \n    Market_offer  table in PV for Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    MARKET_OFFER_ID\n    \n    \n    Market offer ID of replay 2.0 offer\n    \n    \n    \n    EXTERNAL_OFFER_ID\n    \n    \n    PVO inventory ID(External offer ID) of replay 2.0 offer\n    \n    \n    \n    EXTERNAL_AUCTION_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKER_OFFER_TYPE_CODE\n    \n    \n    RS\n    \n    \n    \n    MAREKT_OFFER_STATUS_CODE\n    \n    \n    M\n    \n    \n    \n    SELLER_PATRON_ACCOUNT_ID\n    \n    \n    Broker patron ID\n    \n    \n    \n    BUYER_PATRON_ACCOUNT_ID\n    \n    \n    Buyer patron ID\n    \n    \n    \n    MARKETPLACE_TYPE_CODE\n    \n    \n    RP\n    \n    \n    \n     \n    \n    \n     \n    \n    \n    \n    Market_offer  table in PV for SH offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    MARKET_OFFER_ID\n    \n    \n    Market offer ID of SH offer\n    \n    \n    \n    EXTERNAL_OFFER_ID\n    \n    \n    PVO inventory ID(External offer ID) of SH offer\n    \n    \n    \n    EXTERNAL_AUCTION_ID\n    \n    \n    Agency listing ID received from PVO\n    \n    \n    \n    MARKER_OFFER_TYPE_CODE\n    \n    \n    RS\n    \n    \n    \n    MAREKT_OFFER_STATUS_CODE\n    \n    \n    O\n    \n    \n    \n    SELLER_PATRON_ACCOUNT_ID\n    \n    \n    SH seller ID\n    \n    \n    \n    BUYER_PATRON_ACCOUNT_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKETPLACE_TYPE_CODE\n    \n    \n    SH\r\n30. Email is received by the Replay seller and buyer once the offer is purchased"
      }
    ],
    "custom_jiras": "64"
  },
  {
    "id": 30692708,
    "title": "Verify completing a dual posting -first post tickets via  Replay(MTD) and then via 2nd market place Indy",
    "section_id": 1684983,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-Project 7",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C152187",
    "custom_pvo_pvodc_category": 19,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre-requisite:\n1.  replay.enable.postings.on.multiple.marketplaces should be true in PV.\n2.Set textcodes SHIE = true and REPLAY2E = true\n3.A Mytickets patron with Broker trait should be available.\n4.Acquire some tickets by a Broker patron mentioned in step 3..\r\nExpected Result:\r\nPre-requisite should be met\r\n2. .Launch MyTickets link and login as the patron mentioned  in pre-requisite.\r\nExpected Result:\r\nPatron should be logged in\r\n3. Verify that user is displayed with \"Sell seats\" and \"Sell \non SH\" actions  in Mytickets inventory in Ticket action \ndropdown\r\nExpected Result:\r\n\"Sell seats\" and \"Sell on SH\" actions  in Mytickets inventory in Ticket action dropdown\r\n4. Choose acquired tickets and create a resale offer \nusing Replay 2.0\r\nExpected Result:\r\nOffer should be created successfully\r\n5. Verify PersistInventoy call\r\nExpected Result:\r\nPersistInventory call is made to PV with all \ntransaction details\r\n6. Log in to Broker's Mytickets account and\nverify ticket status in Inventory page\r\nExpected Result:\r\nTicket status- Pending Resale-Replay.\r\n7. Verify GetPatronInventory call\r\nExpected Result:\r\nThe following are passed from PV for the ticket put for resale\n  \n\nVALID  \n  PENDING_RESALE  \n  REPLAY\r\n8. Verify the offer in Replay history tab\r\nExpected Result:\r\nThe offer created is displayed in Resale \noffers tab in history page with status as \nOpen\r\n9. Verify PV transaction details\r\nExpected Result:\r\nThe offer type is shown as \"Resale\". If click on \nthe Resale link, MO history modal is opened \nwith Current-Replay tab and it shows all details \nof Replay offer created above\r\n10. Verify the following tables in PVO:\n\npatron_inventory_seat table \ninventory table of  Replay 2.0 offer\ninventory_seat table of  Replay 2.0 offer\r\nExpected Result:\r\npatron_inventory_seat table ofÃ¿ Broker\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IR\n    \n    \n    \n    FORWARD_STATUS \n    \n    \n    ACQUIRED\n    \n    \n    \n    MARKET_OFFER_STATUS \n    \n    \n    PENDING_RESALE\n    \n    \n    \n    MARKETPLACES \n    \n    \n    REPLAY\n    \n\n\n  \n\n\n    \n        \n        \n    \n    \n    \n    inventory table ofÃ¿ Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IO\n    \n    \n    \n    SUB_AGENCY_CODE \n    \n    \n    NGSM_MLB_RESALE\n    \n\n\n  \n\n\n    \n        \n        \n    \n    \n    \n    inventory_seat table ofÃ¿ Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODEÃ¿ \n    \n    \n    IO\n    \n    \n    \n    FORWARD_STATUSÃ¿ \n    \n    \n    ACQUIRED\n    \n    \n    \n    MARKET_OFFER_STATUSÃ¿ \n    \n    \n    VALID\r\n11. Verify the following tables in PV\n\ntickets table\nmarket_offer table\r\nExpected Result:\r\nTicket table in PV\n    \n    \n     \n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    CURRENT_SOLD_MARKET_OFFER_ID\n    \n    \n    External offer ID of Replay 2.0 offer\n    \n    \n    \n     \n    \n    \n     \n    \n    \n    \n    Market_offer  table in PV for Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    MARKET_OFFER_ID\n    \n    \n    Market offer ID of replay 2.0 offer\n    \n    \n    \n    EXTERNAL_OFFER_ID\n    \n    \n    PVO inventory ID(External offer ID)\n    \n    \n    \n    EXTERNAL_AUCTION_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKER_OFFER_TYPE_CODE\n    \n    \n    RS\n    \n    \n    \n    MAREKT_OFFER_STATUS_CODE\n    \n    \n    O\n    \n    \n    \n    SELLER_PATRON_ACCOUNT_ID\n    \n    \n    Broker patron ID\n    \n    \n    \n    BUYER_PATRON_ACCOUNT_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKETPLACE_TYPE_CODE\n    \n    \n    RP\r\n12. Verify email is received by Replay seller as the \noffer is created\r\nExpected Result:\r\nEmail is received by Replay seller as the offer is created\r\n13. Launch  Indy.\r\nExpected Result:\r\nLaunch and login\r\n14. Post the same ticket for resale via  Indy.\r\nExpected Result:\r\nDual posting should be completed successfully.\r\n15. Verify LockInventory call made by stubhub and \nPersistInventoy call made by PVO\r\nExpected Result:\r\nLocinventory call is made by SH and PVO responds with inventory_id,status_code as OK, \nand agency_listing_id\n\nPersistInventory call is made by PVO to PV and PVO sends is_third_party_agency as true, \nauction_id with agency listing id\r\n16. Log in to Broker's Mytickets account and\nverify ticket status in Inventory page\r\nExpected Result:\r\nTicket s tatus- Pending Resale-Replay&Stubhub\r\n17. Verify GetPatronInventory call\r\nExpected Result:\r\nThe following are passed from PV for the ticket put for resale\n  \n\nVALID  \n PENDING_RESALE \n REPLAY,STUBHUB\r\n18. Verify the offer in history tabs\r\nExpected Result:\r\nThe offer created via Replay  is displayed in Resale offers tab in history page with status as \nOpen\n\nThe SH offer created is not displayed in SH History tab\r\n19. Verify PV transaction details\r\nExpected Result:\r\nThe offer type is shown as \"Resale\". If click on the Resale link, MO history modal is opened \nwith Current-Replay tabs and Current-Stubhub.Both tabs show all details of offers created \nabove\r\n20. Verify the following tables in PVO:\n \npatron_inventory_seat table \ninventory table\ninventory_seat table\r\nExpected Result:\r\npatron_inventory_seat table ofÃ¿ Broker\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IR\n    \n    \n    \n    FORWARD_STATUS \n    \n    \n    ACQUIRED\n    \n    \n    \n    MARKET_OFFER_STATUS \n    \n    \n    PENDING_RESALE\n    \n    \n    \n    MARKETPLACES \n    \n    \n    REPLAY,STUBHUB\n    \n\n\n  \n\n\n    \n        \n        \n    \n    \n    \n    inventory table ofÃ¿ Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IO\n    \n    \n    \n    SUB_AGENCY_CODE \n    \n    \n    NGSM_MLB_RESALE\n    \n\n\n    \n        \n        \n    \n    \n    \n    inventory_seat table ofÃ¿ Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODEÃ¿ \n    \n    \n    IO\n    \n    \n    \n    FORWARD_STATUSÃ¿ \n    \n    \n    ACQUIRED\n    \n    \n    \n    MARKET_OFFER_STATUSÃ¿ \n    \n    \n    VALID\n    \n\n\n    \n        \n        \n    \n    \n    \n    inventory table ofÃ¿ SH offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IO\n    \n    \n    \n    SUB_AGENCY_CODE \n    \n    \n    STUBINDY\n    \n\n\n    \n        \n        \n    \n    \n    \n    inventory_seat table of SH offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODEÃ¿ \n    \n    \n    IO\n    \n    \n    \n    FORWARD_STATUSÃ¿ \n    \n    \n    null\n    \n    \n    \n    MARKET_OFFER_STATUSÃ¿ \n    \n    \n    null\r\n21. Verify the following tables in PV\n \ntickets table\nmarket_offer table\r\nExpected Result:\r\nTicket table in PV\n    \n    \n     \n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    CURRENT_SOLD_MARKET_OFFER_ID\n    \n    \n    External offer ID of Replay 2.0 offer\n    \n    \n    \n     \n    \n    \n     \n    \n    \n    \n    Market_offer  table in PV for Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    MARKET_OFFER_ID\n    \n    \n    Market offer ID of replay 2.0 offer\n    \n    \n    \n    EXTERNAL_OFFER_ID\n    \n    \n    PVO inventory ID(External offer ID) of replay 2.0 \n    offer\n    \n    \n    \n    EXTERNAL_AUCTION_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKER_OFFER_TYPE_CODE\n    \n    \n    RS\n    \n    \n    \n    MAREKT_OFFER_STATUS_CODE\n    \n    \n    O\n    \n    \n    \n    SELLER_PATRON_ACCOUNT_ID\n    \n    \n    Broker patron ID\n    \n    \n    \n    BUYER_PATRON_ACCOUNT_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKETPLACE_TYPE_CODE\n    \n    \n    RP\n    \n    \n    \n     \n    \n    \n     \n    \n    \n    \n    Market_offer  table in PV for SH offer\n    \n    \n     \n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    MARKET_OFFER_ID\n    \n    \n    Market offer ID of SH offer\n    \n    \n    \n    EXTERNAL_OFFER_ID\n    \n    \n    PVO inventory ID(External offer ID) of SH offer\n    \n    \n    \n    EXTERNAL_AUCTION_ID\n    \n    \n    Agency listing ID received from PVO\n    \n    \n    \n    MARKER_OFFER_TYPE_CODE\n    \n    \n    RS\n    \n    \n    \n    MAREKT_OFFER_STATUS_CODE\n    \n    \n    O\n    \n    \n    \n    SELLER_PATRON_ACCOUNT_ID\n    \n    \n    SH seller ID\n    \n    \n    \n    BUYER_PATRON_ACCOUNT_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKETPLACE_TYPE_CODE\n    \n    \n    SH\r\n22. Verify no email is received by the SH seller once the SH offer is created\r\nExpected Result:\r\nNo email is received by the SH seller once the SH offer is created\r\n23. Purchase the offer via Replay 2.0 B2C site\r\nExpected Result:\r\nShould be able to purchase the offer\r\n24. Verify LockInventory call and MarketPayment call made \nby PVO\r\nExpected Result:\r\nPVO makes LockInventory call and MarketPayment call to PV with all transaction details\r\n25. Log in to Broker's mytixx account and verify ticket \nstatus in Inventory page\r\nExpected Result:\r\nTicket  status is -Sold-Replay\r\n26. Verify GetPatronInventory call\r\nExpected Result:\r\nThe following are passed from PV for the ticket put for resale\n  \n\nINVALID  \n TICKET_RESOLD \n\n    3.      REPLAY\r\n27. Verify the offer in history tabs\r\nExpected Result:\r\nThe offer created via Replay  is displayed in Resale offers tab in history page with status as \nSold\n \nThe SH offer created is not displayed in SH History tab\r\n28. Verify PV transaction details\r\nExpected Result:\r\nThe offer type is shown as \"Resale\" with a tic mark. If click on the Resale link, MO history \nmodal is opened with Current-Replay tabs and Current-Stubhub.Both tabs show all details \nof offers created above.\n\nThe Replay offer is marked as completed and SH offer is still in open status\r\n29. Verify the following tables in PVO:\n \npatron_inventory_seat table \ninventory table\ninventory_seat table\r\nExpected Result:\r\npatron_inventory_seat table ofÃ¿ Broker\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IS\n    \n    \n    \n    FORWARD_STATUS \n    \n    \n    null\n    \n    \n    \n    MARKET_OFFER_STATUS \n    \n    \n    TICKET_RESOLD\n    \n    \n    \n    MARKETPLACES \n    \n    \n    REPLAY\n    \n    \n    \n    patron_inventory_seat table of Buyer patron\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IW\n    \n    \n    \n    FORWARD_STATUS \n    \n    \n    NULL\n    \n    \n    \n    MARKET_OFFER_STATUS \n    \n    \n    VALID\n    \n    \n    \n    MARKETPLACES \n    \n    \n    NULL\n    \n    \n    \n    inventory table ofÃ¿ Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IS\n    \n    \n    \n    SUB_AGENCY_CODE \n    \n    \n    NGSM_MLB_RESALE\n    \n    \n    \n    inventory_seat table ofÃ¿ Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODEÃ¿ \n    \n    \n    IS\n    \n    \n    \n    FORWARD_STATUSÃ¿ \n    \n    \n    ACQUIRED\n    \n    \n    \n    MARKET_OFFER_STATUSÃ¿ \n    \n    \n    VALID\n    \n    \n    \n    inventory table ofÃ¿ SH offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IO\n    \n    \n    \n    SUB_AGENCY_CODE \n    \n    \n    STUBINDY\n    \n    \n    \n    inventory_seat table of SH offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODEÃ¿ \n    \n    \n    IO\n    \n    \n    \n    FORWARD_STATUSÃ¿ \n    \n    \n    null\n    \n    \n    \n    MARKET_OFFER_STATUSÃ¿ \n    \n    \n    null\r\n30. Verify the following tabled in PV\n\nTickets table\nmarket_offer table\r\nExpected Result:\r\nTicket table in PV\n    \n    \n     \n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    CURRENT_SOLD_MARKET_OFFER_ID\n    \n    \n    External offer ID of Replay 2.0 offer\n    \n    \n    \n     \n    \n    \n     \n    \n    \n    \n    Market_offer  table in PV for Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    MARKET_OFFER_ID\n    \n    \n    Market offer ID of replay 2.0 offer\n    \n    \n    \n    EXTERNAL_OFFER_ID\n    \n    \n    PVO inventory ID(External offer ID) of replay 2.0 \n    offer\n    \n    \n    \n    EXTERNAL_AUCTION_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKER_OFFER_TYPE_CODE\n    \n    \n    RS\n    \n    \n    \n    MAREKT_OFFER_STATUS_CODE\n    \n    \n    M\n    \n    \n    \n    SELLER_PATRON_ACCOUNT_ID\n    \n    \n    Broker patron ID\n    \n    \n    \n    BUYER_PATRON_ACCOUNT_ID\n    \n    \n    Buyer patron ID\n    \n    \n    \n    MARKETPLACE_TYPE_CODE\n    \n    \n    RP\n    \n    \n    \n     \n    \n    \n     \n    \n    \n    \n    Market_offer  table in PV for SH offer\n    \n    \n     \n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    MARKET_OFFER_ID\n    \n    \n    Market offer ID of SH offer\n    \n    \n    \n    EXTERNAL_OFFER_ID\n    \n    \n    PVO inventory ID(External offer ID) of SH offer\n    \n    \n    \n    EXTERNAL_AUCTION_ID\n    \n    \n    Agency listing ID received from PVO\n    \n    \n    \n    MARKER_OFFER_TYPE_CODE\n    \n    \n    RS\n    \n    \n    \n    MAREKT_OFFER_STATUS_CODE\n    \n    \n    O\n    \n    \n    \n    SELLER_PATRON_ACCOUNT_ID\n    \n    \n    SH seller ID\n    \n    \n    \n    BUYER_PATRON_ACCOUNT_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKETPLACE_TYPE_CODE\n    \n    \n    SH\r\n31. Verify email is received by the Replay seller and buyer \nonce the offer is purchased\r\nExpected Result:\r\nEmail is received by the Replay seller and buyer once the offer is purchased",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-requisite:\n1.  replay.enable.postings.on.multiple.marketplaces should be true in PV.\n2.Set textcodes SHIE = true and REPLAY2E = true\n3.A Mytickets patron with Broker trait should be available.\n4.Acquire some tickets by a Broker patron mentioned in step 3..\r\n2. .Launch MyTickets link and login as the patron mentioned  in pre-requisite.\r\n3. Verify that user is displayed with \"Sell seats\" and \"Sell \non SH\" actions  in Mytickets inventory in Ticket action \ndropdown\r\n4. Choose acquired tickets and create a resale offer \nusing Replay 2.0\r\n5. Verify PersistInventoy call\r\n6. Log in to Broker's Mytickets account and\nverify ticket status in Inventory page\r\n7. Verify GetPatronInventory call\r\n8. Verify the offer in Replay history tab\r\n9. Verify PV transaction details\r\n10. Verify the following tables in PVO:\n\npatron_inventory_seat table \ninventory table of  Replay 2.0 offer\ninventory_seat table of  Replay 2.0 offer\r\n11. Verify the following tables in PV\n\ntickets table\nmarket_offer table\r\n12. Verify email is received by Replay seller as the \noffer is created\r\n13. Launch  Indy.\r\n14. Post the same ticket for resale via  Indy.\r\n15. Verify LockInventory call made by stubhub and \nPersistInventoy call made by PVO\r\n16. Log in to Broker's Mytickets account and\nverify ticket status in Inventory page\r\n17. Verify GetPatronInventory call\r\n18. Verify the offer in history tabs\r\n19. Verify PV transaction details\r\n20. Verify the following tables in PVO:\n \npatron_inventory_seat table \ninventory table\ninventory_seat table\r\n21. Verify the following tables in PV\n \ntickets table\nmarket_offer table\r\n22. Verify no email is received by the SH seller once the SH offer is created\r\n23. Purchase the offer via Replay 2.0 B2C site\r\n24. Verify LockInventory call and MarketPayment call made \nby PVO\r\n25. Log in to Broker's mytixx account and verify ticket \nstatus in Inventory page\r\n26. Verify GetPatronInventory call\r\n27. Verify the offer in history tabs\r\n28. Verify PV transaction details\r\n29. Verify the following tables in PVO:\n \npatron_inventory_seat table \ninventory table\ninventory_seat table\r\n30. Verify the following tabled in PV\n\nTickets table\nmarket_offer table\r\n31. Verify email is received by the Replay seller and buyer \nonce the offer is purchased",
        "expected": "1. Pre-requisite should be met\r\n2. Patron should be logged in\r\n3. \"Sell seats\" and \"Sell on SH\" actions  in Mytickets inventory in Ticket action dropdown\r\n4. Offer should be created successfully\r\n5. PersistInventory call is made to PV with all \ntransaction details\r\n6. Ticket status- Pending Resale-Replay.\r\n7. The following are passed from PV for the ticket put for resale\n  \n\nVALID  \n  PENDING_RESALE  \n  REPLAY\r\n8. The offer created is displayed in Resale \noffers tab in history page with status as \nOpen\r\n9. The offer type is shown as \"Resale\". If click on \nthe Resale link, MO history modal is opened \nwith Current-Replay tab and it shows all details \nof Replay offer created above\r\n10. patron_inventory_seat table ofÃ¿ Broker\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IR\n    \n    \n    \n    FORWARD_STATUS \n    \n    \n    ACQUIRED\n    \n    \n    \n    MARKET_OFFER_STATUS \n    \n    \n    PENDING_RESALE\n    \n    \n    \n    MARKETPLACES \n    \n    \n    REPLAY\n    \n\n\n  \n\n\n    \n        \n        \n    \n    \n    \n    inventory table ofÃ¿ Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IO\n    \n    \n    \n    SUB_AGENCY_CODE \n    \n    \n    NGSM_MLB_RESALE\n    \n\n\n  \n\n\n    \n        \n        \n    \n    \n    \n    inventory_seat table ofÃ¿ Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODEÃ¿ \n    \n    \n    IO\n    \n    \n    \n    FORWARD_STATUSÃ¿ \n    \n    \n    ACQUIRED\n    \n    \n    \n    MARKET_OFFER_STATUSÃ¿ \n    \n    \n    VALID\r\n11. Ticket table in PV\n    \n    \n     \n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    CURRENT_SOLD_MARKET_OFFER_ID\n    \n    \n    External offer ID of Replay 2.0 offer\n    \n    \n    \n     \n    \n    \n     \n    \n    \n    \n    Market_offer  table in PV for Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    MARKET_OFFER_ID\n    \n    \n    Market offer ID of replay 2.0 offer\n    \n    \n    \n    EXTERNAL_OFFER_ID\n    \n    \n    PVO inventory ID(External offer ID)\n    \n    \n    \n    EXTERNAL_AUCTION_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKER_OFFER_TYPE_CODE\n    \n    \n    RS\n    \n    \n    \n    MAREKT_OFFER_STATUS_CODE\n    \n    \n    O\n    \n    \n    \n    SELLER_PATRON_ACCOUNT_ID\n    \n    \n    Broker patron ID\n    \n    \n    \n    BUYER_PATRON_ACCOUNT_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKETPLACE_TYPE_CODE\n    \n    \n    RP\r\n12. Email is received by Replay seller as the offer is created\r\n13. Launch and login\r\n14. Dual posting should be completed successfully.\r\n15. Locinventory call is made by SH and PVO responds with inventory_id,status_code as OK, \nand agency_listing_id\n\nPersistInventory call is made by PVO to PV and PVO sends is_third_party_agency as true, \nauction_id with agency listing id\r\n16. Ticket s tatus- Pending Resale-Replay&Stubhub\r\n17. The following are passed from PV for the ticket put for resale\n  \n\nVALID  \n PENDING_RESALE \n REPLAY,STUBHUB\r\n18. The offer created via Replay  is displayed in Resale offers tab in history page with status as \nOpen\n\nThe SH offer created is not displayed in SH History tab\r\n19. The offer type is shown as \"Resale\". If click on the Resale link, MO history modal is opened \nwith Current-Replay tabs and Current-Stubhub.Both tabs show all details of offers created \nabove\r\n20. patron_inventory_seat table ofÃ¿ Broker\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IR\n    \n    \n    \n    FORWARD_STATUS \n    \n    \n    ACQUIRED\n    \n    \n    \n    MARKET_OFFER_STATUS \n    \n    \n    PENDING_RESALE\n    \n    \n    \n    MARKETPLACES \n    \n    \n    REPLAY,STUBHUB\n    \n\n\n  \n\n\n    \n        \n        \n    \n    \n    \n    inventory table ofÃ¿ Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IO\n    \n    \n    \n    SUB_AGENCY_CODE \n    \n    \n    NGSM_MLB_RESALE\n    \n\n\n    \n        \n        \n    \n    \n    \n    inventory_seat table ofÃ¿ Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODEÃ¿ \n    \n    \n    IO\n    \n    \n    \n    FORWARD_STATUSÃ¿ \n    \n    \n    ACQUIRED\n    \n    \n    \n    MARKET_OFFER_STATUSÃ¿ \n    \n    \n    VALID\n    \n\n\n    \n        \n        \n    \n    \n    \n    inventory table ofÃ¿ SH offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IO\n    \n    \n    \n    SUB_AGENCY_CODE \n    \n    \n    STUBINDY\n    \n\n\n    \n        \n        \n    \n    \n    \n    inventory_seat table of SH offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODEÃ¿ \n    \n    \n    IO\n    \n    \n    \n    FORWARD_STATUSÃ¿ \n    \n    \n    null\n    \n    \n    \n    MARKET_OFFER_STATUSÃ¿ \n    \n    \n    null\r\n21. Ticket table in PV\n    \n    \n     \n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    CURRENT_SOLD_MARKET_OFFER_ID\n    \n    \n    External offer ID of Replay 2.0 offer\n    \n    \n    \n     \n    \n    \n     \n    \n    \n    \n    Market_offer  table in PV for Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    MARKET_OFFER_ID\n    \n    \n    Market offer ID of replay 2.0 offer\n    \n    \n    \n    EXTERNAL_OFFER_ID\n    \n    \n    PVO inventory ID(External offer ID) of replay 2.0 \n    offer\n    \n    \n    \n    EXTERNAL_AUCTION_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKER_OFFER_TYPE_CODE\n    \n    \n    RS\n    \n    \n    \n    MAREKT_OFFER_STATUS_CODE\n    \n    \n    O\n    \n    \n    \n    SELLER_PATRON_ACCOUNT_ID\n    \n    \n    Broker patron ID\n    \n    \n    \n    BUYER_PATRON_ACCOUNT_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKETPLACE_TYPE_CODE\n    \n    \n    RP\n    \n    \n    \n     \n    \n    \n     \n    \n    \n    \n    Market_offer  table in PV for SH offer\n    \n    \n     \n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    MARKET_OFFER_ID\n    \n    \n    Market offer ID of SH offer\n    \n    \n    \n    EXTERNAL_OFFER_ID\n    \n    \n    PVO inventory ID(External offer ID) of SH offer\n    \n    \n    \n    EXTERNAL_AUCTION_ID\n    \n    \n    Agency listing ID received from PVO\n    \n    \n    \n    MARKER_OFFER_TYPE_CODE\n    \n    \n    RS\n    \n    \n    \n    MAREKT_OFFER_STATUS_CODE\n    \n    \n    O\n    \n    \n    \n    SELLER_PATRON_ACCOUNT_ID\n    \n    \n    SH seller ID\n    \n    \n    \n    BUYER_PATRON_ACCOUNT_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKETPLACE_TYPE_CODE\n    \n    \n    SH\r\n22. No email is received by the SH seller once the SH offer is created\r\n23. Should be able to purchase the offer\r\n24. PVO makes LockInventory call and MarketPayment call to PV with all transaction details\r\n25. Ticket  status is -Sold-Replay\r\n26. The following are passed from PV for the ticket put for resale\n  \n\nINVALID  \n TICKET_RESOLD \n\n    3.      REPLAY\r\n27. The offer created via Replay  is displayed in Resale offers tab in history page with status as \nSold\n \nThe SH offer created is not displayed in SH History tab\r\n28. The offer type is shown as \"Resale\" with a tic mark. If click on the Resale link, MO history \nmodal is opened with Current-Replay tabs and Current-Stubhub.Both tabs show all details \nof offers created above.\n\nThe Replay offer is marked as completed and SH offer is still in open status\r\n29. patron_inventory_seat table ofÃ¿ Broker\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IS\n    \n    \n    \n    FORWARD_STATUS \n    \n    \n    null\n    \n    \n    \n    MARKET_OFFER_STATUS \n    \n    \n    TICKET_RESOLD\n    \n    \n    \n    MARKETPLACES \n    \n    \n    REPLAY\n    \n    \n    \n    patron_inventory_seat table of Buyer patron\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IW\n    \n    \n    \n    FORWARD_STATUS \n    \n    \n    NULL\n    \n    \n    \n    MARKET_OFFER_STATUS \n    \n    \n    VALID\n    \n    \n    \n    MARKETPLACES \n    \n    \n    NULL\n    \n    \n    \n    inventory table ofÃ¿ Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IS\n    \n    \n    \n    SUB_AGENCY_CODE \n    \n    \n    NGSM_MLB_RESALE\n    \n    \n    \n    inventory_seat table ofÃ¿ Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODEÃ¿ \n    \n    \n    IS\n    \n    \n    \n    FORWARD_STATUSÃ¿ \n    \n    \n    ACQUIRED\n    \n    \n    \n    MARKET_OFFER_STATUSÃ¿ \n    \n    \n    VALID\n    \n    \n    \n    inventory table ofÃ¿ SH offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IO\n    \n    \n    \n    SUB_AGENCY_CODE \n    \n    \n    STUBINDY\n    \n    \n    \n    inventory_seat table of SH offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODEÃ¿ \n    \n    \n    IO\n    \n    \n    \n    FORWARD_STATUSÃ¿ \n    \n    \n    null\n    \n    \n    \n    MARKET_OFFER_STATUSÃ¿ \n    \n    \n    null\r\n30. Ticket table in PV\n    \n    \n     \n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    CURRENT_SOLD_MARKET_OFFER_ID\n    \n    \n    External offer ID of Replay 2.0 offer\n    \n    \n    \n     \n    \n    \n     \n    \n    \n    \n    Market_offer  table in PV for Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    MARKET_OFFER_ID\n    \n    \n    Market offer ID of replay 2.0 offer\n    \n    \n    \n    EXTERNAL_OFFER_ID\n    \n    \n    PVO inventory ID(External offer ID) of replay 2.0 \n    offer\n    \n    \n    \n    EXTERNAL_AUCTION_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKER_OFFER_TYPE_CODE\n    \n    \n    RS\n    \n    \n    \n    MAREKT_OFFER_STATUS_CODE\n    \n    \n    M\n    \n    \n    \n    SELLER_PATRON_ACCOUNT_ID\n    \n    \n    Broker patron ID\n    \n    \n    \n    BUYER_PATRON_ACCOUNT_ID\n    \n    \n    Buyer patron ID\n    \n    \n    \n    MARKETPLACE_TYPE_CODE\n    \n    \n    RP\n    \n    \n    \n     \n    \n    \n     \n    \n    \n    \n    Market_offer  table in PV for SH offer\n    \n    \n     \n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    MARKET_OFFER_ID\n    \n    \n    Market offer ID of SH offer\n    \n    \n    \n    EXTERNAL_OFFER_ID\n    \n    \n    PVO inventory ID(External offer ID) of SH offer\n    \n    \n    \n    EXTERNAL_AUCTION_ID\n    \n    \n    Agency listing ID received from PVO\n    \n    \n    \n    MARKER_OFFER_TYPE_CODE\n    \n    \n    RS\n    \n    \n    \n    MAREKT_OFFER_STATUS_CODE\n    \n    \n    O\n    \n    \n    \n    SELLER_PATRON_ACCOUNT_ID\n    \n    \n    SH seller ID\n    \n    \n    \n    BUYER_PATRON_ACCOUNT_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKETPLACE_TYPE_CODE\n    \n    \n    SH\r\n31. Email is received by the Replay seller and buyer once the offer is purchased"
      }
    ],
    "custom_jiras": "64"
  },
  {
    "id": 30692709,
    "title": "Verify completing a dual posting -first post tickets via  2nd market place(STH) and then via Create Market offer API",
    "section_id": 1684983,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-Project 7",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C152188",
    "custom_pvo_pvodc_category": 19,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre-requisite:\n1.  replay.enable.postings.on.multiple.marketplaces should be true in PV.\n2.Set textcodes SHIE = true and REPLAY2E = true\n3.A Mytickets patron with Broker trait should be available.\n4.Acquire some tickets by a Broker patron mentioned in step 3..\r\nExpected Result:\r\nPre-requisite should be met\r\n2. .Launch MyTickets link and login as the patron mentioned  in pre-requisite.\r\nExpected Result:\r\nPatron should be logged in\r\n3. Verify that user is displayed wit \"Sell seats\" and \"Sell \non SH\" actions  in Mytickets inventory in Ticket action \ndropdown\r\nExpected Result:\r\n\"Sell seats\" and \"Sell on SH\" actions  in Mytickets inventory in Ticket action dropdown\r\n4. Choose acquired tickets and create a resale offer \nusing \"Sell on SH\" option\r\nExpected Result:\r\nOffer should be created successfully\r\n5. Verify LockInventory call made by stubhub and \nPersistInventoy call made by PVO\r\nExpected Result:\r\nLocinventory call is made by SH and PVO responds with inventory_id,status_code as OK, \nand agency_listing_id\n\nPersistInventory call is made by PVO to PV and PVO sends is_third_party_agency as true, \nauction_id with agency listing id\r\n6. Log in to Broker's Mytickets account and\nverify ticket status in Inventory page\r\nExpected Result:\r\nTicket status- Pending Resale-SH.\r\n7. Verify GetPatronInventory call\r\nExpected Result:\r\nThe following are passed from PV for the ticket put for resale\n  \n\nVALID  \n PENDING_RESALE  \n STUBHUB\r\n8. Verify the offer in Replay history tab\r\nExpected Result:\r\nThe offer created is displayed in SH offers tab in history page with status as Open\r\n9. Verify PV transaction details\r\nExpected Result:\r\nThe offer type is shown as \"Resale\". If click on the Resale link, MO history modal is opened with \nCurrent-Replay tab and it shows all details of SH offer created above\r\n10. Verify the following tables in PVO:\n \npatron_inventory_seat table \ninventory table \ninventory_seat table\r\nExpected Result:\r\npatron_inventory_seat table ofÃ¿ Broker\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IR\n    \n    \n    \n    FORWARD_STATUS \n    \n    \n    ACQUIRED\n    \n    \n    \n    MARKET_OFFER_STATUS \n    \n    \n    PENDING_RESALE\n    \n    \n    \n    MARKETPLACES \n    \n    \n    STUBHUB\n    \n\n  \n\n    \n        \n        \n    \n    \n    \n    inventory table ofÃ¿ SH offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IO\n    \n    \n    \n    SUB_AGENCY_CODE \n    \n    \n    STUBHUB\n    \n    \n    \n     \n    \n    \n     \n    \n    \n    \n    inventory_seat table of SH offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODEÃ¿ \n    \n    \n    IO\n    \n    \n    \n    FORWARD_STATUSÃ¿ \n    \n    \n    null\n    \n    \n    \n    MARKET_OFFER_STATUSÃ¿ \n    \n    \n    null\r\n11. Verify the following tables in PV\n\ntickets table\nmarket_offer table\r\nExpected Result:\r\nTicket table in PV\n    \n    \n     \n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    CURRENT_SOLD_MARKET_OFFER_ID\n    \n    \n    External offer ID of SH offer\n    \n    \n    \n     \n    \n    \n     \n    \n    \n    \n    Market_offer  table in PV for SH offer\n    \n    \n     \n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    MARKET_OFFER_ID\n    \n    \n    Market offer ID of SH offer\n    \n    \n    \n    EXTERNAL_OFFER_ID\n    \n    \n    PVO inventory ID(External offer ID) of SH \n    offer\n    \n    \n    \n    EXTERNAL_AUCTION_ID\n    \n    \n    Agency listing ID received from PVO\n    \n    \n    \n    MARKER_OFFER_TYPE_CODE\n    \n    \n    RS\n    \n    \n    \n    MAREKT_OFFER_STATUS_CODE\n    \n    \n    O\n    \n    \n    \n    SELLER_PATRON_ACCOUNT_ID\n    \n    \n    SH seller ID\n    \n    \n    \n    BUYER_PATRON_ACCOUNT_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKETPLACE_TYPE_CODE\n    \n    \n    SH\r\n12. Verify no email is received by SH seller as the offer is \ncreated\r\nExpected Result:\r\nNo Email is received by SH seller as the offer is created\r\n13. Post the same ticket for resale via Create Market Offer \nAPI in broker platform\r\nExpected Result:\r\nDual posting should be completed successfully.\r\n14. Verify PersistInventoy call\r\nExpected Result:\r\nPersistInventory call is made to PV with all \ntransaction details\r\n15. Log in to Broker's Mytickets account and\nverify ticket status in Inventory page\r\nExpected Result:\r\nTicket s tatus- Pending Resale-Replay&Stubhub\r\n16. Verify GetPatronInventory call\r\nExpected Result:\r\nThe following are passed from PV for the ticket put for resale\n  \n\nVALID  \n PENDING_RESALE \n REPLAY,STUBHUB\r\n17. Verify the offer in history tabs\r\nExpected Result:\r\nThe offer created via Replay  is displayed in Resale offers tab in history page with status as \nOpen\n\nThe SH offer created is not displayed in SH History tab\r\n18. Verify PV transaction details\r\nExpected Result:\r\nThe offer type is shown as \"Resale\". If click on the Resale link, MO history modal is opened \nwith Current-Replay tabs and Current-Stubhub.Both tabs show all details of offers created \nabove\r\n19. Verify the following tables in PVO:\n \npatron_inventory_seat table \ninventory table\ninventory_seat table\r\nExpected Result:\r\npatron_inventory_seat table ofÃ¿ Broker\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IR\n    \n    \n    \n    FORWARD_STATUS \n    \n    \n    ACQUIRED\n    \n    \n    \n    MARKET_OFFER_STATUS \n    \n    \n    PENDING_RESALE\n    \n    \n    \n    MARKETPLACES \n    \n    \n    REPLAY,STUBHUB\n    \n\n  \n\n    \n        \n        \n    \n    \n    \n    inventory table ofÃ¿ Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IO\n    \n    \n    \n    SUB_AGENCY_CODE \n    \n    \n    NGSM_MLB_RESALE\n    \n\n\n    \n        \n        \n    \n    \n    \n    inventory_seat table ofÃ¿ Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODEÃ¿ \n    \n    \n    IO\n    \n    \n    \n    FORWARD_STATUSÃ¿ \n    \n    \n    ACQUIRED\n    \n    \n    \n    MARKET_OFFER_STATUSÃ¿ \n    \n    \n    VALID\n    \n\n\n    \n        \n        \n    \n    \n    \n    inventory table ofÃ¿ SH offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IO\n    \n    \n    \n    SUB_AGENCY_CODE \n    \n    \n    STUBHUB\n    \n\n\n    \n        \n        \n    \n    \n    \n    inventory_seat table of SH offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODEÃ¿ \n    \n    \n    IO\n    \n    \n    \n    FORWARD_STATUSÃ¿ \n    \n    \n    null\n    \n    \n    \n    MARKET_OFFER_STATUSÃ¿ \n    \n    \n    null\r\n20. Verify the following tables in PV\n \ntickets table\nmarket_offer table\r\nExpected Result:\r\nTicket table in PV\n    \n    \n     \n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    CURRENT_SOLD_MARKET_OFFER_ID\n    \n    \n    External offer ID of SH offer\n    \n    \n    \n     \n    \n    \n     \n    \n    \n    \n    Market_offer  table in PV for Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    MARKET_OFFER_ID\n    \n    \n    Market offer ID of replay 2.0 offer\n    \n    \n    \n    EXTERNAL_OFFER_ID\n    \n    \n    PVO inventory ID(External offer ID) of replay 2.0 \n    offer\n    \n    \n    \n    EXTERNAL_AUCTION_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKER_OFFER_TYPE_CODE\n    \n    \n    RS\n    \n    \n    \n    MAREKT_OFFER_STATUS_CODE\n    \n    \n    O\n    \n    \n    \n    SELLER_PATRON_ACCOUNT_ID\n    \n    \n    Broker patron ID\n    \n    \n    \n    BUYER_PATRON_ACCOUNT_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKETPLACE_TYPE_CODE\n    \n    \n    RP\n    \n    \n    \n     \n    \n    \n     \n    \n    \n    \n    Market_offer  table in PV for SH offer\n    \n    \n     \n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    MARKET_OFFER_ID\n    \n    \n    Market offer ID of SH offer\n    \n    \n    \n    EXTERNAL_OFFER_ID\n    \n    \n    PVO inventory ID(External offer ID) of SH offer\n    \n    \n    \n    EXTERNAL_AUCTION_ID\n    \n    \n    Agency listing ID received from PVO\n    \n    \n    \n    MARKER_OFFER_TYPE_CODE\n    \n    \n    RS\n    \n    \n    \n    MAREKT_OFFER_STATUS_CODE\n    \n    \n    O\n    \n    \n    \n    SELLER_PATRON_ACCOUNT_ID\n    \n    \n    SH seller ID\n    \n    \n    \n    BUYER_PATRON_ACCOUNT_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKETPLACE_TYPE_CODE\n    \n    \n    SH\r\n21. Verify email is received by the broker once the Replay offer is created\r\nExpected Result:\r\nEmail is received by the broker once the Replay offer is created\r\n22. Purchase the offer via Replay 2.0 B2C site\r\nExpected Result:\r\nShould be able to purchase the offer\r\n23. Verify LockInventory call and MarketPayment call made \nby PVO\r\nExpected Result:\r\nPVO makes LockInventory call and MarketPayment call to PV with all transaction details\r\n24. Log in to Broker's mytixx account and verify ticket \nstatus in Inventory page\r\nExpected Result:\r\nTicket  status is -Sold-Replay\r\n25. Verify GetPatronInventory call\r\nExpected Result:\r\nThe following are passed from PV for the ticket put for resale\n  \n\nINVALID  \n TICKET_RESOLD \n\n    3.      REPLAY\r\n26. Verify the offer in history tabs\r\nExpected Result:\r\nThe offer created via Replay  is displayed in Resale offers tab in history page with status as \nSold\n \nThe SH offer created is not displayed in SH History tab\r\n27. Verify PV transaction details\r\nExpected Result:\r\nThe offer type is shown as \"Resale\" with a tic mark. If click on the Resale link, MO history \nmodal is opened with Current-Replay tabs and Current-Stubhub.Both tabs show all details \nof offers created above.\n\nThe Replay offer is marked as completed and SH offer is still in open status\r\n28. Verify the following tables in PVO:\n \npatron_inventory_seat table \ninventory table\ninventory_seat table\r\nExpected Result:\r\npatron_inventory_seat table ofÃ¿ Broker\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IS\n    \n    \n    \n    FORWARD_STATUS \n    \n    \n    null\n    \n    \n    \n    MARKET_OFFER_STATUS \n    \n    \n    TICKET_RESOLD\n    \n    \n    \n    MARKETPLACES \n    \n    \n    REPLAY\n    \n    \n    \n    patron_inventory_seat table of Buyer patron\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IW\n    \n    \n    \n    FORWARD_STATUS \n    \n    \n    NULL\n    \n    \n    \n    MARKET_OFFER_STATUS \n    \n    \n    VALID\n    \n    \n    \n    MARKETPLACES \n    \n    \n    NULL\n    \n    \n    \n    inventory table ofÃ¿ Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IS\n    \n    \n    \n    SUB_AGENCY_CODE \n    \n    \n    NGSM_MLB_RESALE\n    \n    \n    \n    inventory_seat table ofÃ¿ Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODEÃ¿ \n    \n    \n    IS\n    \n    \n    \n    FORWARD_STATUSÃ¿ \n    \n    \n    ACQUIRED\n    \n    \n    \n    MARKET_OFFER_STATUSÃ¿ \n    \n    \n    VALID\n    \n    \n    \n    inventory table ofÃ¿ SH offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IO\n    \n    \n    \n    SUB_AGENCY_CODE \n    \n    \n    STUBHUB\n    \n    \n    \n    inventory_seat table of SH offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODEÃ¿ \n    \n    \n    IO\n    \n    \n    \n    FORWARD_STATUSÃ¿ \n    \n    \n    null\n    \n    \n    \n    MARKET_OFFER_STATUSÃ¿ \n    \n    \n    null\r\n29. Verify the following tabled in PV\n\nTickets table\nmarket_offer table\r\nExpected Result:\r\nTicket table in PV\n    \n    \n     \n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    CURRENT_SOLD_MARKET_OFFER_ID\n    \n    \n    External offer ID of Replay  offer\n    \n    \n    \n    Market_offer  table in PV for Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    MARKET_OFFER_ID\n    \n    \n    Market offer ID of replay 2.0 offer\n    \n    \n    \n    EXTERNAL_OFFER_ID\n    \n    \n    PVO inventory ID(External offer ID) of replay 2.0 \n    offer\n    \n    \n    \n    EXTERNAL_AUCTION_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKER_OFFER_TYPE_CODE\n    \n    \n    RS\n    \n    \n    \n    MAREKT_OFFER_STATUS_CODE\n    \n    \n    M\n    \n    \n    \n    SELLER_PATRON_ACCOUNT_ID\n    \n    \n    Broker patron ID\n    \n    \n    \n    BUYER_PATRON_ACCOUNT_ID\n    \n    \n    Buyer patron ID\n    \n    \n    \n    MARKETPLACE_TYPE_CODE\n    \n    \n    RP\n    \n    \n    \n    Market_offer  table in PV for SH offer\n    \n    \n     \n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    MARKET_OFFER_ID\n    \n    \n    Market offer ID of SH offer\n    \n    \n    \n    EXTERNAL_OFFER_ID\n    \n    \n    PVO inventory ID(External offer ID) of SH offer\n    \n    \n    \n    EXTERNAL_AUCTION_ID\n    \n    \n    Agency listing ID received from PVO\n    \n    \n    \n    MARKER_OFFER_TYPE_CODE\n    \n    \n    RS\n    \n    \n    \n    MAREKT_OFFER_STATUS_CODE\n    \n    \n    O\n    \n    \n    \n    SELLER_PATRON_ACCOUNT_ID\n    \n    \n    SH seller ID\n    \n    \n    \n    BUYER_PATRON_ACCOUNT_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKETPLACE_TYPE_CODE\n    \n    \n    SH\r\n30. Verify email is received by the Replay seller and buyer \nonce the offer is purchased\r\nExpected Result:\r\nEmail is received by the Replay seller and buyer once the offer is purchased",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-requisite:\n1.  replay.enable.postings.on.multiple.marketplaces should be true in PV.\n2.Set textcodes SHIE = true and REPLAY2E = true\n3.A Mytickets patron with Broker trait should be available.\n4.Acquire some tickets by a Broker patron mentioned in step 3..\r\n2. .Launch MyTickets link and login as the patron mentioned  in pre-requisite.\r\n3. Verify that user is displayed wit \"Sell seats\" and \"Sell \non SH\" actions  in Mytickets inventory in Ticket action \ndropdown\r\n4. Choose acquired tickets and create a resale offer \nusing \"Sell on SH\" option\r\n5. Verify LockInventory call made by stubhub and \nPersistInventoy call made by PVO\r\n6. Log in to Broker's Mytickets account and\nverify ticket status in Inventory page\r\n7. Verify GetPatronInventory call\r\n8. Verify the offer in Replay history tab\r\n9. Verify PV transaction details\r\n10. Verify the following tables in PVO:\n \npatron_inventory_seat table \ninventory table \ninventory_seat table\r\n11. Verify the following tables in PV\n\ntickets table\nmarket_offer table\r\n12. Verify no email is received by SH seller as the offer is \ncreated\r\n13. Post the same ticket for resale via Create Market Offer \nAPI in broker platform\r\n14. Verify PersistInventoy call\r\n15. Log in to Broker's Mytickets account and\nverify ticket status in Inventory page\r\n16. Verify GetPatronInventory call\r\n17. Verify the offer in history tabs\r\n18. Verify PV transaction details\r\n19. Verify the following tables in PVO:\n \npatron_inventory_seat table \ninventory table\ninventory_seat table\r\n20. Verify the following tables in PV\n \ntickets table\nmarket_offer table\r\n21. Verify email is received by the broker once the Replay offer is created\r\n22. Purchase the offer via Replay 2.0 B2C site\r\n23. Verify LockInventory call and MarketPayment call made \nby PVO\r\n24. Log in to Broker's mytixx account and verify ticket \nstatus in Inventory page\r\n25. Verify GetPatronInventory call\r\n26. Verify the offer in history tabs\r\n27. Verify PV transaction details\r\n28. Verify the following tables in PVO:\n \npatron_inventory_seat table \ninventory table\ninventory_seat table\r\n29. Verify the following tabled in PV\n\nTickets table\nmarket_offer table\r\n30. Verify email is received by the Replay seller and buyer \nonce the offer is purchased",
        "expected": "1. Pre-requisite should be met\r\n2. Patron should be logged in\r\n3. \"Sell seats\" and \"Sell on SH\" actions  in Mytickets inventory in Ticket action dropdown\r\n4. Offer should be created successfully\r\n5. Locinventory call is made by SH and PVO responds with inventory_id,status_code as OK, \nand agency_listing_id\n\nPersistInventory call is made by PVO to PV and PVO sends is_third_party_agency as true, \nauction_id with agency listing id\r\n6. Ticket status- Pending Resale-SH.\r\n7. The following are passed from PV for the ticket put for resale\n  \n\nVALID  \n PENDING_RESALE  \n STUBHUB\r\n8. The offer created is displayed in SH offers tab in history page with status as Open\r\n9. The offer type is shown as \"Resale\". If click on the Resale link, MO history modal is opened with \nCurrent-Replay tab and it shows all details of SH offer created above\r\n10. patron_inventory_seat table ofÃ¿ Broker\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IR\n    \n    \n    \n    FORWARD_STATUS \n    \n    \n    ACQUIRED\n    \n    \n    \n    MARKET_OFFER_STATUS \n    \n    \n    PENDING_RESALE\n    \n    \n    \n    MARKETPLACES \n    \n    \n    STUBHUB\n    \n\n  \n\n    \n        \n        \n    \n    \n    \n    inventory table ofÃ¿ SH offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IO\n    \n    \n    \n    SUB_AGENCY_CODE \n    \n    \n    STUBHUB\n    \n    \n    \n     \n    \n    \n     \n    \n    \n    \n    inventory_seat table of SH offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODEÃ¿ \n    \n    \n    IO\n    \n    \n    \n    FORWARD_STATUSÃ¿ \n    \n    \n    null\n    \n    \n    \n    MARKET_OFFER_STATUSÃ¿ \n    \n    \n    null\r\n11. Ticket table in PV\n    \n    \n     \n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    CURRENT_SOLD_MARKET_OFFER_ID\n    \n    \n    External offer ID of SH offer\n    \n    \n    \n     \n    \n    \n     \n    \n    \n    \n    Market_offer  table in PV for SH offer\n    \n    \n     \n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    MARKET_OFFER_ID\n    \n    \n    Market offer ID of SH offer\n    \n    \n    \n    EXTERNAL_OFFER_ID\n    \n    \n    PVO inventory ID(External offer ID) of SH \n    offer\n    \n    \n    \n    EXTERNAL_AUCTION_ID\n    \n    \n    Agency listing ID received from PVO\n    \n    \n    \n    MARKER_OFFER_TYPE_CODE\n    \n    \n    RS\n    \n    \n    \n    MAREKT_OFFER_STATUS_CODE\n    \n    \n    O\n    \n    \n    \n    SELLER_PATRON_ACCOUNT_ID\n    \n    \n    SH seller ID\n    \n    \n    \n    BUYER_PATRON_ACCOUNT_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKETPLACE_TYPE_CODE\n    \n    \n    SH\r\n12. No Email is received by SH seller as the offer is created\r\n13. Dual posting should be completed successfully.\r\n14. PersistInventory call is made to PV with all \ntransaction details\r\n15. Ticket s tatus- Pending Resale-Replay&Stubhub\r\n16. The following are passed from PV for the ticket put for resale\n  \n\nVALID  \n PENDING_RESALE \n REPLAY,STUBHUB\r\n17. The offer created via Replay  is displayed in Resale offers tab in history page with status as \nOpen\n\nThe SH offer created is not displayed in SH History tab\r\n18. The offer type is shown as \"Resale\". If click on the Resale link, MO history modal is opened \nwith Current-Replay tabs and Current-Stubhub.Both tabs show all details of offers created \nabove\r\n19. patron_inventory_seat table ofÃ¿ Broker\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IR\n    \n    \n    \n    FORWARD_STATUS \n    \n    \n    ACQUIRED\n    \n    \n    \n    MARKET_OFFER_STATUS \n    \n    \n    PENDING_RESALE\n    \n    \n    \n    MARKETPLACES \n    \n    \n    REPLAY,STUBHUB\n    \n\n  \n\n    \n        \n        \n    \n    \n    \n    inventory table ofÃ¿ Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IO\n    \n    \n    \n    SUB_AGENCY_CODE \n    \n    \n    NGSM_MLB_RESALE\n    \n\n\n    \n        \n        \n    \n    \n    \n    inventory_seat table ofÃ¿ Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODEÃ¿ \n    \n    \n    IO\n    \n    \n    \n    FORWARD_STATUSÃ¿ \n    \n    \n    ACQUIRED\n    \n    \n    \n    MARKET_OFFER_STATUSÃ¿ \n    \n    \n    VALID\n    \n\n\n    \n        \n        \n    \n    \n    \n    inventory table ofÃ¿ SH offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IO\n    \n    \n    \n    SUB_AGENCY_CODE \n    \n    \n    STUBHUB\n    \n\n\n    \n        \n        \n    \n    \n    \n    inventory_seat table of SH offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODEÃ¿ \n    \n    \n    IO\n    \n    \n    \n    FORWARD_STATUSÃ¿ \n    \n    \n    null\n    \n    \n    \n    MARKET_OFFER_STATUSÃ¿ \n    \n    \n    null\r\n20. Ticket table in PV\n    \n    \n     \n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    CURRENT_SOLD_MARKET_OFFER_ID\n    \n    \n    External offer ID of SH offer\n    \n    \n    \n     \n    \n    \n     \n    \n    \n    \n    Market_offer  table in PV for Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    MARKET_OFFER_ID\n    \n    \n    Market offer ID of replay 2.0 offer\n    \n    \n    \n    EXTERNAL_OFFER_ID\n    \n    \n    PVO inventory ID(External offer ID) of replay 2.0 \n    offer\n    \n    \n    \n    EXTERNAL_AUCTION_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKER_OFFER_TYPE_CODE\n    \n    \n    RS\n    \n    \n    \n    MAREKT_OFFER_STATUS_CODE\n    \n    \n    O\n    \n    \n    \n    SELLER_PATRON_ACCOUNT_ID\n    \n    \n    Broker patron ID\n    \n    \n    \n    BUYER_PATRON_ACCOUNT_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKETPLACE_TYPE_CODE\n    \n    \n    RP\n    \n    \n    \n     \n    \n    \n     \n    \n    \n    \n    Market_offer  table in PV for SH offer\n    \n    \n     \n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    MARKET_OFFER_ID\n    \n    \n    Market offer ID of SH offer\n    \n    \n    \n    EXTERNAL_OFFER_ID\n    \n    \n    PVO inventory ID(External offer ID) of SH offer\n    \n    \n    \n    EXTERNAL_AUCTION_ID\n    \n    \n    Agency listing ID received from PVO\n    \n    \n    \n    MARKER_OFFER_TYPE_CODE\n    \n    \n    RS\n    \n    \n    \n    MAREKT_OFFER_STATUS_CODE\n    \n    \n    O\n    \n    \n    \n    SELLER_PATRON_ACCOUNT_ID\n    \n    \n    SH seller ID\n    \n    \n    \n    BUYER_PATRON_ACCOUNT_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKETPLACE_TYPE_CODE\n    \n    \n    SH\r\n21. Email is received by the broker once the Replay offer is created\r\n22. Should be able to purchase the offer\r\n23. PVO makes LockInventory call and MarketPayment call to PV with all transaction details\r\n24. Ticket  status is -Sold-Replay\r\n25. The following are passed from PV for the ticket put for resale\n  \n\nINVALID  \n TICKET_RESOLD \n\n    3.      REPLAY\r\n26. The offer created via Replay  is displayed in Resale offers tab in history page with status as \nSold\n \nThe SH offer created is not displayed in SH History tab\r\n27. The offer type is shown as \"Resale\" with a tic mark. If click on the Resale link, MO history \nmodal is opened with Current-Replay tabs and Current-Stubhub.Both tabs show all details \nof offers created above.\n\nThe Replay offer is marked as completed and SH offer is still in open status\r\n28. patron_inventory_seat table ofÃ¿ Broker\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IS\n    \n    \n    \n    FORWARD_STATUS \n    \n    \n    null\n    \n    \n    \n    MARKET_OFFER_STATUS \n    \n    \n    TICKET_RESOLD\n    \n    \n    \n    MARKETPLACES \n    \n    \n    REPLAY\n    \n    \n    \n    patron_inventory_seat table of Buyer patron\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IW\n    \n    \n    \n    FORWARD_STATUS \n    \n    \n    NULL\n    \n    \n    \n    MARKET_OFFER_STATUS \n    \n    \n    VALID\n    \n    \n    \n    MARKETPLACES \n    \n    \n    NULL\n    \n    \n    \n    inventory table ofÃ¿ Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IS\n    \n    \n    \n    SUB_AGENCY_CODE \n    \n    \n    NGSM_MLB_RESALE\n    \n    \n    \n    inventory_seat table ofÃ¿ Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODEÃ¿ \n    \n    \n    IS\n    \n    \n    \n    FORWARD_STATUSÃ¿ \n    \n    \n    ACQUIRED\n    \n    \n    \n    MARKET_OFFER_STATUSÃ¿ \n    \n    \n    VALID\n    \n    \n    \n    inventory table ofÃ¿ SH offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODE \n    \n    \n    IO\n    \n    \n    \n    SUB_AGENCY_CODE \n    \n    \n    STUBHUB\n    \n    \n    \n    inventory_seat table of SH offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    STATUS_CODEÃ¿ \n    \n    \n    IO\n    \n    \n    \n    FORWARD_STATUSÃ¿ \n    \n    \n    null\n    \n    \n    \n    MARKET_OFFER_STATUSÃ¿ \n    \n    \n    null\r\n29. Ticket table in PV\n    \n    \n     \n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    CURRENT_SOLD_MARKET_OFFER_ID\n    \n    \n    External offer ID of Replay  offer\n    \n    \n    \n    Market_offer  table in PV for Replay 2.0 offer\n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    MARKET_OFFER_ID\n    \n    \n    Market offer ID of replay 2.0 offer\n    \n    \n    \n    EXTERNAL_OFFER_ID\n    \n    \n    PVO inventory ID(External offer ID) of replay 2.0 \n    offer\n    \n    \n    \n    EXTERNAL_AUCTION_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKER_OFFER_TYPE_CODE\n    \n    \n    RS\n    \n    \n    \n    MAREKT_OFFER_STATUS_CODE\n    \n    \n    M\n    \n    \n    \n    SELLER_PATRON_ACCOUNT_ID\n    \n    \n    Broker patron ID\n    \n    \n    \n    BUYER_PATRON_ACCOUNT_ID\n    \n    \n    Buyer patron ID\n    \n    \n    \n    MARKETPLACE_TYPE_CODE\n    \n    \n    RP\n    \n    \n    \n    Market_offer  table in PV for SH offer\n    \n    \n     \n    \n    \n    \n    Field\n    \n    \n    value\n    \n    \n    \n    MARKET_OFFER_ID\n    \n    \n    Market offer ID of SH offer\n    \n    \n    \n    EXTERNAL_OFFER_ID\n    \n    \n    PVO inventory ID(External offer ID) of SH offer\n    \n    \n    \n    EXTERNAL_AUCTION_ID\n    \n    \n    Agency listing ID received from PVO\n    \n    \n    \n    MARKER_OFFER_TYPE_CODE\n    \n    \n    RS\n    \n    \n    \n    MAREKT_OFFER_STATUS_CODE\n    \n    \n    O\n    \n    \n    \n    SELLER_PATRON_ACCOUNT_ID\n    \n    \n    SH seller ID\n    \n    \n    \n    BUYER_PATRON_ACCOUNT_ID\n    \n    \n    NULL\n    \n    \n    \n    MARKETPLACE_TYPE_CODE\n    \n    \n    SH\r\n30. Email is received by the Replay seller and buyer once the offer is purchased"
      }
    ],
    "custom_jiras": "64"
  },
  {
    "id": 30692710,
    "title": "Verify history tabs for both Replay 2.0 and secondary market place are displayed if SHIE=true and REPLAY2E=true",
    "section_id": 1684983,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-Project-7",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C152189",
    "custom_pvo_pvodc_category": 19,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1.replay.enable.postings.on.multiple.marketplaces should \nbe true in PV\n2.Set the textcodes SHIE=true and REPLAY2E=true\n3.A Mytickets patron with Broker trait should be available\r\nExpected Result:\r\nPre requisites should be met\r\n2. Log in to Mytixx account of broker patron\r\nExpected Result:\r\nUser should be able to launch and login to \nMyTickets application with Broker account\r\n3. Verify history tabs for both Replay 2.0 and secondary \nmarket place are displayed\r\nExpected Result:\r\nHistory tabs for both Replay 2.0 and \nsecondary market place tabs should be \ndisplayed\n \n \nNote :  Replay offers created and Replay \noffers purchased will be listed in Replay \nOffers tab\n\n  Secondary market place offers created and \nSecondary market place Offers purchased \nwill be listed in the Secondary market place \noffers  tab ( no Indy offers will display in the \noffers created section)",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.replay.enable.postings.on.multiple.marketplaces should \nbe true in PV\n2.Set the textcodes SHIE=true and REPLAY2E=true\n3.A Mytickets patron with Broker trait should be available\r\n2. Log in to Mytixx account of broker patron\r\n3. Verify history tabs for both Replay 2.0 and secondary \nmarket place are displayed",
        "expected": "1. Pre requisites should be met\r\n2. User should be able to launch and login to \nMyTickets application with Broker account\r\n3. History tabs for both Replay 2.0 and \nsecondary market place tabs should be \ndisplayed\n \n \nNote :  Replay offers created and Replay \noffers purchased will be listed in Replay \nOffers tab\n\n  Secondary market place offers created and \nSecondary market place Offers purchased \nwill be listed in the Secondary market place \noffers  tab ( no Indy offers will display in the \noffers created section)"
      }
    ],
    "custom_jiras": "64"
  },
  {
    "id": 30692711,
    "title": "Verify email received by seller when Replay offer is about to be expired in Dual posting context",
    "section_id": 1684983,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-Project 7",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C152190",
    "custom_pvo_pvodc_category": 19,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Steps:\n\n1.Purchase seats for a Mytickets patron\r\nExpected Result:\r\nTicket purchase completed successfully.\r\n2. 2.Acquire the seats by a Broker patron\r\nExpected Result:\r\nTickets acquired successfully.\r\n3. 3.Post the ticket to Resale via MTD Replay 2.0 with offer status as offsale\r\nExpected Result:\r\nTicekts posted successfully.\r\n4. 4.Verify ticket status in Inventory page\r\nExpected Result:\r\nStatus is pending resale- Replay.\r\n5. 5.Verify the offer in Replay history tab\r\nExpected Result:\r\nOffer is shown there.\r\n6. 6.Verify PV transaction details\r\n7. 7.Post the same ticket to Resale via 2nd market place.\r\nExpected Result:\r\nOffer created successfully.\r\n8. 8.Verify ticket status in Inventory page\r\nExpected Result:\r\nTicket is shown as Pending resale-Replay\r\n9. 9.Verify the offer in Replay history tab\r\nExpected Result:\r\nOffer is shown as onsale in Replay tabn.\r\n10. 10.Verify PV transaction details\r\n11. 11.Do not purchase the offer\r\n12. 12.Wait for the time set in ENIWXEHB is reached\r\nExpected Result:\r\nENIWXEHB is reached\r\n13. 13.Verify the seller received about to expire email for Replay 2.0 offer and not for 2nd market place offer\r\nExpected Result:\r\nSeller received about to expire email for Replay \n2.0 offer and not for 2nd market place offer\r\n14. Verify the following in PV:\n\n1) API responses\n2) Ticket services: order/ transaction/ delivery\n3) Seat View\n4) Seat History\n5) Market Offer history\n6) BO Sales Map- seat History\n7) MO modal\n8) Barcode Lookup",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Steps:\n\n1.Purchase seats for a Mytickets patron\r\n2. 2.Acquire the seats by a Broker patron\r\n3. 3.Post the ticket to Resale via MTD Replay 2.0 with offer status as offsale\r\n4. 4.Verify ticket status in Inventory page\r\n5. 5.Verify the offer in Replay history tab\r\n6. 6.Verify PV transaction details\r\n7. 7.Post the same ticket to Resale via 2nd market place.\r\n8. 8.Verify ticket status in Inventory page\r\n9. 9.Verify the offer in Replay history tab\r\n10. 10.Verify PV transaction details\r\n11. 11.Do not purchase the offer\r\n12. 12.Wait for the time set in ENIWXEHB is reached\r\n13. 13.Verify the seller received about to expire email for Replay 2.0 offer and not for 2nd market place offer\r\n14. Verify the following in PV:\n\n1) API responses\n2) Ticket services: order/ transaction/ delivery\n3) Seat View\n4) Seat History\n5) Market Offer history\n6) BO Sales Map- seat History\n7) MO modal\n8) Barcode Lookup",
        "expected": "1. Ticket purchase completed successfully.\r\n2. Tickets acquired successfully.\r\n3. Ticekts posted successfully.\r\n4. Status is pending resale- Replay.\r\n5. Offer is shown there.\r\n6. \r\n7. Offer created successfully.\r\n8. Ticket is shown as Pending resale-Replay\r\n9. Offer is shown as onsale in Replay tabn.\r\n10. \r\n11. \r\n12. ENIWXEHB is reached\r\n13. Seller received about to expire email for Replay \n2.0 offer and not for 2nd market place offer\r\n14."
      }
    ],
    "custom_jiras": "64"
  },
  {
    "id": 30692712,
    "title": "Verify email received by seller when Replay offer is expired in Dual posting context",
    "section_id": 1684983,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-Project 7",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_refs": "C152191",
    "custom_pvo_pvodc_category": 19,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1.replay.enable.postings.on.multiple.marketplaces should be true in PV\n2.Set the textcodes SHIE=true and REPLAY2E=true\n3.A Mytickets patron with Broker trait should be available\n4.A replay enabled event should be available with Replay expiry is set as \"At event\" in PV\r\n2. Steps:\n\n1.Purchase seats for a Mytickets patron\r\nExpected Result:\r\nTicket purchase completed successfully.\r\n3. 2.Acquire the seats by a Broker patron\r\nExpected Result:\r\nTickets acquired successfully.\r\n4. 3.Post the ticket to Resale via MTD Replay 2.0 with offer status as offsale\r\nExpected Result:\r\nTicekts posted successfully.\r\n5. 4.Verify ticket status in Inventory page\r\nExpected Result:\r\nStatus is pending resale- Replay.\r\n6. 5.Verify the offer in Replay history tab\r\nExpected Result:\r\nOffer is shown there.\r\n7. 6.Verify PV transaction details\r\n8. 7.Post the same ticket to Resale via 2nd market place.\r\nExpected Result:\r\nOffer created successfully.\r\n9. 8.Verify ticket status in Inventory page\r\nExpected Result:\r\nTicket is shown as Pending resale-Replay\r\n10. 9.Verify the offer in Replay history tab\r\nExpected Result:\r\nOffer is shown as onsale in Replay tabn.\r\n11. 10.Verify PV transaction details\r\n12. 11.Do not purchase the offer\r\n13. 12.Wait for the event to expire\r\nExpected Result:\r\nEvent expired.\r\n14. 13.Verify Replay and 2nd market place history tabs and ensure that the offers are shown as expired\r\nExpected Result:\r\nOffer shown as expired.\r\n15. 14.Verify ticket status in Inventory page\r\nExpected Result:\r\nTicket is inactive\r\n16. 15.Verify the offers in PV\r\n17. 16.Verify the seller received offer expired notification email for Replay 2.0 not for 2nd market place offer\r\n18. Verify the following in PV:\n\n1) API responses\n2) Ticket services: order/ transaction/ delivery\n3) Seat View\n4) Seat History\n5) Market Offer history\n6) BO Sales Map- seat History\n7) MO modal\n8) Barcode Lookup",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.replay.enable.postings.on.multiple.marketplaces should be true in PV\n2.Set the textcodes SHIE=true and REPLAY2E=true\n3.A Mytickets patron with Broker trait should be available\n4.A replay enabled event should be available with Replay expiry is set as \"At event\" in PV\r\n2. Steps:\n\n1.Purchase seats for a Mytickets patron\r\n3. 2.Acquire the seats by a Broker patron\r\n4. 3.Post the ticket to Resale via MTD Replay 2.0 with offer status as offsale\r\n5. 4.Verify ticket status in Inventory page\r\n6. 5.Verify the offer in Replay history tab\r\n7. 6.Verify PV transaction details\r\n8. 7.Post the same ticket to Resale via 2nd market place.\r\n9. 8.Verify ticket status in Inventory page\r\n10. 9.Verify the offer in Replay history tab\r\n11. 10.Verify PV transaction details\r\n12. 11.Do not purchase the offer\r\n13. 12.Wait for the event to expire\r\n14. 13.Verify Replay and 2nd market place history tabs and ensure that the offers are shown as expired\r\n15. 14.Verify ticket status in Inventory page\r\n16. 15.Verify the offers in PV\r\n17. 16.Verify the seller received offer expired notification email for Replay 2.0 not for 2nd market place offer\r\n18. Verify the following in PV:\n\n1) API responses\n2) Ticket services: order/ transaction/ delivery\n3) Seat View\n4) Seat History\n5) Market Offer history\n6) BO Sales Map- seat History\n7) MO modal\n8) Barcode Lookup",
        "expected": "1. \r\n2. Ticket purchase completed successfully.\r\n3. Tickets acquired successfully.\r\n4. Ticekts posted successfully.\r\n5. Status is pending resale- Replay.\r\n6. Offer is shown there.\r\n7. \r\n8. Offer created successfully.\r\n9. Ticket is shown as Pending resale-Replay\r\n10. Offer is shown as onsale in Replay tabn.\r\n11. \r\n12. \r\n13. Event expired.\r\n14. Offer shown as expired.\r\n15. Ticket is inactive\r\n16. \r\n17. \r\n18."
      }
    ],
    "custom_jiras": "64"
  },
  {
    "id": 30692713,
    "title": "Verify email received by seller when Replay offer is edited in Dual posting context",
    "section_id": 1684983,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-Project 7",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_refs": "C152192",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Steps:\r\n\r\n1.Purchase seats for a Mytickets patron\r\nExpected Result:\r\nTicket purchase completed successfully.\r\n2. 2.Acquire the seats by a Broker patron\r\nExpected Result:\r\nTickets acquired successfully.\r\n3. 3.Post the ticket to Resale via MTD Replay 2.0 with offer status as offsale\r\nExpected Result:\r\nTicekts posted successfully.\r\n4. 4.Verify ticket status in Inventory page\r\nExpected Result:\r\nStatus is pending resale- Replay.\r\n5. 5.Verify the offer in Replay history tab\r\nExpected Result:\r\nOffer is shown there.\r\n6. 6.Verify PV transaction details\r\n7. 7.Post the same ticket to Resale via 2nd market place.\r\nExpected Result:\r\nOffer created successfully.\r\n8. 8.Verify ticket status in Inventory page\r\nExpected Result:\r\nTicket is shown as Pending resale-Replay\r\n9. 9.Verify the offer in Replay history tab\r\nExpected Result:\r\nOffer is shown as onsale in Replay tabn.\r\n10. 10.Verify PV transaction details\r\n11. 11.Edit the Replay 2.0 offer via MTD history page\r\nExpected Result:\r\nOffer is edited successfully\r\n12. 15.Verify the seller received email upon editing the Replay 2.0 offer\r\nExpected Result:\r\nSeller received email upon editing the Replay 2.0 \r\noffer\r\n13. Verify the following in PV:\r\n\r\n1) API responses\r\n2) Ticket services: order/ transaction/ delivery\r\n3) Seat View\r\n4) Seat History\r\n5) Market Offer history\r\n6) BO Sales Map- seat History\r\n7) MO modal\r\n8) Barcode Lookup",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Steps:\r\n\r\n1.Purchase seats for a Mytickets patron\r\n2. 2.Acquire the seats by a Broker patron\r\n3. 3.Post the ticket to Resale via MTD Replay 2.0 with offer status as offsale\r\n4. 4.Verify ticket status in Inventory page\r\n5. 5.Verify the offer in Replay history tab\r\n6. 6.Verify PV transaction details\r\n7. 7.Post the same ticket to Resale via 2nd market place.\r\n8. 8.Verify ticket status in Inventory page\r\n9. 9.Verify the offer in Replay history tab\r\n10. 10.Verify PV transaction details\r\n11. 11.Edit the Replay 2.0 offer via MTD history page\r\n12. 15.Verify the seller received email upon editing the Replay 2.0 offer\r\n13. Verify the following in PV:\r\n\r\n1) API responses\r\n2) Ticket services: order/ transaction/ delivery\r\n3) Seat View\r\n4) Seat History\r\n5) Market Offer history\r\n6) BO Sales Map- seat History\r\n7) MO modal\r\n8) Barcode Lookup",
        "expected": "1. Ticket purchase completed successfully.\r\n2. Tickets acquired successfully.\r\n3. Ticekts posted successfully.\r\n4. Status is pending resale- Replay.\r\n5. Offer is shown there.\r\n6. \r\n7. Offer created successfully.\r\n8. Ticket is shown as Pending resale-Replay\r\n9. Offer is shown as onsale in Replay tabn.\r\n10. \r\n11. Offer is edited successfully\r\n12. Seller received email upon editing the Replay 2.0 \r\noffer\r\n13."
      }
    ],
    "custom_jiras": "64"
  },
  {
    "id": 30692714,
    "title": "Verify email received by seller when Replay offer is cancelled in Dual posting context",
    "section_id": 1684983,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-Project 7",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 9,
    "custom_is_automated": false,
    "custom_refs": "C152193",
    "custom_pvo_pvodc_category": 19,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1.replay.enable.postings.on.multiple.marketplaces \nshould be true in PV\n2.Set the textcodes SHIE=true and \nREPLAY2E=true\n3.A Mytickets patron with Broker trait should be \navailable\r\nExpected Result:\r\nPre-requisits are met.\r\n2. Steps:\n\n1.Purchase seats for a Mytickets patron\r\nExpected Result:\r\nTicket purchase completed successfully.\r\n3. 2.Acquire the seats by a Broker patron\r\nExpected Result:\r\nTickets acquired successfully.\r\n4. 3.Post the ticket to Resale via MTD Replay 2.0 with offer status as offsale\r\nExpected Result:\r\nTicekts posted successfully.\r\n5. 4.Verify ticket status in Inventory page\r\nExpected Result:\r\nStatus is pending resale- Replay.\r\n6. 5.Verify the offer in Replay history tab\r\nExpected Result:\r\nOffer is shown there.\r\n7. 6.Verify PV transaction details\r\n8. 7.Post the same ticket to Resale via 2nd market place.\r\nExpected Result:\r\nOffer created successfully.\r\n9. 8.Verify ticket status in Inventory page\r\nExpected Result:\r\nTicket is shown as Pending resale-Replay\r\n10. 9.Verify the offer in Replay history tab\r\nExpected Result:\r\nOffer is shown as onsale in Replay tabn.\r\n11. 10.Verify PV transaction details\r\n12. 11.Cancel the Replay 2.0 offer via MTD\r\nExpected Result:\r\nOffer cancalled successfully.\r\n13. 12.Verify ticket status in Inventory page\r\nExpected Result:\r\nTicket is shown as Active.\r\n14. 13.Verify the offer in Replay and  2nd market place history tab\r\nExpected Result:\r\nOffer is shown as cancalled.\r\n15. 14.Verify PV transaction details\r\n16. 15.Verify the seller received email upon cancelling the Replay 2.0 offer\r\n17. Verify the following in PV:\n\n1) API responses\n2) Ticket services: order/ transaction/ delivery\n3) Seat View\n4) Seat History\n5) Market Offer history\n6) BO Sales Map- seat History\n7) MO modal\n8) Barcode Lookup",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.replay.enable.postings.on.multiple.marketplaces \nshould be true in PV\n2.Set the textcodes SHIE=true and \nREPLAY2E=true\n3.A Mytickets patron with Broker trait should be \navailable\r\n2. Steps:\n\n1.Purchase seats for a Mytickets patron\r\n3. 2.Acquire the seats by a Broker patron\r\n4. 3.Post the ticket to Resale via MTD Replay 2.0 with offer status as offsale\r\n5. 4.Verify ticket status in Inventory page\r\n6. 5.Verify the offer in Replay history tab\r\n7. 6.Verify PV transaction details\r\n8. 7.Post the same ticket to Resale via 2nd market place.\r\n9. 8.Verify ticket status in Inventory page\r\n10. 9.Verify the offer in Replay history tab\r\n11. 10.Verify PV transaction details\r\n12. 11.Cancel the Replay 2.0 offer via MTD\r\n13. 12.Verify ticket status in Inventory page\r\n14. 13.Verify the offer in Replay and  2nd market place history tab\r\n15. 14.Verify PV transaction details\r\n16. 15.Verify the seller received email upon cancelling the Replay 2.0 offer\r\n17. Verify the following in PV:\n\n1) API responses\n2) Ticket services: order/ transaction/ delivery\n3) Seat View\n4) Seat History\n5) Market Offer history\n6) BO Sales Map- seat History\n7) MO modal\n8) Barcode Lookup",
        "expected": "1. Pre-requisits are met.\r\n2. Ticket purchase completed successfully.\r\n3. Tickets acquired successfully.\r\n4. Ticekts posted successfully.\r\n5. Status is pending resale- Replay.\r\n6. Offer is shown there.\r\n7. \r\n8. Offer created successfully.\r\n9. Ticket is shown as Pending resale-Replay\r\n10. Offer is shown as onsale in Replay tabn.\r\n11. \r\n12. Offer cancalled successfully.\r\n13. Ticket is shown as Active.\r\n14. Offer is shown as cancalled.\r\n15. \r\n16. \r\n17."
      }
    ],
    "custom_jiras": "64"
  },
  {
    "id": 30692715,
    "title": "Verify completing a dual posting and purchase of parking tickets with overlapping  by a broker patron",
    "section_id": 1684983,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-Project 7",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 10,
    "custom_is_automated": false,
    "custom_refs": "C152194",
    "custom_pvo_pvodc_category": 19,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre-requisite:\n1.replay.enable.postings.on.multiple.marketplaces \nshould be true in PV\n2.Set the textcodes SHIE=true and \nREPLAY2E=true\n3.A Mytickets patron with Broker trait should be \navailable\n4.Acquire some parking tickets by a Broker \npatron mentioned in step 3. (Say Tickets \n2,3,4,6,8,9)\r\nExpected Result:\r\nPre-requisite should be met\r\n2. Launch MyTickets and login as broker patron.\r\nExpected Result:\r\nShould be able to login.\r\n3. Post some of the the acquired parking tickets to \nResale via MTD Replay 2.0 (Say Tickets 2,3,4,6)\r\nExpected Result:\r\nShould be able to create offer.\r\n4. Verify ticket status in Inventory page\nVerify the offer in Replay history tab\nVerify PV transaction details\r\nExpected Result:\r\nTicket status- Pending Resale--Replay\nOffer should be in Replay History tab.\r\n5. Post some of the parking tickets(must have \nseats common in both offers) to Resale via \n INDY (Say Tickets \n6,8,9)\n(Seat 6 is in both offers)\r\nExpected Result:\r\nShould be able to create offer successfully\r\n6. Verify ticket status in Inventory page\nVerify the offer in Replay history tab\nVerify PV transaction details.\r\nExpected Result:\r\nStatus should be updated correctly\r\n7. Purchase the offer via Replay 2.0 B2C site\r\nExpected Result:\r\nShould be able to purchase the offer\r\n8. Verify ticket status in Inventory page\nVerify the offer in Replay and  2nd market place history tab\nVerify PV transaction details\n.Verify the following in PV :\n 1) Ticket services: order/ transaction/ delivery\n2) Seat View\n3) Seat History\n4) Market Offer history\n5) BO Sales Map- seat History\n6) MO modal\n7) Barcode Lookup\r\nExpected Result:\r\nStatus should be updated correctly\nInventory : Sold\nReplay History : Sold\n2nd marketplace history : Onsale",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-requisite:\n1.replay.enable.postings.on.multiple.marketplaces \nshould be true in PV\n2.Set the textcodes SHIE=true and \nREPLAY2E=true\n3.A Mytickets patron with Broker trait should be \navailable\n4.Acquire some parking tickets by a Broker \npatron mentioned in step 3. (Say Tickets \n2,3,4,6,8,9)\r\n2. Launch MyTickets and login as broker patron.\r\n3. Post some of the the acquired parking tickets to \nResale via MTD Replay 2.0 (Say Tickets 2,3,4,6)\r\n4. Verify ticket status in Inventory page\nVerify the offer in Replay history tab\nVerify PV transaction details\r\n5. Post some of the parking tickets(must have \nseats common in both offers) to Resale via \n INDY (Say Tickets \n6,8,9)\n(Seat 6 is in both offers)\r\n6. Verify ticket status in Inventory page\nVerify the offer in Replay history tab\nVerify PV transaction details.\r\n7. Purchase the offer via Replay 2.0 B2C site\r\n8. Verify ticket status in Inventory page\nVerify the offer in Replay and  2nd market place history tab\nVerify PV transaction details\n.Verify the following in PV :\n 1) Ticket services: order/ transaction/ delivery\n2) Seat View\n3) Seat History\n4) Market Offer history\n5) BO Sales Map- seat History\n6) MO modal\n7) Barcode Lookup",
        "expected": "1. Pre-requisite should be met\r\n2. Should be able to login.\r\n3. Should be able to create offer.\r\n4. Ticket status- Pending Resale--Replay\nOffer should be in Replay History tab.\r\n5. Should be able to create offer successfully\r\n6. Status should be updated correctly\r\n7. Should be able to purchase the offer\r\n8. Status should be updated correctly\nInventory : Sold\nReplay History : Sold\n2nd marketplace history : Onsale"
      }
    ],
    "custom_jiras": "64"
  },
  {
    "id": 30692716,
    "title": "Verify Sell in multiples of 3 split logic is working in Dual posting context with overlapping",
    "section_id": 1684983,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-Project7",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 11,
    "custom_is_automated": false,
    "custom_refs": "C152195",
    "custom_pvo_pvodc_category": 19,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1.replay.enable.postings.on.multiple.marketplaces should be true \nin PV\n2.Set the textcodes SHIE=true and REPLAY2E=true\n3.A Mytickets patron with Broker trait should be available\r\nExpected Result:\r\nPrerequisite should be set\r\n2. Purchase seats for a Mytickets patron for the event mentioned in \nprerequisite\r\nExpected Result:\r\nTickets should be purchased successfully for \nthe mytickets patron\r\n3. Acquire the seats by a Broker patron\r\nExpected Result:\r\nTickets shoudl be acquirred by broker patron\r\n4. Post the tickets to Resale via MTD Replay 2.0 with split logic as \n\"Sell in Multiples of 3\"\r\nExpected Result:\r\nTickets should be posted for resale \nsuccessfully.\r\n5. Verify ticket status in Inventory page\r\nExpected Result:\r\nIn inventory page, ticket status shoudl be \ndisdaplyed as \"Pending\"\r\n6. Verify the offer in Replay history tab\r\nExpected Result:\r\nTickets posted for resale sshoudl be listed in \nhistory tab\r\n7. Verify PV transaction details\r\nExpected Result:\r\nThe ticket deatils shoudl be updated as resale \nin pv application too.\r\n8. Post the seats 5,6,7 to Resale via 2nd market place\r\nExpected Result:\r\nThe same tickets should be posted for resale \nvia 2nd market place\r\n9. Verify ticket status in Inventory page\r\nExpected Result:\r\nTicket status shoudl be updated as \"Penidng \nresale -- replay and 2ndmarket place\"\r\n10. Verify the offer in Replay history tab\r\nExpected Result:\r\nA seprate tab will be displayed with \n2ndmarket place offers\r\n11. Verify PV transaction details\r\nExpected Result:\r\nA seprate tab will be displayed with 2ndmarket \nplace offers in PV with details of the PV tickets\r\n12. Go 2nd market place and purchase the offer with seats 5,6,7\r\nExpected Result:\r\nOffer should be split successfully\r\n13. Verify ticket status in Inventory page\r\nExpected Result:\r\nStatus should be updated correctly\r\n14. Verify the offer in Replay and  2nd market place history tab\r\nExpected Result:\r\nStatus should be updated correctly\r\n15. Verify PV transaction details\r\nExpected Result:\r\nStatus should be updated correctly\r\n16. Go to b2c site and search for the offer with No. of tixx as ALL,3 \nand 6- The offer should not be displayed for purchase\r\nExpected Result:\r\nOffeer should not be avialable\r\n17. Verify the following in PV:\n \n1) API responses\n2) Ticket services: order/ transaction/ delivery\n3) Seat View\n4) Seat History\n5) Market Offer history\n6) BO Sales Map- seat History\n7) MO modal\n8) Barcode Lookup\r\nExpected Result:\r\nStatus should be updated correctly",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.replay.enable.postings.on.multiple.marketplaces should be true \nin PV\n2.Set the textcodes SHIE=true and REPLAY2E=true\n3.A Mytickets patron with Broker trait should be available\r\n2. Purchase seats for a Mytickets patron for the event mentioned in \nprerequisite\r\n3. Acquire the seats by a Broker patron\r\n4. Post the tickets to Resale via MTD Replay 2.0 with split logic as \n\"Sell in Multiples of 3\"\r\n5. Verify ticket status in Inventory page\r\n6. Verify the offer in Replay history tab\r\n7. Verify PV transaction details\r\n8. Post the seats 5,6,7 to Resale via 2nd market place\r\n9. Verify ticket status in Inventory page\r\n10. Verify the offer in Replay history tab\r\n11. Verify PV transaction details\r\n12. Go 2nd market place and purchase the offer with seats 5,6,7\r\n13. Verify ticket status in Inventory page\r\n14. Verify the offer in Replay and  2nd market place history tab\r\n15. Verify PV transaction details\r\n16. Go to b2c site and search for the offer with No. of tixx as ALL,3 \nand 6- The offer should not be displayed for purchase\r\n17. Verify the following in PV:\n \n1) API responses\n2) Ticket services: order/ transaction/ delivery\n3) Seat View\n4) Seat History\n5) Market Offer history\n6) BO Sales Map- seat History\n7) MO modal\n8) Barcode Lookup",
        "expected": "1. Prerequisite should be set\r\n2. Tickets should be purchased successfully for \nthe mytickets patron\r\n3. Tickets shoudl be acquirred by broker patron\r\n4. Tickets should be posted for resale \nsuccessfully.\r\n5. In inventory page, ticket status shoudl be \ndisdaplyed as \"Pending\"\r\n6. Tickets posted for resale sshoudl be listed in \nhistory tab\r\n7. The ticket deatils shoudl be updated as resale \nin pv application too.\r\n8. The same tickets should be posted for resale \nvia 2nd market place\r\n9. Ticket status shoudl be updated as \"Penidng \nresale -- replay and 2ndmarket place\"\r\n10. A seprate tab will be displayed with \n2ndmarket place offers\r\n11. A seprate tab will be displayed with 2ndmarket \nplace offers in PV with details of the PV tickets\r\n12. Offer should be split successfully\r\n13. Status should be updated correctly\r\n14. Status should be updated correctly\r\n15. Status should be updated correctly\r\n16. Offeer should not be avialable\r\n17. Status should be updated correctly"
      }
    ],
    "custom_jiras": "64"
  },
  {
    "id": 30692717,
    "title": "For Single sales with TNSPay_Back to Shopping cart page from Iframe page_SEC3DE true",
    "section_id": 1684984,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-9920",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C151337",
    "custom_pvo_pvodc_category": 13,
    "custom_pvocodelines": null,
    "custom_preconds": "13914",
    "custom_test_purpose": null,
    "custom_steps": "1. Enable SEC3DE and TNSPay\r\nExpected Result:\r\nThe pre-requisite should be met.\r\n2. Launch the Single tickets GPL site at the following URL \r\nExpected Result:\r\nThe site should be launched successfully\r\n3. Click on the Buy tickets link corresponding to a an event\r\nExpected Result:\r\nThe user should be displayed the different price levels for the event\r\n4. Select a price level and the number of tickets required and click on the continue button\r\nExpected Result:\r\nThe selected seat details should be displayed on the Shopping Cart page.\r\n5. Click on the continue button\r\nExpected Result:\r\nThe Login page should be displayed.\r\n6. 1. Enter the Login details (Login as a new / existing user)\n2. Click on the Continue / Login button\r\nExpected Result:\r\nThe Payment Page should be displayed.\r\n7. Select credit card from Payment page.\n\nOn credit card modal window:\n1. Add Master card with number as: 5424180279791732. Expiration Date as: 1305(YYMM)\n2. Enter the required billing details in under billing/mailing address fields.\n3. Click on Submit button\r\nExpected Result:\r\n1. The user should be able to enter the Credit Card details.\n2. The user should be navigated to Payment page with the Card details added.\r\n8. 1. Enter the CVV for the Card entered above\n2. Select any delivery method\n3. Enter e-mail address.\n4. Enter Mobile Number, Date Of Birth, Terms and Condition,  or any other Required field.\n5. Click on Buy Tickets button.\r\nExpected Result:\r\n1. The user should be able to enter all details.\n2. The user should be navigated to the TNS iFrame page.\r\n9. Click on the BAck button.\r\nExpected Result:\r\nThe user should be navigated back to the payment page.\r\n10. Verify whether the details are prepopulated in the payment page.\r\nExpected Result:\r\nThe user should be able to see the data prepopulated in teh payment page.\r\n11. CLick on back button from payment page\r\nExpected Result:\r\nThe user should be navigated to the shopping cart page.\r\n12. Click on \"Add another event:\" button present in the shopping cart page.\r\nExpected Result:\r\nSystem should navigate us to the Event schedule page.\r\n13. Repeat steps 4 to 9\r\nExpected Result:\r\nThe user shoudl be able to see the iframe page.\r\n14. 1. Verify the details on TNS iFrame page. \n2. Select the Authentication from the drop down and click on the submit button\r\nExpected Result:\r\nThe user should be navigated back to the confirmation page with list of purchased tickes shown.\r\n15. The user should be shown the confirmation page with confirmation number and details shown in the confirmation page should be correct\r\nExpected Result:\r\nThe user should be shown the confirmation page with confirmation number and the patron  details should be shown correctly\r\n16. Launch the DATABASE and verify if the Status of the order is 'TS' in TDC_ORDER table\n\nselect * from pvo.TDC_order where ORDER_ID=XXXXX\r\nExpected Result:\r\nThe Status of the order should be shown as 'TS'\r\n17. Verify if the user receives email that the transaction is completed\r\nExpected Result:\r\nThe user should receive email on the completion of transaction\r\n18. From PVO Maintenance Site, note the order ID.\n1. Expand Order -> Orders.\n2. Enter Confirmation number.\n3. Click Details button.\r\nExpected Result:\r\n1. The user should be directed to the Order details page.\n2. Note the Order ID.\r\n19. Verify the status of transaction_source field in the payment table\nselect * from pvo.PAYMENT where ORDER_ID=XXXXXX.\r\nExpected Result:\r\nThe status of the order should be 'E' (for Authentication Successful).\r\n20. From PVO Maintenance Site, note the reference number for the order.\n1. Expand Operations -> Credit Card response.\n2. Enter Order_id and Click on Go button\r\n21. Verify the value in DISPLAYMESSAGE field in the CARD_RESPONSE_DETAIL table\n\nselect * from pvo.CARD_RESPONSE where REF= xxxxxxxxx\nselect * from pvo.CARD_RESPONSE_DETAIL where REF= xxxxxxxxx\r\nExpected Result:\r\nThe value in TRANSACTIONSTATUS field in the CARD_RESPONSE table should be L\n\nThe value in DISPLAYMESSAGE field in the CARD_RESPONSE_DETAIL table should be APPROVED\r\n22. Login Into TNS site and verify that transaction is  logged\nTNS Site details: \n\nURL                   :  \nMerchant ID  : TESTTICKETSTEST\nOperator ID   : qatestoperator\nPassword       : QAletmein10\r\nExpected Result:\r\nTransaction should not be logged in TNS site\r\n23. Call",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Enable SEC3DE and TNSPay\r\n2. Launch the Single tickets GPL site at the following URL \r\n3. Click on the Buy tickets link corresponding to a an event\r\n4. Select a price level and the number of tickets required and click on the continue button\r\n5. Click on the continue button\r\n6. 1. Enter the Login details (Login as a new / existing user)\n2. Click on the Continue / Login button\r\n7. Select credit card from Payment page.\n\nOn credit card modal window:\n1. Add Master card with number as: 5424180279791732. Expiration Date as: 1305(YYMM)\n2. Enter the required billing details in under billing/mailing address fields.\n3. Click on Submit button\r\n8. 1. Enter the CVV for the Card entered above\n2. Select any delivery method\n3. Enter e-mail address.\n4. Enter Mobile Number, Date Of Birth, Terms and Condition,  or any other Required field.\n5. Click on Buy Tickets button.\r\n9. Click on the BAck button.\r\n10. Verify whether the details are prepopulated in the payment page.\r\n11. CLick on back button from payment page\r\n12. Click on \"Add another event:\" button present in the shopping cart page.\r\n13. Repeat steps 4 to 9\r\n14. 1. Verify the details on TNS iFrame page. \n2. Select the Authentication from the drop down and click on the submit button\r\n15. The user should be shown the confirmation page with confirmation number and details shown in the confirmation page should be correct\r\n16. Launch the DATABASE and verify if the Status of the order is 'TS' in TDC_ORDER table\n\nselect * from pvo.TDC_order where ORDER_ID=XXXXX\r\n17. Verify if the user receives email that the transaction is completed\r\n18. From PVO Maintenance Site, note the order ID.\n1. Expand Order -> Orders.\n2. Enter Confirmation number.\n3. Click Details button.\r\n19. Verify the status of transaction_source field in the payment table\nselect * from pvo.PAYMENT where ORDER_ID=XXXXXX.\r\n20. From PVO Maintenance Site, note the reference number for the order.\n1. Expand Operations -> Credit Card response.\n2. Enter Order_id and Click on Go button\r\n21. Verify the value in DISPLAYMESSAGE field in the CARD_RESPONSE_DETAIL table\n\nselect * from pvo.CARD_RESPONSE where REF= xxxxxxxxx\nselect * from pvo.CARD_RESPONSE_DETAIL where REF= xxxxxxxxx\r\n22. Login Into TNS site and verify that transaction is  logged\nTNS Site details: \n\nURL                   :  \nMerchant ID  : TESTTICKETSTEST\nOperator ID   : qatestoperator\nPassword       : QAletmein10\r\n23. Call",
        "expected": "1. The pre-requisite should be met.\r\n2. The site should be launched successfully\r\n3. The user should be displayed the different price levels for the event\r\n4. The selected seat details should be displayed on the Shopping Cart page.\r\n5. The Login page should be displayed.\r\n6. The Payment Page should be displayed.\r\n7. 1. The user should be able to enter the Credit Card details.\n2. The user should be navigated to Payment page with the Card details added.\r\n8. 1. The user should be able to enter all details.\n2. The user should be navigated to the TNS iFrame page.\r\n9. The user should be navigated back to the payment page.\r\n10. The user should be able to see the data prepopulated in teh payment page.\r\n11. The user should be navigated to the shopping cart page.\r\n12. System should navigate us to the Event schedule page.\r\n13. The user shoudl be able to see the iframe page.\r\n14. The user should be navigated back to the confirmation page with list of purchased tickes shown.\r\n15. The user should be shown the confirmation page with confirmation number and the patron  details should be shown correctly\r\n16. The Status of the order should be shown as 'TS'\r\n17. The user should receive email on the completion of transaction\r\n18. 1. The user should be directed to the Order details page.\n2. Note the Order ID.\r\n19. The status of the order should be 'E' (for Authentication Successful).\r\n20. \r\n21. The value in TRANSACTIONSTATUS field in the CARD_RESPONSE table should be L\n\nThe value in DISPLAYMESSAGE field in the CARD_RESPONSE_DETAIL table should be APPROVED\r\n22. Transaction should not be logged in TNS site\r\n23."
      }
    ],
    "custom_jiras": "54.1"
  },
  {
    "id": 30692718,
    "title": "Verify PVO is sending 3D secure elements in the SellSeats call of Online Exchange transaction when TNSPay 3D secure is enabled and PV is doing the credit card processing",
    "section_id": 1684984,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13963",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C151338",
    "custom_pvo_pvodc_category": 13,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite:\n \n1.Set SEC3DE as true at single sales and mytixx supplier level\n2.Set MPMKEY to correct value at single sales and mytixx supplier levell\n3.Make sure that Credit Card Processed by BOTS field is set as ON for single sales and \nmytixx supplier\n4.Online promotion setup should in place.\r\nExpected Result:\r\nPrerequisite should be met\r\n2. Launch Mytixx link and log in\r\nExpected Result:\r\nPatron is logged in\r\n3. 1.Navigate to Inventory page\n2.Seelct Exchnage action and tickets of source event. \n3.Click Continue button\r\nExpected Result:\r\nTarget event selection page is displayed\r\n4. Click Select event button against any target event\r\nExpected Result:\r\nISM is loaded with Nav map\r\n5. 1.Select section from Nav map\n2.Select seats from seatmap displayed\n3.Navigate to ISM cart\n4.Click Checkout\r\nExpected Result:\r\nPVO Shopping cart is displayed\r\n6. Click Continue button on Shopping cart\r\nExpected Result:\r\nPayment page is displayed\r\n7. Add a card for 3DSecure\r\nExpected Result:\r\nCard is added and displayed on payment page\r\n8. Filll in all required fields on Payment page and click Buy Tickets button\r\nExpected Result:\r\nACS Emulator is displayed\r\n9. Select 'Auth successful' option from the drop down and click submit\r\nExpected Result:\r\nUser is navigated to Confirmation page and transaction is completed\r\n10. Verify sellseats call and confirm that following elements are passed to PV:\n\n\n\n\n\n\n\n\n\r\nExpected Result:\r\nAll the 3Dsecure elements mentioned in Description are passed in SellSeats request\r\n11. Run the query \nselect * from pvo.payment where ORDER_ID=\n\nVerify Payment_code, payment_amount and Transaction_Source fields\r\nExpected Result:\r\nPayment_code is updated to the payment method used\nPayment_amount is updated to the Total transaction amount\nTransaction_source is updated to E\r\n12. Verify PV card_response table\nselect * from card_response where transaction_id=\nVerify THREE_D_SECURE_ID field\r\nExpected Result:\r\nTHREE_D_SECURE_ID field is updated to the value sent in  \nnode in sellseats call",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite:\n \n1.Set SEC3DE as true at single sales and mytixx supplier level\n2.Set MPMKEY to correct value at single sales and mytixx supplier levell\n3.Make sure that Credit Card Processed by BOTS field is set as ON for single sales and \nmytixx supplier\n4.Online promotion setup should in place.\r\n2. Launch Mytixx link and log in\r\n3. 1.Navigate to Inventory page\n2.Seelct Exchnage action and tickets of source event. \n3.Click Continue button\r\n4. Click Select event button against any target event\r\n5. 1.Select section from Nav map\n2.Select seats from seatmap displayed\n3.Navigate to ISM cart\n4.Click Checkout\r\n6. Click Continue button on Shopping cart\r\n7. Add a card for 3DSecure\r\n8. Filll in all required fields on Payment page and click Buy Tickets button\r\n9. Select 'Auth successful' option from the drop down and click submit\r\n10. Verify sellseats call and confirm that following elements are passed to PV:\n\n\n\n\n\n\n\n\n\r\n11. Run the query \nselect * from pvo.payment where ORDER_ID=\n\nVerify Payment_code, payment_amount and Transaction_Source fields\r\n12. Verify PV card_response table\nselect * from card_response where transaction_id=\nVerify THREE_D_SECURE_ID field",
        "expected": "1. Prerequisite should be met\r\n2. Patron is logged in\r\n3. Target event selection page is displayed\r\n4. ISM is loaded with Nav map\r\n5. PVO Shopping cart is displayed\r\n6. Payment page is displayed\r\n7. Card is added and displayed on payment page\r\n8. ACS Emulator is displayed\r\n9. User is navigated to Confirmation page and transaction is completed\r\n10. All the 3Dsecure elements mentioned in Description are passed in SellSeats request\r\n11. Payment_code is updated to the payment method used\nPayment_amount is updated to the Total transaction amount\nTransaction_source is updated to E\r\n12. THREE_D_SECURE_ID field is updated to the value sent in  \nnode in sellseats call"
      }
    ],
    "custom_jiras": "60.1"
  },
  {
    "id": 30692719,
    "title": "Chelsea Renewals_with TNSpay_APPROVED_MASTER CARD_SEC3DE true",
    "section_id": 1684984,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-9920",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C151339",
    "custom_pvo_pvodc_category": 13,
    "custom_pvocodelines": null,
    "custom_preconds": "13914",
    "custom_test_purpose": null,
    "custom_steps": "1. Pre-Condition:\nPerform a receivable/ renewal transaction for the Patron in the back end\r\nExpected Result:\r\nSeason Renewals should be added to the Patron's MyTickets\r\n2. Launch the My tickets site using the following URL \r\nExpected Result:\r\nThe site should be launched successfully\r\n3. Login using the credentials\r\nExpected Result:\r\nThe user should be logged in\r\n4. Select Season Renewals tickets\r\nExpected Result:\r\nThe user will be redirected to the GPL page.\r\n5. Select Payment type as fixed and enter the money. Click on the continue button\r\nExpected Result:\r\nThe user should be directed to the payment page\r\n6. Click on the continue button\r\nExpected Result:\r\nThe user should be prompted to enter the billing details\r\n7. Select the card as MasterCard , Enter the card number: 5424180279791732, Expiration Date as: 1305 (YYMM), CVV code  and click on the buy button\r\nExpected Result:\r\n1. The user should be able to enter the Credit Card details.\n2. The user should be navigated to the TNS iFrame page.\r\n8. 1. Verify the details on TNS iFrame page. \n2. Enter the valid pin number and click on the submit button\r\nExpected Result:\r\nThe user should be navigated back to the Confirmation page of the merchant site.\r\n9. The user should be shown the confirmation page with confirmation number and details shown in the confirmation page should be correct\r\nExpected Result:\r\nThe user should be shown the confirmation page with confirmation number and the patron  details should be shown correctly\r\n10. Launch the DATABASE and verify if the Status of the order is 'TS' in TDC_ORDER table\n\nselect * from pvo.TDC_order where ORDER_ID=XXXXX\r\nExpected Result:\r\nThe Status of the order should be shown as 'TS'\r\n11. Verify if the user receives email that the transaction is completed\r\nExpected Result:\r\nThe user should receive email on the completion of transaction\r\n12. From PVO Maintenance Site, note the order ID.\n1. Expand Order -> Orders.\n2. Enter Confirmation number.\n3. Click Details button.\r\nExpected Result:\r\n1. The user should be directed to the Order details page.\n2. Note the Order ID.\r\n13. Verify the status of transaction_source field in the payment table\nselect * from pvo.PAYMENT where ORDER_ID=XXXXXX.\r\nExpected Result:\r\nThe status of the order should be 'E' (for Authentication Successful).\r\n14. From PVO Maintenance Site, note the reference number for the order.\n1. Expand Operations -> Credit Card response.\n2. Enter Order_id and Click on Go button\r\n15. Verify the value in DISPLAYMESSAGE field in the CARD_RESPONSE_DETAIL table\n\nselect * from pvo.CARD_RESPONSE where REF= XXXXXXXXX\nselect * from pvo.CARD_RESPONSE_DETAIL where REF= XXXXXXXXX\r\nExpected Result:\r\nThe value in DISPLAYMESSAGE field in the CARD_RESPONSE_DETAIL table should be Approved\r\n16. Login Into TNS site and verify that transaction is  logged\nTNS Site details: \n\nURL                   :  \nMerchant ID  : TESTTICKETSTEST\nOperator ID   : qatestoperator\nPassword       : QAletmein10\r\nExpected Result:\r\nTransaction should not be logged in TNS site\r\n17. Call",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-Condition:\nPerform a receivable/ renewal transaction for the Patron in the back end\r\n2. Launch the My tickets site using the following URL \r\n3. Login using the credentials\r\n4. Select Season Renewals tickets\r\n5. Select Payment type as fixed and enter the money. Click on the continue button\r\n6. Click on the continue button\r\n7. Select the card as MasterCard , Enter the card number: 5424180279791732, Expiration Date as: 1305 (YYMM), CVV code  and click on the buy button\r\n8. 1. Verify the details on TNS iFrame page. \n2. Enter the valid pin number and click on the submit button\r\n9. The user should be shown the confirmation page with confirmation number and details shown in the confirmation page should be correct\r\n10. Launch the DATABASE and verify if the Status of the order is 'TS' in TDC_ORDER table\n\nselect * from pvo.TDC_order where ORDER_ID=XXXXX\r\n11. Verify if the user receives email that the transaction is completed\r\n12. From PVO Maintenance Site, note the order ID.\n1. Expand Order -> Orders.\n2. Enter Confirmation number.\n3. Click Details button.\r\n13. Verify the status of transaction_source field in the payment table\nselect * from pvo.PAYMENT where ORDER_ID=XXXXXX.\r\n14. From PVO Maintenance Site, note the reference number for the order.\n1. Expand Operations -> Credit Card response.\n2. Enter Order_id and Click on Go button\r\n15. Verify the value in DISPLAYMESSAGE field in the CARD_RESPONSE_DETAIL table\n\nselect * from pvo.CARD_RESPONSE where REF= XXXXXXXXX\nselect * from pvo.CARD_RESPONSE_DETAIL where REF= XXXXXXXXX\r\n16. Login Into TNS site and verify that transaction is  logged\nTNS Site details: \n\nURL                   :  \nMerchant ID  : TESTTICKETSTEST\nOperator ID   : qatestoperator\nPassword       : QAletmein10\r\n17. Call",
        "expected": "1. Season Renewals should be added to the Patron's MyTickets\r\n2. The site should be launched successfully\r\n3. The user should be logged in\r\n4. The user will be redirected to the GPL page.\r\n5. The user should be directed to the payment page\r\n6. The user should be prompted to enter the billing details\r\n7. 1. The user should be able to enter the Credit Card details.\n2. The user should be navigated to the TNS iFrame page.\r\n8. The user should be navigated back to the Confirmation page of the merchant site.\r\n9. The user should be shown the confirmation page with confirmation number and the patron  details should be shown correctly\r\n10. The Status of the order should be shown as 'TS'\r\n11. The user should receive email on the completion of transaction\r\n12. 1. The user should be directed to the Order details page.\n2. Note the Order ID.\r\n13. The status of the order should be 'E' (for Authentication Successful).\r\n14. \r\n15. The value in DISPLAYMESSAGE field in the CARD_RESPONSE_DETAIL table should be Approved\r\n16. Transaction should not be logged in TNS site\r\n17."
      }
    ],
    "custom_jiras": "54.1"
  },
  {
    "id": 30692720,
    "title": "Chelse membership TNSPay_Cardholder enrolled_EXPIRED_CARD_Visa_SEC3DE true",
    "section_id": 1684984,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-9920",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C151340",
    "custom_pvo_pvodc_category": 13,
    "custom_pvocodelines": null,
    "custom_preconds": "13914",
    "custom_test_purpose": null,
    "custom_steps": "1. Enable SEC3DE and TNSPay\r\nExpected Result:\r\nThe pre-requisite should be met.\r\n2. Launch Chelsea Mytickets\r\nExpected Result:\r\nThe site should be launched successfully\r\n3. Loagin as an inactive member\r\nExpected Result:\r\nThe user should be able to login sucessfully\r\n4. Select a Membership level and click on Buy mebership button\r\nExpected Result:\r\nUser should be naviagted to mebershiop shopping cart page\r\n5. Select credit card from Payment page.\n\nOn credit card modal window:\n1. Add a new Visa 4715059999000437  EXp:2904(YYMM)\nEnter required billing details in under billing/mailing address fields.\n3. Click on Submit button\r\nExpected Result:\r\n1. The user should be able to enter the Credit Card details.\n2. The user should be navigated to Payment page with the Card details added.\r\n6. 1. Enter the CVV for the Card entered above\n2. Select any delivery method\n3. Enter e-mail address.\n4. Enter Mobile Number, Date Of Birth, Terms and Condition,  or any other Required field.\n5. Click on Continue button.\r\nExpected Result:\r\n1. The user should be able to enter all details.\n2. The user should be navigated to the TNS iFrame page.\r\n7. 1. Verify the details on TNS iFrame page. \n2. Select the Authentication result and click on the submit button\r\nExpected Result:\r\nThe user should be navigated back to the Payment page of the merchant site with error message \n'We were unable to authorize your credit card.\nPlease verify your card number and resubmit your request if you believe you have entered your credit card correclty (remember to check that you have the correct type of card selected, that the expiration date is correct and the address matches the billing address of this credit card). Otherwise you should enter a different card and try again.\n\nYou have : to complete your purchase tickets will be released.'.\r\n8. 1. In the 'Payment page' right click and select View Source\n2. Search for 'Order Key' and notedown its value as Order ID\r\nExpected Result:\r\n1. Source code should be displayed\n2. Should be able to find the Order Key\r\n9. Launch the DATABASE and verify if the Status of the order is 'TC' in TDC_ORDER table\n\nselect * from pvo.payment where ORDER_ID=XXXXX\r\nExpected Result:\r\nThe Status of the order should be shown as 'TC'\r\n10. From PVO Maintenance Site, note the reference number for the order.\n1. Expand Operations -> Credit Card response.\n2. Enter Order_id and Click on Go button\r\nExpected Result:\r\nIn the 'Card Response Detail' page 'EXPIRED_CARD'message should be dispayed in the 'Display Message' field\r\n11. Verify the value in DISPLAYMESSAGE field in the CARD_RESPONSE_DETAIL table\n\nselect * from pvo.CARD_RESPONSE where REF= xxxxxxxxx\nselect * from pvo.CARD_RESPONSE_DETAIL where REF= xxxxxxxxx\r\nExpected Result:\r\nThe value in TRANSACTIONSTATUS field in the CARD_RESPONSE table should be F\n\nThe value in DISPLAYMESSAGE field in the CARD_RESPONSE_DETAIL table should be EXPIRED_CARD\r\n12. Login Into TNS site and verify that transaction is not logged\nTNS Site details: \n\nURL                   :  \nMerchant ID  : TESTTICKETSTEST\nOperator ID   : qatestoperator\nPassword       : QAletmein10\r\nExpected Result:\r\nTransaction should not be logged in TNS site as it got expied.\r\n13. Call",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Enable SEC3DE and TNSPay\r\n2. Launch Chelsea Mytickets\r\n3. Loagin as an inactive member\r\n4. Select a Membership level and click on Buy mebership button\r\n5. Select credit card from Payment page.\n\nOn credit card modal window:\n1. Add a new Visa 4715059999000437  EXp:2904(YYMM)\nEnter required billing details in under billing/mailing address fields.\n3. Click on Submit button\r\n6. 1. Enter the CVV for the Card entered above\n2. Select any delivery method\n3. Enter e-mail address.\n4. Enter Mobile Number, Date Of Birth, Terms and Condition,  or any other Required field.\n5. Click on Continue button.\r\n7. 1. Verify the details on TNS iFrame page. \n2. Select the Authentication result and click on the submit button\r\n8. 1. In the 'Payment page' right click and select View Source\n2. Search for 'Order Key' and notedown its value as Order ID\r\n9. Launch the DATABASE and verify if the Status of the order is 'TC' in TDC_ORDER table\n\nselect * from pvo.payment where ORDER_ID=XXXXX\r\n10. From PVO Maintenance Site, note the reference number for the order.\n1. Expand Operations -> Credit Card response.\n2. Enter Order_id and Click on Go button\r\n11. Verify the value in DISPLAYMESSAGE field in the CARD_RESPONSE_DETAIL table\n\nselect * from pvo.CARD_RESPONSE where REF= xxxxxxxxx\nselect * from pvo.CARD_RESPONSE_DETAIL where REF= xxxxxxxxx\r\n12. Login Into TNS site and verify that transaction is not logged\nTNS Site details: \n\nURL                   :  \nMerchant ID  : TESTTICKETSTEST\nOperator ID   : qatestoperator\nPassword       : QAletmein10\r\n13. Call",
        "expected": "1. The pre-requisite should be met.\r\n2. The site should be launched successfully\r\n3. The user should be able to login sucessfully\r\n4. User should be naviagted to mebershiop shopping cart page\r\n5. 1. The user should be able to enter the Credit Card details.\n2. The user should be navigated to Payment page with the Card details added.\r\n6. 1. The user should be able to enter all details.\n2. The user should be navigated to the TNS iFrame page.\r\n7. The user should be navigated back to the Payment page of the merchant site with error message \n'We were unable to authorize your credit card.\nPlease verify your card number and resubmit your request if you believe you have entered your credit card correclty (remember to check that you have the correct type of card selected, that the expiration date is correct and the address matches the billing address of this credit card). Otherwise you should enter a different card and try again.\n\nYou have : to complete your purchase tickets will be released.'.\r\n8. 1. Source code should be displayed\n2. Should be able to find the Order Key\r\n9. The Status of the order should be shown as 'TC'\r\n10. In the 'Card Response Detail' page 'EXPIRED_CARD'message should be dispayed in the 'Display Message' field\r\n11. The value in TRANSACTIONSTATUS field in the CARD_RESPONSE table should be F\n\nThe value in DISPLAYMESSAGE field in the CARD_RESPONSE_DETAIL table should be EXPIRED_CARD\r\n12. Transaction should not be logged in TNS site as it got expied.\r\n13."
      }
    ],
    "custom_jiras": "54.1"
  },
  {
    "id": 30692721,
    "title": "Chelsea Membership_with TNSPay_DECLINED_Master card_SEC3DE true",
    "section_id": 1684984,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-9920",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C151341",
    "custom_pvo_pvodc_category": 13,
    "custom_pvocodelines": null,
    "custom_preconds": "13914",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the My tickets site using the following URL \r\nExpected Result:\r\nThe site should be launched successfully\r\n2. Login using the credentials\r\nExpected Result:\r\nThe user should be logged in\r\n3. Select tickets Buy membership option\r\nExpected Result:\r\nThe user will be redirectedto to the Membership buying page\r\n4. Select the Membership type from the drop down\r\nExpected Result:\r\nThe user should be able to select a membership option from the drop down\r\n5. Click on the continue button\r\nExpected Result:\r\nThe user should be prompted to enter the billing details\r\n6. Select the card as MasterCard , Enter the card number that is enrolled for payer authentication , the CVV code  and the expiration date and click on the buy button\n\nUse Master card 5123456789012346 EXp:2403(YYMM)\r\nExpected Result:\r\nThe user should be navigated to the SEC3DE i frame\r\n7. 1. Verify the details on TNS iFrame page. \n2. Select the authentication result and click on the submit button\r\nExpected Result:\r\nThe user should be navigated back to the Payment page of the merchant site with error message \n'We were unable to authorize your credit card.\nPlease verify your card number and resubmit your request if you believe you have entered your credit card correclty (remember to check that you have the correct type of card selected, that the expiration date is correct and the address matches the billing address of this credit card). Otherwise you should enter a different card and try again.\n\nYou have : to complete your purchase tickets will be released.'.\r\n8. Launch the DATABASE and verify if the Status of the order is 'TC' in \nTDC_ORDER table\n                \nselect * from pvo.TDC_order where ORDER_ID=XXXXX\r\nExpected Result:\r\nThe Status of the order should be shown as 'TC'\r\n9. From PVO Maintenance Site, note the reference number for the order.\n1. Expand Operations -> Credit Card response.\n2. Enter Order_id and Click on Go button\r\nExpected Result:\r\nIn the 'Card Response Detail' page 'DECLINED'message should be dispayed in the 'Display Message' field\r\n10. Verify the value in DISPLAYMESSAGE field in the CARD_RESPONSE_DETAIL table\n\nselect * from pvo.CARD_RESPONSE where REF= xxxxxxxxx\nselect * from pvo.CARD_RESPONSE_DETAIL where REF= xxxxxxxxx\r\nExpected Result:\r\nThe value in TRANSACTIONSTATUS field in the CARD_RESPONSE table should be F\n\nThe value in DISPLAYMESSAGE field in the CARD_RESPONSE_DETAIL table should be DECLINED\r\n11. Login Into TNS site and verify that transaction is  logged\nTNS Site details: \n\nURL                   :  \nMerchant ID  : TESTTICKETSTEST\nOperator ID   : qatestoperator\nPassword       : QAletmein10\r\nExpected Result:\r\nTransaction should not be logged in TNS site\r\n12. Call",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the My tickets site using the following URL \r\n2. Login using the credentials\r\n3. Select tickets Buy membership option\r\n4. Select the Membership type from the drop down\r\n5. Click on the continue button\r\n6. Select the card as MasterCard , Enter the card number that is enrolled for payer authentication , the CVV code  and the expiration date and click on the buy button\n\nUse Master card 5123456789012346 EXp:2403(YYMM)\r\n7. 1. Verify the details on TNS iFrame page. \n2. Select the authentication result and click on the submit button\r\n8. Launch the DATABASE and verify if the Status of the order is 'TC' in \nTDC_ORDER table\n                \nselect * from pvo.TDC_order where ORDER_ID=XXXXX\r\n9. From PVO Maintenance Site, note the reference number for the order.\n1. Expand Operations -> Credit Card response.\n2. Enter Order_id and Click on Go button\r\n10. Verify the value in DISPLAYMESSAGE field in the CARD_RESPONSE_DETAIL table\n\nselect * from pvo.CARD_RESPONSE where REF= xxxxxxxxx\nselect * from pvo.CARD_RESPONSE_DETAIL where REF= xxxxxxxxx\r\n11. Login Into TNS site and verify that transaction is  logged\nTNS Site details: \n\nURL                   :  \nMerchant ID  : TESTTICKETSTEST\nOperator ID   : qatestoperator\nPassword       : QAletmein10\r\n12. Call",
        "expected": "1. The site should be launched successfully\r\n2. The user should be logged in\r\n3. The user will be redirectedto to the Membership buying page\r\n4. The user should be able to select a membership option from the drop down\r\n5. The user should be prompted to enter the billing details\r\n6. The user should be navigated to the SEC3DE i frame\r\n7. The user should be navigated back to the Payment page of the merchant site with error message \n'We were unable to authorize your credit card.\nPlease verify your card number and resubmit your request if you believe you have entered your credit card correclty (remember to check that you have the correct type of card selected, that the expiration date is correct and the address matches the billing address of this credit card). Otherwise you should enter a different card and try again.\n\nYou have : to complete your purchase tickets will be released.'.\r\n8. The Status of the order should be shown as 'TC'\r\n9. In the 'Card Response Detail' page 'DECLINED'message should be dispayed in the 'Display Message' field\r\n10. The value in TRANSACTIONSTATUS field in the CARD_RESPONSE table should be F\n\nThe value in DISPLAYMESSAGE field in the CARD_RESPONSE_DETAIL table should be DECLINED\r\n11. Transaction should not be logged in TNS site\r\n12."
      }
    ],
    "custom_jiras": "54.1"
  },
  {
    "id": 30692722,
    "title": "MYTIXX to SNG_with TNS Pay_Approved_Visa card_SEC3DE true",
    "section_id": 1684984,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10283",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C151342",
    "custom_pvo_pvodc_category": 13,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MYTIXX GPL site at the following URL \r\nExpected Result:\r\nThe site should be launched successfully\r\n2. 1.Select Buy tickets tab and click on Buy button.\n2.Click on the Buy tickets link corresponding to a an event\r\nExpected Result:\r\nThe user should be naviagted to single tickets flow and user should be able to select the event\r\n3. Select a price level and the number of tickets required and click on the continue button\r\nExpected Result:\r\nThe selected seat details should be displayed\r\n4. 1. Select a member for each of the ticket\n2. Click on the continue button\r\nExpected Result:\r\nThe payment page should be displayed\r\n5. Select the option to add a new credit card\r\nExpected Result:\r\nThe credit card modal window should be shown to the user with the billing details pre-populated with the My Ticket user's My Account details\r\n6. 1. Add a new Visa card for Approved scenario:\na) Select Visa Card from drop down.\nb) Enter number as: 4715059999000437 \nc) Enter Expiration Date as: May 2017\nd) Click on Submit button.\r\nExpected Result:\r\nThe user should be navigated back to the Payment page with the details of newly entered Visa Card displayed on the page.\r\n7. 1. Select the radio button against newly entered Master Card \n2. Enter the CVV code: \n3. Select the delivery method.\n4. Enter the e-mail and other required fields.\n5. Click on the Buy Tickets button\r\nExpected Result:\r\nThe user should be navigated to the card issuing bank site to enter the PIN number, in case of QA to an emulator site.\r\n8. Verify the Bank site details. Enter the valid pin number and click on the submit button:\n\nFrom the Authentication Result dropdown select any of the available values as:\nAuthentication Successful\nAuthentication Failed\nAuthentication Not Available\nAuthentication Attempted\nError parsing Authentication Response\nInvalid Signature on Authentication Response\nMPI Processing Error\r\nExpected Result:\r\nThe user should be able to select the required value from the Authentication Result dropdown and be navigated back to the either payment page or Confirmation Page based on the selections made.\n\n1. For the selections made as: Authentication Successful, Authentication Not Available, Authentication Attempted and MPI Processing Error --> the transaction should be successful and the transaction details should be shown on the Confirmation Page.\n\n2. For the selections made as: Authentication Failed --> the transaction should NOT be successful and an error message should be shown on the Payment  Page as: Your financial institution has indicated that it could not successfully authenticate this transaction. To protect against unauthorized use, this card cannot be used to complete your purchase. You may complete the purchase by selecting another form of payment..\n\n3. For the selections made as:\nError parsing Authentication Response, Invalid Signature on Authentication Response --> the transaction should NOT be successful and an error message should be shown on the Payment  Page as: We are unable to authorise your credit card. Please verify your details and re-enter or try with a different card.\r\n9. Verify the order ID of the transaction:\n\n1. In case the transaction was successful, login to PVO Maintenance Site. Under Order -> Orders link, enter the confirmation number noteed from the Confirmation page and lookup for the Order ID.\n\n2. 1. In case the transaction was NOT successful, lookup the OrderiD on the view source of the payment page using the keyword as \"orderkey\"\r\nExpected Result:\r\nThe orderid of the transaction should be noted.\r\n10. From the order ID noted above, find out the card response refernce number from the PVO maintenance site, using link Operations -> Credit Card Response\r\nExpected Result:\r\nThe Reference number of the transaction should be noted.\r\n11. Verify the details of the transaction in PVO Database:\n\nFrom the order ID noted above run the queries in the PVO DB:\n\nselect * from pvo.payment where order_ID= OOOOOO\r\nExpected Result:\r\nFor the selections on the TNSPay iFrame as: \n1. AUTHENTICATION_SUCCESSFUL --> The value in the TRANSACTION_SOURCE column should be set as E.\n2. AUTHENTICATION_FAILED, Error parsing Authentication Response and Invalid Signature on Authentication Response--> There should NOT be any entry in the Payment table.\n3.  AUTHENTICATION_ATTEMPTED --> The value in the TRANSACTION_SOURCE column should be set as O.\n4 All Others (Authentication Not Available and MPI Processing Error) --> The value in the TRANSACTION_SOURCE column should be set as L.\r\n12. Verify the details of the transaction in PVO Database:\n\nFrom the Reference number noted above run the queries in the PVO DB:\n\nselect * from pvo.CARD_RESPONSE where REF= XXXXXXXX\n\nselect * from pvo.CARD_RESPONSE_DETAIL where REF= XXXXXXXX\r\nExpected Result:\r\n1. For all transactions except Error parsing Authentication Response and \nInvalid Signature on Authentication Response, the DISPLAYMESSAGE in card response and card response detail tables should be Approved, and for them it should NOT be there.\n\n2. The AVS and CVV response in card response table should be received corresponding to the Address entered\n\n3. For all transactions except Error parsing Authentication Response and \nInvalid Signature on Authentication Response, the Transaction status in card response table should be C, and for them it should be F.\n\n4. The amount and currency should be correct on the CARD_RESPONSE_DETAIL table\n\n5. The Cardscheme should be correct on the CARD_RESPONSE table\r\n13. Verify the details of the transaction in PVO Database:\n\nFrom the Reference number noted above run the queries in the PVO DB:\n\nselect * from pvo.CARD_RESPONSE where REF= XXXXXXXX\n\nselect * from pvo.CARD_RESPONSE_DETAIL where REF= XXXXXXXX\r\nExpected Result:\r\n1. For all transactions except Error parsing Authentication Response and \nInvalid Signature on Authentication Response, the DISPLAYMESSAGE in card response and card response detail tables should be Approved, and for them it should NOT be there.\n\n2. The AVS and CVV response in card response table should be received corresponding to the Address entered\n\n3. For all transactions except Error parsing Authentication Response and \nInvalid Signature on Authentication Response, the Transaction status in card response table should be C, and for them it should be F.\n\n4. The amount and currency should be correct on the CARD_RESPONSE_DETAIL table\n\n5. The Cardscheme should be correct on the CARD_RESPONSE table\r\n14. Login Into TNS site and verify that transaction is  logged\nTNS Site details: \n\nURL                   :  \nMerchant ID  : TESTTICKETSTEST\nOperator ID   : qatestoperator\nPassword       : QAletmein10\r\nExpected Result:\r\nTransaction should not be logged in TNS site",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MYTIXX GPL site at the following URL \r\n2. 1.Select Buy tickets tab and click on Buy button.\n2.Click on the Buy tickets link corresponding to a an event\r\n3. Select a price level and the number of tickets required and click on the continue button\r\n4. 1. Select a member for each of the ticket\n2. Click on the continue button\r\n5. Select the option to add a new credit card\r\n6. 1. Add a new Visa card for Approved scenario:\na) Select Visa Card from drop down.\nb) Enter number as: 4715059999000437 \nc) Enter Expiration Date as: May 2017\nd) Click on Submit button.\r\n7. 1. Select the radio button against newly entered Master Card \n2. Enter the CVV code: \n3. Select the delivery method.\n4. Enter the e-mail and other required fields.\n5. Click on the Buy Tickets button\r\n8. Verify the Bank site details. Enter the valid pin number and click on the submit button:\n\nFrom the Authentication Result dropdown select any of the available values as:\nAuthentication Successful\nAuthentication Failed\nAuthentication Not Available\nAuthentication Attempted\nError parsing Authentication Response\nInvalid Signature on Authentication Response\nMPI Processing Error\r\n9. Verify the order ID of the transaction:\n\n1. In case the transaction was successful, login to PVO Maintenance Site. Under Order -> Orders link, enter the confirmation number noteed from the Confirmation page and lookup for the Order ID.\n\n2. 1. In case the transaction was NOT successful, lookup the OrderiD on the view source of the payment page using the keyword as \"orderkey\"\r\n10. From the order ID noted above, find out the card response refernce number from the PVO maintenance site, using link Operations -> Credit Card Response\r\n11. Verify the details of the transaction in PVO Database:\n\nFrom the order ID noted above run the queries in the PVO DB:\n\nselect * from pvo.payment where order_ID= OOOOOO\r\n12. Verify the details of the transaction in PVO Database:\n\nFrom the Reference number noted above run the queries in the PVO DB:\n\nselect * from pvo.CARD_RESPONSE where REF= XXXXXXXX\n\nselect * from pvo.CARD_RESPONSE_DETAIL where REF= XXXXXXXX\r\n13. Verify the details of the transaction in PVO Database:\n\nFrom the Reference number noted above run the queries in the PVO DB:\n\nselect * from pvo.CARD_RESPONSE where REF= XXXXXXXX\n\nselect * from pvo.CARD_RESPONSE_DETAIL where REF= XXXXXXXX\r\n14. Login Into TNS site and verify that transaction is  logged\nTNS Site details: \n\nURL                   :  \nMerchant ID  : TESTTICKETSTEST\nOperator ID   : qatestoperator\nPassword       : QAletmein10",
        "expected": "1. The site should be launched successfully\r\n2. The user should be naviagted to single tickets flow and user should be able to select the event\r\n3. The selected seat details should be displayed\r\n4. The payment page should be displayed\r\n5. The credit card modal window should be shown to the user with the billing details pre-populated with the My Ticket user's My Account details\r\n6. The user should be navigated back to the Payment page with the details of newly entered Visa Card displayed on the page.\r\n7. The user should be navigated to the card issuing bank site to enter the PIN number, in case of QA to an emulator site.\r\n8. The user should be able to select the required value from the Authentication Result dropdown and be navigated back to the either payment page or Confirmation Page based on the selections made.\n\n1. For the selections made as: Authentication Successful, Authentication Not Available, Authentication Attempted and MPI Processing Error --> the transaction should be successful and the transaction details should be shown on the Confirmation Page.\n\n2. For the selections made as: Authentication Failed --> the transaction should NOT be successful and an error message should be shown on the Payment  Page as: Your financial institution has indicated that it could not successfully authenticate this transaction. To protect against unauthorized use, this card cannot be used to complete your purchase. You may complete the purchase by selecting another form of payment..\n\n3. For the selections made as:\nError parsing Authentication Response, Invalid Signature on Authentication Response --> the transaction should NOT be successful and an error message should be shown on the Payment  Page as: We are unable to authorise your credit card. Please verify your details and re-enter or try with a different card.\r\n9. The orderid of the transaction should be noted.\r\n10. The Reference number of the transaction should be noted.\r\n11. For the selections on the TNSPay iFrame as: \n1. AUTHENTICATION_SUCCESSFUL --> The value in the TRANSACTION_SOURCE column should be set as E.\n2. AUTHENTICATION_FAILED, Error parsing Authentication Response and Invalid Signature on Authentication Response--> There should NOT be any entry in the Payment table.\n3.  AUTHENTICATION_ATTEMPTED --> The value in the TRANSACTION_SOURCE column should be set as O.\n4 All Others (Authentication Not Available and MPI Processing Error) --> The value in the TRANSACTION_SOURCE column should be set as L.\r\n12. 1. For all transactions except Error parsing Authentication Response and \nInvalid Signature on Authentication Response, the DISPLAYMESSAGE in card response and card response detail tables should be Approved, and for them it should NOT be there.\n\n2. The AVS and CVV response in card response table should be received corresponding to the Address entered\n\n3. For all transactions except Error parsing Authentication Response and \nInvalid Signature on Authentication Response, the Transaction status in card response table should be C, and for them it should be F.\n\n4. The amount and currency should be correct on the CARD_RESPONSE_DETAIL table\n\n5. The Cardscheme should be correct on the CARD_RESPONSE table\r\n13. 1. For all transactions except Error parsing Authentication Response and \nInvalid Signature on Authentication Response, the DISPLAYMESSAGE in card response and card response detail tables should be Approved, and for them it should NOT be there.\n\n2. The AVS and CVV response in card response table should be received corresponding to the Address entered\n\n3. For all transactions except Error parsing Authentication Response and \nInvalid Signature on Authentication Response, the Transaction status in card response table should be C, and for them it should be F.\n\n4. The amount and currency should be correct on the CARD_RESPONSE_DETAIL table\n\n5. The Cardscheme should be correct on the CARD_RESPONSE table\r\n14. Transaction should not be logged in TNS site"
      }
    ],
    "custom_jiras": "54.1"
  },
  {
    "id": 30692723,
    "title": "Verify PVO is sending 3D secure elements in the SellSeats call of single sales transaction when TNSPay 3D secure is enabled and PV is doing the credit card processing",
    "section_id": 1684985,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13963",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C151343",
    "custom_pvo_pvodc_category": 13,
    "custom_pvocodelines": null,
    "custom_preconds": "Prerequisite:\r\n \r\n1.Set SEC3DE as true at supplier level\r\n2.Set MPMKEY to correct value at supplier level\r\n3.Make sure that Credit Card Processed by BOTS field is set as ON for the supplier\r\nLaunch Single sales link of any performance\r\nLock seats and continue\r\nClick Continue button on Shopping cart\r\nLog in as new/existing patron\r\nAdd a card for 3DSecure\r\nFilll in all required fields on Payment page and click Buy Tickets button\r\nSelect 'Auth successful' option from the drop down and click submit\r\nVerify sellseats call and confirm that following elements are passed to PV:\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nRun the query \r\nselect * from pvo.payment where ORDER_ID=\r\n\r\nVerify Payment_code, payment_amount and Transaction_Source fields\r\nVerify PV card_response table\r\nselect * from card_response where transaction_id=\r\nVerify THREE_D_SECURE_ID field",
    "custom_test_purpose": null,
    "custom_steps": "1. Step 1\r\nExpected Result:\r\nPrerequisite should be met\r\n2. Step 2\r\nExpected Result:\r\nAvailability page is displayed\r\n3. Step 3\r\nExpected Result:\r\nShopping cart is displayed\r\n4. Step 4\r\nExpected Result:\r\nLogin modal is displayed\r\n5. Step 5\r\nExpected Result:\r\nPayment page is displayed\r\n6. Step 6\r\nExpected Result:\r\nCard is added and displayed on payment page\r\n7. Step 7\r\nExpected Result:\r\nACS Emulator is displayed\r\n8. Step 8\r\nExpected Result:\r\nUser is navigated to Confirmation page and transaction is completed\r\n9. Step 9\r\nExpected Result:\r\nAll the 3Dsecure elements mentioned in Description are passed in SellSeats request\r\n10. Step 10\r\nExpected Result:\r\nPayment_code is updated to the payment method used\nPayment_amount is updated to the Total transaction amount\nTransaction_source is updated to E\r\n11. Step 11\r\nExpected Result:\r\nTHREE_D_SECURE_ID field is updated to the value sent in  \nnode in sellseats call",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Step 1\r\n2. Step 2\r\n3. Step 3\r\n4. Step 4\r\n5. Step 5\r\n6. Step 6\r\n7. Step 7\r\n8. Step 8\r\n9. Step 9\r\n10. Step 10\r\n11. Step 11",
        "expected": "1. Prerequisite should be met\r\n2. Availability page is displayed\r\n3. Shopping cart is displayed\r\n4. Login modal is displayed\r\n5. Payment page is displayed\r\n6. Card is added and displayed on payment page\r\n7. ACS Emulator is displayed\r\n8. User is navigated to Confirmation page and transaction is completed\r\n9. All the 3Dsecure elements mentioned in Description are passed in SellSeats request\r\n10. Payment_code is updated to the payment method used\nPayment_amount is updated to the Total transaction amount\nTransaction_source is updated to E\r\n11. THREE_D_SECURE_ID field is updated to the value sent in  \nnode in sellseats call"
      }
    ],
    "custom_jiras": "60.1"
  },
  {
    "id": 30692724,
    "title": "Verify 3D secure is skipped if amount due is zero in renewals flow",
    "section_id": 1684985,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14048",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C151344",
    "custom_pvo_pvodc_category": 13,
    "custom_pvocodelines": null,
    "custom_preconds": "1.TNSPay configuration should be in place\r\n2.Set SEC3DE as true at Mytixx supplier level\r\n3.Set MPMKEY with appropriate value at Mytixx \r\nsupplier level\r\n4.'Credit card Processed by BOTS' should be ON \r\nfor Mytixx supplier\r\n5.Mytickets patron should be available with \r\nPending Renewal item",
    "custom_test_purpose": null,
    "custom_steps": "1. Log in to Mytickets account of the patron \nmentioned in prerequisite\r\nExpected Result:\r\nThe patron should land on Pending Renewals tab\r\n2. Select any renewal order and a Payment plan such \nthat Due now is zero\r\nExpected Result:\r\nRenewal order and Payment plan should be selected such that Due now is zero\r\n3. Click Renew/Pay button\r\nExpected Result:\r\nRenewal Payment page should be displayed\r\n4. Schedule all the installments with same card and enter CVC\r\nExpected Result:\r\nCard should be entered\r\n5. Fill in all other required fields on Payment page and click Buy Tickets button\r\nExpected Result:\r\n3D secure modal should not be displayed and user should land on Payment Confirmation page",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Log in to Mytickets account of the patron \nmentioned in prerequisite\r\n2. Select any renewal order and a Payment plan such \nthat Due now is zero\r\n3. Click Renew/Pay button\r\n4. Schedule all the installments with same card and enter CVC\r\n5. Fill in all other required fields on Payment page and click Buy Tickets button",
        "expected": "1. The patron should land on Pending Renewals tab\r\n2. Renewal order and Payment plan should be selected such that Due now is zero\r\n3. Renewal Payment page should be displayed\r\n4. Card should be entered\r\n5. 3D secure modal should not be displayed and user should land on Payment Confirmation page"
      }
    ],
    "custom_jiras": "61"
  },
  {
    "id": 30692725,
    "title": "Verify if all cards are validated successfully the Renewal transaction is completed and confirmation page is displayed if split payment is used and Manual payment plan is selected",
    "section_id": 1684985,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14048",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C151345",
    "custom_pvo_pvodc_category": 13,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisites:\n \n1.TNSPay configuration should be in place\n2.Set SEC3DE as true at Mytixx supplier level\n3.Set MPMKEY with appropriate value at Mytixx supplier level\n4.'Credit card Processed by BOTS' should be ON for Mytixx \nsupplier\n5.Mytickets patron should be available with Pending Renewal \nitem\n6.Enable the Debug level in web -tiers\n \nDebug class: com.tickets.presentation.util.TdcAjaxServlet\nLevel: 30\n \nFor PVOQA1, \n \nhttp://irqawebpvo7.back.tickets.com/Debug.jsp?classname=com.tickets.presentation.util.TdcAjaxServlet+&attrname=debug&level=30\nhttp://irqawebpvo6.back.tickets.com/Debug.jsp?classname=com.tickets.presentation.util.TdcAjaxServlet+&attrname=debug&level=30\r\nExpected Result:\r\nPrerequisite should be met\r\n2. Log in to Mytickets account of the patron \nmentioned in prerequisite\r\nExpected Result:\r\nThe patron is landed on Pending Renewals tab\r\n3. 1.Select any renewal order and Manual Payment plan \nsuch that Due now is not zero\n2.Click Renew/Pay button\r\nExpected Result:\r\nRenewal Payment page is displayed\r\n4. 1.Click Split payment button twice\n2.Assign different 3dsecure enrolled card for each split\n3.Enter CVC\n4.Enter the amount against each card\r\nExpected Result:\r\nThe payment is split and cards are assigned\r\n5. 1.Fill in alll other required fields on Payment page\n2.Click Submit Payment button\r\nExpected Result:\r\nMulti card modal is displayed\r\n6. Verify all selected cards are displayed on the Multi card modal and Validate button is displayed against each card\r\nExpected Result:\r\nAll cards selected on Payment page are displayed on the Multi card modal and Validate button is displayed against each \ncard\r\n7. Click Validate button against the 1st card\r\nExpected Result:\r\n3D secure modal is displayed (ACS Emulator)\r\n8. Select the Authentication result as 'Authentication Successful' and \nclick Submit button\r\nExpected Result:\r\nOnce the card is validated, user lands back on multi card modal\r\n9. Complete the validation for all cards-Repeat steps 7 and 8 for all \ncards\r\nExpected Result:\r\nOnce the validation of all cards is completed, Submit Payment button is \ndisplayed on Multi card modal\r\n10. Click Submit Payment button\r\nExpected Result:\r\nRenewals Payment confirmation page is displayed\r\n11. In t.out file in Web-tiers\nCapture the log of 3Dsecure passing a unique Authentication code \nto PVO\r\nExpected Result:\r\nThe logs are captured\r\n12. Capture PayRenewal call to PV and confirm the following is passed \n              \n                 \n                 \n                 \n                 \n                 \n                 \n              \r\nExpected Result:\r\nThe following is passed to PV \n              \n                 \n                 \n                 \n                 \n                 \n                 \n              \r\n13. Capture PV logs of TNSPay interaction\r\nExpected Result:\r\nThe logs are captured\r\n14. Run this query in PV DB and confirm that THREE_D_SECURE_ID field is updated correctly\nselect * from card_response where transaction_id=\r\nExpected Result:\r\nTHREE_D_SECURE_ID field is updated correctly",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisites:\n \n1.TNSPay configuration should be in place\n2.Set SEC3DE as true at Mytixx supplier level\n3.Set MPMKEY with appropriate value at Mytixx supplier level\n4.'Credit card Processed by BOTS' should be ON for Mytixx \nsupplier\n5.Mytickets patron should be available with Pending Renewal \nitem\n6.Enable the Debug level in web -tiers\n \nDebug class: com.tickets.presentation.util.TdcAjaxServlet\nLevel: 30\n \nFor PVOQA1, \n \nhttp://irqawebpvo7.back.tickets.com/Debug.jsp?classname=com.tickets.presentation.util.TdcAjaxServlet+&attrname=debug&level=30\nhttp://irqawebpvo6.back.tickets.com/Debug.jsp?classname=com.tickets.presentation.util.TdcAjaxServlet+&attrname=debug&level=30\r\n2. Log in to Mytickets account of the patron \nmentioned in prerequisite\r\n3. 1.Select any renewal order and Manual Payment plan \nsuch that Due now is not zero\n2.Click Renew/Pay button\r\n4. 1.Click Split payment button twice\n2.Assign different 3dsecure enrolled card for each split\n3.Enter CVC\n4.Enter the amount against each card\r\n5. 1.Fill in alll other required fields on Payment page\n2.Click Submit Payment button\r\n6. Verify all selected cards are displayed on the Multi card modal and Validate button is displayed against each card\r\n7. Click Validate button against the 1st card\r\n8. Select the Authentication result as 'Authentication Successful' and \nclick Submit button\r\n9. Complete the validation for all cards-Repeat steps 7 and 8 for all \ncards\r\n10. Click Submit Payment button\r\n11. In t.out file in Web-tiers\nCapture the log of 3Dsecure passing a unique Authentication code \nto PVO\r\n12. Capture PayRenewal call to PV and confirm the following is passed \n              \n                 \n                 \n                 \n                 \n                 \n                 \n              \r\n13. Capture PV logs of TNSPay interaction\r\n14. Run this query in PV DB and confirm that THREE_D_SECURE_ID field is updated correctly\nselect * from card_response where transaction_id=",
        "expected": "1. Prerequisite should be met\r\n2. The patron is landed on Pending Renewals tab\r\n3. Renewal Payment page is displayed\r\n4. The payment is split and cards are assigned\r\n5. Multi card modal is displayed\r\n6. All cards selected on Payment page are displayed on the Multi card modal and Validate button is displayed against each \ncard\r\n7. 3D secure modal is displayed (ACS Emulator)\r\n8. Once the card is validated, user lands back on multi card modal\r\n9. Once the validation of all cards is completed, Submit Payment button is \ndisplayed on Multi card modal\r\n10. Renewals Payment confirmation page is displayed\r\n11. The logs are captured\r\n12. The following is passed to PV \n              \n                 \n                 \n                 \n                 \n                 \n                 \n              \r\n13. The logs are captured\r\n14. THREE_D_SECURE_ID field is updated correctly"
      }
    ],
    "custom_jiras": "61"
  },
  {
    "id": 30692726,
    "title": "Verify Online Promotion purchase using Payment plan and account credit when TNSPay 3D secure is enabled and PV is doing the credit card processing",
    "section_id": 1684985,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14062",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C151346",
    "custom_pvo_pvodc_category": 13,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite:\n \n1. SEC3DE should be set to true at Mytickets and Single sales \nsuppliers\n2. MPMKEY should be set to appropriate value at Mytickets and \nSingle sales suppliers\n3. 'Credit card processed by BOTS' should be ON for both \nMytickets and Single sales suppliers\n4. Online Promotion setup (public) should be in place for a \nPackage that has Payment plans associated. Note down a \npayment plan where some amount is Due Now\n5. Note down a Patron who has account balance\r\nExpected Result:\r\nPrerequisite should be met\r\n2. Launch Mytickets link and log in as patron with Account balance\r\nExpected Result:\r\nPatron is logged in and landed page is shown\r\n3. Go to Special offers page\r\nExpected Result:\r\nSpecial offers page is displayed\r\n4. Select the promotion mentioned in prerequisite\r\nExpected Result:\r\nAvailability page is displayed\r\n5. Select seats such that the 1st Installment amount would be \nless than the available account balance and click Continue \nbutton\r\nExpected Result:\r\nShopping cart page is displayed\r\n6. Click Continue button on Shopping cart page\r\nExpected Result:\r\nPayment page is displayed\r\n7. Select a Payment plan. There should be some amount that is Due now\r\nExpected Result:\r\nPayment plan is selected\r\n8. Select a 3Dsecure enabled credit card from the list/ Add a 3Dsecure enabled credit card\r\nExpected Result:\r\nCard is selected/ Card is added\r\n9. Fill in all other required fields on Payment page and click Buy Tickets button\r\nExpected Result:\r\nACS Emulator page is displayed\r\n10. Confirm the Authentication Result is selected as 'Authentication successful' by default and click Submit button\r\nExpected Result:\r\nPurchase confirmaton page is displayed.  Account credit used and the amount paid \nfrom Credit card is displayed correctly\r\n11. Verify sellseats call and confirm the following 3dsecure elements are passed to PV\n\n\r\nExpected Result:\r\nThe following 3dsecure elements are passed to PV in sellseats request\n\n\r\n12. Opt to use account balance",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite:\n \n1. SEC3DE should be set to true at Mytickets and Single sales \nsuppliers\n2. MPMKEY should be set to appropriate value at Mytickets and \nSingle sales suppliers\n3. 'Credit card processed by BOTS' should be ON for both \nMytickets and Single sales suppliers\n4. Online Promotion setup (public) should be in place for a \nPackage that has Payment plans associated. Note down a \npayment plan where some amount is Due Now\n5. Note down a Patron who has account balance\r\n2. Launch Mytickets link and log in as patron with Account balance\r\n3. Go to Special offers page\r\n4. Select the promotion mentioned in prerequisite\r\n5. Select seats such that the 1st Installment amount would be \nless than the available account balance and click Continue \nbutton\r\n6. Click Continue button on Shopping cart page\r\n7. Select a Payment plan. There should be some amount that is Due now\r\n8. Select a 3Dsecure enabled credit card from the list/ Add a 3Dsecure enabled credit card\r\n9. Fill in all other required fields on Payment page and click Buy Tickets button\r\n10. Confirm the Authentication Result is selected as 'Authentication successful' by default and click Submit button\r\n11. Verify sellseats call and confirm the following 3dsecure elements are passed to PV\n\n\r\n12. Opt to use account balance",
        "expected": "1. Prerequisite should be met\r\n2. Patron is logged in and landed page is shown\r\n3. Special offers page is displayed\r\n4. Availability page is displayed\r\n5. Shopping cart page is displayed\r\n6. Payment page is displayed\r\n7. Payment plan is selected\r\n8. Card is selected/ Card is added\r\n9. ACS Emulator page is displayed\r\n10. Purchase confirmaton page is displayed.  Account credit used and the amount paid \nfrom Credit card is displayed correctly\r\n11. The following 3dsecure elements are passed to PV in sellseats request\n\n\r\n12."
      }
    ],
    "custom_jiras": "61"
  },
  {
    "id": 30692727,
    "title": "Verify CVC field is not displayed for MINL card in the credit card modal when the modal is opened for editing",
    "section_id": 1684986,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15431",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C151347",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.All PV-PVO set up for Belgium TNSPay and 3DS should be made\r\n2.All PV-PVO setup for Maestrocard should be in place",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Single sales link for Belgium supplier\r\nExpected Result:\r\nLink should be launched successfully\r\n2. Select the event\r\nExpected Result:\r\nEvent should be selected\r\n3. Select tickets \r\nExpected Result:\r\nTickstes should be selected\r\n4. Click on continue\r\nExpected Result:\r\nShopping cart page should be displayed\r\n5. Click on continue\r\nExpected Result:\r\nLogin page should be displayed\r\n6. Login as a new patron\r\nExpected Result:\r\nPayment page should be displayed\r\n7. Click Add new card button ( The modal may opened by default on landing on payment page from cart page)\r\nExpected Result:\r\nAdd new card modal should be opened\r\n8. Select Maestro Int'l card from the card type drop down\r\nExpected Result:\r\nThe CVC field should be hidden\r\n9. Enter MINL card details and submit\r\nExpected Result:\r\nThe modal should be closed and the user should be navigated back to payment page\n\r\n10. Verify that the newly added MINL card is shown in the \ncredit card grid\r\nExpected Result:\r\nThe newly added MINL card should be shown in the \ncredit card grid\r\n11. Verify that the CVC field in the grid is non-editable/greyed out for MINL card\r\nExpected Result:\r\nThe CVC field in the grid should be non-editable/greyed out for MINL card\r\n12. Click Edit button against the MINL card added above\r\nExpected Result:\r\nThe card modal should be opened \r\n13. Verify that the CVC field is hidden\r\nExpected Result:\r\nThe CVC field should be hidden\r\n14. Close the modal\r\nExpected Result:\r\nThe modal should be closed and the user should be navigated back to payment page\r\n15. Fill in all other required field on the payment page and click Buy Tickets button\r\nExpected Result:\r\nThe ACS Emulator page should be displayed\r\n16. Select Auth succssful in the Emulator and click Submit button\r\nExpected Result:\r\nConfirmation page should be displayed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Single sales link for Belgium supplier\r\n2. Select the event\r\n3. Select tickets \r\n4. Click on continue\r\n5. Click on continue\r\n6. Login as a new patron\r\n7. Click Add new card button ( The modal may opened by default on landing on payment page from cart page)\r\n8. Select Maestro Int'l card from the card type drop down\r\n9. Enter MINL card details and submit\r\n10. Verify that the newly added MINL card is shown in the \ncredit card grid\r\n11. Verify that the CVC field in the grid is non-editable/greyed out for MINL card\r\n12. Click Edit button against the MINL card added above\r\n13. Verify that the CVC field is hidden\r\n14. Close the modal\r\n15. Fill in all other required field on the payment page and click Buy Tickets button\r\n16. Select Auth succssful in the Emulator and click Submit button",
        "expected": "1. Link should be launched successfully\r\n2. Event should be selected\r\n3. Tickstes should be selected\r\n4. Shopping cart page should be displayed\r\n5. Login page should be displayed\r\n6. Payment page should be displayed\r\n7. Add new card modal should be opened\r\n8. The CVC field should be hidden\r\n9. The modal should be closed and the user should be navigated back to payment page\n\r\n10. The newly added MINL card should be shown in the \ncredit card grid\r\n11. The CVC field in the grid should be non-editable/greyed out for MINL card\r\n12. The card modal should be opened \r\n13. The CVC field should be hidden\r\n14. The modal should be closed and the user should be navigated back to payment page\r\n15. The ACS Emulator page should be displayed\r\n16. Confirmation page should be displayed"
      }
    ],
    "custom_jiras": "63"
  },
  {
    "id": 30692728,
    "title": "Verify CVV field is not displayed on credit card grid in Payment page for MINL card",
    "section_id": 1684986,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15412",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C151348",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.All PV-PVO set up for Belgium TNSPay and 3DS should be made\r\n2.All PV-PVO setup for Maestrocard should be in place",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Single sales link for Belgium supplier\r\nExpected Result:\r\nLink should be launched successfully\r\n2. Select the event\r\nExpected Result:\r\nEvent should be selected\r\n3. Select tickets\r\nExpected Result:\r\nTickstes should be selected\r\n4. Click on continue\r\nExpected Result:\r\nShopping cart page should be displayed\r\n5. Click on continue\r\nExpected Result:\r\nLogin page should be displayed\r\n6. Login as a new patron\r\nExpected Result:\r\nPayment page should be displayed\r\n7. Click Add new card button ( The modal may opened by default on landing on payment page from cart page)\r\nExpected Result:\r\nAdd new card modal should be opened\r\n8. Select Maestro Int'l card from the card type drop down\r\nExpected Result:\r\nThe CVC field should be hidden\r\n9. Enter MINL card details and submit\r\nExpected Result:\r\nThe modal should be closed and the user should be navigated back to payment page\r\n10. Verify that the newly added MINL card is shown in the \ncredit card grid\r\nExpected Result:\r\nThe newly added MINL card should be shown in the \ncredit card grid\r\n11. Verify that the CVC field in the grid is non-editable/greyed out for MINL card\r\nExpected Result:\r\nThe CVC field in the grid should be non-editable/greyed out for MINL card\r\n12. Click Edit button against the MINL card added above\r\nExpected Result:\r\nThe card modal should be opened\r\n13. Verify that the CVC field is hidden\r\nExpected Result:\r\nThe CVC field should be hidden\r\n14. Close the modal\r\nExpected Result:\r\nThe modal should be closed and the user should be navigated back to payment page\r\n15. Fill in all other required field on the payment page and click Buy Tickets button\r\nExpected Result:\r\nThe ACS Emulator page should be displayed\r\n16. Select Auth succssful in the Emulator and click Submit button\r\nExpected Result:\r\nConfirmation page should be displayed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Single sales link for Belgium supplier\r\n2. Select the event\r\n3. Select tickets\r\n4. Click on continue\r\n5. Click on continue\r\n6. Login as a new patron\r\n7. Click Add new card button ( The modal may opened by default on landing on payment page from cart page)\r\n8. Select Maestro Int'l card from the card type drop down\r\n9. Enter MINL card details and submit\r\n10. Verify that the newly added MINL card is shown in the \ncredit card grid\r\n11. Verify that the CVC field in the grid is non-editable/greyed out for MINL card\r\n12. Click Edit button against the MINL card added above\r\n13. Verify that the CVC field is hidden\r\n14. Close the modal\r\n15. Fill in all other required field on the payment page and click Buy Tickets button\r\n16. Select Auth succssful in the Emulator and click Submit button",
        "expected": "1. Link should be launched successfully\r\n2. Event should be selected\r\n3. Tickstes should be selected\r\n4. Shopping cart page should be displayed\r\n5. Login page should be displayed\r\n6. Payment page should be displayed\r\n7. Add new card modal should be opened\r\n8. The CVC field should be hidden\r\n9. The modal should be closed and the user should be navigated back to payment page\r\n10. The newly added MINL card should be shown in the \ncredit card grid\r\n11. The CVC field in the grid should be non-editable/greyed out for MINL card\r\n12. The card modal should be opened\r\n13. The CVC field should be hidden\r\n14. The modal should be closed and the user should be navigated back to payment page\r\n15. The ACS Emulator page should be displayed\r\n16. Confirmation page should be displayed"
      }
    ],
    "custom_jiras": "63"
  },
  {
    "id": 30692729,
    "title": "Verify CVV field disappears when Maestro card is selected on adding new card",
    "section_id": 1684986,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15412",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C151349",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "All PV-PVO setup for Maestrocard should be in place",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the PVM singles sales link\r\nExpected Result:\r\nLaunch the link successfully\r\n2. Select number of tickets \r\nExpected Result:\r\nTickets should be selected\r\n3. Click on Continue\r\nExpected Result:\r\nUser should be navigated to the Shopping Cart\r\n4. Click on Continue\r\nExpected Result:\r\nUser should be navigated to the Login page\r\n5. Login as a new patron\r\nExpected Result:\r\nUser should be navigated to the payment page\r\n6. Click Add new card button ( The modal may opened by default on landing on payment page from cart page)\r\nExpected Result:\r\nAdd new card modal should be opened\r\n7. Select Maestro Int'l card from the card type drop down\r\nExpected Result:\r\nThe CVC field should be hidden\r\n8. Verify user is able to add the card successfully\r\nExpected Result:\r\nMaestro card should be added successfully\r\n9. In the payment page verify the CVV field is not there for \nMaestro Card\r\nExpected Result:\r\nCVV field should not be there in payment page for \nMaestro card\r\n10. Verify user is able to complete the transaction successfully with \nMaestro card.\r\nExpected Result:\r\nUser should be able to complete the transaction \nsuccessfully",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the PVM singles sales link\r\n2. Select number of tickets \r\n3. Click on Continue\r\n4. Click on Continue\r\n5. Login as a new patron\r\n6. Click Add new card button ( The modal may opened by default on landing on payment page from cart page)\r\n7. Select Maestro Int'l card from the card type drop down\r\n8. Verify user is able to add the card successfully\r\n9. In the payment page verify the CVV field is not there for \nMaestro Card\r\n10. Verify user is able to complete the transaction successfully with \nMaestro card.",
        "expected": "1. Launch the link successfully\r\n2. Tickets should be selected\r\n3. User should be navigated to the Shopping Cart\r\n4. User should be navigated to the Login page\r\n5. User should be navigated to the payment page\r\n6. Add new card modal should be opened\r\n7. The CVC field should be hidden\r\n8. Maestro card should be added successfully\r\n9. CVV field should not be there in payment page for \nMaestro card\r\n10. User should be able to complete the transaction \nsuccessfully"
      }
    ],
    "custom_jiras": "63"
  },
  {
    "id": 30692730,
    "title": "Verify CVC field is not hidden for MSTR card on card modal when MINL is added first and modal is opened by clicking Add new card button",
    "section_id": 1684986,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15433",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C151350",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "All PV-PVO setup for Maestrocard should be in place",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch \nhttps://pvoqa1.tickets.com/buy/TicketPurchase?agency=HETPALEISINT&organ_val=24330&langcode=nl&schedule=list\r\nExpected Result:\r\nSchedule page should be displayed\r\n2. Select event\r\nExpected Result:\r\nAvailability page should be displayed\r\n3. Select seats from the availability page and click Continue button\r\nExpected Result:\r\nShopping cart should be displayed\r\n4. Click Continue button on the cart page\r\nExpected Result:\r\nUser should be navigated to the Login page\r\n5. Login as a new user\r\nExpected Result:\r\nUser should be navigated to Payment page. Card modal should be opened automatically\r\n6. Select Maestro Int'l card from the card type drop down\r\nExpected Result:\r\nThe CVC field should be hidden\r\n7. Enter all required field and add a MINL card\r\nExpected Result:\r\nUser should be navigated back to Payment page. \r\n8. Verify user is able to add the card successfully\r\nExpected Result:\r\nMaestro card should be added successfully\r\n9. In the payment page verify the CVV field is not there for \nMaestro Card\r\nExpected Result:\r\nCVV field should not be there in payment page for \nMaestro card\r\n10. Click Add new card button\r\nExpected Result:\r\nCard modal should be opened. \r\n11. Verify that the CVV field is displayed\r\nExpected Result:\r\nCVV field should be displayed\r\n12. Select MSTR from card drop down\r\nExpected Result:\r\nCVV field is shown\r\n13. Enter a MSTR card and click on Continue\r\nExpected Result:\r\nCard should be added successfully\r\n14. Verify that the CVV field is displayed in the payment page\r\nExpected Result:\r\nCVV field should be displayed in the payment page\r\n15. Enter all the required fields and complete the transaction\r\nExpected Result:\r\nTransaction should be completed successfully",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch \nhttps://pvoqa1.tickets.com/buy/TicketPurchase?agency=HETPALEISINT&organ_val=24330&langcode=nl&schedule=list\r\n2. Select event\r\n3. Select seats from the availability page and click Continue button\r\n4. Click Continue button on the cart page\r\n5. Login as a new user\r\n6. Select Maestro Int'l card from the card type drop down\r\n7. Enter all required field and add a MINL card\r\n8. Verify user is able to add the card successfully\r\n9. In the payment page verify the CVV field is not there for \nMaestro Card\r\n10. Click Add new card button\r\n11. Verify that the CVV field is displayed\r\n12. Select MSTR from card drop down\r\n13. Enter a MSTR card and click on Continue\r\n14. Verify that the CVV field is displayed in the payment page\r\n15. Enter all the required fields and complete the transaction",
        "expected": "1. Schedule page should be displayed\r\n2. Availability page should be displayed\r\n3. Shopping cart should be displayed\r\n4. User should be navigated to the Login page\r\n5. User should be navigated to Payment page. Card modal should be opened automatically\r\n6. The CVC field should be hidden\r\n7. User should be navigated back to Payment page. \r\n8. Maestro card should be added successfully\r\n9. CVV field should not be there in payment page for \nMaestro card\r\n10. Card modal should be opened. \r\n11. CVV field should be displayed\r\n12. CVV field is shown\r\n13. Card should be added successfully\r\n14. CVV field should be displayed in the payment page\r\n15. Transaction should be completed successfully"
      }
    ],
    "custom_jiras": "63"
  },
  {
    "id": 30692731,
    "title": "Verify CVC field is hidden for MINL card on card modal when MSTR is added first and modal is opened by clicking Add new card button",
    "section_id": 1684986,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15433",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C151351",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "All PV-PVO setup for Maestrocard should be in place",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch \nhttp://pvoqa1.tickets.com/buy/TicketPurchase?agency=HETPALEISINT&organ_val=24330&langcode=nl&schedule=list\r\nExpected Result:\r\nSchedule page should be displayed\r\n2. Select event\r\nExpected Result:\r\nAvailability page should be displayed\r\n3. Select seats from the availability page and click Continue button\r\nExpected Result:\r\nShopping cart should be displayed\r\n4. Click Continue button on the cart page\r\nExpected Result:\r\nUser should be navigated to the Login page\r\n5. Login as a new user\r\nExpected Result:\r\nUser should be navigated to Payment page. Card modal should be opened automatically\r\n6. Select Mastercard from card type drop down- verify CVV field is shown\r\nExpected Result:\r\nThe CVV field should be displayed\r\n7. Enter all required field and add a MSTR card\r\nExpected Result:\r\nUser should be navigated back to Payment page. \r\n8. Verify that the newly added MSTR card is displayed in the grid\r\nExpected Result:\r\nCard should be added successfully\r\n9. Click Add new card button\r\nExpected Result:\r\nCard modal should be opened.\r\n10. Verify that the CVV field is displayed\r\nExpected Result:\r\nCVV field should be displayed\r\n11. Select MINL from card drop down\r\nExpected Result:\r\nCVV field should be hidden\r\n12. Enter all required field and add a MINL card\r\nExpected Result:\r\nUser should be navigated back to Payment page.\r\n13. Verify user is able to add the card successfully\r\nExpected Result:\r\nMaestro card should be added successfully\r\n14. In the payment page verify the CVV field is not there for \nMaestro Card\r\nExpected Result:\r\nCVV field should not be there in payment page for \nMaestro card\r\n15. Enter all the required fields and complete the transaction\r\nExpected Result:\r\nTransaction should be completed successfully",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch \nhttp://pvoqa1.tickets.com/buy/TicketPurchase?agency=HETPALEISINT&organ_val=24330&langcode=nl&schedule=list\r\n2. Select event\r\n3. Select seats from the availability page and click Continue button\r\n4. Click Continue button on the cart page\r\n5. Login as a new user\r\n6. Select Mastercard from card type drop down- verify CVV field is shown\r\n7. Enter all required field and add a MSTR card\r\n8. Verify that the newly added MSTR card is displayed in the grid\r\n9. Click Add new card button\r\n10. Verify that the CVV field is displayed\r\n11. Select MINL from card drop down\r\n12. Enter all required field and add a MINL card\r\n13. Verify user is able to add the card successfully\r\n14. In the payment page verify the CVV field is not there for \nMaestro Card\r\n15. Enter all the required fields and complete the transaction",
        "expected": "1. Schedule page should be displayed\r\n2. Availability page should be displayed\r\n3. Shopping cart should be displayed\r\n4. User should be navigated to the Login page\r\n5. User should be navigated to Payment page. Card modal should be opened automatically\r\n6. The CVV field should be displayed\r\n7. User should be navigated back to Payment page. \r\n8. Card should be added successfully\r\n9. Card modal should be opened.\r\n10. CVV field should be displayed\r\n11. CVV field should be hidden\r\n12. User should be navigated back to Payment page.\r\n13. Maestro card should be added successfully\r\n14. CVV field should not be there in payment page for \nMaestro card\r\n15. Transaction should be completed successfully"
      }
    ],
    "custom_jiras": "63"
  },
  {
    "id": 30692732,
    "title": "Verify the payment using MaestroCard in PV GPL Single sales flow if TNSPAY and 3DS is enabled",
    "section_id": 1684986,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14934",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C151352",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.All PV-PVO set up for Belgium TNSPay and 3DS should be made\r\n2.All PV-PVO setup for Maestrocard should be in place\r\n3.To get the TNSPay logs, set the three debug classes listed below to level 10   \r\ncom.tickets.application.tnspay.TNSPayCardHttpClientTranslator to capture the card requests\r\ncom.tickets.application.tnspay.TNSPaySecure3DHttpClientTranslator to capture 3D requests\r\nWe need \r\ncom.tickets.application.tnspay.TNSPayHttpClientTransporter to capture any responses.",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Single sales link for Belgium supplier\r\nExpected Result:\r\nLink should be launched successfully\r\n2. Select the event\r\nExpected Result:\r\nEvent should be selected\r\n3. Select tickets\r\nExpected Result:\r\nTickstes should be selected\r\n4. Click on continue\r\nExpected Result:\r\nShopping cart page should be displayed\r\n5. Click on continue\r\nExpected Result:\r\nLogin page should be displayed\r\n6. Login as a new patron\r\nExpected Result:\r\nPayment page should be displayed\r\n7. Click Add new card button ( The modal may opened by default on landing on payment page from cart page)\r\nExpected Result:\r\nAdd new card modal should be opened\r\n8. Select Maestro Int'l card from the card type drop down\r\nExpected Result:\r\nThe CVC field should be hidden\r\n9. Enter MINL card details and submit\r\nExpected Result:\r\nThe modal should be closed and the user should be navigated back to payment page\r\n10. Verify that the newly added MINL card is shown in the \ncredit card grid\r\nExpected Result:\r\nThe newly added MINL card should be shown in the \ncredit card grid\r\n11. Verify that the CVC field in the grid is non-editable/greyed out for MINL card\r\nExpected Result:\r\nThe CVC field in the grid should be non-editable/greyed out for MINL card\r\n12. Click Edit button against the MINL card added above\r\nExpected Result:\r\nThe card modal should be opened\r\n13. Verify that the CVC field is hidden\r\nExpected Result:\r\nThe CVC field should be hidden\r\n14. Close the modal\r\nExpected Result:\r\nThe modal should be closed and the user should be navigated back to payment page\r\n15. Fill in all other required field on the payment page and click Buy Tickets button\r\nExpected Result:\r\nThe ACS Emulator page should be displayed\r\n16. Select Auth succssful in the Emulator and click Submit button\r\nExpected Result:\r\nConfirmation page should be displayed\r\n17. Capture sellseats call\r\nExpected Result:\r\nPayment details should be passed \r\n18. Capture 3dsecure logs\r\nExpected Result:\r\nThere should be no errors in the log\r\n19. Verify SE3DPINF in order text\r\nExpected Result:\r\nSE3DPINF should hold the correct transaction and patron info\r\n20. Verify PV BOTS\r\nExpected Result:\r\nThe payment details should be correctly updated in \nPV BOTS",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Single sales link for Belgium supplier\r\n2. Select the event\r\n3. Select tickets\r\n4. Click on continue\r\n5. Click on continue\r\n6. Login as a new patron\r\n7. Click Add new card button ( The modal may opened by default on landing on payment page from cart page)\r\n8. Select Maestro Int'l card from the card type drop down\r\n9. Enter MINL card details and submit\r\n10. Verify that the newly added MINL card is shown in the \ncredit card grid\r\n11. Verify that the CVC field in the grid is non-editable/greyed out for MINL card\r\n12. Click Edit button against the MINL card added above\r\n13. Verify that the CVC field is hidden\r\n14. Close the modal\r\n15. Fill in all other required field on the payment page and click Buy Tickets button\r\n16. Select Auth succssful in the Emulator and click Submit button\r\n17. Capture sellseats call\r\n18. Capture 3dsecure logs\r\n19. Verify SE3DPINF in order text\r\n20. Verify PV BOTS",
        "expected": "1. Link should be launched successfully\r\n2. Event should be selected\r\n3. Tickstes should be selected\r\n4. Shopping cart page should be displayed\r\n5. Login page should be displayed\r\n6. Payment page should be displayed\r\n7. Add new card modal should be opened\r\n8. The CVC field should be hidden\r\n9. The modal should be closed and the user should be navigated back to payment page\r\n10. The newly added MINL card should be shown in the \ncredit card grid\r\n11. The CVC field in the grid should be non-editable/greyed out for MINL card\r\n12. The card modal should be opened\r\n13. The CVC field should be hidden\r\n14. The modal should be closed and the user should be navigated back to payment page\r\n15. The ACS Emulator page should be displayed\r\n16. Confirmation page should be displayed\r\n17. Payment details should be passed \r\n18. There should be no errors in the log\r\n19. SE3DPINF should hold the correct transaction and patron info\r\n20. The payment details should be correctly updated in \nPV BOTS"
      }
    ],
    "custom_jiras": "63"
  },
  {
    "id": 30692733,
    "title": "Verify that for a split payment by using  iDeal for paying the remainder with Podium,PVO is sending  card number to PVM BOTS",
    "section_id": 1684987,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12923",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C151353",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "8977",
    "custom_test_purpose": null,
    "custom_steps": "1. Enter the other required info(like Email Adress,Delivery method) in payement payent page.\r\nExpected Result:\r\nAll the details should be entered successfully.\r\n2. Select the  Buy Tickets button and navigate to Ogone payement processing page\r\nExpected Result:\r\nTe user should be navigated to Ogone payment page.\r\n3. Complete  a spilt payment in ogone with IDeal(In order to test a split payment,  first select \"Podium\" at the Ogone site. Use 12345678 as the number and 1234 as the code. This will pay a portion of the amount and then pay the remainder with iDEAL)\r\nExpected Result:\r\nUser should be able to split the payement\r\n4. Click on Sucess  in iDeal Simulator.\r\nExpected Result:\r\nAfter clicking on Sucess,the user should be directed to confirmation page.\r\n5. Verify the following in the Confirmation page\r\n\r\n1. The Billing details should be displayed as entered in the payment page\r\n\r\n2. The delivery method and the credit card details as selected in the payment page.\r\n\r\n3. The confirmation number and the total amount paid\r\n\r\n4.Verify the text displayed It should be displayed as \"We've received your order and are currently processing your payment. You will receive an e-mail confirmation within the next 24 hours. If you do not receive a confirmation e-mail please call our customer service.\"\r\nExpected Result:\r\nThe confirmation page with the following details should be displayed correctly\r\n1. The Billing details should be displayed as entered in the payment page\r\n2. The delivery method and credit card details as selected in the payment page.\r\n3. The confirmation numberand the total amount paid\r\n4.The text OGORCOPM  should be displayed correctly.\r\n6. Verify the Email received from Ogone.\r\n\r\n1.The buyer data like billing name and address should be displayed as entered in the payment page\r\n\r\n2. Order date,Order reference,order payment reference, total amount charged should be displayed correctly\r\n\r\n3.  The status should be displayed as '9-Payment Requested'\r\n\r\n4. The credit card details should be displayed as entered in the ogone payment page\r\nExpected Result:\r\nIn the Email received from Ogone the following details should be displayed\r\n\r\n1. The buyer data like billing name and address should be displayed as entered in the payment page\r\n\r\n2. Order date,Order reference,order payment reference, total amount charged should be displayed correctly\r\n\r\n3.  The status should be displayed as '9-Payment Requested'\r\n\r\n4. The credit card details should be displayed as entered in the ogone payment page\r\n7. Verify that PVO is passing iDeal card number to PVM BOTS(Check Bits from 0818 to 0827  in logs-The bits that store card number)\r\nExpected Result:\r\nPVO should pass the card number to PVM BOTS\r\n8. Verify that PVM logs contains card number in credit card field\r\nExpected Result:\r\nPVM logs should contain credit card number in credit card filed in PVM logs\r\n9. Verify that transaction status is success  in PVO and BOTS\r\nExpected Result:\r\nTransaction should be logged in BOTS correctly and transaction status should be shown as TS in PVO too.\r\n10. Call \r\n11. Make sure that IDeal is mapped as Suppiler payement type in JAAP suppiler\r\nExpected Result:\r\nThe Payment type should be mapped correctly\r\n12. Launch the application URL and select the Event\r\nExpected Result:\r\nThe application should be launched sucessfully and user should be able to select event sucessfully.\r\n13. Select a price level and the number of tickets required and click on the continue button\r\nExpected Result:\r\nThe selected seat details should be displayed\r\n14. Click on the continue button\r\nExpected Result:\r\nThe selected seat details along with the total price should be displayed\r\n15. Select Ogone payment method and Click on the continue button\r\nExpected Result:\r\nThe user should be prompted to enter the billing details in the popup model\r\n16. Enter the required billing details under billing/mailing address in the popup model\r\n\r\nFirst name: Vishnu\r\nLast name:Priya\r\nAddress: Curacaolaan 190\r\nPostal code: 3131 NG\r\nState: Rijswijk\r\nCountry:Netherlands.\r\nExpected Result:\r\nThe entered details should be visible",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Enter the other required info(like Email Adress,Delivery method) in payement payent page.\r\n2. Select the  Buy Tickets button and navigate to Ogone payement processing page\r\n3. Complete  a spilt payment in ogone with IDeal(In order to test a split payment,  first select \"Podium\" at the Ogone site. Use 12345678 as the number and 1234 as the code. This will pay a portion of the amount and then pay the remainder with iDEAL)\r\n4. Click on Sucess  in iDeal Simulator.\r\n5. Verify the following in the Confirmation page\r\n\r\n1. The Billing details should be displayed as entered in the payment page\r\n\r\n2. The delivery method and the credit card details as selected in the payment page.\r\n\r\n3. The confirmation number and the total amount paid\r\n\r\n4.Verify the text displayed It should be displayed as \"We've received your order and are currently processing your payment. You will receive an e-mail confirmation within the next 24 hours. If you do not receive a confirmation e-mail please call our customer service.\"\r\n6. Verify the Email received from Ogone.\r\n\r\n1.The buyer data like billing name and address should be displayed as entered in the payment page\r\n\r\n2. Order date,Order reference,order payment reference, total amount charged should be displayed correctly\r\n\r\n3.  The status should be displayed as '9-Payment Requested'\r\n\r\n4. The credit card details should be displayed as entered in the ogone payment page\r\n7. Verify that PVO is passing iDeal card number to PVM BOTS(Check Bits from 0818 to 0827  in logs-The bits that store card number)\r\n8. Verify that PVM logs contains card number in credit card field\r\n9. Verify that transaction status is success  in PVO and BOTS\r\n10. Call \r\n11. Make sure that IDeal is mapped as Suppiler payement type in JAAP suppiler\r\n12. Launch the application URL and select the Event\r\n13. Select a price level and the number of tickets required and click on the continue button\r\n14. Click on the continue button\r\n15. Select Ogone payment method and Click on the continue button\r\n16. Enter the required billing details under billing/mailing address in the popup model\r\n\r\nFirst name: Vishnu\r\nLast name:Priya\r\nAddress: Curacaolaan 190\r\nPostal code: 3131 NG\r\nState: Rijswijk\r\nCountry:Netherlands.",
        "expected": "1. All the details should be entered successfully.\r\n2. Te user should be navigated to Ogone payment page.\r\n3. User should be able to split the payement\r\n4. After clicking on Sucess,the user should be directed to confirmation page.\r\n5. The confirmation page with the following details should be displayed correctly\r\n1. The Billing details should be displayed as entered in the payment page\r\n2. The delivery method and credit card details as selected in the payment page.\r\n3. The confirmation numberand the total amount paid\r\n4.The text OGORCOPM  should be displayed correctly.\r\n6. In the Email received from Ogone the following details should be displayed\r\n\r\n1. The buyer data like billing name and address should be displayed as entered in the payment page\r\n\r\n2. Order date,Order reference,order payment reference, total amount charged should be displayed correctly\r\n\r\n3.  The status should be displayed as '9-Payment Requested'\r\n\r\n4. The credit card details should be displayed as entered in the ogone payment page\r\n7. PVO should pass the card number to PVM BOTS\r\n8. PVM logs should contain credit card number in credit card filed in PVM logs\r\n9. Transaction should be logged in BOTS correctly and transaction status should be shown as TS in PVO too.\r\n10. \r\n11. The Payment type should be mapped correctly\r\n12. The application should be launched sucessfully and user should be able to select event sucessfully.\r\n13. The selected seat details should be displayed\r\n14. The selected seat details along with the total price should be displayed\r\n15. The user should be prompted to enter the billing details in the popup model\r\n16. The entered details should be visible"
      }
    ],
    "custom_jiras": "55.1"
  },
  {
    "id": 30692734,
    "title": "Verify that for an ogone iDeal payment  PVO  is sending  card number to PVM BOTS",
    "section_id": 1684987,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12923",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C151354",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "8977",
    "custom_test_purpose": null,
    "custom_steps": "1. Call \r\n2. Make sure that IDeal is mapped as Suppiler payement type in JAAP suppiler\r\nExpected Result:\r\nThe Payment type should be mapped correctly\r\n3. Launch the application URL and select the Event\r\nExpected Result:\r\nThe application should be launched sucessfully and user should be able to select event sucessfully.\r\n4. Select a price level and the number of tickets required and click on the continue button\r\nExpected Result:\r\nThe selected seat details should be displayed\r\n5. Click on the continue button\r\nExpected Result:\r\nThe selected seat details along with the total price should be displayed\r\n6. Select Ogone payment method and Click on the continue button\r\nExpected Result:\r\nThe user should be prompted to enter the billing details in the popup model\r\n7. Enter the required billing details under billing/mailing address in the popup model\r\n\r\nFirst name: Vishnu\r\nLast name:Priya\r\nAddress: Curacaolaan 190\r\nPostal code: 3131 NG\r\nState: Rijswijk\r\nCountry:Netherlands.\r\nExpected Result:\r\nThe entered details should be visible\r\n8. Enter the other required info(like Email Adress,Delivery method) in payement payent page.\r\nExpected Result:\r\nAll the details should be entered successfully.\r\n9. Select the  Buy Tickets button and navigate to Ogone payement processing page\r\nExpected Result:\r\nTe user should be navigated to Ogone payment page.\r\n10. Select iDEAL as the payement type.\r\nExpected Result:\r\nuser should be able to iDEAL as the payement type\r\n11. Click on Sucess  in iDeal Simulator.\r\nExpected Result:\r\nAfter clicking on Sucess,the user should be directed to confirmation page.\r\n12. Verify the following in the Confirmation page\r\n\r\n1. The Billing details should be displayed as entered in the payment page\r\n\r\n2. The delivery method and the credit card details as selected in the payment page.\r\n\r\n3. The confirmation number and the total amount paid\r\n\r\n4.Verify the text displayed It should be displayed as \"We've received your order and are currently processing your payment. You will receive an e-mail confirmation within the next 24 hours. If you do not receive a confirmation e-mail please call our customer service.\"\r\nExpected Result:\r\nThe confirmation page with the following details should be displayed correctly\r\n1. The Billing details should be displayed as entered in the payment page\r\n2. The delivery method and credit card details as selected in the payment page.\r\n3. The confirmation numberand the total amount paid\r\n4.The text OGORCOPM  should be displayed correctly.\r\n13. Verify the Email received from Ogone.\r\n\r\n1.The buyer data like billing name and address should be displayed as entered in the payment page\r\n\r\n2. Order date,Order reference,order payment reference, total amount charged should be displayed correctly\r\n\r\n3.  The status should be displayed as '9-Payment Requested'\r\n\r\n4. The credit card details should be displayed as entered in the ogone payment page\r\nExpected Result:\r\nIn the Email received from Ogone the following details should be displayed\r\n\r\n1. The buyer data like billing name and address should be displayed as entered in the payment page\r\n\r\n2. Order date,Order reference,order payment reference, total amount charged should be displayed correctly\r\n\r\n3.  The status should be displayed as '9-Payment Requested'\r\n\r\n4. The credit card details should be displayed as entered in the ogone payment page\r\n14. Verify that PVO is passing iDeal card number to PVM BOTS(Check Bits from 0818 to 0827  in logs-The bits that store card number)\r\nExpected Result:\r\nPVO should pass the card number to PVM BOTS\r\n15. Verify that PVM logs contains card number in credit card field\r\nExpected Result:\r\nPVM logs should contain credit card number in credit card filed in PVM logs\r\n16. Verify that transaction status is success  in PVO and BOTS\r\nExpected Result:\r\nTransaction should be logged in BOTS correctly and transaction status should be shown as TS in PVO too.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Call \r\n2. Make sure that IDeal is mapped as Suppiler payement type in JAAP suppiler\r\n3. Launch the application URL and select the Event\r\n4. Select a price level and the number of tickets required and click on the continue button\r\n5. Click on the continue button\r\n6. Select Ogone payment method and Click on the continue button\r\n7. Enter the required billing details under billing/mailing address in the popup model\r\n\r\nFirst name: Vishnu\r\nLast name:Priya\r\nAddress: Curacaolaan 190\r\nPostal code: 3131 NG\r\nState: Rijswijk\r\nCountry:Netherlands.\r\n8. Enter the other required info(like Email Adress,Delivery method) in payement payent page.\r\n9. Select the  Buy Tickets button and navigate to Ogone payement processing page\r\n10. Select iDEAL as the payement type.\r\n11. Click on Sucess  in iDeal Simulator.\r\n12. Verify the following in the Confirmation page\r\n\r\n1. The Billing details should be displayed as entered in the payment page\r\n\r\n2. The delivery method and the credit card details as selected in the payment page.\r\n\r\n3. The confirmation number and the total amount paid\r\n\r\n4.Verify the text displayed It should be displayed as \"We've received your order and are currently processing your payment. You will receive an e-mail confirmation within the next 24 hours. If you do not receive a confirmation e-mail please call our customer service.\"\r\n13. Verify the Email received from Ogone.\r\n\r\n1.The buyer data like billing name and address should be displayed as entered in the payment page\r\n\r\n2. Order date,Order reference,order payment reference, total amount charged should be displayed correctly\r\n\r\n3.  The status should be displayed as '9-Payment Requested'\r\n\r\n4. The credit card details should be displayed as entered in the ogone payment page\r\n14. Verify that PVO is passing iDeal card number to PVM BOTS(Check Bits from 0818 to 0827  in logs-The bits that store card number)\r\n15. Verify that PVM logs contains card number in credit card field\r\n16. Verify that transaction status is success  in PVO and BOTS",
        "expected": "1. \r\n2. The Payment type should be mapped correctly\r\n3. The application should be launched sucessfully and user should be able to select event sucessfully.\r\n4. The selected seat details should be displayed\r\n5. The selected seat details along with the total price should be displayed\r\n6. The user should be prompted to enter the billing details in the popup model\r\n7. The entered details should be visible\r\n8. All the details should be entered successfully.\r\n9. Te user should be navigated to Ogone payment page.\r\n10. user should be able to iDEAL as the payement type\r\n11. After clicking on Sucess,the user should be directed to confirmation page.\r\n12. The confirmation page with the following details should be displayed correctly\r\n1. The Billing details should be displayed as entered in the payment page\r\n2. The delivery method and credit card details as selected in the payment page.\r\n3. The confirmation numberand the total amount paid\r\n4.The text OGORCOPM  should be displayed correctly.\r\n13. In the Email received from Ogone the following details should be displayed\r\n\r\n1. The buyer data like billing name and address should be displayed as entered in the payment page\r\n\r\n2. Order date,Order reference,order payment reference, total amount charged should be displayed correctly\r\n\r\n3.  The status should be displayed as '9-Payment Requested'\r\n\r\n4. The credit card details should be displayed as entered in the ogone payment page\r\n14. PVO should pass the card number to PVM BOTS\r\n15. PVM logs should contain credit card number in credit card filed in PVM logs\r\n16. Transaction should be logged in BOTS correctly and transaction status should be shown as TS in PVO too."
      }
    ],
    "custom_jiras": "55.1"
  },
  {
    "id": 30692735,
    "title": "Cardholder successful authentication_American Express",
    "section_id": 1684987,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-8437",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C151355",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "8977",
    "custom_test_purpose": null,
    "custom_steps": "1. Verify the transaction details in PVM BOTS\r\nExpected Result:\r\nTransaction details should be updated correctly in BOTS\r\n2. Call \r\n3. Launch the Single tickets GPL site at the following URL \r\nExpected Result:\r\nThe site should be launched successfully\r\n4. Click on the Buy tickets link corresponding to a an event \r\nExpected Result:\r\nThe user should be displayed the different price levels for the event\r\n5. Select a price level and the number of tickets required and click on the continue button\r\nExpected Result:\r\nThe selected seat details should be displayed\r\n6. Click on the continue button\r\nExpected Result:\r\nThe selected seat details along with the total price should be displayed\r\n7. Click on the continue button\r\nExpected Result:\r\nThe user should be prompted to enter the billing details\r\n8. Enter the required billing details under billing/mailing address and select any delivery method\r\nExpected Result:\r\nThe entered details should be visible\r\n9. In the Paymnet section verify that the radio button For Ogone Payment is shown with the text -Payment Via Ogone\r\nExpected Result:\r\nThe radio button corresponding to Payment Via Ogone should be displayed\r\n10. 1.Verify the total amount shown and note the total amount\r\n2.Select the  Buy Tickets button\r\nExpected Result:\r\nThe amount should be noted and the user should be navigated to Ogone payment page.\r\n11. Verify the following in the Ogon Payment page:\r\n1. The order number should be displayed correctly\r\n2. The total amount should be displayed as that noted in the Payment Page\r\n3. The client name should be displayed correctly\r\n4. The various credit card options available for payment should be displayed\r\n\r\nSelect American Express as the Credit card for payment\r\nExpected Result:\r\n1. The order number should be displayed correctly\r\n2. The total amount should be displayed as that noted in the Payment Page\r\n3. The client name should be displayed correctly\r\n4. The various credit card options available for payment should be displayed\r\n5. Credit card payment page should be displayed\r\n12. Verify that the following details are displayed correctly\r\n1. The order number\r\n2. The total amount\r\n3. The client name\r\n4.The credit card to be used for payment should be displayed as American Express\r\n\r\nEnter the Fake credit card details such as:\r\nCredit card holder name:\r\nCard number:\r\nExpiry date\r\nIssue number\r\n\r\nClick on the Payment button\r\nExpected Result:\r\nThe details should be enetered\r\n13. Verify that the Details of the Order such as \r\n1. Order number\r\n2. Total Charged \r\n3. Client Details\r\n4. Reference number\r\nshould be displayed correctly\r\nExpected Result:\r\nThe Details of the Order such as \r\n1. Order number\r\n2. Total Charged \r\n3. Client Details\r\n4. Reference number\r\nshould be displayed correctly\r\n\r\nThe user should be navigate to the Confirmation Page.\r\n14. Verify the following in the Confirmation page\r\n1. The Billing details should be displayed as entered in the payment page\r\n2. The delivery method and the credit card details as selected in the payment page.\r\n3. The confirmation number and the total amount paid\r\nExpected Result:\r\nThe confirmation page with the following details should be displayed correctly\r\n1. The Billing details should be displayed as entered in the payment page\r\n2. The delivery method and credit card details as selected in the payment page.\r\n3. The confirmation numberand the total amount paid\r\n15. Verify the Email received from Ogone.\r\n1. The buyer data like billing name and address should be displayed as entered in the payment page\r\n2. Order date,Order reference,order payment reference, total amount charged should be displayed correctly\r\n3.  The status should be displayed as '9-Payment Requested'\r\n4. The credit card details should be displayed as entered in the ogone payment page\r\nExpected Result:\r\nIn the Email received from Ogone the following details should be displayed\r\n1. The buyer data like billing name and address should be displayed as entered in the payment page\r\n2. Order date,Order reference,order payment reference, total amount charged should be displayed correctly\r\n3.  The status should be displayed as '9-Payment Requested'\r\n4. The credit card details should be displayed as entered in the ogone payment page\r\n16. 1. Login to PVO database\r\n2. Execute the following query\r\n    select * from pvo.TDC_ORDER where ORDER_ID=Order Id\r\nExpected Result:\r\nThe transaction details should be displayed correctly.\r\n\r\nThe status of the order should be 'TS'",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Verify the transaction details in PVM BOTS\r\n2. Call \r\n3. Launch the Single tickets GPL site at the following URL \r\n4. Click on the Buy tickets link corresponding to a an event \r\n5. Select a price level and the number of tickets required and click on the continue button\r\n6. Click on the continue button\r\n7. Click on the continue button\r\n8. Enter the required billing details under billing/mailing address and select any delivery method\r\n9. In the Paymnet section verify that the radio button For Ogone Payment is shown with the text -Payment Via Ogone\r\n10. 1.Verify the total amount shown and note the total amount\r\n2.Select the  Buy Tickets button\r\n11. Verify the following in the Ogon Payment page:\r\n1. The order number should be displayed correctly\r\n2. The total amount should be displayed as that noted in the Payment Page\r\n3. The client name should be displayed correctly\r\n4. The various credit card options available for payment should be displayed\r\n\r\nSelect American Express as the Credit card for payment\r\n12. Verify that the following details are displayed correctly\r\n1. The order number\r\n2. The total amount\r\n3. The client name\r\n4.The credit card to be used for payment should be displayed as American Express\r\n\r\nEnter the Fake credit card details such as:\r\nCredit card holder name:\r\nCard number:\r\nExpiry date\r\nIssue number\r\n\r\nClick on the Payment button\r\n13. Verify that the Details of the Order such as \r\n1. Order number\r\n2. Total Charged \r\n3. Client Details\r\n4. Reference number\r\nshould be displayed correctly\r\n14. Verify the following in the Confirmation page\r\n1. The Billing details should be displayed as entered in the payment page\r\n2. The delivery method and the credit card details as selected in the payment page.\r\n3. The confirmation number and the total amount paid\r\n15. Verify the Email received from Ogone.\r\n1. The buyer data like billing name and address should be displayed as entered in the payment page\r\n2. Order date,Order reference,order payment reference, total amount charged should be displayed correctly\r\n3.  The status should be displayed as '9-Payment Requested'\r\n4. The credit card details should be displayed as entered in the ogone payment page\r\n16. 1. Login to PVO database\r\n2. Execute the following query\r\n    select * from pvo.TDC_ORDER where ORDER_ID=Order Id",
        "expected": "1. Transaction details should be updated correctly in BOTS\r\n2. \r\n3. The site should be launched successfully\r\n4. The user should be displayed the different price levels for the event\r\n5. The selected seat details should be displayed\r\n6. The selected seat details along with the total price should be displayed\r\n7. The user should be prompted to enter the billing details\r\n8. The entered details should be visible\r\n9. The radio button corresponding to Payment Via Ogone should be displayed\r\n10. The amount should be noted and the user should be navigated to Ogone payment page.\r\n11. 1. The order number should be displayed correctly\r\n2. The total amount should be displayed as that noted in the Payment Page\r\n3. The client name should be displayed correctly\r\n4. The various credit card options available for payment should be displayed\r\n5. Credit card payment page should be displayed\r\n12. The details should be enetered\r\n13. The Details of the Order such as \r\n1. Order number\r\n2. Total Charged \r\n3. Client Details\r\n4. Reference number\r\nshould be displayed correctly\r\n\r\nThe user should be navigate to the Confirmation Page.\r\n14. The confirmation page with the following details should be displayed correctly\r\n1. The Billing details should be displayed as entered in the payment page\r\n2. The delivery method and credit card details as selected in the payment page.\r\n3. The confirmation numberand the total amount paid\r\n15. In the Email received from Ogone the following details should be displayed\r\n1. The buyer data like billing name and address should be displayed as entered in the payment page\r\n2. Order date,Order reference,order payment reference, total amount charged should be displayed correctly\r\n3.  The status should be displayed as '9-Payment Requested'\r\n4. The credit card details should be displayed as entered in the ogone payment page\r\n16. The transaction details should be displayed correctly.\r\n\r\nThe status of the order should be 'TS'"
      }
    ],
    "custom_jiras": "52"
  },
  {
    "id": 30692736,
    "title": "Cardholder successful authentication_MASTER CARD",
    "section_id": 1684987,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-8437",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C151356",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "8977",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the Single tickets GPL site at the following URL \r\nExpected Result:\r\nThe site should be launched successfully\r\n2. Click on the Buy tickets link corresponding to a an event \r\nExpected Result:\r\nThe user should be displayed the different price levels for the event\r\n3. Select a price level and the number of tickets required and click on the continue button\r\nExpected Result:\r\nThe selected seat details should be displayed\r\n4. Click on the continue button\r\nExpected Result:\r\nThe selected seat details along with the total price should be displayed\r\n5. Click on the continue button\r\nExpected Result:\r\nThe user should be prompted to enter the billing details\r\n6. Enter the required billing details under billing/mailing address and select any delivery method\r\nExpected Result:\r\nThe entered details should be visible\r\n7. Verify that the following details are displayed correctly\r\n1. The order number\r\n2. The total amount\r\n3. The client name\r\n4.The credit card to be used for payment should be displayed as MASTERCARD\r\n\r\nEnter the Fake credit card details such as:\r\nCredit card holder name:\r\nCard number:\r\nExpiry date\r\nIssue number\r\n\r\nClick on the Payment button\r\nExpected Result:\r\nThe details should be enetered\r\n8. Verify that the Details of the Order such as \r\n1. Order number\r\n2. Total Charged \r\n3. Client Details\r\n4. Reference number\r\nshould be displayed correctly\r\nExpected Result:\r\nThe Details of the Order such as \r\n1. Order number\r\n2. Total Charged \r\n3. Client Details\r\n4. Reference number\r\nshould be displayed correctly\r\n\r\nThe user should be navigate to the Confirmation Page.\r\n9. Verify the following in the Confirmation page\r\n1. The Billing details should be displayed as entered in the payment page\r\n2. The delivery method and the credit card details as selected in the payment page.\r\n3. The confirmation number and the total amount paid\r\nExpected Result:\r\nThe confirmation page with the following details should be displayed correctly\r\n1. The Billing details should be displayed as entered in the payment page\r\n2. The delivery method and credit card details as selected in the payment page.\r\n3. The confirmation numberand the total amount paid\r\n10. Call \r\n11. In the Paymnet section verify that the radio button For Ogone Payment is shown with the text -Payment Via Ogone\r\nExpected Result:\r\nThe radio button corresponding to Payment Via Ogone should be displayed\r\n12. 1.Verify the total amount shown and note the total amount\r\n2.Select the  Buy Tickets button\r\nExpected Result:\r\nThe amount should be noted and the user should be navigated to Ogone payment page.\r\n13. Verify the Email received from Ogone.\r\n1. The buyer data like billing name and address should be displayed as entered in the payment page\r\n2. Order date,Order reference,order payment reference, total amount charged should be displayed correctly\r\n3.  The status should be displayed as '9-Payment Requested'\r\n4. The credit card details should be displayed as entered in the ogone payment page\r\nExpected Result:\r\nIn the Email received from Ogone the following details should be displayed\r\n1. The buyer data like billing name and address should be displayed as entered in the payment page\r\n2. Order date,Order reference,order payment reference, total amount charged should be displayed correctly\r\n3.  The status should be displayed as '9-Payment Requested'\r\n4. The credit card details should be displayed as entered in the ogone payment page\r\n14. Verify the following in the Ogon Payment page:\r\n1. The order number should be displayed correctly\r\n2. The total amount should be displayed as that noted in the Payment Page\r\n3. The client name should be displayed correctly\r\n4. The various credit card options available for payment should be displayed\r\n\r\nSelect Master Card as the Credit card for payment\r\nExpected Result:\r\n1. The order number should be displayed correctly\r\n2. The total amount should be displayed as that noted in the Payment Page\r\n3. The client name should be displayed correctly\r\n4. The various credit card options available for payment should be displayed\r\n5. Credit card payment page should be displayed\r\n15. 1. Login to PVO database\r\n2. Execute the following query\r\n    select * from pvo.TDC_ORDER where ORDER_ID=Order Id\r\nExpected Result:\r\nThe transaction details should be displayed correctly.\r\n\r\nThe status of the order should be 'TS'",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the Single tickets GPL site at the following URL \r\n2. Click on the Buy tickets link corresponding to a an event \r\n3. Select a price level and the number of tickets required and click on the continue button\r\n4. Click on the continue button\r\n5. Click on the continue button\r\n6. Enter the required billing details under billing/mailing address and select any delivery method\r\n7. Verify that the following details are displayed correctly\r\n1. The order number\r\n2. The total amount\r\n3. The client name\r\n4.The credit card to be used for payment should be displayed as MASTERCARD\r\n\r\nEnter the Fake credit card details such as:\r\nCredit card holder name:\r\nCard number:\r\nExpiry date\r\nIssue number\r\n\r\nClick on the Payment button\r\n8. Verify that the Details of the Order such as \r\n1. Order number\r\n2. Total Charged \r\n3. Client Details\r\n4. Reference number\r\nshould be displayed correctly\r\n9. Verify the following in the Confirmation page\r\n1. The Billing details should be displayed as entered in the payment page\r\n2. The delivery method and the credit card details as selected in the payment page.\r\n3. The confirmation number and the total amount paid\r\n10. Call \r\n11. In the Paymnet section verify that the radio button For Ogone Payment is shown with the text -Payment Via Ogone\r\n12. 1.Verify the total amount shown and note the total amount\r\n2.Select the  Buy Tickets button\r\n13. Verify the Email received from Ogone.\r\n1. The buyer data like billing name and address should be displayed as entered in the payment page\r\n2. Order date,Order reference,order payment reference, total amount charged should be displayed correctly\r\n3.  The status should be displayed as '9-Payment Requested'\r\n4. The credit card details should be displayed as entered in the ogone payment page\r\n14. Verify the following in the Ogon Payment page:\r\n1. The order number should be displayed correctly\r\n2. The total amount should be displayed as that noted in the Payment Page\r\n3. The client name should be displayed correctly\r\n4. The various credit card options available for payment should be displayed\r\n\r\nSelect Master Card as the Credit card for payment\r\n15. 1. Login to PVO database\r\n2. Execute the following query\r\n    select * from pvo.TDC_ORDER where ORDER_ID=Order Id",
        "expected": "1. The site should be launched successfully\r\n2. The user should be displayed the different price levels for the event\r\n3. The selected seat details should be displayed\r\n4. The selected seat details along with the total price should be displayed\r\n5. The user should be prompted to enter the billing details\r\n6. The entered details should be visible\r\n7. The details should be enetered\r\n8. The Details of the Order such as \r\n1. Order number\r\n2. Total Charged \r\n3. Client Details\r\n4. Reference number\r\nshould be displayed correctly\r\n\r\nThe user should be navigate to the Confirmation Page.\r\n9. The confirmation page with the following details should be displayed correctly\r\n1. The Billing details should be displayed as entered in the payment page\r\n2. The delivery method and credit card details as selected in the payment page.\r\n3. The confirmation numberand the total amount paid\r\n10. \r\n11. The radio button corresponding to Payment Via Ogone should be displayed\r\n12. The amount should be noted and the user should be navigated to Ogone payment page.\r\n13. In the Email received from Ogone the following details should be displayed\r\n1. The buyer data like billing name and address should be displayed as entered in the payment page\r\n2. Order date,Order reference,order payment reference, total amount charged should be displayed correctly\r\n3.  The status should be displayed as '9-Payment Requested'\r\n4. The credit card details should be displayed as entered in the ogone payment page\r\n14. 1. The order number should be displayed correctly\r\n2. The total amount should be displayed as that noted in the Payment Page\r\n3. The client name should be displayed correctly\r\n4. The various credit card options available for payment should be displayed\r\n5. Credit card payment page should be displayed\r\n15. The transaction details should be displayed correctly.\r\n\r\nThe status of the order should be 'TS'"
      }
    ],
    "custom_jiras": "52"
  },
  {
    "id": 30692737,
    "title": "Verify user is able switch from DUDC payment method to Ogone payment method",
    "section_id": 1684987,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10346",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C151357",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Launch GPL single tickets application with PVM BOTS using the following URL :\r\nExpected Result:\r\nThe application should be launched.\r\n2. 1.Select number of tickets from the drop down list \r\n2. Select Price Level as Best Available.\r\n3. Click on Continue button.\r\nExpected Result:\r\nNumber verification/Recaptcha page should be displayed\r\n3. 1. Enter the Number/image displayed in the number verification/Recaptcha image.\n2. Click the continue button.\r\nExpected Result:\r\nThe ticket price details page should be displayed.\r\n4. Click the Continue button.\r\nExpected Result:\r\nThe shopping cart page should be displayed.\r\n5. Click the Continue button.\r\nExpected Result:\r\nLog In or Register page should be displayed.\r\n6. 1. Select choice button against I already have an account.\r\n2. Enter E-mail address: \r\nPassword: \r\n3. Click on Login button\r\nExpected Result:\r\nThe payment page should be displayed.\r\n7. Verify the UI at the top side of the Payment page.\r\nExpected Result:\r\n1. There should be three tabs Selection, Payment and Confirmation, to indicate the page progress. \r\n2. The Payment tab should be the highlighted one in the page progress indicator band.\r\n8. Select the DUDC radio button from the list.The user shoudl be able to enter the user details and click on Submit button\r\nExpected Result:\r\nThe user should be able to enter the details in the field and on clicking Submit button the user shoudl be navigated back to the Payment page.\r\n9. verify whether the user should be able to see the payment grid which displays the DUDC payment details.\r\nExpected Result:\r\nThe user should be able to view the DUDC details shown in the payment grid.\r\n10. Select the Ogone payment method radio button.\r\nExpected Result:\r\nThe user should be navigated to the pop up with fields already populated with the user details, the user will be asked to enter  the Card details.\r\n11. Click on Cancel button present in the pop up.\r\nExpected Result:\r\nThe user should be navigated to the payment page,with the DUDC payment radio button selected.\r\n12. verify the details shown in the payment grid\r\nExpected Result:\r\nThe user should be shown with the details of the DUDC payment details in the payment grid.\r\n13. Verify the prices in the Summary Grid.\r\nExpected Result:\r\nAll the prices in the Summary Grid including the Total price should be displayed correctly along with the correct currency symbols.\r\n14. Click on Buy Tickets in the Summary frame\r\nExpected Result:\r\nThanks for your Order page should be displayed with the following Details:\r\nBill To: (Address, Payment Details)\r\nDeliver To: (Patron, Shipping Details)\r\nConfirmation no. : (Bots Patron Id / Order no.)\r\n15. Verify the transaction details in PVM BOTS\r\nExpected Result:\r\nTransaction details should be updated correctly in BOTS\r\n16. 1. Login to PVO database\r\n2. Execute the following query\r\n    select * from pvo.TDC_ORDER where ORDER_ID=Order Id\r\nExpected Result:\r\nThe transaction details should be displayed correctly.\r\n\r\nThe status of the order should be 'TC'",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch GPL single tickets application with PVM BOTS using the following URL :\r\n2. 1.Select number of tickets from the drop down list \r\n2. Select Price Level as Best Available.\r\n3. Click on Continue button.\r\n3. 1. Enter the Number/image displayed in the number verification/Recaptcha image.\n2. Click the continue button.\r\n4. Click the Continue button.\r\n5. Click the Continue button.\r\n6. 1. Select choice button against I already have an account.\r\n2. Enter E-mail address: \r\nPassword: \r\n3. Click on Login button\r\n7. Verify the UI at the top side of the Payment page.\r\n8. Select the DUDC radio button from the list.The user shoudl be able to enter the user details and click on Submit button\r\n9. verify whether the user should be able to see the payment grid which displays the DUDC payment details.\r\n10. Select the Ogone payment method radio button.\r\n11. Click on Cancel button present in the pop up.\r\n12. verify the details shown in the payment grid\r\n13. Verify the prices in the Summary Grid.\r\n14. Click on Buy Tickets in the Summary frame\r\n15. Verify the transaction details in PVM BOTS\r\n16. 1. Login to PVO database\r\n2. Execute the following query\r\n    select * from pvo.TDC_ORDER where ORDER_ID=Order Id",
        "expected": "1. The application should be launched.\r\n2. Number verification/Recaptcha page should be displayed\r\n3. The ticket price details page should be displayed.\r\n4. The shopping cart page should be displayed.\r\n5. Log In or Register page should be displayed.\r\n6. The payment page should be displayed.\r\n7. 1. There should be three tabs Selection, Payment and Confirmation, to indicate the page progress. \r\n2. The Payment tab should be the highlighted one in the page progress indicator band.\r\n8. The user should be able to enter the details in the field and on clicking Submit button the user shoudl be navigated back to the Payment page.\r\n9. The user should be able to view the DUDC details shown in the payment grid.\r\n10. The user should be navigated to the pop up with fields already populated with the user details, the user will be asked to enter  the Card details.\r\n11. The user should be navigated to the payment page,with the DUDC payment radio button selected.\r\n12. The user should be shown with the details of the DUDC payment details in the payment grid.\r\n13. All the prices in the Summary Grid including the Total price should be displayed correctly along with the correct currency symbols.\r\n14. Thanks for your Order page should be displayed with the following Details:\r\nBill To: (Address, Payment Details)\r\nDeliver To: (Patron, Shipping Details)\r\nConfirmation no. : (Bots Patron Id / Order no.)\r\n15. Transaction details should be updated correctly in BOTS\r\n16. The transaction details should be displayed correctly.\r\n\r\nThe status of the order should be 'TC'"
      }
    ],
    "custom_jiras": "54"
  },
  {
    "id": 30692738,
    "title": "Verify that  fake card number is not persisted  in the patron_card_info table after completing Ogone transaction using VISA card",
    "section_id": 1684987,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12300",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C151358",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Launch single tickets application with the following URL \r\n\r\nExpected Result:\r\nThe application should be launched.\r\n2. 1.Select a number from the drop down list as >.\r\n2. Select Price Level as Best Available.\r\n3. Click on Continue button.\r\nExpected Result:\r\nTicket reserve page with price detaisl  should be displayed\r\n3. Click the continue button.\r\nExpected Result:\r\nThe shopping cart page should be displayed.\r\n4. Click the continue button.\r\nExpected Result:\r\nThe payment page should be displayed\r\n5. On the payment page , select Ogone as payment method, enter the user details with the below details\r\n\r\n1.First name \r\n Last name \r\n Add 1 \r\n City, Postal Code \r\n State \r\n\r\nclick on \"BIJWERKEN\".\r\n\r\nEnter the email address,\r\n Email Confirm Email \r\n Phone \r\n\r\n2.Select delivery method as Tickets@Home.\r\n\r\nClick on Continue.\r\nExpected Result:\r\nAll the details should be entered successfully\r\n6. In payment page select Visa card as credit card and complete the payment\r\nExpected Result:\r\nTransaction should be completed successfully.\r\n7. Connect to PVO DB\r\nExpected Result:\r\nPVO DB should be connected\r\n8. Run the query 'select * from pvo.PATRON_CARD_INFO where PATRON_ID='XXXXXX'\r\nExpected Result:\r\nFake cc number hash value should not persisted in card number column",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch single tickets application with the following URL \r\n\r\n2. 1.Select a number from the drop down list as >.\r\n2. Select Price Level as Best Available.\r\n3. Click on Continue button.\r\n3. Click the continue button.\r\n4. Click the continue button.\r\n5. On the payment page , select Ogone as payment method, enter the user details with the below details\r\n\r\n1.First name \r\n Last name \r\n Add 1 \r\n City, Postal Code \r\n State \r\n\r\nclick on \"BIJWERKEN\".\r\n\r\nEnter the email address,\r\n Email Confirm Email \r\n Phone \r\n\r\n2.Select delivery method as Tickets@Home.\r\n\r\nClick on Continue.\r\n6. In payment page select Visa card as credit card and complete the payment\r\n7. Connect to PVO DB\r\n8. Run the query 'select * from pvo.PATRON_CARD_INFO where PATRON_ID='XXXXXX'",
        "expected": "1. The application should be launched.\r\n2. Ticket reserve page with price detaisl  should be displayed\r\n3. The shopping cart page should be displayed.\r\n4. The payment page should be displayed\r\n5. All the details should be entered successfully\r\n6. Transaction should be completed successfully.\r\n7. PVO DB should be connected\r\n8. Fake cc number hash value should not persisted in card number column"
      }
    ],
    "custom_jiras": "58"
  },
  {
    "id": 30692739,
    "title": "Verify Will call pick up at kiosk.",
    "section_id": 1684988,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-9207",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C153131",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1. Launch maintenance site and login:\r\n2. Add (or verify subagencies are added) two supplier subagencies KIOSK_QA and KIOSK_NEW to the supplier\nadd KIOSK_QA as the sub-agency code for Kiosk\nadd (or verify)  KIOSK_NEW as the sub-agency in the WILL_CALL_SUPPLIER table for the supplier\nComplete a ticket sale in BOTS and  PVO (through the web ) with Will call delivery method\nverify the will call order is coming in the Will Call search\nOpen Kiosk and try to pick up",
    "custom_test_purpose": null,
    "custom_steps": "1. Step 1: Add or verify two supplier subagencies KIOSK_QA and KIOSK_NEW to the supplier\r\nExpected Result:\r\nKIOSK_Qa and KIOSK_NEW sub_agencies should be defined at the supplier\r\n2. Step 2: add or verify KIOSK_QA is the sub-agency code for Kiosk\r\nExpected Result:\r\nThe KIOSK_QA subagency should be defined for the supplier\r\n3. Step 3: add  or verify KIOSK_NEW i s the sub-agency in the WILL_CALL_SUPPLIER table for the supplier\r\nExpected Result:\r\nThe subagency should be added to supplier.\r\n4. Step 4: Complete a tickets in BOTS and PVO with Will call delivery method\r\nExpected Result:\r\nThe ticket sales should be completed.\r\n5. Step 5: verify the will call order is coming in the Will Call search\r\nExpected Result:\r\nthe will call order should be coming in the Will Call search\r\n6. Step 6:Open Kiosk and try to pick up\r\nExpected Result:\r\nthe pick up should be successful.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Step 1: Add or verify two supplier subagencies KIOSK_QA and KIOSK_NEW to the supplier\r\n2. Step 2: add or verify KIOSK_QA is the sub-agency code for Kiosk\r\n3. Step 3: add  or verify KIOSK_NEW i s the sub-agency in the WILL_CALL_SUPPLIER table for the supplier\r\n4. Step 4: Complete a tickets in BOTS and PVO with Will call delivery method\r\n5. Step 5: verify the will call order is coming in the Will Call search\r\n6. Step 6:Open Kiosk and try to pick up",
        "expected": "1. KIOSK_Qa and KIOSK_NEW sub_agencies should be defined at the supplier\r\n2. The KIOSK_QA subagency should be defined for the supplier\r\n3. The subagency should be added to supplier.\r\n4. The ticket sales should be completed.\r\n5. the will call order should be coming in the Will Call search\r\n6. the pick up should be successful."
      }
    ],
    "custom_jiras": "51.1"
  },
  {
    "id": 30692740,
    "title": "Purchase tickets using KIOSK using the best available method",
    "section_id": 1684988,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10790",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C153132",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set up an event for KIOSK\r\n2. Turn on the following two pokemon properties \r\na. tdc.kiosk.test.fake_cc_swipe\r\nb. tdc.kiosk.test.edit_fake_cc_data\n1. Open the VNC viewer\r\n2. Enter the IP address : in the Server text field\r\n(10.11.1.202)\r\n2. Click on OK button \r\n3. Enter the password:\r\n4. Click on OK button\nClick on Purchase tickets button\nClick on an MLB event\n1. select a price scale :\r\n2. Select the Number of seats:\r\n3. Click on Continue button\nSelect the buyer type and number of seats for each buyer type \nClick on Continue buton\nClick on Continue button\n1. Enter the five digit ZIP code:\n2. Click on Simulate swipe button\n1. Enter the card data in the text field:\r\n\r\n2. Click on Submit button\nVerify the status of the order in the maintanence site under Order tab.\nCall",
    "custom_test_purpose": null,
    "custom_steps": "1. Precondition:1. Set up an event for KIOSK\r\n2. Turn on the following two pokemon properties \r\na. tdc.kiosk.test.fake_cc_swipe\r\nb. tdc.kiosk.test.edit_fake_cc_data\r\nExpected Result:\r\nPre-requisite should be successful\r\n2. Step 3 :Launch KIOSK\r\nExpected Result:\r\nKIOSK window should be launched\r\n3. Step 4:Purchase tickets\r\nExpected Result:\r\nEvent list page should be displayed\r\n4. Step 5:Select the event\r\nExpected Result:\r\nPrice scale selection page should be displayed\r\n5. Step 6:select a price sclae\r\nExpected Result:\r\nBuyer type selection page should be displayed\r\n6. Step 7:Select a buyer type\r\nExpected Result:\r\nShopping cart page should be displayed\r\n7. Step 8:Continue to Payment page\r\nExpected Result:\r\nPayment page should be displayed\r\n8. Step 9:Simulate swipe\r\nExpected Result:\r\nA pop up with the fake card data should be displayed\r\n9. Step 10:Complete the transaction\r\nExpected Result:\r\n1. Transaction should be completed successfully\n2. Order number should be displayed\n3. Tickets should be printed\r\n10. Step 11:Step 14:Verify the order id in the maint.site\r\nExpected Result:\r\nThe systeme should display the status of the order as \"CE\" for the cancelled order and as \"TS\" for the offer accepted.\r\n11. Call",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Precondition:1. Set up an event for KIOSK\r\n2. Turn on the following two pokemon properties \r\na. tdc.kiosk.test.fake_cc_swipe\r\nb. tdc.kiosk.test.edit_fake_cc_data\r\n2. Step 3 :Launch KIOSK\r\n3. Step 4:Purchase tickets\r\n4. Step 5:Select the event\r\n5. Step 6:select a price sclae\r\n6. Step 7:Select a buyer type\r\n7. Step 8:Continue to Payment page\r\n8. Step 9:Simulate swipe\r\n9. Step 10:Complete the transaction\r\n10. Step 11:Step 14:Verify the order id in the maint.site\r\n11. Call",
        "expected": "1. Pre-requisite should be successful\r\n2. KIOSK window should be launched\r\n3. Event list page should be displayed\r\n4. Price scale selection page should be displayed\r\n5. Buyer type selection page should be displayed\r\n6. Shopping cart page should be displayed\r\n7. Payment page should be displayed\r\n8. A pop up with the fake card data should be displayed\r\n9. 1. Transaction should be completed successfully\n2. Order number should be displayed\n3. Tickets should be printed\r\n10. The systeme should display the status of the order as \"CE\" for the cancelled order and as \"TS\" for the offer accepted.\r\n11."
      }
    ],
    "custom_jiras": "54.1"
  },
  {
    "id": 30692741,
    "title": "Verify that will call order is written into PVO database after purchasing a will call order with a credit card having name on card longer than 50 characters",
    "section_id": 1684988,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15938",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C153133",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Add a credit card with a name on card longer than 50 characters\r\nExpected Result:\r\nThe Credit card should be added with the name_on_card value greater than 50 characters\r\n2. Purchase a will call order in PV with that credit card. \r\nExpected Result:\r\nThe event should be purchased with Will call pickup method\r\n3. Make sure the order gets picked up with the will call upload thread and written to the PVO database in the will_call_order table.\r\nExpected Result:\r\nin PVO Data base the name_on card should be saved correct manner",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Add a credit card with a name on card longer than 50 characters\r\n2. Purchase a will call order in PV with that credit card. \r\n3. Make sure the order gets picked up with the will call upload thread and written to the PVO database in the will_call_order table.",
        "expected": "1. The Credit card should be added with the name_on_card value greater than 50 characters\r\n2. The event should be purchased with Will call pickup method\r\n3. in PVO Data base the name_on card should be saved correct manner"
      }
    ],
    "custom_jiras": "65"
  },
  {
    "id": 30692742,
    "title": "Verify the UI and functionality of Seating map button in the KIOSK purchase flow",
    "section_id": 1684988,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10790",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C153134",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "15769\n14235",
    "custom_test_purpose": null,
    "custom_steps": "1. Call \r\n2. Verify the status of the order in the maintanence site under Order tab.\r\nExpected Result:\r\nThe systeme should display the status of the order as \"CE\" for the cancelled order and as \"TS\" for the offer accepted.\r\n3. 1.Set up an event for KIOSK\r\n2. Turn on the following two pokemon properties \r\na. tdc.kiosk.test.fake_cc_swipe\r\nb. tdc.kiosk.test.edit_fake_cc_data\r\nExpected Result:\r\nPre-requisite should be successful\r\n4. Call \r\n5. 1. Open the VNC viewer\r\n2. Enter the IP address : in the Server text field\r\n(10.11.1.202)\r\n2. Click on OK button \r\n3. Enter the password:\r\n4. Click on OK button\r\nExpected Result:\r\nKIOSK window should be launched\r\n6. Click on Purchase tickets button\r\nExpected Result:\r\nEvent list page should be displayed\r\n7. Click on an MLB event\r\nExpected Result:\r\nPrice scale selection page should be displayed\r\n8. 1. select a price scale :\r\n2. Select the Number of seats:\r\n3. Click on Continue button\r\nExpected Result:\r\nBuyer type selection page should be displayed\r\n9. Select the buyer type and number of seats for each buyer type \nClick on Continue buton\r\nExpected Result:\r\nShopping cart page should be displayed\r\n10. Verify that the following seat details are displayed correctly in the shopping cart.\r\n1.Type \r\n2.Section \r\n3. Row \r\n4.Seat \r\n5. Price\r\n6.Pick these seats Button\r\nExpected Result:\r\nThe following seat details should be displayed correctly in the shopping cart:\r\n1.Type \r\n2.Section \r\n3. Row \r\n4.Seat \r\n5. Price\r\n6.Pick these seats Button\r\n11. Click on Continue button\r\nExpected Result:\r\nPayment page should be displayed\r\n12. 1. Enter the five digit ZIP code:\n2. Click on Simulate swipe button\r\nExpected Result:\r\nA pop up with the fake card data should be displayed\r\n13. 1. Enter the card data in the text field:\r\n\r\n2. Click on Submit button\r\nExpected Result:\r\n1. Transaction should be completed successfully\n2. Order number should be displayed\n3. Tickets should be printed\r\n14. 1.Verify the display of Map Button \r\n2.Verify the Functionality of the Seat Map Button\r\n3.Verify the UI in the seat map page\r\nExpected Result:\r\n1.The seat map button should be displayed in the left column.\r\n2.On Clicking the Seat Map buton the Map Image should be displayed\r\n3.The seat map page should contain the text \"Please view your seat(s) in the stadium. Select Continue to proceed with the Purchase\r\n4.Timer should be displayed\r\n5.Close Button should be displayed\r\n15. 1.Verify the display of Map Button \r\n2.Verify the Functionality of the Seat Map Button\r\n3.Verify the UI in the seat map page\r\nExpected Result:\r\n1.The seat map button should be displayed in the left column.\r\n2.On Clicking the Seat Map buton the Map Image should be displayed\r\n3.The seat map page should contain the text \"Please view your seat(s) in the stadium. Select Continue to proceed with the Purchase\r\n4.Timer should be displayed\r\n5.Close Button should be displayed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Call \r\n2. Verify the status of the order in the maintanence site under Order tab.\r\n3. 1.Set up an event for KIOSK\r\n2. Turn on the following two pokemon properties \r\na. tdc.kiosk.test.fake_cc_swipe\r\nb. tdc.kiosk.test.edit_fake_cc_data\r\n4. Call \r\n5. 1. Open the VNC viewer\r\n2. Enter the IP address : in the Server text field\r\n(10.11.1.202)\r\n2. Click on OK button \r\n3. Enter the password:\r\n4. Click on OK button\r\n6. Click on Purchase tickets button\r\n7. Click on an MLB event\r\n8. 1. select a price scale :\r\n2. Select the Number of seats:\r\n3. Click on Continue button\r\n9. Select the buyer type and number of seats for each buyer type \nClick on Continue buton\r\n10. Verify that the following seat details are displayed correctly in the shopping cart.\r\n1.Type \r\n2.Section \r\n3. Row \r\n4.Seat \r\n5. Price\r\n6.Pick these seats Button\r\n11. Click on Continue button\r\n12. 1. Enter the five digit ZIP code:\n2. Click on Simulate swipe button\r\n13. 1. Enter the card data in the text field:\r\n\r\n2. Click on Submit button\r\n14. 1.Verify the display of Map Button \r\n2.Verify the Functionality of the Seat Map Button\r\n3.Verify the UI in the seat map page\r\n15. 1.Verify the display of Map Button \r\n2.Verify the Functionality of the Seat Map Button\r\n3.Verify the UI in the seat map page",
        "expected": "1. \r\n2. The systeme should display the status of the order as \"CE\" for the cancelled order and as \"TS\" for the offer accepted.\r\n3. Pre-requisite should be successful\r\n4. \r\n5. KIOSK window should be launched\r\n6. Event list page should be displayed\r\n7. Price scale selection page should be displayed\r\n8. Buyer type selection page should be displayed\r\n9. Shopping cart page should be displayed\r\n10. The following seat details should be displayed correctly in the shopping cart:\r\n1.Type \r\n2.Section \r\n3. Row \r\n4.Seat \r\n5. Price\r\n6.Pick these seats Button\r\n11. Payment page should be displayed\r\n12. A pop up with the fake card data should be displayed\r\n13. 1. Transaction should be completed successfully\n2. Order number should be displayed\n3. Tickets should be printed\r\n14. 1.The seat map button should be displayed in the left column.\r\n2.On Clicking the Seat Map buton the Map Image should be displayed\r\n3.The seat map page should contain the text \"Please view your seat(s) in the stadium. Select Continue to proceed with the Purchase\r\n4.Timer should be displayed\r\n5.Close Button should be displayed\r\n15. 1.The seat map button should be displayed in the left column.\r\n2.On Clicking the Seat Map buton the Map Image should be displayed\r\n3.The seat map page should contain the text \"Please view your seat(s) in the stadium. Select Continue to proceed with the Purchase\r\n4.Timer should be displayed\r\n5.Close Button should be displayed"
      }
    ],
    "custom_jiras": "54.1"
  },
  {
    "id": 30692743,
    "title": "Verify that the Max seat limit is 10 to purchase tickets in KIOSK",
    "section_id": 1684988,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10790",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C153135",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "15769\n14235",
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Set up an event for KIOSK\r\n2. Turn on the following two pokemon properties \r\na. tdc.kiosk.test.fake_cc_swipe\r\nb. tdc.kiosk.test.edit_fake_cc_data\r\nExpected Result:\r\nPre-requisite should be successful\r\n2. Call \r\n3. Call \r\n4. 1. Open the VNC viewer\r\n2. Enter the IP address : in the Server text field\r\n(10.11.1.202)\r\n2. Click on OK button \r\n3. Enter the password:\r\n4. Click on OK button\r\nExpected Result:\r\nKIOSK window should be launched\r\n5. Click on Purchase tickets button\r\nExpected Result:\r\nEvent list page should be displayed\r\n6. Click on an MLB event\r\nExpected Result:\r\nPrice scale selection page should be displayed\r\n7. 1. Navigate to the seat selection page\r\n2.Select more than 10 seats and continue\r\n3.Verify the Max seat limit error message when more than 10 seats are selected.\r\nExpected Result:\r\nAn error indicating Max seat limit should be displayed to the patron",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Set up an event for KIOSK\r\n2. Turn on the following two pokemon properties \r\na. tdc.kiosk.test.fake_cc_swipe\r\nb. tdc.kiosk.test.edit_fake_cc_data\r\n2. Call \r\n3. Call \r\n4. 1. Open the VNC viewer\r\n2. Enter the IP address : in the Server text field\r\n(10.11.1.202)\r\n2. Click on OK button \r\n3. Enter the password:\r\n4. Click on OK button\r\n5. Click on Purchase tickets button\r\n6. Click on an MLB event\r\n7. 1. Navigate to the seat selection page\r\n2.Select more than 10 seats and continue\r\n3.Verify the Max seat limit error message when more than 10 seats are selected.",
        "expected": "1. Pre-requisite should be successful\r\n2. \r\n3. \r\n4. KIOSK window should be launched\r\n5. Event list page should be displayed\r\n6. Price scale selection page should be displayed\r\n7. An error indicating Max seat limit should be displayed to the patron"
      }
    ],
    "custom_jiras": "54.1"
  },
  {
    "id": 30692744,
    "title": "Verify in sellseats call PVO sends CVV value as null or empty to PV for card authorization if CVVE is set to false",
    "section_id": 1684988,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13853",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C153136",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite:-\r\nCVVE should be set to false.\r\nCVVR  should be set to false.\r\n2. Login to kiosk and navigate upto payment \r\npage.\r\nExpected Result:\r\n>User should be able to login to the \r\napplication\r\n>Payment page should be displayed\r\n3. Verify in logs, PVO sending a null/empty value in \r\nthe card_security_code element of SellSeats to \r\nPV.\r\nExpected Result:\r\nPVO should be send a null/empty value in the \r\ncard_security_code element of SellSeats to PV.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite:-\r\nCVVE should be set to false.\r\nCVVR  should be set to false.\r\n2. Login to kiosk and navigate upto payment \r\npage.\r\n3. Verify in logs, PVO sending a null/empty value in \r\nthe card_security_code element of SellSeats to \r\nPV.",
        "expected": "1. \r\n2. >User should be able to login to the \r\napplication\r\n>Payment page should be displayed\r\n3. PVO should be send a null/empty value in the \r\ncard_security_code element of SellSeats to PV."
      }
    ],
    "custom_jiras": "60"
  },
  {
    "id": 30692745,
    "title": "Verify CVV field is shown as mandatory field when CVVR is set to true at Sub Agency level",
    "section_id": 1684988,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13333",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_refs": "C153137",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite:-\r\nSet CVVE = true at  kiosk sub agency level\r\nSet CVVR = true at  kiosk sub agency level\r\n2. Login to kiosk and navigate upto payment page.\r\nExpected Result:\r\n>User should be able to login to the application\r\n>Payment page should be displayed\r\n3. Verify a seprate text box is  displayed in payment \r\npage, to enter CVV value.\r\nExpected Result:\r\nSeperate Textbox for cvv value should be \r\ndisplayed in payment page\r\n4. Verify the CVV field is shown as mandatory field\r\nExpected Result:\r\nCVV field should be shown as mandatory \r\nfield.\r\n5. Verify the error message displayed when user \r\nnot entering the CVV code\r\nExpected Result:\r\nValid error mssage should be displayed\r\n6. Enter the CVV code and complete the transaction\r\nExpected Result:\r\nTransaction should be completed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite:-\r\nSet CVVE = true at  kiosk sub agency level\r\nSet CVVR = true at  kiosk sub agency level\r\n2. Login to kiosk and navigate upto payment page.\r\n3. Verify a seprate text box is  displayed in payment \r\npage, to enter CVV value.\r\n4. Verify the CVV field is shown as mandatory field\r\n5. Verify the error message displayed when user \r\nnot entering the CVV code\r\n6. Enter the CVV code and complete the transaction",
        "expected": "1. \r\n2. >User should be able to login to the application\r\n>Payment page should be displayed\r\n3. Seperate Textbox for cvv value should be \r\ndisplayed in payment page\r\n4. CVV field should be shown as mandatory \r\nfield.\r\n5. Valid error mssage should be displayed\r\n6. Transaction should be completed"
      }
    ],
    "custom_jiras": "60"
  },
  {
    "id": 30692746,
    "title": "Verify CVV field does not display in payment page by setting CVVE to false at Sub Agency level",
    "section_id": 1684988,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13333",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_refs": "C153138",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite:-\r\nSet CVVE = false at kiosk sub agency level\r\n2. Login to kiosk and navigate upto payment page.\r\nExpected Result:\r\n>User should be able to login to the application\r\n>Payment page should be displayed\r\n3. Verify a seprate text box is not displayed in \r\npayment page, to enter CVV value.\r\nExpected Result:\r\nSeperate Textbox for cvv value should not be \r\ndisplayed in payment page\r\n4. complete the transaction\r\nExpected Result:\r\nTransaction should be completed\r\n5. verify the log details (Sell seats and lockbest call)\r\nExpected Result:\r\nDetails should be displayed correctly. security \r\ncode should be sent null or empty",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite:-\r\nSet CVVE = false at kiosk sub agency level\r\n2. Login to kiosk and navigate upto payment page.\r\n3. Verify a seprate text box is not displayed in \r\npayment page, to enter CVV value.\r\n4. complete the transaction\r\n5. verify the log details (Sell seats and lockbest call)",
        "expected": "1. \r\n2. >User should be able to login to the application\r\n>Payment page should be displayed\r\n3. Seperate Textbox for cvv value should not be \r\ndisplayed in payment page\r\n4. Transaction should be completed\r\n5. Details should be displayed correctly. security \r\ncode should be sent null or empty"
      }
    ],
    "custom_jiras": "60"
  },
  {
    "id": 30692747,
    "title": "Verify in sellseats call PVO sends CVV value to PV for card authorization",
    "section_id": 1684988,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13333",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 9,
    "custom_is_automated": false,
    "custom_refs": "C153139",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite:-\r\nCVVE should be set to true.\r\nCVVR  should be set to true.\r\n2. Login to kiosk and navigate upto payment \r\npage.\r\nExpected Result:\r\n>User should be able to login to the \r\napplication\r\n>Payment page should be displayed\r\n3. verify a seprate text box displayed in \r\npayment page, to enter CVV value.\r\nExpected Result:\r\nTextbox for cvv value should be displayed in \r\npayment page\r\n4. Enter the cvv code and complete the transaction\r\nExpected Result:\r\nTransaction should be completed\r\n5. Verify in logs, whether CVV value is passed \r\nto PVO successfully.Inturn sellseats call PVO \r\nsends CVV value to PV for card \r\nauthorization.\r\nExpected Result:\r\nCVV value should be passed to PVO \r\nsuccessfully\r\n>In Sellseats call, PVO should send CVV value to \r\nPV for card authorization.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite:-\r\nCVVE should be set to true.\r\nCVVR  should be set to true.\r\n2. Login to kiosk and navigate upto payment \r\npage.\r\n3. verify a seprate text box displayed in \r\npayment page, to enter CVV value.\r\n4. Enter the cvv code and complete the transaction\r\n5. Verify in logs, whether CVV value is passed \r\nto PVO successfully.Inturn sellseats call PVO \r\nsends CVV value to PV for card \r\nauthorization.",
        "expected": "1. \r\n2. >User should be able to login to the \r\napplication\r\n>Payment page should be displayed\r\n3. Textbox for cvv value should be displayed in \r\npayment page\r\n4. Transaction should be completed\r\n5. CVV value should be passed to PVO \r\nsuccessfully\r\n>In Sellseats call, PVO should send CVV value to \r\nPV for card authorization."
      }
    ],
    "custom_jiras": "60"
  },
  {
    "id": 30692748,
    "title": "Verify will call orders within the valid date range specified are displayed on clicking Search button",
    "section_id": 1684988,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12882",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 10,
    "custom_is_automated": false,
    "custom_refs": "C153140",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the maint site link and login\r\nExpected Result:\r\nuser should be able to loggin to the application successfully.\r\n2. Navigate to Operations -> will call search option\r\nExpected Result:\r\nUser should be able to navigate to will call search option and will call search page should be displayed as expected.\r\n3. Verify --Select-- is added to  Search Type drop down on Will call search page and it is the default\r\nExpected Result:\r\n--Select-- should be added to  Search Type drop down on Will call search page and it should be the default as expected.\r\n4. Select any of the item in Search Type drop down and verify 'Search' field is displayed below the Search Type drop down\r\nExpected Result:\r\nUser is able to select any of the item in Search Type drop down \r\nIf user select any of the item, 'Search' field should be displayed below the Search Type drop down as expected.\r\n5. Verify Date range field with Start and end date field is displayed on Will call search page\r\nExpected Result:\r\nDate range field with Start and end date field should be displayed on Will call search page\r\n6. Enter valid time range and click on search\r\nExpected Result:\r\nAll will call orders within the valid date range specified are displayed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the maint site link and login\r\n2. Navigate to Operations -> will call search option\r\n3. Verify --Select-- is added to  Search Type drop down on Will call search page and it is the default\r\n4. Select any of the item in Search Type drop down and verify 'Search' field is displayed below the Search Type drop down\r\n5. Verify Date range field with Start and end date field is displayed on Will call search page\r\n6. Enter valid time range and click on search",
        "expected": "1. user should be able to loggin to the application successfully.\r\n2. User should be able to navigate to will call search option and will call search page should be displayed as expected.\r\n3. --Select-- should be added to  Search Type drop down on Will call search page and it should be the default as expected.\r\n4. User is able to select any of the item in Search Type drop down \r\nIf user select any of the item, 'Search' field should be displayed below the Search Type drop down as expected.\r\n5. Date range field with Start and end date field should be displayed on Will call search page\r\n6. All will call orders within the valid date range specified are displayed"
      }
    ],
    "custom_jiras": "59.1"
  },
  {
    "id": 30692749,
    "title": "Swipe the Driving license in Kiosk and verify the Will call order in the Will call search",
    "section_id": 1684988,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10409",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 11,
    "custom_is_automated": false,
    "custom_refs": "C153141",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "14235",
    "custom_test_purpose": null,
    "custom_steps": "1. 1. Open the VNC viewer\r\n2. Enter the IP address : in the Server text field\r\n(10.11.1.63)\r\n2. Click on OK button \r\n3. Enter the password:\r\n4. Click on OK button\r\nExpected Result:\r\nKIOSK window should be launched\r\n2. Click on Purchase tickets button\r\nExpected Result:\r\nEvent list page should be displayed\r\n3. Click on the event\r\nExpected Result:\r\nPrice scale selection page should be displayed\r\n4. 1. select a price scale :\r\n2. Select the Number of seats:\r\n3. Click on Continue button\r\nExpected Result:\r\nBuyer type selection page should be displayed\r\n5. Select the buyer type and number of seats for each buyer type \nClick on Continue buton\r\nExpected Result:\r\nShopping cart page should be displayed\r\n6. Click on Continue button\r\nExpected Result:\r\nPayment page should be displayed\r\n7. 1. Enter the five digit ZIP code:\n2. Click on Simulate swipe button\r\nExpected Result:\r\nA pop up with the fake card data should be displayed\r\n8. 1. Enter the card data in the text field:\r\n\r\n2. Click on Submit button\r\nExpected Result:\r\n1. Transaction should be completed successfully\n2. Order number should be displayed\n3. Tickets should be printed\r\n9. Verify the DB, the state name and ID are updated in the coresponding tables.\r\nExpected Result:\r\nThe state name and ID should be updated in the corresponding tables.\r\n10. Launch the maintanence site and search for the orderi n will call order search\r\nExpected Result:\r\nThe user should be able to see the will call order.\r\n11. Call",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Open the VNC viewer\r\n2. Enter the IP address : in the Server text field\r\n(10.11.1.63)\r\n2. Click on OK button \r\n3. Enter the password:\r\n4. Click on OK button\r\n2. Click on Purchase tickets button\r\n3. Click on the event\r\n4. 1. select a price scale :\r\n2. Select the Number of seats:\r\n3. Click on Continue button\r\n5. Select the buyer type and number of seats for each buyer type \nClick on Continue buton\r\n6. Click on Continue button\r\n7. 1. Enter the five digit ZIP code:\n2. Click on Simulate swipe button\r\n8. 1. Enter the card data in the text field:\r\n\r\n2. Click on Submit button\r\n9. Verify the DB, the state name and ID are updated in the coresponding tables.\r\n10. Launch the maintanence site and search for the orderi n will call order search\r\n11. Call",
        "expected": "1. KIOSK window should be launched\r\n2. Event list page should be displayed\r\n3. Price scale selection page should be displayed\r\n4. Buyer type selection page should be displayed\r\n5. Shopping cart page should be displayed\r\n6. Payment page should be displayed\r\n7. A pop up with the fake card data should be displayed\r\n8. 1. Transaction should be completed successfully\n2. Order number should be displayed\n3. Tickets should be printed\r\n9. The state name and ID should be updated in the corresponding tables.\r\n10. The user should be able to see the will call order.\r\n11."
      }
    ],
    "custom_jiras": "54.2"
  },
  {
    "id": 30692750,
    "title": "GPL Purchase tickets through KIOSK",
    "section_id": 1684988,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 12,
    "custom_is_automated": false,
    "custom_refs": "C153142",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "14235",
    "custom_test_purpose": null,
    "custom_steps": "1. 1. Set up an event for KIOSK\r\n2. Turn on the following two pokemon properties \r\na. tdc.kiosk.test.fake_cc_swipe\r\nb. tdc.kiosk.test.edit_fake_cc_data\r\n2. 1. Open the VNC viewer\r\n2. Enter the IP address : in the Server text field\r\n(10.11.1.202)\r\n2. Click on OK button \r\n3. Enter the password:\r\n4. Click on OK button\r\nExpected Result:\r\nKIOSK window should be launched\r\n3. Click on Purchase tickets button\r\nExpected Result:\r\nEvent list page should be displayed\r\n4. Click on a GPL event\r\nExpected Result:\r\nPrice scale selection page should be displayed\r\n5. 1. select a price scale :\r\n2. Select the Number of seats:\r\n3. Click on Continue button\r\nExpected Result:\r\nBuyer type selection page should be displayed\r\n6. Select the buyer type and number of seats for each buyer type \nClick on Continue buton\r\nExpected Result:\r\nShopping cart page should be displayed\r\n7. Click on Continue button\r\nExpected Result:\r\nPayment page should be displayed\r\n8. 1. Enter the five digit ZIP code:\n2. Click on Simulate swipe button\r\nExpected Result:\r\nA pop up with the fake card data should be displayed\r\n9. 1. Enter the card data in the text field:\r\n\r\n2. Click on Submit button\r\nExpected Result:\r\n1. Transaction should be completed successfully\n2. Order number should be displayed\n3. Tickets should be printed\r\n10. Call",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Set up an event for KIOSK\r\n2. Turn on the following two pokemon properties \r\na. tdc.kiosk.test.fake_cc_swipe\r\nb. tdc.kiosk.test.edit_fake_cc_data\r\n2. 1. Open the VNC viewer\r\n2. Enter the IP address : in the Server text field\r\n(10.11.1.202)\r\n2. Click on OK button \r\n3. Enter the password:\r\n4. Click on OK button\r\n3. Click on Purchase tickets button\r\n4. Click on a GPL event\r\n5. 1. select a price scale :\r\n2. Select the Number of seats:\r\n3. Click on Continue button\r\n6. Select the buyer type and number of seats for each buyer type \nClick on Continue buton\r\n7. Click on Continue button\r\n8. 1. Enter the five digit ZIP code:\n2. Click on Simulate swipe button\r\n9. 1. Enter the card data in the text field:\r\n\r\n2. Click on Submit button\r\n10. Call",
        "expected": "1. \r\n2. KIOSK window should be launched\r\n3. Event list page should be displayed\r\n4. Price scale selection page should be displayed\r\n5. Buyer type selection page should be displayed\r\n6. Shopping cart page should be displayed\r\n7. Payment page should be displayed\r\n8. A pop up with the fake card data should be displayed\r\n9. 1. Transaction should be completed successfully\n2. Order number should be displayed\n3. Tickets should be printed\r\n10."
      }
    ],
    "custom_jiras": "54"
  },
  {
    "id": 30692751,
    "title": "MLB Purchase tickets through KIOSK",
    "section_id": 1684988,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 13,
    "custom_is_automated": false,
    "custom_refs": "C153143",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "14235",
    "custom_test_purpose": null,
    "custom_steps": "1. 1. Set up an event for KIOSK\r\n2. Turn on the following two pokemon properties \r\na. tdc.kiosk.test.fake_cc_swipe\r\nb. tdc.kiosk.test.edit_fake_cc_data\r\n2. 1. Open the VNC viewer\r\n2. Enter the IP address : in the Server text field\r\n(10.11.1.202)\r\n2. Click on OK button \r\n3. Enter the password:\r\n4. Click on OK button\r\nExpected Result:\r\nKIOSK window should be launched\r\n3. Click on Purchase tickets button\r\nExpected Result:\r\nEvent list page should be displayed\r\n4. Click on an MLB event\r\nExpected Result:\r\nPrice scale selection page should be displayed\r\n5. 1. select a price scale :\r\n2. Select the Number of seats:\r\n3. Click on Continue button\r\nExpected Result:\r\nBuyer type selection page should be displayed\r\n6. Select the buyer type and number of seats for each buyer type \nClick on Continue buton\r\nExpected Result:\r\nShopping cart page should be displayed\r\n7. Click on Continue button\r\nExpected Result:\r\nPayment page should be displayed\r\n8. 1. Enter the five digit ZIP code:\n2. Click on Simulate swipe button\r\nExpected Result:\r\nA pop up with the fake card data should be displayed\r\n9. 1. Enter the card data in the text field:\r\n\r\n2. Click on Submit button\r\nExpected Result:\r\n1. Transaction should be completed successfully\n2. Order number should be displayed\n3. Tickets should be printed\r\n10. Call",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Set up an event for KIOSK\r\n2. Turn on the following two pokemon properties \r\na. tdc.kiosk.test.fake_cc_swipe\r\nb. tdc.kiosk.test.edit_fake_cc_data\r\n2. 1. Open the VNC viewer\r\n2. Enter the IP address : in the Server text field\r\n(10.11.1.202)\r\n2. Click on OK button \r\n3. Enter the password:\r\n4. Click on OK button\r\n3. Click on Purchase tickets button\r\n4. Click on an MLB event\r\n5. 1. select a price scale :\r\n2. Select the Number of seats:\r\n3. Click on Continue button\r\n6. Select the buyer type and number of seats for each buyer type \nClick on Continue buton\r\n7. Click on Continue button\r\n8. 1. Enter the five digit ZIP code:\n2. Click on Simulate swipe button\r\n9. 1. Enter the card data in the text field:\r\n\r\n2. Click on Submit button\r\n10. Call",
        "expected": "1. \r\n2. KIOSK window should be launched\r\n3. Event list page should be displayed\r\n4. Price scale selection page should be displayed\r\n5. Buyer type selection page should be displayed\r\n6. Shopping cart page should be displayed\r\n7. Payment page should be displayed\r\n8. A pop up with the fake card data should be displayed\r\n9. 1. Transaction should be completed successfully\n2. Order number should be displayed\n3. Tickets should be printed\r\n10."
      }
    ],
    "custom_jiras": "54"
  },
  {
    "id": 30692752,
    "title": "Verify PVO is correctly encoding special characters  in the XML send to Accertify",
    "section_id": 1684989,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12281",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C151359",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Set accertify.disable_accertify property to false \r\n2.Set DACCVLD, DO_ACCERTIFY_VALIDATION to true  at Supplier level\r\n3.Enable debug on com.tickets.application.orderworker.accertify.AccertifyHttpTransporter on the app tier\r\n4. Enable com.tickets.application.orderworker.AccertifyProcessThread in background JVM (ie. port 8080)\r\n5.Set ACCEMAIL\r\n6.Set the below properties at App tier\r\naccertify.webservices.host_url = https://icnow01.accertify.net/icNowImport/18c1b078-b30e-432f-b98d-bb25d4ac5a18\r\naccertify.partner_username =tdc.import.user.test\r\naccertify.partner_password = TDcTEstUS3r387$\r\n7.The patron should have a card on file , where First Name, Last Name,Address1.Address2,City fields have special characters like ', \" , & etc.\r\nExpected Result:\r\nPre-requisite should be met\r\n2. Launch the single tickets application link\r\nExpected Result:\r\nAvailability page is displayed\r\n3. Select seats and continue till Payment page\r\nExpected Result:\r\nPayment page is displayed\r\n4. In Payment page, select card mentioned in Pre-requisite and complete transaction\r\nExpected Result:\r\nConfirmation page should be displayed\r\n5. Verify  the Accertify call was made by capturing the PVO log message\r\n\r\nVerify special characters are encoded correctly in the XML request send to Accertify\r\n\r\n\"   &quot;\r\n'   &apos;\r\n<   &lt;\r\n>   &gt;\r\n&   &amp\r\nExpected Result:\r\nAccertify call should be made and all the values in each node in XML doc is correct\r\n\r\nSpecial characters should be encoded correctly in the XML request send to Accertify\r\n6. 1.Note the order id\r\n2. Verify ACCVLDRT text code in order_text contians status as 'success'\r\nExpected Result:\r\nACCVLDRT text code in order_text contians status as 'success'",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Set accertify.disable_accertify property to false \r\n2.Set DACCVLD, DO_ACCERTIFY_VALIDATION to true  at Supplier level\r\n3.Enable debug on com.tickets.application.orderworker.accertify.AccertifyHttpTransporter on the app tier\r\n4. Enable com.tickets.application.orderworker.AccertifyProcessThread in background JVM (ie. port 8080)\r\n5.Set ACCEMAIL\r\n6.Set the below properties at App tier\r\naccertify.webservices.host_url = https://icnow01.accertify.net/icNowImport/18c1b078-b30e-432f-b98d-bb25d4ac5a18\r\naccertify.partner_username =tdc.import.user.test\r\naccertify.partner_password = TDcTEstUS3r387$\r\n7.The patron should have a card on file , where First Name, Last Name,Address1.Address2,City fields have special characters like ', \" , & etc.\r\n2. Launch the single tickets application link\r\n3. Select seats and continue till Payment page\r\n4. In Payment page, select card mentioned in Pre-requisite and complete transaction\r\n5. Verify  the Accertify call was made by capturing the PVO log message\r\n\r\nVerify special characters are encoded correctly in the XML request send to Accertify\r\n\r\n\"   &quot;\r\n'   &apos;\r\n<   &lt;\r\n>   &gt;\r\n&   &amp\r\n6. 1.Note the order id\r\n2. Verify ACCVLDRT text code in order_text contians status as 'success'",
        "expected": "1. Pre-requisite should be met\r\n2. Availability page is displayed\r\n3. Payment page is displayed\r\n4. Confirmation page should be displayed\r\n5. Accertify call should be made and all the values in each node in XML doc is correct\r\n\r\nSpecial characters should be encoded correctly in the XML request send to Accertify\r\n6. ACCVLDRT text code in order_text contians status as 'success'"
      }
    ],
    "custom_jiras": "56.2"
  },
  {
    "id": 30692753,
    "title": "Verify  unit_price node in Accertify call contians amount of each offer",
    "section_id": 1684989,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12279",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C151360",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Set accertify.disable_accertify property to false \r\n2.Set DACCVLD, DO_ACCERTIFY_VALIDATION to true  at Supplier level\r\n3.Enable debug on com.tickets.application.orderworker.accertify.AccertifyHttpTransporter on the app tier\r\n4. Enable com.tickets.application.orderworker.AccertifyProcessThread in background JVM (ie. port 8080)\r\n5.Set ACCEMAIL\r\n6.Set the below properties at App tier\r\naccertify.webservices.host_url = https://icnow01.accertify.net/icNowImport/18c1b078-b30e-432f-b98d-bb25d4ac5a18\r\naccertify.partner_username =tdc.import.user.test\r\naccertify.partner_password = TDcTEstUS3r387$\r\n7.Enable per offer fee\r\nExpected Result:\r\nPre-requisite should be met\r\n2. Launch the single tickets application link\r\nExpected Result:\r\nAvailability page is displayed\r\n3. 1.Select seats and continue till Shopping cart\r\n2.Add multiple offers in cart\r\nExpected Result:\r\nUser should be able to add multiple offers\r\n4. 1.Continue from shopping cart\r\n2.Log in using valid credentials\r\nExpected Result:\r\nPayment page is displayed\r\n5. Fill in all required fields in Payment page and click on Buy Tickets button\r\nExpected Result:\r\nConfirmation page should be displayed\r\n6. Verify unit_price node in Accertify call contians amount of each offer including fee\r\nExpected Result:\r\nunit_price node in Accertify call should contian amount of each offer including fee\r\n7. 1.Note the order id\r\n2. Verify ACCVLDRT text code in order_text contians status as 'success'\r\nExpected Result:\r\nACCVLDRT text code in order_text contians status as 'success'",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Set accertify.disable_accertify property to false \r\n2.Set DACCVLD, DO_ACCERTIFY_VALIDATION to true  at Supplier level\r\n3.Enable debug on com.tickets.application.orderworker.accertify.AccertifyHttpTransporter on the app tier\r\n4. Enable com.tickets.application.orderworker.AccertifyProcessThread in background JVM (ie. port 8080)\r\n5.Set ACCEMAIL\r\n6.Set the below properties at App tier\r\naccertify.webservices.host_url = https://icnow01.accertify.net/icNowImport/18c1b078-b30e-432f-b98d-bb25d4ac5a18\r\naccertify.partner_username =tdc.import.user.test\r\naccertify.partner_password = TDcTEstUS3r387$\r\n7.Enable per offer fee\r\n2. Launch the single tickets application link\r\n3. 1.Select seats and continue till Shopping cart\r\n2.Add multiple offers in cart\r\n4. 1.Continue from shopping cart\r\n2.Log in using valid credentials\r\n5. Fill in all required fields in Payment page and click on Buy Tickets button\r\n6. Verify unit_price node in Accertify call contians amount of each offer including fee\r\n7. 1.Note the order id\r\n2. Verify ACCVLDRT text code in order_text contians status as 'success'",
        "expected": "1. Pre-requisite should be met\r\n2. Availability page is displayed\r\n3. User should be able to add multiple offers\r\n4. Payment page is displayed\r\n5. Confirmation page should be displayed\r\n6. unit_price node in Accertify call should contian amount of each offer including fee\r\n7. ACCVLDRT text code in order_text contians status as 'success'"
      }
    ],
    "custom_jiras": "56.2"
  },
  {
    "id": 30692754,
    "title": "Verify Billing info for billing node is from the credit card used for payment If the patron has multiple cards with different billing address",
    "section_id": 1684989,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12279",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C151361",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Set accertify.disable_accertify property to false \r\n2.Set DACCVLD, DO_ACCERTIFY_VALIDATION to true  at Supplier level\r\n3.Enable debug on com.tickets.application.orderworker.accertify.AccertifyHttpTransporter on the app tier\r\n4. Enable com.tickets.application.orderworker.AccertifyProcessThread in background JVM (ie. port 8080)\r\n5.Set ACCEMAIL\r\n6.Set the below properties at App tier\r\naccertify.webservices.host_url = https://icnow01.accertify.net/icNowImport/18c1b078-b30e-432f-b98d-bb25d4ac5a18\r\naccertify.partner_username =tdc.import.user.test\r\naccertify.partner_password = TDcTEstUS3r387$\r\n7. Patron should have multiple cards on file, and each of those cards has a different billing address\r\n8. Set PRISACE to true\r\nExpected Result:\r\nPre-requisite should be met\r\n2. Launch the single tickets application link (New UI)\r\nExpected Result:\r\nAvailability page is displayed\r\n3. Select seats and continue till Payment page\r\nExpected Result:\r\nPayment page is displayed\r\n4. 1.In Payment page,select a card other than the first one listed on the page \r\n2.Fill in all required fields and click on Buy Tickets\r\nExpected Result:\r\nConfirmation page should be displayed\r\n5. Verify Billing node and Shipping node in Accertify call contains the billing info from the credit card used for payment.\r\nExpected Result:\r\nBilling node and Shipping node in Accertify call contains the billing info from the credit card used for payment.\r\n6. 1.Note the order id\r\n2. Verify ACCVLDRT text code in order_text contians status as 'success'\r\nExpected Result:\r\nACCVLDRT text code in order_text contians status as 'success'",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Set accertify.disable_accertify property to false \r\n2.Set DACCVLD, DO_ACCERTIFY_VALIDATION to true  at Supplier level\r\n3.Enable debug on com.tickets.application.orderworker.accertify.AccertifyHttpTransporter on the app tier\r\n4. Enable com.tickets.application.orderworker.AccertifyProcessThread in background JVM (ie. port 8080)\r\n5.Set ACCEMAIL\r\n6.Set the below properties at App tier\r\naccertify.webservices.host_url = https://icnow01.accertify.net/icNowImport/18c1b078-b30e-432f-b98d-bb25d4ac5a18\r\naccertify.partner_username =tdc.import.user.test\r\naccertify.partner_password = TDcTEstUS3r387$\r\n7. Patron should have multiple cards on file, and each of those cards has a different billing address\r\n8. Set PRISACE to true\r\n2. Launch the single tickets application link (New UI)\r\n3. Select seats and continue till Payment page\r\n4. 1.In Payment page,select a card other than the first one listed on the page \r\n2.Fill in all required fields and click on Buy Tickets\r\n5. Verify Billing node and Shipping node in Accertify call contains the billing info from the credit card used for payment.\r\n6. 1.Note the order id\r\n2. Verify ACCVLDRT text code in order_text contians status as 'success'",
        "expected": "1. Pre-requisite should be met\r\n2. Availability page is displayed\r\n3. Payment page is displayed\r\n4. Confirmation page should be displayed\r\n5. Billing node and Shipping node in Accertify call contains the billing info from the credit card used for payment.\r\n6. ACCVLDRT text code in order_text contians status as 'success'"
      }
    ],
    "custom_jiras": "56.2"
  },
  {
    "id": 30692755,
    "title": "Verify the order is not rejected by Accertify if external perf description contains br",
    "section_id": 1684989,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12279",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C151362",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set accertify.disable_accertify property to false \r\n2.Set DACCVLD, DO_ACCERTIFY_VALIDATION to true  at Supplier level\r\n3.Enable debug on com.tickets.application.orderworker.accertify.AccertifyHttpTransporter on the app tier\r\n4. Enable com.tickets.application.orderworker.AccertifyProcessThread in background JVM (ie. port 8080)\r\n5.Set ACCEMAIL\r\n6.Set the below properties at App tier\r\naccertify.webservices.host_url = https://icnow01.accertify.net/icNowImport/18c1b078-b30e-432f-b98d-bb25d4ac5a18\r\naccertify.partner_username =tdc.import.user.test\r\naccertify.partner_password = TDcTEstUS3r387$\r\n7. Patron should have multiple cards on file, and each of those cards has a different billing address\r\n8. Set PRISACE to true\r\n\r\nHave an event contain  tag in external description",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the single tickets application link in the Prerequisite\r\nExpected Result:\r\nAvailability page is displayed\r\n2. Select seats and continue till Payment page\r\nExpected Result:\r\nPayment page is displayed\r\n3. 1.In Payment page,select a card other than the first one listed on the page \n2.Fill in all required fields and click on Buy Tickets\r\nExpected Result:\r\nConfirmation page should be displayed\r\n4. Verify Billing node and Shipping node in Accertify call contains the billing info from the credit card used for payment.\r\nExpected Result:\r\nBilling node and Shipping node in Accertify call contains the billing info from the credit card used for payment.\r\n5. 1.Note the order id\n2. Verify ACCVLDRT text code in order_text contians status as 'success'\r\nExpected Result:\r\nACCVLDRT text code in order_text contians status as 'success'",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the single tickets application link in the Prerequisite\r\n2. Select seats and continue till Payment page\r\n3. 1.In Payment page,select a card other than the first one listed on the page \n2.Fill in all required fields and click on Buy Tickets\r\n4. Verify Billing node and Shipping node in Accertify call contains the billing info from the credit card used for payment.\r\n5. 1.Note the order id\n2. Verify ACCVLDRT text code in order_text contians status as 'success'",
        "expected": "1. Availability page is displayed\r\n2. Payment page is displayed\r\n3. Confirmation page should be displayed\r\n4. Billing node and Shipping node in Accertify call contains the billing info from the credit card used for payment.\r\n5. ACCVLDRT text code in order_text contians status as 'success'"
      }
    ],
    "custom_jiras": "56.2"
  },
  {
    "id": 30692756,
    "title": "Verify cancelled offers are not included in the request sent to Accertify",
    "section_id": 1684989,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12279",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C151363",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Set accertify.disable_accertify property to false \r\n2.Set DACCVLD, DO_ACCERTIFY_VALIDATION to true  at Supplier level\r\n3.Enable debug on com.tickets.application.orderworker.accertify.AccertifyHttpTransporter on the app tier\r\n4. Enable com.tickets.application.orderworker.AccertifyProcessThread in background JVM (ie. port 8080)\r\n5.Set ACCEMAIL\r\n6.Set the below properties at App tier\r\naccertify.webservices.host_url = https://icnow01.accertify.net/icNowImport/18c1b078-b30e-432f-b98d-bb25d4ac5a18\r\naccertify.partner_username =tdc.import.user.test\r\naccertify.partner_password = TDcTEstUS3r387$\r\nExpected Result:\r\nPre-requisite should be met\r\n2. Launch the single tickets application link\r\nExpected Result:\r\nAvailability page is displayed\r\n3. 1.Select seats and continue till Shopping cart\r\n2.Add multiple offers in cart\r\nExpected Result:\r\nUser should be able to add multiple offers\r\n4. 1.Continue from shopping cart\r\n2.Log in using valid credentials\r\nExpected Result:\r\nPayment page is displayed\r\n5. Verify offers with Status_code TC or CE are not passed in XML request to Accertify\r\nExpected Result:\r\nOffers with Status_code TC or CE should not be passed in XML request to Accertify\r\n6. 1.Note the order id\r\n2. Verify ACCVLDRT text code in order_text contians status as 'success'\r\nExpected Result:\r\nACCVLDRT text code in order_text contians status as 'success'\r\n7. 1. Click on 'Shopping cart' link at the top of Payment page\r\nExpected Result:\r\nUser should be navigated back to Shopping cart\r\n8. Remove one or more offers\r\nExpected Result:\r\nUser should be able to remove offers\r\n9. 1.Continue from shopping cart\r\n2.Fill in all required fields in Payment page and click on Buy Tickets button\r\nExpected Result:\r\nConfirmation page should be displayed\r\n10. Run the query select * from pvo.offer where order_id= and note down Status_Code of each offer",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Set accertify.disable_accertify property to false \r\n2.Set DACCVLD, DO_ACCERTIFY_VALIDATION to true  at Supplier level\r\n3.Enable debug on com.tickets.application.orderworker.accertify.AccertifyHttpTransporter on the app tier\r\n4. Enable com.tickets.application.orderworker.AccertifyProcessThread in background JVM (ie. port 8080)\r\n5.Set ACCEMAIL\r\n6.Set the below properties at App tier\r\naccertify.webservices.host_url = https://icnow01.accertify.net/icNowImport/18c1b078-b30e-432f-b98d-bb25d4ac5a18\r\naccertify.partner_username =tdc.import.user.test\r\naccertify.partner_password = TDcTEstUS3r387$\r\n2. Launch the single tickets application link\r\n3. 1.Select seats and continue till Shopping cart\r\n2.Add multiple offers in cart\r\n4. 1.Continue from shopping cart\r\n2.Log in using valid credentials\r\n5. Verify offers with Status_code TC or CE are not passed in XML request to Accertify\r\n6. 1.Note the order id\r\n2. Verify ACCVLDRT text code in order_text contians status as 'success'\r\n7. 1. Click on 'Shopping cart' link at the top of Payment page\r\n8. Remove one or more offers\r\n9. 1.Continue from shopping cart\r\n2.Fill in all required fields in Payment page and click on Buy Tickets button\r\n10. Run the query select * from pvo.offer where order_id= and note down Status_Code of each offer",
        "expected": "1. Pre-requisite should be met\r\n2. Availability page is displayed\r\n3. User should be able to add multiple offers\r\n4. Payment page is displayed\r\n5. Offers with Status_code TC or CE should not be passed in XML request to Accertify\r\n6. ACCVLDRT text code in order_text contians status as 'success'\r\n7. User should be navigated back to Shopping cart\r\n8. User should be able to remove offers\r\n9. Confirmation page should be displayed\r\n10."
      }
    ],
    "custom_jiras": "56.2"
  },
  {
    "id": 30692757,
    "title": "Verify the emails are delivered to the list in ACCEMAIL for failed communication_DO_ACCERTIFY_VALIDATION  true_Resale",
    "section_id": 1684989,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-11985",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C151364",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Set accertify.disable_accertify property to false \r\n2.Set DACCVLD, DO_ACCERTIFY_VALIDATION to true  at Supplier level\r\n3.Enable debug on com.tickets.application.orderworker.accertify.AccertifyHttpTransporter on the app tier\r\n4. Enable com.tickets.application.orderworker.AccertifyProcessThread in background JVM (ie. port 8080)\r\n5.Set ACCEMAIL with a list of email ids\r\n6.Set SDSC with a list of email ids different than ACCEMAIL list\r\n7.Set tdc.logging.to_email_address to a different email id\r\n8.Set invalid URL in accertify.webservices.host_url \r\n9.Set the below properties at App tier\r\naccertify.partner_username =tdc.import.user.test\r\naccertify.partner_password = TDcTEstUS3r387$\r\n7.Setup for Mytickets Resale should be in place\r\n8.Mytickets should be set to Old UI\r\nExpected Result:\r\nPre-requisite should be met\r\n2. Login to the Mytickets account of a patron\r\nExpected Result:\r\nPatron is logged in successfully\r\n3. 1.Select the tickets from Inventory page\r\n2.Click on Resale button\r\n3.Enter Seller Proceeds $\r\n4.Enter comments\r\n5.Click on Submit button\r\n6.Click on Save Offer button\r\nExpected Result:\r\nPatron should be able to creat a Resale offer\r\n4. Login to Mytickets account of another patron\r\nExpected Result:\r\nPatron is logged in successfully\r\n5. 1.Navigate to Replay\r\n2.Click on Event Description\r\n3.Select offer\r\n4.Click on Continue to Purchase button\r\n5.Select Delivery method\r\n6.Enter valid Credit card details\r\n7.Click on Buy Tickets button\r\nExpected Result:\r\nUser is shown Credit card Auth failed error message\r\n6. Verify  the Accertify call was made by capturing the PVO log message\r\n\r\nVerify all nodes in the XML doc \r\n1.\r\n2.\r\n3.  - this will be the same as the billing address data for MLB/GPL\r\n4.\r\n  4.1 -the unique orderID\r\n  4.2 -total price of the entire order\r\n  4.3 -shipping charge\r\n5.\r\n   5.1 -this can be null for MLB/GPL\r\n   5.2  -the TIXX patron ID\r\nExpected Result:\r\nAccertify call should be made and all the values in each node in XML doc is correct\r\n7. 1.Note the order id\r\n2. Verify ACCVLDRT text code in order_text contians status as 'failed'\r\nExpected Result:\r\nACCVLDRT text code in order_text contians status as 'failed'\r\n8. Verify email communicating failed communcation is sent to the list set in ACCEMAIL\r\nExpected Result:\r\nEmail communicating failed communcation is sent to the list set in ACCEMAIL\r\n9. Verify no email communicating failed communcation is sent to the email id set in tdc.logging.to_email_address and SDSC\r\nExpected Result:\r\nNo email communicating failed communcation is sent to the email id set in tdc.logging.to_email_address and SDSC",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Set accertify.disable_accertify property to false \r\n2.Set DACCVLD, DO_ACCERTIFY_VALIDATION to true  at Supplier level\r\n3.Enable debug on com.tickets.application.orderworker.accertify.AccertifyHttpTransporter on the app tier\r\n4. Enable com.tickets.application.orderworker.AccertifyProcessThread in background JVM (ie. port 8080)\r\n5.Set ACCEMAIL with a list of email ids\r\n6.Set SDSC with a list of email ids different than ACCEMAIL list\r\n7.Set tdc.logging.to_email_address to a different email id\r\n8.Set invalid URL in accertify.webservices.host_url \r\n9.Set the below properties at App tier\r\naccertify.partner_username =tdc.import.user.test\r\naccertify.partner_password = TDcTEstUS3r387$\r\n7.Setup for Mytickets Resale should be in place\r\n8.Mytickets should be set to Old UI\r\n2. Login to the Mytickets account of a patron\r\n3. 1.Select the tickets from Inventory page\r\n2.Click on Resale button\r\n3.Enter Seller Proceeds $\r\n4.Enter comments\r\n5.Click on Submit button\r\n6.Click on Save Offer button\r\n4. Login to Mytickets account of another patron\r\n5. 1.Navigate to Replay\r\n2.Click on Event Description\r\n3.Select offer\r\n4.Click on Continue to Purchase button\r\n5.Select Delivery method\r\n6.Enter valid Credit card details\r\n7.Click on Buy Tickets button\r\n6. Verify  the Accertify call was made by capturing the PVO log message\r\n\r\nVerify all nodes in the XML doc \r\n1.\r\n2.\r\n3.  - this will be the same as the billing address data for MLB/GPL\r\n4.\r\n  4.1 -the unique orderID\r\n  4.2 -total price of the entire order\r\n  4.3 -shipping charge\r\n5.\r\n   5.1 -this can be null for MLB/GPL\r\n   5.2  -the TIXX patron ID\r\n7. 1.Note the order id\r\n2. Verify ACCVLDRT text code in order_text contians status as 'failed'\r\n8. Verify email communicating failed communcation is sent to the list set in ACCEMAIL\r\n9. Verify no email communicating failed communcation is sent to the email id set in tdc.logging.to_email_address and SDSC",
        "expected": "1. Pre-requisite should be met\r\n2. Patron is logged in successfully\r\n3. Patron should be able to creat a Resale offer\r\n4. Patron is logged in successfully\r\n5. User is shown Credit card Auth failed error message\r\n6. Accertify call should be made and all the values in each node in XML doc is correct\r\n7. ACCVLDRT text code in order_text contians status as 'failed'\r\n8. Email communicating failed communcation is sent to the list set in ACCEMAIL\r\n9. No email communicating failed communcation is sent to the email id set in tdc.logging.to_email_address and SDSC"
      }
    ],
    "custom_jiras": "56.1"
  },
  {
    "id": 30692758,
    "title": "Verify user is shown VWR page when logging in prior to the akamai redirect is added and throttle value set as 0",
    "section_id": 1684990,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12809",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C151365",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Call [C77411]",
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite :\n\nThe MTRURL text code should be set in Org_Text for the single ticket sales OrgID with  the MyTickets OrgID value\r\nExpected Result:\r\nPrerequisite should be met\r\n2. Launch the Chelsea Mytickets link and log in\r\nExpected Result:\r\nPatron is logged in\r\n3. Navigate to Schedule page by Clicking Buy Tickets tab and Buy Tickets button on the page\r\nExpected Result:\r\nSchedule page is displayed\r\n4. On the QA web servers set the property \n        22573.frontline.orgid_redirect = frontline.lxpvoqa1.tickets.com\r\nExpected Result:\r\nThe property is set successfully\r\n5. Via the Akamai maint page, choose LXPVOQA1, and set the percentage value to 0.\r\nExpected Result:\r\nSuccessfully updated the % value\r\n6. Click on Buy tickets button against any event on Schedule page and verify VWR page is shown\r\nExpected Result:\r\nVWR page is shown\r\n7. Launch the Chelsea Mytickets URL again and verify VWR is shown\r\nExpected Result:\r\nVWR page is shown",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite :\n\nThe MTRURL text code should be set in Org_Text for the single ticket sales OrgID with  the MyTickets OrgID value\r\n2. Launch the Chelsea Mytickets link and log in\r\n3. Navigate to Schedule page by Clicking Buy Tickets tab and Buy Tickets button on the page\r\n4. On the QA web servers set the property \n        22573.frontline.orgid_redirect = frontline.lxpvoqa1.tickets.com\r\n5. Via the Akamai maint page, choose LXPVOQA1, and set the percentage value to 0.\r\n6. Click on Buy tickets button against any event on Schedule page and verify VWR page is shown\r\n7. Launch the Chelsea Mytickets URL again and verify VWR is shown",
        "expected": "1. Prerequisite should be met\r\n2. Patron is logged in\r\n3. Schedule page is displayed\r\n4. The property is set successfully\r\n5. Successfully updated the % value\r\n6. VWR page is shown\r\n7. VWR page is shown"
      }
    ],
    "custom_jiras": "59.1"
  },
  {
    "id": 30692759,
    "title": "Verify user is able to complete ticket purchase when logging in prior to the akamai redirect is added and throttle value is set as 100",
    "section_id": 1684990,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12809",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C151366",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Call [C77411]",
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite :\n\nThe MTRURL text code should be set in Org_Text for the single ticket sales OrgID with  the MyTickets OrgID value\r\nExpected Result:\r\nPrerequisite should be met\r\n2. Launch the Chelsea Mytickets link and log in\r\nExpected Result:\r\nPatron is logged in\r\n3. Navigate to Schedule page by Clicking Buy Tickets tab and Buy Tickets button on the page\r\nExpected Result:\r\nSchedule page is displayed\r\n4. On the QA web servers set the property \n        22573.frontline.orgid_redirect = frontline.lxpvoqa1.tickets.com\r\nExpected Result:\r\nThe property is set successfully\r\n5. Via the Akamai maint page, choose LXPVOQA1, and set the percentage value to 100.\r\nExpected Result:\r\nSuccessfully updated the % value\r\n6. Click on Buy tickets button against any event on Schedule page and verify availability page is shown\r\nExpected Result:\r\nAvailability page is shown\r\n7. Select seats and continue\r\nExpected Result:\r\nShopping cart is displayed\r\n8. Assign F&F members to the seats and click Continue on shopping cart\r\nExpected Result:\r\nPayment page is dispalyed\r\n9. Fill in all required fields in on the payment page and click Buy Tickets button\r\nExpected Result:\r\nTransaction completed successfully and Confirmation page is displayed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite :\n\nThe MTRURL text code should be set in Org_Text for the single ticket sales OrgID with  the MyTickets OrgID value\r\n2. Launch the Chelsea Mytickets link and log in\r\n3. Navigate to Schedule page by Clicking Buy Tickets tab and Buy Tickets button on the page\r\n4. On the QA web servers set the property \n        22573.frontline.orgid_redirect = frontline.lxpvoqa1.tickets.com\r\n5. Via the Akamai maint page, choose LXPVOQA1, and set the percentage value to 100.\r\n6. Click on Buy tickets button against any event on Schedule page and verify availability page is shown\r\n7. Select seats and continue\r\n8. Assign F&F members to the seats and click Continue on shopping cart\r\n9. Fill in all required fields in on the payment page and click Buy Tickets button",
        "expected": "1. Prerequisite should be met\r\n2. Patron is logged in\r\n3. Schedule page is displayed\r\n4. The property is set successfully\r\n5. Successfully updated the % value\r\n6. Availability page is shown\r\n7. Shopping cart is displayed\r\n8. Payment page is dispalyed\r\n9. Transaction completed successfully and Confirmation page is displayed"
      }
    ],
    "custom_jiras": "59.1"
  },
  {
    "id": 30692760,
    "title": "Verify the time out error while purchasing tickets via akamai",
    "section_id": 1684990,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-11297",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C151367",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Call [C77411]",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the single tickets Application using the akamai redirect url for the performance mentioned above\r\nExpected Result:\r\nUser should be taken to the waiting room\r\n2. Click on F Connect icon and login to facebook\r\nExpected Result:\r\nUser should get connected to FB and friends activities should be displayed\r\n3. Refresh the current page by pressing F5 key in Keyboard\r\nExpected Result:\r\nTimer popup should be displayed\r\n4. Click on Continue on the timer popup\r\nExpected Result:\r\nUser should be naviagted to the availabilty page of the event\r\n5. Select desired number of seats and click on Continue button on Availability page\r\nExpected Result:\r\nRe-captcha modal is displayed\r\n6. Enter valid text in Re-captcha modal and click on Continue\r\nExpected Result:\r\nShopping cart is displayed\r\n7. Click on Continue button on Shopping cart\r\nExpected Result:\r\nLogin modal should be displayed\r\n8. Log in as new/existing user\r\nExpected Result:\r\nPayment page should be displayed\r\n9. Stay on payment page and wait for the transaction get timed out\r\n10. Verify when transacton is timed out, user is shown Timeout modal window\r\nExpected Result:\r\nTime out modal window is displayed with a message \" Time has expired and your tickets have been released.Please click Continue to start over \"\r\n11. Click on Continue button on Timeout modal\r\nExpected Result:\r\nUser should be navigated back to Availability page\r\n12. Repeat steps 6 to 9\r\n13. In Payment page, fill in all required fields:\n->Select delivery method\n->Fill in credit card details\n->Select Insurance Yes/No option\n->Select Publicity tracking\nClick on Buy Tickets button\r\nExpected Result:\r\nConfirmation page is displayed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the single tickets Application using the akamai redirect url for the performance mentioned above\r\n2. Click on F Connect icon and login to facebook\r\n3. Refresh the current page by pressing F5 key in Keyboard\r\n4. Click on Continue on the timer popup\r\n5. Select desired number of seats and click on Continue button on Availability page\r\n6. Enter valid text in Re-captcha modal and click on Continue\r\n7. Click on Continue button on Shopping cart\r\n8. Log in as new/existing user\r\n9. Stay on payment page and wait for the transaction get timed out\r\n10. Verify when transacton is timed out, user is shown Timeout modal window\r\n11. Click on Continue button on Timeout modal\r\n12. Repeat steps 6 to 9\r\n13. In Payment page, fill in all required fields:\n->Select delivery method\n->Fill in credit card details\n->Select Insurance Yes/No option\n->Select Publicity tracking\nClick on Buy Tickets button",
        "expected": "1. User should be taken to the waiting room\r\n2. User should get connected to FB and friends activities should be displayed\r\n3. Timer popup should be displayed\r\n4. User should be naviagted to the availabilty page of the event\r\n5. Re-captcha modal is displayed\r\n6. Shopping cart is displayed\r\n7. Login modal should be displayed\r\n8. Payment page should be displayed\r\n9. \r\n10. Time out modal window is displayed with a message \" Time has expired and your tickets have been released.Please click Continue to start over \"\r\n11. User should be navigated back to Availability page\r\n12. \r\n13. Confirmation page is displayed"
      }
    ],
    "custom_jiras": "55"
  },
  {
    "id": 30692761,
    "title": "Verify the calendar is displayed after the timer resets to zero",
    "section_id": 1684990,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-11297",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C151368",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Launch properties site\r\n2.Set akamai redirect property for a single tickets performance\r\nExpected Result:\r\nAkamai redirect propert should be set succesfully for the performance\r\n2. Launch the single tickets Application using the akamai redirect url for the performance mentioned above\r\nExpected Result:\r\nUser should be taken to the waiting room\r\n3. Wait till the timer value becomes zero. click on the links available on calendar and verify the UI and calendar after the timer resets to zero\r\nExpected Result:\r\nCalendar should be displayed even after timer resets to zero",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Launch properties site\r\n2.Set akamai redirect property for a single tickets performance\r\n2. Launch the single tickets Application using the akamai redirect url for the performance mentioned above\r\n3. Wait till the timer value becomes zero. click on the links available on calendar and verify the UI and calendar after the timer resets to zero",
        "expected": "1. Akamai redirect propert should be set succesfully for the performance\r\n2. User should be taken to the waiting room\r\n3. Calendar should be displayed even after timer resets to zero"
      }
    ],
    "custom_jiras": "55"
  },
  {
    "id": 30692762,
    "title": "Purchase more tickets from the confirmation page of a transaction_AKAMAI - Verify default value of text code 322",
    "section_id": 1684990,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10488",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C151369",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Call [C77409]",
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Launch the PVO Maintennace site  uisng the URL:\n2.Enter the username and password and select sign in\r\nExpected Result:\r\nThe site should be launched and the user should be signed in\r\n2. Select the link Operations->Akamai Throttle and verify if the Akamai throttle page is shown with the details as set in the Precondition\r\nExpected Result:\r\nThe user should be shown the Throtlle settings for Akamai domain set in the domain\r\n3. 1.Select the Domain  \"lxpvoqa1\" under Waiting Room (Random) Throttle Value\n2.Set the Throttle value as 100 and select the Update Throttle value\r\nExpected Result:\r\nThe user should be shown that the domain \"lxpvoqa1\" is updated with the value 100\r\n4. 1.Select the Domain  \"lxpvoqa1\" under Waiting Room (FIFO) Throttle Value \n2.Set the Throttle value as -1 and select the Update Throttle value\r\nExpected Result:\r\nThe user should be shown that the domain \"lxpvoqa1\" is updated with the value -1\r\n5. 1.Launch properties site\n2.Set akamai redirect property for a single tickets performance\r\nExpected Result:\r\nAkamai redirect propert should be set succesfully for the performance\r\n6. Launch the single tickets Application using the akamai redirect url for the performance mentioned above\r\nExpected Result:\r\nUser should be taken to the waiting room\r\n7. Click 'Continue'\r\nExpected Result:\r\nUser should be navigated to the seat availablity page\r\n8. 1.Select seats\n2.Click 'Continue'\r\nExpected Result:\r\nRecaptcha window should be displayed\r\n9. 1.Enter Recaptcha\n2.Click 'Continue'\r\nExpected Result:\r\nUser should ne navigated to shopping cart\r\n10. 1.Click 'Continue' and get navigated to login window\n2.Login as existing or new user\r\nExpected Result:\r\nUser should be navigated to delivery method selection page succesfully\r\n11. 1.Choose a delivery method\n2.Enter delivery method details\n3.Click 'Continue'\r\nExpected Result:\r\nUser should be navigated to the payment page\r\n12. 1.Enter payment details\n2.Enter values for all mandatory fields\n3.Click 'Buy Tickets' option to complete the transaction\r\nExpected Result:\r\nTransaction should be completed successfully. User should be shown the Confirmation page\r\n13. Select Buy More Tickets link/button in the Confirmation page\r\nExpected Result:\r\nUser should be navigated to the schedule page\r\n14. Select the same event from the Calendar\r\nExpected Result:\r\nUser should be shown the VWR\r\n15. Select Continue button in the VWR\r\nExpected Result:\r\nUser should be navigated to the Availability page of that event. User should not be shown error message \"Your previous order has already been completed, cancelled, or has experience a technical problem. Therefore, we cannot add more tickets to this order. You must start an entirely new order if you wish to purchase additional tickets.\"\r\n16. Purchase ticket and complete the transaciton\r\nExpected Result:\r\nUser should successfully be able to purchase tickets.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Launch the PVO Maintennace site  uisng the URL:\n2.Enter the username and password and select sign in\r\n2. Select the link Operations->Akamai Throttle and verify if the Akamai throttle page is shown with the details as set in the Precondition\r\n3. 1.Select the Domain  \"lxpvoqa1\" under Waiting Room (Random) Throttle Value\n2.Set the Throttle value as 100 and select the Update Throttle value\r\n4. 1.Select the Domain  \"lxpvoqa1\" under Waiting Room (FIFO) Throttle Value \n2.Set the Throttle value as -1 and select the Update Throttle value\r\n5. 1.Launch properties site\n2.Set akamai redirect property for a single tickets performance\r\n6. Launch the single tickets Application using the akamai redirect url for the performance mentioned above\r\n7. Click 'Continue'\r\n8. 1.Select seats\n2.Click 'Continue'\r\n9. 1.Enter Recaptcha\n2.Click 'Continue'\r\n10. 1.Click 'Continue' and get navigated to login window\n2.Login as existing or new user\r\n11. 1.Choose a delivery method\n2.Enter delivery method details\n3.Click 'Continue'\r\n12. 1.Enter payment details\n2.Enter values for all mandatory fields\n3.Click 'Buy Tickets' option to complete the transaction\r\n13. Select Buy More Tickets link/button in the Confirmation page\r\n14. Select the same event from the Calendar\r\n15. Select Continue button in the VWR\r\n16. Purchase ticket and complete the transaciton",
        "expected": "1. The site should be launched and the user should be signed in\r\n2. The user should be shown the Throtlle settings for Akamai domain set in the domain\r\n3. The user should be shown that the domain \"lxpvoqa1\" is updated with the value 100\r\n4. The user should be shown that the domain \"lxpvoqa1\" is updated with the value -1\r\n5. Akamai redirect propert should be set succesfully for the performance\r\n6. User should be taken to the waiting room\r\n7. User should be navigated to the seat availablity page\r\n8. Recaptcha window should be displayed\r\n9. User should ne navigated to shopping cart\r\n10. User should be navigated to delivery method selection page succesfully\r\n11. User should be navigated to the payment page\r\n12. Transaction should be completed successfully. User should be shown the Confirmation page\r\n13. User should be navigated to the schedule page\r\n14. User should be shown the VWR\r\n15. User should be navigated to the Availability page of that event. User should not be shown error message \"Your previous order has already been completed, cancelled, or has experience a technical problem. Therefore, we cannot add more tickets to this order. You must start an entirely new order if you wish to purchase additional tickets.\"\r\n16. User should successfully be able to purchase tickets."
      }
    ],
    "custom_jiras": "55"
  },
  {
    "id": 30692763,
    "title": "Purchase more tickets from the confirmation page of a transaction_AKAMAI - FIFO VWR Enabled",
    "section_id": 1684990,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10488",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C151370",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Call [C77409]",
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Launch the PVO Maintennace site  uisng the URL:\n2.Enter the username and password and select sign in\r\nExpected Result:\r\nThe site should be launched and the user should be signed in\r\n2. Select the link Operations->Akamai Throttle and verify if the Akamai throttle page is shown with the details as set in the Precondition\r\nExpected Result:\r\nThe user should be shown the Throtlle settings for Akamai domain set in the domain\r\n3. 1.Select the Domain  \"lxpvoqa1\" under Waiting Room (FIFO) Throttle Value\n2.Set the Throttle value as 100 and select the Update Throttle value\r\nExpected Result:\r\nThe user should be shown that the domain \"lxpvoqa1\" is updated with the value 100\r\n4. 1.Select the Domain  \"lxpvoqa1\" under Waiting Room (Random) Throttle Value \n2.Set the Throttle value as -1 and select the Update Throttle value\r\nExpected Result:\r\nThe user should be shown that the domain \"lxpvoqa1\" is updated with the value -1\r\n5. 1.Launch properties site\n2.Set akamai redirect property for a single tickets performance\r\nExpected Result:\r\nAkamai redirect propert should be set succesfully for the performance\r\n6. Launch the single tickets Application using the akamai redirect url for the performance mentioned above\r\nExpected Result:\r\nUser should be taken to the waiting room\r\n7. Click 'Continue'\r\nExpected Result:\r\nUser should be navigated to the seat availablity page\r\n8. 1.Select seats\n2.Click 'Continue'\r\nExpected Result:\r\nRecaptcha window should be displayed\r\n9. 1.Enter Recatcha\n2.Click 'Continue'\r\nExpected Result:\r\nUser should ne navigated to shopping cart\r\n10. 1.Click 'Continue' and get navigated to login window\n2.Login as existing or new user\r\nExpected Result:\r\nUser should be navigated to delivery method selection page succesfully\r\n11. 1.Choose a delivery method\n2.Enter delivery method details\n3.Click 'Continue'\r\nExpected Result:\r\nUser should be navigated to the payment page\r\n12. 1.Enter payment details\n2.Enter values for all mandatory fields\n3.Click 'Buy Tickets' option to complete the transaction\r\nExpected Result:\r\nTransaction should be completed successfully. User should be shown the Confirmation page\r\n13. Select Buy More Tickets link/button in the Confirmation page\r\nExpected Result:\r\nUser should be navigated to the schedule page\r\n14. Select the same event from the Calendar\r\nExpected Result:\r\nUser should be shown the VWR\r\n15. Select Continue button in the VWR\r\nExpected Result:\r\nUser should be navigated to the Availability page of that event. User should not be shown error message \"Your previous order has already been completed, cancelled, or has experience a technical problem. Therefore, we cannot add more tickets to this order. You must start an entirely new order if you wish to purchase additional tickets.\"\r\n16. Navigate to shopping cart\r\nExpected Result:\r\nOn completing recpatcha page user is navigated back to the availabilty page with the error message set for text code 322\r\n17. Set the text code 322 - FRONTLINE_CREDENTIAL_ALREADY_USED_ID = Your current waiting room credential has already been used to purchase tickets.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Launch the PVO Maintennace site  uisng the URL:\n2.Enter the username and password and select sign in\r\n2. Select the link Operations->Akamai Throttle and verify if the Akamai throttle page is shown with the details as set in the Precondition\r\n3. 1.Select the Domain  \"lxpvoqa1\" under Waiting Room (FIFO) Throttle Value\n2.Set the Throttle value as 100 and select the Update Throttle value\r\n4. 1.Select the Domain  \"lxpvoqa1\" under Waiting Room (Random) Throttle Value \n2.Set the Throttle value as -1 and select the Update Throttle value\r\n5. 1.Launch properties site\n2.Set akamai redirect property for a single tickets performance\r\n6. Launch the single tickets Application using the akamai redirect url for the performance mentioned above\r\n7. Click 'Continue'\r\n8. 1.Select seats\n2.Click 'Continue'\r\n9. 1.Enter Recatcha\n2.Click 'Continue'\r\n10. 1.Click 'Continue' and get navigated to login window\n2.Login as existing or new user\r\n11. 1.Choose a delivery method\n2.Enter delivery method details\n3.Click 'Continue'\r\n12. 1.Enter payment details\n2.Enter values for all mandatory fields\n3.Click 'Buy Tickets' option to complete the transaction\r\n13. Select Buy More Tickets link/button in the Confirmation page\r\n14. Select the same event from the Calendar\r\n15. Select Continue button in the VWR\r\n16. Navigate to shopping cart\r\n17. Set the text code 322 - FRONTLINE_CREDENTIAL_ALREADY_USED_ID = Your current waiting room credential has already been used to purchase tickets.",
        "expected": "1. The site should be launched and the user should be signed in\r\n2. The user should be shown the Throtlle settings for Akamai domain set in the domain\r\n3. The user should be shown that the domain \"lxpvoqa1\" is updated with the value 100\r\n4. The user should be shown that the domain \"lxpvoqa1\" is updated with the value -1\r\n5. Akamai redirect propert should be set succesfully for the performance\r\n6. User should be taken to the waiting room\r\n7. User should be navigated to the seat availablity page\r\n8. Recaptcha window should be displayed\r\n9. User should ne navigated to shopping cart\r\n10. User should be navigated to delivery method selection page succesfully\r\n11. User should be navigated to the payment page\r\n12. Transaction should be completed successfully. User should be shown the Confirmation page\r\n13. User should be navigated to the schedule page\r\n14. User should be shown the VWR\r\n15. User should be navigated to the Availability page of that event. User should not be shown error message \"Your previous order has already been completed, cancelled, or has experience a technical problem. Therefore, we cannot add more tickets to this order. You must start an entirely new order if you wish to purchase additional tickets.\"\r\n16. On completing recpatcha page user is navigated back to the availabilty page with the error message set for text code 322\r\n17."
      }
    ],
    "custom_jiras": "55"
  },
  {
    "id": 30692764,
    "title": "Verify tickets can be printed for a single ticket transaction when Multi-Tixx print feature and Akamai are enabled",
    "section_id": 1684990,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-11287",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_refs": "C151371",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequiste : Akami settings should be done for the event\r\nSet the properties \r\nfrontline.authentication.fake_throttle_invalid_orders: true\r\nfrontline.authentication.treat_invalid_orders_as_attack: true\r\nfrontline.authentication.valid_oid_parm_is_enough: false\r\n2. Launch PV MLB single tickets application with the following URL \r\n\r\nExpected Result:\r\nThe application is launched with VWR page\r\n3. 1.Select a number from the drop down list as >.\r\n2. Select Price Level as Best Available.\r\n3. Click on Continue button.\r\nExpected Result:\r\nNumber verification page should be displayed\r\n4. Wait for the turn to navigated to availability page or click Continue button on the VWR page\r\nExpected Result:\r\nAvailability page is shown\r\n5. 1. Enter the Recaptcha  displayed in the Recaptcha  verification image.\r\n2. Click the continue button.\r\nExpected Result:\r\nThe ticket price details page should be displayed.\r\n6. Click the continue button.\r\nExpected Result:\r\nThe shopping cart page should be displayed.\r\n7. Select the Delivery Method :Select \"Print at Home\"\r\nClick on continue\r\nExpected Result:\r\nThe payment page should be displayed\r\n8. Enter value for the following required fields:First name \r\nLast name \r\nAdd 1 \r\nCity, Postal Code \r\nState \r\nEmail Confirm Email \r\nPhone CC Type \r\nCC no >\r\nEXP \r\nCVV \r\nDelivery Method :Select \"Print at Home\"\r\nExpected Result:\r\nThe user should be able to add the payment details successfully\r\n9. Click on Buy Tickets in the Summary frame\r\nExpected Result:\r\nThanks for your Order page should be displayed with the following Details:\r\nBill To: (Address, Payment Details)\r\nDeliver To: (Patron, Shipping Details)\r\nConfirmation no. : (Bots Patron Id / Order no.).\r\nA link \"Click Here to view your tickets @home tickets\" should be present.\r\n10. Click on the link \"Click Here to view your tickets @home tickets\"\r\nExpected Result:\r\nTHe user should be navigated to  Tickets@Home page\r\n11. Select the single ticket and Click on View and Print button\r\nExpected Result:\r\nUser should be able to print the ticket\r\n12. Click on the link to print tickets from confimation mail\r\nClick the View and Print button\r\nExpected Result:\r\nThe ticket should get printed\r\n13. Run the queries:\r\n1. Select * from pvo.payment where order_id=\r\n2.Select * from pvo.offer where order_id=\r\n3.select * from pvo.PATRON_REG where patron_id=\r\nExpected Result:\r\nEnsure that user is able to retrieve data from DB and DB is updated correctly\r\n14. Verify transaction details in BOTS:\r\nEvent and Seat details\r\nPayment details\r\nPatron details\r\nExpected Result:\r\nAll information in BOTS should match with the transaction done in FOTS",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequiste : Akami settings should be done for the event\r\nSet the properties \r\nfrontline.authentication.fake_throttle_invalid_orders: true\r\nfrontline.authentication.treat_invalid_orders_as_attack: true\r\nfrontline.authentication.valid_oid_parm_is_enough: false\r\n2. Launch PV MLB single tickets application with the following URL \r\n\r\n3. 1.Select a number from the drop down list as >.\r\n2. Select Price Level as Best Available.\r\n3. Click on Continue button.\r\n4. Wait for the turn to navigated to availability page or click Continue button on the VWR page\r\n5. 1. Enter the Recaptcha  displayed in the Recaptcha  verification image.\r\n2. Click the continue button.\r\n6. Click the continue button.\r\n7. Select the Delivery Method :Select \"Print at Home\"\r\nClick on continue\r\n8. Enter value for the following required fields:First name \r\nLast name \r\nAdd 1 \r\nCity, Postal Code \r\nState \r\nEmail Confirm Email \r\nPhone CC Type \r\nCC no >\r\nEXP \r\nCVV \r\nDelivery Method :Select \"Print at Home\"\r\n9. Click on Buy Tickets in the Summary frame\r\n10. Click on the link \"Click Here to view your tickets @home tickets\"\r\n11. Select the single ticket and Click on View and Print button\r\n12. Click on the link to print tickets from confimation mail\r\nClick the View and Print button\r\n13. Run the queries:\r\n1. Select * from pvo.payment where order_id=\r\n2.Select * from pvo.offer where order_id=\r\n3.select * from pvo.PATRON_REG where patron_id=\r\n14. Verify transaction details in BOTS:\r\nEvent and Seat details\r\nPayment details\r\nPatron details",
        "expected": "1. \r\n2. The application is launched with VWR page\r\n3. Number verification page should be displayed\r\n4. Availability page is shown\r\n5. The ticket price details page should be displayed.\r\n6. The shopping cart page should be displayed.\r\n7. The payment page should be displayed\r\n8. The user should be able to add the payment details successfully\r\n9. Thanks for your Order page should be displayed with the following Details:\r\nBill To: (Address, Payment Details)\r\nDeliver To: (Patron, Shipping Details)\r\nConfirmation no. : (Bots Patron Id / Order no.).\r\nA link \"Click Here to view your tickets @home tickets\" should be present.\r\n10. THe user should be navigated to  Tickets@Home page\r\n11. User should be able to print the ticket\r\n12. The ticket should get printed\r\n13. Ensure that user is able to retrieve data from DB and DB is updated correctly\r\n14. All information in BOTS should match with the transaction done in FOTS"
      }
    ],
    "custom_jiras": "55"
  },
  {
    "id": 30692765,
    "title": "Verify user is able to print the tickets from Confirmation email on a device, if PID is in Akamai and MOTAHVE= true",
    "section_id": 1684990,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-17863",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_refs": "C151372",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "An event with Akamai setup should be available\r\nSet MOTAHVE= true",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the Single sales URL of above event \r\nExpected Result:\r\nLink should be launched successfully.\r\n2. Verify the user is navigating to Virtual waiting room\r\nExpected Result:\r\nUser should be navigated to Virtual waiting room\r\n3. Click on Continue on Timer Popup and Select seats and complete the transaction with T@H delivery method\r\nExpected Result:\r\nTransaction should be completed.\r\n4. Verify the confirmation email on a device and click print the tickets hyperlink\r\nExpected Result:\r\nTickets should be printed successfully",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the Single sales URL of above event \r\n2. Verify the user is navigating to Virtual waiting room\r\n3. Click on Continue on Timer Popup and Select seats and complete the transaction with T@H delivery method\r\n4. Verify the confirmation email on a device and click print the tickets hyperlink",
        "expected": "1. Link should be launched successfully.\r\n2. User should be navigated to Virtual waiting room\r\n3. Transaction should be completed.\r\n4. Tickets should be printed successfully"
      }
    ],
    "custom_jiras": "65.5"
  },
  {
    "id": 30692766,
    "title": "Verify user is successfully able to add tickets to wallet via  iOS device from T@H link in the  confirmation page after completing a single tickets transaction with MOTAHVE - true",
    "section_id": 1684991,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C151373",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre-requisite\r\n1.pvo.apple_nfc_minimum_ios_version = 11\r\n2.pvo.apple_nfc_public_key = \r\n3.Set APBNFCE to true\r\n4.Set APBE as true at supplier level\r\n5.Create a normal Event and perf accept in PVO.\r\n6.To activate print set text code PRNTMT=True/Default.\r\n7.Do not set texcodes AFA1,APAF2,APAF3 and APSF textcodes.\r\n8.Set MOTAHVE as true.",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the event link \r\nExpected Result:\r\nAvailability page is displayed\r\n2. Select tickets and continue till shopping cart\r\nExpected Result:\r\nShopping cart page is reached\r\n3. Login with valid MLBAM credentials(use gmail email credentials)\r\nExpected Result:\r\nPayment page is reached\r\n4. Select Delivery method as T@H.Continue.\r\nExpected Result:\r\nT@H delivery method is selected.\nPayment page is reached.\r\n5. Give payment details and complete the transaction\r\nExpected Result:\r\nAfter completing the transaction user will recieve a confirmation  email \r\n6. Verify the Confirmation page\nClick on T@H link in the confirmation page.\r\nExpected Result:\r\nUser is  able to add tickets to wallet  without any error message\r\n7. Verify the UI of T@H page-'Add to Wallet 'button is displayed against each ticket purchased.\nClick on Add to Wallet  button against a ticket.\r\nExpected Result:\r\na. If the patron is on iPhone, the ticket will be added to the Wallet successfully\nb. If the patron is on non-Apple device,the patron is shown an error message\r\n8. Access the Confirmation E-mail from iPhone using Safari browser\nClick on T@H link in confirmation E-mail\n \r\nExpected Result:\r\nUser is navigated to T@H page \r\n9. Verify the UI of T@H page-'Add to Wallet 'button is displayed against each ticket purchased.\n  \n\r\nExpected Result:\r\nAdd to Wallet 'button is displayed against each ticket purchased.\r\n10. Click on Add to Wallet  button against a ticket\r\nExpected Result:\r\nBoth the ticketsshould be added to Wallet successfully\r\n11. Verify whether the user is taken to back of the ticket when the user clicks on 'I' in bottom right of the front of the ticket.\r\nExpected Result:\r\nThe user is taken to back of the ticket when the user clicks on 'I' in bottom right of the front of the ticket.\r\n12. Verify whether all values displayed correctly on back page for the ticket.\nClick View and Print tickets\r\nExpected Result:\r\nAll values displayed correctly on back page for the ticket.\r\n13. Confirm Add to Wallet displays under bar code and clicking Add to Wallet add the ticket to the wallet\r\nExpected Result:\r\nSuccessfully added the ticket to the wallet\r\n14. Verify the  nfc element is generated.\n\"nfc\" : {\n\"message\" : \"ENHANCED-BARCODE\",\n\"encryptionPublicKey\" : \"MHcCAQEEIMpiTvu/rBWSrOz/\nex2fjyxikji2+fNoSnWpyx11SK9oAoGCCqGSM49AwEHoUQDQgAEigjq\n+QYC17m3i9uO8uKc8mLpaS1UJOEaCFvMedkXsuB5IWOxB\n+N1eHY9fu0aglgcdw6mWTeHlRgFhhfNml2avA==\"\n}\r\nExpected Result:\r\nNfc element shoould get generated.\r\n15. Verify that the nfc element is encrypted - nfc test (Using Elliptic Curve Diffie-Hellman (ECDH) key agreement protocol, the pass\nJSON contains a Base64 encoded X.509 SubjectPublicKeyInfo structure containing a ECDH public key for\ngroup P256. The NFC message, a current timestamp, and a single-use random ECDH P-256 key is used\nwith the merchantâ€™s public key to derive an encrypted payload for the NFC message, which is sent from\nthe iOS device to the payment terminal)\r\nExpected Result:\r\n nfc element is encrypted",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the event link \r\n2. Select tickets and continue till shopping cart\r\n3. Login with valid MLBAM credentials(use gmail email credentials)\r\n4. Select Delivery method as T@H.Continue.\r\n5. Give payment details and complete the transaction\r\n6. Verify the Confirmation page\nClick on T@H link in the confirmation page.\r\n7. Verify the UI of T@H page-'Add to Wallet 'button is displayed against each ticket purchased.\nClick on Add to Wallet  button against a ticket.\r\n8. Access the Confirmation E-mail from iPhone using Safari browser\nClick on T@H link in confirmation E-mail\n \r\n9. Verify the UI of T@H page-'Add to Wallet 'button is displayed against each ticket purchased.\n  \n\r\n10. Click on Add to Wallet  button against a ticket\r\n11. Verify whether the user is taken to back of the ticket when the user clicks on 'I' in bottom right of the front of the ticket.\r\n12. Verify whether all values displayed correctly on back page for the ticket.\nClick View and Print tickets\r\n13. Confirm Add to Wallet displays under bar code and clicking Add to Wallet add the ticket to the wallet\r\n14. Verify the  nfc element is generated.\n\"nfc\" : {\n\"message\" : \"ENHANCED-BARCODE\",\n\"encryptionPublicKey\" : \"MHcCAQEEIMpiTvu/rBWSrOz/\nex2fjyxikji2+fNoSnWpyx11SK9oAoGCCqGSM49AwEHoUQDQgAEigjq\n+QYC17m3i9uO8uKc8mLpaS1UJOEaCFvMedkXsuB5IWOxB\n+N1eHY9fu0aglgcdw6mWTeHlRgFhhfNml2avA==\"\n}\r\n15. Verify that the nfc element is encrypted - nfc test (Using Elliptic Curve Diffie-Hellman (ECDH) key agreement protocol, the pass\nJSON contains a Base64 encoded X.509 SubjectPublicKeyInfo structure containing a ECDH public key for\ngroup P256. The NFC message, a current timestamp, and a single-use random ECDH P-256 key is used\nwith the merchantâ€™s public key to derive an encrypted payload for the NFC message, which is sent from\nthe iOS device to the payment terminal)",
        "expected": "1. Availability page is displayed\r\n2. Shopping cart page is reached\r\n3. Payment page is reached\r\n4. T@H delivery method is selected.\nPayment page is reached.\r\n5. After completing the transaction user will recieve a confirmation  email \r\n6. User is  able to add tickets to wallet  without any error message\r\n7. a. If the patron is on iPhone, the ticket will be added to the Wallet successfully\nb. If the patron is on non-Apple device,the patron is shown an error message\r\n8. User is navigated to T@H page \r\n9. Add to Wallet 'button is displayed against each ticket purchased.\r\n10. Both the ticketsshould be added to Wallet successfully\r\n11. The user is taken to back of the ticket when the user clicks on 'I' in bottom right of the front of the ticket.\r\n12. All values displayed correctly on back page for the ticket.\r\n13. Successfully added the ticket to the wallet\r\n14. Nfc element shoould get generated.\r\n15.  nfc element is encrypted"
      }
    ],
    "custom_jiras": null
  },
  {
    "id": 30692767,
    "title": "Verify that the Add to Wallet option is working in Single sales MOTAHVE - false",
    "section_id": 1684991,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C151374",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Prerequisite\r\n1.Create a normal Event and perf accept in PVO.\r\n2.To activate print set text code PRNTMT=True/Default.\r\n3.Do not set texcodes AFA1,APAF2,APAF3 and APSF textcodes.\r\n4.Set MOTAHVE as false.",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the application link\r\nExpected Result:\r\nThe Application should be launched\r\n2. Select tickets from Availability Page and Continue\n\r\nExpected Result:\r\nTickets should be selected from the Availability Page\r\n3. Login as New/Existing User\r\nExpected Result:\r\nThe User should be navigated to Delivery page\r\n4. From the express delivery method, choose the delivery method \"tickets@home\" and continue\r\nExpected Result:\r\nThe user should Route to Payment page\r\n5. Fill all the required information (credit card , mail etc.) and click on Buy tickets\r\nExpected Result:\r\nTransaction should be successfully completed and should navigate to the confirmation page\r\n6. 1.Verify the number of tickets and amount paid\n2.Verify whether the Print Tickets@Home link is active in the Confirmation page\r\nExpected Result:\r\n1.Number of tickets and Amount paid should be successfully shown\n2. Print Tickets@Home link should be active in the Confirmation page\r\n7. Click on T@H link in the confirmation page\r\nExpected Result:\r\nUser is navigated to T@H page\r\n8. Verify that 'Add to Wallet 'button is displayed against each ticket purchased\r\nExpected Result:\r\nAdd to Wallet  button is displayed against each ticket purchased separately\r\n9. Click on Add to Wallet  button against the ticket in T@H page\r\nExpected Result:\r\n1. If the patron is on iPhone, the tickets will be added to the passbook successfully\n2. If the patron is on a non-Apple device, patron is shown an error/branding message \ne.g. :\n\"Wallet  downloads are available from your iPhone. You can find the link to this page from your confirmation e-mail\"\r\n10. 1.Access the Confirmation email from iPhone using Safari browser\n2.Verify the T@H link in Confirmation email\r\nExpected Result:\r\n1.Confirmation email is accessed using Safari browser in iPhone\n2.T@H link is displayed in the Confirmation email in the below format: \"Click here to print your tickets at home. If you are accessing this email from your iPhone, you will also have the option to add your tickets to your Wallet \"\r\n11. Click on T@H link in the confirmation email\r\nExpected Result:\r\nUser is navigated to T@H page \r\n12. Verify that to Wallet button is displayed against each ticket purchased\r\nExpected Result:\r\nAdd to Wallet button is displayed against each ticket(both purchased separately\r\n13. Verify whether all details(Event\\Venue\\Section\\Seat\\Row) displayed correctly.\r\nExpected Result:\r\nAll the details should be displayed\r\n14. Click on Add to Wallet button against the ticket in T@H page\r\nExpected Result:\r\nThe ticket is add to the Wallet successfully\r\n15. Verify whether the user is taken to back of the ticket when the user clicks on 'I' in bottom right of the front of the ticket\r\nExpected Result:\r\nUser should taken to back page of ticket\r\n16. Verify whether the following is displayed in the passbook back page of a ticket:\n\nAt the Wallet back screen top, \n\n1.Additional back data field and label\n2.Venue name(should be hard coded value we set)\n3.Venue Address\n4.Venue phone numer\n\nAt the Wallet back screen bottom, \n\n1.Terms and condition text\r\nExpected Result:\r\nThe following is displayed in the passbook back page of a ticket:\n\nAt the Wallet back screen top, \n\n1.Additional back data field and label\n2.Venue name should be hard coded value we set)\n3.Venue Address\n4.Venue phone numer\n\nAt the Wallet back screen bottom, \n\n1.Terms and condition text\r\n17. Click on View and Print Tickets\r\nExpected Result:\r\nTicket will be in printer  format",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the application link\r\n2. Select tickets from Availability Page and Continue\n\r\n3. Login as New/Existing User\r\n4. From the express delivery method, choose the delivery method \"tickets@home\" and continue\r\n5. Fill all the required information (credit card , mail etc.) and click on Buy tickets\r\n6. 1.Verify the number of tickets and amount paid\n2.Verify whether the Print Tickets@Home link is active in the Confirmation page\r\n7. Click on T@H link in the confirmation page\r\n8. Verify that 'Add to Wallet 'button is displayed against each ticket purchased\r\n9. Click on Add to Wallet  button against the ticket in T@H page\r\n10. 1.Access the Confirmation email from iPhone using Safari browser\n2.Verify the T@H link in Confirmation email\r\n11. Click on T@H link in the confirmation email\r\n12. Verify that to Wallet button is displayed against each ticket purchased\r\n13. Verify whether all details(Event\\Venue\\Section\\Seat\\Row) displayed correctly.\r\n14. Click on Add to Wallet button against the ticket in T@H page\r\n15. Verify whether the user is taken to back of the ticket when the user clicks on 'I' in bottom right of the front of the ticket\r\n16. Verify whether the following is displayed in the passbook back page of a ticket:\n\nAt the Wallet back screen top, \n\n1.Additional back data field and label\n2.Venue name(should be hard coded value we set)\n3.Venue Address\n4.Venue phone numer\n\nAt the Wallet back screen bottom, \n\n1.Terms and condition text\r\n17. Click on View and Print Tickets",
        "expected": "1. The Application should be launched\r\n2. Tickets should be selected from the Availability Page\r\n3. The User should be navigated to Delivery page\r\n4. The user should Route to Payment page\r\n5. Transaction should be successfully completed and should navigate to the confirmation page\r\n6. 1.Number of tickets and Amount paid should be successfully shown\n2. Print Tickets@Home link should be active in the Confirmation page\r\n7. User is navigated to T@H page\r\n8. Add to Wallet  button is displayed against each ticket purchased separately\r\n9. 1. If the patron is on iPhone, the tickets will be added to the passbook successfully\n2. If the patron is on a non-Apple device, patron is shown an error/branding message \ne.g. :\n\"Wallet  downloads are available from your iPhone. You can find the link to this page from your confirmation e-mail\"\r\n10. 1.Confirmation email is accessed using Safari browser in iPhone\n2.T@H link is displayed in the Confirmation email in the below format: \"Click here to print your tickets at home. If you are accessing this email from your iPhone, you will also have the option to add your tickets to your Wallet \"\r\n11. User is navigated to T@H page \r\n12. Add to Wallet button is displayed against each ticket(both purchased separately\r\n13. All the details should be displayed\r\n14. The ticket is add to the Wallet successfully\r\n15. User should taken to back page of ticket\r\n16. The following is displayed in the passbook back page of a ticket:\n\nAt the Wallet back screen top, \n\n1.Additional back data field and label\n2.Venue name should be hard coded value we set)\n3.Venue Address\n4.Venue phone numer\n\nAt the Wallet back screen bottom, \n\n1.Terms and condition text\r\n17. Ticket will be in printer  format"
      }
    ],
    "custom_jiras": null
  },
  {
    "id": 30692768,
    "title": "Verify that the Donation Charity patron is successfully able to add tickets to passbook from new T@H listing page via Mobile or Tablet device",
    "section_id": 1684991,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C151375",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Prerequisite :-\r\n\r\nWhen APBE is enabled,Add to Passbook button should be displayed against each ticket in new T@H list page and user should be able to add tickets to passbook",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch and login to MyTickets with a patron having valid inventory for Donation\r\nExpected Result:\r\nUser should be logged in\n  \r\n2. Select tickets from inventory and initiate Donation transaction\r\nExpected Result:\r\nUser should be able to select tickets from inventory for Donation\r\n3. Complet the donation transaction\r\nExpected Result:\r\nDonation transaction should be completed\r\n4. Login to Charity patron\r\nExpected Result:\r\nUser should be logged in\n\r\n5. Navigate to To Do List-->Pending tranasfers and select the donation offer to accept the same\n\r\nExpected Result:\r\nOffer shoulf be displayed in the To Do list\nUser should be able to select the offer from To Do list page\r\n6. Verify that the Donation Charity patron is successfully able to add tickets to passbook from new T@H listing page via Mobile or Tablet device \r\nExpected Result:\r\nUser should be able to add the tickets in to wallet as expected without any errors (Mac Machine - safari Browser)",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch and login to MyTickets with a patron having valid inventory for Donation\r\n2. Select tickets from inventory and initiate Donation transaction\r\n3. Complet the donation transaction\r\n4. Login to Charity patron\r\n5. Navigate to To Do List-->Pending tranasfers and select the donation offer to accept the same\n\r\n6. Verify that the Donation Charity patron is successfully able to add tickets to passbook from new T@H listing page via Mobile or Tablet device",
        "expected": "1. User should be logged in\n  \r\n2. User should be able to select tickets from inventory for Donation\r\n3. Donation transaction should be completed\r\n4. User should be logged in\n\r\n5. Offer shoulf be displayed in the To Do list\nUser should be able to select the offer from To Do list page\r\n6. User should be able to add the tickets in to wallet as expected without any errors (Mac Machine - safari Browser)"
      }
    ],
    "custom_jiras": null
  },
  {
    "id": 30692769,
    "title": "Verify whether tickets can be added to passbook after completing a Simple,Standard and Complex upsell parking ticket transaction by setting APAF1,APAF2 and APFA3 as Blank.",
    "section_id": 1684991,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C151376",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Prerequisite\r\n1. Create an event with simple, standard and complex upsell parking setup\r\n2. To activate print set text code PRNTMT=True/Default.\r\n4. Textcodes APAF1,APAF2 and APAF3 should be set as balnk",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the application link\n\r\nExpected Result:\r\nThe Application should be launched\r\n2. Select tickets from Availability Page and Continue\n\r\nExpected Result:\r\nTickets should be selected from the Availability Page\r\n3. Add the upsell parking events to cart\r\nExpected Result:\r\nThe tickets should be added sucessfully\r\n4. 1.Verify whether Section/ Row/ Seat values are not dispayed for upsell\n2.Click on continue button in the Shopping cart page\r\nExpected Result:\r\n1.Section/Row/Seat  values should not be dispayed for upsell non-inventoried event.\n2.Buyer type and amounts should be shown correctly.\n2.The user should be navigated to the Login/Register Modal Window.\r\n5. Login as New/Existing User\r\nExpected Result:\r\nThe User should be navigated to Delivery page\n\r\n6. From the express delivery method, choose the delivery method \"tickets@home\" and continue\n\r\nExpected Result:\r\nThe user should Route to Payment page\n\n\r\n7. Fill all the required information (credit card , mail etc.) and click on Buy tickets\r\nExpected Result:\r\nTransaction should be successfully completed and should navigate to the confirmation page\r\n8. 1. Verify the number of tickets and amount paid\n2. Verify whether the Print Tickets@Home link is active in the Confirmation page\r\nExpected Result:\r\n1.Number of tickets and Amount paid should be successfully shown\n2. Print Tickets@Home link should be active in the Confirmation page\r\n9. Click on T@H link in the confirmation page\r\nExpected Result:\r\nUser should be navigated to T@H page\r\n10. Verify that 'Add to Passbook' button is displayed against each ticket purchased\r\nExpected Result:\r\nAdd to Passbook button is displayed against each ticket purchased separately\r\n11. Click on Add to Passbook button against the ticket in T@H page\r\nExpected Result:\r\n1. If the patron is on iPhone, the tickets should be added to the passbook successfully\n2. If the patron is on a non-Apple device, patron is shown an error/branding message \r\n12. 1. Access the Confirmation email from iPhone using Safari browser\n2. Verify the T@H link in Confirmation email\r\nExpected Result:\r\n1.Confirmation email should be accessed using Safari browser in iPhone\n2.T@H link should be displayed in the Confirmation email in the below format: \"Click here to print your tickets at home. If you are accessing this email from your iPhone, you will also have the option to add your tickets to your passbook\"\r\n13. Click on T@H link in the confirmation email\r\nExpected Result:\r\nUser should be navigated to T@H page\r\n14. Verify that Add to Passbook button is displayed against each ticket purchased\r\nExpected Result:\r\nAdd to Passbook button should be displayed against each ticket(both purchased separately\r\n15. Verify whether Section, Row Number and Seat number is blank(since the APAF1,APAF2 and APAF3 is set as BLANK|BLANK)\r\nExpected Result:\r\nSection, Row Number and Seat number should be displayed as blank.\r\n16. Click on Add to Passbook button against the ticket in T@H page\r\nExpected Result:\r\nClick on Add to Passbook button against the ticket in T@H page\r\n17. Verify whether the user is taken to back of the ticket when the user clicks on 'I' in bottom right of the front of the ticket\r\nExpected Result:\r\nUser should be taken to back page of ticket\r\n18. Verify whether the following is displayed in the passbook back page of a ticket:\n\nAt the passbook back screen top, \n\n1.Additional back data field and label\n2.Venue name(should be bank)\n3.Venue Address\n4.Venue phone numer\n\nAt the passbook back screen bottom, \n\n1.Terms and condition text\r\nExpected Result:\r\nhe following should be displayed in the passbook back page of a ticket:\n\nAt the passbook back screen top, \n\n1.Additional back data field and label\n2.Venue name should be balnk.\n3.Venue Address\n4.Venue phone numer\n\nAt the passbook back screen bottom, \n\n1.Terms and condition text\r\n19. In the PVO logs verify that no error is shown corresponding to the completed transaction\r\nExpected Result:\r\nNo error should be shown in the PVO logs corresponding to the completed transaction\r\n20. Verify that transaction detaisl are updated correctly in PVO DB:\n\nselect * from pvo.payment where order_id=\nSelect * from PVO.OFFER WHERE ORDER_ID=\r\nExpected Result:\r\nTransaction details should be updated correclty in the PVO DB",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the application link\n\r\n2. Select tickets from Availability Page and Continue\n\r\n3. Add the upsell parking events to cart\r\n4. 1.Verify whether Section/ Row/ Seat values are not dispayed for upsell\n2.Click on continue button in the Shopping cart page\r\n5. Login as New/Existing User\r\n6. From the express delivery method, choose the delivery method \"tickets@home\" and continue\n\r\n7. Fill all the required information (credit card , mail etc.) and click on Buy tickets\r\n8. 1. Verify the number of tickets and amount paid\n2. Verify whether the Print Tickets@Home link is active in the Confirmation page\r\n9. Click on T@H link in the confirmation page\r\n10. Verify that 'Add to Passbook' button is displayed against each ticket purchased\r\n11. Click on Add to Passbook button against the ticket in T@H page\r\n12. 1. Access the Confirmation email from iPhone using Safari browser\n2. Verify the T@H link in Confirmation email\r\n13. Click on T@H link in the confirmation email\r\n14. Verify that Add to Passbook button is displayed against each ticket purchased\r\n15. Verify whether Section, Row Number and Seat number is blank(since the APAF1,APAF2 and APAF3 is set as BLANK|BLANK)\r\n16. Click on Add to Passbook button against the ticket in T@H page\r\n17. Verify whether the user is taken to back of the ticket when the user clicks on 'I' in bottom right of the front of the ticket\r\n18. Verify whether the following is displayed in the passbook back page of a ticket:\n\nAt the passbook back screen top, \n\n1.Additional back data field and label\n2.Venue name(should be bank)\n3.Venue Address\n4.Venue phone numer\n\nAt the passbook back screen bottom, \n\n1.Terms and condition text\r\n19. In the PVO logs verify that no error is shown corresponding to the completed transaction\r\n20. Verify that transaction detaisl are updated correctly in PVO DB:\n\nselect * from pvo.payment where order_id=\nSelect * from PVO.OFFER WHERE ORDER_ID=",
        "expected": "1. The Application should be launched\r\n2. Tickets should be selected from the Availability Page\r\n3. The tickets should be added sucessfully\r\n4. 1.Section/Row/Seat  values should not be dispayed for upsell non-inventoried event.\n2.Buyer type and amounts should be shown correctly.\n2.The user should be navigated to the Login/Register Modal Window.\r\n5. The User should be navigated to Delivery page\n\r\n6. The user should Route to Payment page\n\n\r\n7. Transaction should be successfully completed and should navigate to the confirmation page\r\n8. 1.Number of tickets and Amount paid should be successfully shown\n2. Print Tickets@Home link should be active in the Confirmation page\r\n9. User should be navigated to T@H page\r\n10. Add to Passbook button is displayed against each ticket purchased separately\r\n11. 1. If the patron is on iPhone, the tickets should be added to the passbook successfully\n2. If the patron is on a non-Apple device, patron is shown an error/branding message \r\n12. 1.Confirmation email should be accessed using Safari browser in iPhone\n2.T@H link should be displayed in the Confirmation email in the below format: \"Click here to print your tickets at home. If you are accessing this email from your iPhone, you will also have the option to add your tickets to your passbook\"\r\n13. User should be navigated to T@H page\r\n14. Add to Passbook button should be displayed against each ticket(both purchased separately\r\n15. Section, Row Number and Seat number should be displayed as blank.\r\n16. Click on Add to Passbook button against the ticket in T@H page\r\n17. User should be taken to back page of ticket\r\n18. he following should be displayed in the passbook back page of a ticket:\n\nAt the passbook back screen top, \n\n1.Additional back data field and label\n2.Venue name should be balnk.\n3.Venue Address\n4.Venue phone numer\n\nAt the passbook back screen bottom, \n\n1.Terms and condition text\r\n19. No error should be shown in the PVO logs corresponding to the completed transaction\r\n20. Transaction details should be updated correclty in the PVO DB"
      }
    ],
    "custom_jiras": null
  },
  {
    "id": 30692770,
    "title": "Verify display of Auxilary fields in Apple Pass after setting APAF5, APAF6, APAF7 set with literals",
    "section_id": 1684991,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-17882",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C151733",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Passbook integration setup should be in place\r\n2.Set APAF5, APAF6, APAF7 with literals ,say for example APAF5 as 'SECTION|' APAF6 as 'ROW|' and APAF7 as 'SEAT|'",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch MLB Single sales link\r\nExpected Result:\r\nCalendar page is displayed\r\n2. Click T link against an event\r\nExpected Result:\r\nAvailability page is loaded\r\n3. Select tickets and click Continue button\r\nExpected Result:\r\nCart page is loaded\r\n4. Click Continue button\r\nExpected Result:\r\nLog in modal is opened\r\n5. Log in as existing user\r\nExpected Result:\r\nDelivery page is displayed\r\n6. Select T@H delivery method and continue\r\nExpected Result:\r\nPayment page is displayed\r\n7. Fill in all required fields on the payment page and click Buy tickets button\r\nExpected Result:\r\nConfirmation page is displayed\r\n8. Access the confirmation email from an iPhone\r\nExpected Result:\r\nEmail is accessed. It has T@H link to print the tickets\r\n9. Access T@H link in the confirmation email\r\nExpected Result:\r\nT@H print page is opened. Each ticket has \"Add to Passbook\" button\r\n10. Click Add to Passbook button against the tickets\r\nExpected Result:\r\nThe tickets are added to passbook\r\n11. Access each ticket and verify that auxilary fields are displayed correctly\r\nExpected Result:\r\nEnsure APAF5, APAF6, APAF7 auxilary fields fetch correct values for the literals set",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch MLB Single sales link\r\n2. Click T link against an event\r\n3. Select tickets and click Continue button\r\n4. Click Continue button\r\n5. Log in as existing user\r\n6. Select T@H delivery method and continue\r\n7. Fill in all required fields on the payment page and click Buy tickets button\r\n8. Access the confirmation email from an iPhone\r\n9. Access T@H link in the confirmation email\r\n10. Click Add to Passbook button against the tickets\r\n11. Access each ticket and verify that auxilary fields are displayed correctly",
        "expected": "1. Calendar page is displayed\r\n2. Availability page is loaded\r\n3. Cart page is loaded\r\n4. Log in modal is opened\r\n5. Delivery page is displayed\r\n6. Payment page is displayed\r\n7. Confirmation page is displayed\r\n8. Email is accessed. It has T@H link to print the tickets\r\n9. T@H print page is opened. Each ticket has \"Add to Passbook\" button\r\n10. The tickets are added to passbook\r\n11. Ensure APAF5, APAF6, APAF7 auxilary fields fetch correct values for the literals set"
      }
    ],
    "custom_jiras": null
  },
  {
    "id": 30692771,
    "title": "Verify the display of Auxiliary fields in Apple pass after setting APAF4, APAF5, APAF6, APAF7 with HIDE and BLANK values",
    "section_id": 1684991,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-17882",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C151734",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Passbook integration setup should be in place\r\n2.Set APAF4 -BLANK|BLANK ,APAF5 -HIDE|HIDE,APAF6 -Patron|BLANK, APAF7 -Seating Area |HIDE",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch MLB Single sales link\r\nExpected Result:\r\nCalendar page is displayed\r\n2. Click T link against an event\r\nExpected Result:\r\nAvailability page is loaded\r\n3. Select tickets and click Continue button\r\nExpected Result:\r\nCart page is loaded\r\n4. Click Continue button\r\nExpected Result:\r\nLog in modal is opened\r\n5. Log in as existing user\r\nExpected Result:\r\nDelivery page is displayed\r\n6. Select T@H delivery method and continue\r\nExpected Result:\r\nPayment page is displayed\r\n7. Fill in all required fields on the payment page and click Buy tickets button\r\nExpected Result:\r\nConfirmation page is displayed\r\n8. Access the confirmation email from an iPhone\r\nExpected Result:\r\nEmail is accessed. It has T@H link to print the tickets\r\n9. Access T@H link in the confirmation email\r\nExpected Result:\r\nT@H print page is opened. Each ticket has \"Add to Passbook\" button\r\n10. Click Add to Passbook button against the tickets\r\nExpected Result:\r\nThe tickets are added to passbook\r\n11. Access each ticket and verify the display of Auxiliary fields\r\nExpected Result:\r\nEnsure that all the auxiliary fields are displayed based on the value set (Here only Patron should be displayed in Row1)\r\n12. Now set APAF5,APFA6 set with HIDE|HIDE and APAF4,APAF7 set as hard coded values\r\nExpected Result:\r\nThe values should be set \r\n13. Access T@H link in the confirmation email\r\nExpected Result:\r\nT@H print page is opened. Each ticket has \"Add to Passbook\" button\r\n14. Click Add to Passbook button against the tickets\r\nExpected Result:\r\nThe tickets are added to passbook\r\n15. Access each ticket and verify the display of Auxiliary fields\r\nExpected Result:\r\nEnsure that all the auxiliary fields are displayed based on the value set (Here only APAf4,APAF7 should be displayed in Row1)",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch MLB Single sales link\r\n2. Click T link against an event\r\n3. Select tickets and click Continue button\r\n4. Click Continue button\r\n5. Log in as existing user\r\n6. Select T@H delivery method and continue\r\n7. Fill in all required fields on the payment page and click Buy tickets button\r\n8. Access the confirmation email from an iPhone\r\n9. Access T@H link in the confirmation email\r\n10. Click Add to Passbook button against the tickets\r\n11. Access each ticket and verify the display of Auxiliary fields\r\n12. Now set APAF5,APFA6 set with HIDE|HIDE and APAF4,APAF7 set as hard coded values\r\n13. Access T@H link in the confirmation email\r\n14. Click Add to Passbook button against the tickets\r\n15. Access each ticket and verify the display of Auxiliary fields",
        "expected": "1. Calendar page is displayed\r\n2. Availability page is loaded\r\n3. Cart page is loaded\r\n4. Log in modal is opened\r\n5. Delivery page is displayed\r\n6. Payment page is displayed\r\n7. Confirmation page is displayed\r\n8. Email is accessed. It has T@H link to print the tickets\r\n9. T@H print page is opened. Each ticket has \"Add to Passbook\" button\r\n10. The tickets are added to passbook\r\n11. Ensure that all the auxiliary fields are displayed based on the value set (Here only Patron should be displayed in Row1)\r\n12. The values should be set \r\n13. T@H print page is opened. Each ticket has \"Add to Passbook\" button\r\n14. The tickets are added to passbook\r\n15. Ensure that all the auxiliary fields are displayed based on the value set (Here only APAf4,APAF7 should be displayed in Row1)"
      }
    ],
    "custom_jiras": null
  },
  {
    "id": 30692772,
    "title": "Givex enabled_Perform a transaction such that the transaction total amount is less than the gift card balance and will be charged from the  Gift Card alone.",
    "section_id": 1684992,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-9027",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C151377",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Set the text code GGCE to true  to Enable the GIVEX Gift card at the Supplier level.",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch PVO-PV Singles tickets application\r\nExpected Result:\r\nThe application should be launched.\r\n2. Select an event and no of seats. & Price Level such that the order total will be less than the gift card amount \r\nExpected Result:\r\nSeats should be selected such that the order total will be less than the gift card amount \r\n3. Click on Continue\r\nExpected Result:\r\nThe user should be navigated to the Shopping Cart page\r\n4. Verify the UI of the Shopping Cart page\r\nExpected Result:\r\n1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price, buyer type and fee details present in the Cart should be correct.\r\n5. Navigate to Login page\r\nExpected Result:\r\nLog In or Register page should be displayed as pop up ( Login Modal)  in the shopping cart page\r\n6. Login as a new or existing user\r\nExpected Result:\r\nThe login as a new or existing patron should be successful and the payment page should be displayed.\r\n7. Verify the display of Givex Gift Card options on Payment page\r\nExpected Result:\r\n1.Payment and Billing / Mailing Address section should be present with Credit Card and Gift card entry options.\n\n2.Delivery method Section with availabale delivery methods and fields for email and mobile numbers.\n\n3.Ticket Insurance Section to select whether the insurance is needed or not\n\n4.Marketing Section contains company details, DoB and contact phone number\n\n5.Data Protection Section provides options to select the medium to recieve updates\r\n8. Verify the Givex Gift Card section\r\nExpected Result:\r\nUnder the Billing / Mailing address section \n\n1. There should be buttons as \"Add new Credit Card\" and  \"Add Gift Card\".\r\n9. Click on the \"Add Gift Card\" button\r\nExpected Result:\r\nGift card section should be expanded below the button\r\n10. Verify that under the Gift Card section a field to enter Givex Gift Card Number is shown.\r\nExpected Result:\r\nUnder the Gift Card section a field to enter Givex Gift Card Number should be shown.\r\n11. Enter the gift card number\r\nExpected Result:\r\nGift card should be added successfully\r\n12. Enter Billing details\r\nExpected Result:\r\nThe Credit Card and Billing details should be submitted and the user re-directed to the Payment page with the corresponding details populated under corresponding columns.\r\n13. Enter Neccessary details in the payment page\r\nExpected Result:\r\nThe user should be able to enter the information.\r\n14. Verify the UI and the event details in Order Summary on the Payment page\r\nExpected Result:\r\n1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price and fee details of all the different offers present in the Order Summary should be correct.\r\n15. Buy Tickets\r\nExpected Result:\r\nThanks for your Order page should be displayed with the following Details:\nBill To: (Address, Payment Details)\nDeliver To: (Patron, Shipping Details)\nConfirmation no. : (Bots Patron Id / Order no.)\r\n16. Verify the UI on the Confirmation page\r\nExpected Result:\r\n1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price and fee details of all the different offers present in the Order Summary should be correct.\n3. The Gift Card and Credit Card used for the transaction should also be displayed.\r\n17. Verify the transaction in PV BOTS\r\nExpected Result:\r\nThe details should be shown correctly in PV BOTS.\n\nThe total transaction amount should be charged from the Givex Gift Card and shown correctly.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PVO-PV Singles tickets application\r\n2. Select an event and no of seats. & Price Level such that the order total will be less than the gift card amount \r\n3. Click on Continue\r\n4. Verify the UI of the Shopping Cart page\r\n5. Navigate to Login page\r\n6. Login as a new or existing user\r\n7. Verify the display of Givex Gift Card options on Payment page\r\n8. Verify the Givex Gift Card section\r\n9. Click on the \"Add Gift Card\" button\r\n10. Verify that under the Gift Card section a field to enter Givex Gift Card Number is shown.\r\n11. Enter the gift card number\r\n12. Enter Billing details\r\n13. Enter Neccessary details in the payment page\r\n14. Verify the UI and the event details in Order Summary on the Payment page\r\n15. Buy Tickets\r\n16. Verify the UI on the Confirmation page\r\n17. Verify the transaction in PV BOTS",
        "expected": "1. The application should be launched.\r\n2. Seats should be selected such that the order total will be less than the gift card amount \r\n3. The user should be navigated to the Shopping Cart page\r\n4. 1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price, buyer type and fee details present in the Cart should be correct.\r\n5. Log In or Register page should be displayed as pop up ( Login Modal)  in the shopping cart page\r\n6. The login as a new or existing patron should be successful and the payment page should be displayed.\r\n7. 1.Payment and Billing / Mailing Address section should be present with Credit Card and Gift card entry options.\n\n2.Delivery method Section with availabale delivery methods and fields for email and mobile numbers.\n\n3.Ticket Insurance Section to select whether the insurance is needed or not\n\n4.Marketing Section contains company details, DoB and contact phone number\n\n5.Data Protection Section provides options to select the medium to recieve updates\r\n8. Under the Billing / Mailing address section \n\n1. There should be buttons as \"Add new Credit Card\" and  \"Add Gift Card\".\r\n9. Gift card section should be expanded below the button\r\n10. Under the Gift Card section a field to enter Givex Gift Card Number should be shown.\r\n11. Gift card should be added successfully\r\n12. The Credit Card and Billing details should be submitted and the user re-directed to the Payment page with the corresponding details populated under corresponding columns.\r\n13. The user should be able to enter the information.\r\n14. 1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price and fee details of all the different offers present in the Order Summary should be correct.\r\n15. Thanks for your Order page should be displayed with the following Details:\nBill To: (Address, Payment Details)\nDeliver To: (Patron, Shipping Details)\nConfirmation no. : (Bots Patron Id / Order no.)\r\n16. 1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price and fee details of all the different offers present in the Order Summary should be correct.\n3. The Gift Card and Credit Card used for the transaction should also be displayed.\r\n17. The details should be shown correctly in PV BOTS.\n\nThe total transaction amount should be charged from the Givex Gift Card and shown correctly."
      }
    ],
    "custom_jiras": "55"
  },
  {
    "id": 30692773,
    "title": "Perform a transaction with two gift cards-One with less denomination and second with full amount  and verify.",
    "section_id": 1684992,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-9027",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C151378",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Set the text code GGCE to true  to Enable the GIVEX Gift card at the Supplier level.",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch PVO-PV Singles tickets application\r\nExpected Result:\r\nThe application should be launched.\r\n2. Select an event and no of seats. & Price Level\r\nExpected Result:\r\nThe user should be navigated to the Shopping Cart page\r\n3. Verify the UI of the Shopping Cart page\r\nExpected Result:\r\n1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price, buyer type and fee details present in the Cart should be correct.\r\n4. Navigate to Login page\r\nExpected Result:\r\nLog In or Register page should be displayed as pop up ( Login Modal)  in the shopping cart page\r\n5. Login as a new or existing user\r\nExpected Result:\r\nThe login as a new or existing patron should be successful and the payment page should be displayed.\r\n6. Verify the display of Givex Gift Card options on Payment page\r\nExpected Result:\r\n1.Payment and Billing / Mailing Address section should be present with Credit Card and Gift card entry options.\n\n2.Delivery method Section with availabale delivery methods and fields for email and mobile numbers.\n\n3.Ticket Insurance Section to select whether the insurance is needed or not\n\n4.Marketing Section contains company details, DoB and contact phone number\n\n5.Data Protection Section provides options to select the medium to recieve updates\r\n7. Verify the Givex Gift Card section\r\nExpected Result:\r\nUnder the Billing / Mailing address section \n\n1. There should be buttons as \"Add new Credit Card\" and  \"Add Gift Card\".\r\n8. Click on the \"Add Gift Card\" button\r\nExpected Result:\r\nGift card section should be expanded below the button\r\n9. Verify that under the Gift Card section a field to enter Givex Gift Card Number is shown.\r\nExpected Result:\r\nUnder the Gift Card section a field to enter Givex Gift Card Number should be shown.\r\n10. Add a gift card with less dinomination\r\nExpected Result:\r\nThe Givex Gift Card added should be shown to the user\r\n11. Add  another Gift card with full amount on the Payment Page.\r\nExpected Result:\r\nThe Givex Gift Card added should be shown to the user\r\n12. Enter Billing details\r\nExpected Result:\r\nThe Card and Billing details should be submitted and the user re-directed to the Payment page with the corresponding details populated under corresponding columns.\r\n13. Enter Neccessary details in the payment page\r\nExpected Result:\r\nThe user should be able to enter the information.\r\n14. Verify the UI and the event details in Order Summary on the Payment page\r\nExpected Result:\r\n1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price and fee details of all the different offers present in the Order Summary should be correct.\r\n15. Click on Buy Tickets\r\nExpected Result:\r\nThanks for your Order page should be displayed with the following Details:\nBill To: (Address, Payment Details)\nDeliver To: (Patron, Shipping Details)\nConfirmation no. : (Bots Patron Id / Order no.)\r\n16. Verify the UI on the Confirmation page\r\nExpected Result:\r\n1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price and fee details of all the different offers present in the Order Summary should be correct.\n3. The Gift Cards and Credit Card used for the transaction should also be displayed.\r\n17. Verify the transaction in PV BOTS\r\nExpected Result:\r\nThe details should be shown correctly in PV BOTS.\n\nThe transaction amount charged from the Givex Gift Card and the Credit Card should be shown correctly.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PVO-PV Singles tickets application\r\n2. Select an event and no of seats. & Price Level\r\n3. Verify the UI of the Shopping Cart page\r\n4. Navigate to Login page\r\n5. Login as a new or existing user\r\n6. Verify the display of Givex Gift Card options on Payment page\r\n7. Verify the Givex Gift Card section\r\n8. Click on the \"Add Gift Card\" button\r\n9. Verify that under the Gift Card section a field to enter Givex Gift Card Number is shown.\r\n10. Add a gift card with less dinomination\r\n11. Add  another Gift card with full amount on the Payment Page.\r\n12. Enter Billing details\r\n13. Enter Neccessary details in the payment page\r\n14. Verify the UI and the event details in Order Summary on the Payment page\r\n15. Click on Buy Tickets\r\n16. Verify the UI on the Confirmation page\r\n17. Verify the transaction in PV BOTS",
        "expected": "1. The application should be launched.\r\n2. The user should be navigated to the Shopping Cart page\r\n3. 1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price, buyer type and fee details present in the Cart should be correct.\r\n4. Log In or Register page should be displayed as pop up ( Login Modal)  in the shopping cart page\r\n5. The login as a new or existing patron should be successful and the payment page should be displayed.\r\n6. 1.Payment and Billing / Mailing Address section should be present with Credit Card and Gift card entry options.\n\n2.Delivery method Section with availabale delivery methods and fields for email and mobile numbers.\n\n3.Ticket Insurance Section to select whether the insurance is needed or not\n\n4.Marketing Section contains company details, DoB and contact phone number\n\n5.Data Protection Section provides options to select the medium to recieve updates\r\n7. Under the Billing / Mailing address section \n\n1. There should be buttons as \"Add new Credit Card\" and  \"Add Gift Card\".\r\n8. Gift card section should be expanded below the button\r\n9. Under the Gift Card section a field to enter Givex Gift Card Number should be shown.\r\n10. The Givex Gift Card added should be shown to the user\r\n11. The Givex Gift Card added should be shown to the user\r\n12. The Card and Billing details should be submitted and the user re-directed to the Payment page with the corresponding details populated under corresponding columns.\r\n13. The user should be able to enter the information.\r\n14. 1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price and fee details of all the different offers present in the Order Summary should be correct.\r\n15. Thanks for your Order page should be displayed with the following Details:\nBill To: (Address, Payment Details)\nDeliver To: (Patron, Shipping Details)\nConfirmation no. : (Bots Patron Id / Order no.)\r\n16. 1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price and fee details of all the different offers present in the Order Summary should be correct.\n3. The Gift Cards and Credit Card used for the transaction should also be displayed.\r\n17. The details should be shown correctly in PV BOTS.\n\nThe transaction amount charged from the Givex Gift Card and the Credit Card should be shown correctly."
      }
    ],
    "custom_jiras": "55"
  },
  {
    "id": 30692774,
    "title": "Verify the confirmation page, email, BOTS etc after gift card transaction",
    "section_id": 1684992,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-9027",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C151379",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Set the text code GGCE to true  to Enable the GIVEX Gift card at the Supplier level.",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch PVO-PV Singles tickets application\r\nExpected Result:\r\nThe application should be launched.\r\n2. Select an event and no of seats. & Price Level\r\nExpected Result:\r\nThe user should be navigated to the Shopping Cart page\r\n3. Verify the UI of the Shopping Cart page\r\nExpected Result:\r\n1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price, buyer type and fee details present in the Cart should be correct.\r\n4. Navigate to Login page\r\nExpected Result:\r\nLog In or Register page should be displayed as pop up ( Login Modal)  in the shopping cart page\r\n5. Login as a new or existing user\r\nExpected Result:\r\nThe login as a new or existing patron should be successful and the payment page should be displayed.\r\n6. Verify the display of Givex Gift Card options on Payment page\r\nExpected Result:\r\n1.Payment and Billing / Mailing Address section should be present with Credit Card and Gift card entry options.\n\n2.Delivery method Section with availabale delivery methods and fields for email and mobile numbers.\n\n3.Ticket Insurance Section to select whether the insurance is needed or not\n\n4.Marketing Section contains company details, DoB and contact phone number\n\n5.Data Protection Section provides options to select the medium to recieve updates\r\n7. Verify the Givex Gift Card section\r\nExpected Result:\r\nUnder the Billing / Mailing address section \n\n1. There should be buttons as \"Add new Credit Card\" and  \"Add Gift Card\".\r\n8. Click on the \"Add Gift Card\" button\r\nExpected Result:\r\nGift card section should be expanded below the button\r\n9. Verify that under the Gift Card section a field to enter Givex Gift Card Number is shown.\r\nExpected Result:\r\nUnder the Gift Card section a field to enter Givex Gift Card Number should be shown.\r\n10. Enter the card number\r\nExpected Result:\r\nCard should be added successfully\r\n11. Enter Billing details\r\nExpected Result:\r\nThe Card and Billing details should be submitted and the user re-directed to the Payment page with the corresponding details populated under corresponding columns.\r\n12. Enter Neccessary details in the payment page\r\nExpected Result:\r\nThe user should be able to enter the information.\r\n13. Verify the UI and the event details in Order Summary on the Payment page\r\nExpected Result:\r\n1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price and fee details of all the different offers present in the Order Summary should be correct.\r\n14. Click on Buy Tickets\r\nExpected Result:\r\nThanks for your Order page should be displayed with the following Details:\nBill To: (Address, Payment Details)\nDeliver To: (Patron, Shipping Details)\nConfirmation no. : (Bots Patron Id / Order no.)\r\n15. Verify the UI on the Confirmation page\r\nExpected Result:\r\n1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price and fee details of all the different offers present in the Order Summary should be correct.\n3. The Gift Card and Credit Card used for the transaction should also be displayed.\r\n16. Verify the transaction in PV BOTS\r\nExpected Result:\r\nThe details should be shown correctly in PV BOTS.\n\nThe transaction amount charged from the Givex Gift Card and the Credit Card should be shown correctly.\r\n17. Verify the transaction details in the Confirmation email\r\nExpected Result:\r\nThe details should be shown correctly in Confirmation email\n\nThe transaction amount charged from the Givex Gift Card and the Credit Card should be shown correctly.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PVO-PV Singles tickets application\r\n2. Select an event and no of seats. & Price Level\r\n3. Verify the UI of the Shopping Cart page\r\n4. Navigate to Login page\r\n5. Login as a new or existing user\r\n6. Verify the display of Givex Gift Card options on Payment page\r\n7. Verify the Givex Gift Card section\r\n8. Click on the \"Add Gift Card\" button\r\n9. Verify that under the Gift Card section a field to enter Givex Gift Card Number is shown.\r\n10. Enter the card number\r\n11. Enter Billing details\r\n12. Enter Neccessary details in the payment page\r\n13. Verify the UI and the event details in Order Summary on the Payment page\r\n14. Click on Buy Tickets\r\n15. Verify the UI on the Confirmation page\r\n16. Verify the transaction in PV BOTS\r\n17. Verify the transaction details in the Confirmation email",
        "expected": "1. The application should be launched.\r\n2. The user should be navigated to the Shopping Cart page\r\n3. 1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price, buyer type and fee details present in the Cart should be correct.\r\n4. Log In or Register page should be displayed as pop up ( Login Modal)  in the shopping cart page\r\n5. The login as a new or existing patron should be successful and the payment page should be displayed.\r\n6. 1.Payment and Billing / Mailing Address section should be present with Credit Card and Gift card entry options.\n\n2.Delivery method Section with availabale delivery methods and fields for email and mobile numbers.\n\n3.Ticket Insurance Section to select whether the insurance is needed or not\n\n4.Marketing Section contains company details, DoB and contact phone number\n\n5.Data Protection Section provides options to select the medium to recieve updates\r\n7. Under the Billing / Mailing address section \n\n1. There should be buttons as \"Add new Credit Card\" and  \"Add Gift Card\".\r\n8. Gift card section should be expanded below the button\r\n9. Under the Gift Card section a field to enter Givex Gift Card Number should be shown.\r\n10. Card should be added successfully\r\n11. The Card and Billing details should be submitted and the user re-directed to the Payment page with the corresponding details populated under corresponding columns.\r\n12. The user should be able to enter the information.\r\n13. 1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price and fee details of all the different offers present in the Order Summary should be correct.\r\n14. Thanks for your Order page should be displayed with the following Details:\nBill To: (Address, Payment Details)\nDeliver To: (Patron, Shipping Details)\nConfirmation no. : (Bots Patron Id / Order no.)\r\n15. 1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price and fee details of all the different offers present in the Order Summary should be correct.\n3. The Gift Card and Credit Card used for the transaction should also be displayed.\r\n16. The details should be shown correctly in PV BOTS.\n\nThe transaction amount charged from the Givex Gift Card and the Credit Card should be shown correctly.\r\n17. The details should be shown correctly in Confirmation email\n\nThe transaction amount charged from the Givex Gift Card and the Credit Card should be shown correctly."
      }
    ],
    "custom_jiras": "55"
  },
  {
    "id": 30692775,
    "title": "Verify that the credit card is required to complete the transaction with gift cards.",
    "section_id": 1684992,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-9027",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C151380",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Set the text code GGCE to true  to Enable the GIVEX Gift card at the Supplier level.",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch PVO-PV Singles tickets application\r\nExpected Result:\r\nThe application should be launched.\r\n2. Select an event and no of seats. & Price Level\r\nExpected Result:\r\nThe user should be navigated to the Shopping Cart page\r\n3. Verify the UI of the\r\nExpected Result:\r\n1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price, buyer type and fee details present in the Cart should be correct.\r\n4. Navigate to Login page\r\nExpected Result:\r\nLog In or Register page should be displayed as pop up ( Login Modal)  in the shopping cart page\r\n5. Login as a new or existing user\r\nExpected Result:\r\nThe login as a new patron should be successful and the payment page should be displayed.\r\n6. Verify the display of Givex Gift Card options on Payment page\r\nExpected Result:\r\n1.Payment and Billing / Mailing Address section should be present with Credit Card and Gift card entry options.\n\n2.Delivery method Section with availabale delivery methods and fields for email and mobile numbers.\n\n3.Ticket Insurance Section to select whether the insurance is needed or not\n\n4.Marketing Section contains company details, DoB and contact phone number\n\n5.Data Protection Section provides options to select the medium to recieve updates\r\n7. Verify the Givex Gift Card section\r\nExpected Result:\r\nUnder the Billing / Mailing address section \n\n1. There should be buttons as \"Add new Credit Card\" and  \"Add Gift Card\".\r\n8. Click on the \"Add Gift Card\" button\r\nExpected Result:\r\nGift card section should be expanded below the button\r\n9. Verify that under the Gift Card section a field to enter Givex Gift Card Number is shown.\r\nExpected Result:\r\nUnder the Gift Card section a field to enter Givex Gift Card Number should be shown.\r\n10. Enter the card number\r\nExpected Result:\r\nCard number should be entered successfully\r\n11. Enter Neccessary details in the payment page other than the billing address\r\nExpected Result:\r\nThe user should be able to enter the information.\r\n12. Click on Buy Tickets\r\nExpected Result:\r\nAn error should be displayed in the payment page indicating that the credit cards fields should be entered to complete the transaction\r\n13. Verify whether the Givex Gift Card number was retained after error on Payment page\r\nExpected Result:\r\n1. The Givex Gift Card number should be retained after error on Payment page.\n2. The UI on Payment page should not be distorted.\r\n14. Verify the UI and the event details in Order Summary on the Payment page\r\nExpected Result:\r\n1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price and fee details of all the different offers present in the Order Summary should be correct.\r\n15. Enter Billing details\r\nExpected Result:\r\nThe Credit Card and Billing details should be submitted and the user re-directed to the Payment page with the corresponding details populated under corresponding columns.\r\n16. Click on Buy Tickets\r\nExpected Result:\r\nThanks for your Order page should be displayed with the following Details:\nBill To: (Address, Payment Details)\nDeliver To: (Patron, Shipping Details)\nConfirmation no. : (Bots Patron Id / Order no.)\r\n17. Verify the UI on the Confirmation page\r\nExpected Result:\r\n1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price and fee details of all the different offers present in the Order Summary should be correct.\n3. The Gift Card and Credit Card used for the transaction should also be displayed.\n\n4. Click on \"See More Events\" , should take the application to schedule page\n5. Also there are more links \"Seating & Pricing\", \"Directions & Parking\", \"Ballpark A to Z Guide\"  & \n\"Local Area Information\" which should direct application to appropriate pages\r\n18. Verify the transaction in PV BOTS\r\nExpected Result:\r\nThe details should be shown correctly in PV BOTS.\n\nThe total transaction amount should be charged from the Givex Gift Card and shown correctly.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PVO-PV Singles tickets application\r\n2. Select an event and no of seats. & Price Level\r\n3. Verify the UI of the\r\n4. Navigate to Login page\r\n5. Login as a new or existing user\r\n6. Verify the display of Givex Gift Card options on Payment page\r\n7. Verify the Givex Gift Card section\r\n8. Click on the \"Add Gift Card\" button\r\n9. Verify that under the Gift Card section a field to enter Givex Gift Card Number is shown.\r\n10. Enter the card number\r\n11. Enter Neccessary details in the payment page other than the billing address\r\n12. Click on Buy Tickets\r\n13. Verify whether the Givex Gift Card number was retained after error on Payment page\r\n14. Verify the UI and the event details in Order Summary on the Payment page\r\n15. Enter Billing details\r\n16. Click on Buy Tickets\r\n17. Verify the UI on the Confirmation page\r\n18. Verify the transaction in PV BOTS",
        "expected": "1. The application should be launched.\r\n2. The user should be navigated to the Shopping Cart page\r\n3. 1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price, buyer type and fee details present in the Cart should be correct.\r\n4. Log In or Register page should be displayed as pop up ( Login Modal)  in the shopping cart page\r\n5. The login as a new patron should be successful and the payment page should be displayed.\r\n6. 1.Payment and Billing / Mailing Address section should be present with Credit Card and Gift card entry options.\n\n2.Delivery method Section with availabale delivery methods and fields for email and mobile numbers.\n\n3.Ticket Insurance Section to select whether the insurance is needed or not\n\n4.Marketing Section contains company details, DoB and contact phone number\n\n5.Data Protection Section provides options to select the medium to recieve updates\r\n7. Under the Billing / Mailing address section \n\n1. There should be buttons as \"Add new Credit Card\" and  \"Add Gift Card\".\r\n8. Gift card section should be expanded below the button\r\n9. Under the Gift Card section a field to enter Givex Gift Card Number should be shown.\r\n10. Card number should be entered successfully\r\n11. The user should be able to enter the information.\r\n12. An error should be displayed in the payment page indicating that the credit cards fields should be entered to complete the transaction\r\n13. 1. The Givex Gift Card number should be retained after error on Payment page.\n2. The UI on Payment page should not be distorted.\r\n14. 1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price and fee details of all the different offers present in the Order Summary should be correct.\r\n15. The Credit Card and Billing details should be submitted and the user re-directed to the Payment page with the corresponding details populated under corresponding columns.\r\n16. Thanks for your Order page should be displayed with the following Details:\nBill To: (Address, Payment Details)\nDeliver To: (Patron, Shipping Details)\nConfirmation no. : (Bots Patron Id / Order no.)\r\n17. 1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price and fee details of all the different offers present in the Order Summary should be correct.\n3. The Gift Card and Credit Card used for the transaction should also be displayed.\n\n4. Click on \"See More Events\" , should take the application to schedule page\n5. Also there are more links \"Seating & Pricing\", \"Directions & Parking\", \"Ballpark A to Z Guide\"  & \n\"Local Area Information\" which should direct application to appropriate pages\r\n18. The details should be shown correctly in PV BOTS.\n\nThe total transaction amount should be charged from the Givex Gift Card and shown correctly."
      }
    ],
    "custom_jiras": "55"
  },
  {
    "id": 30692776,
    "title": "Givex enabled_Perform a transaction such that the transaction total amount is greater than the gift card balance and will be charged from the  Gift Card and credit card for package",
    "section_id": 1684992,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-9027",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C151381",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1. Disable the MOD10 check \r\n2. Set the text code GGCE to true  to Enable the GIVEX Gift card at the Supplier level.",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch PVO-PV Singles tickets application\r\nExpected Result:\r\nThe application should be launched.\r\n2. Select a package, no of seats. & Price Level such that the order total will be greater than the gift card amount \r\nExpected Result:\r\nSeats should be selected such that the order total will be greater than the gift card amount \r\n3. Click on Continue\r\nExpected Result:\r\nThe user should be navigated to the Shopping Cart page\r\n4. Verify the UI of the Shopping Cart page\r\nExpected Result:\r\n1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price, buyer type and fee details present in the Cart should be correct.\r\n5. Navigate to Login page\r\nExpected Result:\r\nLog In or Register page should be displayed as pop up ( Login Modal)  in the shopping cart page\r\n6. Login as a new or existing user\r\nExpected Result:\r\nThe login as a new or existing patron should be successful and the payment page should be displayed.\r\n7. Verify the display of Givex Gift Card options on Payment page\r\nExpected Result:\r\n1.Payment and Billing / Mailing Address section should be present with Credit Card and Gift card entry options.\n\n2.Delivery method Section with availabale delivery methods and fields for email and mobile numbers.\n\n3.Ticket Insurance Section to select whether the insurance is needed or not\n\n4.Marketing Section contains company details, DoB and contact phone number\n\n5.Data Protection Section provides options to select the medium to recieve updates\r\n8. Verify the Givex Gift Card section\r\nExpected Result:\r\nUnder the Billing / Mailing address section \n\n1. There should be buttons as \"Add new Credit Card\" and  \"Add Gift Card\".\r\n9. Click on the \"Add Gift Card\" button\r\nExpected Result:\r\nGift card section should be expanded below the button\r\n10. Verify that under the Gift Card section a field to enter Givex Gift Card Number is shown.\r\nExpected Result:\r\nUnder the Gift Card section a field to enter Givex Gift Card Number should be shown.\r\n11. Enter the gift card number\r\nExpected Result:\r\nGift card should be shown to the user\r\n12. Enter Billing details\r\nExpected Result:\r\nThe Card and Billing details should be submitted and the user re-directed to the Payment page with the corresponding details populated under corresponding columns.\r\n13. Enter Neccessary details in the payment page\r\nExpected Result:\r\nThe user should be able to enter the information.\r\n14. Verify the UI and the event details in Order Summary on the Payment page\r\nExpected Result:\r\n1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price and fee details of all the different offers present in the Order Summary should be correct.\r\n15. Buy Tickets\r\nExpected Result:\r\nThanks for your Order page should be displayed with the following Details:\nBill To: (Address, Payment Details)\nDeliver To: (Patron, Shipping Details)\nConfirmation no. : (Bots Patron Id / Order no.)\r\n16. Verify the UI on the Confirmation page\r\nExpected Result:\r\n1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price and fee details of all the different offers present in the Order Summary should be correct.\n3. The Gift Card and Credit Card used for the transaction should also be displayed.\r\n17. Verify the transaction in PV BOTS\r\nExpected Result:\r\nThe details should be shown correctly in PV BOTS.\n\nThe transaction amount charged from the Givex Gift Card and the Credit Card should be shown correctly.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PVO-PV Singles tickets application\r\n2. Select a package, no of seats. & Price Level such that the order total will be greater than the gift card amount \r\n3. Click on Continue\r\n4. Verify the UI of the Shopping Cart page\r\n5. Navigate to Login page\r\n6. Login as a new or existing user\r\n7. Verify the display of Givex Gift Card options on Payment page\r\n8. Verify the Givex Gift Card section\r\n9. Click on the \"Add Gift Card\" button\r\n10. Verify that under the Gift Card section a field to enter Givex Gift Card Number is shown.\r\n11. Enter the gift card number\r\n12. Enter Billing details\r\n13. Enter Neccessary details in the payment page\r\n14. Verify the UI and the event details in Order Summary on the Payment page\r\n15. Buy Tickets\r\n16. Verify the UI on the Confirmation page\r\n17. Verify the transaction in PV BOTS",
        "expected": "1. The application should be launched.\r\n2. Seats should be selected such that the order total will be greater than the gift card amount \r\n3. The user should be navigated to the Shopping Cart page\r\n4. 1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price, buyer type and fee details present in the Cart should be correct.\r\n5. Log In or Register page should be displayed as pop up ( Login Modal)  in the shopping cart page\r\n6. The login as a new or existing patron should be successful and the payment page should be displayed.\r\n7. 1.Payment and Billing / Mailing Address section should be present with Credit Card and Gift card entry options.\n\n2.Delivery method Section with availabale delivery methods and fields for email and mobile numbers.\n\n3.Ticket Insurance Section to select whether the insurance is needed or not\n\n4.Marketing Section contains company details, DoB and contact phone number\n\n5.Data Protection Section provides options to select the medium to recieve updates\r\n8. Under the Billing / Mailing address section \n\n1. There should be buttons as \"Add new Credit Card\" and  \"Add Gift Card\".\r\n9. Gift card section should be expanded below the button\r\n10. Under the Gift Card section a field to enter Givex Gift Card Number should be shown.\r\n11. Gift card should be shown to the user\r\n12. The Card and Billing details should be submitted and the user re-directed to the Payment page with the corresponding details populated under corresponding columns.\r\n13. The user should be able to enter the information.\r\n14. 1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price and fee details of all the different offers present in the Order Summary should be correct.\r\n15. Thanks for your Order page should be displayed with the following Details:\nBill To: (Address, Payment Details)\nDeliver To: (Patron, Shipping Details)\nConfirmation no. : (Bots Patron Id / Order no.)\r\n16. 1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price and fee details of all the different offers present in the Order Summary should be correct.\n3. The Gift Card and Credit Card used for the transaction should also be displayed.\r\n17. The details should be shown correctly in PV BOTS.\n\nThe transaction amount charged from the Givex Gift Card and the Credit Card should be shown correctly."
      }
    ],
    "custom_jiras": "55"
  },
  {
    "id": 30692777,
    "title": "Givex enabled_Perform a transaction such that the transaction total amount will is equal to the gift card balance and will be charged from the  Gift Card  alone",
    "section_id": 1684992,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-9027",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C151382",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Set the text code GGCE to true  to Enable the GIVEX Gift card at the Supplier level.",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch PVO-PV Singles tickets application\r\nExpected Result:\r\nThe application should be launched.\r\n2. Select an event, no of seats. & Price Level such that the order total is equal to the gift card balance \r\nExpected Result:\r\nSeats should be selected such that the order total is equal to the gift card balance \r\n3. Click on Continue\r\nExpected Result:\r\nThe user should be navigated to the Shopping Cart page\r\n4. Verify the UI of the Shopping Cart page\r\nExpected Result:\r\n1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price, buyer type and fee details present in the Cart should be correct.\r\n5. Navigate to Login page\r\nExpected Result:\r\nLog In or Register page should be displayed as pop up ( Login Modal)  in the shopping cart page\r\n6. Login as a new or existing user\r\nExpected Result:\r\nThe login as a new or existing patron should be successful and the payment page should be displayed.\r\n7. Verify the display of Givex Gift Card options on Payment page\r\nExpected Result:\r\n1.Payment and Billing / Mailing Address section should be present with Credit Card and Gift card entry options.\n\n2.Delivery method Section with availabale delivery methods and fields for email and mobile numbers.\n\n3.Ticket Insurance Section to select whether the insurance is needed or not\n\n4.Marketing Section contains company details, DoB and contact phone number\n\n5.Data Protection Section provides options to select the medium to recieve updates\r\n8. Verify the Givex Gift Card section\r\nExpected Result:\r\nUnder the Billing / Mailing address section \n\n1. There should be buttons as \"Add new Credit Card\" and  \"Add Gift Card\".\r\n9. Click on the \"Add Gift Card\" button\r\nExpected Result:\r\nGift card section should be expanded below the button\r\n10. Verify that under the Gift Card section a field to enter Givex Gift Card Number is shown.\r\nExpected Result:\r\nUnder the Gift Card section a field to enter Givex Gift Card Number should be shown.\r\n11. Enter the gift card number\r\nExpected Result:\r\nGift card should be shown to the user\r\n12. Enter Billing details\r\nExpected Result:\r\nThe Credit Card and Billing details should be submitted and the user re-directed to the Payment page with the corresponding details populated under corresponding columns.\r\n13. Enter Neccessary details in the payment page\r\nExpected Result:\r\nThe user should be able to enter the information.\r\n14. Verify the UI and the event details in Order Summary on the Payment page\r\nExpected Result:\r\n1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price and fee details of all the different offers present in the Order Summary should be correct.\r\n15. Click on Buy Tickets\r\nExpected Result:\r\nThanks for your Order page should be displayed with the following Details:\nBill To: (Address, Payment Details)\nDeliver To: (Patron, Shipping Details)\nConfirmation no. : (Bots Patron Id / Order no.)\r\n16. Verify the UI on the Confirmation page\r\nExpected Result:\r\n1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price and fee details of all the different offers present in the Order Summary should be correct.\n3. The Gift Card and Credit Card used for the transaction should also be displayed.\r\n17. Verify the transaction in PV BOTS\r\nExpected Result:\r\nThe details should be shown correctly in PV BOTS.\n\nThe total transaction amount should be charged from the Givex Gift Card and shown correctly.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PVO-PV Singles tickets application\r\n2. Select an event, no of seats. & Price Level such that the order total is equal to the gift card balance \r\n3. Click on Continue\r\n4. Verify the UI of the Shopping Cart page\r\n5. Navigate to Login page\r\n6. Login as a new or existing user\r\n7. Verify the display of Givex Gift Card options on Payment page\r\n8. Verify the Givex Gift Card section\r\n9. Click on the \"Add Gift Card\" button\r\n10. Verify that under the Gift Card section a field to enter Givex Gift Card Number is shown.\r\n11. Enter the gift card number\r\n12. Enter Billing details\r\n13. Enter Neccessary details in the payment page\r\n14. Verify the UI and the event details in Order Summary on the Payment page\r\n15. Click on Buy Tickets\r\n16. Verify the UI on the Confirmation page\r\n17. Verify the transaction in PV BOTS",
        "expected": "1. The application should be launched.\r\n2. Seats should be selected such that the order total is equal to the gift card balance \r\n3. The user should be navigated to the Shopping Cart page\r\n4. 1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price, buyer type and fee details present in the Cart should be correct.\r\n5. Log In or Register page should be displayed as pop up ( Login Modal)  in the shopping cart page\r\n6. The login as a new or existing patron should be successful and the payment page should be displayed.\r\n7. 1.Payment and Billing / Mailing Address section should be present with Credit Card and Gift card entry options.\n\n2.Delivery method Section with availabale delivery methods and fields for email and mobile numbers.\n\n3.Ticket Insurance Section to select whether the insurance is needed or not\n\n4.Marketing Section contains company details, DoB and contact phone number\n\n5.Data Protection Section provides options to select the medium to recieve updates\r\n8. Under the Billing / Mailing address section \n\n1. There should be buttons as \"Add new Credit Card\" and  \"Add Gift Card\".\r\n9. Gift card section should be expanded below the button\r\n10. Under the Gift Card section a field to enter Givex Gift Card Number should be shown.\r\n11. Gift card should be shown to the user\r\n12. The Credit Card and Billing details should be submitted and the user re-directed to the Payment page with the corresponding details populated under corresponding columns.\r\n13. The user should be able to enter the information.\r\n14. 1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price and fee details of all the different offers present in the Order Summary should be correct.\r\n15. Thanks for your Order page should be displayed with the following Details:\nBill To: (Address, Payment Details)\nDeliver To: (Patron, Shipping Details)\nConfirmation no. : (Bots Patron Id / Order no.)\r\n16. 1. The allignment should be correct.\n2. The event details (including the event name and description), the seat details, the price and fee details of all the different offers present in the Order Summary should be correct.\n3. The Gift Card and Credit Card used for the transaction should also be displayed.\r\n17. The details should be shown correctly in PV BOTS.\n\nThe total transaction amount should be charged from the Givex Gift Card and shown correctly."
      }
    ],
    "custom_jiras": "55"
  },
  {
    "id": 30692778,
    "title": "Verify that Gift cards are not taken into account when validating Patrons maximum cards on file limit during single sales.",
    "section_id": 1684992,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-11229",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_refs": "C151383",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set up a payment type of GIVX from the PV side.\r\n2.Set the payment type of GIVX at the supplier payment types\r\n3.Set the text code GGCE to true at the supplier:\r\n4.Set the credit card processing by Bots to ON. (Supplier level)\r\n5.Set the property \"pvo.max_cards_on_file\" to 5",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Single sale application\r\nExpected Result:\r\nSingle sale availability page should be launched\r\n2. Select desired tickets from availability page\r\nExpected Result:\r\nTickets should be selected\r\n3. Click on Continue\r\nExpected Result:\r\nUser should be navigated to the Shopping Cart page\r\n4. Verify the ticket details in cart page and continue to login modal\r\nExpected Result:\r\nUser should be navigated to the Login page\r\n5. Login with valid credentials\r\nExpected Result:\r\nUser should be navigated to the delivery page\r\n6. Assign delivery and reach on Payment Page\r\nExpected Result:\r\nUser should be navigated to the payment page\r\n7. Try to add 6 or more Gift cards in Single Sales payment page\r\nExpected Result:\r\nUser should be allowed to add 6 or more \"gift\" cards as  Gift cards are not be taken into account when validating Patron's maximum cards on file limit.\r\n8. Complete the transaction using any gift card\r\nExpected Result:\r\nUser should be able to complete transaction sucessfully\r\n9. 1.Make sure that the card details are get added successfully\n\nselect * from pvo.PATRON_CARD_INFO where PATRON_ID='XXXXXX'\r\nExpected Result:\r\nCard details should get added successfully.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Single sale application\r\n2. Select desired tickets from availability page\r\n3. Click on Continue\r\n4. Verify the ticket details in cart page and continue to login modal\r\n5. Login with valid credentials\r\n6. Assign delivery and reach on Payment Page\r\n7. Try to add 6 or more Gift cards in Single Sales payment page\r\n8. Complete the transaction using any gift card\r\n9. 1.Make sure that the card details are get added successfully\n\nselect * from pvo.PATRON_CARD_INFO where PATRON_ID='XXXXXX'",
        "expected": "1. Single sale availability page should be launched\r\n2. Tickets should be selected\r\n3. User should be navigated to the Shopping Cart page\r\n4. User should be navigated to the Login page\r\n5. User should be navigated to the delivery page\r\n6. User should be navigated to the payment page\r\n7. User should be allowed to add 6 or more \"gift\" cards as  Gift cards are not be taken into account when validating Patron's maximum cards on file limit.\r\n8. User should be able to complete transaction sucessfully\r\n9. Card details should get added successfully."
      }
    ],
    "custom_jiras": "59.1"
  },
  {
    "id": 30692779,
    "title": "Verify that only last 4 digits of the credit card is passed in log when user edits an existing card via Mytickets",
    "section_id": 1684993,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14138",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C151384",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Have a patron with existing card on file.",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch MyTickets and login as the patron mentioned in pre-requisite.\r\nExpected Result:\r\nUser should be able to login\r\n2. Go to Payment Info tab and edit the existing card.\r\nExpected Result:\r\nUser should be able to edit the card details.\r\n3. Verify the Maintain Patron call passed in log.\r\nExpected Result:\r\nThe Maintain Patron call should have credit card details and Confirm that the first numbers are masked and only last 4 digits of the credit card number is displayed in logs.\r\n4. Check the Card number in Patron_Card_Info table\r\nExpected Result:\r\nThe Card number should be encrypted in Patron_Card_Info table",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch MyTickets and login as the patron mentioned in pre-requisite.\r\n2. Go to Payment Info tab and edit the existing card.\r\n3. Verify the Maintain Patron call passed in log.\r\n4. Check the Card number in Patron_Card_Info table",
        "expected": "1. User should be able to login\r\n2. User should be able to edit the card details.\r\n3. The Maintain Patron call should have credit card details and Confirm that the first numbers are masked and only last 4 digits of the credit card number is displayed in logs.\r\n4. The Card number should be encrypted in Patron_Card_Info table"
      }
    ],
    "custom_jiras": "63"
  },
  {
    "id": 30692780,
    "title": "Verify that valid MasterCard with the new BIN number passes the Luhn check and be added to the patron account in single tickets flow",
    "section_id": 1684993,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14980",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C151385",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Single sales URL.\r\nExpected Result:\r\nLink should be launched successfully.\r\n2. Select seats and click on Continue.\r\nExpected Result:\r\nSeats should be selecetd.\r\n3. Navigate to Shopping Cart page.\nClick on Continue.\r\nExpected Result:\r\nPaymnet page should be dispalyed.\r\n4. Click on Add New card button.\r\nExpected Result:\r\nAdd New Card modal should be dispalyed.\r\n5. Select Card type as 'Master Card'.\nEnter invalid card number.\nVerify that proper error mesage got displayed to user indicating that entered card number is not valid.\r\nExpected Result:\r\nProper error message should be displayed to user.\r\n6.  Now enter correct MasterCard with the new BIN number starting with '50-55'\nFill in all other details. \nClick on Submit button.\r\nExpected Result:\r\nCard should be added successfully.\r\n7. Complete the transaction using newly added master card\r\nExpected Result:\r\nTransaction should be completed successfully.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Single sales URL.\r\n2. Select seats and click on Continue.\r\n3. Navigate to Shopping Cart page.\nClick on Continue.\r\n4. Click on Add New card button.\r\n5. Select Card type as 'Master Card'.\nEnter invalid card number.\nVerify that proper error mesage got displayed to user indicating that entered card number is not valid.\r\n6.  Now enter correct MasterCard with the new BIN number starting with '50-55'\nFill in all other details. \nClick on Submit button.\r\n7. Complete the transaction using newly added master card",
        "expected": "1. Link should be launched successfully.\r\n2. Seats should be selecetd.\r\n3. Paymnet page should be dispalyed.\r\n4. Add New Card modal should be dispalyed.\r\n5. Proper error message should be displayed to user.\r\n6. Card should be added successfully.\r\n7. Transaction should be completed successfully."
      }
    ],
    "custom_jiras": "62.1"
  },
  {
    "id": 30692781,
    "title": "Verify that valid MasterCard number starting with prefix '50-55' passes the Luhn check and be added to the patron account in single tickets flow",
    "section_id": 1684993,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14980",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C151386",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Single sales URL.\r\nExpected Result:\r\nLink should be launched successfully.\r\n2. Select seats and click on Continue.\r\nExpected Result:\r\nSeats should be selecetd.\r\n3. Navigate to Shopping Cart page.\nClick on Continue.\r\nExpected Result:\r\nPaymnet page should be dispalyed.\r\n4. Click on Add New card button.\r\nExpected Result:\r\nAdd New Card modal should be dispalyed.\r\n5. Select Card type as 'Master Card'.\nEnter invalid card number.\nVerify that proper error message got displayed to user indicating that entered card number is not valid.\r\nExpected Result:\r\nProper error message should be displayed to user.\r\n6. Now enter correct card number starting with '50-55'\nFill in all other details. \nClick on Submit button.\r\nExpected Result:\r\nCard should be added successfully.\r\n7. Verify that valid MasterCard number starting with prefix '50-55' passes the Luhn check and \nbe added to the patron account in single tickets flow.\r\nExpected Result:\r\nCard should be added successfully.\r\n8. Complete the transaction using newly added master card\r\nExpected Result:\r\nTransaction should be completed successfully.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Single sales URL.\r\n2. Select seats and click on Continue.\r\n3. Navigate to Shopping Cart page.\nClick on Continue.\r\n4. Click on Add New card button.\r\n5. Select Card type as 'Master Card'.\nEnter invalid card number.\nVerify that proper error message got displayed to user indicating that entered card number is not valid.\r\n6. Now enter correct card number starting with '50-55'\nFill in all other details. \nClick on Submit button.\r\n7. Verify that valid MasterCard number starting with prefix '50-55' passes the Luhn check and \nbe added to the patron account in single tickets flow.\r\n8. Complete the transaction using newly added master card",
        "expected": "1. Link should be launched successfully.\r\n2. Seats should be selecetd.\r\n3. Paymnet page should be dispalyed.\r\n4. Add New Card modal should be dispalyed.\r\n5. Proper error message should be displayed to user.\r\n6. Card should be added successfully.\r\n7. Card should be added successfully.\r\n8. Transaction should be completed successfully."
      }
    ],
    "custom_jiras": "62.1"
  },
  {
    "id": 30692782,
    "title": "Verify in MLB single sales flow, if the patron edits the Evening phone number,country and extension fields in credit card modal, the fields are updated in patron_info table and PV",
    "section_id": 1684993,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13438",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C151387",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Set update.patron.card.data.only as true\r\nAn existing MLB patron with a card on file should be available",
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite:Set  update.patron.card.data.only as true\nAn existing MLB patron with a card on file should be availble\r\nExpected Result:\r\nPrerequisite should be met\r\n2. Launch MLB Single sales link of any event\r\nExpected Result:\r\nShopping cart is displayed\r\n3. Select desired seats and click Continue button on Availablity page\r\nExpected Result:\r\nUser is landed on shopping cart\r\n4. Verify all tickets selected are displayed with price details and fee details on shopping cart\r\nExpected Result:\r\nAll tickets are displayed on shopping cart with \ncorrect details\r\n5. Click Continue button on cart page\r\nExpected Result:\r\nLogin modal is displayed\r\n6. Log in as the patron mentioned in prerequisite\r\nExpected Result:\r\nCredit card modal is closed. The edited address is shown on Credit card grid of payment page\r\n7. Click edit button against the credit card\r\nExpected Result:\r\nTransaction is completed successfully and confirmation page is displayed\r\n8. 1.Edit any address fields(Address1/Address2/City) \n2. Edit Evening Phone number, Evening Phone country and extension fields\n2.Enter CVC\n3.Click Submit button\r\nExpected Result:\r\nCredit card modal is closed. The edited address is shown on Credit card grid of payment page\r\n9. Under PHONE section, verify Business phone number,Extension and Country code is \nupdated\r\nExpected Result:\r\nBusiness phone number,Extension and Country code is updated\r\n10. Verify EVE_PHONE,EVE_PHONE_EXTN,EVE_PHONE_COUNTRY_CODE fields in patron_info \ntable\nVerify the address fields updated in step 8 is reflected in patron_info table\r\nExpected Result:\r\nEVE_PHONE,EVE_PHONE_EXTN,EVE_PHONE_COUNTRY_CODE fields in patron_info table is \nupdated\nThe address fields updated in step 8 should not be reflected in patron_info table\r\n11. Verify BILLING_EVE_PHONE_NUMBER,BILLING_EVE_HONE_COUNTRY_CODE fields in \npatron_card_info table\nVerify the address fields updated in step 8 is reflected in patron_card_info table\r\nExpected Result:\r\nBILLING_EVE_PHONE_NUMBER,BILLING_EVE_HONE_COUNTRY_CODE fields in \npatron_card_info table should be updated\nThe address fields updated in step 8 should be reflected in patron_card_info table\r\n12. Verify Mytickets->MyAccount details\r\nExpected Result:\r\nThe address fields should not be updated and should remained the same\r\n13. Verify card details in MyAccount->Payment info\r\nExpected Result:\r\nThe address fields updated in step 8 should be updated in mytixx payment info tab",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite:Set  update.patron.card.data.only as true\nAn existing MLB patron with a card on file should be availble\r\n2. Launch MLB Single sales link of any event\r\n3. Select desired seats and click Continue button on Availablity page\r\n4. Verify all tickets selected are displayed with price details and fee details on shopping cart\r\n5. Click Continue button on cart page\r\n6. Log in as the patron mentioned in prerequisite\r\n7. Click edit button against the credit card\r\n8. 1.Edit any address fields(Address1/Address2/City) \n2. Edit Evening Phone number, Evening Phone country and extension fields\n2.Enter CVC\n3.Click Submit button\r\n9. Under PHONE section, verify Business phone number,Extension and Country code is \nupdated\r\n10. Verify EVE_PHONE,EVE_PHONE_EXTN,EVE_PHONE_COUNTRY_CODE fields in patron_info \ntable\nVerify the address fields updated in step 8 is reflected in patron_info table\r\n11. Verify BILLING_EVE_PHONE_NUMBER,BILLING_EVE_HONE_COUNTRY_CODE fields in \npatron_card_info table\nVerify the address fields updated in step 8 is reflected in patron_card_info table\r\n12. Verify Mytickets->MyAccount details\r\n13. Verify card details in MyAccount->Payment info",
        "expected": "1. Prerequisite should be met\r\n2. Shopping cart is displayed\r\n3. User is landed on shopping cart\r\n4. All tickets are displayed on shopping cart with \ncorrect details\r\n5. Login modal is displayed\r\n6. Credit card modal is closed. The edited address is shown on Credit card grid of payment page\r\n7. Transaction is completed successfully and confirmation page is displayed\r\n8. Credit card modal is closed. The edited address is shown on Credit card grid of payment page\r\n9. Business phone number,Extension and Country code is updated\r\n10. EVE_PHONE,EVE_PHONE_EXTN,EVE_PHONE_COUNTRY_CODE fields in patron_info table is \nupdated\nThe address fields updated in step 8 should not be reflected in patron_info table\r\n11. BILLING_EVE_PHONE_NUMBER,BILLING_EVE_HONE_COUNTRY_CODE fields in \npatron_card_info table should be updated\nThe address fields updated in step 8 should be reflected in patron_card_info table\r\n12. The address fields should not be updated and should remained the same\r\n13. The address fields updated in step 8 should be updated in mytixx payment info tab"
      }
    ],
    "custom_jiras": "60"
  },
  {
    "id": 30692783,
    "title": "Verify only patron_card_info address is displayed in Use Address drop down while editing an existing card where the card has different billing address",
    "section_id": 1684993,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13277",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C151388",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Make sure update.patron.card.data.only is not set (Default is true)\r\nPatron should have a card on file that has different address than in patron_address/patron_info",
    "custom_test_purpose": null,
    "custom_steps": "1. Log in to Mytickets account of an existing patron\r\nExpected Result:\r\nUser is logged in\r\n2. Run the following queries for the patron and note down the details\nSelect * from pvo.patron_card_info where patron_id=\nSelect * from pvo.patron_info where patron_id=\nSelect * from pvo.patron_address where patron_id=\r\nExpected Result:\r\nThe details should be noted down\r\n3. Navigate to My Account > Payment Info\r\nExpected Result:\r\nPayment Info is displayed\r\n4. Click on edit button of a card\r\nExpected Result:\r\nCredit card modal is opened\r\n5. Verify while editing a new card only the main MyTixx account address ( patron_card_info address ) is displayed on 'Use on file address' drop down\r\nExpected Result:\r\npatron_card_info address  - address should be displayed on the Use on file address' drop down",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Log in to Mytickets account of an existing patron\r\n2. Run the following queries for the patron and note down the details\nSelect * from pvo.patron_card_info where patron_id=\nSelect * from pvo.patron_info where patron_id=\nSelect * from pvo.patron_address where patron_id=\r\n3. Navigate to My Account > Payment Info\r\n4. Click on edit button of a card\r\n5. Verify while editing a new card only the main MyTixx account address ( patron_card_info address ) is displayed on 'Use on file address' drop down",
        "expected": "1. User is logged in\r\n2. The details should be noted down\r\n3. Payment Info is displayed\r\n4. Credit card modal is opened\r\n5. patron_card_info address  - address should be displayed on the Use on file address' drop down"
      }
    ],
    "custom_jiras": "59.1"
  },
  {
    "id": 30692784,
    "title": "Verify only patron_address or patron info is populated in Use Address drop down while adding a new card",
    "section_id": 1684993,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13277",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C151389",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Have n existing patron\r\nMake sure update.patron.card.data.only is not set (Default is true)",
    "custom_test_purpose": null,
    "custom_steps": "1. Log in to Mytickets account of an existing patron\r\nExpected Result:\r\nUser is logged in\r\n2. Run the following queries for the patron and note down the details\nSelect * from pvo.patron_card_info where patron_id=\nSelect * from pvo.patron_info where patron_id=\nSelect * from pvo.patron_address where patron_id=\r\nExpected Result:\r\nThe details should be noted down\r\n3. Navigate to My Account > Payment Info\r\nExpected Result:\r\nPayment Info is displayed\r\n4. Click on Add new card button\r\nExpected Result:\r\nCredit card modal is opened\r\n5. Verify while adding a new card the Patron_Info/Patron_Address is populated in the \"Use Address\" dropdown.\r\nExpected Result:\r\nPatron_Info/Patron_Address should be populated in the \"Use Address\" dropdown.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Log in to Mytickets account of an existing patron\r\n2. Run the following queries for the patron and note down the details\nSelect * from pvo.patron_card_info where patron_id=\nSelect * from pvo.patron_info where patron_id=\nSelect * from pvo.patron_address where patron_id=\r\n3. Navigate to My Account > Payment Info\r\n4. Click on Add new card button\r\n5. Verify while adding a new card the Patron_Info/Patron_Address is populated in the \"Use Address\" dropdown.",
        "expected": "1. User is logged in\r\n2. The details should be noted down\r\n3. Payment Info is displayed\r\n4. Credit card modal is opened\r\n5. Patron_Info/Patron_Address should be populated in the \"Use Address\" dropdown."
      }
    ],
    "custom_jiras": "59.1"
  },
  {
    "id": 30692785,
    "title": "Verify credit card validations are enforced in Single sales flow when XXXX.payment_code_true_type is set for a newly created payment type",
    "section_id": 1684993,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12262",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_refs": "C151390",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Create new payment type from Maintanance site and associate it to a supplier following the below steps:\r\n1. Launch maintenance and login with valid cred\r\n2.Go to Financial->TDC Payment Type->Add NEW PAYMENT CODE(XXXX)\r\n3.Set XXXX.Payment_code_true_type in Pokemon\r\n4. Go to Main Toolboxes->Supplier->Supplier Code->Supplier Payment Types and add the new payment code",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch PVO single sales.\r\nExpected Result:\r\nAvailability page should be launched without any issues.\r\n2. Lock seats and continue. \r\nExpected Result:\r\nUser is navigated to Shopping Cart\r\n3. Continue from shopping cart\r\nExpected Result:\r\nUser is navigated to Delivery page\r\n4. Continue from Delivery Method page\r\nExpected Result:\r\nUser is navigated to Payment Page\r\n5. Check whether the new payment type is available for payment.\r\nExpected Result:\r\nThe new payment type is should be available for payment.\r\n6. Select new Payment Type  and provide invalid CC number for doing the payment and continue. And Verify whether credit card validations are enforced and proper error message is displayed.\r\nExpected Result:\r\nThe credit card validations should be enforced and proper error message should be displayed.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PVO single sales.\r\n2. Lock seats and continue. \r\n3. Continue from shopping cart\r\n4. Continue from Delivery Method page\r\n5. Check whether the new payment type is available for payment.\r\n6. Select new Payment Type  and provide invalid CC number for doing the payment and continue. And Verify whether credit card validations are enforced and proper error message is displayed.",
        "expected": "1. Availability page should be launched without any issues.\r\n2. User is navigated to Shopping Cart\r\n3. User is navigated to Delivery page\r\n4. User is navigated to Payment Page\r\n5. The new payment type is should be available for payment.\r\n6. The credit card validations should be enforced and proper error message should be displayed."
      }
    ],
    "custom_jiras": "58"
  },
  {
    "id": 30692786,
    "title": "Verify the Fortress login via My Tickets & Modify the Fortress login button label",
    "section_id": 1684994,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C151391",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Launch the PVO-QA Maintenance site using the URL: \r\nLogin using valid user credentials as:\r\nUsername: \r\nPassword: \r\n1. Click on the + icon corresponding to Supplier Related.\r\n2. Click on Supplier Link\r\n3.Enter one supplier name in the text box\r\n4.Click on \"Edit\" button\r\n5.Click on Multiple Edit button against the Supplier Text button\r\nSet the following textcodes:\r\n6.\"PTSK\" should be set at any of the text code level, to the value of the secret salt value shared with Fortress in the production environment (this is used to compute the hash value) (Integrator value Property should be default to MLBAM)\r\nNote : As per dev this PTSK value is fixed in the code.\r\n7. \"FRTXT\" - FORTRESS_LOGIN_TEXT - This is the text that appears in the login button. Defaults to: \"Fortress Login\".)\r\n8.\"FLHT\"\r\nFORTRESS_LOGIN_HEADER_TEXT \r\nFLHT = Fortress Login\r\n9.Click on \"Add\" button below in the page\r\n\r\nPurge the Caches",
    "custom_test_purpose": null,
    "custom_steps": "1. Enter the URL for Login: \r\nExpected Result:\r\nThe My Tickets application should be launched.\r\n2. 1. Launch the My Tickets application\n2. Click on create a new user\n3. Enter all the necessary details\n4. Click on save changes\nNote: No Inventory should be added to the newly created patron\n\r\nExpected Result:\r\nThe new user should be created succesfully.\r\n3. Click on My Tickets Tab \r\nExpected Result:\r\nAll the inventories should be listed.\r\n4. Login to the Fortress application by\nclicking on the \"Login to Fortress\" button in the My Tickets tab\r\nExpected Result:\r\n1. A new link to the Fortress portal login shall be made available on the MyTickets Inventory page.\n2. The link shall be in the form of a MyTickets Inventory feature button and shall be configured similar in shape, color, font and other design elements to match existing feature buttons on the MyTickets Inventory page that are used for ticket transfer, secondary market and other existing features.\n3. The login button shall be placed within the proximity of the existing row of feature buttons that are available for transfer, resale and donation. The placement shall be such to separate the Fortress login button from other buttons and to not interfere with existing MyTickets features.\n4. When a MyTickets patron clicks the Fortress login button, a separate window should automatically open that contains Fortress without asking for any login credentials\r\n5. 1. Launch the maintenance site \n2. Go to the Supplier maintenance site\n3. Set the \"FRTXT\" - FORTRESS_LOGIN_TEXT to a value \"Login to Fortress\"\r\nExpected Result:\r\nFortress Portal Login button label should be edited\r\n6. Enter the MyTickets URL for Login: \r\nExpected Result:\r\nThe application should be launched.\r\n7. Login as a different valid user with the following details:\nUsername: \nPassword: \r\nExpected Result:\r\nThe user should be able to login for all the accounts in the supplier.\r\n8. Click on My Tickets Tab \r\nExpected Result:\r\nAll the inventories should be listed.\r\n9. The Fortress login button label is shown as configured at the supplier level textcode\r\nExpected Result:\r\nThe Fortress login button label should be shown as configured at the supplier level textcode",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Enter the URL for Login: \r\n2. 1. Launch the My Tickets application\n2. Click on create a new user\n3. Enter all the necessary details\n4. Click on save changes\nNote: No Inventory should be added to the newly created patron\n\r\n3. Click on My Tickets Tab \r\n4. Login to the Fortress application by\nclicking on the \"Login to Fortress\" button in the My Tickets tab\r\n5. 1. Launch the maintenance site \n2. Go to the Supplier maintenance site\n3. Set the \"FRTXT\" - FORTRESS_LOGIN_TEXT to a value \"Login to Fortress\"\r\n6. Enter the MyTickets URL for Login: \r\n7. Login as a different valid user with the following details:\nUsername: \nPassword: \r\n8. Click on My Tickets Tab \r\n9. The Fortress login button label is shown as configured at the supplier level textcode",
        "expected": "1. The My Tickets application should be launched.\r\n2. The new user should be created succesfully.\r\n3. All the inventories should be listed.\r\n4. 1. A new link to the Fortress portal login shall be made available on the MyTickets Inventory page.\n2. The link shall be in the form of a MyTickets Inventory feature button and shall be configured similar in shape, color, font and other design elements to match existing feature buttons on the MyTickets Inventory page that are used for ticket transfer, secondary market and other existing features.\n3. The login button shall be placed within the proximity of the existing row of feature buttons that are available for transfer, resale and donation. The placement shall be such to separate the Fortress login button from other buttons and to not interfere with existing MyTickets features.\n4. When a MyTickets patron clicks the Fortress login button, a separate window should automatically open that contains Fortress without asking for any login credentials\r\n5. Fortress Portal Login button label should be edited\r\n6. The application should be launched.\r\n7. The user should be able to login for all the accounts in the supplier.\r\n8. All the inventories should be listed.\r\n9. The Fortress login button label should be shown as configured at the supplier level textcode"
      }
    ],
    "custom_jiras": null
  },
  {
    "id": 30692787,
    "title": "Verify the Fuesbox request and response for AVS failure",
    "section_id": 1684995,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13318",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C151392",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. At Supplier level, set \"Credit Card processing by BOTS=OFF\r\nSet debug on both app servers Classname =com.tickets.util.card.ProtobaseProcCardImpl level = 30\r\nUse MPMKEY 38004\r\nEdit AVS Response entries in Merchant Maintenance page to invalid values\r\n2. Launch single tickets application with the following URL \r\n\r\nExpected Result:\r\nThe application is launched.\r\n3. 1.Select a number from the drop down list as >.\r\n2. Select Price Level as Best Available.\r\n3. Click on Continue button.\r\nExpected Result:\r\nRecaptcha verification page should be displayed\r\n4. 1. Enter the Recaptcha  displayed in the Recaptcha  verification image.\r\n2. Click the continue button.\r\nExpected Result:\r\nThe ticket price details page should be displayed.\r\n5. Click the continue button.\r\nExpected Result:\r\nThe shopping mart page should be displayed.\r\n6. Click the continue button.\r\nExpected Result:\r\nPayment  page should be displayed.\r\n7. Enter value for the following required fields:First name \r\nLast name \r\nAdd 1 \r\nCity, Postal Code \r\nState \r\nEmail Confirm Email \r\nPhone \r\nCC Type : Master/Visa/Discover\r\nCC no \r\nEXP \r\nCVV   \r\nDelivery Method \r\n8. Click on Buy Tickets in the Summary frame\r\nVerify user is shown valid error message on payment page\r\nExpected Result:\r\nThe payment should not take place and the user should be shown the appropriate error message.\r\n9. 1. Login to The PVO logs\r\n2. Verify Fuesbox request and response\r\nExpected Result:\r\nThe appropriate error message reson should should be displayed in logs",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. At Supplier level, set \"Credit Card processing by BOTS=OFF\r\nSet debug on both app servers Classname =com.tickets.util.card.ProtobaseProcCardImpl level = 30\r\nUse MPMKEY 38004\r\nEdit AVS Response entries in Merchant Maintenance page to invalid values\r\n2. Launch single tickets application with the following URL \r\n\r\n3. 1.Select a number from the drop down list as >.\r\n2. Select Price Level as Best Available.\r\n3. Click on Continue button.\r\n4. 1. Enter the Recaptcha  displayed in the Recaptcha  verification image.\r\n2. Click the continue button.\r\n5. Click the continue button.\r\n6. Click the continue button.\r\n7. Enter value for the following required fields:First name \r\nLast name \r\nAdd 1 \r\nCity, Postal Code \r\nState \r\nEmail Confirm Email \r\nPhone \r\nCC Type : Master/Visa/Discover\r\nCC no \r\nEXP \r\nCVV   \r\nDelivery Method \r\n8. Click on Buy Tickets in the Summary frame\r\nVerify user is shown valid error message on payment page\r\n9. 1. Login to The PVO logs\r\n2. Verify Fuesbox request and response",
        "expected": "1. \r\n2. The application is launched.\r\n3. Recaptcha verification page should be displayed\r\n4. The ticket price details page should be displayed.\r\n5. The shopping mart page should be displayed.\r\n6. Payment  page should be displayed.\r\n7. \r\n8. The payment should not take place and the user should be shown the appropriate error message.\r\n9. The appropriate error message reson should should be displayed in logs"
      }
    ],
    "custom_jiras": "59.1"
  },
  {
    "id": 30692788,
    "title": "Verify PVO sends the user back to the payment page with the generic cc auth failed message when there is a negative response",
    "section_id": 1684995,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13318",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C151393",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1. In the PVO Maintenance site set \"Credit Card \r\nProcessing by BOTS\" Off for the supplier\r\n2. Set debug on both app servers Classname \r\n=com.tickets.util.card.ProtobaseProcCardImpl \r\nlevel = 30\r\n3. For Supplier set text code MPMKEY=38003\r\n4.Set fusebox.inquiry.enabled property as true \r\non app tiers\r\n5. ConfirmTerminal ID as 20120016 for Fusebox \r\nMerchant Type ( for 38003 Merchant key )\r\n2. Launch the PVM single tickets application URL\r\nExpected Result:\r\nSchedule page is displayed\r\n3. Click Buy Tickets button against desired event\r\nExpected Result:\r\nAvailability page is displayed\r\n4. Select tickets such that the transaction amount should be $80.00 and click Continue button\r\nExpected Result:\r\nRe-captcha modal is displayed\r\n5. Enter correct text in recaptcha modal and click Continue\r\nExpected Result:\r\nThe shopping cart should be displayed.\r\n6. Click the continue button on shopping cart\r\nExpected Result:\r\nLog in modal is displayed\r\n7. Click Continue button on Login modal\r\nExpected Result:\r\nPayment page is displayed\r\n8. Click Add New Card button and enter card details on the card modal\r\nAdd credit card \r\n    VISA Card number : 4242424242424242 \r\n    CVV-382\r\n    Steert-100 Main St.\r\n    Zip-33606\r\nExpected Result:\r\nThe card is added\r\n9. Fill in all other required fields on Payment page and click on Buy Tickets in the Summary frame\r\nExpected Result:\r\nVerify after few minutes the user is shown CC auth failed error message on the payment page\r\n10. 1.Verify original request is sent to Fusebox (Field 1 is 01)\r\n2.Verify Type 22 request sent to Fusebox (Field 1 is passed as 22)\r\n3.Verify Type 22 response received. Field 1003 is -7 and field 1004 is 'No Records found'.\r\nExpected Result:\r\n1.The original request is sent to Fusebox (Field 1 is 01)\r\n2.The Type 22 request sent to Fusebox (Field 1 is passed as 22)\r\n3.The  Type 22 response received. Field 1003 is -7 and field 1004 is 'No Records found'.\r\n11. Verify the PVO database\r\nselect * from pvo.CARD_RESPONSE where ref=\r\nselect * from pvo.CARD_RESPONSE_DETAIL where ref=\r\nExpected Result:\r\nThe DB is updated correctly based on the response from Fusebox.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. In the PVO Maintenance site set \"Credit Card \r\nProcessing by BOTS\" Off for the supplier\r\n2. Set debug on both app servers Classname \r\n=com.tickets.util.card.ProtobaseProcCardImpl \r\nlevel = 30\r\n3. For Supplier set text code MPMKEY=38003\r\n4.Set fusebox.inquiry.enabled property as true \r\non app tiers\r\n5. ConfirmTerminal ID as 20120016 for Fusebox \r\nMerchant Type ( for 38003 Merchant key )\r\n2. Launch the PVM single tickets application URL\r\n3. Click Buy Tickets button against desired event\r\n4. Select tickets such that the transaction amount should be $80.00 and click Continue button\r\n5. Enter correct text in recaptcha modal and click Continue\r\n6. Click the continue button on shopping cart\r\n7. Click Continue button on Login modal\r\n8. Click Add New Card button and enter card details on the card modal\r\nAdd credit card \r\n    VISA Card number : 4242424242424242 \r\n    CVV-382\r\n    Steert-100 Main St.\r\n    Zip-33606\r\n9. Fill in all other required fields on Payment page and click on Buy Tickets in the Summary frame\r\n10. 1.Verify original request is sent to Fusebox (Field 1 is 01)\r\n2.Verify Type 22 request sent to Fusebox (Field 1 is passed as 22)\r\n3.Verify Type 22 response received. Field 1003 is -7 and field 1004 is 'No Records found'.\r\n11. Verify the PVO database\r\nselect * from pvo.CARD_RESPONSE where ref=\r\nselect * from pvo.CARD_RESPONSE_DETAIL where ref=",
        "expected": "1. \r\n2. Schedule page is displayed\r\n3. Availability page is displayed\r\n4. Re-captcha modal is displayed\r\n5. The shopping cart should be displayed.\r\n6. Log in modal is displayed\r\n7. Payment page is displayed\r\n8. The card is added\r\n9. Verify after few minutes the user is shown CC auth failed error message on the payment page\r\n10. 1.The original request is sent to Fusebox (Field 1 is 01)\r\n2.The Type 22 request sent to Fusebox (Field 1 is passed as 22)\r\n3.The  Type 22 response received. Field 1003 is -7 and field 1004 is 'No Records found'.\r\n11. The DB is updated correctly based on the response from Fusebox."
      }
    ],
    "custom_jiras": "59.1"
  },
  {
    "id": 30692789,
    "title": "Verify PVO sends the user back to the payment page with the generic cc auth failed message when switch timeout occurs",
    "section_id": 1684995,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13318",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C151394",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1. In the PVO Maintenance site set \"Credit Card \r\nProcessing by BOTS\" Off for the supplier\r\n2. Set debug on both app servers Classname \r\n=com.tickets.util.card.ProtobaseProcCardImpl \r\nlevel = 30\r\n3. For Supplier set text code MPMKEY=38008\r\n4.Set fusebox.inquiry.enabled property as true \r\non app tiers\r\n5. Confirm Terminal ID as 20120016 for Fusebox \r\nMerchant Type ( for 38003 Merchant key )\r\n2. Launch the PVM single tickets application URL\r\nExpected Result:\r\nSchedule page is displayed\r\n3. Click Buy Tickets button against desired event\r\nExpected Result:\r\nAvailability page is displayed\r\n4. Select tickets such that the transaction amount should be $70.00 and click Continue button\r\nExpected Result:\r\nRe-captcha modal is displayed\r\n5. Enter correct text in recaptcha modal and click Continue\r\nExpected Result:\r\nThe shopping cart should be displayed.\r\n6. Click the continue button on shopping cart\r\nExpected Result:\r\nLog in modal is displayed\r\n7. Click Continue button on Login modal\r\nExpected Result:\r\nPayment page is displayed\r\n8. Click Add New Card button and enter card details on the card modal\r\nAdd credit card \r\n    VISA Card number : 4242424242424242 \r\n    CVV-382\r\n    Steert-100 Main St.\r\n    Zip-33606\r\nExpected Result:\r\nThe card is added\r\n9. Fill in all other required fields on Payment page and click on Buy Tickets in the Summary frame\r\nExpected Result:\r\nVerify after few minutes the user is shown CC auth failed error message on the payment page\r\n10. 1.Verify original request is sent to Fusebox (Field 1 is 01)\r\n2.Verify Fusebox response is received with field 1003=0088 and 1004='Switch Timeout'\r\n3.Verify Type 22 request sent to Fusebox (Field 1 is passed as 22)\r\n4.Verify Type 22 response received. Field 1003 is -7 and field 1004 is 'No Records found'.\r\nExpected Result:\r\n1.The original request is sent to Fusebox (Field 1 is 01)\r\n2.The  Fusebox response is received with field 1003=0088 and 1004='Switch Timeout'\r\n3.The  Type 22 request sent to Fusebox (Field 1 is passed as 22)\r\n4.The  Type 22 response received. Field 1003 is -7 and field 1004 is 'No Records found'.\r\n11. Verify the PVO database\r\nselect * from pvo.CARD_RESPONSE where ref=\r\nselect * from pvo.CARD_RESPONSE_DETAIL where ref=\r\nExpected Result:\r\nThe DB is updated correctly based on the response from Fusebox.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. In the PVO Maintenance site set \"Credit Card \r\nProcessing by BOTS\" Off for the supplier\r\n2. Set debug on both app servers Classname \r\n=com.tickets.util.card.ProtobaseProcCardImpl \r\nlevel = 30\r\n3. For Supplier set text code MPMKEY=38008\r\n4.Set fusebox.inquiry.enabled property as true \r\non app tiers\r\n5. Confirm Terminal ID as 20120016 for Fusebox \r\nMerchant Type ( for 38003 Merchant key )\r\n2. Launch the PVM single tickets application URL\r\n3. Click Buy Tickets button against desired event\r\n4. Select tickets such that the transaction amount should be $70.00 and click Continue button\r\n5. Enter correct text in recaptcha modal and click Continue\r\n6. Click the continue button on shopping cart\r\n7. Click Continue button on Login modal\r\n8. Click Add New Card button and enter card details on the card modal\r\nAdd credit card \r\n    VISA Card number : 4242424242424242 \r\n    CVV-382\r\n    Steert-100 Main St.\r\n    Zip-33606\r\n9. Fill in all other required fields on Payment page and click on Buy Tickets in the Summary frame\r\n10. 1.Verify original request is sent to Fusebox (Field 1 is 01)\r\n2.Verify Fusebox response is received with field 1003=0088 and 1004='Switch Timeout'\r\n3.Verify Type 22 request sent to Fusebox (Field 1 is passed as 22)\r\n4.Verify Type 22 response received. Field 1003 is -7 and field 1004 is 'No Records found'.\r\n11. Verify the PVO database\r\nselect * from pvo.CARD_RESPONSE where ref=\r\nselect * from pvo.CARD_RESPONSE_DETAIL where ref=",
        "expected": "1. \r\n2. Schedule page is displayed\r\n3. Availability page is displayed\r\n4. Re-captcha modal is displayed\r\n5. The shopping cart should be displayed.\r\n6. Log in modal is displayed\r\n7. Payment page is displayed\r\n8. The card is added\r\n9. Verify after few minutes the user is shown CC auth failed error message on the payment page\r\n10. 1.The original request is sent to Fusebox (Field 1 is 01)\r\n2.The  Fusebox response is received with field 1003=0088 and 1004='Switch Timeout'\r\n3.The  Type 22 request sent to Fusebox (Field 1 is passed as 22)\r\n4.The  Type 22 response received. Field 1003 is -7 and field 1004 is 'No Records found'.\r\n11. The DB is updated correctly based on the response from Fusebox."
      }
    ],
    "custom_jiras": "59.1"
  },
  {
    "id": 30692790,
    "title": "Verify the Fusebox request and response for CVV failure",
    "section_id": 1684995,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13318",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C151395",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre-requisite:\r\n1. In the PVO Maintenance site set \"Credit Card Processing by BOTS\" Off for the supplier\r\n2. Set debug on both app servers Classname =com.tickets.util.card.ProtobaseProcCardImpl level = 30\r\n3. For Supplier set text code MPMKEY=38004\r\n4.Change the CVV Response in Merchant Maintenance page to invalid entries. (e,g-A,B,C,D,E)\r\n2. Launch single tickets application with the following URL \r\n\r\nExpected Result:\r\nThe application is launched.\r\n3. 1.Select a number from the drop down list as >.\r\n2. Select Price Level as Best Available.\r\n3. Click on Continue button.\r\nExpected Result:\r\nRecaptcha verification page should be displayed\r\n4. 1. Enter the Recaptcha  displayed in the Recaptcha  verification image.\r\n2. Click the continue button.\r\nExpected Result:\r\nThe ticket price details page should be displayed.\r\n5. Click the continue button.\r\nExpected Result:\r\nThe shopping mart page should be displayed.\r\n6. Click the continue button.\r\nExpected Result:\r\nPayment  page should be displayed.\r\n7. Enter value for the following required fields:First name \r\nLast name \r\nAdd 1 \r\nCity, Postal Code \r\nState \r\nEmail Confirm Email \r\nPhone \r\nCC Type : Master/Visa/Discover\r\nCC no \r\nEXP \r\nCVV   \r\nDelivery Method \r\n8. Click on Buy Tickets in the Summary frame\r\nVerify the user is shown valid error message in the payment page\r\nExpected Result:\r\nUser should get credit card auth failed error message in the payment page\r\n9. Verify the field 0040 in Transaction type 01 response is 'N'\r\nExpected Result:\r\nThe field 0040 in Transaction type 01 response is \r\n'N'\r\n10. Verify type 61 request is send by PVO and response is received\r\nExpected Result:\r\nType 61 request is send by PVO and \r\nresponse is received\r\n11. Verify the fields in Type 61 request match the new API template\r\nExpected Result:\r\nField and values:\r\n1-61 (Transaction Type )\r\n2-Transaction Amount  \r\n3-Card Account Number \r\n4-Card Expiration Date MMYY\r\n7-Reference Number  \r\n25-Business Date MMDDYY   \r\n70-Customer Code-Merchant assigned code \r\nidentifying customer. Default to field 7\r\n71-Tax Included Indicator 0= Non-Taxable      \r\n1= Yes     2= Exempt\r\n72-Tax Amount\r\n109-Terminal ID   \r\n110-Cashier ID\r\n115-Transaction Qualifier-Determines type of \r\naccount used.010=Credit\r\n190-eCommerce Indicator (ECI)7= \r\nNon-Authenticated Channel Encrypted. \r\n(SSL)\r\n191-Electronic Goods Indicator (EGI)P= \r\nPhysical Item   \r\n711-Shipping Date MMDDYY   Default is \r\ntransaction date.\r\n712-MOTO/ eCommerce Indicator.7= \r\nNon-Authenticated Channel Encrypted. \r\n(SSL)\r\n715-Order Number  \r\n716-Ship to Zip Code\r\n0717-Item 1 Text  (Present in all capital \r\nletters)\r\n0732-Electronic Goods Indicator (EGI)P= \r\nPhysical Item     \r\n1008-Token Request field;  ID:  Will return \r\nmasked credit card number\r\n8002-DataBase Location Name\r\n8006-DataBase Chain Code Name",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-requisite:\r\n1. In the PVO Maintenance site set \"Credit Card Processing by BOTS\" Off for the supplier\r\n2. Set debug on both app servers Classname =com.tickets.util.card.ProtobaseProcCardImpl level = 30\r\n3. For Supplier set text code MPMKEY=38004\r\n4.Change the CVV Response in Merchant Maintenance page to invalid entries. (e,g-A,B,C,D,E)\r\n2. Launch single tickets application with the following URL \r\n\r\n3. 1.Select a number from the drop down list as >.\r\n2. Select Price Level as Best Available.\r\n3. Click on Continue button.\r\n4. 1. Enter the Recaptcha  displayed in the Recaptcha  verification image.\r\n2. Click the continue button.\r\n5. Click the continue button.\r\n6. Click the continue button.\r\n7. Enter value for the following required fields:First name \r\nLast name \r\nAdd 1 \r\nCity, Postal Code \r\nState \r\nEmail Confirm Email \r\nPhone \r\nCC Type : Master/Visa/Discover\r\nCC no \r\nEXP \r\nCVV   \r\nDelivery Method \r\n8. Click on Buy Tickets in the Summary frame\r\nVerify the user is shown valid error message in the payment page\r\n9. Verify the field 0040 in Transaction type 01 response is 'N'\r\n10. Verify type 61 request is send by PVO and response is received\r\n11. Verify the fields in Type 61 request match the new API template",
        "expected": "1. \r\n2. The application is launched.\r\n3. Recaptcha verification page should be displayed\r\n4. The ticket price details page should be displayed.\r\n5. The shopping mart page should be displayed.\r\n6. Payment  page should be displayed.\r\n7. \r\n8. User should get credit card auth failed error message in the payment page\r\n9. The field 0040 in Transaction type 01 response is \r\n'N'\r\n10. Type 61 request is send by PVO and \r\nresponse is received\r\n11. Field and values:\r\n1-61 (Transaction Type )\r\n2-Transaction Amount  \r\n3-Card Account Number \r\n4-Card Expiration Date MMYY\r\n7-Reference Number  \r\n25-Business Date MMDDYY   \r\n70-Customer Code-Merchant assigned code \r\nidentifying customer. Default to field 7\r\n71-Tax Included Indicator 0= Non-Taxable      \r\n1= Yes     2= Exempt\r\n72-Tax Amount\r\n109-Terminal ID   \r\n110-Cashier ID\r\n115-Transaction Qualifier-Determines type of \r\naccount used.010=Credit\r\n190-eCommerce Indicator (ECI)7= \r\nNon-Authenticated Channel Encrypted. \r\n(SSL)\r\n191-Electronic Goods Indicator (EGI)P= \r\nPhysical Item   \r\n711-Shipping Date MMDDYY   Default is \r\ntransaction date.\r\n712-MOTO/ eCommerce Indicator.7= \r\nNon-Authenticated Channel Encrypted. \r\n(SSL)\r\n715-Order Number  \r\n716-Ship to Zip Code\r\n0717-Item 1 Text  (Present in all capital \r\nletters)\r\n0732-Electronic Goods Indicator (EGI)P= \r\nPhysical Item     \r\n1008-Token Request field;  ID:  Will return \r\nmasked credit card number\r\n8002-DataBase Location Name\r\n8006-DataBase Chain Code Name"
      }
    ],
    "custom_jiras": "59.1"
  },
  {
    "id": 30692791,
    "title": "Verify in Type 22 responses field 1003 contains response code and field 1004 contains the description",
    "section_id": 1684995,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13318",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C151396",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. At Supplier level, set \"Credit Card processing by \r\nBOTS=OFF\r\nSet debug on both app servers Classname \r\n=com.tickets.util.card.ProtobaseProcCardImpl \r\nlevel = 30\r\nUse MPMKEY 38003\r\n2. Launch single tickets application with the following URL \r\n\r\nExpected Result:\r\nThe application is launched.\r\n3. 1.Select a number from the drop down list as >.\r\n2. Select Price Level as Best Available.\r\n3. Click on Continue button.\r\nExpected Result:\r\nRecaptcha verification page should be displayed\r\n4. 1. Enter the Recaptcha  displayed in the Recaptcha  verification image.\r\n2. Click the continue button.\r\nExpected Result:\r\nThe ticket price details page should be displayed.\r\n5. Click the continue button.\r\nExpected Result:\r\nThe shopping mart page should be displayed.\r\n6. Click the continue button.\r\nExpected Result:\r\nPayment  page should be displayed.\r\n7. Enter value for the following required fields:First name \r\nLast name \r\nAdd 1 \r\nCity, Postal Code \r\nState \r\nEmail Confirm Email \r\nPhone \r\nCC Type : Master/Visa/Discover\r\nCC no \r\nEXP \r\nCVV   \r\nDelivery Method \r\n8. Using card number 42XXXXXXXXXX4242 will cause the transaction to hang indefinitely\r\nExpected Result:\r\nThe user should get timeout error message\r\n9. 1. Login to The PVO logs\r\n2. Verify in Type 22 responses field 1003 contains response code and field 1004 contains the description\r\nExpected Result:\r\nThe following details should be displayed correctly in the logs:\r\n\r\nIn Type 22 responses field 1003 should contains response code and field 1004 should contains the description",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. At Supplier level, set \"Credit Card processing by \r\nBOTS=OFF\r\nSet debug on both app servers Classname \r\n=com.tickets.util.card.ProtobaseProcCardImpl \r\nlevel = 30\r\nUse MPMKEY 38003\r\n2. Launch single tickets application with the following URL \r\n\r\n3. 1.Select a number from the drop down list as >.\r\n2. Select Price Level as Best Available.\r\n3. Click on Continue button.\r\n4. 1. Enter the Recaptcha  displayed in the Recaptcha  verification image.\r\n2. Click the continue button.\r\n5. Click the continue button.\r\n6. Click the continue button.\r\n7. Enter value for the following required fields:First name \r\nLast name \r\nAdd 1 \r\nCity, Postal Code \r\nState \r\nEmail Confirm Email \r\nPhone \r\nCC Type : Master/Visa/Discover\r\nCC no \r\nEXP \r\nCVV   \r\nDelivery Method \r\n8. Using card number 42XXXXXXXXXX4242 will cause the transaction to hang indefinitely\r\n9. 1. Login to The PVO logs\r\n2. Verify in Type 22 responses field 1003 contains response code and field 1004 contains the description",
        "expected": "1. \r\n2. The application is launched.\r\n3. Recaptcha verification page should be displayed\r\n4. The ticket price details page should be displayed.\r\n5. The shopping mart page should be displayed.\r\n6. Payment  page should be displayed.\r\n7. \r\n8. The user should get timeout error message\r\n9. The following details should be displayed correctly in the logs:\r\n\r\nIn Type 22 responses field 1003 should contains response code and field 1004 should contains the description"
      }
    ],
    "custom_jiras": "59.1"
  },
  {
    "id": 30692792,
    "title": "Verify fields 720 and 732 are not passed for transaction type 61",
    "section_id": 1684995,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13905",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C151397",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite:\r\n1. In the PVO Maintenance site set \"Credit Card Processing by BOTS\" Off for the supplier\r\n2. Set debug on app servers Classname =com.tickets.util.card.ProtobaseProcCardImpl level = 30\r\n3. For Supplier set text code MPMKEY=38003\r\n4.Confirm fusebox.inquiry.enabled property as true on app tier\r\n    tdc.cc_processing.include_field_6 set to true on app tier\r\n    tdc.cc_processing.include_field_8002 set to true on app tier\r\n5. Confirm MPMKEY 38003 has terminal ID set to 20120016\r\n6.Change the CVV Response for the Fusebox merchant to something like A,B,C,D,E* to cause CVV failure\r\n2. Steps:\r\n1.Launch QPVM link and lock seats such that the order total should not be $80.00 or $90.00\r\n3. 2.Select/add a  Fusebox enabled credit card on Payment page\r\n4. 3.On checkout, card auth. error will be displayed\r\n5. 3.Verify in the original request sent to Fusebox(field 1 is passed as 61), the fields 720 and 732 are not passed\r\nExpected Result:\r\nIn the original request sent to Fusebox(field 1 is \r\npassed as 61), the fields 720 and 732 are not p",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite:\r\n1. In the PVO Maintenance site set \"Credit Card Processing by BOTS\" Off for the supplier\r\n2. Set debug on app servers Classname =com.tickets.util.card.ProtobaseProcCardImpl level = 30\r\n3. For Supplier set text code MPMKEY=38003\r\n4.Confirm fusebox.inquiry.enabled property as true on app tier\r\n    tdc.cc_processing.include_field_6 set to true on app tier\r\n    tdc.cc_processing.include_field_8002 set to true on app tier\r\n5. Confirm MPMKEY 38003 has terminal ID set to 20120016\r\n6.Change the CVV Response for the Fusebox merchant to something like A,B,C,D,E* to cause CVV failure\r\n2. Steps:\r\n1.Launch QPVM link and lock seats such that the order total should not be $80.00 or $90.00\r\n3. 2.Select/add a  Fusebox enabled credit card on Payment page\r\n4. 3.On checkout, card auth. error will be displayed\r\n5. 3.Verify in the original request sent to Fusebox(field 1 is passed as 61), the fields 720 and 732 are not passed",
        "expected": "1. \r\n2. \r\n3. \r\n4. \r\n5. In the original request sent to Fusebox(field 1 is \r\npassed as 61), the fields 720 and 732 are not p"
      }
    ],
    "custom_jiras": "63"
  },
  {
    "id": 30692793,
    "title": "Verify fields 720 and 732 are not passed for transaction type 01 and 07 with tax",
    "section_id": 1684995,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13905",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_refs": "C151398",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite:\r\n1. In the PVO Maintenance site set \"Credit Card Processing by BOTS\" Off for the supplier\r\n2. Set debug on app servers Classname =com.tickets.util.card.ProtobaseProcCardImpl level = 30\r\n3. For Supplier set text code MPMKEY=38004\r\n4.Confirm fusebox.inquiry.enabled property as true on app tier\r\n    tdc.cc_processing.include_field_6 set to true on app tier\r\n    tdc.cc_processing.include_field_8002 set to true on app tier \r\n5. Confirm MPMKEY 38004 has terminal ID set to 20120015\r\n6.Set PBTR with a non zero value like 0.06 at Sub_agency, Org or Supplier level\r\n2. Steps:\r\n1.Launch QPVM link and lock seats such that the order total should be $90.00\r\n3. 2.Complete the transaction using Fusebox enabled credit card\r\n4. 3.Verify 01 (authorization) is sent to Fusebox and response from Fusebox is received then 07 is send\r\nExpected Result:\r\n01 (authorization) is sent to Fusebox and \r\nresponse from Fusebox is received then 07 is \r\nsend\r\n5. 4.Verify in the 01 request sent to Fusebox the fields 720 and 732 are not passed\r\nExpected Result:\r\nIn the 01 request sent to Fusebox the fields \r\n720 and 732 are not passed\r\n6. 5.Verify in the 07 request sent to Fusebox the fields 720 and 732 are not passed\r\nExpected Result:\r\nIn the 07 request sent to Fusebox the fields \r\n720 and 732 are not passed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite:\r\n1. In the PVO Maintenance site set \"Credit Card Processing by BOTS\" Off for the supplier\r\n2. Set debug on app servers Classname =com.tickets.util.card.ProtobaseProcCardImpl level = 30\r\n3. For Supplier set text code MPMKEY=38004\r\n4.Confirm fusebox.inquiry.enabled property as true on app tier\r\n    tdc.cc_processing.include_field_6 set to true on app tier\r\n    tdc.cc_processing.include_field_8002 set to true on app tier \r\n5. Confirm MPMKEY 38004 has terminal ID set to 20120015\r\n6.Set PBTR with a non zero value like 0.06 at Sub_agency, Org or Supplier level\r\n2. Steps:\r\n1.Launch QPVM link and lock seats such that the order total should be $90.00\r\n3. 2.Complete the transaction using Fusebox enabled credit card\r\n4. 3.Verify 01 (authorization) is sent to Fusebox and response from Fusebox is received then 07 is send\r\n5. 4.Verify in the 01 request sent to Fusebox the fields 720 and 732 are not passed\r\n6. 5.Verify in the 07 request sent to Fusebox the fields 720 and 732 are not passed",
        "expected": "1. \r\n2. \r\n3. \r\n4. 01 (authorization) is sent to Fusebox and \r\nresponse from Fusebox is received then 07 is \r\nsend\r\n5. In the 01 request sent to Fusebox the fields \r\n720 and 732 are not passed\r\n6. In the 07 request sent to Fusebox the fields \r\n720 and 732 are not passed"
      }
    ],
    "custom_jiras": "63"
  },
  {
    "id": 30692794,
    "title": "Verify the Fusebox request and response for single tickets transactions when there is no timeout",
    "section_id": 1684995,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13318",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_refs": "C151399",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1. In the PVO Maintenance site set \"Credit Card \r\nProcessing by BOTS\" Off for the supplier\r\n2. Set debug on both app servers Classname \r\n=com.tickets.util.card.ProtobaseProcCardImpl \r\nlevel = 30\r\n3. For Supplier set text code MPMKEY=38003\r\n4.Set fusebox.inquiry.enabled property as true \r\non app tiers\r\n5. Confirm Terminal ID as 20120016 for Fusebox \r\nMerchant Type ( for 38003 Merchant key )\r\n2. Launch the PVM single tickets application URL\r\nExpected Result:\r\nSchedule page is displayed\r\n3. Click Buy Tickets button against desired event\r\nExpected Result:\r\nAvailability page is displayed\r\n4. Select tickets and click Continue button\r\nExpected Result:\r\nRe-captcha modal is displayed\r\n5. Enter correct text in recaptcha modal and click Continue\r\nExpected Result:\r\nThe shopping cart should be displayed.\r\n6. Click the continue button on shopping cart\r\nExpected Result:\r\nLog in modal is displayed\r\n7. Click Add New Card button and enter card details on the card modal\r\n\r\nAdd credit card (Use any card in the list -http://tdcsharepoint.tixx.tickets.com/sites/NA/PDT/QA/Protobase/FuseBox Test Cards/Elavon Test Card Numbers 12-2011.xlsx \r\nExpected Result:\r\nThe card is added\r\n8. Fill in all other required fields on Payment page and click on Buy Tickets in the Summary frame\r\nExpected Result:\r\nThe user is navigated to Confirmation page\r\n9. 1. Login to The PVO logs\r\n2. Verify the following detail\r\n1. In the Fusebox response field 71 should default to \"1\"\r\n2.The field 191 and 732 should default to \"P\"\r\n3.The field 190 and 712 should have the same value\r\n4.The card name, card holder name, transaction amount should be displayed correctly in the logs\r\n\r\nb. Field response 109, 8002 and 8006 should display the set Fusebox values\r\nExpected Result:\r\nThe following details should be displayed correctly in the logs:\r\n1. In the Fusebox response field 71 should default to \"1\"\r\n2.The field 191 and 732 should default to \"P\"\r\n3.The field 190 and 712 should have the same value\r\n4.The card name, card holder name, transaction amount should be displayed correctly in the logs\r\n\r\nb. Field response 109, 8002 and 8006 should display the set Fusebox values\r\n10. Verify the PVO database\r\nselect * from pvo.CARD_RESPONSE where ref=\r\nselect * from pvo.CARD_RESPONSE_DETAIL where ref=\r\nExpected Result:\r\nThe DB is updated correctly based on the response from Fusebox.\r\n11. Click Continue button on Login modal\r\nExpected Result:\r\nPayment page is displayed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. In the PVO Maintenance site set \"Credit Card \r\nProcessing by BOTS\" Off for the supplier\r\n2. Set debug on both app servers Classname \r\n=com.tickets.util.card.ProtobaseProcCardImpl \r\nlevel = 30\r\n3. For Supplier set text code MPMKEY=38003\r\n4.Set fusebox.inquiry.enabled property as true \r\non app tiers\r\n5. Confirm Terminal ID as 20120016 for Fusebox \r\nMerchant Type ( for 38003 Merchant key )\r\n2. Launch the PVM single tickets application URL\r\n3. Click Buy Tickets button against desired event\r\n4. Select tickets and click Continue button\r\n5. Enter correct text in recaptcha modal and click Continue\r\n6. Click the continue button on shopping cart\r\n7. Click Add New Card button and enter card details on the card modal\r\n\r\nAdd credit card (Use any card in the list -http://tdcsharepoint.tixx.tickets.com/sites/NA/PDT/QA/Protobase/FuseBox Test Cards/Elavon Test Card Numbers 12-2011.xlsx \r\n8. Fill in all other required fields on Payment page and click on Buy Tickets in the Summary frame\r\n9. 1. Login to The PVO logs\r\n2. Verify the following detail\r\n1. In the Fusebox response field 71 should default to \"1\"\r\n2.The field 191 and 732 should default to \"P\"\r\n3.The field 190 and 712 should have the same value\r\n4.The card name, card holder name, transaction amount should be displayed correctly in the logs\r\n\r\nb. Field response 109, 8002 and 8006 should display the set Fusebox values\r\n10. Verify the PVO database\r\nselect * from pvo.CARD_RESPONSE where ref=\r\nselect * from pvo.CARD_RESPONSE_DETAIL where ref=\r\n11. Click Continue button on Login modal",
        "expected": "1. \r\n2. Schedule page is displayed\r\n3. Availability page is displayed\r\n4. Re-captcha modal is displayed\r\n5. The shopping cart should be displayed.\r\n6. Log in modal is displayed\r\n7. The card is added\r\n8. The user is navigated to Confirmation page\r\n9. The following details should be displayed correctly in the logs:\r\n1. In the Fusebox response field 71 should default to \"1\"\r\n2.The field 191 and 732 should default to \"P\"\r\n3.The field 190 and 712 should have the same value\r\n4.The card name, card holder name, transaction amount should be displayed correctly in the logs\r\n\r\nb. Field response 109, 8002 and 8006 should display the set Fusebox values\r\n10. The DB is updated correctly based on the response from Fusebox.\r\n11. Payment page is displayed"
      }
    ],
    "custom_jiras": "59.1"
  },
  {
    "id": 30692795,
    "title": "Verify the Givex Login Page Via My Tickets & Givex Button is configurable.",
    "section_id": 1684996,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C151400",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Givex Setup:\r\n\r\nLaunch the PVO-QA Maintenance site using the URL: \r\nLogin using valid user credentials as:\r\nUsername: \r\nPassword: \r\n1. Click on the + icon corresponding to Supplier Related.\r\n2. Click on Supplier Link\r\n3.Enter one supplier name in the text box\r\n4.Click on \"Edit\" button\r\n5.Click on Multiple Edit button against the Supplier Text button\r\n\r\nText Code setup\r\nSet the following textcodes:\r\n1. \"GVXINTEN\" - GIVEX_INTEGRATION_ENABLED: Defaults to \"false\". Set this to \"true\" (for the MyTickets supplier) to enable this feature.\r\n2. \"GVXSCM\" - GIVEX_SUPPLIER_CODE_MAPPING: No default vaue. This text code must be set for the MyTickets supplier to the value supplied by Givex for this supplier. Givex will use this value to find this patron in the correct \"data set\" on their side. This value will be passed in the Partner_Username field to Givex during the web service call (to get the token).\r\n3. \"GVLHTML\" - GIVEX_LOGIN_HTML: No default value. Use this to place any extra HTML or text above the Givex login button.\r\n\r\nPurge the Caches.\r\n\r\nLaunch the debug URLS:\r\nPVOQA1\r\n\r\n\r\nPVOQA2\r\n\r\n\r\nSet up the debug level:\r\n\"com.tickets.application.myticketsworker.givex.GivexHttpTranslator\" to 30\r\nand\r\n\"com.tickets.util.HttpProcessor.GenericHttpTransporter\" to 0\r\n\r\nLaunch the Pokemon site and set the below properties:\r\ngivex.webservices.host_url - property for the host url\r\nQA: \r\n\r\ngivex.webservices.host_name - property for the host name\r\nQA: Defaults to \"\" (empty string)\r\n\r\ngivex.webservices.host_port - property for the host port\r\nQA: Defaults to \"\" (empty string)\r\n\r\ngivex.partner_password - property for the partner password\r\nQA: value is \"9875\"\r\n\r\ngivex.operator_name - property for the operator name\r\nQA: value is \"1234\"\r\n\r\ngivex.operator_password - property for the operator password\r\nQA: value is \"1234\"\r\n\r\ngivex.login.url - property for the URL to redirect to on the Givex side\r\nQA: \r\n\r\nNote: Do not set, Its already available in Maintenace with updated value",
    "custom_test_purpose": null,
    "custom_steps": "1. Enter the URL for MyTickets Login: \r\nExpected Result:\r\nThe application should be launched.\r\n2. Login as a valid user with the following details:\nUsername: \nPassword: \r\nExpected Result:\r\nAll the inventories should be listed.\r\n3. Login to the Givex application by\nclicking on the \"Manage Stored Value (Givex)\" button in the My Tickets tab\r\nExpected Result:\r\n1. The login button should be placed below the list of events, to the right side of the existing row of feature buttons that are available for transfer, resale and donation..\n2. The link to the Uptix site should be in the form of a My Tickets Inventory feature button and shall be configured similar in shape, color, font and other design elements to match existing feature buttons on the My Tickets Inventory Page\n3. On clicking the login button, a new browser window should open containing the Givex Portal.\r\n4. 1. Launch the maintenance site \n2. Go to the Supplier maintenance site\n3. Set the \"GLONIN\" to text to \"fortress_button_login_on.gif\" text other than that is displayed earlier.\r\nExpected Result:\r\nText code for Givex Portal Login button label should be edited\r\n5. Enter the Mytickets URL for Login: \r\nExpected Result:\r\nThe application should be launched.\r\n6. Login as a different valid user with the following details:\nUsername: \nPassword: \r\nExpected Result:\r\nThe user should be able to login for all the accounts in the supplier.\r\n7. Click on My Tickets Tab \r\nExpected Result:\r\nAll the inventories should be listed.\r\n8. The Givex login button label is shown as configured at the supplier level textcode\r\nExpected Result:\r\nThe Givex login button label should be shown as configured at the supplier level textcode. The value should be \"Login to Givex\"",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Enter the URL for MyTickets Login: \r\n2. Login as a valid user with the following details:\nUsername: \nPassword: \r\n3. Login to the Givex application by\nclicking on the \"Manage Stored Value (Givex)\" button in the My Tickets tab\r\n4. 1. Launch the maintenance site \n2. Go to the Supplier maintenance site\n3. Set the \"GLONIN\" to text to \"fortress_button_login_on.gif\" text other than that is displayed earlier.\r\n5. Enter the Mytickets URL for Login: \r\n6. Login as a different valid user with the following details:\nUsername: \nPassword: \r\n7. Click on My Tickets Tab \r\n8. The Givex login button label is shown as configured at the supplier level textcode",
        "expected": "1. The application should be launched.\r\n2. All the inventories should be listed.\r\n3. 1. The login button should be placed below the list of events, to the right side of the existing row of feature buttons that are available for transfer, resale and donation..\n2. The link to the Uptix site should be in the form of a My Tickets Inventory feature button and shall be configured similar in shape, color, font and other design elements to match existing feature buttons on the My Tickets Inventory Page\n3. On clicking the login button, a new browser window should open containing the Givex Portal.\r\n4. Text code for Givex Portal Login button label should be edited\r\n5. The application should be launched.\r\n6. The user should be able to login for all the accounts in the supplier.\r\n7. All the inventories should be listed.\r\n8. The Givex login button label should be shown as configured at the supplier level textcode. The value should be \"Login to Givex\""
      }
    ],
    "custom_jiras": null
  },
  {
    "id": 30692796,
    "title": "Verify tickets can be added to Google Pay wallet after a fixed package sale transaction.",
    "section_id": 1684997,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PVO-17628",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C151401",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set STGPE text code at Supplier level to true.\r\n2.Set the textcodes GETELIN,GETEHIN,GETEMIN ,GETTLAV",
    "custom_test_purpose": null,
    "custom_steps": "1. Complete a single sale transaction with T@H delivery method with a few tickets from a Fixed list package\r\nExpected Result:\r\nSingle sale transaction should be completed with T@H delivery method with a few tickets from a Fixed list package\r\n2. Click on \"Click here to view/Print tickets\" link on the confirmation page\r\nExpected Result:\r\nPrint tickets page should be displayed\r\n3. Verify the Add Pass to Google Pay Walletbutton is displaying at the Print Ticket page\r\nExpected Result:\r\n\"Add Pass to Google Pay\" Walletbutton should be display at the Print Ticket page\r\n4. Verify in console for the google Token generated.\r\nExpected Result:\r\nGoogle Token should be generated in console\r\n5. Verify that Patron is requested to sign in into Gmail if  patron is not yet already signed in.\r\nExpected Result:\r\nPatron should be requested to sign in into Gmail if  patron is not yet already signed in.\r\n6. Verify that Google confirmation Popup is displayed once the patron clicked on 'Add Pass to Google Pay Wallet ' (Refer Screenshot section of the design doc for details)\r\nExpected Result:\r\nGoogle confirmation Popup should be display once the patron clicked on 'Add Pass to Google Pay Wallet ' (Refer Screenshot section of the design doc for details)\r\n7. Verify all the Tickets are added to Google Pay wallet\r\nExpected Result:\r\nAll Tickets should be added to Google Pay wallet",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Complete a single sale transaction with T@H delivery method with a few tickets from a Fixed list package\r\n2. Click on \"Click here to view/Print tickets\" link on the confirmation page\r\n3. Verify the Add Pass to Google Pay Walletbutton is displaying at the Print Ticket page\r\n4. Verify in console for the google Token generated.\r\n5. Verify that Patron is requested to sign in into Gmail if  patron is not yet already signed in.\r\n6. Verify that Google confirmation Popup is displayed once the patron clicked on 'Add Pass to Google Pay Wallet ' (Refer Screenshot section of the design doc for details)\r\n7. Verify all the Tickets are added to Google Pay wallet",
        "expected": "1. Single sale transaction should be completed with T@H delivery method with a few tickets from a Fixed list package\r\n2. Print tickets page should be displayed\r\n3. \"Add Pass to Google Pay\" Walletbutton should be display at the Print Ticket page\r\n4. Google Token should be generated in console\r\n5. Patron should be requested to sign in into Gmail if  patron is not yet already signed in.\r\n6. Google confirmation Popup should be display once the patron clicked on 'Add Pass to Google Pay Wallet ' (Refer Screenshot section of the design doc for details)\r\n7. All Tickets should be added to Google Pay wallet"
      }
    ],
    "custom_jiras": "65.5"
  },
  {
    "id": 30692797,
    "title": "Verify Forward recipient can add the received  tickets to Google pay wallet from Recipient confirmation email",
    "section_id": 1684997,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PVO-17628",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C151402",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set STGPE text code at Mytixx Supplier level to true\r\n2.Have a Financial Patron with forward eligible tickets and a friend patron with valid email address \r\n3.Set the textcodes GETELIN,GETEHIN,GETEMIN ,GETTLAV",
    "custom_test_purpose": null,
    "custom_steps": "1. Login Mytixx as Financial Patron & do a forward transaction with above friend patron\r\nExpected Result:\r\nForward transaction should be complete with above friend patron\r\n2. Verify the recipent is recieved with FTREEMSG email\r\nExpected Result:\r\nRecipent should be recieve with FTREEMSG email\r\n3. Verify the Add Pass to Google Pay Wallet button is displaying at the Print Ticket page\r\nExpected Result:\r\n\"Add Pass to Google Pay\" Wallet button should be display at the Print Ticket page\r\n4. Verify in console for the google Token generated.\r\nExpected Result:\r\nGoogle Token should be generate in console.\r\n5. Verify that Patron is requested to sign in into Gmail if  patron is not yet already signed in\r\nExpected Result:\r\nPatron should be request to sign in into Gmail if  patron is not yet already signed in\r\n6. Verify that Google confirmation Popup is displayed once the patron clicked on 'Add Pass to Google Pay Wallet ' (Refer Screenshot section of the design doc for details)\r\nExpected Result:\r\nGoogle confirmation Popup should be display once the patron clicked on 'Add Pass to Google Pay Wallet ' (Refer Screenshot section of the design doc for details)\r\n7. Verify that all the Tickets are added to Google Pay wallet.\r\nExpected Result:\r\nAll the Tickets should be add to Google Pay wallet.\r\n8. Verify that the ticket details are displayed correctly.\r\nExpected Result:\r\nTicket details should be display correctly.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login Mytixx as Financial Patron & do a forward transaction with above friend patron\r\n2. Verify the recipent is recieved with FTREEMSG email\r\n3. Verify the Add Pass to Google Pay Wallet button is displaying at the Print Ticket page\r\n4. Verify in console for the google Token generated.\r\n5. Verify that Patron is requested to sign in into Gmail if  patron is not yet already signed in\r\n6. Verify that Google confirmation Popup is displayed once the patron clicked on 'Add Pass to Google Pay Wallet ' (Refer Screenshot section of the design doc for details)\r\n7. Verify that all the Tickets are added to Google Pay wallet.\r\n8. Verify that the ticket details are displayed correctly.",
        "expected": "1. Forward transaction should be complete with above friend patron\r\n2. Recipent should be recieve with FTREEMSG email\r\n3. \"Add Pass to Google Pay\" Wallet button should be display at the Print Ticket page\r\n4. Google Token should be generate in console.\r\n5. Patron should be request to sign in into Gmail if  patron is not yet already signed in\r\n6. Google confirmation Popup should be display once the patron clicked on 'Add Pass to Google Pay Wallet ' (Refer Screenshot section of the design doc for details)\r\n7. All the Tickets should be add to Google Pay wallet.\r\n8. Ticket details should be display correctly."
      }
    ],
    "custom_jiras": "65.5"
  },
  {
    "id": 30692798,
    "title": "Verify that Printable tickets can be added to Google Pay wallet if an offer contain multiple event tickets such that only  one of the event ticket is printabke now (PMTIXXPT honored) .",
    "section_id": 1684997,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PVO-17628",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C151403",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set STGPE text code at Supplier level to true or default.\r\n2.Have two events such that only  one of the event ticket is printabke now (PMTIXXPT honored) .",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the Single sales URL  for the above event\r\nExpected Result:\r\nSingle sales should be launch for the above event\r\n2. Select seats and navigate to cart page\r\nExpected Result:\r\nShopping cart page should be display\r\n3. Add another event, Select seats and Login\r\nExpected Result:\r\nEvent should be added and login page should be displayed\r\n4. Select Delivery method as T@H and complete the transaction\r\nExpected Result:\r\nTransaction shouldd be completed with delivery method as T@H\r\n5. Click on \"Click here to view/Print tickets\" link on the confirmation page\r\nExpected Result:\r\nPrint tickets page should be display\r\n6. Verify the tickets are displayed as not eligible to print  for one event which is not printable now  & Add Pass to Google Pay Wallet button is not displaying in the Print ticket page  against that event\r\nExpected Result:\r\nTickets are displayed should not be eligible to print for one event which is not printable now  & Add Pass to Google Pay Wallet button should not be display in the Print ticket page  against that event\r\n7. Verify that tickets are displayed as eligible to print  for one event which is printable now  & Add Pass to Google Pay Wallet button is displaying in the Print ticket page  against that event \r\nExpected Result:\r\nTickets are displayed should be eligible to print for one event which is printable now  & Add Pass to Google Pay Wallet button should be display in the Print ticket page against that event \r\n8. Verify the Patron is getting the Confirmation email\r\nExpected Result:\r\nPatron should be display in the Confirmation email\r\n9. Click on \"Click here to print\" link\r\nExpected Result:\r\nSuccessful\r\n10. Verify the user is navigated to Print Tickets page\r\nExpected Result:\r\nPrint Tickets page should be display\r\n11. Verify the tickets are displayed as not eligible to print  & Add Pass to Google Pay Wallet button is not displaying in the Print ticket page \r\nExpected Result:\r\nTickets are displayed should not be eligible to print  & Add Pass to Google Pay Wallet button should not be display in the Print ticket page \r\n12. Verify that tickets are displayed as eligible to print  for one event which is printable now  & Add Pass to Google Pay Wallet button is displaying in the Print ticket page  against that event \r\nExpected Result:\r\nTickets are displayed should be eligible to print for one event which is printable now  & Add Pass to Google Pay Wallet button should be display in the Print ticket page against that event",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the Single sales URL  for the above event\r\n2. Select seats and navigate to cart page\r\n3. Add another event, Select seats and Login\r\n4. Select Delivery method as T@H and complete the transaction\r\n5. Click on \"Click here to view/Print tickets\" link on the confirmation page\r\n6. Verify the tickets are displayed as not eligible to print  for one event which is not printable now  & Add Pass to Google Pay Wallet button is not displaying in the Print ticket page  against that event\r\n7. Verify that tickets are displayed as eligible to print  for one event which is printable now  & Add Pass to Google Pay Wallet button is displaying in the Print ticket page  against that event \r\n8. Verify the Patron is getting the Confirmation email\r\n9. Click on \"Click here to print\" link\r\n10. Verify the user is navigated to Print Tickets page\r\n11. Verify the tickets are displayed as not eligible to print  & Add Pass to Google Pay Wallet button is not displaying in the Print ticket page \r\n12. Verify that tickets are displayed as eligible to print  for one event which is printable now  & Add Pass to Google Pay Wallet button is displaying in the Print ticket page  against that event",
        "expected": "1. Single sales should be launch for the above event\r\n2. Shopping cart page should be display\r\n3. Event should be added and login page should be displayed\r\n4. Transaction shouldd be completed with delivery method as T@H\r\n5. Print tickets page should be display\r\n6. Tickets are displayed should not be eligible to print for one event which is not printable now  & Add Pass to Google Pay Wallet button should not be display in the Print ticket page  against that event\r\n7. Tickets are displayed should be eligible to print for one event which is printable now  & Add Pass to Google Pay Wallet button should be display in the Print ticket page against that event \r\n8. Patron should be display in the Confirmation email\r\n9. Successful\r\n10. Print Tickets page should be display\r\n11. Tickets are displayed should not be eligible to print  & Add Pass to Google Pay Wallet button should not be display in the Print ticket page \r\n12. Tickets are displayed should be eligible to print for one event which is printable now  & Add Pass to Google Pay Wallet button should be display in the Print ticket page against that event"
      }
    ],
    "custom_jiras": "65.5"
  },
  {
    "id": 30692799,
    "title": "Verify if a different address is assigned for T@H delivery other than the purchasing patron, the recipient is able to add the tickets to the Google pay wallet",
    "section_id": 1684997,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PVO-17628",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C151404",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set STGPE text code at Supplier level to true or default.",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the Single sales URL for an event\r\nExpected Result:\r\nSingle sales should be launch  for an event\r\n2. Select seats and navigate to cart page\r\nExpected Result:\r\nShopping cart page should be displayed\r\n3. Click on Add Tickets and lock few seats for same event\r\nExpected Result:\r\nEvent should be added and login page should be display\r\n4. Select Delivery method as T@H and give email address which is different from confirmation email address & Complete the transaction\r\nExpected Result:\r\nTransaction should be completed successfully with the delivery method as T@H\r\n5. Click on \"Click here to view/Print tickets\" link on the confirmation page\r\nExpected Result:\r\nPrint tickets page should be displayed\r\n6. Verify the  Add Pass to Google Pay Wallet button is displaying at the Print Ticket page.\r\nExpected Result:\r\n\"Add Pass to Google Pay\" Walletbutton should be display at the Print Ticket page\r\n7. Click on the Add Pass to Google Pay wallet button\r\nExpected Result:\r\nAdd Pass to Google Pay wallet button should be clicked\r\n8. Verify all the Tickets  are added to Google Pay wallet for all offers from same event.\r\nExpected Result:\r\nAll the Tickets (of all events) should be add to Google Pay wallet.\r\n9. Verify the patron is getting confirmation email and T@H email address is also getting separate email \r\nExpected Result:\r\nPatron should get confirmation email and T@H email address should also get a separate email",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the Single sales URL for an event\r\n2. Select seats and navigate to cart page\r\n3. Click on Add Tickets and lock few seats for same event\r\n4. Select Delivery method as T@H and give email address which is different from confirmation email address & Complete the transaction\r\n5. Click on \"Click here to view/Print tickets\" link on the confirmation page\r\n6. Verify the  Add Pass to Google Pay Wallet button is displaying at the Print Ticket page.\r\n7. Click on the Add Pass to Google Pay wallet button\r\n8. Verify all the Tickets  are added to Google Pay wallet for all offers from same event.\r\n9. Verify the patron is getting confirmation email and T@H email address is also getting separate email",
        "expected": "1. Single sales should be launch  for an event\r\n2. Shopping cart page should be displayed\r\n3. Event should be added and login page should be display\r\n4. Transaction should be completed successfully with the delivery method as T@H\r\n5. Print tickets page should be displayed\r\n6. \"Add Pass to Google Pay\" Walletbutton should be display at the Print Ticket page\r\n7. Add Pass to Google Pay wallet button should be clicked\r\n8. All the Tickets (of all events) should be add to Google Pay wallet.\r\n9. Patron should get confirmation email and T@H email address should also get a separate email"
      }
    ],
    "custom_jiras": "65.5"
  },
  {
    "id": 30692800,
    "title": "Verify all designated recipients in split delivery page receive the correct kind and number of tickets and they can add the tickets to Google pay wallet",
    "section_id": 1684997,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PVO-17628",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C151405",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set STGPE text code at Supplier level to true or default.",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the Single sales URL for an event\r\nExpected Result:\r\nSingle sales should be launch  for an event\r\n2. Select seats and navigate to cart page\r\nExpected Result:\r\nShopping cart page should be displayed\r\n3. Add another event, Select seats and Login\r\nExpected Result:\r\nEvent should be added and login page should be successful\r\n4. Split order & Select Delivery method as T@H \r\nExpected Result:\r\nOrder should be split and Delivery method should be selected as T@H \r\n5. Set first event order for email 1, Second order to email 2 . Make sure email 1 and email 2 is the confirmation email  complete the transaction\r\nExpected Result:\r\nTransaction should be completed successfully\r\n6. Click on \"Click here to view/Print tickets\" link on the confirmation page\r\nExpected Result:\r\nPrint tickets page should be displayed\r\n7. Verify the  Add Pass to Google Pay Wallet button is displaying at the Print Ticket page.\r\nExpected Result:\r\n\"Add Pass to Google Pay\" Walletbutton should be display at the Print Ticket page\r\n8. Click on the Add Pass to Google Pay wallet button\r\nExpected Result:\r\nAdd Pass to Google Pay wallet button should be clicked\r\n9. Verify all the Tickets (of all events) are added to Google Pay wallet.\r\nExpected Result:\r\nAll the Tickets (of all events) should be added to Google Pay wallet.\r\n10. Verify the recipient is getting T@H and confirmation emails\r\nExpected Result:\r\nRecipient should get T@H and confirmation emails\r\n11. Click on T@H print link from confirmation email\r\nExpected Result:\r\nPrint ticket page should be displayed\r\n12. Add to Google Pay from Print ticket page\r\nExpected Result:\r\nAddition should be successfull",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the Single sales URL for an event\r\n2. Select seats and navigate to cart page\r\n3. Add another event, Select seats and Login\r\n4. Split order & Select Delivery method as T@H \r\n5. Set first event order for email 1, Second order to email 2 . Make sure email 1 and email 2 is the confirmation email  complete the transaction\r\n6. Click on \"Click here to view/Print tickets\" link on the confirmation page\r\n7. Verify the  Add Pass to Google Pay Wallet button is displaying at the Print Ticket page.\r\n8. Click on the Add Pass to Google Pay wallet button\r\n9. Verify all the Tickets (of all events) are added to Google Pay wallet.\r\n10. Verify the recipient is getting T@H and confirmation emails\r\n11. Click on T@H print link from confirmation email\r\n12. Add to Google Pay from Print ticket page",
        "expected": "1. Single sales should be launch  for an event\r\n2. Shopping cart page should be displayed\r\n3. Event should be added and login page should be successful\r\n4. Order should be split and Delivery method should be selected as T@H \r\n5. Transaction should be completed successfully\r\n6. Print tickets page should be displayed\r\n7. \"Add Pass to Google Pay\" Walletbutton should be display at the Print Ticket page\r\n8. Add Pass to Google Pay wallet button should be clicked\r\n9. All the Tickets (of all events) should be added to Google Pay wallet.\r\n10. Recipient should get T@H and confirmation emails\r\n11. Print ticket page should be displayed\r\n12. Addition should be successfull"
      }
    ],
    "custom_jiras": "65.5"
  },
  {
    "id": 30692801,
    "title": "Verify \"Add Pass to Google Pay Wallet\" Button is not displayed   in Print Tickets page after completing a single sale transaction when STGPE set  to false",
    "section_id": 1684997,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PVO-17628",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C151406",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set STGPE text code to false in supplier level",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the Single sales URL for an event\r\nExpected Result:\r\nSingle sales should be launch  for an event\r\n2. Select seats and navigate to cart page\r\nExpected Result:\r\nShopping cart page should be displayed\r\n3. Click on Add Tickets and lock few seats for same event\r\nExpected Result:\r\nEvent should be added and login page should be display\r\n4. Select Delivery method as T@H and Complete the transaction\r\nExpected Result:\r\nTransaction should be completed successfully with the delivery method as T@H\r\n5. Click on \"Click here to view/Print tickets\" link on the confirmation page\r\nExpected Result:\r\nPrint tickets page should be displayed\r\n6. Verify the  Add Pass to Google Pay Walletbutton is not displaying at the Print Ticket page\r\nExpected Result:\r\n\"Add Pass to Google Pay\" Wallet button should not be displayed in the Print Ticket page",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the Single sales URL for an event\r\n2. Select seats and navigate to cart page\r\n3. Click on Add Tickets and lock few seats for same event\r\n4. Select Delivery method as T@H and Complete the transaction\r\n5. Click on \"Click here to view/Print tickets\" link on the confirmation page\r\n6. Verify the  Add Pass to Google Pay Walletbutton is not displaying at the Print Ticket page",
        "expected": "1. Single sales should be launch  for an event\r\n2. Shopping cart page should be displayed\r\n3. Event should be added and login page should be display\r\n4. Transaction should be completed successfully with the delivery method as T@H\r\n5. Print tickets page should be displayed\r\n6. \"Add Pass to Google Pay\" Wallet button should not be displayed in the Print Ticket page"
      }
    ],
    "custom_jiras": "65.5"
  },
  {
    "id": 30692802,
    "title": "Verify adding multiple tickets to Google wallet after completing a Box office T@H transaction",
    "section_id": 1684997,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PVO-17628",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_refs": "C151407",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. \t\nLaunch the Single sales URL for an event\r\nExpected Result:\r\n\t\nSingle sales should be launch for an event\r\n2. Select seats and navigate to cart page\r\nExpected Result:\r\nShopping cart page should be displayed\r\n3. Add another event\r\nExpected Result:\r\nEvent should be added successfully\r\n4. Select seats and Login\r\nExpected Result:\r\nLogin should be successful\r\n5. Select Delivery method as T@H\r\nExpected Result:\r\nDelivery method should be as T@H\r\n6. Complete the transaction\r\nExpected Result:\r\n\t\nTransaction should be completed successfully\r\n7. Click on \"Click here to view/Print tickets\" link on the confirmation page\r\nExpected Result:\r\n\t\nPrint tickets page should be displayed\r\n8. \t\nVerify the Add Pass to Google Pay Wallet button is displaying at the Print Ticket page.\r\nExpected Result:\r\n\"Add Pass to Google Pay\" Walletbutton should be display at the Print Ticket page\r\n9. Click on the Add Pass to Google Pay wallet button\r\nExpected Result:\r\n\t\nSuccessful\r\n10. Verify the add multiple tickets to Google wallet\r\nExpected Result:\r\nMultiple tickets should be added to google wallet",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. \t\nLaunch the Single sales URL for an event\r\n2. Select seats and navigate to cart page\r\n3. Add another event\r\n4. Select seats and Login\r\n5. Select Delivery method as T@H\r\n6. Complete the transaction\r\n7. Click on \"Click here to view/Print tickets\" link on the confirmation page\r\n8. \t\nVerify the Add Pass to Google Pay Wallet button is displaying at the Print Ticket page.\r\n9. Click on the Add Pass to Google Pay wallet button\r\n10. Verify the add multiple tickets to Google wallet",
        "expected": "1. \t\nSingle sales should be launch for an event\r\n2. Shopping cart page should be displayed\r\n3. Event should be added successfully\r\n4. Login should be successful\r\n5. Delivery method should be as T@H\r\n6. \t\nTransaction should be completed successfully\r\n7. \t\nPrint tickets page should be displayed\r\n8. \"Add Pass to Google Pay\" Walletbutton should be display at the Print Ticket page\r\n9. \t\nSuccessful\r\n10. Multiple tickets should be added to google wallet"
      }
    ],
    "custom_jiras": "65.5"
  },
  {
    "id": 30692803,
    "title": "Verify the tickets can be added to Google wallet once the ticket is put for resale",
    "section_id": 1684997,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PVO-17628",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_refs": "C151408",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Do not Set STGPE text code at any level\r\n2.Set the textcodes GETELIN,GETEHIN,GETEMIN ,GETTLAV.",
    "custom_test_purpose": null,
    "custom_steps": "1. call C140755 -Complete a single sale transaction,Click on \"Click here to view/Print tickets\" link on the confirmation page,Click on the Add Pass to Google Pay Walletbutton at the Print Ticket page\r\nExpected Result:\r\nTickets added successfully\r\n2. Put the tickets for resale\r\nExpected Result:\r\nThe tickets put for resale successfully\r\n3. Verify  the tickets can be added to Google wallet once the  ticket is put for resale\r\nExpected Result:\r\nTickets should be added to Google wallet once the  ticket is put for resale",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. call C140755 -Complete a single sale transaction,Click on \"Click here to view/Print tickets\" link on the confirmation page,Click on the Add Pass to Google Pay Walletbutton at the Print Ticket page\r\n2. Put the tickets for resale\r\n3. Verify  the tickets can be added to Google wallet once the  ticket is put for resale",
        "expected": "1. Tickets added successfully\r\n2. The tickets put for resale successfully\r\n3. Tickets should be added to Google wallet once the  ticket is put for resale"
      }
    ],
    "custom_jiras": "65.5"
  },
  {
    "id": 30692804,
    "title": "Verify the googlepass JWT element is passed in Print ticket API for the main event only when STGPFPEM is set to true for the main event and text code not set for the parking event",
    "section_id": 1684997,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-17975",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 9,
    "custom_is_automated": false,
    "custom_refs": "C151409",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Have an event with parking event associated\r\n2.Login maintenance site\r\n3.Set the text code STGPFPEM in the Performance for main event and not set for parking event",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch mobile tester jsp: http://irqawebpvo7.back.tickets.com/MobileMyTicketsTester.jsp\r\nExpected Result:\r\nLaunch successful\r\n2. Login using valid patron\r\nExpected Result:\r\nPatron Log in successful\r\n3. Provide sub agency code and org id\r\nExpected Result:\r\nProvided successful\r\n4. Get event JSON Response\r\nExpected Result:\r\nGet event JSON Response generated\r\n5. Provide inventory ID and get Ticket JSON Response\r\nExpected Result:\r\nGet Ticket JSON Response generated successfully. Take multiple tickets\r\n6. Generate Print Ticket JSON Response\r\nExpected Result:\r\n The googlepass JWT element should  be passed in Print ticket API for main event only\r\n7. Perform the same steps for parking event\r\nExpected Result:\r\nThe googlepass JWT element should not be passed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch mobile tester jsp: http://irqawebpvo7.back.tickets.com/MobileMyTicketsTester.jsp\r\n2. Login using valid patron\r\n3. Provide sub agency code and org id\r\n4. Get event JSON Response\r\n5. Provide inventory ID and get Ticket JSON Response\r\n6. Generate Print Ticket JSON Response\r\n7. Perform the same steps for parking event",
        "expected": "1. Launch successful\r\n2. Patron Log in successful\r\n3. Provided successful\r\n4. Get event JSON Response generated\r\n5. Get Ticket JSON Response generated successfully. Take multiple tickets\r\n6.  The googlepass JWT element should  be passed in Print ticket API for main event only\r\n7. The googlepass JWT element should not be passed"
      }
    ],
    "custom_jiras": "65.5"
  },
  {
    "id": 30692805,
    "title": "Verify the googlepass JWT element is passed in Print ticket API for the main event only when STGPFPEM is set to true for the main event and text code set to false for the parking event",
    "section_id": 1684997,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-17975",
    "created_by": 333,
    "created_on": 1684963408,
    "updated_by": 333,
    "updated_on": 1684963408,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 10,
    "custom_is_automated": false,
    "custom_refs": "C151410",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Have an event with parking event associated\r\n2.Login maintenance site\r\n3.Set the text code STGPFPEM true in the Performance for main event and set false for parking event",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch mobile tester jsp: http://irqawebpvo7.back.tickets.com/MobileMyTicketsTester.jsp\r\nExpected Result:\r\nLaunch successful\r\n2. Login using valid patron\r\nExpected Result:\r\nPatron Log in successful\r\n3. Provide sub agency code and org id\r\nExpected Result:\r\nProvided successful\r\n4. Get event JSON Response\r\nExpected Result:\r\nGet event JSON Response generated\r\n5. Provide inventory ID and get Ticket JSON Response\r\nExpected Result:\r\nGet Ticket JSON Response generated successfully. Take multiple tickets\r\n6. Generate Print Ticket JSON Response\r\nExpected Result:\r\nThe googlepass JWT element should be passed in Print ticket API for main event only\r\n7. Perform the same steps for parking event\r\nExpected Result:\r\nThe googlepass JWT element should not be passed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch mobile tester jsp: http://irqawebpvo7.back.tickets.com/MobileMyTicketsTester.jsp\r\n2. Login using valid patron\r\n3. Provide sub agency code and org id\r\n4. Get event JSON Response\r\n5. Provide inventory ID and get Ticket JSON Response\r\n6. Generate Print Ticket JSON Response\r\n7. Perform the same steps for parking event",
        "expected": "1. Launch successful\r\n2. Patron Log in successful\r\n3. Provided successful\r\n4. Get event JSON Response generated\r\n5. Get Ticket JSON Response generated successfully. Take multiple tickets\r\n6. The googlepass JWT element should be passed in Print ticket API for main event only\r\n7. The googlepass JWT element should not be passed"
      }
    ],
    "custom_jiras": "65.5"
  },
  {
    "id": 30692806,
    "title": "Verify user can add the passes to Google Pass wallet  from  Mytickets Print Ticket Page after setting  google pass properties",
    "section_id": 1684997,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-18103, PVO-18029",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 11,
    "custom_is_automated": false,
    "custom_refs": "C151411",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set the following properties  with correct values.Please refer the Developer Resolution section in Design doc of PVO-17628 for the values to be set.The link to design doc is given below.\r\n\r\n1.google.pass.project.id \r\n2.google.pass.client.email \r\n3.google.pass.private.key.id \r\n4.google.pass.private.key \r\n5.google.pass.issuser.id\r\n\r\nValue from design doc (Date : 11/19/2018 )\r\n\r\ngoogle.pass.project.id\t-   civil-being-211215\r\ngoogle.pass.client.email\t- pvo-googlepass-nonprod@civil-being-211215.iam.gserviceaccount.com\r\ngoogle.pass.private.key.id\t-  6f498ccd387584ba22f4c3d87fe4bc695d92612f\r\ngoogle.pass.private.key  - \r\n-----BEGIN PRIVATE KEY-----\\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC3Xb4VmauLbnY4\\n4STta/+2i3MFhpIQBRvLQGSPC5cR//+Py24jSTO29v8iLKF/HQJACzvKJST0e8YE\\nEQW6u9HKrnh1GZQLbsuGm+44ZVAGbl7TeY+y1GbeACYWfDg3yb6ldbNF+U99R9S0\\nygsBbEcIahqFpZDfS3NZpvJE2PFyHkKDbJwVFQ3HKJkCDKz5Bc6KB+BoHmY79M4Q\\nylcCY+0YDg+Mwt+UGInTME+5cwAxvmnuVHxNtBuXzTVpZG2/kwRQbVn8dvUAlLXA\\nrkKCzQkJnyhZcTEzbHmwARxg+ffxIaAJ4/BEFB+qVsMUX9toivOK84rcZdyn3hks\\nTZXIWtjTAgMBAAECggEAIvyDbsql1RJMA1lN+vEO1u0vkp/VEbJv1a2hIjwDZJ9U\\nS0L07k2izOe+0W3zmHXX/pFGJLFGplFRfGglEDaS9lmoySsKuM24jqQE5YTLKpb3\\nh+EbXnMxd21O1x53eYmIUzisbo79sDk66A3e4LQgr4XTLqnjBP/37+SvOByuoOe7\\nF1A9ozNdzOFZn8rEu9A3U7nP+BiZEFmnkCnXt5AgPnP/8QJ1Q0ws4mEKJvM1XxUP\\nisbNI34ELFirKdnAl9Z1hi6DlU3WD+F6BhDxBq+vOQeeMTXeewMcZ+XKOtGRrznU\\neCBeNm7Ymu4eurYZ5lIMnUCDULkmQH6QQiYXVsdGYQKBgQDupuqft9TlkNIMeeje\\nmP7vXDlqmalqy3l7QGOQiDzMgGNPV0W930bTruViQOK5Ssryt+i8Y887nr4uJp4+\\n1oAxHq2cwggnBXpiRqQnmpNXukCzqK+9nUd+ia6iNbNXFqKXqVHwIy31+NJE8xl4\\nGwOV2L6zA7ftL/tLNMvHH9BUswKBgQDEsgKQre7kFaPk+xsqioytky8gwTrzAXbk\\nl9kGd18s0r763OKjvkTA80CG4gAfYk9tGjkaJAh70DgTZpUfKkcdajtwiqAylDTk\\nKojj5QHAxdEOm3FBnYCjgZXMgftJ+2p5ZbO440kV+P49exoiUGf+N0FkOO6mYMlP\\nmvvtP0S7YQKBgHFNGZLeadrbWH3H2wDjThVBiZjMfxxOocwcE6jopUTJp1xhqKCu\\nQif5nrl46KrjkVqOaZYXJKm/gbbTasmWeKHZWL9Vdx1fgmzp8MFEp7M8n78r1NOG\\nugyfPSORryUnf+XU4yvI5+chTGKjr3HQEXGwx0ih+U5IO1vHIv/UYMn1AoGBALaC\\n4oRzECbNua1AHz4DH3P0DZfcFKHlqveDutoYK9UAnDtUeGwtochULny5+hkk9MQs\\nv+10n/abB11hI1+usBwoNY1A5FLqWIWavjiQh2bjZw+hxp520iVlmaUQuyYzxuFs\\nMC6Pn4Jm7yoHLwHGECjABspDVZZGWqWmDrteqJ0hAoGANA6k8NZH+b0jBH2L0WoT\\n00fPUp5jAwQcXLY69dIS6OrL2r/MGwQRTVEy5S+d0f6SGf3nbKuhKpPJoN4w4Q4Q\\nqDd5RM9lF90KW281izWoMpZLQ04RCYtpwQWFMrgmI97rYz6jbKt8KpUr8Xmdub3c\\nlxBB46PU+GSDJfbF2tv3ayY=\\n-----END PRIVATE KEY-----\\n\r\n\r\ngoogle.pass.issuser.id  -  3290168902399721957",
    "custom_test_purpose": null,
    "custom_steps": "1. Login into Mytickets with valid credentials\nNote : The patron should have valid inventory for Self Service print\r\nExpected Result:\r\nUser should be logged \r\n2. Navigate to Inventory and Select Ticket action as Print tickets\r\nExpected Result:\r\nUser should be able to select Print Tickets action from the Actions drop down\r\n3. Select active seat from the inventory and Continue to print the same\r\nExpected Result:\r\nUser should be able to Continue to print the seat\r\n4. Verify the Google Pass button is available in Print Tickets page\r\nExpected Result:\r\nGoogle Pass button should be available in Print Tickets page\r\n5. Verify that the JWT value has been passed in Console\r\nExpected Result:\r\nJWT value should be passed in Console\r\n6. Add the Seat in to Google Pay wallet and make sure that the pass has been added to corresponding account\r\nExpected Result:\r\nTicket should be added to Google pay wallet as Pass and Confirmation popup should be displayed in the PVO Application",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login into Mytickets with valid credentials\nNote : The patron should have valid inventory for Self Service print\r\n2. Navigate to Inventory and Select Ticket action as Print tickets\r\n3. Select active seat from the inventory and Continue to print the same\r\n4. Verify the Google Pass button is available in Print Tickets page\r\n5. Verify that the JWT value has been passed in Console\r\n6. Add the Seat in to Google Pay wallet and make sure that the pass has been added to corresponding account",
        "expected": "1. User should be logged \r\n2. User should be able to select Print Tickets action from the Actions drop down\r\n3. User should be able to Continue to print the seat\r\n4. Google Pass button should be available in Print Tickets page\r\n5. JWT value should be passed in Console\r\n6. Ticket should be added to Google pay wallet as Pass and Confirmation popup should be displayed in the PVO Application"
      }
    ],
    "custom_jiras": "65.5"
  },
  {
    "id": 30692807,
    "title": "Verify user can add the passes to Google Pass wallet  from  Single Print Ticket Page after setting  google pass properties",
    "section_id": 1684997,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-18103, PVO-18029",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 12,
    "custom_is_automated": false,
    "custom_refs": "C151412",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set the following properties  with correct values.Please refer the Developer Resolution section in Design doc of PVO-17628 for the values to be set.The link to design doc is given below.\r\n\r\n1.google.pass.project.id \r\n2.google.pass.client.email \r\n3.google.pass.private.key.id \r\n4.google.pass.private.key \r\n5.google.pass.issuser.id\r\n\r\nValue from design doc (Date : 11/19/2018 )\r\n\r\ngoogle.pass.project.id\t-   civil-being-211215\r\ngoogle.pass.client.email\t- pvo-googlepass-nonprod@civil-being-211215.iam.gserviceaccount.com\r\ngoogle.pass.private.key.id\t-  6f498ccd387584ba22f4c3d87fe4bc695d92612f\r\ngoogle.pass.private.key  - \r\n-----BEGIN PRIVATE KEY-----\\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC3Xb4VmauLbnY4\\n4STta/+2i3MFhpIQBRvLQGSPC5cR//+Py24jSTO29v8iLKF/HQJACzvKJST0e8YE\\nEQW6u9HKrnh1GZQLbsuGm+44ZVAGbl7TeY+y1GbeACYWfDg3yb6ldbNF+U99R9S0\\nygsBbEcIahqFpZDfS3NZpvJE2PFyHkKDbJwVFQ3HKJkCDKz5Bc6KB+BoHmY79M4Q\\nylcCY+0YDg+Mwt+UGInTME+5cwAxvmnuVHxNtBuXzTVpZG2/kwRQbVn8dvUAlLXA\\nrkKCzQkJnyhZcTEzbHmwARxg+ffxIaAJ4/BEFB+qVsMUX9toivOK84rcZdyn3hks\\nTZXIWtjTAgMBAAECggEAIvyDbsql1RJMA1lN+vEO1u0vkp/VEbJv1a2hIjwDZJ9U\\nS0L07k2izOe+0W3zmHXX/pFGJLFGplFRfGglEDaS9lmoySsKuM24jqQE5YTLKpb3\\nh+EbXnMxd21O1x53eYmIUzisbo79sDk66A3e4LQgr4XTLqnjBP/37+SvOByuoOe7\\nF1A9ozNdzOFZn8rEu9A3U7nP+BiZEFmnkCnXt5AgPnP/8QJ1Q0ws4mEKJvM1XxUP\\nisbNI34ELFirKdnAl9Z1hi6DlU3WD+F6BhDxBq+vOQeeMTXeewMcZ+XKOtGRrznU\\neCBeNm7Ymu4eurYZ5lIMnUCDULkmQH6QQiYXVsdGYQKBgQDupuqft9TlkNIMeeje\\nmP7vXDlqmalqy3l7QGOQiDzMgGNPV0W930bTruViQOK5Ssryt+i8Y887nr4uJp4+\\n1oAxHq2cwggnBXpiRqQnmpNXukCzqK+9nUd+ia6iNbNXFqKXqVHwIy31+NJE8xl4\\nGwOV2L6zA7ftL/tLNMvHH9BUswKBgQDEsgKQre7kFaPk+xsqioytky8gwTrzAXbk\\nl9kGd18s0r763OKjvkTA80CG4gAfYk9tGjkaJAh70DgTZpUfKkcdajtwiqAylDTk\\nKojj5QHAxdEOm3FBnYCjgZXMgftJ+2p5ZbO440kV+P49exoiUGf+N0FkOO6mYMlP\\nmvvtP0S7YQKBgHFNGZLeadrbWH3H2wDjThVBiZjMfxxOocwcE6jopUTJp1xhqKCu\\nQif5nrl46KrjkVqOaZYXJKm/gbbTasmWeKHZWL9Vdx1fgmzp8MFEp7M8n78r1NOG\\nugyfPSORryUnf+XU4yvI5+chTGKjr3HQEXGwx0ih+U5IO1vHIv/UYMn1AoGBALaC\\n4oRzECbNua1AHz4DH3P0DZfcFKHlqveDutoYK9UAnDtUeGwtochULny5+hkk9MQs\\nv+10n/abB11hI1+usBwoNY1A5FLqWIWavjiQh2bjZw+hxp520iVlmaUQuyYzxuFs\\nMC6Pn4Jm7yoHLwHGECjABspDVZZGWqWmDrteqJ0hAoGANA6k8NZH+b0jBH2L0WoT\\n00fPUp5jAwQcXLY69dIS6OrL2r/MGwQRTVEy5S+d0f6SGf3nbKuhKpPJoN4w4Q4Q\\nqDd5RM9lF90KW281izWoMpZLQ04RCYtpwQWFMrgmI97rYz6jbKt8KpUr8Xmdub3c\\nlxBB46PU+GSDJfbF2tv3ayY=\\n-----END PRIVATE KEY-----\\n\r\n\r\ngoogle.pass.issuser.id  -  3290168902399721957",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch single sales link and  complete the transaction using T@H delivery method.\r\nExpected Result:\r\nUser should be able to complete a PVO Single sale transaction\r\n2. From PVO Confirmation page, Click on View and Print tickets link and navigate to Print Tickets page\r\nExpected Result:\r\nUser should be navigated to Print tickets page\r\n3. Verify the Google Pass button is available in Print Tickets page\r\nExpected Result:\r\nGoogle Pass button should be available in Print Tickets page\r\n4. Verify that the JWT value has been passed in Console\r\nExpected Result:\r\nJWT value should be passed in Console\r\n5. Add the Seat in to Google Pay wallet and make sure that the pass has been added to corresponding account\r\nExpected Result:\r\nTicket should be added to Google pay wallet as Pass and Confirmation popup should be displayed in the PVO Application",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch single sales link and  complete the transaction using T@H delivery method.\r\n2. From PVO Confirmation page, Click on View and Print tickets link and navigate to Print Tickets page\r\n3. Verify the Google Pass button is available in Print Tickets page\r\n4. Verify that the JWT value has been passed in Console\r\n5. Add the Seat in to Google Pay wallet and make sure that the pass has been added to corresponding account",
        "expected": "1. User should be able to complete a PVO Single sale transaction\r\n2. User should be navigated to Print tickets page\r\n3. Google Pass button should be available in Print Tickets page\r\n4. JWT value should be passed in Console\r\n5. Ticket should be added to Google pay wallet as Pass and Confirmation popup should be displayed in the PVO Application"
      }
    ],
    "custom_jiras": "65.5"
  },
  {
    "id": 30692808,
    "title": "Verify that JWT is passed in MPV print ticket API after setting  google pass properties",
    "section_id": 1684997,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-18103, PVO-18029",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 13,
    "custom_is_automated": false,
    "custom_refs": "C151413",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set the following properties  with correct values.Please refer the Developer Resolution section in Design doc of PVO-17628 for the values to be set.The link to design doc is given below.\r\n\r\n1.google.pass.project.id \r\n2.google.pass.client.email \r\n3.google.pass.private.key.id \r\n4.google.pass.private.key \r\n5.google.pass.issuser.id\r\n\r\nValue from design doc (Date : 11/19/2018 )\r\n\r\ngoogle.pass.project.id\t-   civil-being-211215\r\ngoogle.pass.client.email\t- pvo-googlepass-nonprod@civil-being-211215.iam.gserviceaccount.com\r\ngoogle.pass.private.key.id\t-  6f498ccd387584ba22f4c3d87fe4bc695d92612f\r\ngoogle.pass.private.key  - \r\n-----BEGIN PRIVATE KEY-----\\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC3Xb4VmauLbnY4\\n4STta/+2i3MFhpIQBRvLQGSPC5cR//+Py24jSTO29v8iLKF/HQJACzvKJST0e8YE\\nEQW6u9HKrnh1GZQLbsuGm+44ZVAGbl7TeY+y1GbeACYWfDg3yb6ldbNF+U99R9S0\\nygsBbEcIahqFpZDfS3NZpvJE2PFyHkKDbJwVFQ3HKJkCDKz5Bc6KB+BoHmY79M4Q\\nylcCY+0YDg+Mwt+UGInTME+5cwAxvmnuVHxNtBuXzTVpZG2/kwRQbVn8dvUAlLXA\\nrkKCzQkJnyhZcTEzbHmwARxg+ffxIaAJ4/BEFB+qVsMUX9toivOK84rcZdyn3hks\\nTZXIWtjTAgMBAAECggEAIvyDbsql1RJMA1lN+vEO1u0vkp/VEbJv1a2hIjwDZJ9U\\nS0L07k2izOe+0W3zmHXX/pFGJLFGplFRfGglEDaS9lmoySsKuM24jqQE5YTLKpb3\\nh+EbXnMxd21O1x53eYmIUzisbo79sDk66A3e4LQgr4XTLqnjBP/37+SvOByuoOe7\\nF1A9ozNdzOFZn8rEu9A3U7nP+BiZEFmnkCnXt5AgPnP/8QJ1Q0ws4mEKJvM1XxUP\\nisbNI34ELFirKdnAl9Z1hi6DlU3WD+F6BhDxBq+vOQeeMTXeewMcZ+XKOtGRrznU\\neCBeNm7Ymu4eurYZ5lIMnUCDULkmQH6QQiYXVsdGYQKBgQDupuqft9TlkNIMeeje\\nmP7vXDlqmalqy3l7QGOQiDzMgGNPV0W930bTruViQOK5Ssryt+i8Y887nr4uJp4+\\n1oAxHq2cwggnBXpiRqQnmpNXukCzqK+9nUd+ia6iNbNXFqKXqVHwIy31+NJE8xl4\\nGwOV2L6zA7ftL/tLNMvHH9BUswKBgQDEsgKQre7kFaPk+xsqioytky8gwTrzAXbk\\nl9kGd18s0r763OKjvkTA80CG4gAfYk9tGjkaJAh70DgTZpUfKkcdajtwiqAylDTk\\nKojj5QHAxdEOm3FBnYCjgZXMgftJ+2p5ZbO440kV+P49exoiUGf+N0FkOO6mYMlP\\nmvvtP0S7YQKBgHFNGZLeadrbWH3H2wDjThVBiZjMfxxOocwcE6jopUTJp1xhqKCu\\nQif5nrl46KrjkVqOaZYXJKm/gbbTasmWeKHZWL9Vdx1fgmzp8MFEp7M8n78r1NOG\\nugyfPSORryUnf+XU4yvI5+chTGKjr3HQEXGwx0ih+U5IO1vHIv/UYMn1AoGBALaC\\n4oRzECbNua1AHz4DH3P0DZfcFKHlqveDutoYK9UAnDtUeGwtochULny5+hkk9MQs\\nv+10n/abB11hI1+usBwoNY1A5FLqWIWavjiQh2bjZw+hxp520iVlmaUQuyYzxuFs\\nMC6Pn4Jm7yoHLwHGECjABspDVZZGWqWmDrteqJ0hAoGANA6k8NZH+b0jBH2L0WoT\\n00fPUp5jAwQcXLY69dIS6OrL2r/MGwQRTVEy5S+d0f6SGf3nbKuhKpPJoN4w4Q4Q\\nqDd5RM9lF90KW281izWoMpZLQ04RCYtpwQWFMrgmI97rYz6jbKt8KpUr8Xmdub3c\\nlxBB46PU+GSDJfbF2tv3ayY=\\n-----END PRIVATE KEY-----\\n\r\n\r\ngoogle.pass.issuser.id  -  3290168902399721957",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Mytickets Tester.jsp \r\nExpected Result:\r\nMyTicket tester should be launched and user should be able to login to the same\r\n2. Print a ticket and verify the \"googlePass\" element in Print Tickets API call\r\nExpected Result:\r\nPrint Tickets API should be successful and google pass value should be passed with JWT value\r\n3. Ensure that JWT is created .\r\nExpected Result:\r\ngoogle pass value should be passed with JWT value",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Mytickets Tester.jsp \r\n2. Print a ticket and verify the \"googlePass\" element in Print Tickets API call\r\n3. Ensure that JWT is created .",
        "expected": "1. MyTicket tester should be launched and user should be able to login to the same\r\n2. Print Tickets API should be successful and google pass value should be passed with JWT value\r\n3. google pass value should be passed with JWT value"
      }
    ],
    "custom_jiras": "65.5"
  },
  {
    "id": 30692809,
    "title": "Verify the enablesmartTap & redemption issuer ID for Google Passes once completing the transaction with PVO Single sales",
    "section_id": 1684997,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PVO-18356",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 14,
    "custom_is_automated": false,
    "custom_refs": "C907545",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set STGPFPE text code at Supplier level to true.\r\n2.Have an Event with seats available in a section\r\n3.Set the textcodes GETELIN,GETEHIN,GETEMIN ,GETTLAV\r\n4.Make the NFC Text codes - true",
    "custom_test_purpose": null,
    "custom_steps": "1. Complete a single sale transaction with T@H delivery method for tickets from an event.\r\nExpected Result:\r\nSingle sale transaction should be completed with T@H delivery method for tickets from an event.\r\n2. Click on \"Click here to view/Print tickets\" link on the confirmation page\r\nExpected Result:\r\nPrint tickets page should be displayed\r\n3. Verify the Add Pass to Google Pay Walletbutton is displaying at the Print Ticket page\r\nExpected Result:\r\n\"Add Pass to Google Pay\" Walletbutton should be display at the Print Ticket page\r\n4. Verify in console for the google Token generated.\r\nExpected Result:\r\nGoogle Token should be generated in console\r\n5. Decode the token using the JWT Decorder\r\nExpected Result:\r\nToken should be decoded using the JWT Decorder & Ticket parameters are retrieved\r\n6. Verify enablesmartTap & redemption issuer ID for Google Passes in JWT Decoded log\r\nExpected Result:\r\nenablesmartTap & redemption issuer ID for Google Passes should be there in JWT Decoded log\r\n7. Verify that Patron is requested to sign in into Gmail if patron is not yet already signed in.\r\nExpected Result:\r\nPatron should be requested to sign in into Gmail if patron is not yet already signed in.\r\n8. Verify that Google confirmation Popup is displayed once the patron clicked on 'Add Pass to Google Pay Wallet ' (Refer Screenshot section of the design doc for details)\r\nExpected Result:\r\nGoogle confirmation Popup should be display once the patron clicked on 'Add Pass to Google Pay Wallet ' (Refer Screenshot section of the design doc for details)\r\n9. Verify all the Tickets are added to Google Pay wallet.\r\nExpected Result:\r\nAll the Tickets should be added to Google Pay wallet.\r\n10. Verify that Row and Seat is not display in the Google Pass for tickets\r\nExpected Result:\r\nRow and Seat should not be display in the Google Pass for tickets",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Complete a single sale transaction with T@H delivery method for tickets from an event.\r\n2. Click on \"Click here to view/Print tickets\" link on the confirmation page\r\n3. Verify the Add Pass to Google Pay Walletbutton is displaying at the Print Ticket page\r\n4. Verify in console for the google Token generated.\r\n5. Decode the token using the JWT Decorder\r\n6. Verify enablesmartTap & redemption issuer ID for Google Passes in JWT Decoded log\r\n7. Verify that Patron is requested to sign in into Gmail if patron is not yet already signed in.\r\n8. Verify that Google confirmation Popup is displayed once the patron clicked on 'Add Pass to Google Pay Wallet ' (Refer Screenshot section of the design doc for details)\r\n9. Verify all the Tickets are added to Google Pay wallet.\r\n10. Verify that Row and Seat is not display in the Google Pass for tickets",
        "expected": "1. Single sale transaction should be completed with T@H delivery method for tickets from an event.\r\n2. Print tickets page should be displayed\r\n3. \"Add Pass to Google Pay\" Walletbutton should be display at the Print Ticket page\r\n4. Google Token should be generated in console\r\n5. Token should be decoded using the JWT Decorder & Ticket parameters are retrieved\r\n6. enablesmartTap & redemption issuer ID for Google Passes should be there in JWT Decoded log\r\n7. Patron should be requested to sign in into Gmail if patron is not yet already signed in.\r\n8. Google confirmation Popup should be display once the patron clicked on 'Add Pass to Google Pay Wallet ' (Refer Screenshot section of the design doc for details)\r\n9. All the Tickets should be added to Google Pay wallet.\r\n10. Row and Seat should not be display in the Google Pass for tickets"
      }
    ],
    "custom_jiras": "65.5"
  },
  {
    "id": 30692810,
    "title": "Verify the redemption issuer ID is configurable for Google Passes & confirm once printing tickets from MPV Mytickets",
    "section_id": 1684997,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PVO-18356",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 15,
    "custom_is_automated": false,
    "custom_refs": "C907546",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set STGPE text code at Supplier level to true.\r\n2.Have an Event with seats available in a section\r\n3.Set the textcodes GETELIN,GETEHIN,GETEMIN ,GETTLAV\r\n4.Make the NFC Text codes - true \r\n5.Set non default value for redemption issuer ID",
    "custom_test_purpose": null,
    "custom_steps": "1. Complete a single sale transaction with T@H delivery method for tickets from an event.\r\nExpected Result:\r\nSingle sale transaction should be completed with T@H delivery method for tickets from an event.\r\n2. Click on \"View Ticket Inventory\"\r\nExpected Result:\r\nlist of tickets should be displayed\r\n3. Select required seat from the list\r\nExpected Result:\r\nTicket details should be displayed.\r\n4. Verify the Add Pass to Google Pay Walletbutton is displaying at the page\r\nExpected Result:\r\n\"Add Pass to Google Pay\" Walletbutton should be display at the Print Ticket page\r\n5. Verify in console for the google Token generated.\r\nExpected Result:\r\nGoogle Token should be generated in console\r\n6. Decode the token using the JWT Decorder\r\nExpected Result:\r\nToken should be decoded using the JWT Decorder & Ticket parameters are retrieved\r\n7. Verify the redemption issuer ID is configurable for Google Passes & confirm once printing tickets \r\nExpected Result:\r\nRedemption issuer ID should be configurable for Google Passes \r\n8. Verify that Patron is requested to sign in into Gmail if patron is not yet already signed in.\r\nExpected Result:\r\nPatron should be requested to sign in into Gmail if patron is not yet already signed in.\r\n9. Verify that Google confirmation Popup is displayed once the patron clicked on 'Add Pass to Google Pay Wallet ' (Refer Screenshot section of the design doc for details)\r\nExpected Result:\r\nGoogle confirmation Popup should be display once the patron clicked on 'Add Pass to Google Pay Wallet ' (Refer Screenshot section of the design doc for details)\r\n10. Verify all the Tickets are added to Google Pay wallet.\r\nExpected Result:\r\nAll the Tickets should be added to Google Pay wallet.\r\n11. Verify that Row and Seat is not display in the Google Pass for tickets\r\nExpected Result:\r\nRow and Seat should not be display in the Google Pass for tickets",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Complete a single sale transaction with T@H delivery method for tickets from an event.\r\n2. Click on \"View Ticket Inventory\"\r\n3. Select required seat from the list\r\n4. Verify the Add Pass to Google Pay Walletbutton is displaying at the page\r\n5. Verify in console for the google Token generated.\r\n6. Decode the token using the JWT Decorder\r\n7. Verify the redemption issuer ID is configurable for Google Passes & confirm once printing tickets \r\n8. Verify that Patron is requested to sign in into Gmail if patron is not yet already signed in.\r\n9. Verify that Google confirmation Popup is displayed once the patron clicked on 'Add Pass to Google Pay Wallet ' (Refer Screenshot section of the design doc for details)\r\n10. Verify all the Tickets are added to Google Pay wallet.\r\n11. Verify that Row and Seat is not display in the Google Pass for tickets",
        "expected": "1. Single sale transaction should be completed with T@H delivery method for tickets from an event.\r\n2. list of tickets should be displayed\r\n3. Ticket details should be displayed.\r\n4. \"Add Pass to Google Pay\" Walletbutton should be display at the Print Ticket page\r\n5. Google Token should be generated in console\r\n6. Token should be decoded using the JWT Decorder & Ticket parameters are retrieved\r\n7. Redemption issuer ID should be configurable for Google Passes \r\n8. Patron should be requested to sign in into Gmail if patron is not yet already signed in.\r\n9. Google confirmation Popup should be display once the patron clicked on 'Add Pass to Google Pay Wallet ' (Refer Screenshot section of the design doc for details)\r\n10. All the Tickets should be added to Google Pay wallet.\r\n11. Row and Seat should not be display in the Google Pass for tickets"
      }
    ],
    "custom_jiras": "65.5"
  },
  {
    "id": 30692811,
    "title": "Verify the user is able to complete the ID.me transaction with Masterpass only events",
    "section_id": 1684998,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15585",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C151414",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Have an event with Masterpass=Required \r\n(PV-> Event Management->Event Access->Enter User->General->Select Required from the drop down against field Masterpass)\r\nPerf accept the event",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch PVO single sales link\r\nExpected Result:\r\nAvailability page is launched as expected\r\n2. Login with ID.me credentilas\r\nExpected Result:\r\nSuccessfully logged in.\r\n3. Select tickets from the availability page and click on continue\r\nExpected Result:\r\nUser is landed on the login/signup page\r\n4. Login with valid credentials.\n\r\nExpected Result:\r\nDelivery method page should get displayed.\r\n5. Select Delivery Method and continue\r\nExpected Result:\r\nUser is landed on Payment page\r\n6. Verify that only Masterpass option is available in the payment page\r\nExpected Result:\r\nOnly Masterpass option is available to the user\r\n7. Click on Masterpass and login with valid credntials\r\nExpected Result:\r\nUser is displayed with the Masterpass Wallet cards\r\n8. Select on card and continue\r\nExpected Result:\r\nUser is landed on the payment page with the card added from masterpass wallet.\r\n9. Enter all other required fields and complete transaction\r\nExpected Result:\r\nUSer is able to complete the transaction as expected\r\n10. Verify the Sell seats log request passes the masterpass token.\r\nExpected Result:\r\n\t\nSell seats should pass masterpass token as expected\r\n11. Take Order value from Maintanace. (Or OrderId from Ssell seats call) and Verify the Order Text values\r\nExpected Result:\r\nFollowing values should appear:\n\n\"MPPERMCD\" - MasterPass Permission code.( Required)\n\"MPPWID\" - Wallet ID indicator to send to BOTS/Credit Card Processor (MasterPass Token)\n\"MPTID\" - Contains the MasterPass Transaction ID\n\"MPPCRD\" - Contains the MasterPass post completion response data\n\"MPPCISI\" - contains the Patron_Card_Info Sequence Id of the MasterPass card that has been stored in our wallet.\r\n12. Verify the Card details in pvo.payment and patron_card_info tables.\r\nExpected Result:\r\nCard details in pvo.payment and patron_card_info tables should have values as expected\r\n13. Make sure the enum value (MP) is stroed in PV payment and card response tables.\r\nExpected Result:\r\nenum value (MP) should be stored in PV payment and card response tables.\r\n14. Verify PV Ticket services payment tab for the order made with Masterpass\r\nExpected Result:\r\nPV Ticket services payment tab should show details for the order made with Masterpass\r\n15. Verify the PV Digital wallet whether the newly added card is added or not.\r\nExpected Result:\r\nPV Digital wallet should show the newly added card\r\n16. Verify the PVO Patron payment method tab whether the card is added and the details are updated correct manner\r\nExpected Result:\r\nPVO Patron payment method tab should show the card added and the details should be updated correct manner",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PVO single sales link\r\n2. Login with ID.me credentilas\r\n3. Select tickets from the availability page and click on continue\r\n4. Login with valid credentials.\n\r\n5. Select Delivery Method and continue\r\n6. Verify that only Masterpass option is available in the payment page\r\n7. Click on Masterpass and login with valid credntials\r\n8. Select on card and continue\r\n9. Enter all other required fields and complete transaction\r\n10. Verify the Sell seats log request passes the masterpass token.\r\n11. Take Order value from Maintanace. (Or OrderId from Ssell seats call) and Verify the Order Text values\r\n12. Verify the Card details in pvo.payment and patron_card_info tables.\r\n13. Make sure the enum value (MP) is stroed in PV payment and card response tables.\r\n14. Verify PV Ticket services payment tab for the order made with Masterpass\r\n15. Verify the PV Digital wallet whether the newly added card is added or not.\r\n16. Verify the PVO Patron payment method tab whether the card is added and the details are updated correct manner",
        "expected": "1. Availability page is launched as expected\r\n2. Successfully logged in.\r\n3. User is landed on the login/signup page\r\n4. Delivery method page should get displayed.\r\n5. User is landed on Payment page\r\n6. Only Masterpass option is available to the user\r\n7. User is displayed with the Masterpass Wallet cards\r\n8. User is landed on the payment page with the card added from masterpass wallet.\r\n9. USer is able to complete the transaction as expected\r\n10. \t\nSell seats should pass masterpass token as expected\r\n11. Following values should appear:\n\n\"MPPERMCD\" - MasterPass Permission code.( Required)\n\"MPPWID\" - Wallet ID indicator to send to BOTS/Credit Card Processor (MasterPass Token)\n\"MPTID\" - Contains the MasterPass Transaction ID\n\"MPPCRD\" - Contains the MasterPass post completion response data\n\"MPPCISI\" - contains the Patron_Card_Info Sequence Id of the MasterPass card that has been stored in our wallet.\r\n12. Card details in pvo.payment and patron_card_info tables should have values as expected\r\n13. enum value (MP) should be stored in PV payment and card response tables.\r\n14. PV Ticket services payment tab should show details for the order made with Masterpass\r\n15. PV Digital wallet should show the newly added card\r\n16. PVO Patron payment method tab should show the card added and the details should be updated correct manner"
      }
    ],
    "custom_jiras": "63.2"
  },
  {
    "id": 30692812,
    "title": "Verify that What is ID.me text is configurable on availability",
    "section_id": 1684998,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14123",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C151415",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.A Patron should be available such that ,Patron is already registered with in ID.me with a valid email and the Group Affiliation for any group should be completed .\r\n2.There should be one buyer type available per group and the coupon code for each should be configured in ProVenue:\r\nSay Buyer B1 for Troop ID ,B2 for First Responder ID ,B3 for Student ID,B4 for Teacher ID should be coupon protected with different coupon codes.\r\n3.Coupon code should be mapped to PVO for a patricular ID.me group affiliation:\r\nSet the text code for mapping coupon code.\r\nIDMECM: - IDME_COUPON_MAPPING. ID.me profile (military, student, teacher, responder, government) to PVO coupon code mapping. Format: military=A|student=B|teacher=C|responder=D\r\n4.Turn ON ID.me feature:\r\nIDMEE: - IDME_ENABLED. ID.me feature .Set the text code to true.\r\n5.Set textcode for 'What is ID.me' text  with a non-default value \r\nIDMEWILT :- IDME_WHAT_IS_LABEL_TEXT .set textcode to ' [IDMEWILT ] What is ID.me '",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch PVO singlesales url\r\nExpected Result:\r\nAvailability page should be displayed\r\n2. Verify the vaue appearing for IDMEWILT \r\nExpected Result:\r\nText should be ' [IDMEWILT ] What is ID.me '",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PVO singlesales url\r\n2. Verify the vaue appearing for IDMEWILT",
        "expected": "1. Availability page should be displayed\r\n2. Text should be ' [IDMEWILT ] What is ID.me '"
      }
    ],
    "custom_jiras": "60.2"
  },
  {
    "id": 30692813,
    "title": "Verify ID.me integartion in Flex Package sales flow",
    "section_id": 1684998,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14123",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C151416",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.A Patron should be available such that ,Patron is already registered with in ID.me with a valid email and the Group Affiliation for any group should be completed .\r\n2.There should be one buyer type available per group and the coupon code for each should be configured in ProVenue:\r\nSay Buyer B1 for Troop ID ,B2 for First Responder ID ,B3 for Student ID,B4 for Teacher ID should be coupon protected with different coupon codes.\r\n3.Coupon code should be mapped to PVO for a patricular ID.me group affiliation:\r\nSet the text code for mapping coupon code.\r\nIDMECM: - IDME_COUPON_MAPPING. ID.me profile (military, student, teacher, responder, government) to PVO coupon code mapping. Format: military=A|student=B|teacher=C|responder=D\r\n4.Turn ON ID.me feature:\r\nIDMEE: - IDME_ENABLED. ID.me feature .Set the text code to true.\r\n5.Create a Flex Package and perf accept in PVO",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the above created Flex Package  link,\nSelect events and continue.\r\nExpected Result:\r\nUser is landed on the availability page\r\n2. Click on any ID.me group association button ,,say Troop ID\r\nExpected Result:\r\npatron should be presented with ID.me login page\r\n3. Sign in with valid credentials\r\nExpected Result:\r\nUser should be able to enter  the ID.me registered valid email and password of Troop ID group  \naffiliation and signin button should be clickable and then should navigate to Verification page\r\n4. Verify the UI of availability page after ID.Me validation\r\nExpected Result:\r\nPVO Availability page should be displayed.Coupon code text box and ID.me buttons should be hidden after the successful authentication\r\n5. Verify the Coupon associated discount buyer is displayed and highlighted with discount icon\r\nExpected Result:\r\nThe coupon associated discount buyer for Troop ID group should be displayed and highlighted with discount icon.\r\n6. Select two seat from seat Map assign one for discount buyer and other for normal buyer and click on \ncontinue.\r\nExpected Result:\r\nUser should be navigated to shopping cart.\r\n7. Click on the Continue button in Shopping cart.\r\nExpected Result:\r\nA log in prompt should be displayed.\r\n8. Log in as a existsing patron.\r\nExpected Result:\r\nUser should be navigated to payment page.\r\n9. Enter valid details and buy tickets.\r\nExpected Result:\r\nThe transaction should be completed successfully and confirmation page should be displayed.\r\n10. Verify pvo.payment, PVO.inventory, PVO.inventory_seat DB with the order id\r\nExpected Result:\r\nAll details should be passed as expected\r\n11. Verify PV Ticket services payment tab for the order details \r\nExpected Result:\r\nAll details of the order should appear properly\r\n12. Verify the SellSeats logs for the transaction\r\nExpected Result:\r\nThe transaction detials should be passed properly in the logs without any error",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the above created Flex Package  link,\nSelect events and continue.\r\n2. Click on any ID.me group association button ,,say Troop ID\r\n3. Sign in with valid credentials\r\n4. Verify the UI of availability page after ID.Me validation\r\n5. Verify the Coupon associated discount buyer is displayed and highlighted with discount icon\r\n6. Select two seat from seat Map assign one for discount buyer and other for normal buyer and click on \ncontinue.\r\n7. Click on the Continue button in Shopping cart.\r\n8. Log in as a existsing patron.\r\n9. Enter valid details and buy tickets.\r\n10. Verify pvo.payment, PVO.inventory, PVO.inventory_seat DB with the order id\r\n11. Verify PV Ticket services payment tab for the order details \r\n12. Verify the SellSeats logs for the transaction",
        "expected": "1. User is landed on the availability page\r\n2. patron should be presented with ID.me login page\r\n3. User should be able to enter  the ID.me registered valid email and password of Troop ID group  \naffiliation and signin button should be clickable and then should navigate to Verification page\r\n4. PVO Availability page should be displayed.Coupon code text box and ID.me buttons should be hidden after the successful authentication\r\n5. The coupon associated discount buyer for Troop ID group should be displayed and highlighted with discount icon.\r\n6. User should be navigated to shopping cart.\r\n7. A log in prompt should be displayed.\r\n8. User should be navigated to payment page.\r\n9. The transaction should be completed successfully and confirmation page should be displayed.\r\n10. All details should be passed as expected\r\n11. All details of the order should appear properly\r\n12. The transaction detials should be passed properly in the logs without any error"
      }
    ],
    "custom_jiras": "60.2"
  },
  {
    "id": 30692814,
    "title": "Verify ID.me integration is retained in Availabilty after timeout from shopping cart.",
    "section_id": 1684998,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14123",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C151417",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.A Patron should be available such that ,Patron is already registered with in ID.me with a valid email and the Group Affiliation for any group should be completed .\r\n2.There should be one buyer type available per group and the coupon code for each should be configured in ProVenue:\r\nSay Buyer B1 for Troop ID ,B2 for First Responder ID ,B3 for Student ID,B4 for Teacher ID should be coupon protected with different coupon codes.\r\n3.Coupon code should be mapped to PVO for a patricular ID.me group affiliation:\r\nSet the text code for mapping coupon code.\r\nIDMECM: - IDME_COUPON_MAPPING. ID.me profile (military, student, teacher, responder, government) to PVO coupon code mapping. Format: military=A|student=B|teacher=C|responder=D\r\n4.Turn ON ID.me feature:\r\nIDMEE: - IDME_ENABLED. ID.me feature .Set the text code to true.\r\n5.Turn ON all group associations (Set IDMEME , IDMESE,IDMETE,IDMERE,IDMEGE textcodes to true)",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch to an event directly by adding PID \r\nExpected Result:\r\nEvent availability page should be displayed \r\n2. Click on any ID.me group association button ,say Student ID\r\nExpected Result:\r\nStudent ID group should be clciked and redirected to login page\r\n3. Enter the ID.me registered valid email and password of student group  affiliation\r\nExpected Result:\r\nSign up should be successfull\r\n4. Click on Sign-In button\r\nExpected Result:\r\nPatron should be redirected to PVO with the coupon associated discount buyer for Troop \nID group should be displayed in Nav Map highlighted with discount icon\r\n5. Navigate till shopping cart after selecting discount buyer\r\nExpected Result:\r\nShopping cart with tickets should be displayed\r\n6. Wait till the shopping cart gets time out.\r\nExpected Result:\r\nShopping cart should get time out\r\n7. After time out click on Continue in the time out error message display\r\nExpected Result:\r\nAvailability page should be displayed\r\n8. The page navigates to the availability page\r\nExpected Result:\r\nAvailability page should be displayed\r\n9. Verify that ID.me integration is retained in Availabilty page\r\nExpected Result:\r\nID.me integration should be avilable",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch to an event directly by adding PID \r\n2. Click on any ID.me group association button ,say Student ID\r\n3. Enter the ID.me registered valid email and password of student group  affiliation\r\n4. Click on Sign-In button\r\n5. Navigate till shopping cart after selecting discount buyer\r\n6. Wait till the shopping cart gets time out.\r\n7. After time out click on Continue in the time out error message display\r\n8. The page navigates to the availability page\r\n9. Verify that ID.me integration is retained in Availabilty page",
        "expected": "1. Event availability page should be displayed \r\n2. Student ID group should be clciked and redirected to login page\r\n3. Sign up should be successfull\r\n4. Patron should be redirected to PVO with the coupon associated discount buyer for Troop \nID group should be displayed in Nav Map highlighted with discount icon\r\n5. Shopping cart with tickets should be displayed\r\n6. Shopping cart should get time out\r\n7. Availability page should be displayed\r\n8. Availability page should be displayed\r\n9. ID.me integration should be avilable"
      }
    ],
    "custom_jiras": "60.2"
  },
  {
    "id": 30692815,
    "title": "Verify ID.me integration  in Availabilty with All-in-Pricing enabled",
    "section_id": 1684998,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14123",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C151418",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.A Patron should be available such that ,Patron is already registered with in ID.me with a valid email and the Group Affiliation for any group should be completed .\r\n2.There should be one buyer type available per group and the coupon code for each should be configured in ProVenue:\r\nSay Buyer B1 for Troop ID ,B2 for First Responder ID ,B3 for Student ID,B4 for Teacher ID should be coupon protected with different coupon codes.\r\n3.Coupon code should be mapped to PVO for a patricular ID.me group affiliation:\r\nSet the text code for mapping coupon code.\r\nIDMECM: - IDME_COUPON_MAPPING. ID.me profile (military, student, teacher, responder, government) to PVO coupon code mapping. Format: military=A|student=B|teacher=C|responder=D\r\n4.Turn ON ID.me feature:\r\nIDMEE: - IDME_ENABLED. ID.me feature .Set the text code to true.\r\n5.Turn ON all group associations (Set IDMEME , IDMESE,IDMETE,IDMERE,IDMEGE textcodes to true)\r\n6.All in pricing setup should be done",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch to an event directly by adding PID /Launch to Event schedule calendar page and \nselect an event from availability page\r\nExpected Result:\r\nEvent availability page should be displayed in both cases.\r\n2. Click on any ID.me group association button ,say Mitilary ID\r\nExpected Result:\r\nMilitary ID group should be clciked and redirected to login page\r\n3. Verify that patron is presented with ID.me login page\nEnter the ID.me registered valid email and password of military group  affiliation\r\nExpected Result:\r\nSign up should be successfull\r\n4. Click on Sign-In button\nOn valid Verification verify that patron is redirected back to PVO\r\nExpected Result:\r\nPatron should be redirected to PVO with the coupon associated discount buyer for Troop ID group should be displayed and highlighted with discount icon\r\n5. Verify if Fee is displaying in availability\r\nExpected Result:\r\nFee details should be displayed\r\n6. Select discount buyer and reach on shopping cart and verify the Fee displayed\r\nExpected Result:\r\nTickets should be displayed in the shopping cart\r\n7. Navigate till Payment page and verify the Fee displayed in the payment page\nComplete the transaction\r\nExpected Result:\r\nFee is displayed as expected and Transaction should be completed\r\n8. Verify if Fee is charged correctly in the confirmation page\r\nExpected Result:\r\nFee should be charged as expected.\r\n9. Verify pvo.payment, PVO.inventory, PVO.inventory_seat DB with the order id\r\nExpected Result:\r\nTransaction details should be available\r\n10. Verify PV Ticket services payment tab for the order details\r\nExpected Result:\r\nAll details of the order should appear properly\r\n11. Verify the SellSeats logs for the transaction\r\nExpected Result:\r\n\t\nThe transaction detials should be passed properly in the logs without any error",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch to an event directly by adding PID /Launch to Event schedule calendar page and \nselect an event from availability page\r\n2. Click on any ID.me group association button ,say Mitilary ID\r\n3. Verify that patron is presented with ID.me login page\nEnter the ID.me registered valid email and password of military group  affiliation\r\n4. Click on Sign-In button\nOn valid Verification verify that patron is redirected back to PVO\r\n5. Verify if Fee is displaying in availability\r\n6. Select discount buyer and reach on shopping cart and verify the Fee displayed\r\n7. Navigate till Payment page and verify the Fee displayed in the payment page\nComplete the transaction\r\n8. Verify if Fee is charged correctly in the confirmation page\r\n9. Verify pvo.payment, PVO.inventory, PVO.inventory_seat DB with the order id\r\n10. Verify PV Ticket services payment tab for the order details\r\n11. Verify the SellSeats logs for the transaction",
        "expected": "1. Event availability page should be displayed in both cases.\r\n2. Military ID group should be clciked and redirected to login page\r\n3. Sign up should be successfull\r\n4. Patron should be redirected to PVO with the coupon associated discount buyer for Troop ID group should be displayed and highlighted with discount icon\r\n5. Fee details should be displayed\r\n6. Tickets should be displayed in the shopping cart\r\n7. Fee is displayed as expected and Transaction should be completed\r\n8. Fee should be charged as expected.\r\n9. Transaction details should be available\r\n10. All details of the order should appear properly\r\n11. \t\nThe transaction detials should be passed properly in the logs without any error"
      }
    ],
    "custom_jiras": "60.2"
  },
  {
    "id": 30692816,
    "title": "Verify Seat quantity set for ID.me group discount buyer from PV is honored in Availiabiltiy",
    "section_id": 1684998,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14123",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C151419",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.A Patron should be available such that ,Patron is already registered with in ID.me with a valid email and the Group Affiliation for any group should be completed .\r\n2.There should be one buyer type available per group and the coupon code for each should be configured in ProVenue:\r\nSay Buyer B1 for Troop ID ,B2 for First Responder ID ,B3 for Student ID,B4 for Teacher ID should be coupon protected with different coupon codes.\r\nSet Seat quantity for the discount promotions for which coupons are set.\r\n3.Coupon code should be mapped to PVO for a patricular ID.me group affiliation:\r\nSet the text code for mapping coupon code.\r\nIDMECM: - IDME_COUPON_MAPPING. ID.me profile (military, student, teacher, responder, government) to PVO coupon code mapping. Format: military=A|student=B|teacher=C|responder=D\r\n4.Turn ON ID.me feature:\r\nIDMEE: - IDME_ENABLED. ID.me feature .Set the text code to true.\r\n5.Turn ON all group associations (Set IDMEME , IDMESE,IDMETE,IDMERE,IDMEGE textcodes to true)\r\n6.All in pricing setup should be done",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch to an event directly by adding PID /Launch to Event schedule calendar page and \nselect an event from availability page\r\nExpected Result:\r\nEvent availability page should be displayed in both cases.\r\n2. Click on any ID.me group association button ,,say Student ID\n\r\nExpected Result:\r\ngroup association button ,say Student ID should be clickable and should navigate to ID.me login page\r\n3. Verify that patron is presented with ID.me login page\r\nExpected Result:\r\npatron should be presented with ID.me login page\r\n4. Sign in with valid credentials\r\nExpected Result:\r\nUser should be able to enter  the ID.me registered valid email and password of Troop ID group  \naffiliation and signin button should be clickable and then should navigate to Verification page\r\n5. On valid Verification verify that patron is redirected back to availability page with discount buyer unlocked\r\nExpected Result:\r\nPVO Availability page should be displayed.Coupon code text box and ID.me buttons should be hidden after the successful authentication\r\n6. Verify that discount buyer contain seat qunatity icon .\r\nExpected Result:\r\nDiscount buyer should contain seat qunatity icon.\r\n7. Select tickets without satisfying seat quantity and verify that seat qunatity error message is displayed\r\nExpected Result:\r\nVaild error message should be displayed and ID.me integration should be  reatined in availability after seat quantity error\r\n8. Select tickets after satisfying seat quantity and click on Continue button.\r\nExpected Result:\r\nUser should be navigated to shopping cart.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch to an event directly by adding PID /Launch to Event schedule calendar page and \nselect an event from availability page\r\n2. Click on any ID.me group association button ,,say Student ID\n\r\n3. Verify that patron is presented with ID.me login page\r\n4. Sign in with valid credentials\r\n5. On valid Verification verify that patron is redirected back to availability page with discount buyer unlocked\r\n6. Verify that discount buyer contain seat qunatity icon .\r\n7. Select tickets without satisfying seat quantity and verify that seat qunatity error message is displayed\r\n8. Select tickets after satisfying seat quantity and click on Continue button.",
        "expected": "1. Event availability page should be displayed in both cases.\r\n2. group association button ,say Student ID should be clickable and should navigate to ID.me login page\r\n3. patron should be presented with ID.me login page\r\n4. User should be able to enter  the ID.me registered valid email and password of Troop ID group  \naffiliation and signin button should be clickable and then should navigate to Verification page\r\n5. PVO Availability page should be displayed.Coupon code text box and ID.me buttons should be hidden after the successful authentication\r\n6. Discount buyer should contain seat qunatity icon.\r\n7. Vaild error message should be displayed and ID.me integration should be  reatined in availability after seat quantity error\r\n8. User should be navigated to shopping cart."
      }
    ],
    "custom_jiras": "60.2"
  },
  {
    "id": 30692817,
    "title": "Verify that  ID.me buttons are hidden in availabilty once a successful validation with ID.me has occurred for one event when patron visit Availability page again for adding additional events to their Shopping Cart .",
    "section_id": 1684998,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14123",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_refs": "C151420",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre requisite\r\n1.A Patron should be available such that ,Patron is already registered with  in ID.me with a valid email and \r\nthe Group Affiliation for any group should be completed .\r\n2.There should be one buyer type available per group and the coupon code for each should  be \r\nconfigured in ProVenue. Say Buyer B1 for Troop ID ,B2 for First Responder ID ,B3 for Student ID,B4 for \r\nTeacher ID should be coupon protected with different coupon codes.\r\n3.Coupon code should be mapped to PVO for a patricular ID.ME group affiliation\r\nSet the text code for mapping coupon code.\r\nIDMECM: - IDME_COUPON_MAPPING. ID.me profile (military, student, teacher, responder, government) to \r\nPVO coupon code mapping. Format: military=A|student=B|teacher=C|responder=D\r\nTurn ON ID.me feature\r\nIDMEE: - IDME_ENABLED. ID.me feature switch. Set the text code to true.",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the Event link\r\nExpected Result:\r\nUser is landed on the availability page\r\n2. Click on any ID.me group association button ,say Student ID\r\nExpected Result:\r\nUser should be redirected to ID.Me login page\r\n3. Verify that patron is presented with ID.me login page\r\nExpected Result:\r\nPatron should be presented with ID.me login page\r\n4. Enter registered valid email and password and click on Sign in button\r\nExpected Result:\r\nPatron should be logged into ID.Me login page\r\n5. On valid Verification verify that patron is redirected back to PVO availabilty page with discounts for selected group.\r\nExpected Result:\r\nPatron should be redirected to PVO availability page with discounts for selected group and the coupon code text box and ID.me buttons are hidden after the successful authentication.\r\n6. Select tickets for  discounted buyer and reach on shopping cart\r\nExpected Result:\r\nPatron should be in to shopping cart after selecting tickets.\r\n7. Click on add another event  and verify that once a successful validation has occurred for one event, the ID.me buttons are hidden.\r\nExpected Result:\r\nPatron should be redirected to PVO Availability page and and the coupon code text box and ID.me buttons are hidden after the successful authentication.\r\n8. Lock the seats and verify that the ticket details are displayed in the shopping cart\r\nExpected Result:\r\nTickets details should be displayed in the cart",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the Event link\r\n2. Click on any ID.me group association button ,say Student ID\r\n3. Verify that patron is presented with ID.me login page\r\n4. Enter registered valid email and password and click on Sign in button\r\n5. On valid Verification verify that patron is redirected back to PVO availabilty page with discounts for selected group.\r\n6. Select tickets for  discounted buyer and reach on shopping cart\r\n7. Click on add another event  and verify that once a successful validation has occurred for one event, the ID.me buttons are hidden.\r\n8. Lock the seats and verify that the ticket details are displayed in the shopping cart",
        "expected": "1. User is landed on the availability page\r\n2. User should be redirected to ID.Me login page\r\n3. Patron should be presented with ID.me login page\r\n4. Patron should be logged into ID.Me login page\r\n5. Patron should be redirected to PVO availability page with discounts for selected group and the coupon code text box and ID.me buttons are hidden after the successful authentication.\r\n6. Patron should be in to shopping cart after selecting tickets.\r\n7. Patron should be redirected to PVO Availability page and and the coupon code text box and ID.me buttons are hidden after the successful authentication.\r\n8. Tickets details should be displayed in the cart"
      }
    ],
    "custom_jiras": "60.2"
  },
  {
    "id": 30692818,
    "title": "Verify ID.me integration is retained in availabilty after coming back to availabilty from shopping cart,delivery ,payment and schedule pages",
    "section_id": 1684998,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14123",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_refs": "C151421",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Login to ID.me and lock seats following the steps in [C131794]\r\nExpected Result:\r\nShopping cart with tickets should be displayed\r\n2. Continue from shopping cart and land on delivery page\r\nExpected Result:\r\nDelivery page should be displayed\r\n3. Again click on schedule and land on Availabilty again\r\nExpected Result:\r\nAvailability page should be displayed\r\n4. Verify that ID.me integration is retained in Availabilty\r\nExpected Result:\r\nID.me integration should be avilable\r\n5. Go to payment page and  click on schedule and land on Availabilty again\r\nExpected Result:\r\nAvailability page should be displayed\r\n6. Verify that ID.me integration is retained in Availabilty\r\nExpected Result:\r\nID.me integration should be avilable",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to ID.me and lock seats following the steps in [C131794]\r\n2. Continue from shopping cart and land on delivery page\r\n3. Again click on schedule and land on Availabilty again\r\n4. Verify that ID.me integration is retained in Availabilty\r\n5. Go to payment page and  click on schedule and land on Availabilty again\r\n6. Verify that ID.me integration is retained in Availabilty",
        "expected": "1. Shopping cart with tickets should be displayed\r\n2. Delivery page should be displayed\r\n3. Availability page should be displayed\r\n4. ID.me integration should be avilable\r\n5. Availability page should be displayed\r\n6. ID.me integration should be avilable"
      }
    ],
    "custom_jiras": "60.2"
  },
  {
    "id": 30692819,
    "title": "Verify ID.me integration in  ADA sales flow",
    "section_id": 1684998,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14123",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 9,
    "custom_is_automated": false,
    "custom_refs": "C151422",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.A Patron should be available such that ,Patron is already registered with in ID.me with a valid email and the Group Affiliation for any group should be completed .\r\n2.There should be one buyer type available per group and the coupon code for each should be configured in ProVenue:\r\nSay Buyer B1 for Troop ID ,B2 for First Responder ID ,B3 for Student ID,B4 for Teacher ID should be coupon protected with different coupon codes.\r\nSet Seat quantity for the discount promotions for which coupons are set.\r\n3.Coupon code should be mapped to PVO for a patricular ID.me group affiliation:\r\nSet the text code for mapping coupon code.\r\nIDMECM: - IDME_COUPON_MAPPING. ID.me profile (military, student, teacher, responder, government) to PVO coupon code mapping. Format: military=A|student=B|teacher=C|responder=D\r\n4.Turn ON ID.me feature:\r\nIDMEE: - IDME_ENABLED. ID.me feature .Set the text code to true.\r\n5.Turn ON all group associations (Set IDMEME , IDMESE,IDMETE,IDMERE,IDMEGE textcodes to true)\r\n6.ADA seats should be setup.",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch to an event directly by adding PID /Launch to Event schedule calendar page and select an event from availability page\r\nExpected Result:\r\nEvent availability page should be displayed in \nboth cases.\r\n2. Click on any ID.me group association button ,say Student ID\nVerify that patron is presented with ID.me login page\r\nExpected Result:\r\nStudent ID group should be clciked and redirected to login page\r\n3. Enter the ID.me registered valid email and password of student group  affiliation\nClick on Sign-In button\r\nExpected Result:\r\nSign up should be successfull\r\n4. On valid Verification verify that patron is redirected back to PVO .\r\nExpected Result:\r\nPatron should be redirected to PVO with the coupon associated discount buyer for Troop ID group should be displayed in Nav Map highlighted with discount icon\r\n5. Switch to ADA  sales\r\nExpected Result:\r\nADA seats availability page should be displayed\r\n6. Verify that patron is not requested to authenticate with ID.me after switcing to ADA  sales\r\nExpected Result:\r\nPatron should not offered for authentication with ID.me\r\n7. Verify that the buyer type associated to ID.Me is still available for ADA seats\r\nExpected Result:\r\nByer type associated to ID.me should be avilable\r\n8. Complete the transaction following the steps 6-12 in [C131790]\r\nExpected Result:\r\nTransaction should be completed sucessfully",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch to an event directly by adding PID /Launch to Event schedule calendar page and select an event from availability page\r\n2. Click on any ID.me group association button ,say Student ID\nVerify that patron is presented with ID.me login page\r\n3. Enter the ID.me registered valid email and password of student group  affiliation\nClick on Sign-In button\r\n4. On valid Verification verify that patron is redirected back to PVO .\r\n5. Switch to ADA  sales\r\n6. Verify that patron is not requested to authenticate with ID.me after switcing to ADA  sales\r\n7. Verify that the buyer type associated to ID.Me is still available for ADA seats\r\n8. Complete the transaction following the steps 6-12 in [C131790]",
        "expected": "1. Event availability page should be displayed in \nboth cases.\r\n2. Student ID group should be clciked and redirected to login page\r\n3. Sign up should be successfull\r\n4. Patron should be redirected to PVO with the coupon associated discount buyer for Troop ID group should be displayed in Nav Map highlighted with discount icon\r\n5. ADA seats availability page should be displayed\r\n6. Patron should not offered for authentication with ID.me\r\n7. Byer type associated to ID.me should be avilable\r\n8. Transaction should be completed sucessfully"
      }
    ],
    "custom_jiras": "60.2"
  },
  {
    "id": 30692820,
    "title": "Verify patron is able to login  with an existing registered ID.me Email ID and valid password after an error on ID.me login page",
    "section_id": 1684998,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14123",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 10,
    "custom_is_automated": false,
    "custom_refs": "C151423",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.A Patron should be available such that ,Patron is already registered with in ID.me with a valid email and the Group Affiliation for any group should be completed .\r\n2.There should be one buyer type available per group and the coupon code for each should be configured in ProVenue:\r\nSay Buyer B1 for Troop ID ,B2 for First Responder ID ,B3 for Student ID,B4 for Teacher ID should be coupon protected with different coupon codes.\r\nSet Seat quantity for the discount promotions for which coupons are set.\r\n3.Coupon code should be mapped to PVO for a patricular ID.me group affiliation:\r\nSet the text code for mapping coupon code.\r\nIDMECM: - IDME_COUPON_MAPPING. ID.me profile (military, student, teacher, responder, government) to PVO coupon code mapping. Format: military=A|student=B|teacher=C|responder=D\r\n4.Turn ON ID.me feature:\r\nIDMEE: - IDME_ENABLED. ID.me feature .Set the text code to true.\r\n5.Turn ON all group associations (Set IDMEME , IDMESE,IDMETE,IDMERE,IDMEGE textcodes to true)",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the Event link\r\nExpected Result:\r\nAvailability page should be launhced\r\n2. Click on any ID.me group association button ,say Student ID(Select a group other than registered group)\r\nExpected Result:\r\nUser should be redirected to ID.Me login page\r\n3. Verify that patron is presented with ID.me login page\r\nExpected Result:\r\nPatron should be presented with ID.me login page\r\n4. Enter an invalid email,say enter an email with missing @ sign OR valid password and click on Sign inEx: email.domain.com and enter password\r\nExpected Result:\r\nProper Error message should be displayed to Patron in ID.me login page\r\n5. Enter registered valid email and password and click on Sign in button\r\nExpected Result:\r\nPatron should be logged into ID.Me login page\r\n6. On valid Verification verify that patron is redirected back to PVO availabilty page with discounts for selected group.\r\nExpected Result:\r\nPatron should be redirected to PVO availability page with discounts for selected group.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the Event link\r\n2. Click on any ID.me group association button ,say Student ID(Select a group other than registered group)\r\n3. Verify that patron is presented with ID.me login page\r\n4. Enter an invalid email,say enter an email with missing @ sign OR valid password and click on Sign inEx: email.domain.com and enter password\r\n5. Enter registered valid email and password and click on Sign in button\r\n6. On valid Verification verify that patron is redirected back to PVO availabilty page with discounts for selected group.",
        "expected": "1. Availability page should be launhced\r\n2. User should be redirected to ID.Me login page\r\n3. Patron should be presented with ID.me login page\r\n4. Proper Error message should be displayed to Patron in ID.me login page\r\n5. Patron should be logged into ID.Me login page\r\n6. Patron should be redirected to PVO availability page with discounts for selected group."
      }
    ],
    "custom_jiras": "60.2"
  },
  {
    "id": 30692821,
    "title": "Verify ID.me login with an existing registered ID.me Email ID and invalid password by clicking on group association button in availability",
    "section_id": 1684998,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14123",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 11,
    "custom_is_automated": false,
    "custom_refs": "C151424",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.A Patron should be available such that ,Patron is already registered with in ID.me with a valid email and the Group Affiliation for any group should be completed .\r\n2.There should be one buyer type available per group and the coupon code for each should be configured in ProVenue:\r\nSay Buyer B1 for Troop ID ,B2 for First Responder ID ,B3 for Student ID,B4 for Teacher ID should be coupon protected with different coupon codes.\r\nSet Seat quantity for the discount promotions for which coupons are set.\r\n3.Coupon code should be mapped to PVO for a patricular ID.me group affiliation:\r\nSet the text code for mapping coupon code.\r\nIDMECM: - IDME_COUPON_MAPPING. ID.me profile (military, student, teacher, responder, government) to PVO coupon code mapping. Format: military=A|student=B|teacher=C|responder=D\r\n4.Turn ON ID.me feature:\r\nIDMEE: - IDME_ENABLED. ID.me feature .Set the text code to true.\r\n5.Turn ON all group associations (Set IDMEME , IDMESE,IDMETE,IDMERE,IDMEGE textcodes to true)",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the Event link\r\nExpected Result:\r\nAvailability page should be launhced\r\n2. Click on any ID.me group association button ,say Student ID\r\nExpected Result:\r\nUser should be redirected to ID.Me login page\r\n3. Verify that patron is presented with ID.me login page\r\nExpected Result:\r\nPatron should be presented with ID.me login page\r\n4. Enter an existing registered ID.me Email ID and invalid password anc click on Sign in button\r\nExpected Result:\r\nProper Error message should be displayed to Patron in ID.me login page\r\n5. Enter registered valid email and password and click on Sign in button\r\nExpected Result:\r\nPatron should be logged into ID.Me login page\r\n6. On valid Verification verify that patron is redirected back to PVO availabilty page with discounts for selected group.\r\nExpected Result:\r\nPatron should be redirected to PVO availability page with discounts for selected group.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the Event link\r\n2. Click on any ID.me group association button ,say Student ID\r\n3. Verify that patron is presented with ID.me login page\r\n4. Enter an existing registered ID.me Email ID and invalid password anc click on Sign in button\r\n5. Enter registered valid email and password and click on Sign in button\r\n6. On valid Verification verify that patron is redirected back to PVO availabilty page with discounts for selected group.",
        "expected": "1. Availability page should be launhced\r\n2. User should be redirected to ID.Me login page\r\n3. Patron should be presented with ID.me login page\r\n4. Proper Error message should be displayed to Patron in ID.me login page\r\n5. Patron should be logged into ID.Me login page\r\n6. Patron should be redirected to PVO availability page with discounts for selected group."
      }
    ],
    "custom_jiras": "60.2"
  },
  {
    "id": 30692822,
    "title": "Verify completing transaction after selecting ID.me group discount buyer and a normal buyer together from availability in a single transaction",
    "section_id": 1684998,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14123",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 12,
    "custom_is_automated": false,
    "custom_refs": "C151425",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.A Patron should be available such that ,Patron is already registered with in ID.me with a valid email and \r\nthe Group Affiliation for any group should be completed .\r\n2.There should be one buyer type available per group and the coupon code for each should be \r\nconfigured in ProVenue. Say Buyer B1 for Troop ID ,B2 for First Responder ID ,B3 for Student ID,B4 for \r\nTeacher ID should be coupon protected with different coupon codes.\r\n3.Coupon code should be mapped to PVO for a patricular ID.ME group affiliation\r\nSet the text code for mapping coupon code.\r\nIDMECM: - IDME_COUPON_MAPPING. ID.me profile (military, student, teacher, responder, government) to \r\nPVO coupon code mapping. Format: military=A|student=B|teacher=C|responder=D\r\nTurn ON ID.me feature\r\nIDMEE: - IDME_ENABLED. ID.me feature switch. Set the text code to true.",
    "custom_test_purpose": null,
    "custom_steps": "1. Lock Discount Buyer and navigate till cart following steps in [C131794]\r\nExpected Result:\r\nTickets details should be displayed in the cart\r\n2. Click on Add Tickets\r\nExpected Result:\r\nUser is landed back in the availability page\r\n3. Select tickets for normal buyer and click on continue.\r\nExpected Result:\r\nA log in prompt should be displayed.\r\n4. Log in as a existsing patron.\r\nExpected Result:\r\nUser should be navigated to payment page.\r\n5. Enter the payment details and complete the transaction\r\nExpected Result:\r\nConfirmation page should be displayed.\nTransaction should complete without any error\r\n6. Verify the SellSeats logs for the transaction\r\nExpected Result:\r\nTransaction details should be displayed without any error in the logs\r\n7. Verify pvo.payment, PVO.inventory, PVO.inventory_seat DB with the order id\r\nExpected Result:\r\nAll details should be passed as expected\r\n8. Verify PV Ticket services payment tab for the order details\r\nExpected Result:\r\n\t\nAll details of the order should appear properly in PV with discount buyer and a normal buyer",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Lock Discount Buyer and navigate till cart following steps in [C131794]\r\n2. Click on Add Tickets\r\n3. Select tickets for normal buyer and click on continue.\r\n4. Log in as a existsing patron.\r\n5. Enter the payment details and complete the transaction\r\n6. Verify the SellSeats logs for the transaction\r\n7. Verify pvo.payment, PVO.inventory, PVO.inventory_seat DB with the order id\r\n8. Verify PV Ticket services payment tab for the order details",
        "expected": "1. Tickets details should be displayed in the cart\r\n2. User is landed back in the availability page\r\n3. A log in prompt should be displayed.\r\n4. User should be navigated to payment page.\r\n5. Confirmation page should be displayed.\nTransaction should complete without any error\r\n6. Transaction details should be displayed without any error in the logs\r\n7. All details should be passed as expected\r\n8. \t\nAll details of the order should appear properly in PV with discount buyer and a normal buyer"
      }
    ],
    "custom_jiras": "60.2"
  },
  {
    "id": 30692823,
    "title": "Verify ID.me integartion along with social media integration",
    "section_id": 1684998,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14123, PVO-17053",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 13,
    "custom_is_automated": false,
    "custom_refs": "C151426",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre requisite\r\n \r\n1.A Patron should be available such that ,Patron is already registered with  in ID.me with a valid email and the Group Affiliation for any group should be completed .\r\n2.There should be one buyer type available per group and the coupon code for each should  be configured in ProVenue. Say Buyer B1 for Troop ID ,B2 for First Responder ID ,B3 for Student ID,B4 for Teacher ID should be coupon protected with different coupon codes.\r\n3.Coupon code should be mapped to PVO for a patricular ID.ME group affiliation\r\nSet the text code for mapping coupon code.\r\nIDMECM: - IDME_COUPON_MAPPING. ID.me profile (military, student, teacher, responder, government) to PVO coupon code mapping. Format: military=A|student=B|teacher=C|responder=D\r\n4.Turn ON ID.Me feature (Set IDMEE to true)\r\n5.Turn ON all group associations (Set IDMEME , IDMESE,IDMETE,IDMERE,IDMEGE textcodes to true) \r\n6.Turn ON Social Media (Facebook,Twitter,Google plus and Pinterest)",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the Event link\r\nExpected Result:\r\nApplication should be opened\n\r\n2. Verify social media integration icons are displayed right justified \n\r\nExpected Result:\r\nSocial integration icons should be right justified\n\r\n3. Click on Facebook/Twitter/Google plus/Pinterest.\n\r\nExpected Result:\r\nUser is presented with a popup to enter credentials\r\n4. Enter valid credentials \r\nExpected Result:\r\nLogin should be successful\r\n5. Click on any ID.me group association button ,say Student ID\n\r\nExpected Result:\r\nStudent ID group should be clciked and redirected to login page\n\r\n6. 1.Verify that patron is presented with ID.me login page\n2.Enter the ID.me registered valid email and password of student group  affiliation\n3.Click on Sign-In button\n\r\nExpected Result:\r\nSign up should be successfull\n\r\n7. On valid Verification verify that patron is redirected back to PVO .\n  \n\r\nExpected Result:\r\nPatron should be redirected to PVO with \nthe coupon associated discount buyer for Troop ID group should be displayed in Nav Map highlighted with discount icon\n  \n\r\n8. Verify Request and Response call from ID.me in logs\n\r\nExpected Result:\r\nRequest and response call should be logged\n\r\n9. .Select the discount buyer offered for student and complete the transaction\n\r\nExpected Result:\r\nTransaction should be completed sucessfully\n\r\n10. Verify Sell seats logs\n\r\nExpected Result:\r\nSell Seat logs should be displayed\n\r\n11. Verify Order Status is success\n\r\nExpected Result:\r\nOrder status should be TS in maintanence site\n\r\n12. Verify DB-Check Order and Payment table\n\r\nExpected Result:\r\nOrder and PAyment table should be displayed with expected detials\n\r\n13. Verify PV Ticket services tab for the order details\r\nExpected Result:\r\nAll details of the order should appear properly in BOTS",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the Event link\r\n2. Verify social media integration icons are displayed right justified \n\r\n3. Click on Facebook/Twitter/Google plus/Pinterest.\n\r\n4. Enter valid credentials \r\n5. Click on any ID.me group association button ,say Student ID\n\r\n6. 1.Verify that patron is presented with ID.me login page\n2.Enter the ID.me registered valid email and password of student group  affiliation\n3.Click on Sign-In button\n\r\n7. On valid Verification verify that patron is redirected back to PVO .\n  \n\r\n8. Verify Request and Response call from ID.me in logs\n\r\n9. .Select the discount buyer offered for student and complete the transaction\n\r\n10. Verify Sell seats logs\n\r\n11. Verify Order Status is success\n\r\n12. Verify DB-Check Order and Payment table\n\r\n13. Verify PV Ticket services tab for the order details",
        "expected": "1. Application should be opened\n\r\n2. Social integration icons should be right justified\n\r\n3. User is presented with a popup to enter credentials\r\n4. Login should be successful\r\n5. Student ID group should be clciked and redirected to login page\n\r\n6. Sign up should be successfull\n\r\n7. Patron should be redirected to PVO with \nthe coupon associated discount buyer for Troop ID group should be displayed in Nav Map highlighted with discount icon\n  \n\r\n8. Request and response call should be logged\n\r\n9. Transaction should be completed sucessfully\n\r\n10. Sell Seat logs should be displayed\n\r\n11. Order status should be TS in maintanence site\n\r\n12. Order and PAyment table should be displayed with expected detials\n\r\n13. All details of the order should appear properly in BOTS"
      }
    ],
    "custom_jiras": "60.2"
  },
  {
    "id": 30692824,
    "title": "Verify ID.Me  group association buttons are hidden on PVO Availability page when ID.me feature is turned OFF",
    "section_id": 1684998,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14123",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 14,
    "custom_is_automated": false,
    "custom_refs": "C151427",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.A Patron should be available such that ,Patron is already registered with in ID.me with a valid email and the Group Affiliation for any group should be completed .\r\n2.There should be one buyer type available per group and the coupon code for each should be configured in ProVenue. \r\nSay Buyer B1 for Troop ID ,B2 for First Responder ID ,B3 for Student ID,B4 for Teacher ID should be coupon protected with different coupon codes.\r\n3.Coupon code should be mapped to PVO for a patricular ID.me group affiliation . Set the text code for mapping coupon code.\r\nIDMECM: - IDME_COUPON_MAPPING. ID.me profile (military, student, teacher, responder, government) to PVO coupon code mapping. \r\nFormat: military=A|student=B|teacher=C|responder=D\r\n4.Turn OFF ID.me feature.\r\nIDMEE: - IDME_ENABLED. ID.me feature switch. Set the text code to false.",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Single sale application\r\nExpected Result:\r\nEvent availability page should be displayed\r\n2. Verify that ID.me branded logo and group association buttons are hidden on Availabilty page\r\nExpected Result:\r\nID.me branded logo and group association buttons should be hidden on Single sale Avaliability page",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Single sale application\r\n2. Verify that ID.me branded logo and group association buttons are hidden on Availabilty page",
        "expected": "1. Event availability page should be displayed\r\n2. ID.me branded logo and group association buttons should be hidden on Single sale Avaliability page"
      }
    ],
    "custom_jiras": "60.2"
  },
  {
    "id": 30692825,
    "title": "Verify Privacy policy and About ID.me links defaults are upated to new values in resource bundle and takes user to new links when clicked",
    "section_id": 1684998,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-17201",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 15,
    "custom_is_automated": false,
    "custom_refs": "C155580",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Open resource bundle\r\nExpected Result:\r\nResource bundle should be opened\r\n2. Search for IDMEWICT\r\nExpected Result:\r\nIDMEWICT should be available\r\n3. Note the below updated parts:\n\nFor more information on ID.me's Privacy Policy, click here. \\\n\n\nor our About page. \\\r\nExpected Result:\r\nDetails should be noted down\r\n4. Do not set IDMEWICT\r\nExpected Result:\r\nIDMEWICT should not be set\r\n5. Launch Single sales event link with ID.me setup\r\nExpected Result:\r\nLink should be launched successfully\r\n6. Click What is ID.me? link in the availability page\r\nExpected Result:\r\nModal should be opened\r\n7. Verify modal is opened with IDMEWICT default content\r\nExpected Result:\r\nModal should be opened with IDMEWICT default content\r\n8. Click on \"Click here\" link and confirm that user is taken to https://wallet.id.me/privacy URL\r\nExpected Result:\r\nUser should be taken to https://wallet.id.me/privacy URL\r\n9. Click on \"About page\" link and confirm that user is taken to https://wallet.id.me/about URL\r\nExpected Result:\r\nUser should be taken to https://wallet.id.me/about URL",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Open resource bundle\r\n2. Search for IDMEWICT\r\n3. Note the below updated parts:\n\nFor more information on ID.me's Privacy Policy, click here. \\\n\n\nor our About page. \\\r\n4. Do not set IDMEWICT\r\n5. Launch Single sales event link with ID.me setup\r\n6. Click What is ID.me? link in the availability page\r\n7. Verify modal is opened with IDMEWICT default content\r\n8. Click on \"Click here\" link and confirm that user is taken to https://wallet.id.me/privacy URL\r\n9. Click on \"About page\" link and confirm that user is taken to https://wallet.id.me/about URL",
        "expected": "1. Resource bundle should be opened\r\n2. IDMEWICT should be available\r\n3. Details should be noted down\r\n4. IDMEWICT should not be set\r\n5. Link should be launched successfully\r\n6. Modal should be opened\r\n7. Modal should be opened with IDMEWICT default content\r\n8. User should be taken to https://wallet.id.me/privacy URL\r\n9. User should be taken to https://wallet.id.me/about URL"
      }
    ],
    "custom_jiras": "65.7"
  },
  {
    "id": 30692826,
    "title": "Verify new default value of IDMEWICT textcode",
    "section_id": 1684998,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-18262",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 16,
    "custom_is_automated": false,
    "custom_refs": "C155581",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Open resource bundle\r\nExpected Result:\r\nResource bundle should be opened\r\n2. Search for IDMEWICT\r\nExpected Result:\r\nIDMEWICT should be available\r\n3. Note the below part is not present in the default value:\n (What is ID.me?) talks about the ID.me marketplace where patrons can get special discounts. The hyperlink in the default takes you to the main ID.me page but it should take you to the ID.me \"shop\" page where the discounts are. \\\r\nExpected Result:\r\nThe below part should not be present in the default value:\n (What is ID.me?) talks about the ID.me marketplace where patrons can get special discounts. The hyperlink in the default takes you to the main ID.me page but it should take you to the ID.me \"shop\" page where the discounts are. \\\r\n4. Do not set Do not set IDMEWICT\r\nExpected Result:\r\nIDMEWICT should not be set\r\n5. Launch Single sales event link with ID.me setup\r\nExpected Result:\r\nLink should be launched successfully\r\n6. Click What is ID.me? link in the availability page\r\nExpected Result:\r\nModal should be opened\r\n7. Verify modal is opened with IDMEWICT default content\r\nExpected Result:\r\nModal should be opened with IDMEWICT default content\r\n8. Makre sure that, the above mentioned part is not present in the UI\r\nExpected Result:\r\nThe above mentioned part should not be present in the UI",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Open resource bundle\r\n2. Search for IDMEWICT\r\n3. Note the below part is not present in the default value:\n (What is ID.me?) talks about the ID.me marketplace where patrons can get special discounts. The hyperlink in the default takes you to the main ID.me page but it should take you to the ID.me \"shop\" page where the discounts are. \\\r\n4. Do not set Do not set IDMEWICT\r\n5. Launch Single sales event link with ID.me setup\r\n6. Click What is ID.me? link in the availability page\r\n7. Verify modal is opened with IDMEWICT default content\r\n8. Makre sure that, the above mentioned part is not present in the UI",
        "expected": "1. Resource bundle should be opened\r\n2. IDMEWICT should be available\r\n3. The below part should not be present in the default value:\n (What is ID.me?) talks about the ID.me marketplace where patrons can get special discounts. The hyperlink in the default takes you to the main ID.me page but it should take you to the ID.me \"shop\" page where the discounts are. \\\r\n4. IDMEWICT should not be set\r\n5. Link should be launched successfully\r\n6. Modal should be opened\r\n7. Modal should be opened with IDMEWICT default content\r\n8. The above mentioned part should not be present in the UI"
      }
    ],
    "custom_jiras": "65.7"
  },
  {
    "id": 30692827,
    "title": "Verify no ticket insurance is displayed when WATIFE is FALSE for MLB renewals",
    "section_id": 1684999,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-9028",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C151428",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "The textcode WATIFE should be set to false at the Supplier level.\r\nSome unpaid tickets should be available in the my tickets renewals patron account",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MLB My Tickets link using the url\r\nExpected Result:\r\nThe site should be launched\r\n2. Select any tickets from the tickets available in the To Do List\r\nExpected Result:\r\nTickets should be selected\r\n3. Select any of the Payment Plans and click on Continue button\r\nExpected Result:\r\nThe user should be navigated to the Payments page\r\n4. Enter the mandatory fields in the Payment page regarding Billing details and Credit card details.\r\nExpected Result:\r\nThe mandatory fields should be entered\r\n5. Verify the ticket insurance text is not displayed and click on the Buy tickets button\r\nExpected Result:\r\nThe ticket insurance text should not be displayed.\r\n6. Accept the terms and conditions and \ncomplete payment\r\nExpected Result:\r\nThe user should be navigated to the Confirmation page",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MLB My Tickets link using the url\r\n2. Select any tickets from the tickets available in the To Do List\r\n3. Select any of the Payment Plans and click on Continue button\r\n4. Enter the mandatory fields in the Payment page regarding Billing details and Credit card details.\r\n5. Verify the ticket insurance text is not displayed and click on the Buy tickets button\r\n6. Accept the terms and conditions and \ncomplete payment",
        "expected": "1. The site should be launched\r\n2. Tickets should be selected\r\n3. The user should be navigated to the Payments page\r\n4. The mandatory fields should be entered\r\n5. The ticket insurance text should not be displayed.\r\n6. The user should be navigated to the Confirmation page"
      }
    ],
    "custom_jiras": "53"
  },
  {
    "id": 30692828,
    "title": "Verify the Ticket insurance if the patron opts out for insurance_MLB.",
    "section_id": 1684999,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-9028",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C151429",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Some unpaid tickets should be available in the my tickets renewals patron account\nLaunch the MLB My Tickets link using the url\r\n\nSelect any tickets from the tickets available in the To Do List\nSelect any of the Payment Plans and click on Continue button\nEnter the mandatory fields in the Payment page regarding Billing details and Credit card details.\nVerify that the ticket insurance is displayed.\nVerify that the Total displayed in Summary should be independent of the Ticket insurance.\nEnter the mandatory fields in the Payment page regarding Billing details and Credit card details.\nNote down the orderkey  using the view source\nVerify both Yes and No radio buttons are present on the page and enabled and neither button is set.\r\nClick on the 'No' radio button and click on the continue button\nLaunch the Maintenace site using the url and Sign in .\n1.Select Orders from the right navigation and then select Orders\r\n2.Select Text button\r\n3.Enter the orderid.The orderis is the orderkey noted in  step8\nVerify if the textcode WATIA is shown as textcode set.\nVerify the order_text WATIQIN\nVerify the order_text WATIHTML\nLaunch the PVO database and query the order_text table to verify the WATIA textcode gets updated\n1. Open the Putty\r\n2. Verify the Ticket Insurace details in GetQuote API\n1. Open the Putty\r\n2. Verify the Ticket Insurace details in Decline Quote API\nCall",
    "custom_test_purpose": null,
    "custom_steps": "1. Pre-requisite\r\n2. Step 3\r\nExpected Result:\r\nThe site should be launched\r\n3. Step 4\r\nExpected Result:\r\nUser is navigated to the Selection page\r\n4. Step 5\r\nExpected Result:\r\nThe user should be navigated to the Payments page\r\n5. Step 6\r\nExpected Result:\r\nThe mandatory fields should be entered\r\n6. Step 7\r\nExpected Result:\r\nThe ticket insurance text should be displayed.\r\n7. Step 8\r\nExpected Result:\r\nThe Total should not contain the Ticket insurance amount.\r\n8. Step 9\r\nExpected Result:\r\nThe mandatory fields should be entered\r\n9. Step 10\r\nExpected Result:\r\nThe orderkey should be noted\r\n10. Step 11\r\nExpected Result:\r\nThe radio button No should be highlighted in the ticket insurance. The user    be navigated to the confirmation page.\r\n11. Step 12\r\nExpected Result:\r\nThe user should be signed in.\r\n12. Step 13\r\nExpected Result:\r\nThe user should be  navigated to the Search your order record.\r\n2.The user should be navigated to the Search text by Order id page\r\n3.Order_text page should be displayed\r\n13. Step 14\r\nExpected Result:\r\nThe text content should display the ticket insurance amount charged.\r\n14. Step 15:\r\nExpected Result:\r\nThe text content should display the nodes from GetQuote Call\r\n15. Step 16:\r\nExpected Result:\r\nThe order_text content should contain the InsuranceOffer HTML displayed in the GetQuote API\r\n16. Step 17:Verify the GetQuote API\r\nExpected Result:\r\nThe textcode should get updated\r\n17. Step 18: Open the Log Files.\r\nExpected Result:\r\nFollowing Details should be displayed correctly in the GetQuote API:\r\n1.ProductPrice element should display the insurance amount.\r\n2.IsDecline\" element should be  false.\r\n3.WATIA text code should display the Total price.\r\n4.InsuranceOfferHTML and WATIQIN text code should be displayed \r\nFollowing Nodes should be displayed correctly.\r\n1..BusinessUnit (This element will contain the Venue Country Code.)\r\n2.Path( This will have the value \"Single_Ticket\" for single tickets and \"Season_Renewal\" for Renewal order)\r\n3.TotalNumberOfTickets (This will have the total number of Insurable tickets in the order.)\r\n4.MajorCategory (This node value is always hard-coded to MUSIC_EVENT)\r\n5.TotalCoverageAmount (This node value has the total Order amount excluding disposition fee.)\r\n6.Offer_ID(it contains the Premium Amount for each Offer)\r\n18. Step 19:Verify the Decline Quote API.\r\nExpected Result:\r\nFollowing Nodes should be displayed correctly in the SendPurchase API:\r\n1.QuotePackId (This value is retrieved from WATIQIN text code.)\r\n2.TreatmentId (This value is retrieved from WATIQIN text code.)\r\n19. Call",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-requisite\r\n2. Step 3\r\n3. Step 4\r\n4. Step 5\r\n5. Step 6\r\n6. Step 7\r\n7. Step 8\r\n8. Step 9\r\n9. Step 10\r\n10. Step 11\r\n11. Step 12\r\n12. Step 13\r\n13. Step 14\r\n14. Step 15:\r\n15. Step 16:\r\n16. Step 17:Verify the GetQuote API\r\n17. Step 18: Open the Log Files.\r\n18. Step 19:Verify the Decline Quote API.\r\n19. Call",
        "expected": "1. \r\n2. The site should be launched\r\n3. User is navigated to the Selection page\r\n4. The user should be navigated to the Payments page\r\n5. The mandatory fields should be entered\r\n6. The ticket insurance text should be displayed.\r\n7. The Total should not contain the Ticket insurance amount.\r\n8. The mandatory fields should be entered\r\n9. The orderkey should be noted\r\n10. The radio button No should be highlighted in the ticket insurance. The user    be navigated to the confirmation page.\r\n11. The user should be signed in.\r\n12. The user should be  navigated to the Search your order record.\r\n2.The user should be navigated to the Search text by Order id page\r\n3.Order_text page should be displayed\r\n13. The text content should display the ticket insurance amount charged.\r\n14. The text content should display the nodes from GetQuote Call\r\n15. The order_text content should contain the InsuranceOffer HTML displayed in the GetQuote API\r\n16. The textcode should get updated\r\n17. Following Details should be displayed correctly in the GetQuote API:\r\n1.ProductPrice element should display the insurance amount.\r\n2.IsDecline\" element should be  false.\r\n3.WATIA text code should display the Total price.\r\n4.InsuranceOfferHTML and WATIQIN text code should be displayed \r\nFollowing Nodes should be displayed correctly.\r\n1..BusinessUnit (This element will contain the Venue Country Code.)\r\n2.Path( This will have the value \"Single_Ticket\" for single tickets and \"Season_Renewal\" for Renewal order)\r\n3.TotalNumberOfTickets (This will have the total number of Insurable tickets in the order.)\r\n4.MajorCategory (This node value is always hard-coded to MUSIC_EVENT)\r\n5.TotalCoverageAmount (This node value has the total Order amount excluding disposition fee.)\r\n6.Offer_ID(it contains the Premium Amount for each Offer)\r\n18. Following Nodes should be displayed correctly in the SendPurchase API:\r\n1.QuotePackId (This value is retrieved from WATIQIN text code.)\r\n2.TreatmentId (This value is retrieved from WATIQIN text code.)\r\n19."
      }
    ],
    "custom_jiras": "53"
  },
  {
    "id": 30692829,
    "title": "Verify that insurance confirmation email is received and insurance field is persisted in SE3DPINF when SEC3DE is ON",
    "section_id": 1684999,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-11500",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C151430",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Set SEC3DE to true at supplier level\r\n2.Set MPMKEY accodring to the Country code of the Supplier\r\n3.Set EGENFLD and EDOBDCO to true \r\n4.'WATIFE' should be true and all setting of Ticket Insurance should be in place\r\nExpected Result:\r\nPre-requisite should be met\r\n2. Launch UK PVM application\r\nExpected Result:\r\nEvent Schdule page is displayed\r\n3. Click on Buy Tickets button against the desired event\r\nExpected Result:\r\nAvailability page is displayed\r\n4. Select the tickets for the event and click on Continue\r\nExpected Result:\r\nShopping  cart is displayed\r\n5. Click on Continue button on Shopping cart\r\nExpected Result:\r\nCredit cart modal window is displayed\r\n6. Enter Credit card details and Click on Submit button in Credit Card modal window\r\nExpected Result:\r\nPayment page is displayed\r\n7. Ticket Insuracne Section is displayed in Payment page\r\nExpected Result:\r\nTicket Insuracne Section is displayed in Payment page\r\n8. 1.Fill in all required fields in Payment page \r\n2.Select 'Yes' for Ticket Insurance \r\n3.Click on Buy Tickets button\r\nExpected Result:\r\nACS Emulator page is displayed\r\n9. Select any of the Authentication Result from drop down and click on Submit\r\nExpected Result:\r\nConfirmation Page is displayed, if Authentication Result selecetd in ACS Emulator page is any one of the following :\r\n  a.Authentication Successful\r\n  b.Authentication Not Available\r\n  c.Authentication Attempted\r\n  d.MPI Processing Error\r\n\r\nError message is displayed on Payment page ,if Authentication Result selecetd in ACS Emulator page is any one of the following :\r\n   a.Authentication Failed\r\n   b.Error parsing Authentication Response\r\n   c.Invalid Signature on Authentication Response\r\n10. Note down the order id of the transaction (For unsucessful transactions -Use View Source Option of browser and search for 'orderkey' and note down the value.)\r\nExpected Result:\r\nOrder id of the transaction is noted\r\n11. Navigate to Order->Orders in PVO Maintenance Site\r\nExpected Result:\r\nSearch your order record page is displayed\r\n12. Click on Text button on Search your order record page\r\nExpected Result:\r\nSearch text records by Order Id page is displayed\r\n13. Enter Order id and click on Edit button\r\nExpected Result:\r\nOrder Text record Details page is displayed\r\n14. Verify that insurance field is persisted in SE3DPINF text code\r\nExpected Result:\r\nInsurance field is persisted in SE3DPINF text code\r\n15. Verify that the user receives insurance confirmation email for successful transactions\r\nExpected Result:\r\nUser receives insurance confirmation email for successful transactions",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Set SEC3DE to true at supplier level\r\n2.Set MPMKEY accodring to the Country code of the Supplier\r\n3.Set EGENFLD and EDOBDCO to true \r\n4.'WATIFE' should be true and all setting of Ticket Insurance should be in place\r\n2. Launch UK PVM application\r\n3. Click on Buy Tickets button against the desired event\r\n4. Select the tickets for the event and click on Continue\r\n5. Click on Continue button on Shopping cart\r\n6. Enter Credit card details and Click on Submit button in Credit Card modal window\r\n7. Ticket Insuracne Section is displayed in Payment page\r\n8. 1.Fill in all required fields in Payment page \r\n2.Select 'Yes' for Ticket Insurance \r\n3.Click on Buy Tickets button\r\n9. Select any of the Authentication Result from drop down and click on Submit\r\n10. Note down the order id of the transaction (For unsucessful transactions -Use View Source Option of browser and search for 'orderkey' and note down the value.)\r\n11. Navigate to Order->Orders in PVO Maintenance Site\r\n12. Click on Text button on Search your order record page\r\n13. Enter Order id and click on Edit button\r\n14. Verify that insurance field is persisted in SE3DPINF text code\r\n15. Verify that the user receives insurance confirmation email for successful transactions",
        "expected": "1. Pre-requisite should be met\r\n2. Event Schdule page is displayed\r\n3. Availability page is displayed\r\n4. Shopping  cart is displayed\r\n5. Credit cart modal window is displayed\r\n6. Payment page is displayed\r\n7. Ticket Insuracne Section is displayed in Payment page\r\n8. ACS Emulator page is displayed\r\n9. Confirmation Page is displayed, if Authentication Result selecetd in ACS Emulator page is any one of the following :\r\n  a.Authentication Successful\r\n  b.Authentication Not Available\r\n  c.Authentication Attempted\r\n  d.MPI Processing Error\r\n\r\nError message is displayed on Payment page ,if Authentication Result selecetd in ACS Emulator page is any one of the following :\r\n   a.Authentication Failed\r\n   b.Error parsing Authentication Response\r\n   c.Invalid Signature on Authentication Response\r\n10. Order id of the transaction is noted\r\n11. Search your order record page is displayed\r\n12. Search text records by Order Id page is displayed\r\n13. Order Text record Details page is displayed\r\n14. Insurance field is persisted in SE3DPINF text code\r\n15. User receives insurance confirmation email for successful transactions"
      }
    ],
    "custom_jiras": "56"
  },
  {
    "id": 30692830,
    "title": "Verify that the Mondial insurance section is not hidden in MyTickets Renewals paymentÂ  page with multiple active offers when weÂ  set the web tier property mondial.only.one.offer.allowed as false",
    "section_id": 1684999,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15626",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C151431",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre-requisite:\n1 Set property mondial.only.one.offer.allowed as false.\n2 Do more than one receivable/reservation package sale transaction with valid user Id.\r\nExpected Result:\r\nPre-requisite should match.\r\n2. Login to Mytixx with valid credentials with user Id as mention in pre-requisite 2.\r\nExpected Result:\r\nThe user should able to Login sucessfully.\r\n3. Go to To do list.\r\nExpected Result:\r\nNavigated to To do list.\r\n4. Select all receivable/reservation transaction done by user as in pre-requisite 2\r\nExpected Result:\r\nAll receivable/reservation order selected.\r\n5. Select payment plan for each order and click on continue.\r\nExpected Result:\r\nPayment plan Selected sucessfully.\r\n6. Apply delivery method for each order and moved to payment page\r\nExpected Result:\r\nDelivery method applied sucessfully.\r\n7. The Mondial insurance section is not hidden in MyTickets Renewals payment page.\r\nExpected Result:\r\nExpected result: \nThe Mondial insurance option should not hidden in MyTickets Renewals paymentÃ¿ page with multiple active \noffers when weÃ¿ set the web tier property mondial.only.one.offer.allowed as false",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-requisite:\n1 Set property mondial.only.one.offer.allowed as false.\n2 Do more than one receivable/reservation package sale transaction with valid user Id.\r\n2. Login to Mytixx with valid credentials with user Id as mention in pre-requisite 2.\r\n3. Go to To do list.\r\n4. Select all receivable/reservation transaction done by user as in pre-requisite 2\r\n5. Select payment plan for each order and click on continue.\r\n6. Apply delivery method for each order and moved to payment page\r\n7. The Mondial insurance section is not hidden in MyTickets Renewals payment page.",
        "expected": "1. Pre-requisite should match.\r\n2. The user should able to Login sucessfully.\r\n3. Navigated to To do list.\r\n4. All receivable/reservation order selected.\r\n5. Payment plan Selected sucessfully.\r\n6. Delivery method applied sucessfully.\r\n7. Expected result: \nThe Mondial insurance option should not hidden in MyTickets Renewals paymentÃ¿ page with multiple active \noffers when weÃ¿ set the web tier property mondial.only.one.offer.allowed as false"
      }
    ],
    "custom_jiras": "63.1"
  },
  {
    "id": 30692831,
    "title": "Verify that the Mondial insurance section is hidden in MyTickets Renewals payment page with multiple active offers when we didn't set the web tier property mondial.only.one.offer.allowe",
    "section_id": 1684999,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15626",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C151432",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre-requisite:\n1 Do not Set property mondial.only.one.offer.allowed.\n2 Do more than one receivable/reservation package sale transaction with valid user Id.\r\nExpected Result:\r\nPre-requisite should match.\r\n2. Login to Mytixx with valid credentials with user Id as mention in pre-requisite 2.\r\nExpected Result:\r\nThe user should able to Login sucessfully.\r\n3. Go to To do list.\r\nExpected Result:\r\nNavigated to To do list.\r\n4. Select all receivable/reservation transaction done by user as in pre-requisite 2\r\nExpected Result:\r\nAll receivable/reservation order selected.\r\n5. Select payment plan for each order and click on continue.\r\nExpected Result:\r\nPayment plan Selected sucessfully.\r\n6. Apply delivery method for each order and moved to payment page\r\nExpected Result:\r\nDelivery method applied sucessfully.\r\n7. The Mondial insurance section is hidden in MyTickets Renewals payment page.\r\nExpected Result:\r\nExpected result: \nThe Mondial insurance option should hidden in MyTickets Renewals paymentÃ¿ page with multiple active offers \nwhen we didn?t set the web tier property 'mondial.only.one.offer.allowed'",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-requisite:\n1 Do not Set property mondial.only.one.offer.allowed.\n2 Do more than one receivable/reservation package sale transaction with valid user Id.\r\n2. Login to Mytixx with valid credentials with user Id as mention in pre-requisite 2.\r\n3. Go to To do list.\r\n4. Select all receivable/reservation transaction done by user as in pre-requisite 2\r\n5. Select payment plan for each order and click on continue.\r\n6. Apply delivery method for each order and moved to payment page\r\n7. The Mondial insurance section is hidden in MyTickets Renewals payment page.",
        "expected": "1. Pre-requisite should match.\r\n2. The user should able to Login sucessfully.\r\n3. Navigated to To do list.\r\n4. All receivable/reservation order selected.\r\n5. Payment plan Selected sucessfully.\r\n6. Delivery method applied sucessfully.\r\n7. Expected result: \nThe Mondial insurance option should hidden in MyTickets Renewals paymentÃ¿ page with multiple active offers \nwhen we didn?t set the web tier property 'mondial.only.one.offer.allowed'"
      }
    ],
    "custom_jiras": "63.1"
  },
  {
    "id": 30692832,
    "title": "Verify that the Mondial insurance option is hidden in the payment page having multiple offers were one of the events is insurable, and all other events in the cart are not insurable and web tier property mondial.only.one.offer.allowed have default va",
    "section_id": 1684999,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15626",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C151433",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre-requisite:\r\n1 Set property mondial.only.one.offer.allowed as default value(true)\r\n2 Make one event insurable.\r\n3 Make another event as non-insurable.\r\nExpected Result:\r\nPre-requisite should set.\r\n2. Launch Single sale link as in pre-requiste 2\r\nExpected Result:\r\nSingle sale Link as in pre-requiste 2  launched Sucessfully.\r\n3. Select tickets and move to shopping cart page.\r\nExpected Result:\r\nUser sucessfully moved to shopping cart page.\r\n4. Click on add offer.\r\nExpected Result:\r\nUser is navigated to event schedule page.\r\n5. Select seats for the event as mention in pre-requisite 3 and move to shopping cart page.\r\nExpected Result:\r\nSeats for the event as mention in pre-requisite 3 selected sucessfully.\r\n6. Login with valid credentials/create new account.\r\nExpected Result:\r\nUser should able to login with valid credentials/able to create new account.\r\n7. Select delivery method for both orders.\r\nExpected Result:\r\nDelivery Method selected sucessfully.\r\n8. Verify that the Mondial insurance option is hidden in Pvo Payment page\r\nExpected Result:\r\nExpected result: \r\nThe Mondial insurance option should hidden in Pvo Payment page having multiple offers were one of the \r\nevents is insurable, and all other events in the cart are not insurable and web tier property \r\nmondial.only.one.offer.allowed have default value (true)",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-requisite:\r\n1 Set property mondial.only.one.offer.allowed as default value(true)\r\n2 Make one event insurable.\r\n3 Make another event as non-insurable.\r\n2. Launch Single sale link as in pre-requiste 2\r\n3. Select tickets and move to shopping cart page.\r\n4. Click on add offer.\r\n5. Select seats for the event as mention in pre-requisite 3 and move to shopping cart page.\r\n6. Login with valid credentials/create new account.\r\n7. Select delivery method for both orders.\r\n8. Verify that the Mondial insurance option is hidden in Pvo Payment page",
        "expected": "1. Pre-requisite should set.\r\n2. Single sale Link as in pre-requiste 2  launched Sucessfully.\r\n3. User sucessfully moved to shopping cart page.\r\n4. User is navigated to event schedule page.\r\n5. Seats for the event as mention in pre-requisite 3 selected sucessfully.\r\n6. User should able to login with valid credentials/able to create new account.\r\n7. Delivery Method selected sucessfully.\r\n8. Expected result: \r\nThe Mondial insurance option should hidden in Pvo Payment page having multiple offers were one of the \r\nevents is insurable, and all other events in the cart are not insurable and web tier property \r\nmondial.only.one.offer.allowed have default value (true)"
      }
    ],
    "custom_jiras": "63.1"
  },
  {
    "id": 30692833,
    "title": "Verify that the Mondial insurance section isÃ¿ hidden in Pvo Payment page with multiple active offersÃ¿ and not hidden when we remove all offers except one in shopping cart with the default value ofÃ¿ web tier property mondial.only.one.offer.allowed",
    "section_id": 1684999,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15626",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_refs": "C151434",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre-requisite:\r\nSet property mondial.only.one.offer.allowed as \r\ndefault value.\r\nExpected Result:\r\nPre-requisite should set.\r\n2. Launch Single sale link.\r\nExpected Result:\r\nSingle sale Link should launched Sucessfully.\r\n3. Select tickets and move to shopping cart page.\r\nExpected Result:\r\nUser sucessfully moved to shopping cart page.\r\n4. Select add another event\r\nExpected Result:\r\nAnother event selected successfully.\r\n5. Select seats for another event and move to shopping cart page.\r\nExpected Result:\r\nSeats selected sucessfully.\r\n6. Login with valid credentials/create new account.\r\nExpected Result:\r\nUser should able to login with valid credentials/able to create new account.\r\n7. Select delivery method for both orders.\r\nExpected Result:\r\nDelivery Method selected sucessfully.\r\n8. Verify that the Mondial insurance section is hidden in Pvo Payment page\r\nExpected Result:\r\nExpected result: \r\nThe Mondial insurance section should hidden in Pvo Payment page with multiple active offers when we didn?t \r\nset the web tier property mondial.only.one.offer.allowed\r\n9. Go to Shopping cart page again.\r\nExpected Result:\r\nThe user sucessfully moved to shopping cart page.\r\n10. Remove all offers except one.\r\nExpected Result:\r\nThe user can remove all offers except one sucessfully.\r\n11. Verify that the Mondial insurance section not hidden when we remove all offers except one in shopping cart \r\nwith the default value ofÃ¿ web tier property mondial.only.one.offer.allowed\r\nExpected Result:\r\nExpected result: \r\nThe Mondial insurance section should not \r\nhidden in Pvo Payment page when we \r\nremove all offers except one in shopping cart \r\nwith the default value ofÃ¿ web tier property \r\nmondial.only.one.offer.allowed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-requisite:\r\nSet property mondial.only.one.offer.allowed as \r\ndefault value.\r\n2. Launch Single sale link.\r\n3. Select tickets and move to shopping cart page.\r\n4. Select add another event\r\n5. Select seats for another event and move to shopping cart page.\r\n6. Login with valid credentials/create new account.\r\n7. Select delivery method for both orders.\r\n8. Verify that the Mondial insurance section is hidden in Pvo Payment page\r\n9. Go to Shopping cart page again.\r\n10. Remove all offers except one.\r\n11. Verify that the Mondial insurance section not hidden when we remove all offers except one in shopping cart \r\nwith the default value ofÃ¿ web tier property mondial.only.one.offer.allowed",
        "expected": "1. Pre-requisite should set.\r\n2. Single sale Link should launched Sucessfully.\r\n3. User sucessfully moved to shopping cart page.\r\n4. Another event selected successfully.\r\n5. Seats selected sucessfully.\r\n6. User should able to login with valid credentials/able to create new account.\r\n7. Delivery Method selected sucessfully.\r\n8. Expected result: \r\nThe Mondial insurance section should hidden in Pvo Payment page with multiple active offers when we didn?t \r\nset the web tier property mondial.only.one.offer.allowed\r\n9. The user sucessfully moved to shopping cart page.\r\n10. The user can remove all offers except one sucessfully.\r\n11. Expected result: \r\nThe Mondial insurance section should not \r\nhidden in Pvo Payment page when we \r\nremove all offers except one in shopping cart \r\nwith the default value ofÃ¿ web tier property \r\nmondial.only.one.offer.allowed"
      }
    ],
    "custom_jiras": "63.1"
  },
  {
    "id": 30692834,
    "title": "Default Tixx Insurance Calculation - Verifying when the calculated insurance amount is greater than the min amount set for Mondial_MLB",
    "section_id": 1684999,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-9028",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_refs": "C151435",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "9852",
    "custom_test_purpose": null,
    "custom_steps": "1. Call \r\n2. 1.Set an incorrect values  for any of the following in the properties site.: worldaccess.webservices.quote.host_url \r\nworldaccess.webservices.host_url \r\n username/password values\r\n2.Do not set the WAFTFFE at any level.\r\nExpected Result:\r\nPre-requisite should be successful.\r\n3. Some unpaid tickets should be available in the my tickets renewals patron account\r\n4. Launch the  MLB My Tickets link using the url\r\n\r\nExpected Result:\r\nThe site should be launched\r\n5. Select tickets such that the \r\nworldaccess.percentage_of_amount_insured *  Price level is greater than the worldaccess.minimum_insurance_amount.\r\nExpected Result:\r\nUser is navigated to the Selection page\r\n6. Select any of the Payment Plans and click on Continue button\r\nExpected Result:\r\nThe user should be navigated to the Payments page\r\n7. Enter the mandatory fields in the Payment page regarding Billing details and Credit card details.\r\nExpected Result:\r\nThe mandatory fields should be entered\r\n8. Verify that the ticket insurance is displayed.\r\nExpected Result:\r\nThe ticket insurance text should be displayed.\r\n9. Verify the Ticket insurance amount displayed. \r\nThe percentage mentioned below is the worldaccess.percentage_of_amount_insured  mentioned in the precondition\r\n1.If the percentage of the Total order amount 'A' is greater than the worldaccess.minimum_insurance_amount  set in the precondition then the amount A should be considered\r\n2.If the percentage of the Total order amount 'A' is less  than the worldaccess.percentage_of_amount_insured set in the precondition  then the amount 'A' should be ignored and the worldaccess.minimum_insurance_amount mentioned in the precondition should be considered.\r\n\r\nExample:If the default value is used \r\nworldaccess.minimum_insurance_amount  =$6\r\nworldaccess.percentage_of_amount_insured = 10\r\nand the one ticket of $140 is selected then\r\n$140*5%=$7 which is greater than $6 so the Ticket insurance amount selected will be $7.00\r\nExpected Result:\r\nThe Ticket insurance amount should be shown as\" Event Ticket Insurance:$A\" . \r\nWhere A is calculated as per the condition 1 The percentage mentioned below is the worldaccess.maximum_insurance_amount mentioned in the precondition\r\n1.If the percentage of the Total order amount 'A' is greater than the worldaccess.minimum_insurance_amount set then the amount A should be considered\r\n10. Note down the orderkey using the view source\r\nExpected Result:\r\nThe orderkey should be noted\r\n11. Verify both Yes and No radio buttons are present on the page and enabled and neither button is set.\r\nClick on the 'Yes' radio button\r\nExpected Result:\r\nThe radio button Yes should be highlighted in the ticket insurance.\r\n12. Click on buy Tickets button\r\nExpected Result:\r\nThe user should be navigated to the Confirmation page\r\n13. Login using valid user credentials as:\r\nUsername: \r\nPassword: \r\nExpected Result:\r\nUser should be logged in successfully.\r\n14. 1.Select Orders from the right navigation and then select Orders\r\n2.Select Text button\r\n3.Enter the orderid.The orderis is the orderkey noted in  step8\r\nExpected Result:\r\nThe user should be  navigated to the Search your order record.\r\n2.The user should be navigated to the Search text by Order id page\r\n3.Order_text page should be displayed\r\n15. Verify the textcode WATIA.\r\nExpected Result:\r\nThe text content should display the ticket insurance amount charged.\r\n16. Verify the order_text WATIQIN\r\nExpected Result:\r\nThe text content should display the nodes from GetQuote Call\r\n17. Verify the order_text WATIHTML\r\nExpected Result:\r\nThe order_text content should contain the InsuranceOffer HTML displayed in the GetQuote API\r\n18. Verify the order_text WATRIT\r\nExpected Result:\r\nThe text content should display the response.\r\n19. 1. Open the Putty\r\n2. Verify the Ticket Insurace details in GetQuote API\r\nExpected Result:\r\nFollowing Details should be displayed correctly in the GetQuote API:\r\n1.ProductPrice element should display the insurance amount.\r\n2.IsDecline\" element should be  false.\r\n3.WATIA text code should display the Total price.\r\n4.InsuranceOfferHTML and WATIQIN text code should be displayed \r\nFollowing Nodes should be displayed correctly.\r\n1..BusinessUnit (This element will contain the Venue Country Code.)\r\n2.Path( This will have the value \"Single_Ticket\" for single tickets and \"Season_Renewal\" for Renewal order)\r\n3.TotalNumberOfTickets (This will have the total number of Insurable tickets in the order.)\r\n4.MajorCategory (This node value is always hard-coded to MUSIC_EVENT)\r\n5.TotalCoverageAmount (This node value has the total Order amount excluding disposition fee.)\r\n6.Offer_ID(it contains the Premium Amount for each Offer)\r\n20. 1. Open the Putty\r\n2. Verify the Ticket Insurace details in Send Purchase API\r\nExpected Result:\r\nFollowing Nodes should be displayed correctly in the SendPurchase API:\r\n1.BusinessUnit (This element will contain the Venue Country Code.)\r\n2.TotalTicketCost (This element will contain the total Order amount excluding disposition fee)\r\n3.TotalPremiumPrice( The value retrieved from WATIA order text code.)\r\n4.QuoteId( The element will contain the value retrieved from WATIQIN text code)\r\n5.ProductId( The element will contain the value retrieved from WATIQIN text code).",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Call \r\n2. 1.Set an incorrect values  for any of the following in the properties site.: worldaccess.webservices.quote.host_url \r\nworldaccess.webservices.host_url \r\n username/password values\r\n2.Do not set the WAFTFFE at any level.\r\n3. Some unpaid tickets should be available in the my tickets renewals patron account\r\n4. Launch the  MLB My Tickets link using the url\r\n\r\n5. Select tickets such that the \r\nworldaccess.percentage_of_amount_insured *  Price level is greater than the worldaccess.minimum_insurance_amount.\r\n6. Select any of the Payment Plans and click on Continue button\r\n7. Enter the mandatory fields in the Payment page regarding Billing details and Credit card details.\r\n8. Verify that the ticket insurance is displayed.\r\n9. Verify the Ticket insurance amount displayed. \r\nThe percentage mentioned below is the worldaccess.percentage_of_amount_insured  mentioned in the precondition\r\n1.If the percentage of the Total order amount 'A' is greater than the worldaccess.minimum_insurance_amount  set in the precondition then the amount A should be considered\r\n2.If the percentage of the Total order amount 'A' is less  than the worldaccess.percentage_of_amount_insured set in the precondition  then the amount 'A' should be ignored and the worldaccess.minimum_insurance_amount mentioned in the precondition should be considered.\r\n\r\nExample:If the default value is used \r\nworldaccess.minimum_insurance_amount  =$6\r\nworldaccess.percentage_of_amount_insured = 10\r\nand the one ticket of $140 is selected then\r\n$140*5%=$7 which is greater than $6 so the Ticket insurance amount selected will be $7.00\r\n10. Note down the orderkey using the view source\r\n11. Verify both Yes and No radio buttons are present on the page and enabled and neither button is set.\r\nClick on the 'Yes' radio button\r\n12. Click on buy Tickets button\r\n13. Login using valid user credentials as:\r\nUsername: \r\nPassword: \r\n14. 1.Select Orders from the right navigation and then select Orders\r\n2.Select Text button\r\n3.Enter the orderid.The orderis is the orderkey noted in  step8\r\n15. Verify the textcode WATIA.\r\n16. Verify the order_text WATIQIN\r\n17. Verify the order_text WATIHTML\r\n18. Verify the order_text WATRIT\r\n19. 1. Open the Putty\r\n2. Verify the Ticket Insurace details in GetQuote API\r\n20. 1. Open the Putty\r\n2. Verify the Ticket Insurace details in Send Purchase API",
        "expected": "1. \r\n2. Pre-requisite should be successful.\r\n3. \r\n4. The site should be launched\r\n5. User is navigated to the Selection page\r\n6. The user should be navigated to the Payments page\r\n7. The mandatory fields should be entered\r\n8. The ticket insurance text should be displayed.\r\n9. The Ticket insurance amount should be shown as\" Event Ticket Insurance:$A\" . \r\nWhere A is calculated as per the condition 1 The percentage mentioned below is the worldaccess.maximum_insurance_amount mentioned in the precondition\r\n1.If the percentage of the Total order amount 'A' is greater than the worldaccess.minimum_insurance_amount set then the amount A should be considered\r\n10. The orderkey should be noted\r\n11. The radio button Yes should be highlighted in the ticket insurance.\r\n12. The user should be navigated to the Confirmation page\r\n13. User should be logged in successfully.\r\n14. The user should be  navigated to the Search your order record.\r\n2.The user should be navigated to the Search text by Order id page\r\n3.Order_text page should be displayed\r\n15. The text content should display the ticket insurance amount charged.\r\n16. The text content should display the nodes from GetQuote Call\r\n17. The order_text content should contain the InsuranceOffer HTML displayed in the GetQuote API\r\n18. The text content should display the response.\r\n19. Following Details should be displayed correctly in the GetQuote API:\r\n1.ProductPrice element should display the insurance amount.\r\n2.IsDecline\" element should be  false.\r\n3.WATIA text code should display the Total price.\r\n4.InsuranceOfferHTML and WATIQIN text code should be displayed \r\nFollowing Nodes should be displayed correctly.\r\n1..BusinessUnit (This element will contain the Venue Country Code.)\r\n2.Path( This will have the value \"Single_Ticket\" for single tickets and \"Season_Renewal\" for Renewal order)\r\n3.TotalNumberOfTickets (This will have the total number of Insurable tickets in the order.)\r\n4.MajorCategory (This node value is always hard-coded to MUSIC_EVENT)\r\n5.TotalCoverageAmount (This node value has the total Order amount excluding disposition fee.)\r\n6.Offer_ID(it contains the Premium Amount for each Offer)\r\n20. Following Nodes should be displayed correctly in the SendPurchase API:\r\n1.BusinessUnit (This element will contain the Venue Country Code.)\r\n2.TotalTicketCost (This element will contain the total Order amount excluding disposition fee)\r\n3.TotalPremiumPrice( The value retrieved from WATIA order text code.)\r\n4.QuoteId( The element will contain the value retrieved from WATIQIN text code)\r\n5.ProductId( The element will contain the value retrieved from WATIQIN text code)."
      }
    ],
    "custom_jiras": "53"
  },
  {
    "id": 30692835,
    "title": "Verify the ticket insurance for a parking event when the insurance flag is set to True",
    "section_id": 1684999,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-9028",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 9,
    "custom_is_automated": false,
    "custom_refs": "C151436",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "9852",
    "custom_test_purpose": null,
    "custom_steps": "1. Call \r\n2. Set the property pvo.primary_sales.event_type_insurance_flag to a value  PACKAGE=true|PRIMARY=true|PARKING=True|CONCESSIONS=false|MERCHANDISE=false|SECONDARY=false|TRAVEL=false|VALUE=false|VOUCHER=false|OTHER=false\"\r\n3. Create a parking  event from PV.\r\nPerf accept the parking event.\r\nExpected Result:\r\nPre-requisite should be successful.\r\n4. Login using valid user credentials as:\r\nUsername: \r\nPassword: \r\nExpected Result:\r\nUser should be logged in successfully.\r\n5. 1. Click on the + icon corresponding to supplier Related.\r\n2. Click on Performance Link\r\nExpected Result:\r\nThe Performance List Page should be displayed\r\n6. 1. Enter the Performance Code from the pre-requisite in the text box for the Performance code.\r\n2. Click on Edit.\r\nExpected Result:\r\nUser should be navigated to the Edit details page for Performance specified.\r\n7. Click on Edit against the Performance text\r\nExpected Result:\r\nPerformance  text record page should be displayed\r\n8. Verify the Text  code ITEU\r\nExpected Result:\r\nThe text code ITEU shoulde be set to True on perf accept\r\n9. Purge the performance  cache\r\nExpected Result:\r\nCache should be purged\r\n10. Launch the PVO database and query the Perf_text table to verify the ITEU textcode.\r\nExpected Result:\r\nThe Perf_text desc for the ITEU text code should be displayed as True.\r\n11. Launch the MLB link using the url\r\nExpected Result:\r\nThe site should be launched\r\n12. Select Best available radio button and Select Number of Tickets . Click on the continue button.\r\nExpected Result:\r\nThe user should be able to select the number of tickets and on Clicking the continue button  user is navigated to the Recaptcha verification page\r\n13. 1.Enter the words and click on the continue button\r\n2.In the details page click on the continue button\r\nExpected Result:\r\n1.The user is shown details of his  ticket selection\r\n2.The user should be navigated tom the Shopping cart page.\r\n14. Verify the details in the shopping cart page and click on the continue button\r\nExpected Result:\r\nThe tickets details should be correct and on clicking the continue button the user should be navigated to the Payments page.\r\n15. Verify in the Payment page whether the Ticket insurance  saying thet\"Protect your Ticket Purchase.\r\nExpected Result:\r\nThe Ticket insurance section should Not  be displayed in the payment page for the performance\r\n16. Enter the mandatory fields in the Payment page regarding Billing details and Credit card details.\r\nExpected Result:\r\nThe mandatory fields should be entered\r\n17. Click on the Buy tickets button.\r\nExpected Result:\r\nThe user should be navigated to the confirmation page",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Call \r\n2. Set the property pvo.primary_sales.event_type_insurance_flag to a value  PACKAGE=true|PRIMARY=true|PARKING=True|CONCESSIONS=false|MERCHANDISE=false|SECONDARY=false|TRAVEL=false|VALUE=false|VOUCHER=false|OTHER=false\"\r\n3. Create a parking  event from PV.\r\nPerf accept the parking event.\r\n4. Login using valid user credentials as:\r\nUsername: \r\nPassword: \r\n5. 1. Click on the + icon corresponding to supplier Related.\r\n2. Click on Performance Link\r\n6. 1. Enter the Performance Code from the pre-requisite in the text box for the Performance code.\r\n2. Click on Edit.\r\n7. Click on Edit against the Performance text\r\n8. Verify the Text  code ITEU\r\n9. Purge the performance  cache\r\n10. Launch the PVO database and query the Perf_text table to verify the ITEU textcode.\r\n11. Launch the MLB link using the url\r\n12. Select Best available radio button and Select Number of Tickets . Click on the continue button.\r\n13. 1.Enter the words and click on the continue button\r\n2.In the details page click on the continue button\r\n14. Verify the details in the shopping cart page and click on the continue button\r\n15. Verify in the Payment page whether the Ticket insurance  saying thet\"Protect your Ticket Purchase.\r\n16. Enter the mandatory fields in the Payment page regarding Billing details and Credit card details.\r\n17. Click on the Buy tickets button.",
        "expected": "1. \r\n2. \r\n3. Pre-requisite should be successful.\r\n4. User should be logged in successfully.\r\n5. The Performance List Page should be displayed\r\n6. User should be navigated to the Edit details page for Performance specified.\r\n7. Performance  text record page should be displayed\r\n8. The text code ITEU shoulde be set to True on perf accept\r\n9. Cache should be purged\r\n10. The Perf_text desc for the ITEU text code should be displayed as True.\r\n11. The site should be launched\r\n12. The user should be able to select the number of tickets and on Clicking the continue button  user is navigated to the Recaptcha verification page\r\n13. 1.The user is shown details of his  ticket selection\r\n2.The user should be navigated tom the Shopping cart page.\r\n14. The tickets details should be correct and on clicking the continue button the user should be navigated to the Payments page.\r\n15. The Ticket insurance section should Not  be displayed in the payment page for the performance\r\n16. The mandatory fields should be entered\r\n17. The user should be navigated to the confirmation page"
      }
    ],
    "custom_jiras": "53"
  },
  {
    "id": 30692836,
    "title": "Verify the ticket insurance amount in the payment page when the amount has decimal values_MLB",
    "section_id": 1684999,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-9028",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 10,
    "custom_is_automated": false,
    "custom_refs": "C151437",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "9852",
    "custom_test_purpose": null,
    "custom_steps": "1. Call \r\n2. Some unpaid tickets should be available in the my tickets renewals patron account\r\n3. Launch the MLB My Tickets link using the url\r\n\r\nExpected Result:\r\nThe site should be launched\r\n4. Select tickets available in the To Do List such that the insurance amount calculated should have decimal values\r\nExpected Result:\r\nUser is navigated to the Selection page\r\n5. Select any of the Payment Plans and click on Continue button\r\nExpected Result:\r\nThe user should be navigated to the Payments page\r\n6. Enter the mandatory fields in the Payment page regarding Billing details and Credit card details.\r\nExpected Result:\r\nThe mandatory fields should be entered\r\n7. Verify that the ticket insurance is displayed.\r\nExpected Result:\r\nThe ticket insurance text should be displayed.\r\n8. Verify that the ticket insurance amount is displayed. Verify if the text is displayed as 'Get Event Ticket Insurance for an additional $X. Where X is the amount of insurance per ticket times the number of tickets\r\nExpected Result:\r\nThe insurance amout should be displayed with correct decimal values.\r\nThe ticket insurance text should be displayed. The text should not display the words per ticket.\r\n9. Verify the amount displayed. The amount should be number of tickets*ticket amount+convienience fee\r\nExpected Result:\r\nThe amount should be independent of the insurance amount.The total amount should be correct\r\n10. Note down the orderkey using the view source\r\nExpected Result:\r\nThe orderkey should be noted\r\n11. Verify both Yes and No radio buttons are present on the page and enabled and neither button is set.\r\nClick on the 'Yes' radio button.\r\nExpected Result:\r\nThe radio button Yes should be highlighted in the ticket insurance.\r\n12. Click on Buy Tickets button.\r\nExpected Result:\r\nThe user should be navigated to the Confirmation page\r\n13. Launch the admin site using the url<  > and Sign in as  and \r\nExpected Result:\r\nThe user is signed in.\r\n14. 1.Select Orders from the right navigation and then select Orders\r\n2.Select Text button\r\n3.Enter the orderid.The orderis is the orderkey noted in  step8\r\nExpected Result:\r\nThe user should be  navigated to the Search your order record.\r\n2.The user should be navigated to the Search text by Order id page\r\n3.Order_text page should be displayed\r\n15. Verify the textcode WATIA.\r\nExpected Result:\r\nThe text content should display the exact ticket insurance amount charged in decimal values.\r\nThe insurance amount should match with the insurance amount displayed in the TotalPrice node of GetQuote API.\r\n16. Verify the order_text WATIQIN\r\nExpected Result:\r\nThe text content should display the nodes from GetQuote Call\r\n17. Verify the order_text WATIHTML\r\nExpected Result:\r\nThe order_text content should contain the InsuranceOffer HTML displayed in the GetQuote API\r\n18. Verify the order_text WATRIT\r\nExpected Result:\r\nThe text content should display the response.\r\n19. Launch the PVO database and query the order_text table to verify the WATIA textcode gets updated\r\nExpected Result:\r\nThe textcode should get updated\r\n20. 1. Open the Putty\r\n2. Verify the Ticket Insurace details in GetQuote API\r\nExpected Result:\r\nFollowing Details should be displayed correctly in the GetQuote API:\r\n1.TotalPrice element should display the correct insurance amount in decimal values.\r\n2.IsDecline\" element should be  false.\r\n3.WATIA text code should display the Total price.\r\n4.InsuranceOfferHTML and WATIQIN text code should be displayed \r\nFollowing Nodes should be displayed correctly.\r\n1..BusinessUnit (This element will contain the Venue Country Code.)\r\n2.Path( This will have the value \"Single_Ticket\" for single tickets and \"Season_Renewal\" for Renewal order)\r\n3.TotalNumberOfTickets (This will have the total number of Insurable tickets in the order.)\r\n4.MajorCategory (This node value is always hard-coded to MUSIC_EVENT)\r\n5.TotalCoverageAmount (This node value has the total Order amount excluding disposition fee.)\r\n6.Offer_ID(it contains the Premium Amount for each Offer)\r\n21. 1. Open the Putty\r\n2. Verify the Ticket Insurace details in Send Purchase API\r\nExpected Result:\r\nFollowing Nodes should be displayed correctly in the SendPurchase API:\r\n1.BusinessUnit (This element will contain the Venue Country Code.)\r\n2.TotalTicketCost (This element will contain the total Order amount excluding disposition fee)\r\n3.TotalPremiumPrice( The value retrieved from WATIA order text code.)\r\n4.QuoteId( The element will contain the value retrieved from WATIQIN text code)\r\n5.ProductId( The element will contain the value retrieved from WATIQIN text code).",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Call \r\n2. Some unpaid tickets should be available in the my tickets renewals patron account\r\n3. Launch the MLB My Tickets link using the url\r\n\r\n4. Select tickets available in the To Do List such that the insurance amount calculated should have decimal values\r\n5. Select any of the Payment Plans and click on Continue button\r\n6. Enter the mandatory fields in the Payment page regarding Billing details and Credit card details.\r\n7. Verify that the ticket insurance is displayed.\r\n8. Verify that the ticket insurance amount is displayed. Verify if the text is displayed as 'Get Event Ticket Insurance for an additional $X. Where X is the amount of insurance per ticket times the number of tickets\r\n9. Verify the amount displayed. The amount should be number of tickets*ticket amount+convienience fee\r\n10. Note down the orderkey using the view source\r\n11. Verify both Yes and No radio buttons are present on the page and enabled and neither button is set.\r\nClick on the 'Yes' radio button.\r\n12. Click on Buy Tickets button.\r\n13. Launch the admin site using the url<  > and Sign in as  and \r\n14. 1.Select Orders from the right navigation and then select Orders\r\n2.Select Text button\r\n3.Enter the orderid.The orderis is the orderkey noted in  step8\r\n15. Verify the textcode WATIA.\r\n16. Verify the order_text WATIQIN\r\n17. Verify the order_text WATIHTML\r\n18. Verify the order_text WATRIT\r\n19. Launch the PVO database and query the order_text table to verify the WATIA textcode gets updated\r\n20. 1. Open the Putty\r\n2. Verify the Ticket Insurace details in GetQuote API\r\n21. 1. Open the Putty\r\n2. Verify the Ticket Insurace details in Send Purchase API",
        "expected": "1. \r\n2. \r\n3. The site should be launched\r\n4. User is navigated to the Selection page\r\n5. The user should be navigated to the Payments page\r\n6. The mandatory fields should be entered\r\n7. The ticket insurance text should be displayed.\r\n8. The insurance amout should be displayed with correct decimal values.\r\nThe ticket insurance text should be displayed. The text should not display the words per ticket.\r\n9. The amount should be independent of the insurance amount.The total amount should be correct\r\n10. The orderkey should be noted\r\n11. The radio button Yes should be highlighted in the ticket insurance.\r\n12. The user should be navigated to the Confirmation page\r\n13. The user is signed in.\r\n14. The user should be  navigated to the Search your order record.\r\n2.The user should be navigated to the Search text by Order id page\r\n3.Order_text page should be displayed\r\n15. The text content should display the exact ticket insurance amount charged in decimal values.\r\nThe insurance amount should match with the insurance amount displayed in the TotalPrice node of GetQuote API.\r\n16. The text content should display the nodes from GetQuote Call\r\n17. The order_text content should contain the InsuranceOffer HTML displayed in the GetQuote API\r\n18. The text content should display the response.\r\n19. The textcode should get updated\r\n20. Following Details should be displayed correctly in the GetQuote API:\r\n1.TotalPrice element should display the correct insurance amount in decimal values.\r\n2.IsDecline\" element should be  false.\r\n3.WATIA text code should display the Total price.\r\n4.InsuranceOfferHTML and WATIQIN text code should be displayed \r\nFollowing Nodes should be displayed correctly.\r\n1..BusinessUnit (This element will contain the Venue Country Code.)\r\n2.Path( This will have the value \"Single_Ticket\" for single tickets and \"Season_Renewal\" for Renewal order)\r\n3.TotalNumberOfTickets (This will have the total number of Insurable tickets in the order.)\r\n4.MajorCategory (This node value is always hard-coded to MUSIC_EVENT)\r\n5.TotalCoverageAmount (This node value has the total Order amount excluding disposition fee.)\r\n6.Offer_ID(it contains the Premium Amount for each Offer)\r\n21. Following Nodes should be displayed correctly in the SendPurchase API:\r\n1.BusinessUnit (This element will contain the Venue Country Code.)\r\n2.TotalTicketCost (This element will contain the total Order amount excluding disposition fee)\r\n3.TotalPremiumPrice( The value retrieved from WATIA order text code.)\r\n4.QuoteId( The element will contain the value retrieved from WATIQIN text code)\r\n5.ProductId( The element will contain the value retrieved from WATIQIN text code)."
      }
    ],
    "custom_jiras": "53"
  },
  {
    "id": 30692837,
    "title": "Default Tixx Insurance Calculation  - Verifying when the calculated insurance amount is less than the min amount set for Mondial.",
    "section_id": 1684999,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-9028",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 11,
    "custom_is_automated": false,
    "custom_refs": "C151438",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "9852",
    "custom_test_purpose": null,
    "custom_steps": "1. Call \r\n2. Set an incorrect values  for any of the following in the properties site.: worldaccess.webservices.quote.host_url \r\nworldaccess.webservices.host_url \r\n username/password values\r\nExpected Result:\r\nPre-requisite should be successful.\r\n3. Launch the MLB link using the url<  >\r\nExpected Result:\r\nThe site should be launched\r\n4. Click on the month and then click on the Buy tickets link for the event selected\r\nExpected Result:\r\nThe event should be selected and the user is navigated to the Selection page\r\n5. Select Price level such that the \r\nworldaccess.percentage_of_amount_insured *  Price level is less than the worldaccess.minimum_insurance_amount      and Select Number of Tickets . Click on the continue button.\r\nExpected Result:\r\nThe user should be able to select the number of tickets and on Clicking the continue button  user is navigated to the Recaptcha verification page\r\n6. 1.Enter the words and click on the continue button\r\n2.In the details page click on the continue button\r\nExpected Result:\r\n1.The user is shown details of his  ticket selection\r\n2.The user should be navigated tom the Shopping cart page.\r\n7. Verify the details in the shopping cart page and click on the continue button\r\nExpected Result:\r\nThe tickets details should be correct and on clicking the continue button the user should be navigated to the Payments page.\r\n8. Verify the Ticket insurance amount displayed. \r\nThe percentage mentioned below is the worldaccess.percentage_of_amount_insured  mentioned in the precondition\r\n1.If the percentage of the Total order amount 'A' is less than the worldaccess.minimum_insurance_amount  set in the precondition then the amount A should be considered\r\n2.If the percentage of the Total order amount 'A' is greater  than the worldaccess.percentage_of_amount_insured set in the precondition  then the amount 'A' should be ignored and the worldaccess.percentage_of_amount_insured  mentioned in the precondition should be considered.\r\n\r\nExample:If the default value is used \r\nworldaccess.minimum_insurance_amount  =$6\r\nworldaccess.percentage_of_amount_insured = 10\r\nand the one ticket of $40 is selected then\r\n$40*10%=$4 which is less than $6 so the Ticket insurance amount selected will be $6.00\r\nExpected Result:\r\nThe Ticket insurance amount should be shown as\" Event Ticket Insurance:$A\" . \r\nWhere A is calculated as per the condition 1 The percentage mentioned below is the worldaccess.maximum_insurance_amount mentioned in the precondition\r\n1.If the percentage of the Total order amount 'A' is greater than the worldaccess.minimum_insurance_amount set then the amount A should be considered\r\n9. Verify the amount displayed. The amount should be number of tickets*ticket amount+convienience fee\r\nExpected Result:\r\nThe amount should be independent of the insurance amount.The total amount should be correct\r\n10. Enter the mandatory fields in the Payment page regarding Billing details and Credit card details.\r\nExpected Result:\r\nThe mandatory fields should be entered\r\n11. Note down the orderkey using the view source\r\nExpected Result:\r\nThe orderkey should be noted\r\n12. Verify both Yes and No radio buttons are present on the page and enabled and neither button is set.\r\nClick on the 'Yes' radio button\r\nExpected Result:\r\nThe radio button Yes should be highlighted in the ticket insurance.\r\n13. Click on buy Tickets button\r\nExpected Result:\r\nThe user should be navigated to the Confirmation page\r\n14. 1.Verify that the Ticket insurance details or amount is not displayed in the Confirmation page\r\n2.Verify that the order email does not contain any reference to the Ticket insurance details or amount\r\nExpected Result:\r\nThe Confirmation page and the order email should not contain any reference to the Ticket insurance details or amount\r\n15. Login using valid user credentials as:\r\nUsername: \r\nPassword: \r\nExpected Result:\r\nUser should be logged in successfully.\r\n16. 1.Select Orders from the right navigation and then select Orders\r\n2.Select Text button\r\n3.Enter the orderid.The orderis is the orderkey noted in  step8\r\nExpected Result:\r\nThe user should be  navigated to the Search your order record.\r\n2.The user should be navigated to the Search text by Order id page\r\n3.Order_text page should be displayed\r\n17. Verify the textcode WATIA.\r\nExpected Result:\r\nThe text content should display the ticket insurance amount charged.\r\n18. Verify the order_text WATIQIN\r\nExpected Result:\r\nThe text content should display the nodes from GetQuote Call\r\n19. Verify the order_text WATIHTML\r\nExpected Result:\r\nThe order_text content should contain the InsuranceOffer HTML displayed in the GetQuote API\r\n20. Verify the order_text WATRIT\r\nExpected Result:\r\nThe text content should display the response.\r\n21. 1. Open the Putty\r\n2. Verify the Ticket Insurace details in GetQuote API\r\nExpected Result:\r\nFollowing Nodes should be displayed correctly the GetQuote API:\r\n1..BusinessUnit (This element will contain the Venue Country Code.)\r\n2.Path( This will have the value \"Single_Ticket\" for single tickets and \"Season_Renewal\" for Renewal order)\r\n3.TotalNumberOfTickets (This will have the total number of Insurable tickets in the order.)\r\n4.MajorCategory (This node value is always hard-coded to MUSIC_EVENT)\r\n5.TotalCoverageAmount (This node value has the total Order amount excluding disposition fee.)\r\n6.Offer_ID(it contains the Premium Amount for each Offer)\r\n\r\nGetQuote Response should have a failure message\r\n22. 1. Open the Putty\r\n2. Verify the Ticket Insurace details in Send Purchase API\r\nExpected Result:\r\nFollowing Nodes should be displayed correctly in the SendPurchase API:\r\n1.BusinessUnit (This element will contain the Venue Country Code.)\r\n2.TotalTicketCost (This element will contain the total Order amount excluding disposition fee)\r\n3.TotalPremiumPrice( The value retrieved from WATIA order text code.)\r\n4.QuoteId( The element will contain the value retrieved from WATIQIN text code)\r\n5.ProductId( The element will contain the value retrieved from WATIQIN text code).\r\n23. 1.Verify the response in card_response table\r\nselect * from pvo.card_response where ref=\r\n2.Select * from pvo.card_response_detail where ref=\r\n3.Select * from pvo.payment where order_id=\r\nExpected Result:\r\n1.The authorized amount captured should be displayed for card response and card_response_detail table\r\n2.The payment shown in the payment table should be correct.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Call \r\n2. Set an incorrect values  for any of the following in the properties site.: worldaccess.webservices.quote.host_url \r\nworldaccess.webservices.host_url \r\n username/password values\r\n3. Launch the MLB link using the url<  >\r\n4. Click on the month and then click on the Buy tickets link for the event selected\r\n5. Select Price level such that the \r\nworldaccess.percentage_of_amount_insured *  Price level is less than the worldaccess.minimum_insurance_amount      and Select Number of Tickets . Click on the continue button.\r\n6. 1.Enter the words and click on the continue button\r\n2.In the details page click on the continue button\r\n7. Verify the details in the shopping cart page and click on the continue button\r\n8. Verify the Ticket insurance amount displayed. \r\nThe percentage mentioned below is the worldaccess.percentage_of_amount_insured  mentioned in the precondition\r\n1.If the percentage of the Total order amount 'A' is less than the worldaccess.minimum_insurance_amount  set in the precondition then the amount A should be considered\r\n2.If the percentage of the Total order amount 'A' is greater  than the worldaccess.percentage_of_amount_insured set in the precondition  then the amount 'A' should be ignored and the worldaccess.percentage_of_amount_insured  mentioned in the precondition should be considered.\r\n\r\nExample:If the default value is used \r\nworldaccess.minimum_insurance_amount  =$6\r\nworldaccess.percentage_of_amount_insured = 10\r\nand the one ticket of $40 is selected then\r\n$40*10%=$4 which is less than $6 so the Ticket insurance amount selected will be $6.00\r\n9. Verify the amount displayed. The amount should be number of tickets*ticket amount+convienience fee\r\n10. Enter the mandatory fields in the Payment page regarding Billing details and Credit card details.\r\n11. Note down the orderkey using the view source\r\n12. Verify both Yes and No radio buttons are present on the page and enabled and neither button is set.\r\nClick on the 'Yes' radio button\r\n13. Click on buy Tickets button\r\n14. 1.Verify that the Ticket insurance details or amount is not displayed in the Confirmation page\r\n2.Verify that the order email does not contain any reference to the Ticket insurance details or amount\r\n15. Login using valid user credentials as:\r\nUsername: \r\nPassword: \r\n16. 1.Select Orders from the right navigation and then select Orders\r\n2.Select Text button\r\n3.Enter the orderid.The orderis is the orderkey noted in  step8\r\n17. Verify the textcode WATIA.\r\n18. Verify the order_text WATIQIN\r\n19. Verify the order_text WATIHTML\r\n20. Verify the order_text WATRIT\r\n21. 1. Open the Putty\r\n2. Verify the Ticket Insurace details in GetQuote API\r\n22. 1. Open the Putty\r\n2. Verify the Ticket Insurace details in Send Purchase API\r\n23. 1.Verify the response in card_response table\r\nselect * from pvo.card_response where ref=\r\n2.Select * from pvo.card_response_detail where ref=\r\n3.Select * from pvo.payment where order_id=",
        "expected": "1. \r\n2. Pre-requisite should be successful.\r\n3. The site should be launched\r\n4. The event should be selected and the user is navigated to the Selection page\r\n5. The user should be able to select the number of tickets and on Clicking the continue button  user is navigated to the Recaptcha verification page\r\n6. 1.The user is shown details of his  ticket selection\r\n2.The user should be navigated tom the Shopping cart page.\r\n7. The tickets details should be correct and on clicking the continue button the user should be navigated to the Payments page.\r\n8. The Ticket insurance amount should be shown as\" Event Ticket Insurance:$A\" . \r\nWhere A is calculated as per the condition 1 The percentage mentioned below is the worldaccess.maximum_insurance_amount mentioned in the precondition\r\n1.If the percentage of the Total order amount 'A' is greater than the worldaccess.minimum_insurance_amount set then the amount A should be considered\r\n9. The amount should be independent of the insurance amount.The total amount should be correct\r\n10. The mandatory fields should be entered\r\n11. The orderkey should be noted\r\n12. The radio button Yes should be highlighted in the ticket insurance.\r\n13. The user should be navigated to the Confirmation page\r\n14. The Confirmation page and the order email should not contain any reference to the Ticket insurance details or amount\r\n15. User should be logged in successfully.\r\n16. The user should be  navigated to the Search your order record.\r\n2.The user should be navigated to the Search text by Order id page\r\n3.Order_text page should be displayed\r\n17. The text content should display the ticket insurance amount charged.\r\n18. The text content should display the nodes from GetQuote Call\r\n19. The order_text content should contain the InsuranceOffer HTML displayed in the GetQuote API\r\n20. The text content should display the response.\r\n21. Following Nodes should be displayed correctly the GetQuote API:\r\n1..BusinessUnit (This element will contain the Venue Country Code.)\r\n2.Path( This will have the value \"Single_Ticket\" for single tickets and \"Season_Renewal\" for Renewal order)\r\n3.TotalNumberOfTickets (This will have the total number of Insurable tickets in the order.)\r\n4.MajorCategory (This node value is always hard-coded to MUSIC_EVENT)\r\n5.TotalCoverageAmount (This node value has the total Order amount excluding disposition fee.)\r\n6.Offer_ID(it contains the Premium Amount for each Offer)\r\n\r\nGetQuote Response should have a failure message\r\n22. Following Nodes should be displayed correctly in the SendPurchase API:\r\n1.BusinessUnit (This element will contain the Venue Country Code.)\r\n2.TotalTicketCost (This element will contain the total Order amount excluding disposition fee)\r\n3.TotalPremiumPrice( The value retrieved from WATIA order text code.)\r\n4.QuoteId( The element will contain the value retrieved from WATIQIN text code)\r\n5.ProductId( The element will contain the value retrieved from WATIQIN text code).\r\n23. 1.The authorized amount captured should be displayed for card response and card_response_detail table\r\n2.The payment shown in the payment table should be correct."
      }
    ],
    "custom_jiras": "53"
  },
  {
    "id": 30692838,
    "title": "Verify the insurance feature if an event is more than 770 days from the day of buying",
    "section_id": 1684999,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-9028",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 12,
    "custom_is_automated": false,
    "custom_refs": "C151439",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "9852",
    "custom_test_purpose": null,
    "custom_steps": "1. Call \r\n2. Create an event which occurs  in more than 770 days from the day of buying\r\nExpected Result:\r\nPre-requisite should be successful.\r\n3. Launch the MLB link using the url\r\nExpected Result:\r\nThe site should be launched\r\n4. Select Best available radio button and Select Number of Tickets . Click on the continue button.\r\nExpected Result:\r\nThe user should be able to select the number of tickets and on Clicking the continue button  user is navigated to the Recaptcha verification page\r\n5. 1.Enter the words and click on the continue button\r\n2.In the details page click on the continue button\r\nExpected Result:\r\n1.The user is shown details of his  ticket selection\r\n2.The user should be navigated tom the Shopping cart page.\r\n6. Verify the details in the shopping cart page and click on the continue button\r\nExpected Result:\r\nThe tickets details should be correct and on clicking the continue button the user should be navigated to the Payments page.\r\n7. Verify in the Payment page whether the Ticket insurance  saying thet\"Protect your Ticket Purchase.\r\nExpected Result:\r\nThe Ticket insurance section should NOT be displayed in the payment page for the performance\r\n8. Enter the mandatory fields in the Payment page regarding Billing details and Credit card details.\r\nExpected Result:\r\nThe mandatory fields should be entered\r\n9. Click on the Buy tickets button.\r\nExpected Result:\r\nThe user should be navigated to the confirmation page",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Call \r\n2. Create an event which occurs  in more than 770 days from the day of buying\r\n3. Launch the MLB link using the url\r\n4. Select Best available radio button and Select Number of Tickets . Click on the continue button.\r\n5. 1.Enter the words and click on the continue button\r\n2.In the details page click on the continue button\r\n6. Verify the details in the shopping cart page and click on the continue button\r\n7. Verify in the Payment page whether the Ticket insurance  saying thet\"Protect your Ticket Purchase.\r\n8. Enter the mandatory fields in the Payment page regarding Billing details and Credit card details.\r\n9. Click on the Buy tickets button.",
        "expected": "1. \r\n2. Pre-requisite should be successful.\r\n3. The site should be launched\r\n4. The user should be able to select the number of tickets and on Clicking the continue button  user is navigated to the Recaptcha verification page\r\n5. 1.The user is shown details of his  ticket selection\r\n2.The user should be navigated tom the Shopping cart page.\r\n6. The tickets details should be correct and on clicking the continue button the user should be navigated to the Payments page.\r\n7. The Ticket insurance section should NOT be displayed in the payment page for the performance\r\n8. The mandatory fields should be entered\r\n9. The user should be navigated to the confirmation page"
      }
    ],
    "custom_jiras": "53"
  },
  {
    "id": 30692839,
    "title": "Set the text code ITEU to False for Primary event and verify the ticket insurance",
    "section_id": 1684999,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-9028",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 13,
    "custom_is_automated": false,
    "custom_refs": "C151440",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "9852",
    "custom_test_purpose": null,
    "custom_steps": "1. Call \r\n2. Set the text code ITEU to False for the performance\r\nExpected Result:\r\nITEU should be set to False for the performance\r\n3. Launch the MLB link using the url\r\nExpected Result:\r\nThe site should be launched\r\n4. Select Best available radio button and Select Number of Tickets . Click on the continue button.\r\nExpected Result:\r\nThe user should be able to select the number of tickets and on Clicking the continue button  user is navigated to the Recaptcha verification page\r\n5. 1.Enter the words and click on the continue button\r\n2.In the details page click on the continue button\r\nExpected Result:\r\n1.The user is shown details of his  ticket selection\r\n2.The user should be navigated tom the Shopping cart page.\r\n6. Verify the details in the shopping cart page and click on the continue button\r\nExpected Result:\r\nThe tickets details should be correct and on clicking the continue button the user should be navigated to the Payments page.\r\n7. Verify that the ticket insurance amount is displayed. Verify if the text is displayed as 'Get Event Ticket Insurance for an additional $X. Where X is the amount of insurance per ticket times the number of tickets\r\nExpected Result:\r\nThe ticket insurance text should be displayed. The text should not display the words per ticket.\r\n8. Verify the amount displayed. The amount should be number of tickets*ticket amount+convienience fee\r\nExpected Result:\r\nThe amount should be independent of the insurance amount.The total amount should be correct\r\n9. Enter the mandatory fields in the Payment page regarding Billing details and Credit card details.\r\nExpected Result:\r\nThe mandatory fields should be entered\r\n10. Note down the orderkey using the view source\r\nExpected Result:\r\nThe orderkey should be noted\r\n11. Verify both Yes and No radio buttons are present on the page and enabled and neither button is set.\r\nClick on the 'Yes' radio button.\r\nExpected Result:\r\nThe radio button Yes should be highlighted in the ticket insurance.\r\n12. Click on Buy Tickets button.\r\nExpected Result:\r\nThe user should be navigated to the Confirmation page\r\n13. Launch the admin site using the url<  > and Sign in as  and \r\nExpected Result:\r\nThe user is signed in.\r\n14. 1.Select Orders from the right navigation and then select Orders\r\n2.Select Text button\r\n3.Enter the orderid.The orderis is the orderkey noted in  step8\r\nExpected Result:\r\nThe user should be  navigated to the Search your order record.\r\n2.The user should be navigated to the Search text by Order id page\r\n3.Order_text page should be displayed\r\n15. Verify the textcode WATIA.\r\nExpected Result:\r\nThe text content should display the ticket insurance amount charged.\r\n16. Verify the order_text WATIQIN\r\nExpected Result:\r\nThe text content should display the nodes from GetQuote Call\r\n17. Verify the order_text WATIHTML\r\nExpected Result:\r\nThe order_text content should contain the InsuranceOffer HTML displayed in the GetQuote API\r\n18. Verify the order_text WATRIT\r\nExpected Result:\r\nThe text content should display the response.\r\n19. Launch the PVO database and query the order_text table to verify the WATIA textcode gets updated\r\nExpected Result:\r\nThe textcode should get updated",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Call \r\n2. Set the text code ITEU to False for the performance\r\n3. Launch the MLB link using the url\r\n4. Select Best available radio button and Select Number of Tickets . Click on the continue button.\r\n5. 1.Enter the words and click on the continue button\r\n2.In the details page click on the continue button\r\n6. Verify the details in the shopping cart page and click on the continue button\r\n7. Verify that the ticket insurance amount is displayed. Verify if the text is displayed as 'Get Event Ticket Insurance for an additional $X. Where X is the amount of insurance per ticket times the number of tickets\r\n8. Verify the amount displayed. The amount should be number of tickets*ticket amount+convienience fee\r\n9. Enter the mandatory fields in the Payment page regarding Billing details and Credit card details.\r\n10. Note down the orderkey using the view source\r\n11. Verify both Yes and No radio buttons are present on the page and enabled and neither button is set.\r\nClick on the 'Yes' radio button.\r\n12. Click on Buy Tickets button.\r\n13. Launch the admin site using the url<  > and Sign in as  and \r\n14. 1.Select Orders from the right navigation and then select Orders\r\n2.Select Text button\r\n3.Enter the orderid.The orderis is the orderkey noted in  step8\r\n15. Verify the textcode WATIA.\r\n16. Verify the order_text WATIQIN\r\n17. Verify the order_text WATIHTML\r\n18. Verify the order_text WATRIT\r\n19. Launch the PVO database and query the order_text table to verify the WATIA textcode gets updated",
        "expected": "1. \r\n2. ITEU should be set to False for the performance\r\n3. The site should be launched\r\n4. The user should be able to select the number of tickets and on Clicking the continue button  user is navigated to the Recaptcha verification page\r\n5. 1.The user is shown details of his  ticket selection\r\n2.The user should be navigated tom the Shopping cart page.\r\n6. The tickets details should be correct and on clicking the continue button the user should be navigated to the Payments page.\r\n7. The ticket insurance text should be displayed. The text should not display the words per ticket.\r\n8. The amount should be independent of the insurance amount.The total amount should be correct\r\n9. The mandatory fields should be entered\r\n10. The orderkey should be noted\r\n11. The radio button Yes should be highlighted in the ticket insurance.\r\n12. The user should be navigated to the Confirmation page\r\n13. The user is signed in.\r\n14. The user should be  navigated to the Search your order record.\r\n2.The user should be navigated to the Search text by Order id page\r\n3.Order_text page should be displayed\r\n15. The text content should display the ticket insurance amount charged.\r\n16. The text content should display the nodes from GetQuote Call\r\n17. The order_text content should contain the InsuranceOffer HTML displayed in the GetQuote API\r\n18. The text content should display the response.\r\n19. The textcode should get updated"
      }
    ],
    "custom_jiras": "53"
  },
  {
    "id": 30692840,
    "title": "World Access Insurance - Verify ticket insurance for min setting in MLB",
    "section_id": 1684999,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-PVO3939",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 14,
    "custom_is_automated": false,
    "custom_refs": "C151441",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Enter the mandatory fields in the Payment page regarding Billing details and Credit card details.\r\nExpected Result:\r\nThe mandatory fields should be entered\r\n2. Verify that the ticket insurance is displayed. Verify if the text is displayed as 'Get Event Ticket Insurance for an additional $X. Where X is the amount\r\nExpected Result:\r\nThe ticket insurance text should be displayed.\r\n3. Verify the amount displayed. The amount should be number of tickets*ticket amount+convienience fee\r\nExpected Result:\r\nThe amount should be independent of the insurance amount.The total amount should be correct\r\n4. Verify the Ticket insurance amount displayed on the page. The amount displayed should be $5.50\r\nExpected Result:\r\nThe ticket insurance amount should be displayed as $5.50 .Since the calculated amount 10%of total amount is lesser than the minimum insurance amount.\r\n5. Note down the orderkey using the view source\r\nExpected Result:\r\nThe orderkey should be noted\r\n6. Verify both Yes and No radio buttons are present on the page and enabled and neither button is set.\r\nClick on the 'Yes' radio button and click on the Buy Tickets button\r\nExpected Result:\r\nThe radio button Yes should be highlighted in the ticket insurance. The user should be navigated to the Accept terms and condition page.\r\n7. Select Accept in  the terms and condition page\r\nExpected Result:\r\nThe user should be navigated to the Confirmation page\r\n8. Launch the PVO maintainence site using the url and Sign in as  and \r\nExpected Result:\r\nThe user should be  signed in.\r\n9. 1.Select Orders from the right navigation and then select Orders link\r\n2.Click on Text button\r\n3.Enter the orderid.The order is the orderkey noted in  step8\r\n4.Click on Edit button\r\nExpected Result:\r\nOrder text details page should be displayed\r\n10. 1.Verify if the textcode WATIOT is shown as textcode set.\r\n2.Select WATIOT and note the text content\r\nExpected Result:\r\nThe text code should be set and the  text content should display the time stamp\r\n11. Verify the textcode WATIA.\r\nExpected Result:\r\nThe text content should display the ticket insurance amount charged.\r\n12. Verify the order_text WATRIT\r\nExpected Result:\r\nThe text content should display the response.\r\n13. Verify in the dtabase ,the WATIA textcode gets updated in the Order_Text in the database\r\nExpected Result:\r\nThe textcode gets updated on the database\r\n14. 1)The textcode WATIFE should be set to true at the Supplier level.\r\n2)The text code WATII should be set to default value at the Sub Agency level\r\nThe WATII text code only  appears when WATIFE=true.\r\n15. In the Pokemon site  set the Properties                                                           worldaccess.minimum_insurance_amount=5.50\r\nworldaccess.maximum_insurance_amount=450.00\r\n16. The worldaccess.percentage_of_amount_insured should be set as 10%\r\n17. Launch the GPL link using the url\r\nExpected Result:\r\nThe site should be launched\r\n18. Click on the month and then click on the Buy tickets link for the event selected\r\nExpected Result:\r\nThe event should be selected and the user is navigated to the Selection page\r\n19. Select ticket fare less than $40and Select Number of Tickets as one  . Click on the continue button.\r\nExpected Result:\r\nThe user should be able to select the number of tickets and on Clicking the continue button  user is navigated to the Recaptcha verification page\r\n20. 1.Enter the words and click on the continue button\r\n2.In the details page click on the continue button\r\nExpected Result:\r\n1.The user is shown details of his  ticket selection\r\n2.The user should be navigated tom the Shopping cart page.\r\n21. Verify the details in the shopping cart page and click on the continue button\r\nExpected Result:\r\nThe tickets details should be correct and on clicking the continue button the user should be navigated to the Payments page.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Enter the mandatory fields in the Payment page regarding Billing details and Credit card details.\r\n2. Verify that the ticket insurance is displayed. Verify if the text is displayed as 'Get Event Ticket Insurance for an additional $X. Where X is the amount\r\n3. Verify the amount displayed. The amount should be number of tickets*ticket amount+convienience fee\r\n4. Verify the Ticket insurance amount displayed on the page. The amount displayed should be $5.50\r\n5. Note down the orderkey using the view source\r\n6. Verify both Yes and No radio buttons are present on the page and enabled and neither button is set.\r\nClick on the 'Yes' radio button and click on the Buy Tickets button\r\n7. Select Accept in  the terms and condition page\r\n8. Launch the PVO maintainence site using the url and Sign in as  and \r\n9. 1.Select Orders from the right navigation and then select Orders link\r\n2.Click on Text button\r\n3.Enter the orderid.The order is the orderkey noted in  step8\r\n4.Click on Edit button\r\n10. 1.Verify if the textcode WATIOT is shown as textcode set.\r\n2.Select WATIOT and note the text content\r\n11. Verify the textcode WATIA.\r\n12. Verify the order_text WATRIT\r\n13. Verify in the dtabase ,the WATIA textcode gets updated in the Order_Text in the database\r\n14. 1)The textcode WATIFE should be set to true at the Supplier level.\r\n2)The text code WATII should be set to default value at the Sub Agency level\r\nThe WATII text code only  appears when WATIFE=true.\r\n15. In the Pokemon site  set the Properties                                                           worldaccess.minimum_insurance_amount=5.50\r\nworldaccess.maximum_insurance_amount=450.00\r\n16. The worldaccess.percentage_of_amount_insured should be set as 10%\r\n17. Launch the GPL link using the url\r\n18. Click on the month and then click on the Buy tickets link for the event selected\r\n19. Select ticket fare less than $40and Select Number of Tickets as one  . Click on the continue button.\r\n20. 1.Enter the words and click on the continue button\r\n2.In the details page click on the continue button\r\n21. Verify the details in the shopping cart page and click on the continue button",
        "expected": "1. The mandatory fields should be entered\r\n2. The ticket insurance text should be displayed.\r\n3. The amount should be independent of the insurance amount.The total amount should be correct\r\n4. The ticket insurance amount should be displayed as $5.50 .Since the calculated amount 10%of total amount is lesser than the minimum insurance amount.\r\n5. The orderkey should be noted\r\n6. The radio button Yes should be highlighted in the ticket insurance. The user should be navigated to the Accept terms and condition page.\r\n7. The user should be navigated to the Confirmation page\r\n8. The user should be  signed in.\r\n9. Order text details page should be displayed\r\n10. The text code should be set and the  text content should display the time stamp\r\n11. The text content should display the ticket insurance amount charged.\r\n12. The text content should display the response.\r\n13. The textcode gets updated on the database\r\n14. \r\n15. \r\n16. \r\n17. The site should be launched\r\n18. The event should be selected and the user is navigated to the Selection page\r\n19. The user should be able to select the number of tickets and on Clicking the continue button  user is navigated to the Recaptcha verification page\r\n20. 1.The user is shown details of his  ticket selection\r\n2.The user should be navigated tom the Shopping cart page.\r\n21. The tickets details should be correct and on clicking the continue button the user should be navigated to the Payments page."
      }
    ],
    "custom_jiras": "49"
  },
  {
    "id": 30692841,
    "title": "World Access Insurance - Verify ticket insurance for max setting in MLB",
    "section_id": 1684999,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-PVO3939",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 15,
    "custom_is_automated": false,
    "custom_refs": "C151442",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1)The textcode WATIFE should be set to true at the Supplier level.\r\n2)The text code WATII should be set to default value at the Sub Agency level\r\nThe WATII text code only  appears when WATIFE=true.\r\n2. In the Pokemon site  set the Properties                                                           worldaccess.minimum_insurance_amount=5.50\r\nworldaccess.maximum_insurance_amount=450.00\r\n3. The worldaccess.percentage_of_amount_insured should be set as 80%\r\n4. Launch the GPL link using the url\r\nExpected Result:\r\nThe site should be launched\r\n5. Click on the month and then click on the Buy tickets link for the event selected\r\nExpected Result:\r\nThe event should be selected and the user is navigated to the Selection page\r\n6. Select ticket fare less than $40and Select Number of Tickets as 16 . Click on the continue button.\r\nExpected Result:\r\nThe user should be able to select the number of tickets and on Clicking the continue button  user is navigated to the Recaptcha verification page\r\n7. 1.Enter the words and click on the continue button\r\n2.In the details page click on the continue button\r\nExpected Result:\r\n1.The user is shown details of his  ticket selection\r\n2.The user should be navigated tom the Shopping cart page.\r\n8. Verify the details in the shopping cart page and click on the continue button\r\nExpected Result:\r\nThe tickets details should be correct and on clicking the continue button the user should be navigated to the Payments page.\r\n9. Enter the mandatory fields in the Payment page regarding Billing details and Credit card details.\r\nExpected Result:\r\nThe mandatory fields should be entered\r\n10. Verify that the ticket insurance is displayed. Verify if the text is displayed as 'Get Event Ticket Insurance for an additional $X. Where X is the amount\r\nExpected Result:\r\nThe ticket insurance text should be displayed.\r\n11. Verify the amount displayed. The amount should be number of tickets*ticket amount+convienience fee\r\nExpected Result:\r\nThe amount should be independent of the insurance amount.The total amount should be correct\r\n12. Verify the Ticket insurance amount displayed on the page. The amount displayed should be $450\r\nExpected Result:\r\nThe ticket insurance amount should be displayed as $450 .Since the calculated amount 80%of total amount is lgreater  than the maximum insurance amount. the default maximum amount is considered\r\n13. Note down the orderkey using the view source\r\nExpected Result:\r\nThe orderkey should be noted\r\n14. Verify both Yes and No radio buttons are present on the page and enabled and neither button is set.\r\nClick on the 'Yes' radio button and click on the Buy Tickets button\r\nExpected Result:\r\nThe radio button Yes should be highlighted in the ticket insurance. The user should be navigated to the Accept terms and condition page.\r\n15. Select Accept in  the terms and condition page\r\nExpected Result:\r\nThe user should be navigated to the Confirmation page\r\n16. Launch the PVO maintainence site using the url and Sign in as  and \r\nExpected Result:\r\nThe user should be  signed in.\r\n17. 1.Select Orders from the right navigation and then select Orders link\r\n2.Click on Text button\r\n3.Enter the orderid.The order is the orderkey noted in  step8\r\n4.Click on Edit button\r\nExpected Result:\r\nOrder text details page should be displayed\r\n18. 1.Verify if the textcode WATIOT is shown as textcode set.\r\n2.Select WATIOT and note the text content\r\nExpected Result:\r\nThe text code should be set and the  text content should display the time stamp\r\n19. Verify the textcode WATIA.\r\nExpected Result:\r\nThe text content should display the ticket insurance amount charged.\r\n20. Verify the order_text WATRIT\r\nExpected Result:\r\nThe text content should display the response.\r\n21. Verify in the dtabase ,the wATIA textcode gets updated in the Order_Text in the database\r\nselect * from pvo.Order_Text where order_id=''\r\nExpected Result:\r\nThe textcode gets updated on the database",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1)The textcode WATIFE should be set to true at the Supplier level.\r\n2)The text code WATII should be set to default value at the Sub Agency level\r\nThe WATII text code only  appears when WATIFE=true.\r\n2. In the Pokemon site  set the Properties                                                           worldaccess.minimum_insurance_amount=5.50\r\nworldaccess.maximum_insurance_amount=450.00\r\n3. The worldaccess.percentage_of_amount_insured should be set as 80%\r\n4. Launch the GPL link using the url\r\n5. Click on the month and then click on the Buy tickets link for the event selected\r\n6. Select ticket fare less than $40and Select Number of Tickets as 16 . Click on the continue button.\r\n7. 1.Enter the words and click on the continue button\r\n2.In the details page click on the continue button\r\n8. Verify the details in the shopping cart page and click on the continue button\r\n9. Enter the mandatory fields in the Payment page regarding Billing details and Credit card details.\r\n10. Verify that the ticket insurance is displayed. Verify if the text is displayed as 'Get Event Ticket Insurance for an additional $X. Where X is the amount\r\n11. Verify the amount displayed. The amount should be number of tickets*ticket amount+convienience fee\r\n12. Verify the Ticket insurance amount displayed on the page. The amount displayed should be $450\r\n13. Note down the orderkey using the view source\r\n14. Verify both Yes and No radio buttons are present on the page and enabled and neither button is set.\r\nClick on the 'Yes' radio button and click on the Buy Tickets button\r\n15. Select Accept in  the terms and condition page\r\n16. Launch the PVO maintainence site using the url and Sign in as  and \r\n17. 1.Select Orders from the right navigation and then select Orders link\r\n2.Click on Text button\r\n3.Enter the orderid.The order is the orderkey noted in  step8\r\n4.Click on Edit button\r\n18. 1.Verify if the textcode WATIOT is shown as textcode set.\r\n2.Select WATIOT and note the text content\r\n19. Verify the textcode WATIA.\r\n20. Verify the order_text WATRIT\r\n21. Verify in the dtabase ,the wATIA textcode gets updated in the Order_Text in the database\r\nselect * from pvo.Order_Text where order_id=''",
        "expected": "1. \r\n2. \r\n3. \r\n4. The site should be launched\r\n5. The event should be selected and the user is navigated to the Selection page\r\n6. The user should be able to select the number of tickets and on Clicking the continue button  user is navigated to the Recaptcha verification page\r\n7. 1.The user is shown details of his  ticket selection\r\n2.The user should be navigated tom the Shopping cart page.\r\n8. The tickets details should be correct and on clicking the continue button the user should be navigated to the Payments page.\r\n9. The mandatory fields should be entered\r\n10. The ticket insurance text should be displayed.\r\n11. The amount should be independent of the insurance amount.The total amount should be correct\r\n12. The ticket insurance amount should be displayed as $450 .Since the calculated amount 80%of total amount is lgreater  than the maximum insurance amount. the default maximum amount is considered\r\n13. The orderkey should be noted\r\n14. The radio button Yes should be highlighted in the ticket insurance. The user should be navigated to the Accept terms and condition page.\r\n15. The user should be navigated to the Confirmation page\r\n16. The user should be  signed in.\r\n17. Order text details page should be displayed\r\n18. The text code should be set and the  text content should display the time stamp\r\n19. The text content should display the ticket insurance amount charged.\r\n20. The text content should display the response.\r\n21. The textcode gets updated on the database"
      }
    ],
    "custom_jiras": "49"
  },
  {
    "id": 30692842,
    "title": "Verify the total  insurance amount in WATOLTIA order text code when there is more than one event",
    "section_id": 1684999,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10033",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 16,
    "custom_is_automated": false,
    "custom_refs": "C151443",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "9852",
    "custom_test_purpose": null,
    "custom_steps": "1. Call \r\n2. Set an incorrect values  for any of the following in the properties site.: worldaccess.webservices.quote.host_url \r\nworldaccess.webservices.host_url \r\n username/password values\r\nExpected Result:\r\nPre-requisite should be successful.\r\n3. Launch the GPL link\r\nExpected Result:\r\nThe site should be launched\r\n4. Click on the month and then click on the Buy tickets link for the event selected\r\nExpected Result:\r\nThe event should be selected and the user is navigated to the Selection page\r\n5. Select Price level such that the \r\nworldaccess.percentage_of_amount_insured *  Price level is greater than the worldaccess.minimum_insurance_amount      and Select Number of Tickets . Click on the continue button.\r\nExpected Result:\r\nThe user should be able to select the number of tickets and on Clicking the continue button  user is navigated to the Recaptcha verification page\r\n6. 1.Enter the text and click on the continue button\r\n2.In the details page click on the continue button\r\nExpected Result:\r\n1.The user is shown details of his  ticket selection\r\n2.The user should be navigated tom the Shopping cart page.\r\n7. Verify the details in the shopping cart page\r\nExpected Result:\r\nThe tickets details should be correct.\r\n8. Add one more offer by clicking \"Add Another Event\" button. \r\nSelect tickets and navigate to shopping cart page again.\r\nExpected Result:\r\nThe tickets details should be correct and on clicking the continue button the user should be navigated to the Payments page.\r\n9. Verify the Ticket insurance amount displayed. \r\nThe percentage mentioned below is the worldaccess.percentage_of_amount_insured  mentioned in the precondition\r\n1.If the percentage of the Total order amount 'A' is greater than the worldaccess.minimum_insurance_amount  set in the precondition then the amount A should be considered\r\n2.If the percentage of the Total order amount 'A' is less  than the worldaccess.percentage_of_amount_insured set in the precondition  then the amount 'A' should be ignored and the worldaccess.minimum_insurance_amount mentioned in the precondition should be considered.\r\n\r\nExample:If the default value is used \r\nworldaccess.minimum_insurance_amount  =$3\r\nworldaccess.percentage_of_amount_insured = 10\r\nand the one ticket of $40 is selected then\r\n$40*10%=$4 which is less than $6 so the Ticket insurance amount selected will be $4.00\r\nExpected Result:\r\nThe Ticket insurance amount should be shown as\" Event Ticket Insurance:$A\" . \r\nWhere A is calculated as per the condition 1 The percentage mentioned below is the worldaccess.maximum_insurance_amount mentioned in the precondition\r\n1.If the percentage of the Total order amount 'A' is greater than the worldaccess.minimum_insurance_amount set then the amount A should be considered\r\n10. Verify the amount displayed. The amount should be number of tickets*ticket amount+convienience fee\r\nExpected Result:\r\nThe amount should be independent of the insurance amount.The total amount should be correct\r\n11. Enter the mandatory fields in the Payment page regarding Billing details and Credit card details.\r\nExpected Result:\r\nThe mandatory fields should be entered\r\n12. Note down the orderkey using the view source\r\nExpected Result:\r\nThe orderkey should be noted\r\n13. Verify both Yes and No radio buttons are present on the page and enabled and neither button is set.\r\nClick on the 'Yes' radio button\r\nExpected Result:\r\nThe radio button Yes should be highlighted in the ticket insurance.\r\n14. Click on buy Tickets button\r\nExpected Result:\r\nThe user should be navigated to the Confirmation page\r\n15. 1.Verify that the Ticket insurance details or amount is not displayed in the Confirmation page\r\n2.Verify that the order email does not contain any reference to the Ticket insurance details or amount\r\nExpected Result:\r\nThe Confirmation page and the order email should not contain any reference to the Ticket insurance details or amount\r\n16. Login using valid user credentials as:\r\nUsername: \r\nPassword: \r\nExpected Result:\r\nUser should be logged in successfully.\r\n17. 1.Select Orders from the right navigation and then select Orders\r\n2.Select Text button\r\n3.Enter the orderid.The orderis is the orderkey noted in  step8\r\nExpected Result:\r\nThe user should be  navigated to the Search your order record.\r\n2.The user should be navigated to the Search text by Order id page\r\n3.Order_text page should be displayed\r\n18. Verify the new  textcode WATIA.\r\nExpected Result:\r\nThe text content should display the total  ticket insurance amount charged.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Call \r\n2. Set an incorrect values  for any of the following in the properties site.: worldaccess.webservices.quote.host_url \r\nworldaccess.webservices.host_url \r\n username/password values\r\n3. Launch the GPL link\r\n4. Click on the month and then click on the Buy tickets link for the event selected\r\n5. Select Price level such that the \r\nworldaccess.percentage_of_amount_insured *  Price level is greater than the worldaccess.minimum_insurance_amount      and Select Number of Tickets . Click on the continue button.\r\n6. 1.Enter the text and click on the continue button\r\n2.In the details page click on the continue button\r\n7. Verify the details in the shopping cart page\r\n8. Add one more offer by clicking \"Add Another Event\" button. \r\nSelect tickets and navigate to shopping cart page again.\r\n9. Verify the Ticket insurance amount displayed. \r\nThe percentage mentioned below is the worldaccess.percentage_of_amount_insured  mentioned in the precondition\r\n1.If the percentage of the Total order amount 'A' is greater than the worldaccess.minimum_insurance_amount  set in the precondition then the amount A should be considered\r\n2.If the percentage of the Total order amount 'A' is less  than the worldaccess.percentage_of_amount_insured set in the precondition  then the amount 'A' should be ignored and the worldaccess.minimum_insurance_amount mentioned in the precondition should be considered.\r\n\r\nExample:If the default value is used \r\nworldaccess.minimum_insurance_amount  =$3\r\nworldaccess.percentage_of_amount_insured = 10\r\nand the one ticket of $40 is selected then\r\n$40*10%=$4 which is less than $6 so the Ticket insurance amount selected will be $4.00\r\n10. Verify the amount displayed. The amount should be number of tickets*ticket amount+convienience fee\r\n11. Enter the mandatory fields in the Payment page regarding Billing details and Credit card details.\r\n12. Note down the orderkey using the view source\r\n13. Verify both Yes and No radio buttons are present on the page and enabled and neither button is set.\r\nClick on the 'Yes' radio button\r\n14. Click on buy Tickets button\r\n15. 1.Verify that the Ticket insurance details or amount is not displayed in the Confirmation page\r\n2.Verify that the order email does not contain any reference to the Ticket insurance details or amount\r\n16. Login using valid user credentials as:\r\nUsername: \r\nPassword: \r\n17. 1.Select Orders from the right navigation and then select Orders\r\n2.Select Text button\r\n3.Enter the orderid.The orderis is the orderkey noted in  step8\r\n18. Verify the new  textcode WATIA.",
        "expected": "1. \r\n2. Pre-requisite should be successful.\r\n3. The site should be launched\r\n4. The event should be selected and the user is navigated to the Selection page\r\n5. The user should be able to select the number of tickets and on Clicking the continue button  user is navigated to the Recaptcha verification page\r\n6. 1.The user is shown details of his  ticket selection\r\n2.The user should be navigated tom the Shopping cart page.\r\n7. The tickets details should be correct.\r\n8. The tickets details should be correct and on clicking the continue button the user should be navigated to the Payments page.\r\n9. The Ticket insurance amount should be shown as\" Event Ticket Insurance:$A\" . \r\nWhere A is calculated as per the condition 1 The percentage mentioned below is the worldaccess.maximum_insurance_amount mentioned in the precondition\r\n1.If the percentage of the Total order amount 'A' is greater than the worldaccess.minimum_insurance_amount set then the amount A should be considered\r\n10. The amount should be independent of the insurance amount.The total amount should be correct\r\n11. The mandatory fields should be entered\r\n12. The orderkey should be noted\r\n13. The radio button Yes should be highlighted in the ticket insurance.\r\n14. The user should be navigated to the Confirmation page\r\n15. The Confirmation page and the order email should not contain any reference to the Ticket insurance details or amount\r\n16. User should be logged in successfully.\r\n17. The user should be  navigated to the Search your order record.\r\n2.The user should be navigated to the Search text by Order id page\r\n3.Order_text page should be displayed\r\n18. The text content should display the total  ticket insurance amount charged."
      }
    ],
    "custom_jiras": "55"
  },
  {
    "id": 30692843,
    "title": "Verify invisible reCaptcha validation for single sales flow",
    "section_id": 1685000,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PVO-16349, PVO-16753, PVO-17435",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C151444",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set Recaptcha property - ON following the below steps:-\r\n  a. Launch the pokemon property site \r\n  b.Input \"recaptcha.validation.enabled\" in the Filter By textbox and click on Filter button\r\n  c.Verify whether the value of \"recaptcha.validation.enabled\" is true\r\n2. Set RECAPEN-False following the below steps:-\r\n  a. Launch the maintenance site application and login with valid credentials.\r\n  b.Enter Sub Agency Code\r\n  c.click the search button.\r\n  d.Click the Multiedit button.\r\n  e.Verify whether the text code RECAPEN is set to false",
    "custom_test_purpose": null,
    "custom_steps": "1. Add tickets to cart following steps in  [C131767]\r\nExpected Result:\r\nThe reCaptcha badge should be displayed in the availability page and user is able to lock the seats\r\n2. From the Cart click continue \r\nExpected Result:\r\nUser is landed on the Delivery Method Selection page\r\n3. \t\nSelect Delivery Method and Continue\r\nExpected Result:\r\nUser is landed on Payment page\r\n4. Enter all required fields in the payment page.\nClick on BuyTickets button\r\nExpected Result:\r\nUser is landed on the confirmation page as expected.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Add tickets to cart following steps in  [C131767]\r\n2. From the Cart click continue \r\n3. \t\nSelect Delivery Method and Continue\r\n4. Enter all required fields in the payment page.\nClick on BuyTickets button",
        "expected": "1. The reCaptcha badge should be displayed in the availability page and user is able to lock the seats\r\n2. User is landed on the Delivery Method Selection page\r\n3. User is landed on Payment page\r\n4. User is landed on the confirmation page as expected."
      }
    ],
    "custom_jiras": "65.2p"
  },
  {
    "id": 30692844,
    "title": "Verify call to reCaptcha is made  for Replace from Shopping Cart",
    "section_id": 1685000,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PVO-16349, PVO-16643, PVO-16753, PVO-17435",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C151445",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set Recaptcha property - ON following the below steps:-\r\na. Launch the pokemon property site \r\nb.Input \"recaptcha.validation.enabled\" in the Filter By textbox and click on Filter button\r\nc.Verify whether the value of \"recaptcha.validation.enabled\" is true\r\n2.Confirm RECAPEN is not set (test default) following the below steps:-\r\na. Launch the maintenance site application and login with valid credentials.\r\nb.Enter Sub Agency Code\r\nc.click the search button.\r\nd.Click the Multiedit button.\r\ne.Verify whether the text code RECAPEN is not set",
    "custom_test_purpose": null,
    "custom_steps": "1. Add tickets to cart following steps in [C131767]\r\nExpected Result:\r\nold reCaptcha modal should not open before navigating to Shopping Cart\r\n2. Click Replace, select different seats and Continue.\nVerify call to reCaptcha is made on clicking Availabilty page Continue button\r\nExpected Result:\r\nUser should be navigated to availability page for selecting new seats and clicking on continue will trigger reCaptcha call.\r\n3. Verify old reCaptcha modal does not open before navigating to Shopping Cart\r\nExpected Result:\r\nold reCaptcha modal should not open before navigating to Shopping Cart\n\nBelow log should be passed:\n[DEBUG] 29 Jan 2018 14:48:25 (ReCaptchaUtil.java:validateReCaptcha:109); Success; Browser: [Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36] ; IP Address: [10.20.37.21]; UserContext: [id=S_tomcat_irdvapppvo8_1517266104592_27, category=S, internalOrigin=tomcat_irdvapppvo8, externalOrigin=irdvapppvo8.back.tickets.com, name=null, languageCode=en, countryCode=IE, subAgencyCode=TDC, refererURL=http://irdvapppvo8.back.tickets.com/buy/MLBEventInfo, currentURL=http://irdvapppvo8.back.tickets.com/buy/PrimarySalesAjaxServlet]; UserResponse:[\\{\"success\":true,\"challenge_ts\":\"2018-01-29T22:48:23Z\",\"hostname\":\"irdvapppvo8.back.tickets.com\"}]\r\n4. Continue from the shopping cart with the replaced tickets\r\nExpected Result:\r\nUser is landed on the delivery method  selection page\r\n5. Select Delivery Method and Continue\r\nExpected Result:\r\nUser is landed on Payment page\r\n6. Enter all required fields in the payment page.\nClick on BuyTickets button\r\nExpected Result:\r\n\t\nUser is landed on the confirmation page as expected.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Add tickets to cart following steps in [C131767]\r\n2. Click Replace, select different seats and Continue.\nVerify call to reCaptcha is made on clicking Availabilty page Continue button\r\n3. Verify old reCaptcha modal does not open before navigating to Shopping Cart\r\n4. Continue from the shopping cart with the replaced tickets\r\n5. Select Delivery Method and Continue\r\n6. Enter all required fields in the payment page.\nClick on BuyTickets button",
        "expected": "1. old reCaptcha modal should not open before navigating to Shopping Cart\r\n2. User should be navigated to availability page for selecting new seats and clicking on continue will trigger reCaptcha call.\r\n3. old reCaptcha modal should not open before navigating to Shopping Cart\n\nBelow log should be passed:\n[DEBUG] 29 Jan 2018 14:48:25 (ReCaptchaUtil.java:validateReCaptcha:109); Success; Browser: [Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36] ; IP Address: [10.20.37.21]; UserContext: [id=S_tomcat_irdvapppvo8_1517266104592_27, category=S, internalOrigin=tomcat_irdvapppvo8, externalOrigin=irdvapppvo8.back.tickets.com, name=null, languageCode=en, countryCode=IE, subAgencyCode=TDC, refererURL=http://irdvapppvo8.back.tickets.com/buy/MLBEventInfo, currentURL=http://irdvapppvo8.back.tickets.com/buy/PrimarySalesAjaxServlet]; UserResponse:[\\{\"success\":true,\"challenge_ts\":\"2018-01-29T22:48:23Z\",\"hostname\":\"irdvapppvo8.back.tickets.com\"}]\r\n4. User is landed on the delivery method  selection page\r\n5. User is landed on Payment page\r\n6. \t\nUser is landed on the confirmation page as expected."
      }
    ],
    "custom_jiras": "65.2p"
  },
  {
    "id": 30692845,
    "title": "Verify call to reCaptcha is made  for Add from Shopping Cart",
    "section_id": 1685000,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PVO-16349, PVO-16643, PVO-16753, PVO-17435",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C151446",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set Recaptcha property - ON following the below steps:-\r\na. Launch the pokemon property site \r\nb.Input \"recaptcha.validation.enabled\" in the Filter By textbox and click on Filter button\r\nc.Verify whether the value of \"recaptcha.validation.enabled\" is true\r\n2.Confirm RECAPEN is not set (test default) following the below steps:-\r\na. Launch the maintenance site application and login with valid credentials.\r\nb.Enter Sub Agency Code\r\nc.click the search button.\r\nd.Click the Multiedit button.\r\ne.Verify whether the text code RECAPEN is not set",
    "custom_test_purpose": null,
    "custom_steps": "1. Add tickets to cart following steps in [C131767]\r\nExpected Result:\r\nold reCaptcha modal should not open before navigating to Shopping Cart\n\r\n2. Click Add button from the cart\n\nFrom the availability page select more seats and Continue.\nVerify call to reCaptcha is made on clicking Availability page Continue button\r\nExpected Result:\r\nUser should be navigated to availability page for adding new seats and clicking on continue will trigger reCaptcha call.\r\n3. Verify old reCaptcha modal does not open before navigating to Shopping Cart\r\nExpected Result:\r\nold reCaptcha modal should not open before navigating to Shopping Cart\n\nBelow log should be passed:\n[DEBUG] 29 Jan 2018 14:48:25 (ReCaptchaUtil.java:validateReCaptcha:109); Success; Browser: [Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36] ; IP Address: [10.20.37.21]; UserContext: [id=S_tomcat_irdvapppvo8_1517266104592_27, category=S, internalOrigin=tomcat_irdvapppvo8, externalOrigin=irdvapppvo8.back.tickets.com, name=null, languageCode=en, countryCode=IE, subAgencyCode=TDC, refererURL=http://irdvapppvo8.back.tickets.com/buy/MLBEventInfo, currentURL=http://irdvapppvo8.back.tickets.com/buy/PrimarySalesAjaxServlet]; UserResponse:[\\{\"success\":true,\"challenge_ts\":\"2018-01-29T22:48:23Z\",\"hostname\":\"irdvapppvo8.back.tickets.com\"}]\r\n4. Continue from the shopping cart \r\nExpected Result:\r\nUser is landed on the delivery method selection page\r\n5. Select Delivery Method and Continue\r\nExpected Result:\r\nUser is landed on Payment page\r\n6. Enter all required fields in the payment page.\nClick on BuyTickets button\r\nExpected Result:\r\nUser is landed on the confirmation page as expected.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Add tickets to cart following steps in [C131767]\r\n2. Click Add button from the cart\n\nFrom the availability page select more seats and Continue.\nVerify call to reCaptcha is made on clicking Availability page Continue button\r\n3. Verify old reCaptcha modal does not open before navigating to Shopping Cart\r\n4. Continue from the shopping cart \r\n5. Select Delivery Method and Continue\r\n6. Enter all required fields in the payment page.\nClick on BuyTickets button",
        "expected": "1. old reCaptcha modal should not open before navigating to Shopping Cart\n\r\n2. User should be navigated to availability page for adding new seats and clicking on continue will trigger reCaptcha call.\r\n3. old reCaptcha modal should not open before navigating to Shopping Cart\n\nBelow log should be passed:\n[DEBUG] 29 Jan 2018 14:48:25 (ReCaptchaUtil.java:validateReCaptcha:109); Success; Browser: [Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36] ; IP Address: [10.20.37.21]; UserContext: [id=S_tomcat_irdvapppvo8_1517266104592_27, category=S, internalOrigin=tomcat_irdvapppvo8, externalOrigin=irdvapppvo8.back.tickets.com, name=null, languageCode=en, countryCode=IE, subAgencyCode=TDC, refererURL=http://irdvapppvo8.back.tickets.com/buy/MLBEventInfo, currentURL=http://irdvapppvo8.back.tickets.com/buy/PrimarySalesAjaxServlet]; UserResponse:[\\{\"success\":true,\"challenge_ts\":\"2018-01-29T22:48:23Z\",\"hostname\":\"irdvapppvo8.back.tickets.com\"}]\r\n4. User is landed on the delivery method selection page\r\n5. User is landed on Payment page\r\n6. User is landed on the confirmation page as expected."
      }
    ],
    "custom_jiras": "65.2p"
  },
  {
    "id": 30692846,
    "title": "Verify call to reCaptcha is made  for Add Another Event from Shopping Cart",
    "section_id": 1685000,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PVO-16349, PVO-16643, PVO-17435",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C151447",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. \t\nAdd tickets to cart following steps in [C131767]\r\nExpected Result:\r\nold reCaptcha modal should not open before navigating to Shopping Cart\r\n2. Click Add Another Event, \nSelect seats and Continue.\nVerify call to reCaptcha is made on clicking Availability page Continue button\r\nExpected Result:\r\nUser should be navigated to Event list page for adding new events and clicking on continue will trigger reCaptcha call.\r\n3. Verify old reCaptcha modal does not open before navigating to Shopping Cart\r\nExpected Result:\r\nold reCaptcha modal should not open before navigating to Shopping Cart\n\nBelow log should be passed:\n[DEBUG] 29 Jan 2018 14:48:25 (ReCaptchaUtil.java:validateReCaptcha:109); Success; Browser: [Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36] ; IP Address: [10.20.37.21]; UserContext: [id=S_tomcat_irdvapppvo8_1517266104592_27, category=S, internalOrigin=tomcat_irdvapppvo8, externalOrigin=irdvapppvo8.back.tickets.com, name=null, languageCode=en, countryCode=IE, subAgencyCode=TDC, refererURL=http://irdvapppvo8.back.tickets.com/buy/MLBEventInfo, currentURL=http://irdvapppvo8.back.tickets.com/buy/PrimarySalesAjaxServlet]; UserResponse:[\\{\"success\":true,\"challenge_ts\":\"2018-01-29T22:48:23Z\",\"hostname\":\"irdvapppvo8.back.tickets.com\"}]\r\n4. Continue from the shopping cart with the new tickets\r\nExpected Result:\r\nUser is landed on the delivery method selection page\r\n5. Select Delivery Method and Continue\r\nExpected Result:\r\nUser is landed on Payment page\r\n6. Enter all required fields in the payment page.\nClick on BuyTickets button\r\nExpected Result:\r\nUser is landed on the confirmation page as expected.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. \t\nAdd tickets to cart following steps in [C131767]\r\n2. Click Add Another Event, \nSelect seats and Continue.\nVerify call to reCaptcha is made on clicking Availability page Continue button\r\n3. Verify old reCaptcha modal does not open before navigating to Shopping Cart\r\n4. Continue from the shopping cart with the new tickets\r\n5. Select Delivery Method and Continue\r\n6. Enter all required fields in the payment page.\nClick on BuyTickets button",
        "expected": "1. old reCaptcha modal should not open before navigating to Shopping Cart\r\n2. User should be navigated to Event list page for adding new events and clicking on continue will trigger reCaptcha call.\r\n3. old reCaptcha modal should not open before navigating to Shopping Cart\n\nBelow log should be passed:\n[DEBUG] 29 Jan 2018 14:48:25 (ReCaptchaUtil.java:validateReCaptcha:109); Success; Browser: [Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36] ; IP Address: [10.20.37.21]; UserContext: [id=S_tomcat_irdvapppvo8_1517266104592_27, category=S, internalOrigin=tomcat_irdvapppvo8, externalOrigin=irdvapppvo8.back.tickets.com, name=null, languageCode=en, countryCode=IE, subAgencyCode=TDC, refererURL=http://irdvapppvo8.back.tickets.com/buy/MLBEventInfo, currentURL=http://irdvapppvo8.back.tickets.com/buy/PrimarySalesAjaxServlet]; UserResponse:[\\{\"success\":true,\"challenge_ts\":\"2018-01-29T22:48:23Z\",\"hostname\":\"irdvapppvo8.back.tickets.com\"}]\r\n4. User is landed on the delivery method selection page\r\n5. User is landed on Payment page\r\n6. User is landed on the confirmation page as expected."
      }
    ],
    "custom_jiras": "65.2p"
  },
  {
    "id": 30692847,
    "title": "Verify call to reCaptcha is made for Remove from Shopping Cart",
    "section_id": 1685000,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PVO-16349, PVO-16643, PVO-17435",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C151448",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Set Property pvo.invisible_recaptcha_enabled to true\r\nConfirm RECAPEN is not set (test default)",
    "custom_test_purpose": null,
    "custom_steps": "1. Add tickets to cart following steps in [C131767]\r\nExpected Result:\r\nold reCaptcha modal should not open before navigating to Shopping Cart\r\n2. Click Remove. \nChoose a different event and add seats\nVerify call to reCaptcha is made on clicking Availability page Continue button\r\nExpected Result:\r\nUser should be navigated to Event list page for adding new events of another event and clicking on continue will trigger reCaptcha call.\r\n3. Verify old reCaptcha modal does not open before navigating to Shopping Cart\r\nExpected Result:\r\nold reCaptcha modal should not open before navigating to Shopping Cart\n\nBelow log should be passed:\n[DEBUG] 29 Jan 2018 14:48:25 (ReCaptchaUtil.java:validateReCaptcha:109); Success; Browser: [Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36] ; IP Address: [10.20.37.21]; UserContext: [id=S_tomcat_irdvapppvo8_1517266104592_27, category=S, internalOrigin=tomcat_irdvapppvo8, externalOrigin=irdvapppvo8.back.tickets.com, name=null, languageCode=en, countryCode=IE, subAgencyCode=TDC, refererURL=http://irdvapppvo8.back.tickets.com/buy/MLBEventInfo, currentURL=http://irdvapppvo8.back.tickets.com/buy/PrimarySalesAjaxServlet]; UserResponse:[\\{\"success\":true,\"challenge_ts\":\"2018-01-29T22:48:23Z\",\"hostname\":\"irdvapppvo8.back.tickets.com\"}]\r\n4. Continue from the shopping cart\r\nExpected Result:\r\nUser is landed on the delivery method selection page\r\n5. Select Delivery Method and Continue\r\nExpected Result:\r\nUser is landed on Payment page\r\n6. Enter all required fields in the payment page.\nClick on BuyTickets button\r\nExpected Result:\r\nUser is landed on the confirmation page as expected",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Add tickets to cart following steps in [C131767]\r\n2. Click Remove. \nChoose a different event and add seats\nVerify call to reCaptcha is made on clicking Availability page Continue button\r\n3. Verify old reCaptcha modal does not open before navigating to Shopping Cart\r\n4. Continue from the shopping cart\r\n5. Select Delivery Method and Continue\r\n6. Enter all required fields in the payment page.\nClick on BuyTickets button",
        "expected": "1. old reCaptcha modal should not open before navigating to Shopping Cart\r\n2. User should be navigated to Event list page for adding new events of another event and clicking on continue will trigger reCaptcha call.\r\n3. old reCaptcha modal should not open before navigating to Shopping Cart\n\nBelow log should be passed:\n[DEBUG] 29 Jan 2018 14:48:25 (ReCaptchaUtil.java:validateReCaptcha:109); Success; Browser: [Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36] ; IP Address: [10.20.37.21]; UserContext: [id=S_tomcat_irdvapppvo8_1517266104592_27, category=S, internalOrigin=tomcat_irdvapppvo8, externalOrigin=irdvapppvo8.back.tickets.com, name=null, languageCode=en, countryCode=IE, subAgencyCode=TDC, refererURL=http://irdvapppvo8.back.tickets.com/buy/MLBEventInfo, currentURL=http://irdvapppvo8.back.tickets.com/buy/PrimarySalesAjaxServlet]; UserResponse:[\\{\"success\":true,\"challenge_ts\":\"2018-01-29T22:48:23Z\",\"hostname\":\"irdvapppvo8.back.tickets.com\"}]\r\n4. User is landed on the delivery method selection page\r\n5. User is landed on Payment page\r\n6. User is landed on the confirmation page as expected"
      }
    ],
    "custom_jiras": "65.2p"
  },
  {
    "id": 30692848,
    "title": "Verify call to reCaptcha is made for complex upsell",
    "section_id": 1685000,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PVO-16349, PVO-16643, PVO-16753, PVO-17435",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C151449",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Have an event with complex upsell associated to it.",
    "custom_test_purpose": null,
    "custom_steps": "1. Add tickets to cart following steps in [C131767]\r\nExpected Result:\r\nold reCaptcha modal should not open before navigating to Shopping Cart\r\n2. Select complex upsell from the cart, \nselect seats on availability page and continue. \r\nExpected Result:\r\nUser should reach on shopping cart.\r\n3. Verify reCaptcha call is made a second time\r\nExpected Result:\r\nold reCaptcha modal should not open before navigating to Shopping Cart\n\n\r\n4. Continue from the shopping cart with the complex upsell tickets\r\nExpected Result:\r\nUser is landed on the delivery method selection page\r\n5. Select Delivery Method and Continue\r\nExpected Result:\r\nUser is landed on Payment page\r\n6. Enter all required fields in the payment page.\nClick on BuyTickets button\r\nExpected Result:\r\nUser is landed on the confirmation page as expected.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Add tickets to cart following steps in [C131767]\r\n2. Select complex upsell from the cart, \nselect seats on availability page and continue. \r\n3. Verify reCaptcha call is made a second time\r\n4. Continue from the shopping cart with the complex upsell tickets\r\n5. Select Delivery Method and Continue\r\n6. Enter all required fields in the payment page.\nClick on BuyTickets button",
        "expected": "1. old reCaptcha modal should not open before navigating to Shopping Cart\r\n2. User should reach on shopping cart.\r\n3. old reCaptcha modal should not open before navigating to Shopping Cart\n\n\r\n4. User is landed on the delivery method selection page\r\n5. User is landed on Payment page\r\n6. User is landed on the confirmation page as expected."
      }
    ],
    "custom_jiras": "65.2p"
  },
  {
    "id": 30692849,
    "title": "Verify call to reCaptcha is made once for Online Promotion",
    "section_id": 1685000,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PVO-16349, PVO-16753, PVO-17435",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_refs": "C151450",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Launch MyTickets url and login with valid credentials\n\r\nExpected Result:\r\nUser is landed on the My Account page\r\n2. Navigate to Special Offers and select an Online Promotion\r\nExpected Result:\r\nUser is landed on the availability page\r\n3. Follow steps from 2 in [C131767] and verify recaptcha\r\nExpected Result:\r\nreCaptcha badge should be displayed in the availability page and old reCaptcha modal should not open before navigating to Shopping Cart.\r\n4. Continue from the shopping cart \r\nExpected Result:\r\nUser is landed on the delivery method selection page\r\n5. Select Delivery Method and Continue\r\nExpected Result:\r\nUser is landed on Payment page\r\n6. Enter all required fields in the payment page.\nClick on BuyTickets button\r\nExpected Result:\r\nUser is landed on the confirmation page as expected.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch MyTickets url and login with valid credentials\n\r\n2. Navigate to Special Offers and select an Online Promotion\r\n3. Follow steps from 2 in [C131767] and verify recaptcha\r\n4. Continue from the shopping cart \r\n5. Select Delivery Method and Continue\r\n6. Enter all required fields in the payment page.\nClick on BuyTickets button",
        "expected": "1. User is landed on the My Account page\r\n2. User is landed on the availability page\r\n3. reCaptcha badge should be displayed in the availability page and old reCaptcha modal should not open before navigating to Shopping Cart.\r\n4. User is landed on the delivery method selection page\r\n5. User is landed on Payment page\r\n6. User is landed on the confirmation page as expected."
      }
    ],
    "custom_jiras": "64.1"
  },
  {
    "id": 30692850,
    "title": "Verify call to reCaptcha is made after a failed lock",
    "section_id": 1685000,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PVO-16349, PVO-17435",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_refs": "C151451",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set Recaptcha property - ON following the below steps:-\r\na. Launch the pokemon property site \r\nb.Input \"recaptcha.validation.enabled\" in the Filter By textbox and click on Filter button\r\nc.Verify whether the value of \"recaptcha.validation.enabled\" is true\r\n2.Confirm RECAPEN is not set (test default) following the below steps:-\r\na. Launch the maintenance site application and login with valid credentials.\r\nb.Enter Sub Agency Code\r\nc.click the search button.\r\nd.Click the Multiedit button.\r\ne.Verify whether the text code RECAPEN is not set",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch single ticket url and verify the reCaptcha badge is displayed.\r\nExpected Result:\r\nreCaptcha badge should be displayed.\n\r\n2. Select seats from a section where a seat limit is set so that lock should fail.\nClick on continue button\r\nExpected Result:\r\nUser is getting error in the availability page.\r\n3. Correct number of seats so lock will succeed. \nClick continue\nVerify call to reCaptcha is made\r\nExpected Result:\r\nCall should be made\nThis is the logging to be added:\n\nrecaptchaLogger.debug(\"  Success; \" + \" Browser: [\" + browserDetail  + \"] \" + \";\" + \"  IP Address: [\" + ipAddressInfo  + \"]\" + \";\" + \"  UserContext: [\" + uc + \"]\" + \";\" + \"  UserResponse:[\" + userResponse + \"]\");\r\n4. Verify old reCaptcha modal does not open before navigating to Shopping Cart\r\nExpected Result:\r\n old reCaptcha modal should not open before navigating to Shopping Cart",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch single ticket url and verify the reCaptcha badge is displayed.\r\n2. Select seats from a section where a seat limit is set so that lock should fail.\nClick on continue button\r\n3. Correct number of seats so lock will succeed. \nClick continue\nVerify call to reCaptcha is made\r\n4. Verify old reCaptcha modal does not open before navigating to Shopping Cart",
        "expected": "1. reCaptcha badge should be displayed.\n\r\n2. User is getting error in the availability page.\r\n3. Call should be made\nThis is the logging to be added:\n\nrecaptchaLogger.debug(\"  Success; \" + \" Browser: [\" + browserDetail  + \"] \" + \";\" + \"  IP Address: [\" + ipAddressInfo  + \"]\" + \";\" + \"  UserContext: [\" + uc + \"]\" + \";\" + \"  UserResponse:[\" + userResponse + \"]\");\r\n4.  old reCaptcha modal should not open before navigating to Shopping Cart"
      }
    ],
    "custom_jiras": "64.1"
  },
  {
    "id": 30692851,
    "title": "Verify single ticket flow behavior with reCaptcha disabled",
    "section_id": 1685000,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PVO-16349, PVO-17435",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 9,
    "custom_is_automated": false,
    "custom_refs": "C151452",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set Recaptcha property - ON following the below steps:-\r\na. Launch the pokemon property site\r\nb.Input \"recaptcha.validation.enabled\" in the Filter By textbox and click on Filter button\r\nc.Verify whether the value of \"recaptcha.validation.enabled\" is False\r\n2. Set RECAPEN-False following the below steps:-\r\na. Launch the maintenance site application and login with valid credentials.\r\nb.Enter Sub Agency Code\r\nc.click the search button.\r\nd.Click the Multiedit button.\r\ne.Verify whether the text code RECAPEN is not set",
    "custom_test_purpose": null,
    "custom_steps": "1. lock seats following steps in [C131785] and confirm that reCaptcha badge is not appearing\r\nExpected Result:\r\nreCaptcha badge should NOT be displayed.\n\r\n2. Continue from shopping cart\n\r\nExpected Result:\r\nUSer is landed on the Delivery method selection page\r\n3. Select delivery menthod and continue\r\nExpected Result:\r\nUser is landed on the payment page\r\n4. Enter alll required fields and click on Buy Tickets\r\nExpected Result:\r\nUSer is landed on the confirmation page",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. lock seats following steps in [C131785] and confirm that reCaptcha badge is not appearing\r\n2. Continue from shopping cart\n\r\n3. Select delivery menthod and continue\r\n4. Enter alll required fields and click on Buy Tickets",
        "expected": "1. reCaptcha badge should NOT be displayed.\n\r\n2. USer is landed on the Delivery method selection page\r\n3. User is landed on the payment page\r\n4. USer is landed on the confirmation page"
      }
    ],
    "custom_jiras": "64.1"
  },
  {
    "id": 30692852,
    "title": "Verify that user is unable to lock seats by clicking on Continue button under seat section flow.",
    "section_id": 1685000,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-16684",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 10,
    "custom_is_automated": false,
    "custom_refs": "C151453",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set Recaptcha property - ON following the below steps:-\r\na. Launch the pokemon property site \r\nb.Input \"recaptcha.validation.enabled\" in the Filter By textbox and click on Filter button\r\nc.Verify whether the value of \"recaptcha.validation.enabled\" is true",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Single sales link\r\nExpected Result:\r\nUser is landed on the availability page.\r\n2. verify recaptcha badge is appearing in the availability page as expected\r\nExpected Result:\r\nreCaptcha is appearing as expected.\r\n3. Select seats from a price scale.\nClick on Continue button under Seat section.\r\nExpected Result:\r\nUser should not be able to lock seats and should not be redirected to shopping cart page.\r\n4. User should get an error \"Please select at least 1 ticket before proceeding.\" under Seat Section\r\nExpected Result:\r\nError must be thrown as expected",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Single sales link\r\n2. verify recaptcha badge is appearing in the availability page as expected\r\n3. Select seats from a price scale.\nClick on Continue button under Seat section.\r\n4. User should get an error \"Please select at least 1 ticket before proceeding.\" under Seat Section",
        "expected": "1. User is landed on the availability page.\r\n2. reCaptcha is appearing as expected.\r\n3. User should not be able to lock seats and should not be redirected to shopping cart page.\r\n4. Error must be thrown as expected"
      }
    ],
    "custom_jiras": "64.1"
  },
  {
    "id": 30692853,
    "title": "Verify that user is able to lock seats by clicking on the Continue button under price level section",
    "section_id": 1685000,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-16684",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 11,
    "custom_is_automated": false,
    "custom_refs": "C151454",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set Recaptcha property - ON following the below steps:-\r\na. Launch the pokemon property site \r\nb.Input \"recaptcha.validation.enabled\" in the Filter By textbox and click on Filter button\r\nc.Verify whether the value of \"recaptcha.validation.enabled\" is true",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch single sales link \r\nExpected Result:\r\nUser is landed on the availability page.\r\n2. verify recaptcha badge is appearing in the availability page as expected\r\nExpected Result:\r\nreCaptcha is appearing as expected.\r\n3. Select seats from Price Level section.\nClick on Continue button under Price level section.\r\nExpected Result:\r\nPatron should be able to lock seats and proceed to cart page.\r\n4. Capture API call via Chrome Dev tools/ capture Splunk log and Verify old reCaptcha modal does not open before navigating to Shopping Cart\r\nExpected Result:\r\nold reCaptcha modal should not open before navigating to Shopping Cart.\n\nBelow log should be passed:\n[DEBUG] 29 Jan 2018 14:48:25 (ReCaptchaUtil.java:validateReCaptcha:109); Success; Browser: [Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36] ; IP Address: [10.20.37.21]; UserContext: [id=S_tomcat_irdvapppvo8_1517266104592_27, category=S, internalOrigin=tomcat_irdvapppvo8, externalOrigin=irdvapppvo8.back.tickets.com, name=null, languageCode=en, countryCode=IE, subAgencyCode=TDC, refererURL=http://irdvapppvo8.back.tickets.com/buy/MLBEventInfo, currentURL=http://irdvapppvo8.back.tickets.com/buy/PrimarySalesAjaxServlet]; UserResponse:[{\"success\":true,\"challenge_ts\":\"2018-01-29T22:48:23Z\",\"hostname\":\"irdvapppvo8.back.tickets.com\"}]",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch single sales link \r\n2. verify recaptcha badge is appearing in the availability page as expected\r\n3. Select seats from Price Level section.\nClick on Continue button under Price level section.\r\n4. Capture API call via Chrome Dev tools/ capture Splunk log and Verify old reCaptcha modal does not open before navigating to Shopping Cart",
        "expected": "1. User is landed on the availability page.\r\n2. reCaptcha is appearing as expected.\r\n3. Patron should be able to lock seats and proceed to cart page.\r\n4. old reCaptcha modal should not open before navigating to Shopping Cart.\n\nBelow log should be passed:\n[DEBUG] 29 Jan 2018 14:48:25 (ReCaptchaUtil.java:validateReCaptcha:109); Success; Browser: [Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36] ; IP Address: [10.20.37.21]; UserContext: [id=S_tomcat_irdvapppvo8_1517266104592_27, category=S, internalOrigin=tomcat_irdvapppvo8, externalOrigin=irdvapppvo8.back.tickets.com, name=null, languageCode=en, countryCode=IE, subAgencyCode=TDC, refererURL=http://irdvapppvo8.back.tickets.com/buy/MLBEventInfo, currentURL=http://irdvapppvo8.back.tickets.com/buy/PrimarySalesAjaxServlet]; UserResponse:[{\"success\":true,\"challenge_ts\":\"2018-01-29T22:48:23Z\",\"hostname\":\"irdvapppvo8.back.tickets.com\"}]"
      }
    ],
    "custom_jiras": "64.1"
  },
  {
    "id": 30692854,
    "title": "Verify the user is able to lock the seats in PVO Single sales via Best available flow",
    "section_id": 1685000,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-16698",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 12,
    "custom_is_automated": false,
    "custom_refs": "C151455",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set Recaptcha property - ON following the below steps:-\r\na. Launch the pokemon property site \r\nb.Input \"recaptcha.validation.enabled\" in the Filter By textbox and click on Filter button\r\nc.Verify whether the value of \"recaptcha.validation.enabled\" is true",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch single sales link \r\nExpected Result:\r\n\t\nUser is landed on the availability page.\r\n2. \t\nverify recaptcha badge is appearing in the availability page as expected\r\nExpected Result:\r\nreCaptcha is appearing as expected.\r\n3. Select seats under best available\nClick on Continue button under best available \r\nExpected Result:\r\nPatron should be able to lock seats and proceed to cart page.\r\n4. Capture API call via Chrome Dev tools/ capture Splunk log and Verify old reCaptcha modal does not open before navigating to Shopping Cart\r\nExpected Result:\r\nold reCaptcha modal should not open before navigating to Shopping Cart.\n\nBelow log should be passed:\n[DEBUG] 29 Jan 2018 14:48:25 (ReCaptchaUtil.java:validateReCaptcha:109); Success; Browser: [Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36] ; IP Address: [10.20.37.21]; UserContext: [id=S_tomcat_irdvapppvo8_1517266104592_27, category=S, internalOrigin=tomcat_irdvapppvo8, externalOrigin=irdvapppvo8.back.tickets.com, name=null, languageCode=en, countryCode=IE, subAgencyCode=TDC, refererURL=http://irdvapppvo8.back.tickets.com/buy/MLBEventInfo, currentURL=http://irdvapppvo8.back.tickets.com/buy/PrimarySalesAjaxServlet]; UserResponse:[{\"success\":true,\"challenge_ts\":\"2018-01-29T22:48:23Z\",\"hostname\":\"irdvapppvo8.back.tickets.com\"}]",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch single sales link \r\n2. \t\nverify recaptcha badge is appearing in the availability page as expected\r\n3. Select seats under best available\nClick on Continue button under best available \r\n4. Capture API call via Chrome Dev tools/ capture Splunk log and Verify old reCaptcha modal does not open before navigating to Shopping Cart",
        "expected": "1. \t\nUser is landed on the availability page.\r\n2. reCaptcha is appearing as expected.\r\n3. Patron should be able to lock seats and proceed to cart page.\r\n4. old reCaptcha modal should not open before navigating to Shopping Cart.\n\nBelow log should be passed:\n[DEBUG] 29 Jan 2018 14:48:25 (ReCaptchaUtil.java:validateReCaptcha:109); Success; Browser: [Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36] ; IP Address: [10.20.37.21]; UserContext: [id=S_tomcat_irdvapppvo8_1517266104592_27, category=S, internalOrigin=tomcat_irdvapppvo8, externalOrigin=irdvapppvo8.back.tickets.com, name=null, languageCode=en, countryCode=IE, subAgencyCode=TDC, refererURL=http://irdvapppvo8.back.tickets.com/buy/MLBEventInfo, currentURL=http://irdvapppvo8.back.tickets.com/buy/PrimarySalesAjaxServlet]; UserResponse:[{\"success\":true,\"challenge_ts\":\"2018-01-29T22:48:23Z\",\"hostname\":\"irdvapppvo8.back.tickets.com\"}]"
      }
    ],
    "custom_jiras": "64.1"
  },
  {
    "id": 30692855,
    "title": "Verify the user is able to lock the seats in PVO Single sales via Pricescale flow with Bottom continue button",
    "section_id": 1685000,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-16698",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 13,
    "custom_is_automated": false,
    "custom_refs": "C151456",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set Recaptcha property - ON following the below steps:-\r\na. Launch the pokemon property site \r\nb.Input \"recaptcha.validation.enabled\" in the Filter By textbox and click on Filter button\r\nc.Verify whether the value of \"recaptcha.validation.enabled\" is true",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch single sales link \r\nExpected Result:\r\nPatron is landed on the availability page\r\n2. verify recaptcha badge is appearing in the availability page as expected\r\nExpected Result:\r\nreCaptcha is appearing as expected.\r\n3. Select seats via price scale\nClick on bottom Continue button under price scale\r\nExpected Result:\r\nPatron should be able to lock seats and proceed to cart page.\r\n4. Capture API call via Chrome Dev tools/ capture Splunk log and Verify old reCaptcha modal does not open before navigating to Shopping Cart\r\nExpected Result:\r\nold reCaptcha modal should not open before navigating to Shopping Cart.\n\nBelow log should be passed:\n[DEBUG] 29 Jan 2018 14:48:25 (ReCaptchaUtil.java:validateReCaptcha:109); Success; Browser: [Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36] ; IP Address: [10.20.37.21]; UserContext: [id=S_tomcat_irdvapppvo8_1517266104592_27, category=S, internalOrigin=tomcat_irdvapppvo8, externalOrigin=irdvapppvo8.back.tickets.com, name=null, languageCode=en, countryCode=IE, subAgencyCode=TDC, refererURL=http://irdvapppvo8.back.tickets.com/buy/MLBEventInfo, currentURL=http://irdvapppvo8.back.tickets.com/buy/PrimarySalesAjaxServlet]; UserResponse:[{\"success\":true,\"challenge_ts\":\"2018-01-29T22:48:23Z\",\"hostname\":\"irdvapppvo8.back.tickets.com\"}]",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch single sales link \r\n2. verify recaptcha badge is appearing in the availability page as expected\r\n3. Select seats via price scale\nClick on bottom Continue button under price scale\r\n4. Capture API call via Chrome Dev tools/ capture Splunk log and Verify old reCaptcha modal does not open before navigating to Shopping Cart",
        "expected": "1. Patron is landed on the availability page\r\n2. reCaptcha is appearing as expected.\r\n3. Patron should be able to lock seats and proceed to cart page.\r\n4. old reCaptcha modal should not open before navigating to Shopping Cart.\n\nBelow log should be passed:\n[DEBUG] 29 Jan 2018 14:48:25 (ReCaptchaUtil.java:validateReCaptcha:109); Success; Browser: [Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36] ; IP Address: [10.20.37.21]; UserContext: [id=S_tomcat_irdvapppvo8_1517266104592_27, category=S, internalOrigin=tomcat_irdvapppvo8, externalOrigin=irdvapppvo8.back.tickets.com, name=null, languageCode=en, countryCode=IE, subAgencyCode=TDC, refererURL=http://irdvapppvo8.back.tickets.com/buy/MLBEventInfo, currentURL=http://irdvapppvo8.back.tickets.com/buy/PrimarySalesAjaxServlet]; UserResponse:[{\"success\":true,\"challenge_ts\":\"2018-01-29T22:48:23Z\",\"hostname\":\"irdvapppvo8.back.tickets.com\"}]"
      }
    ],
    "custom_jiras": "64.1"
  },
  {
    "id": 30692856,
    "title": "Â Verify the user is able to lock the seats in PVO Single sales via Section flow.",
    "section_id": 1685000,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-16698",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 14,
    "custom_is_automated": false,
    "custom_refs": "C151457",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set Recaptcha property - ON following the below steps:-\r\na. Launch the pokemon property site \r\nb.Input \"recaptcha.validation.enabled\" in the Filter By textbox and click on Filter button\r\nc.Verify whether the value of \"recaptcha.validation.enabled\" is true",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch single sales link\r\nExpected Result:\r\nPatron should be able to lock seats\r\n2. verify recaptcha badge is appearing in the availability page as expected\r\nExpected Result:\r\nreCaptcha is appearing as expected.\r\n3. Select seats via section flow\nClick on Continue button under section\r\nExpected Result:\r\nPatron should be able to lock seats and proceed to cart page.\r\n4. Capture API call via Chrome Dev tools/ capture Splunk log and Verify old reCaptcha modal does not open before navigating to Shopping Cart\r\nExpected Result:\r\nold reCaptcha modal should not open before navigating to Shopping Cart.\n\nBelow log should be passed:\n[DEBUG] 29 Jan 2018 14:48:25 (ReCaptchaUtil.java:validateReCaptcha:109); Success; Browser: [Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36] ; IP Address: [10.20.37.21]; UserContext: [id=S_tomcat_irdvapppvo8_1517266104592_27, category=S, internalOrigin=tomcat_irdvapppvo8, externalOrigin=irdvapppvo8.back.tickets.com, name=null, languageCode=en, countryCode=IE, subAgencyCode=TDC, refererURL=http://irdvapppvo8.back.tickets.com/buy/MLBEventInfo, currentURL=http://irdvapppvo8.back.tickets.com/buy/PrimarySalesAjaxServlet]; UserResponse:[{\"success\":true,\"challenge_ts\":\"2018-01-29T22:48:23Z\",\"hostname\":\"irdvapppvo8.back.tickets.com\"}]",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch single sales link\r\n2. verify recaptcha badge is appearing in the availability page as expected\r\n3. Select seats via section flow\nClick on Continue button under section\r\n4. Capture API call via Chrome Dev tools/ capture Splunk log and Verify old reCaptcha modal does not open before navigating to Shopping Cart",
        "expected": "1. Patron should be able to lock seats\r\n2. reCaptcha is appearing as expected.\r\n3. Patron should be able to lock seats and proceed to cart page.\r\n4. old reCaptcha modal should not open before navigating to Shopping Cart.\n\nBelow log should be passed:\n[DEBUG] 29 Jan 2018 14:48:25 (ReCaptchaUtil.java:validateReCaptcha:109); Success; Browser: [Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36] ; IP Address: [10.20.37.21]; UserContext: [id=S_tomcat_irdvapppvo8_1517266104592_27, category=S, internalOrigin=tomcat_irdvapppvo8, externalOrigin=irdvapppvo8.back.tickets.com, name=null, languageCode=en, countryCode=IE, subAgencyCode=TDC, refererURL=http://irdvapppvo8.back.tickets.com/buy/MLBEventInfo, currentURL=http://irdvapppvo8.back.tickets.com/buy/PrimarySalesAjaxServlet]; UserResponse:[{\"success\":true,\"challenge_ts\":\"2018-01-29T22:48:23Z\",\"hostname\":\"irdvapppvo8.back.tickets.com\"}]"
      }
    ],
    "custom_jiras": "64.1"
  },
  {
    "id": 30692857,
    "title": "Verify the user is able to lock the seats in PVO Single sales via Best available- Price scale flow",
    "section_id": 1685000,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-16697",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 15,
    "custom_is_automated": false,
    "custom_refs": "C151458",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set Recaptcha property - ON following the below steps:-\r\na. Launch the pokemon property site \r\nb.Input \"recaptcha.validation.enabled\" in the Filter By textbox and click on Filter button\r\nc.Verify whether the value of \"recaptcha.validation.enabled\" is true",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch single sales link \r\nExpected Result:\r\nPatron is landed on the availability page\r\n2. verify recaptcha badge is appearing in the availability page as expected\r\nExpected Result:\r\nreCaptcha is appearing as expected.\r\n3. Select seats via best available flow\nClick on Continue button under best available\r\nExpected Result:\r\nPatron should be able to lock seats and proceed to cart page.\r\n4. Capture API call via Chrome Dev tools/ capture Splunk log and Verify old reCaptcha modal does not open before navigating to Shopping Cart\r\nExpected Result:\r\nold reCaptcha modal should not open before navigating to Shopping Cart.\n\nBelow log should be passed:\n[DEBUG] 29 Jan 2018 14:48:25 (ReCaptchaUtil.java:validateReCaptcha:109); Success; Browser: [Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36] ; IP Address: [10.20.37.21]; UserContext: [id=S_tomcat_irdvapppvo8_1517266104592_27, category=S, internalOrigin=tomcat_irdvapppvo8, externalOrigin=irdvapppvo8.back.tickets.com, name=null, languageCode=en, countryCode=IE, subAgencyCode=TDC, refererURL=http://irdvapppvo8.back.tickets.com/buy/MLBEventInfo, currentURL=http://irdvapppvo8.back.tickets.com/buy/PrimarySalesAjaxServlet]; UserResponse:[{\"success\":true,\"challenge_ts\":\"2018-01-29T22:48:23Z\",\"hostname\":\"irdvapppvo8.back.tickets.com\"}]\n\n\r\n5. Click on add button in the cart page and try to add tickets via price scale view for the same event\r\nExpected Result:\r\nnavigated to cart page again\r\n6. Capture API call via Chrome Dev tools/ capture Splunk log and Verify old reCaptcha modal does not open before navigating to Shopping Cart\r\nExpected Result:\r\nold reCaptcha modal should not open before navigating to Shopping Cart.\n\nBelow log should be passed:\n[DEBUG] 29 Jan 2018 14:48:25 (ReCaptchaUtil.java:validateReCaptcha:109); Success; Browser: [Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36] ; IP Address: [10.20.37.21]; UserContext: [id=S_tomcat_irdvapppvo8_1517266104592_27, category=S, internalOrigin=tomcat_irdvapppvo8, externalOrigin=irdvapppvo8.back.tickets.com, name=null, languageCode=en, countryCode=IE, subAgencyCode=TDC, refererURL=http://irdvapppvo8.back.tickets.com/buy/MLBEventInfo, currentURL=http://irdvapppvo8.back.tickets.com/buy/PrimarySalesAjaxServlet]; UserResponse:[{\"success\":true,\"challenge_ts\":\"2018-01-29T22:48:23Z\",\"hostname\":\"irdvapppvo8.back.tickets.com\"}]",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch single sales link \r\n2. verify recaptcha badge is appearing in the availability page as expected\r\n3. Select seats via best available flow\nClick on Continue button under best available\r\n4. Capture API call via Chrome Dev tools/ capture Splunk log and Verify old reCaptcha modal does not open before navigating to Shopping Cart\r\n5. Click on add button in the cart page and try to add tickets via price scale view for the same event\r\n6. Capture API call via Chrome Dev tools/ capture Splunk log and Verify old reCaptcha modal does not open before navigating to Shopping Cart",
        "expected": "1. Patron is landed on the availability page\r\n2. reCaptcha is appearing as expected.\r\n3. Patron should be able to lock seats and proceed to cart page.\r\n4. old reCaptcha modal should not open before navigating to Shopping Cart.\n\nBelow log should be passed:\n[DEBUG] 29 Jan 2018 14:48:25 (ReCaptchaUtil.java:validateReCaptcha:109); Success; Browser: [Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36] ; IP Address: [10.20.37.21]; UserContext: [id=S_tomcat_irdvapppvo8_1517266104592_27, category=S, internalOrigin=tomcat_irdvapppvo8, externalOrigin=irdvapppvo8.back.tickets.com, name=null, languageCode=en, countryCode=IE, subAgencyCode=TDC, refererURL=http://irdvapppvo8.back.tickets.com/buy/MLBEventInfo, currentURL=http://irdvapppvo8.back.tickets.com/buy/PrimarySalesAjaxServlet]; UserResponse:[{\"success\":true,\"challenge_ts\":\"2018-01-29T22:48:23Z\",\"hostname\":\"irdvapppvo8.back.tickets.com\"}]\n\n\r\n5. navigated to cart page again\r\n6. old reCaptcha modal should not open before navigating to Shopping Cart.\n\nBelow log should be passed:\n[DEBUG] 29 Jan 2018 14:48:25 (ReCaptchaUtil.java:validateReCaptcha:109); Success; Browser: [Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36] ; IP Address: [10.20.37.21]; UserContext: [id=S_tomcat_irdvapppvo8_1517266104592_27, category=S, internalOrigin=tomcat_irdvapppvo8, externalOrigin=irdvapppvo8.back.tickets.com, name=null, languageCode=en, countryCode=IE, subAgencyCode=TDC, refererURL=http://irdvapppvo8.back.tickets.com/buy/MLBEventInfo, currentURL=http://irdvapppvo8.back.tickets.com/buy/PrimarySalesAjaxServlet]; UserResponse:[{\"success\":true,\"challenge_ts\":\"2018-01-29T22:48:23Z\",\"hostname\":\"irdvapppvo8.back.tickets.com\"}]"
      }
    ],
    "custom_jiras": "64.1"
  },
  {
    "id": 30692858,
    "title": "Verify the user is able to lock the seats in PVO Single sales via Best available- Section flow",
    "section_id": 1685000,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-16697",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 16,
    "custom_is_automated": false,
    "custom_refs": "C151459",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set Recaptcha property - ON following the below steps:-\r\na. Launch the pokemon property site \r\nb.Input \"recaptcha.validation.enabled\" in the Filter By textbox and click on Filter button\r\nc.Verify whether the value of \"recaptcha.validation.enabled\" is true",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch single sales link \r\nExpected Result:\r\nPatron is landed on the availability page\r\n2. verify recaptcha badge is appearing in the availability page as expected\r\nExpected Result:\r\nreCaptcha is appearing as expected.\r\n3. Select seats via best available flow\nClick on Continue button under best available\r\nExpected Result:\r\nPatron should be able to lock seats and proceed to cart page.\r\n4. Capture API call via Chrome Dev tools/ capture Splunk log and Verify old reCaptcha modal does not open before navigating to Shopping Cart\r\nExpected Result:\r\nold reCaptcha modal should not open before navigating to Shopping Cart.\n\nBelow log should be passed:\n[DEBUG] 29 Jan 2018 14:48:25 (ReCaptchaUtil.java:validateReCaptcha:109); Success; Browser: [Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36] ; IP Address: [10.20.37.21]; UserContext: [id=S_tomcat_irdvapppvo8_1517266104592_27, category=S, internalOrigin=tomcat_irdvapppvo8, externalOrigin=irdvapppvo8.back.tickets.com, name=null, languageCode=en, countryCode=IE, subAgencyCode=TDC, refererURL=http://irdvapppvo8.back.tickets.com/buy/MLBEventInfo, currentURL=http://irdvapppvo8.back.tickets.com/buy/PrimarySalesAjaxServlet]; UserResponse:[{\"success\":true,\"challenge_ts\":\"2018-01-29T22:48:23Z\",\"hostname\":\"irdvapppvo8.back.tickets.com\"}]\n\n\r\n5. Click on add button in the cart page and try to add tickets via Section view for the same event\r\nExpected Result:\r\nnavigated to cart page again\r\n6. Capture API call via Chrome Dev tools/ capture Splunk log and Verify old reCaptcha modal does not open before navigating to Shopping Cart\r\nExpected Result:\r\nold reCaptcha modal should not open before navigating to Shopping Cart.\n\nBelow log should be passed:\n[DEBUG] 29 Jan 2018 14:48:25 (ReCaptchaUtil.java:validateReCaptcha:109); Success; Browser: [Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36] ; IP Address: [10.20.37.21]; UserContext: [id=S_tomcat_irdvapppvo8_1517266104592_27, category=S, internalOrigin=tomcat_irdvapppvo8, externalOrigin=irdvapppvo8.back.tickets.com, name=null, languageCode=en, countryCode=IE, subAgencyCode=TDC, refererURL=http://irdvapppvo8.back.tickets.com/buy/MLBEventInfo, currentURL=http://irdvapppvo8.back.tickets.com/buy/PrimarySalesAjaxServlet]; UserResponse:[{\"success\":true,\"challenge_ts\":\"2018-01-29T22:48:23Z\",\"hostname\":\"irdvapppvo8.back.tickets.com\"}]",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch single sales link \r\n2. verify recaptcha badge is appearing in the availability page as expected\r\n3. Select seats via best available flow\nClick on Continue button under best available\r\n4. Capture API call via Chrome Dev tools/ capture Splunk log and Verify old reCaptcha modal does not open before navigating to Shopping Cart\r\n5. Click on add button in the cart page and try to add tickets via Section view for the same event\r\n6. Capture API call via Chrome Dev tools/ capture Splunk log and Verify old reCaptcha modal does not open before navigating to Shopping Cart",
        "expected": "1. Patron is landed on the availability page\r\n2. reCaptcha is appearing as expected.\r\n3. Patron should be able to lock seats and proceed to cart page.\r\n4. old reCaptcha modal should not open before navigating to Shopping Cart.\n\nBelow log should be passed:\n[DEBUG] 29 Jan 2018 14:48:25 (ReCaptchaUtil.java:validateReCaptcha:109); Success; Browser: [Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36] ; IP Address: [10.20.37.21]; UserContext: [id=S_tomcat_irdvapppvo8_1517266104592_27, category=S, internalOrigin=tomcat_irdvapppvo8, externalOrigin=irdvapppvo8.back.tickets.com, name=null, languageCode=en, countryCode=IE, subAgencyCode=TDC, refererURL=http://irdvapppvo8.back.tickets.com/buy/MLBEventInfo, currentURL=http://irdvapppvo8.back.tickets.com/buy/PrimarySalesAjaxServlet]; UserResponse:[{\"success\":true,\"challenge_ts\":\"2018-01-29T22:48:23Z\",\"hostname\":\"irdvapppvo8.back.tickets.com\"}]\n\n\r\n5. navigated to cart page again\r\n6. old reCaptcha modal should not open before navigating to Shopping Cart.\n\nBelow log should be passed:\n[DEBUG] 29 Jan 2018 14:48:25 (ReCaptchaUtil.java:validateReCaptcha:109); Success; Browser: [Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36] ; IP Address: [10.20.37.21]; UserContext: [id=S_tomcat_irdvapppvo8_1517266104592_27, category=S, internalOrigin=tomcat_irdvapppvo8, externalOrigin=irdvapppvo8.back.tickets.com, name=null, languageCode=en, countryCode=IE, subAgencyCode=TDC, refererURL=http://irdvapppvo8.back.tickets.com/buy/MLBEventInfo, currentURL=http://irdvapppvo8.back.tickets.com/buy/PrimarySalesAjaxServlet]; UserResponse:[{\"success\":true,\"challenge_ts\":\"2018-01-29T22:48:23Z\",\"hostname\":\"irdvapppvo8.back.tickets.com\"}]"
      }
    ],
    "custom_jiras": "64.1"
  },
  {
    "id": 30692859,
    "title": "Verify user is not required to enter reCaptcha challenge for Bundle promotion flow",
    "section_id": 1685000,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PVO-16640",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 17,
    "custom_is_automated": false,
    "custom_refs": "C151460",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1. Confirm RECAPEN is not set (test default)\r\n2. Have Bundle promotion setup in place\r\n3.Set Recaptcha property - ON following the below steps:-\r\na. Launch the pokemon property site \r\nb.Input \"recaptcha.validation.enabled\" in the Filter By textbox and click on Filter button\r\nc.Verify whether the value of \"recaptcha.validation.enabled\" is true",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch single ticket url with bundle promotion set up\n\r\nExpected Result:\r\nAvailability page is displayed. \n\n\r\n2. Verify the reCaptcha badge is displayed\r\nExpected Result:\r\nRecaptcha badge is also displayed on Availability page\r\n3. Select seats from Bundle promotion and click Continue button of Promotion Section\r\nExpected Result:\r\nShopping cart page is displayed\r\n4. Verify call to reCaptcha is made on clicking Availabilty page Continue button \nCapture API call via Chrome Dev tools/ capture Splunk log\r\nExpected Result:\r\nCall to reCaptcha is made on clicking Availabilty page Continue button :\nBelow log should be passed:\n[DEBUG] 29 Jan 2018 14:48:25 (ReCaptchaUtil.java:validateReCaptcha:109); Success; Browser: [Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36] ; IP Address: [10.20.37.21]; UserContext: [id=S_tomcat_irdvapppvo8_1517266104592_27, category=S, internalOrigin=tomcat_irdvapppvo8, externalOrigin=irdvapppvo8.back.tickets.com, name=null, languageCode=en, countryCode=IE, subAgencyCode=TDC, refererURL=http://irdvapppvo8.back.tickets.com/buy/MLBEventInfo, currentURL=http://irdvapppvo8.back.tickets.com/buy/PrimarySalesAjaxServlet]; UserResponse:[{\"success\":true,\"challenge_ts\":\"2018-01-29T22:48:23Z\",\"hostname\":\"irdvapppvo8.back.tickets.com\"}]\r\n5. Verify old reCaptcha modal does not open before navigating to Shopping Cart\r\nExpected Result:\r\nOld reCaptcha modal does not open before navigating to Shopping Cart\r\n6. From the Cart click continue\r\nExpected Result:\r\nUser is landed on the Delivery Method Selection page\r\n7. Select Delivery Method and Continue\r\nExpected Result:\r\nUser is landed on Payment page\r\n8. \t\nEnter all required fields in the payment page.\nClick on BuyTickets button\r\nExpected Result:\r\nUser is landed on the confirmation page as expected.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch single ticket url with bundle promotion set up\n\r\n2. Verify the reCaptcha badge is displayed\r\n3. Select seats from Bundle promotion and click Continue button of Promotion Section\r\n4. Verify call to reCaptcha is made on clicking Availabilty page Continue button \nCapture API call via Chrome Dev tools/ capture Splunk log\r\n5. Verify old reCaptcha modal does not open before navigating to Shopping Cart\r\n6. From the Cart click continue\r\n7. Select Delivery Method and Continue\r\n8. \t\nEnter all required fields in the payment page.\nClick on BuyTickets button",
        "expected": "1. Availability page is displayed. \n\n\r\n2. Recaptcha badge is also displayed on Availability page\r\n3. Shopping cart page is displayed\r\n4. Call to reCaptcha is made on clicking Availabilty page Continue button :\nBelow log should be passed:\n[DEBUG] 29 Jan 2018 14:48:25 (ReCaptchaUtil.java:validateReCaptcha:109); Success; Browser: [Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36] ; IP Address: [10.20.37.21]; UserContext: [id=S_tomcat_irdvapppvo8_1517266104592_27, category=S, internalOrigin=tomcat_irdvapppvo8, externalOrigin=irdvapppvo8.back.tickets.com, name=null, languageCode=en, countryCode=IE, subAgencyCode=TDC, refererURL=http://irdvapppvo8.back.tickets.com/buy/MLBEventInfo, currentURL=http://irdvapppvo8.back.tickets.com/buy/PrimarySalesAjaxServlet]; UserResponse:[{\"success\":true,\"challenge_ts\":\"2018-01-29T22:48:23Z\",\"hostname\":\"irdvapppvo8.back.tickets.com\"}]\r\n5. Old reCaptcha modal does not open before navigating to Shopping Cart\r\n6. User is landed on the Delivery Method Selection page\r\n7. User is landed on Payment page\r\n8. User is landed on the confirmation page as expected."
      }
    ],
    "custom_jiras": null
  },
  {
    "id": 30692860,
    "title": "Verify the user is able to lock the Seats in single sales for language  code \"nl\" when reCaptcha turned on.",
    "section_id": 1685000,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-17230",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 18,
    "custom_is_automated": false,
    "custom_refs": "C151461",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Set DLNG and DCTY to NL\r\nMake Invisible Captcha property turned on",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the Link with language code -nl(Jaap Single sales link)\r\nExpected Result:\r\nLink should be launched successfully\r\n2. Verify the user is able to lock the seats\r\nExpected Result:\r\nNavigated to shopping cart page after recaptcha validation\r\n3. Complete the transaction\r\nExpected Result:\r\nTransaction should be completed successfully",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the Link with language code -nl(Jaap Single sales link)\r\n2. Verify the user is able to lock the seats\r\n3. Complete the transaction",
        "expected": "1. Link should be launched successfully\r\n2. Navigated to shopping cart page after recaptcha validation\r\n3. Transaction should be completed successfully"
      }
    ],
    "custom_jiras": "65.1"
  },
  {
    "id": 30692861,
    "title": "Verify the Best available lock is failing when \"recapToken\" not passed or invalid token in the invisible reCaptcha request",
    "section_id": 1685000,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-17774",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 19,
    "custom_is_automated": false,
    "custom_refs": "C151462",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Enable invisible ReCaptcha",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the Single sales Event URL\r\nExpected Result:\r\nLink should be launched successfully\r\n2. Select Seats from Best available\r\nExpected Result:\r\nSeats should be selected\r\n3. Go to Debug mode & remove \"recapToken\" from the Request\r\nExpected Result:\r\n\"recapToken\" should be removed from the Request\r\n4. Try to lock the seats\r\nExpected Result:\r\nError message should be obtained in the UI & splunk \r\n5. Now Input null value to the \"recapToken\" parameter\r\nExpected Result:\r\nNull value should be inputted to the \"recapToken\" parameter\r\n6. Try to lock the seats\r\nExpected Result:\r\nError message should be obtained in the UI & splunk \r\n7. Now Input junk value to the \"recapToken\" parameter\r\nExpected Result:\r\nJunk value should be inputted to the \"recapToken\" parameter\r\n8. Try to lock the seats\r\nExpected Result:\r\nError message should be obtained in the UI & splunk",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the Single sales Event URL\r\n2. Select Seats from Best available\r\n3. Go to Debug mode & remove \"recapToken\" from the Request\r\n4. Try to lock the seats\r\n5. Now Input null value to the \"recapToken\" parameter\r\n6. Try to lock the seats\r\n7. Now Input junk value to the \"recapToken\" parameter\r\n8. Try to lock the seats",
        "expected": "1. Link should be launched successfully\r\n2. Seats should be selected\r\n3. \"recapToken\" should be removed from the Request\r\n4. Error message should be obtained in the UI & splunk \r\n5. Null value should be inputted to the \"recapToken\" parameter\r\n6. Error message should be obtained in the UI & splunk \r\n7. Junk value should be inputted to the \"recapToken\" parameter\r\n8. Error message should be obtained in the UI & splunk"
      }
    ],
    "custom_jiras": "65.5"
  },
  {
    "id": 30692862,
    "title": "Verify TNSPay and 3Dsecure enabled transactions in PVM sites can be completed with master card with bin number 2",
    "section_id": 1685001,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14892",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C151463",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Enable SEC3DE and Enable TNSPay",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch PVM single sales link\r\nExpected Result:\r\nURL should be launched and user will be navigated to availability page\r\n2. Lock seats and navigate to cart page and Login using credentials\r\nExpected Result:\r\npatron logged in successfully\r\n3. In the Payment page with MSTR card with BIN \nnumber 2 and complete the transaction\r\nExpected Result:\r\nuser will be displayed with ACS emulator page\r\n4. click on submit button\r\nExpected Result:\r\nTransaction completed successfully\r\n5. [Barb]I asked PM about TNSPay testing \nand receivable more details. The \nenhancement is to ensure we pass the \ncorrect card number through PVO. \nElavon was ready with their changes to \nprocess the new cards and so we \ntested end-to-end. TDC was not \ncontacted by any of the TNSPay \nacquirers so we can assume their \nchanges are not ready, meaning testing \nwith a Master Card starting with a 2 may \nnot work. Mark let me know that no \nchanges were made in the \nTNSPay/3Dsecure flow. The changes \nwere to the payment page to allow a \nMasterCard with a beginning digit of 5 \nor 2. For 63.0 test TNSPay/3DSecure \nusing the same cards and confirm they \npass validation on the payment page.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PVM single sales link\r\n2. Lock seats and navigate to cart page and Login using credentials\r\n3. In the Payment page with MSTR card with BIN \nnumber 2 and complete the transaction\r\n4. click on submit button\r\n5. [Barb]I asked PM about TNSPay testing \nand receivable more details. The \nenhancement is to ensure we pass the \ncorrect card number through PVO. \nElavon was ready with their changes to \nprocess the new cards and so we \ntested end-to-end. TDC was not \ncontacted by any of the TNSPay \nacquirers so we can assume their \nchanges are not ready, meaning testing \nwith a Master Card starting with a 2 may \nnot work. Mark let me know that no \nchanges were made in the \nTNSPay/3Dsecure flow. The changes \nwere to the payment page to allow a \nMasterCard with a beginning digit of 5 \nor 2. For 63.0 test TNSPay/3DSecure \nusing the same cards and confirm they \npass validation on the payment page.",
        "expected": "1. URL should be launched and user will be navigated to availability page\r\n2. patron logged in successfully\r\n3. user will be displayed with ACS emulator page\r\n4. Transaction completed successfully\r\n5."
      }
    ],
    "custom_jiras": "54.1"
  },
  {
    "id": 30692863,
    "title": "Verify chelsea Buy membership flow can be completed using a MSTR card with BIN number 2",
    "section_id": 1685001,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14892",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C151464",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. launch Chelsea mytixx link and login as a valid user\r\nExpected Result:\r\nChelsea mytixx link should be launched and user logged in.\r\n2. click on Buy membership button\r\nExpected Result:\r\nUser will be navigated to payment page\r\n3. Add a new MSTR card with BIN number 2\r\nExpected Result:\r\nMSTR card with BIN number 2 added successfully\r\n4. Complete the transaction using the new card\r\nExpected Result:\r\nTransaction should be completed using that \ncard\r\n5. Log in to Mytickets account of the patron and \nconfirm the card is displayed in \nMyAccount->Payment Info page\r\nExpected Result:\r\nIn  MyAccount->Payment Info page Card should \nbe displayed\r\n6. Verify Patron_card_info table\r\nExpected Result:\r\nPatron_card_info table should be verified\r\n7. Verify PV digital wallet\r\nExpected Result:\r\nPV digital wallet should be verified",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. launch Chelsea mytixx link and login as a valid user\r\n2. click on Buy membership button\r\n3. Add a new MSTR card with BIN number 2\r\n4. Complete the transaction using the new card\r\n5. Log in to Mytickets account of the patron and \nconfirm the card is displayed in \nMyAccount->Payment Info page\r\n6. Verify Patron_card_info table\r\n7. Verify PV digital wallet",
        "expected": "1. Chelsea mytixx link should be launched and user logged in.\r\n2. User will be navigated to payment page\r\n3. MSTR card with BIN number 2 added successfully\r\n4. Transaction should be completed using that \ncard\r\n5. In  MyAccount->Payment Info page Card should \nbe displayed\r\n6. Patron_card_info table should be verified\r\n7. PV digital wallet should be verified"
      }
    ],
    "custom_jiras": "63"
  },
  {
    "id": 30692864,
    "title": "Verify chelsea renewals transaction can be completed using a MSTR card with BIN number 2",
    "section_id": 1685001,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14892",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C151465",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Chelsea mytixx link and log as a valid patron\r\nExpected Result:\r\nChelsea mytixx link should be launched\r\n2. Select the renewal item from To Do List and \nassign an Auto-renewal plan\r\nExpected Result:\r\nSelect the renewal item from To Do List and \nassign an Auto-renewal plan\r\n3. Navigate till payment page and add a new MSTR card with BIN 2\r\nExpected Result:\r\nNew MSTR card with BIN number 2 is added \r\n4. Complete the transaction using that card\r\nExpected Result:\r\nTransaction should be completed using that \ncard",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Chelsea mytixx link and log as a valid patron\r\n2. Select the renewal item from To Do List and \nassign an Auto-renewal plan\r\n3. Navigate till payment page and add a new MSTR card with BIN 2\r\n4. Complete the transaction using that card",
        "expected": "1. Chelsea mytixx link should be launched\r\n2. Select the renewal item from To Do List and \nassign an Auto-renewal plan\r\n3. New MSTR card with BIN number 2 is added \r\n4. Transaction should be completed using that \ncard"
      }
    ],
    "custom_jiras": "63"
  },
  {
    "id": 30692865,
    "title": "Verify chelsea single sales transaction can be completed using a MSTR card with BIN number 2",
    "section_id": 1685001,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14892",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C151466",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Chelsea Single sales link and lock seats\r\nExpected Result:\r\nChelsea Single sales link should be launched\r\n2. Login as a valid user\r\nExpected Result:\r\npatron logged in\r\n3. Navigate till Payment page and Add a new MSTR card with BIN number 2\r\nExpected Result:\r\nNew MSTR card with BIN number 2 added successfully\r\n4. Complete the transaction using the new card\r\nExpected Result:\r\nTransaction should be completed using that \ncard\r\n5. Log in to My tickets account of the patron and \nconfirm the card is displayed in \nMy Account->Payment Info page\r\nExpected Result:\r\nIn  MyAccount->Payment Info page Card should \nbe displayed\r\n6. Verify Patron_card_info table\r\nExpected Result:\r\nPatron_card_info table should be verified\r\n7. Verify PV digital wallet\r\nExpected Result:\r\nPV digital wallet should be verified",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Chelsea Single sales link and lock seats\r\n2. Login as a valid user\r\n3. Navigate till Payment page and Add a new MSTR card with BIN number 2\r\n4. Complete the transaction using the new card\r\n5. Log in to My tickets account of the patron and \nconfirm the card is displayed in \nMy Account->Payment Info page\r\n6. Verify Patron_card_info table\r\n7. Verify PV digital wallet",
        "expected": "1. Chelsea Single sales link should be launched\r\n2. patron logged in\r\n3. New MSTR card with BIN number 2 added successfully\r\n4. Transaction should be completed using that \ncard\r\n5. In  MyAccount->Payment Info page Card should \nbe displayed\r\n6. Patron_card_info table should be verified\r\n7. PV digital wallet should be verified"
      }
    ],
    "custom_jiras": "63"
  },
  {
    "id": 30692866,
    "title": "Verify digital wallet synching when deleting MSTR card with BIN Number 2  via Myaccount page",
    "section_id": 1685001,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14892",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C151467",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Have a patron with MSTR card BIN number 2",
    "custom_test_purpose": null,
    "custom_steps": "1. Log in to Mytickets account of an above patron\r\nExpected Result:\r\nMytickets link should be launched\r\n2. Go to Myaccount->Payment Info page\r\nExpected Result:\r\nGo to Myaccount->Payment Info page\r\n3. Click Remove button against the MSTR card with \nBIN number 2\r\nExpected Result:\r\nConfirmation modal will be displayed\r\n4. Click Yes button on the confirmation modal. Verify the removed card is disappeared from \nthe gird on UI\r\nExpected Result:\r\nRemoved card should be disappeared from \nthe gird on UI\r\n5. Verify MaintainPatron call with RemoveCard \naction\r\nExpected Result:\r\nMaintainPatron call should be verified with \nRemoveCard action\r\n6. Verify PV digital wallet and confirm the card \nis marked as 'Disabled' there\r\nExpected Result:\r\nIn PV digital wallet card should be marked as \n'Disabled' there\r\n7. Verify Patron_Card_Info table and confirm the \ncard details are removed\r\nExpected Result:\r\nIn Patron_Card_Info table  card details should be \nremoved",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Log in to Mytickets account of an above patron\r\n2. Go to Myaccount->Payment Info page\r\n3. Click Remove button against the MSTR card with \nBIN number 2\r\n4. Click Yes button on the confirmation modal. Verify the removed card is disappeared from \nthe gird on UI\r\n5. Verify MaintainPatron call with RemoveCard \naction\r\n6. Verify PV digital wallet and confirm the card \nis marked as 'Disabled' there\r\n7. Verify Patron_Card_Info table and confirm the \ncard details are removed",
        "expected": "1. Mytickets link should be launched\r\n2. Go to Myaccount->Payment Info page\r\n3. Confirmation modal will be displayed\r\n4. Removed card should be disappeared from \nthe gird on UI\r\n5. MaintainPatron call should be verified with \nRemoveCard action\r\n6. In PV digital wallet card should be marked as \n'Disabled' there\r\n7. In Patron_Card_Info table  card details should be \nremoved"
      }
    ],
    "custom_jiras": "63"
  },
  {
    "id": 30692867,
    "title": "Verify digital wallet synching when a new MSTR card with BIN Number 2 is added via Myaccount page",
    "section_id": 1685001,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14892",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C151468",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Log in to Mytickets account of a patron\r\nExpected Result:\r\nMytickets link should be launched\r\n2. Go to Myaccount->Payment Info page\r\nExpected Result:\r\nGo to Myaccount->Payment Info page\r\n3. Click Add new card button and Fill in the details of a MSTR card with BIN Number \n2 and click Save button\r\nExpected Result:\r\nNew MSTR card with BIN number 2 should be added\r\n4. Verify newly added card is shown in the grid \non UI\r\nExpected Result:\r\nNewly added card should shown in the grid on UI\r\n5. Verify MaintainPatron call with InsertCard action\r\nExpected Result:\r\nMaintainPatron call should be verified\r\n6. Verify PV digital wallet and confirm the card is \nshown there\r\nExpected Result:\r\nIn PV digital wallet the card should be shown\r\n7. Verify Patron_Card_Info table and confirm the \ncard is inserted\r\nExpected Result:\r\nIn Patron_Card_Info table card should be inserted",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Log in to Mytickets account of a patron\r\n2. Go to Myaccount->Payment Info page\r\n3. Click Add new card button and Fill in the details of a MSTR card with BIN Number \n2 and click Save button\r\n4. Verify newly added card is shown in the grid \non UI\r\n5. Verify MaintainPatron call with InsertCard action\r\n6. Verify PV digital wallet and confirm the card is \nshown there\r\n7. Verify Patron_Card_Info table and confirm the \ncard is inserted",
        "expected": "1. Mytickets link should be launched\r\n2. Go to Myaccount->Payment Info page\r\n3. New MSTR card with BIN number 2 should be added\r\n4. Newly added card should shown in the grid on UI\r\n5. MaintainPatron call should be verified\r\n6. In PV digital wallet the card should be shown\r\n7. In Patron_Card_Info table card should be inserted"
      }
    ],
    "custom_jiras": "63"
  },
  {
    "id": 30692868,
    "title": "Verify user can complete an Online voucher transaction using a MSTR card with BIN number 2",
    "section_id": 1685001,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14892",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_refs": "C151469",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Have a Mytickets patron who has a MSTR card with BIN number 2 on file",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Mytickets link and log in as a above \npatron\r\nExpected Result:\r\nMytickets link should be launched\r\n2. Navigate to Inventory page and Select redeem voucher option from tickets action dropdown and select few tickets and click on cotinue\r\nExpected Result:\r\nRedeem voucher page will be displayed\r\n3. Select target event\r\nExpected Result:\r\nUser will be navigated to availability page\r\n4. lock seat and navigate to cart page\r\nExpected Result:\r\nshopping cart page should be displayed\r\n5. Navigate till payment page and Select existing MSTR card with BIN 2\r\nExpected Result:\r\nMSTR card with BIN number 2 card selected \r\n6. Complete the transaction using that card\r\nExpected Result:\r\nTransaction should be completed using that \ncard",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Mytickets link and log in as a above \npatron\r\n2. Navigate to Inventory page and Select redeem voucher option from tickets action dropdown and select few tickets and click on cotinue\r\n3. Select target event\r\n4. lock seat and navigate to cart page\r\n5. Navigate till payment page and Select existing MSTR card with BIN 2\r\n6. Complete the transaction using that card",
        "expected": "1. Mytickets link should be launched\r\n2. Redeem voucher page will be displayed\r\n3. User will be navigated to availability page\r\n4. shopping cart page should be displayed\r\n5. MSTR card with BIN number 2 card selected \r\n6. Transaction should be completed using that \ncard"
      }
    ],
    "custom_jiras": "63"
  },
  {
    "id": 30692869,
    "title": "Verify user can complete an Online Exchange transaction using a MSTR card with BIN number 2",
    "section_id": 1685001,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14892",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_refs": "C151470",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Have a Mytickets patron who has a MSTR card \r\nwith BIN number 2 on file",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Mytickets link and log in as a above \npatron\r\nExpected Result:\r\nMytickets link should be launched\r\n2. Navigate to Inventory page and Select tickets and Exchange action\r\nExpected Result:\r\nUser will be navigated to target event page\r\n3. Select a target event\r\nExpected Result:\r\nuser will be navigated to ISM map page\r\n4. lock seats from map and navigate to cart page\r\nExpected Result:\r\nuser will be navigated to cart page\r\n5. Navigate till payment page and Select existing MSTR card with BIN 2\r\nExpected Result:\r\nMSTR card BIN number 2 card selected\r\n6. Complete the transaction using that card\r\nExpected Result:\r\nTransaction should be completed using that \ncard",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Mytickets link and log in as a above \npatron\r\n2. Navigate to Inventory page and Select tickets and Exchange action\r\n3. Select a target event\r\n4. lock seats from map and navigate to cart page\r\n5. Navigate till payment page and Select existing MSTR card with BIN 2\r\n6. Complete the transaction using that card",
        "expected": "1. Mytickets link should be launched\r\n2. User will be navigated to target event page\r\n3. user will be navigated to ISM map page\r\n4. user will be navigated to cart page\r\n5. MSTR card BIN number 2 card selected\r\n6. Transaction should be completed using that \ncard"
      }
    ],
    "custom_jiras": "63"
  },
  {
    "id": 30692870,
    "title": "Verify user is able to complete a non-auto-renewal transaction using a MSTR card with BIN number 2",
    "section_id": 1685001,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14892",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 9,
    "custom_is_automated": false,
    "custom_refs": "C151471",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Have a Mytickets patron who has a MSTR card with BIN number 2 on file\r\nCreate receivable/reservation transaction in pv\r\nPatron should have one renewal item in To Do List",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Mytickets link and log in as a above \npatron\r\nExpected Result:\r\nMytickets link should be launched\r\n2. Select the renewal item from To Do List and \nassign an non Auto-renewal plan\r\nExpected Result:\r\nRenewal item should be selected from To Do List \nand assign an non Auto-renewal plan\r\n3. Navigate till payment page\r\nExpected Result:\r\npayment page should be reached\r\n4. Select existing MSTR card with BIN 2\r\nExpected Result:\r\nSelected existing MSTR card with BIN 2\r\n5. Complete the transaction using that card\r\nExpected Result:\r\nTransaction should be completed using that \ncard",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Mytickets link and log in as a above \npatron\r\n2. Select the renewal item from To Do List and \nassign an non Auto-renewal plan\r\n3. Navigate till payment page\r\n4. Select existing MSTR card with BIN 2\r\n5. Complete the transaction using that card",
        "expected": "1. Mytickets link should be launched\r\n2. Renewal item should be selected from To Do List \nand assign an non Auto-renewal plan\r\n3. payment page should be reached\r\n4. Selected existing MSTR card with BIN 2\r\n5. Transaction should be completed using that \ncard"
      }
    ],
    "custom_jiras": "63"
  },
  {
    "id": 30692871,
    "title": "Verify user is able to complete a Single sales transaction using a MSTR card with BIN number 2",
    "section_id": 1685001,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14892",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 10,
    "custom_is_automated": false,
    "custom_refs": "C151472",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Single sales link and lock seats\r\nExpected Result:\r\nSingle sales link should be launched\r\n2. Navigate till Payment page\r\nExpected Result:\r\nPayment page should be reached\r\n3. Select/Add existing MSTR card with BIN 2\r\nExpected Result:\r\nSelect/Add existing MSTR card with BIN 2\r\n4. Complete the transaction using that card\r\nExpected Result:\r\ntransaction should be completed using that \ncard\r\n5. Verify card number in logs and DB\r\nExpected Result:\r\nThe last four digits of card number should be passed in logs and the card number should be encrypted in DB.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Single sales link and lock seats\r\n2. Navigate till Payment page\r\n3. Select/Add existing MSTR card with BIN 2\r\n4. Complete the transaction using that card\r\n5. Verify card number in logs and DB",
        "expected": "1. Single sales link should be launched\r\n2. Payment page should be reached\r\n3. Select/Add existing MSTR card with BIN 2\r\n4. transaction should be completed using that \ncard\r\n5. The last four digits of card number should be passed in logs and the card number should be encrypted in DB."
      }
    ],
    "custom_jiras": "63"
  },
  {
    "id": 30692872,
    "title": "Verify changing shipping address from PayPal and ensure that updated shipping address is getting reflected as Patron Address for a new Patron after completing PayPal transaction",
    "section_id": 1685002,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-16347",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C151473",
    "custom_pvo_pvodc_category": 13,
    "custom_pvocodelines": null,
    "custom_preconds": "Set supplier_payment_type for PAYP with the matching payment type code used in PV..",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Single sales,select seats  and continue till payment page as user Email: ticketsCredit20K@gmail.com, Password: testabc123\r\nExpected Result:\r\nPatron should reach on Payment page.\r\n2. Click on PayPal  as payment method and ensure that PayPal radio button is selected and  Address modal is not displayed on clicking on PayPal radio button.  \n\n\n\n\r\nExpected Result:\r\nPayPal radio button should be selected and  Address modal should  not be displayed on clicking on PayPal radio button.  \r\n3. Verify that the PayPal details table got deleted from the Payment page\r\nExpected Result:\r\nThe PayPal details table should be deleted from the Payment page\r\n4. Verify that PPALMSGT default message got displayed under payment types\r\nExpected Result:\r\nPPALMSGT default message should be displayed under payment types\r\n5. Verify that PayPal button is displayed at bottom of payment page instead of buy tickets button.\r\nExpected Result:\r\nPayPal button should be displayed at bottom of payment page instead of buy tickets button.\r\n6. change the shipping address in Patron Address modal\r\nExpected Result:\r\nPatron should be able to change the shipping address.\r\n7. Complete the transaction\r\nExpected Result:\r\nTransaction should be completed.\r\n8. Ensure that Patron Address in PVO DB and PV\r\nExpected Result:\r\nPatron Address should be \n\n![](index.php?/attachments/get/2615)\n\r\n9. Verify Patron Address table and ensure that the new shipping address data from PayPal is popluated in Patron Address table.\r\nExpected Result:\r\nThe new shipping address data from PayPal should be populated in Patron Address table.\r\n10. Verif Account in PV and ensure that new shipping address data frm PayPal is populated .\r\nExpected Result:\r\nNew shipping address data from PayPal should be populated .",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Single sales,select seats  and continue till payment page as user Email: ticketsCredit20K@gmail.com, Password: testabc123\r\n2. Click on PayPal  as payment method and ensure that PayPal radio button is selected and  Address modal is not displayed on clicking on PayPal radio button.  \n\n\n\n\r\n3. Verify that the PayPal details table got deleted from the Payment page\r\n4. Verify that PPALMSGT default message got displayed under payment types\r\n5. Verify that PayPal button is displayed at bottom of payment page instead of buy tickets button.\r\n6. change the shipping address in Patron Address modal\r\n7. Complete the transaction\r\n8. Ensure that Patron Address in PVO DB and PV\r\n9. Verify Patron Address table and ensure that the new shipping address data from PayPal is popluated in Patron Address table.\r\n10. Verif Account in PV and ensure that new shipping address data frm PayPal is populated .",
        "expected": "1. Patron should reach on Payment page.\r\n2. PayPal radio button should be selected and  Address modal should  not be displayed on clicking on PayPal radio button.  \r\n3. The PayPal details table should be deleted from the Payment page\r\n4. PPALMSGT default message should be displayed under payment types\r\n5. PayPal button should be displayed at bottom of payment page instead of buy tickets button.\r\n6. Patron should be able to change the shipping address.\r\n7. Transaction should be completed.\r\n8. Patron Address should be \n\n![](index.php?/attachments/get/2615)\n\r\n9. The new shipping address data from PayPal should be populated in Patron Address table.\r\n10. New shipping address data from PayPal should be populated ."
      }
    ],
    "custom_jiras": "65"
  },
  {
    "id": 30692873,
    "title": "Verify patron  record in DB have first name, last name etc. for the mlbam: record for a new patron after completing PayPal Credit Transaction",
    "section_id": 1685002,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-16347",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C151474",
    "custom_pvo_pvodc_category": 13,
    "custom_pvocodelines": null,
    "custom_preconds": "Set supplier_payment_type for PAYP with the matching payment type code used in PV.",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Single sales,select seats  and continue till payment page as new user \r\nExpected Result:\r\nPatron should reach on Payment page.\r\n2. Click on PayPal  as payment method and ensure that PayPal radio button is selected and  Address modal is not displayed on clicking on PayPal radio button.  \n\n\n\n\r\nExpected Result:\r\nPayPal radio button should be selected and  Address modal should  not be displayed on clicking on PayPal radio button.  \r\n3. Verify that the PayPal details table got deleted from the Payment page\r\nExpected Result:\r\nThe PayPal details table should be deleted from the Payment page\r\n4. Verify that PPALMSGT default message got displayed under payment types\r\nExpected Result:\r\nPPALMSGT default message should be displayed under payment types\r\n5. Verify that PayPal button is displayed at bottom of payment page instead of buy tickets button.\r\nExpected Result:\r\nPayPal button should be displayed at bottom of payment page instead of buy tickets button.\r\n6. change the shipping address in Patron Address modal\r\nExpected Result:\r\nPatron should be able to change the shipping address.\r\n7. Complete the transaction\r\nExpected Result:\r\nTransaction should be completed.\r\n8. Ensure the  first name, last name etc for the mlbam: record for the new patron after completing PayPal Credit Transaction  PVO DB and PV \r\nExpected Result:\r\nPatron record should display first name, last name correctly in DB",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Single sales,select seats  and continue till payment page as new user \r\n2. Click on PayPal  as payment method and ensure that PayPal radio button is selected and  Address modal is not displayed on clicking on PayPal radio button.  \n\n\n\n\r\n3. Verify that the PayPal details table got deleted from the Payment page\r\n4. Verify that PPALMSGT default message got displayed under payment types\r\n5. Verify that PayPal button is displayed at bottom of payment page instead of buy tickets button.\r\n6. change the shipping address in Patron Address modal\r\n7. Complete the transaction\r\n8. Ensure the  first name, last name etc for the mlbam: record for the new patron after completing PayPal Credit Transaction  PVO DB and PV",
        "expected": "1. Patron should reach on Payment page.\r\n2. PayPal radio button should be selected and  Address modal should  not be displayed on clicking on PayPal radio button.  \r\n3. The PayPal details table should be deleted from the Payment page\r\n4. PPALMSGT default message should be displayed under payment types\r\n5. PayPal button should be displayed at bottom of payment page instead of buy tickets button.\r\n6. Patron should be able to change the shipping address.\r\n7. Transaction should be completed.\r\n8. Patron record should display first name, last name correctly in DB"
      }
    ],
    "custom_jiras": "65"
  },
  {
    "id": 30692874,
    "title": "Verify that if Split delivery is turned OFF and zero dollar tickets are selected with zero disposition, clicking \"PayPal\" button returns an error - You cannot select PayPal as no payment needs to be made",
    "section_id": 1685002,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-16347",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C151475",
    "custom_pvo_pvodc_category": 13,
    "custom_pvocodelines": null,
    "custom_preconds": "Set PAYPCRDT to true\r\nSet SPLITDE to False",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Single sales and login \r\nExpected Result:\r\nSingle sales should launched successfully \r\n2. Select a Comp ticket (order total amount is zero.)\r\nExpected Result:\r\nSelect a Comp ticket (order total amount is zero.)\r\n3. Continue till payment page \r\nExpected Result:\r\nPatron should reach on Payment page.\r\n4. Ensure that if Split delivery is turned OFF and zero dollar tickets are selected with zero disposition, clicking \"PayPal\" button returns an error - You cannot select PayPal as no payment needs to be made\n\n\n\n\r\nExpected Result:\r\nPatron  cannot select PayPal as no payment needs to be made",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Single sales and login \r\n2. Select a Comp ticket (order total amount is zero.)\r\n3. Continue till payment page \r\n4. Ensure that if Split delivery is turned OFF and zero dollar tickets are selected with zero disposition, clicking \"PayPal\" button returns an error - You cannot select PayPal as no payment needs to be made",
        "expected": "1. Single sales should launched successfully \r\n2. Select a Comp ticket (order total amount is zero.)\r\n3. Patron should reach on Payment page.\r\n4. Patron  cannot select PayPal as no payment needs to be made"
      }
    ],
    "custom_jiras": "65"
  },
  {
    "id": 30692875,
    "title": "Verify PVO sending the currency code from order details after PayPal Credit transaction when paypal.allow.future.payments  set to false",
    "section_id": 1685002,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14806",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C151476",
    "custom_pvo_pvodc_category": 13,
    "custom_pvocodelines": null,
    "custom_preconds": "Set paypal.allow.future.payments  set to false\r\nEnable PayPal and PayPal Credit in Supplier\r\nNote down the currency code set in the supplier.",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the Single sales URL\r\nExpected Result:\r\nLink should be launched successfully\r\n2. Lock Seats and Navigate to payment Page.\r\nExpected Result:\r\nPayment page should be displayed\r\n3. Verify the PayPal and PayPal credit buttons are available\r\nExpected Result:\r\nPayPal and PayPal credit buttons should be available\r\n4. Select PayPal radio button and complete the details in Payment modal- Submit\r\nExpected Result:\r\nPayment details should be submitted successfully\r\n5. Click on PayPal checkout button and complete the Transaction\r\nExpected Result:\r\nTransaction should be completed successfully\r\n6. Verify the Order details in Sell Seats call \r\nExpected Result:\r\nOrder details should be verified in the Sell Seats call\r\n7. Verify the request send from PVO to PayPal pass the parameters \"Amount\" and \"Currency\" when requesting the noonceand ensure the currency code is same which we set in the supplier\r\nExpected Result:\r\nCurrency code should be displayed as expected\r\n8. Verify the PVO Order details in order table in DB and PV\r\nExpected Result:\r\nOrder details should be verified in the order table in DB and PV",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the Single sales URL\r\n2. Lock Seats and Navigate to payment Page.\r\n3. Verify the PayPal and PayPal credit buttons are available\r\n4. Select PayPal radio button and complete the details in Payment modal- Submit\r\n5. Click on PayPal checkout button and complete the Transaction\r\n6. Verify the Order details in Sell Seats call \r\n7. Verify the request send from PVO to PayPal pass the parameters \"Amount\" and \"Currency\" when requesting the noonceand ensure the currency code is same which we set in the supplier\r\n8. Verify the PVO Order details in order table in DB and PV",
        "expected": "1. Link should be launched successfully\r\n2. Payment page should be displayed\r\n3. PayPal and PayPal credit buttons should be available\r\n4. Payment details should be submitted successfully\r\n5. Transaction should be completed successfully\r\n6. Order details should be verified in the Sell Seats call\r\n7. Currency code should be displayed as expected\r\n8. Order details should be verified in the order table in DB and PV"
      }
    ],
    "custom_jiras": null
  },
  {
    "id": 30692876,
    "title": "Verify PVO sends Currency code from order, amount and SingleUse to Paypal if  paypalcredit.allow.future.payments not set, SPLITE is ON and payment done via Paypal Credit.",
    "section_id": 1685002,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14806",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C151477",
    "custom_pvo_pvodc_category": 13,
    "custom_pvocodelines": null,
    "custom_preconds": "Do not set paypalcredit.allow.future.payments \r\nEnable PayPal and PayPal Credit in Supplier\r\nNote down the currency code set in the supplier.\r\nMake SPLITDE- true",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the Single sales URL\r\nExpected Result:\r\nLink should be launched successfully\r\n2. Lock Seats for Multiple events and Navigate to payment Page.\r\nExpected Result:\r\nPayment page should be displayed\r\n3. Verify the PayPal and PayPal credit buttons are available\r\nExpected Result:\r\nPayPal and PayPal credit buttons should be available\r\n4. Select PayPal credit radio button and complete the details in Payment modal - Submit-Verify the Payment Page UI for look and feel of Paypal supplied images\r\nExpected Result:\r\nLook and feel of Paypal supplied images should be as expected\r\n5. Click on PayPal Credit checkout button and Verify the request send from PVO to PayPal pass the parameters \"Amount\" and \"Currency\" when requesting the noonce and ensure the currency code is same which we set in the supplier \r\nExpected Result:\r\n\"Amount\" and \"Currency\" should be displayed\r\n6. Verify Singleuse node value\r\nExpected Result:\r\nThe value should be true\r\n7. Complete the Transaction\r\nExpected Result:\r\nTransaction should be completed successfully\r\n8. Verify the Order details in Sell Seats call \r\nExpected Result:\r\nOrder details should be verified in the Sell Seats call\r\n9. Verify the PVO Order details in order table in DB and PV\r\nExpected Result:\r\nOrder details should be verified in the order table in DB and PV",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the Single sales URL\r\n2. Lock Seats for Multiple events and Navigate to payment Page.\r\n3. Verify the PayPal and PayPal credit buttons are available\r\n4. Select PayPal credit radio button and complete the details in Payment modal - Submit-Verify the Payment Page UI for look and feel of Paypal supplied images\r\n5. Click on PayPal Credit checkout button and Verify the request send from PVO to PayPal pass the parameters \"Amount\" and \"Currency\" when requesting the noonce and ensure the currency code is same which we set in the supplier \r\n6. Verify Singleuse node value\r\n7. Complete the Transaction\r\n8. Verify the Order details in Sell Seats call \r\n9. Verify the PVO Order details in order table in DB and PV",
        "expected": "1. Link should be launched successfully\r\n2. Payment page should be displayed\r\n3. PayPal and PayPal credit buttons should be available\r\n4. Look and feel of Paypal supplied images should be as expected\r\n5. \"Amount\" and \"Currency\" should be displayed\r\n6. The value should be true\r\n7. Transaction should be completed successfully\r\n8. Order details should be verified in the Sell Seats call\r\n9. Order details should be verified in the order table in DB and PV"
      }
    ],
    "custom_jiras": "65"
  },
  {
    "id": 30692877,
    "title": "Verify Paypal credit button appears on MLB Renewals payment page and user can use it for payment if PAYPCRDT is not set",
    "section_id": 1685002,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-17771",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C151478",
    "custom_pvo_pvodc_category": 13,
    "custom_pvocodelines": null,
    "custom_preconds": "1. PAYPCRDT should not be set in any level\r\n2. Make sure PayPal Integration is enabled in Supplier & PV\r\n3. Have renewable orders for a Patron",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Mytickets & Login as above Patron\r\nExpected Result:\r\nLogin should be successfull\r\n2. Navigate to To Do List\r\nExpected Result:\r\nRenewal orders should be displayed\r\n3. Choose order from To Do list, Select Pay in full Payment plan and click on Renew\r\nExpected Result:\r\nShopping cart should be displayed\r\n4. Select a delivery method and click on Continue\r\nExpected Result:\r\nPayment page should be displayed\r\n5. Verify the PayPal credit option in UI and nonce in the source code\r\nExpected Result:\r\nPayPal credit option should be displayed in UI and nonce in the source code\r\n6. Select Paypal Credit and complete the transaction\r\nExpected Result:\r\nTransaction should be completed successfully",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Mytickets & Login as above Patron\r\n2. Navigate to To Do List\r\n3. Choose order from To Do list, Select Pay in full Payment plan and click on Renew\r\n4. Select a delivery method and click on Continue\r\n5. Verify the PayPal credit option in UI and nonce in the source code\r\n6. Select Paypal Credit and complete the transaction",
        "expected": "1. Login should be successfull\r\n2. Renewal orders should be displayed\r\n3. Shopping cart should be displayed\r\n4. Payment page should be displayed\r\n5. PayPal credit option should be displayed in UI and nonce in the source code\r\n6. Transaction should be completed successfully"
      }
    ],
    "custom_jiras": "65.5"
  },
  {
    "id": 30692878,
    "title": "Verify Paypal credit button appears on MLB single sales payment page and user can use it for payment if PAYPCRDT is not set",
    "section_id": 1685002,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-17771",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_refs": "C151479",
    "custom_pvo_pvodc_category": 13,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Paypal credit config should be in place\r\n2.Do not set PAYPCRDT textcode at any levels",
    "custom_test_purpose": null,
    "custom_steps": "1. .Launch MLB single sales link\r\nExpected Result:\r\nCalendar page is displayed\r\n2. Select an event by clicking T link against the event\r\nExpected Result:\r\nUser is navigated to Availability page of the event\r\n3. Select number of tickets and click Continue button\r\nExpected Result:\r\nShopping cart is shown\r\n4. Click Continue button on the cart\r\nExpected Result:\r\nLogin modal is opened\r\n5. Fill in the login credentials of an existing user and click Log in button\r\nExpected Result:\r\nUser is navigated to payment page\r\n6. Verify in the payment page that, Paypal credit button is displayed\r\nExpected Result:\r\nPaypal credit button is displayed on the payment page\r\n7. Choose the Paypal credit button\r\nExpected Result:\r\nUser is able to select the paypal credit button\r\n8. Fill in all other required fields on the payment page and click on Paypal credit button at the bottom side of the page\r\nExpected Result:\r\nPaypal modal is opened\r\n9. Log in to Paypal\r\nExpected Result:\r\nUser is logged in\r\n10. Choose Pay with-Paypal credit and continue\r\nExpected Result:\r\nUser is navigated back to PVO with a confirmation modal\r\n11. Click Buy Tickets button\r\nExpected Result:\r\nUser is navigated to confirmation page",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. .Launch MLB single sales link\r\n2. Select an event by clicking T link against the event\r\n3. Select number of tickets and click Continue button\r\n4. Click Continue button on the cart\r\n5. Fill in the login credentials of an existing user and click Log in button\r\n6. Verify in the payment page that, Paypal credit button is displayed\r\n7. Choose the Paypal credit button\r\n8. Fill in all other required fields on the payment page and click on Paypal credit button at the bottom side of the page\r\n9. Log in to Paypal\r\n10. Choose Pay with-Paypal credit and continue\r\n11. Click Buy Tickets button",
        "expected": "1. Calendar page is displayed\r\n2. User is navigated to Availability page of the event\r\n3. Shopping cart is shown\r\n4. Login modal is opened\r\n5. User is navigated to payment page\r\n6. Paypal credit button is displayed on the payment page\r\n7. User is able to select the paypal credit button\r\n8. Paypal modal is opened\r\n9. User is logged in\r\n10. User is navigated back to PVO with a confirmation modal\r\n11. User is navigated to confirmation page"
      }
    ],
    "custom_jiras": null
  },
  {
    "id": 30692879,
    "title": "Verify FB ?Like?, Twitter ?Tweet?, Pinterest ?Pin It? and Google ?G+1? buttons are displayed in the upper right corner of the GPL Availability page, right underneath the header.",
    "section_id": 1685003,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-16170",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C151480",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Prerequisite:\r\nEnable FB,Twitter, Pinterest and Google+ \r\nintegrations\nLaunch GPL single sales link\nVerify  FB ?Like?, Twitter ?Tweet?, Pinterest \r\n?Pin It? and Google ?G+1? buttons are \r\ndisplayed in the upper right corner of the  \r\nAvailability page, right underneath the header",
    "custom_test_purpose": null,
    "custom_steps": "1. Step 1\r\nExpected Result:\r\nPre-requisite should be met.\r\n2. Step 2\r\nExpected Result:\r\nEvent should be launched.\r\n3. Step 3\r\nExpected Result:\r\nFB ?Like?, Twitter ?Tweet?, Pinterest ?Pin It? and \r\nGoogle ?G+1? buttons are displayed in the upper \r\nright corner of the  Availability page, right \r\nunderneath the header",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Step 1\r\n2. Step 2\r\n3. Step 3",
        "expected": "1. Pre-requisite should be met.\r\n2. Event should be launched.\r\n3. FB ?Like?, Twitter ?Tweet?, Pinterest ?Pin It? and \r\nGoogle ?G+1? buttons are displayed in the upper \r\nright corner of the  Availability page, right \r\nunderneath the header"
      }
    ],
    "custom_jiras": "64.1"
  },
  {
    "id": 30692880,
    "title": "Verify completing an End to End transaction after connecting to Pinterest",
    "section_id": 1685003,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15260",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C151481",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Set the text codes to enable Pinterest connection\nLaunch the event\nClick on Pinterest connect button and login into Pinterest as an existing registered user\nVerify that the friends activity is listed.\nSelect a ticket and reach on shopping cart.\nLogin as an existing patron & reach on Payment page\nVerify that Pinterest connection is retained in Payment page & friends activity is listed.\nComplete the transaction.\nVerify that Pinterest connection is retained in confirmation page & friends activity is listed.\nVerify that the purchased ticket got in Pinterest.\nEnsure the above patron's ticket purchase is listed in friends activity section for other patrons who added the logged in \r\npatron as a friend.",
    "custom_test_purpose": null,
    "custom_steps": "1. Step 1\r\nExpected Result:\r\nTextcode should be set\r\n2. Step 2\r\nExpected Result:\r\nEvent launched\r\n3. Step 3\r\nExpected Result:\r\nLogged into Pinterest as an existing user\r\n4. Step 4\r\nExpected Result:\r\nThe friends activity is listed.\r\n5. Step 5\r\nExpected Result:\r\nShopping cart page should get displayed\r\n6. Step 6\r\nExpected Result:\r\nPayment page should get displayed.\r\n7. Step 7\r\nExpected Result:\r\nPinterest connection is retained in Payment page & friends activity is listed.\r\n8. Step 8\r\nExpected Result:\r\nTransaction completed.\r\n9. Step 9\r\nExpected Result:\r\nPinterest connection is retained in confirmation page & friends activity is listed.\r\n10. Step 10\r\nExpected Result:\r\nThe purchased ticket got in Pinterest.\r\n11. Step 11\r\nExpected Result:\r\nAbove patron's ticket purchase is listed in friends activity section for other patrons who added the logged in patron as \r\na friend.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Step 1\r\n2. Step 2\r\n3. Step 3\r\n4. Step 4\r\n5. Step 5\r\n6. Step 6\r\n7. Step 7\r\n8. Step 8\r\n9. Step 9\r\n10. Step 10\r\n11. Step 11",
        "expected": "1. Textcode should be set\r\n2. Event launched\r\n3. Logged into Pinterest as an existing user\r\n4. The friends activity is listed.\r\n5. Shopping cart page should get displayed\r\n6. Payment page should get displayed.\r\n7. Pinterest connection is retained in Payment page & friends activity is listed.\r\n8. Transaction completed.\r\n9. Pinterest connection is retained in confirmation page & friends activity is listed.\r\n10. The purchased ticket got in Pinterest.\r\n11. Above patron's ticket purchase is listed in friends activity section for other patrons who added the logged in patron as \r\na friend."
      }
    ],
    "custom_jiras": "63"
  },
  {
    "id": 30692881,
    "title": "Verify completing an End to End transaction after connecting to Twitter",
    "section_id": 1685003,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15260",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C151482",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Set the text codes to enable Twitter connection\nLaunch the event\nClick on Twitter connect button and login into Twitter as an existing registered user\nVerify that the friends activity is listed.\nSelect a ticket and reach on shopping cart.\nLogin as an existing patron & reach on Payment page\nVerify that Twitter connection is retained in Payment page & friends activity is listed.\nComplete the transaction.\nVerify that Twitter connection is retained in confirmation page & friends activity is listed.\nVerify that the purchased ticket got in Twitter.\nEnsure the above patron's ticket purchase is listed in friends activity section for other patrons who added the logged in \r\npatron as a friend.",
    "custom_test_purpose": null,
    "custom_steps": "1. Step 1\r\nExpected Result:\r\nText code should be set.\r\n2. Step 2\r\nExpected Result:\r\nEvent Launched.\r\n3. Step 3\r\nExpected Result:\r\nUser logged into Twitter.\r\n4. Step 4\r\nExpected Result:\r\nThe friends activity is listed.\r\n5. Step 5\r\nExpected Result:\r\nShopping cart page should get displayed.\r\n6. Step 6\r\nExpected Result:\r\nPayment page should get displayed.\r\n7. Step 7\r\nExpected Result:\r\nTwitter connection is retained in Payment page & friends activity is listed.\r\n8. Step 8\r\nExpected Result:\r\nTransaction completed.\r\n9. Step 9\r\nExpected Result:\r\nTwitter connection is retained in confirmation page & friends activity is listed.\r\n10. Step 10\r\nExpected Result:\r\nThe purchased ticket got in Twitter.\r\n11. Step 11\r\nExpected Result:\r\nAbove patron's ticket purchase is listed in friends activity section for other patrons who added the logged in patron as \r\na friend.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Step 1\r\n2. Step 2\r\n3. Step 3\r\n4. Step 4\r\n5. Step 5\r\n6. Step 6\r\n7. Step 7\r\n8. Step 8\r\n9. Step 9\r\n10. Step 10\r\n11. Step 11",
        "expected": "1. Text code should be set.\r\n2. Event Launched.\r\n3. User logged into Twitter.\r\n4. The friends activity is listed.\r\n5. Shopping cart page should get displayed.\r\n6. Payment page should get displayed.\r\n7. Twitter connection is retained in Payment page & friends activity is listed.\r\n8. Transaction completed.\r\n9. Twitter connection is retained in confirmation page & friends activity is listed.\r\n10. The purchased ticket got in Twitter.\r\n11. Above patron's ticket purchase is listed in friends activity section for other patrons who added the logged in patron as \r\na friend."
      }
    ],
    "custom_jiras": "63"
  },
  {
    "id": 30692882,
    "title": "Verify completing an End to End transaction after connecting to Google Plus",
    "section_id": 1685003,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15260",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C151483",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Set the text codes to enable Google Plus connection\nLaunch the event\nClick on Google Plus connect button and login into google plus as an existing registered user\nVerify that the friends activity is listed.\nSelect a ticket and reach on shopping cart.\nLogin as an existing patron & reach on Payment page\nVerify that Google Plus connection is retained in Payment page & friends activity is listed.\nComplete the transaction.\nVerify that Google Plus connection is retained in confirmation page & friends activity is listed.\nVerify that the purchased ticket got in Google Plus.\nEnsure the above patron's ticket purchase is listed in friends activity section for other patrons who added the logged in \r\npatron as a friend.",
    "custom_test_purpose": null,
    "custom_steps": "1. Step 1\r\nExpected Result:\r\nText code should be set\r\n2. Step 2\r\nExpected Result:\r\nEvent launched\r\n3. Step 3\r\nExpected Result:\r\nLogged into google plus as an existing patron\r\n4. Step 4\r\nExpected Result:\r\nThe friends activity is listed.\r\n5. Step 5\r\nExpected Result:\r\nShopping cart page should get displayed.\r\n6. Step 6\r\nExpected Result:\r\nPayment page should get displayed\r\n7. Step 7\r\nExpected Result:\r\nGoogle Plus connection is retained in Payment page & friends activity is listed.\r\n8. Step 8\r\nExpected Result:\r\nTransaction completed.\r\n9. Step 9\r\nExpected Result:\r\nGoogle Plus connection is retained in confirmation page & friends activity is listed.\r\n10. Step 10\r\nExpected Result:\r\nThe purchased ticket got in Google Plus.\r\n11. Step 11\r\nExpected Result:\r\nAbove patron's ticket purchase is listed in friends activity section for other patrons who added the logged in patron as \r\na friend.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Step 1\r\n2. Step 2\r\n3. Step 3\r\n4. Step 4\r\n5. Step 5\r\n6. Step 6\r\n7. Step 7\r\n8. Step 8\r\n9. Step 9\r\n10. Step 10\r\n11. Step 11",
        "expected": "1. Text code should be set\r\n2. Event launched\r\n3. Logged into google plus as an existing patron\r\n4. The friends activity is listed.\r\n5. Shopping cart page should get displayed.\r\n6. Payment page should get displayed\r\n7. Google Plus connection is retained in Payment page & friends activity is listed.\r\n8. Transaction completed.\r\n9. Google Plus connection is retained in confirmation page & friends activity is listed.\r\n10. The purchased ticket got in Google Plus.\r\n11. Above patron's ticket purchase is listed in friends activity section for other patrons who added the logged in patron as \r\na friend."
      }
    ],
    "custom_jiras": "63"
  },
  {
    "id": 30692883,
    "title": "Verify completing an End to End transaction after connecting to Facebook",
    "section_id": 1685003,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15260",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C151484",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Set the text codes to enable Facebook connection\nLaunch the event\nClick on Fconnect  button and login into facebook as an existing registered user\nVerify that the friends activity is listed.\nClick on Flike buton and like the event.\nSelect a ticket and reach on shopping cart.\nLogin as an existing patron & reach on Payment page\nVerify that Facebook connection is retained in Payment page & friends activity is listed.\nComplete the transaction.\nVerify that Facebook connection is retained in confirmation page & friends activity is listed.\nVerify that the purchased ticket got posted in Facebook\nEnsure the above patron's ticket purchase & like activity is listed in friends activity section for other patrons who added \r\nthe logged in patron as a friend. Ensure the above patron's ticket purchase & like activity is listed in friends activity \r\nsection for other patrons who added the logged in patron as a friend.",
    "custom_test_purpose": null,
    "custom_steps": "1. Step 1\r\nExpected Result:\r\nText code should be set to enable facebook connection\r\n2. Step 2\r\nExpected Result:\r\nEvent launched.\r\n3. Step 3\r\nExpected Result:\r\nExisting Registered user logged into facebook.\r\n4. Step 4\r\nExpected Result:\r\nThe friends activity is listed.\r\n5. Step 5\r\nExpected Result:\r\nLiked the event.\r\n6. Step 6\r\nExpected Result:\r\nShopping cart page should get displayed.\r\n7. Step 7\r\nExpected Result:\r\nPayment page should get displayed\r\n8. Step 8\r\nExpected Result:\r\nFacebook connection is retained in Payment page & friends activity is listed.\r\n9. Step 9\r\nExpected Result:\r\nTransaction completed\r\n10. Step 10\r\nExpected Result:\r\nFacebook connection is retained in confirmation page & friends activity is listed.\r\n11. Step 11\r\nExpected Result:\r\nThe purchased ticket got posted in Facebook\r\n12. Step 12\r\nExpected Result:\r\nAbove patron's ticket purchase & like activity is listed in friends activity section for other patrons who added the logged \r\nin patron as a friend.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Step 1\r\n2. Step 2\r\n3. Step 3\r\n4. Step 4\r\n5. Step 5\r\n6. Step 6\r\n7. Step 7\r\n8. Step 8\r\n9. Step 9\r\n10. Step 10\r\n11. Step 11\r\n12. Step 12",
        "expected": "1. Text code should be set to enable facebook connection\r\n2. Event launched.\r\n3. Existing Registered user logged into facebook.\r\n4. The friends activity is listed.\r\n5. Liked the event.\r\n6. Shopping cart page should get displayed.\r\n7. Payment page should get displayed\r\n8. Facebook connection is retained in Payment page & friends activity is listed.\r\n9. Transaction completed\r\n10. Facebook connection is retained in confirmation page & friends activity is listed.\r\n11. The purchased ticket got posted in Facebook\r\n12. Above patron's ticket purchase & like activity is listed in friends activity section for other patrons who added the logged \r\nin patron as a friend."
      }
    ],
    "custom_jiras": "63"
  },
  {
    "id": 30692884,
    "title": "Verify Facebook Like button functionality in Availability page",
    "section_id": 1685003,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15260, PVO-17053",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C151485",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Set the text codes to enable Facebook connection\r\nExpected Result:\r\nFacebook connection text code need to be enabled\r\n2. Launch the event\r\nExpected Result:\r\nEvent launched.\r\n3. Click on Fconnect  button and login into facebook as an existing registered user\r\nExpected Result:\r\nExisting user logged into facebook\r\n4. Click on Flike buton and like the event.\r\nExpected Result:\r\nFlike button should get displayed\r\n5. Verify that the like activity is posted in Facebook.\r\nExpected Result:\r\nThe like activity is posted in Facebook.\r\n6. Once the Flike button is clicked,click on Flike button again and verify that patron is able to dislike the event.\r\nExpected Result:\r\npatron is able to dislike the event after clicking the Flike button.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Set the text codes to enable Facebook connection\r\n2. Launch the event\r\n3. Click on Fconnect  button and login into facebook as an existing registered user\r\n4. Click on Flike buton and like the event.\r\n5. Verify that the like activity is posted in Facebook.\r\n6. Once the Flike button is clicked,click on Flike button again and verify that patron is able to dislike the event.",
        "expected": "1. Facebook connection text code need to be enabled\r\n2. Event launched.\r\n3. Existing user logged into facebook\r\n4. Flike button should get displayed\r\n5. The like activity is posted in Facebook.\r\n6. patron is able to dislike the event after clicking the Flike button."
      }
    ],
    "custom_jiras": "63"
  },
  {
    "id": 30692885,
    "title": "Verify that first time log in FB user is redireced to authorize the app with the allow and dont allow buttons",
    "section_id": 1685003,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15260",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_refs": "C151486",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Set the text codes to enable Facebook connection\nLaunch the event\nClick on Fconnect  button and login into facebook as user who haven't autorize the app.\nVerify that user is redireced to authorize the app with the allow and dont allow buttons.\nClick on allow and verify that FB connection is estabilished in UI\nVerify that friends activity is displayed in UI.\nSelect a ticket and complete the transaction.\nVeriy the FB connection & friend's activity in confirmation page.",
    "custom_test_purpose": null,
    "custom_steps": "1. Step 1\r\nExpected Result:\r\nFacebook connection textcode should be enabled.\r\n2. Step 2\r\nExpected Result:\r\nEvent launched\r\n3. Step 3\r\nExpected Result:\r\nUser logged into facebook who haen't authorize the app.\r\n4. Step 4\r\nExpected Result:\r\nUser is redireced to authorize the app with the allow and dont allow buttons.\r\n5. Step 5\r\nExpected Result:\r\nFB connection is estabilished in UI\r\n6. Step 6\r\nExpected Result:\r\nfriends activity is displayed in UI.\r\n7. Step 7\r\nExpected Result:\r\nTransaction completed.\r\n8. Step 8\r\nExpected Result:\r\nThe FB connection & friend's activity in confirmation page has to be verified.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Step 1\r\n2. Step 2\r\n3. Step 3\r\n4. Step 4\r\n5. Step 5\r\n6. Step 6\r\n7. Step 7\r\n8. Step 8",
        "expected": "1. Facebook connection textcode should be enabled.\r\n2. Event launched\r\n3. User logged into facebook who haen't authorize the app.\r\n4. User is redireced to authorize the app with the allow and dont allow buttons.\r\n5. FB connection is estabilished in UI\r\n6. friends activity is displayed in UI.\r\n7. Transaction completed.\r\n8. The FB connection & friend's activity in confirmation page has to be verified."
      }
    ],
    "custom_jiras": "63"
  },
  {
    "id": 30692886,
    "title": "Verify logging in as a FB user who has no registered friends.",
    "section_id": 1685003,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15260, PVO-17053",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_refs": "C151487",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Set the text codes to enable Facebook connection\r\nLaunch the event\r\nClick on Fconnect  button and login into facebook as a user who has no registered friends.\r\nVerify that 'no friends activity ' message is displayed.",
    "custom_test_purpose": null,
    "custom_steps": "1. Step 1\r\nExpected Result:\r\nFacebook connection enabled.\r\n2. Step 2\r\nExpected Result:\r\nEvent launched.\r\n3. Step 3\r\nExpected Result:\r\nUser logged into facebook who has no registered friends.\r\n4. Step 4\r\nExpected Result:\r\nno friends activity ' message is displayed.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Step 1\r\n2. Step 2\r\n3. Step 3\r\n4. Step 4",
        "expected": "1. Facebook connection enabled.\r\n2. Event launched.\r\n3. User logged into facebook who has no registered friends.\r\n4. no friends activity ' message is displayed."
      }
    ],
    "custom_jiras": "63"
  },
  {
    "id": 30692887,
    "title": "Verify the error message is displayed when user tries to  post same tweet.",
    "section_id": 1685003,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12294",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 9,
    "custom_is_automated": false,
    "custom_refs": "C151488",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre-requisites:-\r\n1. An event should be created and perf accepted.\r\n2. User should have a twitter account enabled.\r\n3. Set appropriate text codes for enabling the twitter mechanism.\nLaunch single sales availability page.\nClick on the Twitter button available in the availability page.\nGive username and password for login to twitter.\nEnter the link in the textbox 'Share a link with your followers' and click on sign in and tweet button.\nNavigate back to availability page and click on tweet again.",
    "custom_test_purpose": null,
    "custom_steps": "1. Step 1: Prerequisite\r\n2. Step 2: launch availability page\r\nExpected Result:\r\nSingle sale availability page of a particular event should be launched.\r\n3. Step 3: twitter button\r\nExpected Result:\r\nA popup should be opened where user can login.\r\n4. Step 4: login to twitter\r\nExpected Result:\r\nuser should be able to give username and password to login to twitter account.\r\n5. Step 5: share link\r\nExpected Result:\r\nUser should be able to share the link\r\n6. Step 6: Navigate back to availaibity page\r\nExpected Result:\r\nSystem should display  a error message stating that \"Whoops, yo already said that, enter a new tweet\"",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Step 1: Prerequisite\r\n2. Step 2: launch availability page\r\n3. Step 3: twitter button\r\n4. Step 4: login to twitter\r\n5. Step 5: share link\r\n6. Step 6: Navigate back to availaibity page",
        "expected": "1. \r\n2. Single sale availability page of a particular event should be launched.\r\n3. A popup should be opened where user can login.\r\n4. user should be able to give username and password to login to twitter account.\r\n5. User should be able to share the link\r\n6. System should display  a error message stating that \"Whoops, yo already said that, enter a new tweet\""
      }
    ],
    "custom_jiras": "58"
  },
  {
    "id": 30692888,
    "title": "Verify the functionality of the Share button - Google plus Share recommendation or post form - Availability page",
    "section_id": 1685003,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12294",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 10,
    "custom_is_automated": false,
    "custom_refs": "C151489",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Navigate to Home page\nPre-Request: \r\n         i)Set appropriate text code to enable Google+ integration\r\n         ii)Have a google+ account with +1 enabled\r\n         iii)Have an event with perf accepted to single ticket sales MLB supplier\nLaunch single ticket sales using link \nVerify the UI of availability page\nClick on the post icon\nEnter your gmail id and password and click on sign in\nClick on share button\nLogout the application",
    "custom_test_purpose": null,
    "custom_steps": "1. Step 7\r\nExpected Result:\r\nThe post should be displayed with \r\n2. Step 1\r\nExpected Result:\r\nPre-Request should be satisfied\r\n3. Step 2\r\nExpected Result:\r\nSingle tickets should be launched successfully and availability page should be displayed\r\n4. Step 3\r\nExpected Result:\r\nGoogle+ recommendation/posting mechanism should be enabled\r\n5. Step 4\r\nExpected Result:\r\nGoogle+login page should be displayed\r\n6. Step 5\r\nExpected Result:\r\n1.User should be logged in with google+ successfully\r\n2.User should be presented with Google+ Share recommendation/post form that includes the following standard elements:\r\n     a.      Google+ user info.\r\n     b.      Comment box.\r\n     c.      Event description box.\r\n     d.      Privacy setting override prompt.\r\n     e.      And Share (continue) button and Cancel button.\r\n7. Step 6\r\nExpected Result:\r\nThe event should be shared successfully\r\n8. Step 8\r\nExpected Result:\r\nAplication should be logged out",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Step 7\r\n2. Step 1\r\n3. Step 2\r\n4. Step 3\r\n5. Step 4\r\n6. Step 5\r\n7. Step 6\r\n8. Step 8",
        "expected": "1. The post should be displayed with \r\n2. Pre-Request should be satisfied\r\n3. Single tickets should be launched successfully and availability page should be displayed\r\n4. Google+ recommendation/posting mechanism should be enabled\r\n5. Google+login page should be displayed\r\n6. 1.User should be logged in with google+ successfully\r\n2.User should be presented with Google+ Share recommendation/post form that includes the following standard elements:\r\n     a.      Google+ user info.\r\n     b.      Comment box.\r\n     c.      Event description box.\r\n     d.      Privacy setting override prompt.\r\n     e.      And Share (continue) button and Cancel button.\r\n7. The event should be shared successfully\r\n8. Aplication should be logged out"
      }
    ],
    "custom_jiras": "58"
  },
  {
    "id": 30692889,
    "title": "Verify SH INDY SellInventory call succeedes if UAVFGSS = false and patron has multiple SRO seats in the listing",
    "section_id": 1685004,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15658",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C151490",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite:\r\n \r\nSet UAVFGSS as false\r\nExpected Result:\r\nUAVFGSS is set as false at supplier.\r\n2. Steps:\r\n1.Purchase some SRO seats of an event by a SH \r\nSeller\r\nExpected Result:\r\nSeats are purchased from PV.\r\n3. 2.Print the tickets and note down the barcode\r\nExpected Result:\r\nBarcodes are noted\r\n4. 3.Put the tickets for resale via SH INDY flow\r\nExpected Result:\r\nTickets are set for resale\r\n5. 4.Purchase the offer via SH Indy\r\nExpected Result:\r\nOffer is purchased\r\n6. 5.Verify PVO makes LockInventory call to PV and verify response from PV\r\nExpected Result:\r\n-PV sends old_ticket_id and new_ticket_id for \r\neach seat\r\n7. 6.Verify SH makes SellInventory call to PVO and \r\nverify PVO response to SH\r\nExpected Result:\r\n-PVO sends unique barcode and \r\ninventory_seat_id for each seat. \r\ninventory_seat_id is the new_ticket_id received \r\nfrom PV in LockInventory response\r\n8. 7.Verify PVO.offer_seat table. SUPPLIER_TICKET_ID field stores  old_ticket_id and NEW_SUPPLIER_TICKET_ID field stores new_ticket_id\r\nExpected Result:\r\nOld and new ticket ids are shown in table.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite:\r\n \r\nSet UAVFGSS as false\r\n2. Steps:\r\n1.Purchase some SRO seats of an event by a SH \r\nSeller\r\n3. 2.Print the tickets and note down the barcode\r\n4. 3.Put the tickets for resale via SH INDY flow\r\n5. 4.Purchase the offer via SH Indy\r\n6. 5.Verify PVO makes LockInventory call to PV and verify response from PV\r\n7. 6.Verify SH makes SellInventory call to PVO and \r\nverify PVO response to SH\r\n8. 7.Verify PVO.offer_seat table. SUPPLIER_TICKET_ID field stores  old_ticket_id and NEW_SUPPLIER_TICKET_ID field stores new_ticket_id",
        "expected": "1. UAVFGSS is set as false at supplier.\r\n2. Seats are purchased from PV.\r\n3. Barcodes are noted\r\n4. Tickets are set for resale\r\n5. Offer is purchased\r\n6. -PV sends old_ticket_id and new_ticket_id for \r\neach seat\r\n7. -PVO sends unique barcode and \r\ninventory_seat_id for each seat. \r\ninventory_seat_id is the new_ticket_id received \r\nfrom PV in LockInventory response\r\n8. Old and new ticket ids are shown in table."
      }
    ],
    "custom_jiras": "63.1"
  },
  {
    "id": 30692890,
    "title": "Verify SH INDY SellInventory call succeedes if UAVFGSS = true and patron has multiple GA seats in the listing",
    "section_id": 1685004,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15658",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C151491",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite:\r\n\r\nSet UAVFGSS as true\r\nExpected Result:\r\nUAVFGSS is set as true at supplier.\r\n2. Steps:\r\n1.Purchase some GA seats of an event by a SH Seller\r\nExpected Result:\r\nSeats are purchased from PV.\r\n3. 2.Print the tickets and note down the barcode\r\nExpected Result:\r\nBarcodes are noted\r\n4. 3.Put the tickets for resale via SH INDY flow\r\nExpected Result:\r\nTickets are set for resale\r\n5. 4.Purchase the offer via SH Indy\r\nExpected Result:\r\nOffer is purchased\r\n6. 5.Verify PVO makes LockInventory call to PV and verify response from PV\r\nExpected Result:\r\n-PV sends old_ticket_id and new_ticket_id for \r\neach seat\r\n7. 6.Verify SH makes SellInventory call to PVO and \r\nverify PVO response to SH\r\nExpected Result:\r\n-PVO sends unique barcode and \r\ninventory_seat_id for each seat. \r\ninventory_seat_id is the new_ticket_id received \r\nfrom PV in LockInventory response\r\n8. 7.Verify PVO.offer_seat table. SUPPLIER_TICKET_ID field stores  old_ticket_id and NEW_SUPPLIER_TICKET_ID field stores new_ticket_id\r\nExpected Result:\r\nOld and new ticket ids are shown in table.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite:\r\n\r\nSet UAVFGSS as true\r\n2. Steps:\r\n1.Purchase some GA seats of an event by a SH Seller\r\n3. 2.Print the tickets and note down the barcode\r\n4. 3.Put the tickets for resale via SH INDY flow\r\n5. 4.Purchase the offer via SH Indy\r\n6. 5.Verify PVO makes LockInventory call to PV and verify response from PV\r\n7. 6.Verify SH makes SellInventory call to PVO and \r\nverify PVO response to SH\r\n8. 7.Verify PVO.offer_seat table. SUPPLIER_TICKET_ID field stores  old_ticket_id and NEW_SUPPLIER_TICKET_ID field stores new_ticket_id",
        "expected": "1. UAVFGSS is set as true at supplier.\r\n2. Seats are purchased from PV.\r\n3. Barcodes are noted\r\n4. Tickets are set for resale\r\n5. Offer is purchased\r\n6. -PV sends old_ticket_id and new_ticket_id for \r\neach seat\r\n7. -PVO sends unique barcode and \r\ninventory_seat_id for each seat. \r\ninventory_seat_id is the new_ticket_id received \r\nfrom PV in LockInventory response\r\n8. Old and new ticket ids are shown in table."
      }
    ],
    "custom_jiras": "63.1"
  },
  {
    "id": 30692891,
    "title": "Verify lock and sell inventory response when UAVFGSS is set to true and property stubhub.barcode.fix.enabled as false",
    "section_id": 1685004,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15633",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C151492",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Set UAVFGSS as false in NGHS supplier.\r\npvo.NGHS.use_public_section_code property as \r\ntrue by default.\r\nExpected Result:\r\npre-requisite should be met.\r\n2. Launch PV application .Complete a sale for the \r\nevent mapped to stubhub and print those ticket\r\nExpected Result:\r\nUser should be able to complete the sale sucessfully and print those tickets\r\n3. launch Dochandler URL, >\r\nExpected Result:\r\nDochandler application should be displayed.\r\n4. Enter valid details to the fields highlighted in RED\r\n \r\n\r\n\r\n\r\n  STUBINDY\r\n  TDC\r\nrequest\r\n  \r\n    t1ck3ts\r\n    st2bh6b\r\n  \r\n  \r\n    LockInventory\r\n    lock\r\n    1.2\r\n  \r\n\r\n\r\n    \r\n      \r\n       31588654\r\n    3000\r\n    \r\n             5089656\r\n\r\n    \r\n\r\n\r\n \r\n \r\nand click on Process request\r\nExpected Result:\r\nA valid response should be dispalyed with the status code of \" OK\", confirming the tickets have been sucessfuly \r\nlocked.\r\n5. Verify the ticket status in PV\r\nExpected Result:\r\nTicket status should be updated as \"RESALE\"\r\n6. Enter the sell inventory scripts, enter valid \r\ndetails for the areas highlighted in red\r\n \r\n\r\n\r\n   STUBINDY\r\n  TDC\r\n  request\r\n  \r\n    t1ck3ts\r\n    st2bh6b\r\n  \r\n  \r\n    SellInventory\r\n    sell\r\n    1.2\r\n  \r\n\r\n\r\n   31588654\r\n    117503\r\n     \r\n    \r\n       Jeffy\r\n       Martin\r\n        555 Anton Blvd\r\n        17th Floor\r\n        Costa Mesa\r\n        CA\r\n        92679\r\n        USA\r\n        9999999999\r\n        9999999999\r\n        test@test.com\r\n        CREDIT\r\n        \r\n            AMEX\r\n            F37/Qyod1FCbVu9PkLuMWA==\r\n            1019     \r\n       \r\n     \r\n     OTHER\r\n     TH\r\n     4000\r\n  \r\n\r\n\r\n \r\nClick on Process request.\r\n \r\nNote: Inventory ID and Agency transaction id \r\nshould be taken from lock inventory response\r\nExpected Result:\r\nA valid response should be dispalyed with the \r\nstatus code of \" OK\", confirming the tickets have \r\nbeen sucessfuly sold.\r\n7. Verify the ticket status in PV\r\nExpected Result:\r\nTicket status should be updated as \"Resale\" with a tick symbol next to the text, confirming the ticket succesffuly resold \r\nand the ticket will be inactive for this patron\r\n8. Verify the persist inventory call\r\nExpected Result:\r\nPersist inventory call should be verified in splunk\r\n9. Verify the lock and sell inventory response when UAVFGSS is \r\nset to true.\r\nExpected Result:\r\nRow and seat number should get displayed in the \r\nresponse of both lock and sell inventory.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Set UAVFGSS as false in NGHS supplier.\r\npvo.NGHS.use_public_section_code property as \r\ntrue by default.\r\n2. Launch PV application .Complete a sale for the \r\nevent mapped to stubhub and print those ticket\r\n3. launch Dochandler URL, >\r\n4. Enter valid details to the fields highlighted in RED\r\n \r\n\r\n\r\n\r\n  STUBINDY\r\n  TDC\r\nrequest\r\n  \r\n    t1ck3ts\r\n    st2bh6b\r\n  \r\n  \r\n    LockInventory\r\n    lock\r\n    1.2\r\n  \r\n\r\n\r\n    \r\n      \r\n       31588654\r\n    3000\r\n    \r\n             5089656\r\n\r\n    \r\n\r\n\r\n \r\n \r\nand click on Process request\r\n5. Verify the ticket status in PV\r\n6. Enter the sell inventory scripts, enter valid \r\ndetails for the areas highlighted in red\r\n \r\n\r\n\r\n   STUBINDY\r\n  TDC\r\n  request\r\n  \r\n    t1ck3ts\r\n    st2bh6b\r\n  \r\n  \r\n    SellInventory\r\n    sell\r\n    1.2\r\n  \r\n\r\n\r\n   31588654\r\n    117503\r\n     \r\n    \r\n       Jeffy\r\n       Martin\r\n        555 Anton Blvd\r\n        17th Floor\r\n        Costa Mesa\r\n        CA\r\n        92679\r\n        USA\r\n        9999999999\r\n        9999999999\r\n        test@test.com\r\n        CREDIT\r\n        \r\n            AMEX\r\n            F37/Qyod1FCbVu9PkLuMWA==\r\n            1019     \r\n       \r\n     \r\n     OTHER\r\n     TH\r\n     4000\r\n  \r\n\r\n\r\n \r\nClick on Process request.\r\n \r\nNote: Inventory ID and Agency transaction id \r\nshould be taken from lock inventory response\r\n7. Verify the ticket status in PV\r\n8. Verify the persist inventory call\r\n9. Verify the lock and sell inventory response when UAVFGSS is \r\nset to true.",
        "expected": "1. pre-requisite should be met.\r\n2. User should be able to complete the sale sucessfully and print those tickets\r\n3. Dochandler application should be displayed.\r\n4. A valid response should be dispalyed with the status code of \" OK\", confirming the tickets have been sucessfuly \r\nlocked.\r\n5. Ticket status should be updated as \"RESALE\"\r\n6. A valid response should be dispalyed with the \r\nstatus code of \" OK\", confirming the tickets have \r\nbeen sucessfuly sold.\r\n7. Ticket status should be updated as \"Resale\" with a tick symbol next to the text, confirming the ticket succesffuly resold \r\nand the ticket will be inactive for this patron\r\n8. Persist inventory call should be verified in splunk\r\n9. Row and seat number should get displayed in the \r\nresponse of both lock and sell inventory."
      }
    ],
    "custom_jiras": "63.1"
  },
  {
    "id": 30692892,
    "title": "Verify lock and sell inventory response when UAVFGSS is set to false and property stubhub.barcode.fix.enabled as true",
    "section_id": 1685004,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15633",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C151493",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Set UAVFGSS as false in NGHS supplier.\r\npvo.NGHS.use_public_section_code property as \r\ntrue by default.\r\nExpected Result:\r\npre-requisite should be met.\r\n2. Launch PV application .Complete a sale for the \r\nevent mapped to stubhub and print those ticket\r\nExpected Result:\r\nUser should be able to complete the sale sucessfully and print those tickets\r\n3. launch Dochandler URL, >\r\nExpected Result:\r\nDochandler application should be displayed.\r\n4. Enter valid details to the fields highlighted in RED\r\n \r\n\r\n\r\n\r\n  STUBINDY\r\n  TDC\r\nrequest\r\n  \r\n    t1ck3ts\r\n    st2bh6b\r\n  \r\n  \r\n    LockInventory\r\n    lock\r\n    1.2\r\n  \r\n\r\n\r\n    \r\n      \r\n       31588654\r\n    3000\r\n    \r\n             5089656\r\n\r\n    \r\n\r\n\r\n \r\n \r\nand click on Process request\r\nExpected Result:\r\nA valid response should be dispalyed with the status code of \" OK\", confirming the tickets have been sucessfuly \r\nlocked.\r\n5. Verify the ticket status in PV\r\nExpected Result:\r\nTicket status should be updated as \"RESALE\"\r\n6. Enter the sell inventory scripts, enter valid \r\ndetails for the areas highlighted in red\r\n \r\n\r\n\r\n   STUBINDY\r\n  TDC\r\n  request\r\n  \r\n    t1ck3ts\r\n    st2bh6b\r\n  \r\n  \r\n    SellInventory\r\n    sell\r\n    1.2\r\n  \r\n\r\n\r\n   31588654\r\n    117503\r\n     \r\n    \r\n       Jeffy\r\n       Martin\r\n        555 Anton Blvd\r\n        17th Floor\r\n        Costa Mesa\r\n        CA\r\n        92679\r\n        USA\r\n        9999999999\r\n        9999999999\r\n        test@test.com\r\n        CREDIT\r\n        \r\n            AMEX\r\n            F37/Qyod1FCbVu9PkLuMWA==\r\n            1019     \r\n       \r\n     \r\n     OTHER\r\n     TH\r\n     4000\r\n  \r\n\r\n\r\n \r\nClick on Process request.\r\n \r\nNote: Inventory ID and Agency transaction id \r\nshould be taken from lock inventory response\r\nExpected Result:\r\nA valid response should be dispalyed with the \r\nstatus code of \" OK\", confirming the tickets have \r\nbeen sucessfuly sold.\r\n7. Verify the ticket status in PV\r\nExpected Result:\r\nTicket status should be updated as \"Resale\" with a tick symbol next to the text, confirming the ticket succesffuly resold \r\nand the ticket will be inactive for this patron\r\n8. Verify the persist inventory call\r\nExpected Result:\r\nPersist inventory call should be verified in splunk\r\n9. Verify the lock and sell inventory response when \r\nUAVFGSS is set to false.\r\nExpected Result:\r\nRow and seat number should get displayed in the \r\nresponse of both lock and sell inventory.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Set UAVFGSS as false in NGHS supplier.\r\npvo.NGHS.use_public_section_code property as \r\ntrue by default.\r\n2. Launch PV application .Complete a sale for the \r\nevent mapped to stubhub and print those ticket\r\n3. launch Dochandler URL, >\r\n4. Enter valid details to the fields highlighted in RED\r\n \r\n\r\n\r\n\r\n  STUBINDY\r\n  TDC\r\nrequest\r\n  \r\n    t1ck3ts\r\n    st2bh6b\r\n  \r\n  \r\n    LockInventory\r\n    lock\r\n    1.2\r\n  \r\n\r\n\r\n    \r\n      \r\n       31588654\r\n    3000\r\n    \r\n             5089656\r\n\r\n    \r\n\r\n\r\n \r\n \r\nand click on Process request\r\n5. Verify the ticket status in PV\r\n6. Enter the sell inventory scripts, enter valid \r\ndetails for the areas highlighted in red\r\n \r\n\r\n\r\n   STUBINDY\r\n  TDC\r\n  request\r\n  \r\n    t1ck3ts\r\n    st2bh6b\r\n  \r\n  \r\n    SellInventory\r\n    sell\r\n    1.2\r\n  \r\n\r\n\r\n   31588654\r\n    117503\r\n     \r\n    \r\n       Jeffy\r\n       Martin\r\n        555 Anton Blvd\r\n        17th Floor\r\n        Costa Mesa\r\n        CA\r\n        92679\r\n        USA\r\n        9999999999\r\n        9999999999\r\n        test@test.com\r\n        CREDIT\r\n        \r\n            AMEX\r\n            F37/Qyod1FCbVu9PkLuMWA==\r\n            1019     \r\n       \r\n     \r\n     OTHER\r\n     TH\r\n     4000\r\n  \r\n\r\n\r\n \r\nClick on Process request.\r\n \r\nNote: Inventory ID and Agency transaction id \r\nshould be taken from lock inventory response\r\n7. Verify the ticket status in PV\r\n8. Verify the persist inventory call\r\n9. Verify the lock and sell inventory response when \r\nUAVFGSS is set to false.",
        "expected": "1. pre-requisite should be met.\r\n2. User should be able to complete the sale sucessfully and print those tickets\r\n3. Dochandler application should be displayed.\r\n4. A valid response should be dispalyed with the status code of \" OK\", confirming the tickets have been sucessfuly \r\nlocked.\r\n5. Ticket status should be updated as \"RESALE\"\r\n6. A valid response should be dispalyed with the \r\nstatus code of \" OK\", confirming the tickets have \r\nbeen sucessfuly sold.\r\n7. Ticket status should be updated as \"Resale\" with a tick symbol next to the text, confirming the ticket succesffuly resold \r\nand the ticket will be inactive for this patron\r\n8. Persist inventory call should be verified in splunk\r\n9. Row and seat number should get displayed in the \r\nresponse of both lock and sell inventory."
      }
    ],
    "custom_jiras": "63.1"
  },
  {
    "id": 30692893,
    "title": "Verify all stubhub calls, after completing Stubhub Indy flow",
    "section_id": 1685004,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14433",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C151494",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Set below debug levels\r\n\r\nhttp://10.33.226.32:7001/Debug.jsp?classname=com.tickets.application.docworker.LockInventoryDocHandler&attrname=debug&level=30\r\nhttp://10.33.226.49:7001/Debug.jsp?classname=com.tickets.application.docworker.LockInventoryDocHandler&attrname=debug&level=30\r\n\r\nhttp://10.33.226.32:7001/Debug.jsp?classname=com.tickets.application.docworker.SellInventoryDocHandler&attrname=debug&level=30\r\nhttp://10.33.226.49:7001/Debug.jsp?classname=com.tickets.application.docworker.SellInventoryDocHandler&attrname=debug&level=30\r\n\r\nFor BOTS call response:\r\nhttp://10.33.226.32:7001/Debug.jsp?classname=com.tickets.util.HttpProcessor.GenericHttpTransporter&attrname=debug&level=30\r\nhttp://10.33.226.49:7001/Debug.jsp?classname=com.tickets.util.HttpProcessor.GenericHttpTransporter&attrname=debug&level=30\r\nExpected Result:\r\nDebug levels should be set\r\n2. Launch PV application using the , \r\nComplete a sale for the event mapped to stubhub \r\nand print those ticket\r\nExpected Result:\r\nUser should be able to complete the sale sucessfully and print those tickets\r\n3. launch Dochandler URL, >\r\nExpected Result:\r\nDochandler application should be displayed.\r\n4. Enter valid details to the fields highlighted in RED\r\n \r\n\r\n\r\n\r\n  STUBINDY\r\n  TDC\r\nrequest\r\n  \r\n    t1ck3ts\r\n    st2bh6b\r\n  \r\n  \r\n    LockInventory\r\n    lock\r\n    1.2\r\n  \r\n\r\n\r\n    \r\n      \r\n       31588654\r\n    3000\r\n    \r\n             5089656\r\n\r\n    \r\n\r\n\r\n \r\n \r\nand click on Process request\r\nExpected Result:\r\nA valid response should be dispalyed with the status code of \" OK\", confirming the tickets have been sucessfuly \r\nlocked.\r\n5. Verify the ticket status in PV\r\nExpected Result:\r\nTicket status should be updated as \"RESALE\"\r\n6. Enter the sell inventory scripts, enter valid \r\ndetails for the areas highlighted in red\r\n \r\n\r\n\r\n   STUBINDY\r\n  TDC\r\n  request\r\n  \r\n    t1ck3ts\r\n    st2bh6b\r\n  \r\n  \r\n    SellInventory\r\n    sell\r\n    1.2\r\n  \r\n\r\n\r\n   31588654\r\n    117503\r\n     \r\n    \r\n       Jeffy\r\n       Martin\r\n        555 Anton Blvd\r\n        17th Floor\r\n        Costa Mesa\r\n        CA\r\n        92679\r\n        USA\r\n        9999999999\r\n        9999999999\r\n        test@test.com\r\n        CREDIT\r\n        \r\n            AMEX\r\n            F37/Qyod1FCbVu9PkLuMWA==\r\n            1019     \r\n       \r\n     \r\n     OTHER\r\n     TH\r\n     4000\r\n  \r\n\r\n\r\n \r\nClick on Process request.\r\n \r\nNote: Inventory ID and Agency transaction id \r\nshould be taken from lock inventory response\r\nExpected Result:\r\nA valid response should be dispalyed with the \r\nstatus code of \" OK\", confirming the tickets have \r\nbeen sucessfuly sold.\r\n7. Verify the ticket status in PV\r\nExpected Result:\r\nTicket status should be updated as \"Resale\" with a tick symbol next to the text, confirming the ticket succesffuly resold \r\nand the ticket will be inactive for this patron\r\n8. Verify all calls should be made to PV with either the STUBHUB or STUBINDY agency and not to the mytixx agency\r\n \r\n1.Lock Inventory\r\n2.Sell Inventory\r\n3.Persist inventory\r\n3.Market Payment\r\n4.Getpatron inventory\r\n5.GetTicket Order Info\r\nExpected Result:\r\nAll calls should be made to PV with either the STUBHUB or STUBINDY agency",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Set below debug levels\r\n\r\nhttp://10.33.226.32:7001/Debug.jsp?classname=com.tickets.application.docworker.LockInventoryDocHandler&attrname=debug&level=30\r\nhttp://10.33.226.49:7001/Debug.jsp?classname=com.tickets.application.docworker.LockInventoryDocHandler&attrname=debug&level=30\r\n\r\nhttp://10.33.226.32:7001/Debug.jsp?classname=com.tickets.application.docworker.SellInventoryDocHandler&attrname=debug&level=30\r\nhttp://10.33.226.49:7001/Debug.jsp?classname=com.tickets.application.docworker.SellInventoryDocHandler&attrname=debug&level=30\r\n\r\nFor BOTS call response:\r\nhttp://10.33.226.32:7001/Debug.jsp?classname=com.tickets.util.HttpProcessor.GenericHttpTransporter&attrname=debug&level=30\r\nhttp://10.33.226.49:7001/Debug.jsp?classname=com.tickets.util.HttpProcessor.GenericHttpTransporter&attrname=debug&level=30\r\n2. Launch PV application using the , \r\nComplete a sale for the event mapped to stubhub \r\nand print those ticket\r\n3. launch Dochandler URL, >\r\n4. Enter valid details to the fields highlighted in RED\r\n \r\n\r\n\r\n\r\n  STUBINDY\r\n  TDC\r\nrequest\r\n  \r\n    t1ck3ts\r\n    st2bh6b\r\n  \r\n  \r\n    LockInventory\r\n    lock\r\n    1.2\r\n  \r\n\r\n\r\n    \r\n      \r\n       31588654\r\n    3000\r\n    \r\n             5089656\r\n\r\n    \r\n\r\n\r\n \r\n \r\nand click on Process request\r\n5. Verify the ticket status in PV\r\n6. Enter the sell inventory scripts, enter valid \r\ndetails for the areas highlighted in red\r\n \r\n\r\n\r\n   STUBINDY\r\n  TDC\r\n  request\r\n  \r\n    t1ck3ts\r\n    st2bh6b\r\n  \r\n  \r\n    SellInventory\r\n    sell\r\n    1.2\r\n  \r\n\r\n\r\n   31588654\r\n    117503\r\n     \r\n    \r\n       Jeffy\r\n       Martin\r\n        555 Anton Blvd\r\n        17th Floor\r\n        Costa Mesa\r\n        CA\r\n        92679\r\n        USA\r\n        9999999999\r\n        9999999999\r\n        test@test.com\r\n        CREDIT\r\n        \r\n            AMEX\r\n            F37/Qyod1FCbVu9PkLuMWA==\r\n            1019     \r\n       \r\n     \r\n     OTHER\r\n     TH\r\n     4000\r\n  \r\n\r\n\r\n \r\nClick on Process request.\r\n \r\nNote: Inventory ID and Agency transaction id \r\nshould be taken from lock inventory response\r\n7. Verify the ticket status in PV\r\n8. Verify all calls should be made to PV with either the STUBHUB or STUBINDY agency and not to the mytixx agency\r\n \r\n1.Lock Inventory\r\n2.Sell Inventory\r\n3.Persist inventory\r\n3.Market Payment\r\n4.Getpatron inventory\r\n5.GetTicket Order Info",
        "expected": "1. Debug levels should be set\r\n2. User should be able to complete the sale sucessfully and print those tickets\r\n3. Dochandler application should be displayed.\r\n4. A valid response should be dispalyed with the status code of \" OK\", confirming the tickets have been sucessfuly \r\nlocked.\r\n5. Ticket status should be updated as \"RESALE\"\r\n6. A valid response should be dispalyed with the \r\nstatus code of \" OK\", confirming the tickets have \r\nbeen sucessfuly sold.\r\n7. Ticket status should be updated as \"Resale\" with a tick symbol next to the text, confirming the ticket succesffuly resold \r\nand the ticket will be inactive for this patron\r\n8. All calls should be made to PV with either the STUBHUB or STUBINDY agency"
      }
    ],
    "custom_jiras": "60.1"
  },
  {
    "id": 30692894,
    "title": "Verify all stubhub calls, after completing Stubhub Mytickets flow",
    "section_id": 1685004,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14433",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C151495",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Set below debug levels\r\n\r\nhttp://10.33.226.32:7001/Debug.jsp?classname=com.tickets.application.docworker.LockInventoryDocHandler&attrname=debug&level=30\r\nhttp://10.33.226.49:7001/Debug.jsp?classname=com.tickets.application.docworker.LockInventoryDocHandler&attrname=debug&level=30\r\n\r\nhttp://10.33.226.32:7001/Debug.jsp?classname=com.tickets.application.docworker.SellInventoryDocHandler&attrname=debug&level=30\r\nhttp://10.33.226.49:7001/Debug.jsp?classname=com.tickets.application.docworker.SellInventoryDocHandler&attrname=debug&level=30\r\n\r\nFor BOTS call response:\r\nhttp://10.33.226.32:7001/Debug.jsp?classname=com.tickets.util.HttpProcessor.GenericHttpTransporter&attrname=debug&level=30\r\nhttp://10.33.226.49:7001/Debug.jsp?classname=com.tickets.util.HttpProcessor.GenericHttpTransporter&attrname=debug&level=30\r\nExpected Result:\r\nDebug levels should be set\r\n2. Launch PV application using the , \r\nComplete a sale for the event mapped to stubhub \r\nand print those ticket\r\nExpected Result:\r\nUser should be able to complete the sale sucessfully and print those tickets\r\n3. launch Dochandler URL, >\r\nExpected Result:\r\nDochandler application should be displayed.\r\n4. Enter valid details to the fields highlighted in RED\r\n \r\n\r\n\r\nSTUBHUB \r\nTDC \r\nrequest \r\n\r\nt1ck3ts \r\nst2bh6b \r\n\r\n\r\nLockInventory \r\nlock \r\n1.2 \r\n\r\n\r\n\r\n\r\n1203207393 \r\nStubHub03 apiseller \r\nApi Seller \r\nNo 4, new avenue \r\nKing street \r\nNew york \r\nNY \r\n98652 \r\nUSA \r\n9876543210 \r\n9876543210 \r\napi_us_sell_indy02@testmail.com \r\n \r\n22343 \r\n45678 \r\n4000 \r\n\r\n5089656 \r\n511851 \r\n \r\n\r\n\r\n\r\n \r\nand click on Process request\r\nExpected Result:\r\nA valid response should be dispalyed with the status code of \" OK\", confirming the tickets have been sucessfuly \r\nlocked.\r\n5. Verify the ticket status in PV\r\nExpected Result:\r\nTicket status should be updated as \"RESALE\"\r\n6. Enter the sell inventory scripts, enter valid details for the areas highlighted in red\r\n\r\n\r\n\r\n   STUBHUB\r\n  TDC\r\n  request\r\n  \r\n    t1ck3ts\r\n    st2bh6b\r\n  \r\n  \r\n    SellInventory\r\n    sell\r\n    1.2\r\n  \r\n\r\n\r\n   45678\r\n    117487\r\n     \r\n    \r\n       Jeffy\r\n       Martin\r\n        555 Anten Blvd\r\n        17th Floor\r\n        Costa Mesa\r\n        CA\r\n        92679\r\n        USA\r\n        9999999999\r\n        9999999999\r\n        test@test.com\r\n        CREDIT\r\n        \r\n            AMEX\r\n            F37/Qyod1FCbVu9PkLuMWA==\r\n            1019     \r\n       \r\n     \r\n     OTHER\r\n     TH\r\n     4000\r\n  \r\n\r\n\r\nClick on Process request.\r\n\r\nNote: Inventory ID and Agency transaction id should be taken from lock inventory response\r\nExpected Result:\r\nA valid response should be dispalyed with the \r\nstatus code of \" OK\", confirming the tickets have \r\nbeen sucessfuly sold.\r\n7. Verify the ticket status in PV\r\nExpected Result:\r\nTicket status should be updated as \"Resale\" with a tick symbol next to the text, confirming the ticket succesffuly resold \r\nand the ticket will be inactive for this patron\r\n8. Verify all calls should be made to PV with either the STUBHUB or STUBINDY agency and not to the mytixx agency\r\n \r\n1.Lock Inventory\r\n2.Sell Inventory\r\n3.Persist inventory\r\n3.Market Payment\r\n4.Getpatron inventory\r\n5.GetTicket Order Info\r\nExpected Result:\r\nAll calls should be made to PV with either the STUBHUB or STUBINDY agency",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Set below debug levels\r\n\r\nhttp://10.33.226.32:7001/Debug.jsp?classname=com.tickets.application.docworker.LockInventoryDocHandler&attrname=debug&level=30\r\nhttp://10.33.226.49:7001/Debug.jsp?classname=com.tickets.application.docworker.LockInventoryDocHandler&attrname=debug&level=30\r\n\r\nhttp://10.33.226.32:7001/Debug.jsp?classname=com.tickets.application.docworker.SellInventoryDocHandler&attrname=debug&level=30\r\nhttp://10.33.226.49:7001/Debug.jsp?classname=com.tickets.application.docworker.SellInventoryDocHandler&attrname=debug&level=30\r\n\r\nFor BOTS call response:\r\nhttp://10.33.226.32:7001/Debug.jsp?classname=com.tickets.util.HttpProcessor.GenericHttpTransporter&attrname=debug&level=30\r\nhttp://10.33.226.49:7001/Debug.jsp?classname=com.tickets.util.HttpProcessor.GenericHttpTransporter&attrname=debug&level=30\r\n2. Launch PV application using the , \r\nComplete a sale for the event mapped to stubhub \r\nand print those ticket\r\n3. launch Dochandler URL, >\r\n4. Enter valid details to the fields highlighted in RED\r\n \r\n\r\n\r\nSTUBHUB \r\nTDC \r\nrequest \r\n\r\nt1ck3ts \r\nst2bh6b \r\n\r\n\r\nLockInventory \r\nlock \r\n1.2 \r\n\r\n\r\n\r\n\r\n1203207393 \r\nStubHub03 apiseller \r\nApi Seller \r\nNo 4, new avenue \r\nKing street \r\nNew york \r\nNY \r\n98652 \r\nUSA \r\n9876543210 \r\n9876543210 \r\napi_us_sell_indy02@testmail.com \r\n \r\n22343 \r\n45678 \r\n4000 \r\n\r\n5089656 \r\n511851 \r\n \r\n\r\n\r\n\r\n \r\nand click on Process request\r\n5. Verify the ticket status in PV\r\n6. Enter the sell inventory scripts, enter valid details for the areas highlighted in red\r\n\r\n\r\n\r\n   STUBHUB\r\n  TDC\r\n  request\r\n  \r\n    t1ck3ts\r\n    st2bh6b\r\n  \r\n  \r\n    SellInventory\r\n    sell\r\n    1.2\r\n  \r\n\r\n\r\n   45678\r\n    117487\r\n     \r\n    \r\n       Jeffy\r\n       Martin\r\n        555 Anten Blvd\r\n        17th Floor\r\n        Costa Mesa\r\n        CA\r\n        92679\r\n        USA\r\n        9999999999\r\n        9999999999\r\n        test@test.com\r\n        CREDIT\r\n        \r\n            AMEX\r\n            F37/Qyod1FCbVu9PkLuMWA==\r\n            1019     \r\n       \r\n     \r\n     OTHER\r\n     TH\r\n     4000\r\n  \r\n\r\n\r\nClick on Process request.\r\n\r\nNote: Inventory ID and Agency transaction id should be taken from lock inventory response\r\n7. Verify the ticket status in PV\r\n8. Verify all calls should be made to PV with either the STUBHUB or STUBINDY agency and not to the mytixx agency\r\n \r\n1.Lock Inventory\r\n2.Sell Inventory\r\n3.Persist inventory\r\n3.Market Payment\r\n4.Getpatron inventory\r\n5.GetTicket Order Info",
        "expected": "1. Debug levels should be set\r\n2. User should be able to complete the sale sucessfully and print those tickets\r\n3. Dochandler application should be displayed.\r\n4. A valid response should be dispalyed with the status code of \" OK\", confirming the tickets have been sucessfuly \r\nlocked.\r\n5. Ticket status should be updated as \"RESALE\"\r\n6. A valid response should be dispalyed with the \r\nstatus code of \" OK\", confirming the tickets have \r\nbeen sucessfuly sold.\r\n7. Ticket status should be updated as \"Resale\" with a tick symbol next to the text, confirming the ticket succesffuly resold \r\nand the ticket will be inactive for this patron\r\n8. All calls should be made to PV with either the STUBHUB or STUBINDY agency"
      }
    ],
    "custom_jiras": "60.1"
  },
  {
    "id": 30692895,
    "title": "Verify PVO  is sending the STUBHUB1, STUBHUB2, STUBHUB3, STUBHUB4,STUBHUB5 values to stubhub  during the Sell Inventory response",
    "section_id": 1685004,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12277",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_refs": "C151496",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Set values for STUBHUB1, STUBHUB2, STUBHUB3, STUBHUB4,STUBHUB5\r\n2. Launch Stubhub My tixx application\r\nExpected Result:\r\nApplication should be launched\r\n3. launch the Stubhub event url , https://www.srwd65.com/?event_id=XXXXXXXX\r\n\r\nwhere XXXXXXXX = Stubhub event id.\r\nExpected Result:\r\nStubhub event should be launched successfully\r\n4. 1. Input the following under returning user portlet:\r\na. Username: \r\nb. Password: \r\n2. Click on Login button\r\nExpected Result:\r\nUser should be navigated to the seller contact information page\r\n5. 1. Select any existing user by clicking on the radio button\n2. Click on Continue button\r\nExpected Result:\r\nUser should be navigated to the Type of Sale page\r\n6. 1. Select  type of sale: \r\n2. Click on Continue button\r\nExpected Result:\r\nUser should be navigated to the ticket quantity page\r\n7. 1. Input quantity:  in the Quantity textbox \r\n2. Select Specific Seats\r\n3. Click on Continue button\r\nExpected Result:\r\nUser should be navigated to the Seat and Ticket Details page\r\n8. 1. Input the following details:\r\na. Section: \r\nb. Row: \r\nc. Hide  specific information from buyers: \r\nd. Seat: \r\ne. Splits: \r\nf. Click here to sell these seats for multiple events in this venue: \r\n2. Click on Continue button\r\nExpected Result:\r\nUser should be navigated to the Payment method and Pricing page\r\n9. Select the payment method: \r\nExpected Result:\r\nUser should be able to select the payment method\r\n10. 1. Input the price per ticket in dollars: \r\n2. Select the sale end date: \r\n3. Click on Continue button\r\nExpected Result:\r\nUser should be navigated to the Fan Protect page\r\n11. Select the payment method: \r\nExpected Result:\r\nUser should be able to select the payment method\r\n12. 1. Input the price per ticket in dollars: \r\n2. Select the sale end date: \r\n3. Click on Continue button\r\nExpected Result:\r\nUser should be navigated to the Fan Protect page\r\n13. 1. Input the Credit Card details:\r\na. Credit Card Number: \r\nb. Credit Card Type: \r\nc. Exp date: \r\nd. Security Code: \r\n2. Select an excising billing address:>\r\n3. Click on Continue button\r\nExpected Result:\r\nUser should be navigated to the Place Listing page\r\n14. Click on \"Post these tickets for sale\" button\r\nExpected Result:\r\nUser should be navigated to the Complete listing page\r\n15. Launch the link with the listing id\r\n\r\nhttps://www.srwd65.com/?ticket_id=********* and purchase the tickets\r\nExpected Result:\r\nuser should be navigated to the Ticket details page\r\n16. Click on Checkout and enter valid buyer credentials, \r\na. Username: \r\nb. Password: \r\n2. Click on Login button\r\nExpected Result:\r\nUser should be navigated to the Buy tickets page, with ticket details being listed.\r\n17. Verify the  Credit Card details:\r\na. Credit Card Number: \r\nb. Credit Card Type: \r\nc. Exp date: \r\nd. Security Code: \r\n2. Select an excising billing address:>\r\n3. Click on Continue button and complete teh purchase\r\nExpected Result:\r\nUser should be navigated to the Buy tickets page, with ticket details being listed.\r\n18. Verify the logs values are passed successfully in sellinventory STUBHUB1, STUBHUB2, STUBHUB3, STUBHUB4,STUBHUB5\r\nExpected Result:\r\nPVo shoudl  successfully send the values from PVO to stubhub during Sellinventory.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Set values for STUBHUB1, STUBHUB2, STUBHUB3, STUBHUB4,STUBHUB5\r\n2. Launch Stubhub My tixx application\r\n3. launch the Stubhub event url , https://www.srwd65.com/?event_id=XXXXXXXX\r\n\r\nwhere XXXXXXXX = Stubhub event id.\r\n4. 1. Input the following under returning user portlet:\r\na. Username: \r\nb. Password: \r\n2. Click on Login button\r\n5. 1. Select any existing user by clicking on the radio button\n2. Click on Continue button\r\n6. 1. Select  type of sale: \r\n2. Click on Continue button\r\n7. 1. Input quantity:  in the Quantity textbox \r\n2. Select Specific Seats\r\n3. Click on Continue button\r\n8. 1. Input the following details:\r\na. Section: \r\nb. Row: \r\nc. Hide  specific information from buyers: \r\nd. Seat: \r\ne. Splits: \r\nf. Click here to sell these seats for multiple events in this venue: \r\n2. Click on Continue button\r\n9. Select the payment method: \r\n10. 1. Input the price per ticket in dollars: \r\n2. Select the sale end date: \r\n3. Click on Continue button\r\n11. Select the payment method: \r\n12. 1. Input the price per ticket in dollars: \r\n2. Select the sale end date: \r\n3. Click on Continue button\r\n13. 1. Input the Credit Card details:\r\na. Credit Card Number: \r\nb. Credit Card Type: \r\nc. Exp date: \r\nd. Security Code: \r\n2. Select an excising billing address:>\r\n3. Click on Continue button\r\n14. Click on \"Post these tickets for sale\" button\r\n15. Launch the link with the listing id\r\n\r\nhttps://www.srwd65.com/?ticket_id=********* and purchase the tickets\r\n16. Click on Checkout and enter valid buyer credentials, \r\na. Username: \r\nb. Password: \r\n2. Click on Login button\r\n17. Verify the  Credit Card details:\r\na. Credit Card Number: \r\nb. Credit Card Type: \r\nc. Exp date: \r\nd. Security Code: \r\n2. Select an excising billing address:>\r\n3. Click on Continue button and complete teh purchase\r\n18. Verify the logs values are passed successfully in sellinventory STUBHUB1, STUBHUB2, STUBHUB3, STUBHUB4,STUBHUB5",
        "expected": "1. \r\n2. Application should be launched\r\n3. Stubhub event should be launched successfully\r\n4. User should be navigated to the seller contact information page\r\n5. User should be navigated to the Type of Sale page\r\n6. User should be navigated to the ticket quantity page\r\n7. User should be navigated to the Seat and Ticket Details page\r\n8. User should be navigated to the Payment method and Pricing page\r\n9. User should be able to select the payment method\r\n10. User should be navigated to the Fan Protect page\r\n11. User should be able to select the payment method\r\n12. User should be navigated to the Fan Protect page\r\n13. User should be navigated to the Place Listing page\r\n14. User should be navigated to the Complete listing page\r\n15. user should be navigated to the Ticket details page\r\n16. User should be navigated to the Buy tickets page, with ticket details being listed.\r\n17. User should be navigated to the Buy tickets page, with ticket details being listed.\r\n18. PVo shoudl  successfully send the values from PVO to stubhub during Sellinventory."
      }
    ],
    "custom_jiras": "57"
  },
  {
    "id": 30692896,
    "title": "Verify PV is sending STUBHUB1, STUBHUB2, STUBHUB3, STUBHUB4,STUBHUB5 values to PVO if it is set up at the ticket template",
    "section_id": 1685004,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12277",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_refs": "C151497",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Set values for STUBHUB1, STUBHUB2, STUBHUB3, STUBHUB4,STUBHUB5  in ticket template.\r\nExpected Result:\r\nTicket template with the values for stubhub1,stubhub2,stubhub3,stubhub4,stubhub5 should be created.\r\n2. Create a new PV event, with a above mentioned template.\r\nExpected Result:\r\nPrerequisite should be set.\r\n3. Complete a PV transaction with the above event and print those tickets.\r\nMake sure, seat number, row and section for the tickets is noted along with the Barcodes.\r\nExpected Result:\r\nTransaction should be successfully completed and tickets should be printed successfully.\r\n4. launch the Stubhub event url , https://www.srwd65.com/?event_id=XXXXXXXX\r\n\r\nwhere XXXXXXXX = Stubhub event id.\r\nExpected Result:\r\nStubhub event should be launched successfully\r\n5. launch the mytixx application and navigate to the event for which user completed a transaction\r\nExpected Result:\r\nUser should be successfully logged in to the user and should be able to see the tickets booked by the user.\r\n6. Verify PV logs and check whether the STUBHUB1, STUBHUB2, STUBHUB3, STUBHUB4,STUBHUB5 is send to PVO\r\nExpected Result:\r\nPV logs should display the STUBHUB1, STUBHUB2, STUBHUB3, STUBHUB4,STUBHUB5.\r\n7. 1. Input the following under returning user portlet:\r\na. Username: \r\nb. Password: \r\n2. Click on Login button\r\nExpected Result:\r\nUser should be navigated to the seller contact information page\r\n8. 1. Select any existing user by clicking on the radio button\n2. Click on Continue button\r\nExpected Result:\r\nUser should be navigated to the Type of Sale page\r\n9. 1. Select  type of sale: \r\n2. Click on Continue button\r\nExpected Result:\r\nUser should be navigated to the ticket quantity page\r\n10. 1. Input quantity:  in the Quantity textbox \r\n2. Select Specific Seats\r\n3. Click on Continue button\r\nExpected Result:\r\nUser should be navigated to the Seat and Ticket Details page\r\n11. 1. Input the following details:\r\na. Section: \r\nb. Row: \r\nc. Hide  specific information from buyers: \r\nd. Seat: \r\ne. Splits: \r\nf. Click here to sell these seats for multiple events in this venue: \r\n2. Click on Continue button\r\nExpected Result:\r\nUser should be navigated to the Payment method and Pricing page\r\n12. Select the payment method: \r\nExpected Result:\r\nUser should be able to select the payment method\r\n13. 1. Input the price per ticket in dollars: \r\n2. Select the sale end date: \r\n3. Click on Continue button\r\nExpected Result:\r\nUser should be navigated to the Fan Protect page\r\n14. 1. Input the Credit Card details:\r\na. Credit Card Number: \r\nb. Credit Card Type: \r\nc. Exp date: \r\nd. Security Code: \r\n2. Select an excising billing address:>\r\n3. Click on Continue button\r\nExpected Result:\r\nUser should be navigated to the Place Listing page\r\n15. Click on \"Post these tickets for sale\" button\r\nExpected Result:\r\nUser should be navigated to the Complete listing page\r\n16. Launch the link with the listing id\r\n\r\nhttps://www.srwd65.com/?ticket_id=********* and purchase the tickets\r\nExpected Result:\r\nuser should be navigated to the Ticket details page\r\n17. Click on Checkout and enter valid buyer credentials, \r\na. Username: \r\nb. Password: \r\n2. Click on Login button\r\nExpected Result:\r\nUser should be navigated to the Buy tickets page, with ticket details being listed.\r\n18. Verify the  Credit Card details:\r\na. Credit Card Number: \r\nb. Credit Card Type: \r\nc. Exp date: \r\nd. Security Code: \r\n2. Select an excising billing address:>\r\n3. Click on Continue button and complete teh purchase\r\nExpected Result:\r\nPurchase should be completed successfully.\r\n19. Verify the logs, PersistInventory and GetTicketOrderInfo logs the  values are passed successfully.\r\nExpected Result:\r\nSTUBHUB1, STUBHUB2, STUBHUB3, STUBHUB4,STUBHUB5  should be successfully passed from PV to PVO.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Set values for STUBHUB1, STUBHUB2, STUBHUB3, STUBHUB4,STUBHUB5  in ticket template.\r\n2. Create a new PV event, with a above mentioned template.\r\n3. Complete a PV transaction with the above event and print those tickets.\r\nMake sure, seat number, row and section for the tickets is noted along with the Barcodes.\r\n4. launch the Stubhub event url , https://www.srwd65.com/?event_id=XXXXXXXX\r\n\r\nwhere XXXXXXXX = Stubhub event id.\r\n5. launch the mytixx application and navigate to the event for which user completed a transaction\r\n6. Verify PV logs and check whether the STUBHUB1, STUBHUB2, STUBHUB3, STUBHUB4,STUBHUB5 is send to PVO\r\n7. 1. Input the following under returning user portlet:\r\na. Username: \r\nb. Password: \r\n2. Click on Login button\r\n8. 1. Select any existing user by clicking on the radio button\n2. Click on Continue button\r\n9. 1. Select  type of sale: \r\n2. Click on Continue button\r\n10. 1. Input quantity:  in the Quantity textbox \r\n2. Select Specific Seats\r\n3. Click on Continue button\r\n11. 1. Input the following details:\r\na. Section: \r\nb. Row: \r\nc. Hide  specific information from buyers: \r\nd. Seat: \r\ne. Splits: \r\nf. Click here to sell these seats for multiple events in this venue: \r\n2. Click on Continue button\r\n12. Select the payment method: \r\n13. 1. Input the price per ticket in dollars: \r\n2. Select the sale end date: \r\n3. Click on Continue button\r\n14. 1. Input the Credit Card details:\r\na. Credit Card Number: \r\nb. Credit Card Type: \r\nc. Exp date: \r\nd. Security Code: \r\n2. Select an excising billing address:>\r\n3. Click on Continue button\r\n15. Click on \"Post these tickets for sale\" button\r\n16. Launch the link with the listing id\r\n\r\nhttps://www.srwd65.com/?ticket_id=********* and purchase the tickets\r\n17. Click on Checkout and enter valid buyer credentials, \r\na. Username: \r\nb. Password: \r\n2. Click on Login button\r\n18. Verify the  Credit Card details:\r\na. Credit Card Number: \r\nb. Credit Card Type: \r\nc. Exp date: \r\nd. Security Code: \r\n2. Select an excising billing address:>\r\n3. Click on Continue button and complete teh purchase\r\n19. Verify the logs, PersistInventory and GetTicketOrderInfo logs the  values are passed successfully.",
        "expected": "1. Ticket template with the values for stubhub1,stubhub2,stubhub3,stubhub4,stubhub5 should be created.\r\n2. Prerequisite should be set.\r\n3. Transaction should be successfully completed and tickets should be printed successfully.\r\n4. Stubhub event should be launched successfully\r\n5. User should be successfully logged in to the user and should be able to see the tickets booked by the user.\r\n6. PV logs should display the STUBHUB1, STUBHUB2, STUBHUB3, STUBHUB4,STUBHUB5.\r\n7. User should be navigated to the seller contact information page\r\n8. User should be navigated to the Type of Sale page\r\n9. User should be navigated to the ticket quantity page\r\n10. User should be navigated to the Seat and Ticket Details page\r\n11. User should be navigated to the Payment method and Pricing page\r\n12. User should be able to select the payment method\r\n13. User should be navigated to the Fan Protect page\r\n14. User should be navigated to the Place Listing page\r\n15. User should be navigated to the Complete listing page\r\n16. user should be navigated to the Ticket details page\r\n17. User should be navigated to the Buy tickets page, with ticket details being listed.\r\n18. Purchase should be completed successfully.\r\n19. STUBHUB1, STUBHUB2, STUBHUB3, STUBHUB4,STUBHUB5  should be successfully passed from PV to PVO."
      }
    ],
    "custom_jiras": "57"
  },
  {
    "id": 30692897,
    "title": "Verification of section_to_display field with stubhub.pvo.stubhub_use_section_to_display_for_sth_sell_flow is set",
    "section_id": 1685004,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-9187",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 9,
    "custom_is_automated": false,
    "custom_refs": "C151498",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. The following property must be set to false stubhub.pvo.stubhub_use_section_to_display_for_sth_sell_flow\r\n2. Launch dochandler at the follwoing url: \r\nRun the following XML and verify if the section_to_display field shows the section_ value as in the Patron_Inventory_Seat table\r\n\r\n\r\n \r\n  STUBHUB\r\n  AAQA\r\n  request\r\n  \r\n    t1ck3ts\r\n    st2bh6b\r\n  \r\n  \r\n    LockInventory\r\n    lock\r\n    1.2\r\n  \r\n \r\n \r\n    \r\n        7756211\r\n        LouWanda\r\n        Searles\r\n        321 Research Parkway\r\n        \r\n        Meriden\r\n        CT\r\n        06450\r\n        USA\r\n        2032388341\r\n        2032388341\r\n        sshultz@tickets.com\r\n    \r\n    21353\r\n    ASQL\r\n    123456\r\n    10000\r\n    \r\n             5068365\r\n\r\n    \r\n     \r\n\r\nExpected Result:\r\nThe XML should be run successfully\r\nThe section_to_Display field should be the Section_\r\n3. Run the sellinventory API and verify that the section_to_display field is the section code (section_)\r\n\r\n\r\n \r\n  STUBHUB\r\n  TDC\r\n  request\r\n  \r\n    t1ck3ts\r\n    st2bh6b\r\n  \r\n  \r\n    SellInventory\r\n    sell\r\n    1.2\r\n  \r\n \r\n \r\n    123456\r\n    85320\r\n    7756211 \r\n    \r\n       9933241\r\n       Barbara\r\n       Coulombe\r\n        4 Alpine Dr\r\n        \r\n        East Haven\r\n        CT\r\n        06512\r\n        USA\r\n        2034674229\r\n        2034674229\r\n        sshultz@tickets.com\r\n        CREDIT\r\n         \r\n             AMEX \r\n            F37/Qyod1FCbVu9PkLuMWA== \r\n            0510 \r\n      \r\n     \r\n     CREDIT\r\n     TH\r\n     40000\r\n  \r\n\r\nExpected Result:\r\nThe XML should be run successfully\r\nThe section_to_Display field should be the section code (Section_ field)",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. The following property must be set to false stubhub.pvo.stubhub_use_section_to_display_for_sth_sell_flow\r\n2. Launch dochandler at the follwoing url: \r\nRun the following XML and verify if the section_to_display field shows the section_ value as in the Patron_Inventory_Seat table\r\n\r\n\r\n \r\n  STUBHUB\r\n  AAQA\r\n  request\r\n  \r\n    t1ck3ts\r\n    st2bh6b\r\n  \r\n  \r\n    LockInventory\r\n    lock\r\n    1.2\r\n  \r\n \r\n \r\n    \r\n        7756211\r\n        LouWanda\r\n        Searles\r\n        321 Research Parkway\r\n        \r\n        Meriden\r\n        CT\r\n        06450\r\n        USA\r\n        2032388341\r\n        2032388341\r\n        sshultz@tickets.com\r\n    \r\n    21353\r\n    ASQL\r\n    123456\r\n    10000\r\n    \r\n             5068365\r\n\r\n    \r\n     \r\n\r\n3. Run the sellinventory API and verify that the section_to_display field is the section code (section_)\r\n\r\n\r\n \r\n  STUBHUB\r\n  TDC\r\n  request\r\n  \r\n    t1ck3ts\r\n    st2bh6b\r\n  \r\n  \r\n    SellInventory\r\n    sell\r\n    1.2\r\n  \r\n \r\n \r\n    123456\r\n    85320\r\n    7756211 \r\n    \r\n       9933241\r\n       Barbara\r\n       Coulombe\r\n        4 Alpine Dr\r\n        \r\n        East Haven\r\n        CT\r\n        06512\r\n        USA\r\n        2034674229\r\n        2034674229\r\n        sshultz@tickets.com\r\n        CREDIT\r\n         \r\n             AMEX \r\n            F37/Qyod1FCbVu9PkLuMWA== \r\n            0510 \r\n      \r\n     \r\n     CREDIT\r\n     TH\r\n     40000",
        "expected": "1. \r\n2. The XML should be run successfully\r\nThe section_to_Display field should be the Section_\r\n3. The XML should be run successfully\r\nThe section_to_Display field should be the section code (Section_ field)"
      }
    ],
    "custom_jiras": "51.1"
  },
  {
    "id": 30692898,
    "title": "Verification of section_to_display field with stubhub.pvo.stubhub_use_section_to_display_for_sth_sell_flow is not set",
    "section_id": 1685004,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-9187",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 10,
    "custom_is_automated": false,
    "custom_refs": "C151499",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. The following property must be set to false stubhub.pvo.stubhub_use_section_to_display_for_sth_sell_flow\r\n2. Launch dochandler at the follwoing url: \r\nRun the following XML and verify if the section_to_display field shows the section_description value as in the Patron_Inventory_Seat table\r\n\r\n\r\n \r\n  STUBHUB\r\n  AAQA\r\n  request\r\n  \r\n    t1ck3ts\r\n    st2bh6b\r\n  \r\n  \r\n    LockInventory\r\n    lock\r\n    1.2\r\n  \r\n \r\n \r\n    \r\n        7756211\r\n        LouWanda\r\n        Searles\r\n        321 Research Parkway\r\n        \r\n        Meriden\r\n        CT\r\n        06450\r\n        USA\r\n        2032388341\r\n        2032388341\r\n        sshultz@tickets.com\r\n    \r\n    21353\r\n    ASQL\r\n    123456\r\n    10000\r\n    \r\n             5068365\r\n\r\n    \r\n     \r\n\r\nExpected Result:\r\nThe XML should be run successfully\r\nThe section_to_Display field should be the Section description\r\n3. Run the sellinventory API and verify that the section_to_display field is the section code\r\n\r\n\r\n \r\n  STUBHUB\r\n  TDC\r\n  request\r\n  \r\n    t1ck3ts\r\n    st2bh6b\r\n  \r\n  \r\n    SellInventory\r\n    sell\r\n    1.2\r\n  \r\n \r\n \r\n    123456\r\n    85320\r\n    7756211 \r\n    \r\n       9933241\r\n       Barbara\r\n       Coulombe\r\n        4 Alpine Dr\r\n        \r\n        East Haven\r\n        CT\r\n        06512\r\n        USA\r\n        2034674229\r\n        2034674229\r\n        sshultz@tickets.com\r\n        CREDIT\r\n         \r\n             AMEX \r\n            F37/Qyod1FCbVu9PkLuMWA== \r\n            0510 \r\n      \r\n     \r\n     CREDIT\r\n     TH\r\n     40000\r\n  \r\n\r\nExpected Result:\r\nThe XML should be run successfully\r\nThe section_to_Display field should be the section description",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. The following property must be set to false stubhub.pvo.stubhub_use_section_to_display_for_sth_sell_flow\r\n2. Launch dochandler at the follwoing url: \r\nRun the following XML and verify if the section_to_display field shows the section_description value as in the Patron_Inventory_Seat table\r\n\r\n\r\n \r\n  STUBHUB\r\n  AAQA\r\n  request\r\n  \r\n    t1ck3ts\r\n    st2bh6b\r\n  \r\n  \r\n    LockInventory\r\n    lock\r\n    1.2\r\n  \r\n \r\n \r\n    \r\n        7756211\r\n        LouWanda\r\n        Searles\r\n        321 Research Parkway\r\n        \r\n        Meriden\r\n        CT\r\n        06450\r\n        USA\r\n        2032388341\r\n        2032388341\r\n        sshultz@tickets.com\r\n    \r\n    21353\r\n    ASQL\r\n    123456\r\n    10000\r\n    \r\n             5068365\r\n\r\n    \r\n     \r\n\r\n3. Run the sellinventory API and verify that the section_to_display field is the section code\r\n\r\n\r\n \r\n  STUBHUB\r\n  TDC\r\n  request\r\n  \r\n    t1ck3ts\r\n    st2bh6b\r\n  \r\n  \r\n    SellInventory\r\n    sell\r\n    1.2\r\n  \r\n \r\n \r\n    123456\r\n    85320\r\n    7756211 \r\n    \r\n       9933241\r\n       Barbara\r\n       Coulombe\r\n        4 Alpine Dr\r\n        \r\n        East Haven\r\n        CT\r\n        06512\r\n        USA\r\n        2034674229\r\n        2034674229\r\n        sshultz@tickets.com\r\n        CREDIT\r\n         \r\n             AMEX \r\n            F37/Qyod1FCbVu9PkLuMWA== \r\n            0510 \r\n      \r\n     \r\n     CREDIT\r\n     TH\r\n     40000",
        "expected": "1. \r\n2. The XML should be run successfully\r\nThe section_to_Display field should be the Section description\r\n3. The XML should be run successfully\r\nThe section_to_Display field should be the section description"
      }
    ],
    "custom_jiras": "51.1"
  },
  {
    "id": 30692899,
    "title": "Verify Stubhub resale Post and purchase once PVO sends ticket_id to PV while LockInventory request has ticket IDs of main+parking tickets instead of Barcode in STUBINDY flow - Predelivery(using tool or doc handler)",
    "section_id": 1685004,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-18217",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 11,
    "custom_is_automated": false,
    "custom_refs": "C907543",
    "custom_pvo_pvodc_category": 19,
    "custom_pvocodelines": null,
    "custom_preconds": "Have  StubHub mapped event which is associated with parking ticket\r\nPerf accept to MyTicket agenc",
    "custom_test_purpose": null,
    "custom_steps": "1. Put the reserved+parking ticket for resale (Pre delivery flow) using Ticket ID\r\nExpected Result:\r\nTickets are put for resale successfully\r\n2. Verify the Lock inventory returned the valid response\r\nExpected Result:\r\nLock inventory returned the valid response\r\n3. Verify the Persist inventory request contain ticket_id.\r\nExpected Result:\r\nPersist inventory request contain ticket_id.\r\n4. Verify PV sends back the inventory ID and ticket ID in the Persist inventory response\r\nExpected Result:\r\n PV sends back the inventory ID and ticket ID in the Persist inventory response\r\n5. Make sure the created StubHub offer is recorded in PV, PVO history and inventory_seat table.\r\nExpected Result:\r\nThe created StubHub offer is recorded in PV,  and inventory_seat table. Status should be \"IO\" (Inventory Onsale) for both the tickets\r\n6. Take the create offer ID from the inventory_seat table \r\nExpected Result:\r\nThe offer ID should be fetched and the same should be matching with the external offer ID that has been create din PV\r\n7. Run StubHub Sell inventory request\r\nExpected Result:\r\nSell Inventory request should be done where the request contains the Inventory ID of just created offer \r\n8. Make sure the Purchased StubHub offer is recorded in PV, PVO history and inventory_seat table.\r\nExpected Result:\r\nThe created StubHub offer is recorded in PV and inventory_seat table. Status should be \"IS\" (Inventory Onsale) for both the tickets",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Put the reserved+parking ticket for resale (Pre delivery flow) using Ticket ID\r\n2. Verify the Lock inventory returned the valid response\r\n3. Verify the Persist inventory request contain ticket_id.\r\n4. Verify PV sends back the inventory ID and ticket ID in the Persist inventory response\r\n5. Make sure the created StubHub offer is recorded in PV, PVO history and inventory_seat table.\r\n6. Take the create offer ID from the inventory_seat table \r\n7. Run StubHub Sell inventory request\r\n8. Make sure the Purchased StubHub offer is recorded in PV, PVO history and inventory_seat table.",
        "expected": "1. Tickets are put for resale successfully\r\n2. Lock inventory returned the valid response\r\n3. Persist inventory request contain ticket_id.\r\n4.  PV sends back the inventory ID and ticket ID in the Persist inventory response\r\n5. The created StubHub offer is recorded in PV,  and inventory_seat table. Status should be \"IO\" (Inventory Onsale) for both the tickets\r\n6. The offer ID should be fetched and the same should be matching with the external offer ID that has been create din PV\r\n7. Sell Inventory request should be done where the request contains the Inventory ID of just created offer \r\n8. The created StubHub offer is recorded in PV and inventory_seat table. Status should be \"IS\" (Inventory Onsale) for both the tickets"
      }
    ],
    "custom_jiras": null
  },
  {
    "id": 30692900,
    "title": "Verify the Error message returned in the response of Lock inventory response while the Selected event is set with PIEFMYR (perf enabled for resale) =false",
    "section_id": 1685004,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 12,
    "custom_is_automated": false,
    "custom_refs": "C907544",
    "custom_pvo_pvodc_category": 19,
    "custom_pvocodelines": null,
    "custom_preconds": "Have an Event created in PV and have  MyTickets perf ID\r\nSet the text code PIEFMYR (perf enabled for resale) =false\r\nPurchase some tickets and collect the barcode after printing",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the Doc handler and run the Lock Inventory request with the \"STUBHUB\" as agency with the tickets barcode\r\nExpected Result:\r\nError message should be displayed:  \"The event you have selected is not available for resale.\";\r\n2. Now Make PIEFMYR (perf enabled for resale) =true and PVO channel offsaledate PAST. Run the Lock Inventory request with the \"STUBHUB\" as agency with the tickets barcode\r\nExpected Result:\r\nError message: \"The event you have selected has passed or is no longer onsale/visible.\";\r\n3.  PVO channel offsale date Future. Make the Resale expiry minute PAST compared to Event date. Run the Lock Inventory request with the \"STUBHUB\" as agency with the tickets barcode\r\nExpected Result:\r\nerrorMsg = \"The event you have selected is no longer accepting new listing requests. (Resales have expired)\";",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the Doc handler and run the Lock Inventory request with the \"STUBHUB\" as agency with the tickets barcode\r\n2. Now Make PIEFMYR (perf enabled for resale) =true and PVO channel offsaledate PAST. Run the Lock Inventory request with the \"STUBHUB\" as agency with the tickets barcode\r\n3.  PVO channel offsale date Future. Make the Resale expiry minute PAST compared to Event date. Run the Lock Inventory request with the \"STUBHUB\" as agency with the tickets barcode",
        "expected": "1. Error message should be displayed:  \"The event you have selected is not available for resale.\";\r\n2. Error message: \"The event you have selected has passed or is no longer onsale/visible.\";\r\n3. errorMsg = \"The event you have selected is no longer accepting new listing requests. (Resales have expired)\";"
      }
    ],
    "custom_jiras": null
  },
  {
    "id": 30692901,
    "title": "Verify the parameters in MLBAM Web service Call for a request in Single sales",
    "section_id": 1685005,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15840",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C151500",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1. Do not set the below properties\r\n\r\na.mlb_mobile_opt_in_service.enabled. Default is true\r\nb.mlb_mobile_opt_in_service.connect.timeout.seconds -Default is 5 \r\nc.mlb_mobile_opt_in_service.read.timeout.seconds -Default is 10 \r\n\r\n2. Set the property mlb_mobile_opt_in_service.endpoint.url with QA value\r\n\r\n3.Set MPOIE- MOBILE_PHONE_OPT_IN_ENABLED text code to \"true\" at Single sales supplier level\r\n4.Set DCMB=true at Single sales supplier level\r\n5.Set TEAB at Primary Org level\r\n6.Do not set MOIDC at any levels\r\n7.Set debug level to 5 for -  com.tickets.application.patronworker.mlbam.optin.mobile.MLBMobileOptInHttpClientTranslator",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch MLB single sales application \n\r\nExpected Result:\r\nCalendar page is opened\r\n2. Click T link against any event\r\nExpected Result:\r\nAvailability page is opened\r\n3. Select the price struicture \nSelect number of tickets\nClick on continue button\r\nExpected Result:\r\nUser should navigate to cart page \r\n4. Click Continue button the cart page\r\nExpected Result:\r\nLogin modal is opened\r\n5. Select I dont have an account in MLB.com\nEnter Email, Password and Confirm password\nClick Login button\r\nExpected Result:\r\nUser is navigated to Payment page\r\n6. Verify Mobile number and Confirm Mobile Number fields are present\r\nExpected Result:\r\nMobile number and Confirm Mobile Number fields are present\r\n7. Verify MPOIMSG text with a checkbox-not selected by default is present below the mobile number fields\r\nExpected Result:\r\nThe following MPOIMSG text is displayed with a checkobx that is not selected by default.\n\n\"I agree to receive text messages & updates from the clubs website and MLB.com.\"\n\r\n8. Fill in Mobile number Confirm mobile number fields \nSelect the checkbox next to MPOIMSG text\r\nExpected Result:\r\nThe mobile fields are filled and the checkbox is selected\r\n9. On the payment page,\n\n1.Add a new credit card \n2. Fill in DPUs if applicable\n3. Enter Email and Confirm Email fields\n5. Select Marketing Source \n6. Opt in/out insurance if applicable\n7. Fill in DOB and gender if applicable\n\nClick Buy Tickets button\n\r\nExpected Result:\r\nConfirmation page is displayed\r\n10. Run the query\n\nselect * from pvo.patron_marketing_info where patron_id={};\r\nExpected Result:\r\nMARKETING_INFO_VALUES is 1 for MARKETING_INFO_ID=10\r\n11. Verify Webservice call is made to MLBAM and its parameters\r\nExpected Result:\r\nWebservice call is made to MLBAM is made. The following parameters are passed:\n\nphone_number=Patron's mobile number filled in Payment page\nchannel_id=tdc+TEAB value\ntracking_key=Patron ID\ntracking_value=tdc",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch MLB single sales application \n\r\n2. Click T link against any event\r\n3. Select the price struicture \nSelect number of tickets\nClick on continue button\r\n4. Click Continue button the cart page\r\n5. Select I dont have an account in MLB.com\nEnter Email, Password and Confirm password\nClick Login button\r\n6. Verify Mobile number and Confirm Mobile Number fields are present\r\n7. Verify MPOIMSG text with a checkbox-not selected by default is present below the mobile number fields\r\n8. Fill in Mobile number Confirm mobile number fields \nSelect the checkbox next to MPOIMSG text\r\n9. On the payment page,\n\n1.Add a new credit card \n2. Fill in DPUs if applicable\n3. Enter Email and Confirm Email fields\n5. Select Marketing Source \n6. Opt in/out insurance if applicable\n7. Fill in DOB and gender if applicable\n\nClick Buy Tickets button\n\r\n10. Run the query\n\nselect * from pvo.patron_marketing_info where patron_id={};\r\n11. Verify Webservice call is made to MLBAM and its parameters",
        "expected": "1. Calendar page is opened\r\n2. Availability page is opened\r\n3. User should navigate to cart page \r\n4. Login modal is opened\r\n5. User is navigated to Payment page\r\n6. Mobile number and Confirm Mobile Number fields are present\r\n7. The following MPOIMSG text is displayed with a checkobx that is not selected by default.\n\n\"I agree to receive text messages & updates from the clubs website and MLB.com.\"\n\r\n8. The mobile fields are filled and the checkbox is selected\r\n9. Confirmation page is displayed\r\n10. MARKETING_INFO_VALUES is 1 for MARKETING_INFO_ID=10\r\n11. Webservice call is made to MLBAM is made. The following parameters are passed:\n\nphone_number=Patron's mobile number filled in Payment page\nchannel_id=tdc+TEAB value\ntracking_key=Patron ID\ntracking_value=tdc"
      }
    ],
    "custom_jiras": "56"
  },
  {
    "id": 30692902,
    "title": "Verify the user gets  a text message on the mobile phone only for the first call for a mobile phone number per team__Single sales",
    "section_id": 1685005,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-11644",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C151501",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1. Do not set the below properties\r\n\r\na.mlb_mobile_opt_in_service.enabled. Default is true\r\nb.mlb_mobile_opt_in_service.connect.timeout.seconds -Default is 5 \r\nc.mlb_mobile_opt_in_service.read.timeout.seconds -Default is 10 \r\n\r\n2. Set the property mlb_mobile_opt_in_service.endpoint.url with QA value\r\n\r\n3.Set MPOIE- MOBILE_PHONE_OPT_IN_ENABLED text code to \"true\" at Single sales supplier level\r\n4.Set DCMB=true at Single sales supplier level\r\n5.Set TEAB at Primary Org level\r\n6.Do not set MOIDC at any levels\r\n7.Set debug level to 5 for -  com.tickets.application.patronworker.mlbam.optin.mobile.MLBMobileOptInHttpClientTranslator",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch MLB single sales application \n\r\nExpected Result:\r\nCalendar page is opened\r\n2. Click T link against any event\r\nExpected Result:\r\nAvailability page is opened\r\n3. Select the price struicture \nSelect number of tickets\nClick on continue button\r\nExpected Result:\r\nUser should navigate to cart page \r\n4. Click Continue button the cart page\r\nExpected Result:\r\nLogin modal is opened\r\n5. Select I dont have an account in MLB.com\nEnter Email, Password and Confirm password\nClick Login button\r\nExpected Result:\r\nUser is navigated to Payment page\r\n6. Verify Mobile number and Confirm Mobile Number fields are present\r\nExpected Result:\r\nMobile number and Confirm Mobile Number fields are present\r\n7. Verify MPOIMSG text with a checkbox-not selected by default is present below the mobile number fields\r\nExpected Result:\r\nThe following MPOIMSG text is displayed with a checkobx that is not selected by default.\n\n\"I agree to receive text messages & updates from the clubs website and MLB.com.\"\n\r\n8. Fill in Mobile number Confirm mobile number fields \nSelect the checkbox next to MPOIMSG text\r\nExpected Result:\r\nThe mobile fields are filled and the checkbox is selected\r\n9. On the payment page,\n\n1.Add a new credit card \n2. Fill in DPUs if applicable\n3. Enter Email and Confirm Email fields\n5. Select Marketing Source \n6. Opt in/out insurance if applicable\n7. Fill in DOB and gender if applicable\n\nClick Buy Tickets button\n\r\nExpected Result:\r\nConfirmation page is displayed\r\n10. Run the query\n\nselect * from pvo.patron_marketing_info where patron_id={};\r\nExpected Result:\r\nMARKETING_INFO_VALUES is 1 for MARKETING_INFO_ID=10\r\n11. Verify Webservice call is made to MLBAM and its parameters\r\nExpected Result:\r\nWebservice call is made to MLBAM is made. The following parameters are passed:\n\nphone_number=Patron's mobile number filled in Payment page\nchannel_id=tdc+TEAB value\ntracking_key=Patron ID\ntracking_value=tdc\r\n12. Verify user gets text message on the Mobile phone\r\nExpected Result:\r\nUser gets text message on the Mobile phone\r\n13. Repeat the steps from 2 to 8 for the same patron using same Mobile Number for the same TEAB value\r\n14. Verify that user is not getting any text message from MLBAM for the subsequent calls made using same mobile number for the same team\r\nExpected Result:\r\nUser is not getting any text message from MLBAM for the subsequent calls made using same mobile number for the same team",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch MLB single sales application \n\r\n2. Click T link against any event\r\n3. Select the price struicture \nSelect number of tickets\nClick on continue button\r\n4. Click Continue button the cart page\r\n5. Select I dont have an account in MLB.com\nEnter Email, Password and Confirm password\nClick Login button\r\n6. Verify Mobile number and Confirm Mobile Number fields are present\r\n7. Verify MPOIMSG text with a checkbox-not selected by default is present below the mobile number fields\r\n8. Fill in Mobile number Confirm mobile number fields \nSelect the checkbox next to MPOIMSG text\r\n9. On the payment page,\n\n1.Add a new credit card \n2. Fill in DPUs if applicable\n3. Enter Email and Confirm Email fields\n5. Select Marketing Source \n6. Opt in/out insurance if applicable\n7. Fill in DOB and gender if applicable\n\nClick Buy Tickets button\n\r\n10. Run the query\n\nselect * from pvo.patron_marketing_info where patron_id={};\r\n11. Verify Webservice call is made to MLBAM and its parameters\r\n12. Verify user gets text message on the Mobile phone\r\n13. Repeat the steps from 2 to 8 for the same patron using same Mobile Number for the same TEAB value\r\n14. Verify that user is not getting any text message from MLBAM for the subsequent calls made using same mobile number for the same team",
        "expected": "1. Calendar page is opened\r\n2. Availability page is opened\r\n3. User should navigate to cart page \r\n4. Login modal is opened\r\n5. User is navigated to Payment page\r\n6. Mobile number and Confirm Mobile Number fields are present\r\n7. The following MPOIMSG text is displayed with a checkobx that is not selected by default.\n\n\"I agree to receive text messages & updates from the clubs website and MLB.com.\"\n\r\n8. The mobile fields are filled and the checkbox is selected\r\n9. Confirmation page is displayed\r\n10. MARKETING_INFO_VALUES is 1 for MARKETING_INFO_ID=10\r\n11. Webservice call is made to MLBAM is made. The following parameters are passed:\n\nphone_number=Patron's mobile number filled in Payment page\nchannel_id=tdc+TEAB value\ntracking_key=Patron ID\ntracking_value=tdc\r\n12. User gets text message on the Mobile phone\r\n13. \r\n14. User is not getting any text message from MLBAM for the subsequent calls made using same mobile number for the same team"
      }
    ],
    "custom_jiras": "56"
  },
  {
    "id": 30692903,
    "title": "Verify that for an EXISTING account, PVO is  using  their opt-in value that they already have in the database (from patron_marketing_info)",
    "section_id": 1685005,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12299",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C151502",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1. Do not set the below properties\r\n\r\na.mlb_mobile_opt_in_service.enabled. Default is true\r\nb.mlb_mobile_opt_in_service.connect.timeout.seconds -Default is 5 \r\nc.mlb_mobile_opt_in_service.read.timeout.seconds -Default is 10 \r\n\r\n2. Set the property mlb_mobile_opt_in_service.endpoint.url with QA value\r\n\r\n3.Set MPOIE- MOBILE_PHONE_OPT_IN_ENABLED text code to \"true\" at Single sales supplier level\r\n4.Set DCMB=true at Single sales supplier level\r\n5.Set TEAB at Primary Org level\r\n6.Do not set MOIDC at any levels\r\n7.Set debug level to 5 for -  com.tickets.application.patronworker.mlbam.optin.mobile.MLBMobileOptInHttpClientTranslator",
    "custom_test_purpose": null,
    "custom_steps": "1. Run the query\n\nselect * from pvo.patron_marketing_info where patron_id={};\r\nExpected Result:\r\nNote down the MARKETING_INFO_VALUE of MARKETING_INFO_ID=10\r\n2. Launch MLB single sales application \n\r\nExpected Result:\r\nCalendar page is opened\r\n3. Click T link against any event\r\nExpected Result:\r\nAvailability page is opened\r\n4. Select the price struicture \nSelect number of tickets\nClick on continue button\r\nExpected Result:\r\nUser should navigate to cart page \r\n5. Click Continue button the cart page\r\nExpected Result:\r\nLogin modal is opened\r\n6. Select I already have an account in MLB.com\nEnter Email and Password \nClick Login button\r\nExpected Result:\r\nUser is navigated to Payment page\r\n7. Verify Mobile number and Confirm Mobile Number fields are present\r\nExpected Result:\r\nMobile number and Confirm Mobile Number fields are present\r\n8. Verify MPOIMSG text with a checkbox is present below the mobile number fields\r\nExpected Result:\r\nThe following MPOIMSG text is displayed with a checkbox \n\"I agree to receive text messages & updates from the clubs website and MLB.com.\"\n\r\n9. Verify the checkbox is selected by default if MARKETING_INFO_VALUE=1 for MARKETING_INFO_ID=10 \n\nVerify the checkbox is not selected by default if MARKETING_INFO_VALUE=0 for MARKETING_INFO_ID=10 \r\nExpected Result:\r\nThe checkbox is selected by default if MARKETING_INFO_VALUE=1 for MARKETING_INFO_ID=10 \n\nThe checkbox is not selected by default if MARKETING_INFO_VALUE=0 for MARKETING_INFO_ID=10\r\n10. Fill in Mobile number Confirm mobile number fields \n\r\nExpected Result:\r\nThe mobile fields are filled in\r\n11. On the payment page,\n\n1.Add a new credit card \n2. Fill in DPUs if applicable\n3. Enter Email and Confirm Email fields\n5. Select Marketing Source \n6. Opt in/out insurance if applicable\n7. Fill in DOB and gender if applicable\n\nClick Buy Tickets button\n\r\nExpected Result:\r\nConfirmation page is displayed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Run the query\n\nselect * from pvo.patron_marketing_info where patron_id={};\r\n2. Launch MLB single sales application \n\r\n3. Click T link against any event\r\n4. Select the price struicture \nSelect number of tickets\nClick on continue button\r\n5. Click Continue button the cart page\r\n6. Select I already have an account in MLB.com\nEnter Email and Password \nClick Login button\r\n7. Verify Mobile number and Confirm Mobile Number fields are present\r\n8. Verify MPOIMSG text with a checkbox is present below the mobile number fields\r\n9. Verify the checkbox is selected by default if MARKETING_INFO_VALUE=1 for MARKETING_INFO_ID=10 \n\nVerify the checkbox is not selected by default if MARKETING_INFO_VALUE=0 for MARKETING_INFO_ID=10 \r\n10. Fill in Mobile number Confirm mobile number fields \n\r\n11. On the payment page,\n\n1.Add a new credit card \n2. Fill in DPUs if applicable\n3. Enter Email and Confirm Email fields\n5. Select Marketing Source \n6. Opt in/out insurance if applicable\n7. Fill in DOB and gender if applicable\n\nClick Buy Tickets button",
        "expected": "1. Note down the MARKETING_INFO_VALUE of MARKETING_INFO_ID=10\r\n2. Calendar page is opened\r\n3. Availability page is opened\r\n4. User should navigate to cart page \r\n5. Login modal is opened\r\n6. User is navigated to Payment page\r\n7. Mobile number and Confirm Mobile Number fields are present\r\n8. The following MPOIMSG text is displayed with a checkbox \n\"I agree to receive text messages & updates from the clubs website and MLB.com.\"\n\r\n9. The checkbox is selected by default if MARKETING_INFO_VALUE=1 for MARKETING_INFO_ID=10 \n\nThe checkbox is not selected by default if MARKETING_INFO_VALUE=0 for MARKETING_INFO_ID=10\r\n10. The mobile fields are filled in\r\n11. Confirmation page is displayed"
      }
    ],
    "custom_jiras": "56"
  },
  {
    "id": 30692904,
    "title": "Verify the Webservice call made and message received for 2nd transaction - the same patron using same Mob number_First Opt out_Second Opt in_Single Sales",
    "section_id": 1685005,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-11644",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C151503",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1. Do not set the below properties\r\n\r\na.mlb_mobile_opt_in_service.enabled. Default is true\r\nb.mlb_mobile_opt_in_service.connect.timeout.seconds -Default is 5 \r\nc.mlb_mobile_opt_in_service.read.timeout.seconds -Default is 10 \r\n\r\n2. Set the property mlb_mobile_opt_in_service.endpoint.url with QA value\r\n\r\n3.Set MPOIE- MOBILE_PHONE_OPT_IN_ENABLED text code to \"true\" at Single sales supplier level\r\n4.Set DCMB=true at Single sales supplier level\r\n5.Set TEAB at Primary Org level\r\n6.Do not set MOIDC at any levels\r\n7.Set debug level to 5 for -  com.tickets.application.patronworker.mlbam.optin.mobile.MLBMobileOptInHttpClientTranslator",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch MLB single sales application \n\r\nExpected Result:\r\nCalendar page is opened\r\n2. Click T link against any event\r\nExpected Result:\r\nAvailability page is opened\r\n3. Select the price struicture \nSelect number of tickets\nClick on continue button\r\nExpected Result:\r\nUser should navigate to cart page \r\n4. Click Continue button the cart page\r\nExpected Result:\r\nLogin modal is opened\r\n5. Select I dont have an account in MLB.com\nEnter Email, Password and Confirm password\nClick Login button\r\nExpected Result:\r\nUser is navigated to Payment page\r\n6. Verify Mobile number and Confirm Mobile Number fields are present\r\nExpected Result:\r\nMobile number and Confirm Mobile Number fields are present\r\n7. Verify MPOIMSG text with a checkbox-not selected by default is present below the mobile number fields\r\nExpected Result:\r\nThe following MPOIMSG text is displayed with a checkobx that is not selected by default.\n\n\"I agree to receive text messages & updates from the clubs website and MLB.com.\"\n\r\n8. 1. Fill in Mobile number Confirm mobile number fields \n2. Do not select the checkbox next to MPOIMSG text\r\nExpected Result:\r\nThe mobile fields are filled and the checkbox is not selected\r\n9. On the payment page,\n\n1.Add a new credit card \n2. Fill in DPUs if applicable\n3. Enter Email and Confirm Email fields\n5. Select Marketing Source \n6. Opt in/out insurance if applicable\n7. Fill in DOB and gender if applicable\n\nClick Buy Tickets button\n\r\nExpected Result:\r\nConfirmation page is displayed\r\n10. Run the query\n\nselect * from pvo.patron_marketing_info where patron_id={};\r\nExpected Result:\r\nMARKETING_INFO_VALUES is 0 for MARKETING_INFO_ID=10\r\n11. Verify Webservice call is not made to MLBAM\r\nExpected Result:\r\nWebservice call is not made to MLBAM\r\n12. Repeat steps 1 to 4 (Lock seats for same event)\r\n13. Select I already have an account in MLB.com\nEnter Email and Password (Same patron created in 1st transaction)\nClick Login button\r\nExpected Result:\r\nUser is navigated to Payment page\r\n14. Verify MPOIMSG text with a checkbox-not selected by default is present below the mobile number fields\r\nExpected Result:\r\nThe following MPOIMSG text is displayed with a checkobx that is not selected by default.\n\n\"I agree to receive text messages & updates from the clubs website and MLB.com.\"\r\n15. 1. Fill in Mobile number Confirm mobile number fields \n2. Select the checkbox next to MPOIMSG text\r\nExpected Result:\r\nThe mobile fields are filled and the checkbox is selected\r\n16. On the payment page,\n\n1.Select an existing credit card. Enter CVC\n2. Fill in DPUs if applicable\n3. Enter Email and Confirm Email fields\n5. Select Marketing Source \n6. Opt in/out insurance if applicable\n7. Fill in DOB and gender if applicable\n\nClick Buy Tickets button\n\r\nExpected Result:\r\nConfirmation page is displayed\r\n17. Run the query\n\nselect * from pvo.patron_marketing_info where patron_id={};\r\nExpected Result:\r\nMARKETING_INFO_VALUES is 1 for MARKETING_INFO_ID=10\r\n18. Verify Webservice call is made to MLBAM and its parameters\r\nExpected Result:\r\nWebservice call is made to MLBAM is made. The following parameters are passed:\n\nphone_number=Patron's mobile number filled in Payment page\nchannel_id=tdc+TEAB value\ntracking_key=Patron ID\ntracking_value=tdc",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch MLB single sales application \n\r\n2. Click T link against any event\r\n3. Select the price struicture \nSelect number of tickets\nClick on continue button\r\n4. Click Continue button the cart page\r\n5. Select I dont have an account in MLB.com\nEnter Email, Password and Confirm password\nClick Login button\r\n6. Verify Mobile number and Confirm Mobile Number fields are present\r\n7. Verify MPOIMSG text with a checkbox-not selected by default is present below the mobile number fields\r\n8. 1. Fill in Mobile number Confirm mobile number fields \n2. Do not select the checkbox next to MPOIMSG text\r\n9. On the payment page,\n\n1.Add a new credit card \n2. Fill in DPUs if applicable\n3. Enter Email and Confirm Email fields\n5. Select Marketing Source \n6. Opt in/out insurance if applicable\n7. Fill in DOB and gender if applicable\n\nClick Buy Tickets button\n\r\n10. Run the query\n\nselect * from pvo.patron_marketing_info where patron_id={};\r\n11. Verify Webservice call is not made to MLBAM\r\n12. Repeat steps 1 to 4 (Lock seats for same event)\r\n13. Select I already have an account in MLB.com\nEnter Email and Password (Same patron created in 1st transaction)\nClick Login button\r\n14. Verify MPOIMSG text with a checkbox-not selected by default is present below the mobile number fields\r\n15. 1. Fill in Mobile number Confirm mobile number fields \n2. Select the checkbox next to MPOIMSG text\r\n16. On the payment page,\n\n1.Select an existing credit card. Enter CVC\n2. Fill in DPUs if applicable\n3. Enter Email and Confirm Email fields\n5. Select Marketing Source \n6. Opt in/out insurance if applicable\n7. Fill in DOB and gender if applicable\n\nClick Buy Tickets button\n\r\n17. Run the query\n\nselect * from pvo.patron_marketing_info where patron_id={};\r\n18. Verify Webservice call is made to MLBAM and its parameters",
        "expected": "1. Calendar page is opened\r\n2. Availability page is opened\r\n3. User should navigate to cart page \r\n4. Login modal is opened\r\n5. User is navigated to Payment page\r\n6. Mobile number and Confirm Mobile Number fields are present\r\n7. The following MPOIMSG text is displayed with a checkobx that is not selected by default.\n\n\"I agree to receive text messages & updates from the clubs website and MLB.com.\"\n\r\n8. The mobile fields are filled and the checkbox is not selected\r\n9. Confirmation page is displayed\r\n10. MARKETING_INFO_VALUES is 0 for MARKETING_INFO_ID=10\r\n11. Webservice call is not made to MLBAM\r\n12. \r\n13. User is navigated to Payment page\r\n14. The following MPOIMSG text is displayed with a checkobx that is not selected by default.\n\n\"I agree to receive text messages & updates from the clubs website and MLB.com.\"\r\n15. The mobile fields are filled and the checkbox is selected\r\n16. Confirmation page is displayed\r\n17. MARKETING_INFO_VALUES is 1 for MARKETING_INFO_ID=10\r\n18. Webservice call is made to MLBAM is made. The following parameters are passed:\n\nphone_number=Patron's mobile number filled in Payment page\nchannel_id=tdc+TEAB value\ntracking_key=Patron ID\ntracking_value=tdc"
      }
    ],
    "custom_jiras": "56"
  },
  {
    "id": 30692905,
    "title": "VerifyÂ  the ticket status displayed in the inventory of the Broker patron after acquiring multiple tickets using barcode",
    "section_id": 1685006,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15432",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C152179",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": "Use the below PPT for the refrence in Broker Work Flows:\r\n\r\nhttp://tdcsharepoint.tixx.tickets.com/sites/Enterprise/PartnerServices/Training%20Materials/Notes%20and%20Drafts/Replay%20Broker%20Platform%20Notes%20and%20Workflows.pptx\r\n\r\n\r\n\r\n\r\nPre-Requisite:                                                                                            \r\n PV:                                                                                                               \r\n1.Login to PV and navigates to AFP                                                 \r\n2.Ticket Acquire Actions Allowed should be true in Ticket Permissions AFP                                                                                   \r\n3.Market permissions for Acqurie setting should be in AFP \r\n4.Patron Market permission should be set                       \r\n5.Acquire access should be set in event access                                  \r\n6. Configure a Broker Patron and associate it to Apigee user\r\n7. Complete a sale transaction in PV by a  patron A(patron account)\r\n8. Print the tickets and note down the barcodes",
    "custom_test_purpose": null,
    "custom_steps": "1. Steps:              \n1. Launch Rest Client Tool\n2. Load AcquireTickets V2 API\n3. Provide all required parameter including Target Patron Account ID(Patron B) and ticket barcodes\r\n2. 4. Run the request\r\nExpected Result:\r\nRequset should run without error.\r\n3. 5. Verify the response\r\nExpected Result:\r\nIn response \"forwardStatus\" : \"ACQUIRED\" \nshould be displayed\r\n4. Verify the Get Ticket Inventory is passed to PV with all ticket IDs.\r\nExpected Result:\r\nGet Ticket Inventory should be passed to PV with all ticket IDs.\r\n5. Launch the Mytickets and login with broker \npatron account(Patron B)\r\nExpected Result:\r\nLogin successful\r\n6. Verify the Persist Inventory call is passed with \"GET\" as operation\r\nExpected Result:\r\nThe Persist inventory call should be passed to PV\r\n7. Navigates to inventory tab\r\nExpected Result:\r\nuser should navigates to inventory page\r\n8. Verify the Ticket status is displayed as \n\"ACQUIRED: ACCOUNT NAME \" for all  \nacquired tickets\r\nExpected Result:\r\nTicket status is displayed as \"ACQUIRED \n: ACCOUNT NAME \"  for all  acquired \ntickets\r\n9. .Verify in GetPatronInventory call and the \nforward_status is displayed as \"ACQUIRED\"  for \nall acquired tickets\r\nExpected Result:\r\nforward_status is displayed as \"ACQUIRED  \nin GetPatronInventory call  for all acquired \ntickets\r\n10. Verify the DB:\n\nselect * from pvo.PATRON_INVENTORY_SEAT where PATRON_ID= ;\r\nExpected Result:\r\npatron_inventory_seat table of  Broker\nField\tvalue\nSTATUS_CODE \tIW\nFORWARD_STATUS \tACQUIRED\nMARKET_OFFER_STATUS \tVALID\nMARKETPLACES \tNULL\r\n11. Logout from Brokers account\r\nExpected Result:\r\nThe user should be navigated to Login Page\r\n12. Verify the Financial Patron account and navigated to the Event whose tickets are acquired by.\r\nExpected Result:\r\nThe user should be navigated to Financial Patron Event\r\n13. .Verify in GetPatronInventory call and the \nforward_status is displayed as \"PULLED\"  for \nall acquired tickets\r\nExpected Result:\r\nforward_status is displayed as \"ACQUIRED  \nin GetPatronInventory call  for all acquired \ntickets\r\n14. Verify the Ticket status is displayed as \n\"ACQUIRED BY : BROKER ACCOUNT NAME \" for all  \nacquired tickets\r\nExpected Result:\r\nTicket status is displayed as \"ACQUIRED BY \n: FINANCIAL ACCOUNT NAME \"  for all  acquired \ntickets\r\n15. Verify the DB:\n\nselect * from pvo.PATRON_INVENTORY_SEAT where PATRON_ID= ;\r\nExpected Result:\r\npatron_inventory_seat table of Financial patron\nField\tvalue\nSTATUS_CODE \tPL\nFORWARD_STATUS \tPULLED\nMARKET_OFFER_STATUS \tVALID\nMARKETPLACES \tNULL\n\t\r\n16. 1.Login to PV \n2.Navigates to order details  for patron A\r\nExpected Result:\r\nOrder details should be displayed\r\n17. \t\nVerify ACQUIRED and PULLED status displayed in delivery tab for respecive Patron and Barcode strike off for financial patron\r\nExpected Result:\r\nACQUIRED and PULLED status \nshould be displayed in delivery tab",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Steps:              \n1. Launch Rest Client Tool\n2. Load AcquireTickets V2 API\n3. Provide all required parameter including Target Patron Account ID(Patron B) and ticket barcodes\r\n2. 4. Run the request\r\n3. 5. Verify the response\r\n4. Verify the Get Ticket Inventory is passed to PV with all ticket IDs.\r\n5. Launch the Mytickets and login with broker \npatron account(Patron B)\r\n6. Verify the Persist Inventory call is passed with \"GET\" as operation\r\n7. Navigates to inventory tab\r\n8. Verify the Ticket status is displayed as \n\"ACQUIRED: ACCOUNT NAME \" for all  \nacquired tickets\r\n9. .Verify in GetPatronInventory call and the \nforward_status is displayed as \"ACQUIRED\"  for \nall acquired tickets\r\n10. Verify the DB:\n\nselect * from pvo.PATRON_INVENTORY_SEAT where PATRON_ID= ;\r\n11. Logout from Brokers account\r\n12. Verify the Financial Patron account and navigated to the Event whose tickets are acquired by.\r\n13. .Verify in GetPatronInventory call and the \nforward_status is displayed as \"PULLED\"  for \nall acquired tickets\r\n14. Verify the Ticket status is displayed as \n\"ACQUIRED BY : BROKER ACCOUNT NAME \" for all  \nacquired tickets\r\n15. Verify the DB:\n\nselect * from pvo.PATRON_INVENTORY_SEAT where PATRON_ID= ;\r\n16. 1.Login to PV \n2.Navigates to order details  for patron A\r\n17. \t\nVerify ACQUIRED and PULLED status displayed in delivery tab for respecive Patron and Barcode strike off for financial patron",
        "expected": "1. \r\n2. Requset should run without error.\r\n3. In response \"forwardStatus\" : \"ACQUIRED\" \nshould be displayed\r\n4. Get Ticket Inventory should be passed to PV with all ticket IDs.\r\n5. Login successful\r\n6. The Persist inventory call should be passed to PV\r\n7. user should navigates to inventory page\r\n8. Ticket status is displayed as \"ACQUIRED \n: ACCOUNT NAME \"  for all  acquired \ntickets\r\n9. forward_status is displayed as \"ACQUIRED  \nin GetPatronInventory call  for all acquired \ntickets\r\n10. patron_inventory_seat table of  Broker\nField\tvalue\nSTATUS_CODE \tIW\nFORWARD_STATUS \tACQUIRED\nMARKET_OFFER_STATUS \tVALID\nMARKETPLACES \tNULL\r\n11. The user should be navigated to Login Page\r\n12. The user should be navigated to Financial Patron Event\r\n13. forward_status is displayed as \"ACQUIRED  \nin GetPatronInventory call  for all acquired \ntickets\r\n14. Ticket status is displayed as \"ACQUIRED BY \n: FINANCIAL ACCOUNT NAME \"  for all  acquired \ntickets\r\n15. patron_inventory_seat table of Financial patron\nField\tvalue\nSTATUS_CODE \tPL\nFORWARD_STATUS \tPULLED\nMARKET_OFFER_STATUS \tVALID\nMARKETPLACES \tNULL\n\t\r\n16. Order details should be displayed\r\n17. ACQUIRED and PULLED status \nshould be displayed in delivery tab"
      }
    ],
    "custom_jiras": "63.1"
  },
  {
    "id": 30692906,
    "title": "Verify acquiring parking tickets and verify the status of tickets in the inventory of Financial patron and broker patron",
    "section_id": 1685006,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15432",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C152180",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": "Use the below PPT for the refrence in Broker Work Flows:\r\n\r\nhttp://tdcsharepoint.tixx.tickets.com/sites/Enterprise/PartnerServices/Training%20Materials/Notes%20and%20Drafts/Replay%20Broker%20Platform%20Notes%20and%20Workflows.pptx\r\n\r\n\r\n\r\nPre-Requisite:                                                                                            \r\n PV:                                                                                                               \r\n1.Login to PV and navigates to AFP                                                 \r\n2.Ticket Acquire Actions Allowed should be true in Ticket Permissions AFP                                                                                   \r\n3.Market permissions for Acqurie setting should be in AFP \r\n4.Patron Market permission should be set                       \r\n5.Acquire access should be set in event access                                  \r\n6. Configure a Broker Patron and associate it to Apigee user\r\n7. Complete a sale transaction with Parking Tickets in PV by a  patron A(patron account)\r\n8. Print the tickets and note down the barcodes",
    "custom_test_purpose": null,
    "custom_steps": "1. Steps:              \n1. Launch Rest Client Tool\n2. Load AcquireTickets V2 API for (Parking Tickets)\n3. Provide all required parameter including Target Patron Account ID(Patron B) and ticket barcodes\r\n2. 4. Run the request\r\nExpected Result:\r\nRequset should run without error.\r\n3. 5. Verify the response\r\nExpected Result:\r\nIn response \"forwardStatus\" : \"ACQUIRED\" \nshould be displayed\r\n4. Verify the Get Ticket Inventory is passed to PV with all ticket IDs.\r\nExpected Result:\r\nGet Ticket Inventory should be passed to PV with all ticket IDs.\r\n5. Launch the Mytickets and login with broker \npatron account(Patron B)\r\nExpected Result:\r\nLogin successful\r\n6. Verify the Persist Inventory call is passed with \"GET\" as operation\r\nExpected Result:\r\nThe Persist inventory call should be passed to PV\r\n7. Navigates to inventory tab\r\nExpected Result:\r\nuser should navigates to inventory page\r\n8. Verify the Ticket status is displayed as \n\"ACQUIRED: ACCOUNT NAME \" for all  \nacquired tickets\r\nExpected Result:\r\nTicket status is displayed as \"ACQUIRED \n: ACCOUNT NAME \"  for all  acquired \ntickets\r\n9. .Verify in GetPatronInventory call and the \nforward_status is displayed as \"ACQUIRED\"  for \nall acquired tickets\r\nExpected Result:\r\nforward_status is displayed as \"ACQUIRED  \nin GetPatronInventory call  for all acquired \ntickets\r\n10. Verify the DB:\n\nselect * from pvo.PATRON_INVENTORY_SEAT where PATRON_ID= ;\r\nExpected Result:\r\npatron_inventory_seat table of  Broker\nField\tvalue\nSTATUS_CODE \tIW\nFORWARD_STATUS \tACQUIRED\nMARKET_OFFER_STATUS \tVALID\nMARKETPLACES \tNULL\r\n11. Logout from Brokers account\r\nExpected Result:\r\nThe user should be navigated to Login Page\r\n12. Verify the Financial Patron account and navigated to the Event whose tickets are acquired by.\r\nExpected Result:\r\nThe user should be navigated to Financial Patron Event\r\n13. .Verify in GetPatronInventory call and the \nforward_status is displayed as \"PULLED\"  for \nall acquired tickets\r\nExpected Result:\r\nforward_status is displayed as \"ACQUIRED  \nin GetPatronInventory call  for all acquired \ntickets\r\n14. Verify the Ticket status is displayed as \n\"ACQUIRED BY : BROKER ACCOUNT NAME \" for all  \nacquired tickets\r\nExpected Result:\r\nTicket status is displayed as \"ACQUIRED BY \n: FINANCIAL ACCOUNT NAME \"  for all  acquired \ntickets\r\n15. Verify the DB:\n\nselect * from pvo.PATRON_INVENTORY_SEAT where PATRON_ID= ;\r\nExpected Result:\r\npatron_inventory_seat table of Financial patron\nField\tvalue\nSTATUS_CODE \tPL\nFORWARD_STATUS \tPULLED\nMARKET_OFFER_STATUS \tVALID\nMARKETPLACES \tNULL\n\t\r\n16. 1.Login to PV \n2.Navigates to order details  for patron A\r\nExpected Result:\r\nOrder details should be displayed\r\n17. Verify ACQUIRED and PULLED status displayed in delivery tab\r\nExpected Result:\r\nACQUIRED and PULLED status \nshould be displayed in delivery tab",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Steps:              \n1. Launch Rest Client Tool\n2. Load AcquireTickets V2 API for (Parking Tickets)\n3. Provide all required parameter including Target Patron Account ID(Patron B) and ticket barcodes\r\n2. 4. Run the request\r\n3. 5. Verify the response\r\n4. Verify the Get Ticket Inventory is passed to PV with all ticket IDs.\r\n5. Launch the Mytickets and login with broker \npatron account(Patron B)\r\n6. Verify the Persist Inventory call is passed with \"GET\" as operation\r\n7. Navigates to inventory tab\r\n8. Verify the Ticket status is displayed as \n\"ACQUIRED: ACCOUNT NAME \" for all  \nacquired tickets\r\n9. .Verify in GetPatronInventory call and the \nforward_status is displayed as \"ACQUIRED\"  for \nall acquired tickets\r\n10. Verify the DB:\n\nselect * from pvo.PATRON_INVENTORY_SEAT where PATRON_ID= ;\r\n11. Logout from Brokers account\r\n12. Verify the Financial Patron account and navigated to the Event whose tickets are acquired by.\r\n13. .Verify in GetPatronInventory call and the \nforward_status is displayed as \"PULLED\"  for \nall acquired tickets\r\n14. Verify the Ticket status is displayed as \n\"ACQUIRED BY : BROKER ACCOUNT NAME \" for all  \nacquired tickets\r\n15. Verify the DB:\n\nselect * from pvo.PATRON_INVENTORY_SEAT where PATRON_ID= ;\r\n16. 1.Login to PV \n2.Navigates to order details  for patron A\r\n17. Verify ACQUIRED and PULLED status displayed in delivery tab",
        "expected": "1. \r\n2. Requset should run without error.\r\n3. In response \"forwardStatus\" : \"ACQUIRED\" \nshould be displayed\r\n4. Get Ticket Inventory should be passed to PV with all ticket IDs.\r\n5. Login successful\r\n6. The Persist inventory call should be passed to PV\r\n7. user should navigates to inventory page\r\n8. Ticket status is displayed as \"ACQUIRED \n: ACCOUNT NAME \"  for all  acquired \ntickets\r\n9. forward_status is displayed as \"ACQUIRED  \nin GetPatronInventory call  for all acquired \ntickets\r\n10. patron_inventory_seat table of  Broker\nField\tvalue\nSTATUS_CODE \tIW\nFORWARD_STATUS \tACQUIRED\nMARKET_OFFER_STATUS \tVALID\nMARKETPLACES \tNULL\r\n11. The user should be navigated to Login Page\r\n12. The user should be navigated to Financial Patron Event\r\n13. forward_status is displayed as \"ACQUIRED  \nin GetPatronInventory call  for all acquired \ntickets\r\n14. Ticket status is displayed as \"ACQUIRED BY \n: FINANCIAL ACCOUNT NAME \"  for all  acquired \ntickets\r\n15. patron_inventory_seat table of Financial patron\nField\tvalue\nSTATUS_CODE \tPL\nFORWARD_STATUS \tPULLED\nMARKET_OFFER_STATUS \tVALID\nMARKETPLACES \tNULL\n\t\r\n16. Order details should be displayed\r\n17. ACQUIRED and PULLED status \nshould be displayed in delivery tab"
      }
    ],
    "custom_jiras": "63.1"
  },
  {
    "id": 30692907,
    "title": "Verify the status against the acquired ticket in brokers inventory if tickets are acquired from anonymus order",
    "section_id": 1685006,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15432",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C152181",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre-Requisite: \n\nPV\n1.Login to PV and navigates to AFP                                                 \n2.Ticket Acquire Actions Allowed should be true \nin Ticket Permissions \nAFP                                                                                  \n 3.Market permissions for Acqurie setting should \nbe in AFP \n4.Patron Market permission should be set                         \n5.Acquire access should be set in event access                                  \n6. Configure a Broker Patron and associate it to \nApigee user\n7. Complete an anonymus sale transaction in PV \n8. Print the tickets and note down the \nbarcode\r\nExpected Result:\r\nPre-Requisite should be met.\r\n2. 1.Launch Rest Client Tool\n2. Load AcquireTickets V2 API\n3. Provide all required parameter including Target Patron Account ID(Patron B) and ticket barcode\r\n3. Run the request\r\nExpected Result:\r\nRequest executed successfully.\r\n4. Verify the response\r\nExpected Result:\r\nIn response \"forwardStatus\" : \"ACQUIRED\"\r\n5. Login to PV  and navigates to order details  for \npatron A\r\nExpected Result:\r\nOrder details should be available.\r\n6. Verify ACQUIRED and PULLED status   in \ndelivery tab\r\nExpected Result:\r\nStatus of the ticket should be changed to \nACQUIRED  and PULLED\r\n7. Verify the  broker patron able to acquire the \ntickets\r\nExpected Result:\r\nThe  broker patron should be able to acquire the \ntickets\r\n8. Launch the Mytickets and login with broker \npatron account(Patron B)\r\nExpected Result:\r\nAble to login\r\n9. Verify the following in GetPatronInventory call for \nacquired tickets\nâ€¢ received_from_account_id\nâ€¢ received_from_first_name\nâ€¢ received_from_last_name\r\n10. Verify the status of acquired tickets in inventory page- \"Acquired : \"\r\nExpected Result:\r\nThe status of acquired tickets in inventory page- \"Acquired : \"\r\n11. Verify the DB:\n\nselect * from pvo.PATRON_INVENTORY_SEAT where PATRON_ID= ;\r\nExpected Result:\r\npatron_inventory_seat table of Broker\nField value\nSTATUS_CODE IW\nFORWARD_STATUS ACQUIRED\nMARKET_OFFER_STATUS VALID\nMARKETPLACES NULL\r\n12. \t\n1.Login to PV \n2.Navigates to order details for Broker Patron\r\nExpected Result:\r\nOrder details should be displayed\r\n13. \t\nVerify ACQUIRED and PULLED status displayed in delivery tab for respecive Patron and Barcode strike off for financial patron\r\nExpected Result:\r\nACQUIRED and PULLED status \nshould be displayed in delivery tab",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-Requisite: \n\nPV\n1.Login to PV and navigates to AFP                                                 \n2.Ticket Acquire Actions Allowed should be true \nin Ticket Permissions \nAFP                                                                                  \n 3.Market permissions for Acqurie setting should \nbe in AFP \n4.Patron Market permission should be set                         \n5.Acquire access should be set in event access                                  \n6. Configure a Broker Patron and associate it to \nApigee user\n7. Complete an anonymus sale transaction in PV \n8. Print the tickets and note down the \nbarcode\r\n2. 1.Launch Rest Client Tool\n2. Load AcquireTickets V2 API\n3. Provide all required parameter including Target Patron Account ID(Patron B) and ticket barcode\r\n3. Run the request\r\n4. Verify the response\r\n5. Login to PV  and navigates to order details  for \npatron A\r\n6. Verify ACQUIRED and PULLED status   in \ndelivery tab\r\n7. Verify the  broker patron able to acquire the \ntickets\r\n8. Launch the Mytickets and login with broker \npatron account(Patron B)\r\n9. Verify the following in GetPatronInventory call for \nacquired tickets\nâ€¢ received_from_account_id\nâ€¢ received_from_first_name\nâ€¢ received_from_last_name\r\n10. Verify the status of acquired tickets in inventory page- \"Acquired : \"\r\n11. Verify the DB:\n\nselect * from pvo.PATRON_INVENTORY_SEAT where PATRON_ID= ;\r\n12. \t\n1.Login to PV \n2.Navigates to order details for Broker Patron\r\n13. \t\nVerify ACQUIRED and PULLED status displayed in delivery tab for respecive Patron and Barcode strike off for financial patron",
        "expected": "1. Pre-Requisite should be met.\r\n2. \r\n3. Request executed successfully.\r\n4. In response \"forwardStatus\" : \"ACQUIRED\"\r\n5. Order details should be available.\r\n6. Status of the ticket should be changed to \nACQUIRED  and PULLED\r\n7. The  broker patron should be able to acquire the \ntickets\r\n8. Able to login\r\n9. \r\n10. The status of acquired tickets in inventory page- \"Acquired : \"\r\n11. patron_inventory_seat table of Broker\nField value\nSTATUS_CODE IW\nFORWARD_STATUS ACQUIRED\nMARKET_OFFER_STATUS VALID\nMARKETPLACES NULL\r\n12. Order details should be displayed\r\n13. ACQUIRED and PULLED status \nshould be displayed in delivery tab"
      }
    ],
    "custom_jiras": "63.1"
  },
  {
    "id": 30692908,
    "title": "Verify the Replay flow for the acquired tickets edited sell price with > $ 1000 and purchase",
    "section_id": 1685006,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 4,
    "milestone_id": null,
    "refs": null,
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C152182",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": "Execute the Acquire action from the case [C123347] but DO NOT login MTD after acquire",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the POST MAN TOOL\r\nExpected Result:\r\nPostman tool should be launched\r\n2. Load Create offer API\n\nRequest:\n\nhttps://test.pvapi.provenue.com/v2/marketOffers/\n\nHeaders:\n\nAccept:application/json\nPV-Application-ID:abcd\nPV-API-Key:xxxx\nContent-Type:application/json\nAuthorization:Bearer \nPv-Product:PRODUCT_BROKER_PLATFORM\n\n\nMethod - POST\n\nPayload:\n\n{\n                \"marketOffer\": {\n                                \"type\": \"RESALE\",\n                                \"rolloverToConsignBackOnExpiration\": false,\n                                \"rolloverToDonationOnExpiration\": false,\n                                \"expirationDate\": \"2017-12-08T00:00:00-08:00\",\n                                \n                                \"sellerPatronAccount\": {\n                                                \"id\":179290\n                                },\n                                \"primaryEventLineItem\": {\n                                                \"perTicketPrice\": {\n                                                                \"value\": 660.00, \\\\ Seller Price\n                                                                \"currencyCode\": \"USD\"\n                                                },\n                                                \"tickets\": [{\n                                                                \"id\": 125313267    \\\\Ticket ID from acquire response                                           }]\n                               \n                                }\n                }\n}\n\n\n\r\nExpected Result:\r\nCreate replay offer API should be loaded\r\n3. Run the Request\r\nExpected Result:\r\nThe request should be Run and the valid response should be returned.\r\n4. Verify the PVHC Logs\r\nExpected Result:\r\nPVHC logs should be verified and make sure we don't have refresh inventory call made after create offer API Processing\r\n5. Verify the PVO2 logs\r\nExpected Result:\r\nThe Create offer request should be processed at PVO2 and verify the inventory ID is created in PVo2\r\n6. Verify PVO GetPatron Inventory call\r\nExpected Result:\r\nPVO GetPatron inventory call should be made from PVO to PV with individual tickets IDs and perf codes\r\n7. Verify MTD UI history page & patron inventory & inventory_Seat tables\r\nExpected Result:\r\nThe external offer ID (PVO Inventory ID ) should be created fro replay\r\n8. Verify PV market offer search with external offer ID\r\nExpected Result:\r\nWe should get the result with Markups,Seller price all should be same as that we gave in request in Broker platform\r\n9. Now Run the Getevent PV API\n\nhttps://provenue-test.apigee.net/v2/marketOffers/90388?sellerPatronAccountId=179290\n\nAccept:application/json\nPV-Application-ID:abcd\nPV-API-Key:xxxx\nContent-Type:application/json\nAuthorization:Bearer OZBIiT2C4GE3vJfnJI8w7gBkkXYl\nPv-Product:PRODUCT_BROKER_PLATFORM\r\nExpected Result:\r\nGet event API should be run and the response should be verified in Postman- Collect ETag\r\n10. Run Updateoffer PV API\n\nRequest\n https://provenue-test.apigee.net/v2/marketOffers/90388\nPv-Product:PRODUCT_BROKER_PLATFORM\nIf-Match:31353039343436363933313133 \\\\ETAg from Getevent\nPV-API-Key:xxxx\nPV-Application-ID:abcd\nAccept:application/json\nContent-Type:application/json\nAuthorization:Bearer OZBIiT2C4GE3vJfnJI8w7gBkkXYl \\\\Access token\n\nMethod - PATCH\n\n{\n            \"marketOffer\": {\n                        \"rolloverToConsignBackOnExpiration\": false,\n                        \"rolloverToDonationOnExpiration\": false,\n            \"splitOption\": \"NO_SPLITS\",\n                        \n                        \"sellerPatronAccount\": {\n                                    \"id\": 179290\n                        },\n                        \"primaryEventLineItem\": {\n                                    \"perTicketPrice\": {\n                                                \"value\": \"1200.00\", \\\\VAlue should be greater than 1000\n                                                \"currencyCode\": \"USD\"\n                                    }\n                        }\n            }\n}  \n\n\n\r\nExpected Result:\r\nThe request should be Run and the response should be returned.\r\n11. Verify the inventory seat table\n\nselect * from pvo.INVENTORY_SEAT where INVENTORY_ID=\r\nExpected Result:\r\nThe Status must be IO. Verify the inventory seats table should be stored seller price with the value >$1000\r\n12. Verify PVHC Call \r\nExpected Result:\r\nPVHC logs should be verified and make sure we don't have refresh inventory call made after Update offer API Processing\r\n13. Verify PVO GetPatron Inventory call\r\nExpected Result:\r\nPVO GetPatron inventory call should be made from PVO to PV with individual tickets IDs and perf codes\r\n14. Verify MTD UI history page & patron inventory & inventory_Seat tables\r\nExpected Result:\r\nThe external offer ID (PVO Inventory ID ) should be created fro replay\r\n15. Launch the B2C link and navigate to Replay event list\r\nExpected Result:\r\nThe user should be able to see the event for whicjh we have created the offer\n\n-Verify getMarket APi--\r\n16. Select event and navigate to offer list\r\nExpected Result:\r\nThe user should be navigated to the offer list page\n\n-Verify the Getoffer API\r\n17. Select the offer Created and navigate to the shopping cart page after login as existing patron\r\nExpected Result:\r\nThe user should be able to lock seats\r\n18. Give CVC and complete the transaction\r\nExpected Result:\r\nThe transaction should be completed succesfully\r\n19. Verify the Market payment call\r\nExpected Result:\r\nThe response should be returned with the correct values\r\n20. Verify the inventory seat table\n\nselect * from pvo.INVENTORY_SEAT where INVENTORY_ID=\r\nExpected Result:\r\nThe Status should be IS.\r\n21. Verify the Seller Ticket Status in MyTickets Inventory\r\nExpected Result:\r\nIt should be \"Sold- Replay\"\r\n22. Verify the PV,PVO ticket status and verify the seller and buyer inventory after completing the replay purchase\r\nExpected Result:\r\nAll type order details should be updated as expected.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the POST MAN TOOL\r\n2. Load Create offer API\n\nRequest:\n\nhttps://test.pvapi.provenue.com/v2/marketOffers/\n\nHeaders:\n\nAccept:application/json\nPV-Application-ID:abcd\nPV-API-Key:xxxx\nContent-Type:application/json\nAuthorization:Bearer \nPv-Product:PRODUCT_BROKER_PLATFORM\n\n\nMethod - POST\n\nPayload:\n\n{\n                \"marketOffer\": {\n                                \"type\": \"RESALE\",\n                                \"rolloverToConsignBackOnExpiration\": false,\n                                \"rolloverToDonationOnExpiration\": false,\n                                \"expirationDate\": \"2017-12-08T00:00:00-08:00\",\n                                \n                                \"sellerPatronAccount\": {\n                                                \"id\":179290\n                                },\n                                \"primaryEventLineItem\": {\n                                                \"perTicketPrice\": {\n                                                                \"value\": 660.00, \\\\ Seller Price\n                                                                \"currencyCode\": \"USD\"\n                                                },\n                                                \"tickets\": [{\n                                                                \"id\": 125313267    \\\\Ticket ID from acquire response                                           }]\n                               \n                                }\n                }\n}\n\n\n\r\n3. Run the Request\r\n4. Verify the PVHC Logs\r\n5. Verify the PVO2 logs\r\n6. Verify PVO GetPatron Inventory call\r\n7. Verify MTD UI history page & patron inventory & inventory_Seat tables\r\n8. Verify PV market offer search with external offer ID\r\n9. Now Run the Getevent PV API\n\nhttps://provenue-test.apigee.net/v2/marketOffers/90388?sellerPatronAccountId=179290\n\nAccept:application/json\nPV-Application-ID:abcd\nPV-API-Key:xxxx\nContent-Type:application/json\nAuthorization:Bearer OZBIiT2C4GE3vJfnJI8w7gBkkXYl\nPv-Product:PRODUCT_BROKER_PLATFORM\r\n10. Run Updateoffer PV API\n\nRequest\n https://provenue-test.apigee.net/v2/marketOffers/90388\nPv-Product:PRODUCT_BROKER_PLATFORM\nIf-Match:31353039343436363933313133 \\\\ETAg from Getevent\nPV-API-Key:xxxx\nPV-Application-ID:abcd\nAccept:application/json\nContent-Type:application/json\nAuthorization:Bearer OZBIiT2C4GE3vJfnJI8w7gBkkXYl \\\\Access token\n\nMethod - PATCH\n\n{\n            \"marketOffer\": {\n                        \"rolloverToConsignBackOnExpiration\": false,\n                        \"rolloverToDonationOnExpiration\": false,\n            \"splitOption\": \"NO_SPLITS\",\n                        \n                        \"sellerPatronAccount\": {\n                                    \"id\": 179290\n                        },\n                        \"primaryEventLineItem\": {\n                                    \"perTicketPrice\": {\n                                                \"value\": \"1200.00\", \\\\VAlue should be greater than 1000\n                                                \"currencyCode\": \"USD\"\n                                    }\n                        }\n            }\n}  \n\n\n\r\n11. Verify the inventory seat table\n\nselect * from pvo.INVENTORY_SEAT where INVENTORY_ID=\r\n12. Verify PVHC Call \r\n13. Verify PVO GetPatron Inventory call\r\n14. Verify MTD UI history page & patron inventory & inventory_Seat tables\r\n15. Launch the B2C link and navigate to Replay event list\r\n16. Select event and navigate to offer list\r\n17. Select the offer Created and navigate to the shopping cart page after login as existing patron\r\n18. Give CVC and complete the transaction\r\n19. Verify the Market payment call\r\n20. Verify the inventory seat table\n\nselect * from pvo.INVENTORY_SEAT where INVENTORY_ID=\r\n21. Verify the Seller Ticket Status in MyTickets Inventory\r\n22. Verify the PV,PVO ticket status and verify the seller and buyer inventory after completing the replay purchase",
        "expected": "1. Postman tool should be launched\r\n2. Create replay offer API should be loaded\r\n3. The request should be Run and the valid response should be returned.\r\n4. PVHC logs should be verified and make sure we don't have refresh inventory call made after create offer API Processing\r\n5. The Create offer request should be processed at PVO2 and verify the inventory ID is created in PVo2\r\n6. PVO GetPatron inventory call should be made from PVO to PV with individual tickets IDs and perf codes\r\n7. The external offer ID (PVO Inventory ID ) should be created fro replay\r\n8. We should get the result with Markups,Seller price all should be same as that we gave in request in Broker platform\r\n9. Get event API should be run and the response should be verified in Postman- Collect ETag\r\n10. The request should be Run and the response should be returned.\r\n11. The Status must be IO. Verify the inventory seats table should be stored seller price with the value >$1000\r\n12. PVHC logs should be verified and make sure we don't have refresh inventory call made after Update offer API Processing\r\n13. PVO GetPatron inventory call should be made from PVO to PV with individual tickets IDs and perf codes\r\n14. The external offer ID (PVO Inventory ID ) should be created fro replay\r\n15. The user should be able to see the event for whicjh we have created the offer\n\n-Verify getMarket APi--\r\n16. The user should be navigated to the offer list page\n\n-Verify the Getoffer API\r\n17. The user should be able to lock seats\r\n18. The transaction should be completed succesfully\r\n19. The response should be returned with the correct values\r\n20. The Status should be IS.\r\n21. It should be \"Sold- Replay\"\r\n22. All type order details should be updated as expected."
      }
    ],
    "custom_jiras": "1.13"
  },
  {
    "id": 30692909,
    "title": "Verify status in inventory and inventory_Seat tables when a Resale offer created by Broker is cancelled",
    "section_id": 1685006,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-16374",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C152183",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Purchase some tickets for Broker patron from PV\r\nExpected Result:\r\nTickets are purchased\r\n2. Get ticket id from PV's ticket table\r\nExpected Result:\r\nticket id is noted down\r\n3. Run Create Market offer API in Apigee platform\r\nExpected Result:\r\nCreate market offer API is ran successfully\r\n4. Check the transaction record is created in PVO inventory and inventory seat tables.\r\nExpected Result:\r\nTransaction record is created in PVO inventory and inventory seat tables. The status_code is IO\r\n5. Get the Supplier_Resv_Id from inventory seat table and search in pvo patron_inventory_seat table \r\nExpected Result:\r\nStatus_code is IR in patron_inventory_seat table\r\n6. Get inventory_id from patron_inventory_Seat table and search in patron_inventory table\r\nExpected Result:\r\nStatus_code is IW\r\n7. Run the cancel market offer store procedure from PVHC (Run cancel market offer API )\r\nExpected Result:\r\nCancel market offer API is ran successfully \r\n8. Make sure status code in inventory and inventory seat table is update to IC (Cancelled)\r\nExpected Result:\r\nStatus code in inventory and inventory seat table is update to IC (Cancelled)\r\n9. Make sure status code in patron_inventory and patron inventory seat table is update to IW\r\nExpected Result:\r\n status code in patron_inventory and patron inventory seat table is update to IW",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Purchase some tickets for Broker patron from PV\r\n2. Get ticket id from PV's ticket table\r\n3. Run Create Market offer API in Apigee platform\r\n4. Check the transaction record is created in PVO inventory and inventory seat tables.\r\n5. Get the Supplier_Resv_Id from inventory seat table and search in pvo patron_inventory_seat table \r\n6. Get inventory_id from patron_inventory_Seat table and search in patron_inventory table\r\n7. Run the cancel market offer store procedure from PVHC (Run cancel market offer API )\r\n8. Make sure status code in inventory and inventory seat table is update to IC (Cancelled)\r\n9. Make sure status code in patron_inventory and patron inventory seat table is update to IW",
        "expected": "1. Tickets are purchased\r\n2. ticket id is noted down\r\n3. Create market offer API is ran successfully\r\n4. Transaction record is created in PVO inventory and inventory seat tables. The status_code is IO\r\n5. Status_code is IR in patron_inventory_seat table\r\n6. Status_code is IW\r\n7. Cancel market offer API is ran successfully \r\n8. Status code in inventory and inventory seat table is update to IC (Cancelled)\r\n9.  status code in patron_inventory and patron inventory seat table is update to IW"
      }
    ],
    "custom_jiras": null
  },
  {
    "id": 30692910,
    "title": "Verify the Broker Patron can forward the Tickets after acquire action",
    "section_id": 1685006,
    "template_id": 1,
    "type_id": 4,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C152184",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre-requisite:\r\n \r\nPV (AFP settings should be done for mytickets parent agency,resale agency and broker agency)\r\n \r\n1.Login to PV and navigates to AFP   \r\n2.Ticket Acquire Actions Allowed should be true in Ticket Permissions AFP                                                                                 \r\n3.Market permissions for Acqurie setting should be in AFP \r\n4.Patron Market permission should be set         \r\n5.Acquire access should be set in event access                                  \r\n6.Configure a Broker Patron and associate it to Apigee user\r\n7.Complete a Single sale transaction in PVO by a  financial patron account\r\n8.Print the multiple tickets  and note down the barcode",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Postman Tool\r\nExpected Result:\r\nPost man tool should be launched\r\n2.  Load AcquireTickets V2 API\n\nRequest:\nhttps://provenue-test.apigee.net/v2/tickets/acquire\n\nHeaders\nPV-API-Key:7E859D9A-4C4D-4B63-ABA8-BBB20DD644F0\nAccept:application/json\nContent-Type:application/json\nAuthorization:Bearer \nPV-Product:PRODUCT_BROKER_PLATFORM\nPV-Application-ID:com.tickets.kiosk\n\n\nMethod - POST\n\nPayload:\n\n{\n\t\"ticketAcquire\" : {\n\t\t\"targetPatronAccount\" : {\n\t\t\t\"id\" : 179290 \\\\Broker Patron ID\n\t\t},\n          \"tickets\":[\n\n                 \n                 {\n                  \"barcode\" : \"Y7K6-L8Q9229M\" \\\\ Printed Barcode 1\n                 },{\n                  \"barcode\" : \"Y7K6-L8Q9234M\" \\\\ Printed Barcode 2\n                 },....\n.\n.\n.\n.\n}\n\n],\n          \"retainBarcode\": true,\n          \"deliverUsingTicketsAtHome\":true\n        } \t\t\n\t\n}\n\r\nExpected Result:\r\nThe request should be loaded in Postman tool\r\n3. Provide all required parameter including Target Patron Account ID and ticket barcode\r\nExpected Result:\r\nAll information needs to be provided\r\n4. Click on Send and Run the Request\r\nExpected Result:\r\nThe request run should be succesfull and the user should be getting the Acquire response.\r\n5.  Login in to PVO Mytickets using the Broker Patron Account details\r\nExpected Result:\r\nBroker Patron login should be succesful.Verify the fields current_attending_account_id,current_attending_first_name,current_attending_last_name in patron_inventory_seat table after acquiring tickets\r\n6. Verify the Persist inventory call and make sure the action for the same is GET instead of create\r\nExpected Result:\r\nThe Persist inventory replay action should be GET\r\n7. Goto Inventory \r\nExpected Result:\r\nThe patron should be navigated to Inventory and able to select the month from drop down for the event whose ticket we acquired\r\n8. Verify the Status of the acquired ticket is \"ACQUIRED: Financial ACCOUNT NAME \"\r\nExpected Result:\r\nThe Status should be displayed as mentioned\r\n9. Verify the Patron_inventory Seats table and verify the Tickets status - it should be IW\r\nExpected Result:\r\nThe patron inventory seats table should be verified\r\n10. Now Logout and Relaunch the PVO Mytickets link\r\nExpected Result:\r\nThe user should be able to lands on Login page\r\n11. Login as the financial patron\r\nExpected Result:\r\nThe user should be able to lands on Login page\r\n12. Goto Inventory. 'Verify the fields received_from_account_id, received_from_first_name and received_from_last_name in patron_inventory_seat table after acquiring tickets\r\nExpected Result:\r\nThe patron should be navigated to Inventory and able to select the month from drop down for the event whose ticket we acquired\r\n13. Verify the Status of the pulled ticket is \"ACQUIRED By: Broker ACCOUNT NAME \"\r\nExpected Result:\r\nThe Status should be displayed as mentioned\r\n14. Verify the Patron_inventory Seats table and verify the Tickets status - it should be PL\r\nExpected Result:\r\nThe patron inventory seats table should be verified\r\n15. Verify the Ticket Status in MTD and PV as well\r\nExpected Result:\r\nThe Tickets status for both Financial patron and broker patron should be displayed as expected \n\nNote: In MPV for Broker patron the Status text is \" Acquired FROM : \" \r\n16. Select the Ticket acquired from Broker Inventory\r\nExpected Result:\r\nThe Acquired ticket should be active during forward selection\r\n17. Select tickets and forward the tickets using existing PVO patron\r\nExpected Result:\r\nThe forward action needs to be completed succesfuly\r\n18. To See the Forward end to end case stpes Navigate to here [C70462]",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Postman Tool\r\n2.  Load AcquireTickets V2 API\n\nRequest:\nhttps://provenue-test.apigee.net/v2/tickets/acquire\n\nHeaders\nPV-API-Key:7E859D9A-4C4D-4B63-ABA8-BBB20DD644F0\nAccept:application/json\nContent-Type:application/json\nAuthorization:Bearer \nPV-Product:PRODUCT_BROKER_PLATFORM\nPV-Application-ID:com.tickets.kiosk\n\n\nMethod - POST\n\nPayload:\n\n{\n\t\"ticketAcquire\" : {\n\t\t\"targetPatronAccount\" : {\n\t\t\t\"id\" : 179290 \\\\Broker Patron ID\n\t\t},\n          \"tickets\":[\n\n                 \n                 {\n                  \"barcode\" : \"Y7K6-L8Q9229M\" \\\\ Printed Barcode 1\n                 },{\n                  \"barcode\" : \"Y7K6-L8Q9234M\" \\\\ Printed Barcode 2\n                 },....\n.\n.\n.\n.\n}\n\n],\n          \"retainBarcode\": true,\n          \"deliverUsingTicketsAtHome\":true\n        } \t\t\n\t\n}\n\r\n3. Provide all required parameter including Target Patron Account ID and ticket barcode\r\n4. Click on Send and Run the Request\r\n5.  Login in to PVO Mytickets using the Broker Patron Account details\r\n6. Verify the Persist inventory call and make sure the action for the same is GET instead of create\r\n7. Goto Inventory \r\n8. Verify the Status of the acquired ticket is \"ACQUIRED: Financial ACCOUNT NAME \"\r\n9. Verify the Patron_inventory Seats table and verify the Tickets status - it should be IW\r\n10. Now Logout and Relaunch the PVO Mytickets link\r\n11. Login as the financial patron\r\n12. Goto Inventory. 'Verify the fields received_from_account_id, received_from_first_name and received_from_last_name in patron_inventory_seat table after acquiring tickets\r\n13. Verify the Status of the pulled ticket is \"ACQUIRED By: Broker ACCOUNT NAME \"\r\n14. Verify the Patron_inventory Seats table and verify the Tickets status - it should be PL\r\n15. Verify the Ticket Status in MTD and PV as well\r\n16. Select the Ticket acquired from Broker Inventory\r\n17. Select tickets and forward the tickets using existing PVO patron\r\n18. To See the Forward end to end case stpes Navigate to here [C70462]",
        "expected": "1. Post man tool should be launched\r\n2. The request should be loaded in Postman tool\r\n3. All information needs to be provided\r\n4. The request run should be succesfull and the user should be getting the Acquire response.\r\n5. Broker Patron login should be succesful.Verify the fields current_attending_account_id,current_attending_first_name,current_attending_last_name in patron_inventory_seat table after acquiring tickets\r\n6. The Persist inventory replay action should be GET\r\n7. The patron should be navigated to Inventory and able to select the month from drop down for the event whose ticket we acquired\r\n8. The Status should be displayed as mentioned\r\n9. The patron inventory seats table should be verified\r\n10. The user should be able to lands on Login page\r\n11. The user should be able to lands on Login page\r\n12. The patron should be navigated to Inventory and able to select the month from drop down for the event whose ticket we acquired\r\n13. The Status should be displayed as mentioned\r\n14. The patron inventory seats table should be verified\r\n15. The Tickets status for both Financial patron and broker patron should be displayed as expected \n\nNote: In MPV for Broker patron the Status text is \" Acquired FROM : \" \r\n16. The Acquired ticket should be active during forward selection\r\n17. The forward action needs to be completed succesfuly\r\n18."
      }
    ],
    "custom_jiras": "1.13"
  },
  {
    "id": 30692911,
    "title": "Verify the nick name field is not displayed as null in Nickname field in LinkAccount tab for an account created via normal single sales and linked with another account",
    "section_id": 1685007,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14838",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C906903",
    "custom_pvo_pvodc_category": 10,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Lanuch the single sales URL\r\nExpected Result:\r\nThe user should able to launch the URL\r\n2. Select tickets and Click on continue  button\r\nExpected Result:\r\nThe user should navigate to shopping cart page\r\n3. Click on continue button on shopping cart page\r\nExpected Result:\r\nThe user navaigated to login page\r\n4. Create a new patron account and complete the \r\ntransaction\r\nExpected Result:\r\nUser should able to create new patron and \r\ncomplete the transaction\r\n5. Login to MTD with the above created account \r\ndetails\r\nExpected Result:\r\nUser hsould able to login\r\n6. Navigate to My account ->Link MLB accounts\r\nExpected Result:\r\nThe user shoudl navigate to Link MLB my account \r\npage\r\n7. Verify the Nick name field.\r\nExpected Result:\r\nThe nickname field should have the patron ID\r\n8. Click on Link my accounts tab in Link MLB \r\naccount page\r\nExpected Result:\r\nUser should navigate to Link My account page\r\n9. 1.Link any valid account.\r\n2.Log out from the application.\r\nExpected Result:\r\nUser should able to link the account and user \r\nshould navigate to login page\r\n10. Login with the email ID and password.\r\nExpected Result:\r\nVerify the account selection page is displayed\r\n11. Verify the drop down.\r\nExpected Result:\r\nDrop dwon should display with account details\r\n12. Select the account.\r\nExpected Result:\r\nUser should able to select the account\r\n13. Navigate to My account ->Link MLB accounts.\r\nExpected Result:\r\nUser should able to navigate to Link MLB \r\naccounts page\r\n14. Verify the Nick name field.\r\nExpected Result:\r\nThe nickname field should have the patron ID",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Lanuch the single sales URL\r\n2. Select tickets and Click on continue  button\r\n3. Click on continue button on shopping cart page\r\n4. Create a new patron account and complete the \r\ntransaction\r\n5. Login to MTD with the above created account \r\ndetails\r\n6. Navigate to My account ->Link MLB accounts\r\n7. Verify the Nick name field.\r\n8. Click on Link my accounts tab in Link MLB \r\naccount page\r\n9. 1.Link any valid account.\r\n2.Log out from the application.\r\n10. Login with the email ID and password.\r\n11. Verify the drop down.\r\n12. Select the account.\r\n13. Navigate to My account ->Link MLB accounts.\r\n14. Verify the Nick name field.",
        "expected": "1. The user should able to launch the URL\r\n2. The user should navigate to shopping cart page\r\n3. The user navaigated to login page\r\n4. User should able to create new patron and \r\ncomplete the transaction\r\n5. User hsould able to login\r\n6. The user shoudl navigate to Link MLB my account \r\npage\r\n7. The nickname field should have the patron ID\r\n8. User should navigate to Link My account page\r\n9. User should able to link the account and user \r\nshould navigate to login page\r\n10. Verify the account selection page is displayed\r\n11. Drop dwon should display with account details\r\n12. User should able to select the account\r\n13. User should able to navigate to Link MLB \r\naccounts page\r\n14. The nickname field should have the patron ID"
      }
    ],
    "custom_jiras": "62.1"
  },
  {
    "id": 30692912,
    "title": "Verify the nick name field is not displayed as null in Nickname field in LinkAccount tab for an account created via normal single sales.",
    "section_id": 1685007,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14838",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C906904",
    "custom_pvo_pvodc_category": 10,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Lanuch the single sales URL\r\nExpected Result:\r\nThe user should able to launch the URL\r\n2. Select tickets and Click on continue  button\r\nExpected Result:\r\nThe user should navigate to shopping cart page\r\n3. Click on continue button on shopping cart page\r\nExpected Result:\r\nThe user navaigated to login page\r\n4. Create a new patron account and complete the \r\ntransaction\r\nExpected Result:\r\nUser should able to create new patron and \r\ncomplete the transaction\r\n5. Login to MTD with the above created account \r\ndetails\r\nExpected Result:\r\nUser hsould able to login\r\n6. Navigate to My account ->Link MLB accounts\r\nExpected Result:\r\nThe user shoudl navigate to Link MLB my account \r\npage\r\n7. Verify the Nick name field.\r\nExpected Result:\r\nThe nickname field should have the patron ID",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Lanuch the single sales URL\r\n2. Select tickets and Click on continue  button\r\n3. Click on continue button on shopping cart page\r\n4. Create a new patron account and complete the \r\ntransaction\r\n5. Login to MTD with the above created account \r\ndetails\r\n6. Navigate to My account ->Link MLB accounts\r\n7. Verify the Nick name field.",
        "expected": "1. The user should able to launch the URL\r\n2. The user should navigate to shopping cart page\r\n3. The user navaigated to login page\r\n4. User should able to create new patron and \r\ncomplete the transaction\r\n5. User hsould able to login\r\n6. The user shoudl navigate to Link MLB my account \r\npage\r\n7. The nickname field should have the patron ID"
      }
    ],
    "custom_jiras": "62.1"
  },
  {
    "id": 30692913,
    "title": "Verify that for a patron created via PV ,patron is not getting linked to email  after logging to Mytickets when UNMTLGEN = false",
    "section_id": 1685007,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14966",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C906905",
    "custom_pvo_pvodc_category": 6,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisites\r\n1.Create a new patron from PV\r\n2.Set UNMTLGEN = false\r\nExpected Result:\r\nThe pre-requisite should be met\r\n2. Launch GPL Mytickets URL\r\nExpected Result:\r\nPatron should be able to launch the URL\r\n3. Login using Patron created from PV with PV user name \r\nand password\r\nExpected Result:\r\nPatron should be able to login using PV username \r\nand password\r\n4. Click on Accept button in Terms & Conditions page\r\nExpected Result:\r\nPatron should be directed to My account page\r\n5. Verify that the account is not getting linked to email  .Check \r\nMy account header in My account page\r\nExpected Result:\r\nThe header should display username in below \r\nformat.My Account (Account:[])\r\n6. Logout and  try to login above patron using account id & \r\nverify that patron is able to login.\r\nExpected Result:\r\nPatron should be able to login\r\n7. Verify DB-run below queries\r\n \r\nSelect * from pvo.PATRON_REG where \r\npatron_id='XXXXXX'\r\n\r\nSelect * from PVO.sub_agency_patron where \r\nPATRON_ID='XXXXX'\r\nExpected Result:\r\nMake sure that origin_type_id  20 record is \r\ncreated",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisites\r\n1.Create a new patron from PV\r\n2.Set UNMTLGEN = false\r\n2. Launch GPL Mytickets URL\r\n3. Login using Patron created from PV with PV user name \r\nand password\r\n4. Click on Accept button in Terms & Conditions page\r\n5. Verify that the account is not getting linked to email  .Check \r\nMy account header in My account page\r\n6. Logout and  try to login above patron using account id & \r\nverify that patron is able to login.\r\n7. Verify DB-run below queries\r\n \r\nSelect * from pvo.PATRON_REG where \r\npatron_id='XXXXXX'\r\n\r\nSelect * from PVO.sub_agency_patron where \r\nPATRON_ID='XXXXX'",
        "expected": "1. The pre-requisite should be met\r\n2. Patron should be able to launch the URL\r\n3. Patron should be able to login using PV username \r\nand password\r\n4. Patron should be directed to My account page\r\n5. The header should display username in below \r\nformat.My Account (Account:[])\r\n6. Patron should be able to login\r\n7. Make sure that origin_type_id  20 record is \r\ncreated"
      }
    ],
    "custom_jiras": "62.1"
  },
  {
    "id": 30692914,
    "title": "Verify that patron is able to reset password for a new patron created via PV which gets linked to email after logging into Mytickets.",
    "section_id": 1685007,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14966",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C906906",
    "custom_pvo_pvodc_category": 6,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisites\r\n1.Create a new patron from PV\r\n2.Set UNMTLGEN = true\r\nExpected Result:\r\nThe pre-requisite should be met\r\n2. Launch GPL Mytickets URL\r\nExpected Result:\r\nPatron should be able to launch the URL\r\n3. Login using Patron created from PV with PV user name \r\nand password\r\nExpected Result:\r\nPatron should be able to login using PV username \r\nand password\r\n4. Click on Accept button in Terms & Conditions page\r\nExpected Result:\r\nPatron should be directed to My account page\r\n5. Verify that the account is getting linked to email  .Check My \r\naccount header in My account page\r\nExpected Result:\r\nThe header should display username in below \r\nformat.My Account (Account:[])\r\n6. Logout and  try to login above patron using email id & \r\nverify that patron is able to login.\r\nExpected Result:\r\nPatron should be able to login\r\n7. Verify DB-run below queries\r\n \r\nSelect * from pvo.PATRON_REG where \r\npatron_id='XXXXXX'\r\n\r\nSelect * from PVO.sub_agency_patron where \r\nPATRON_ID='XXXXX'\r\nExpected Result:\r\nMake sure that origin_type_id  20 record is \r\ncreated and the two records are linked via the \r\nsub_agency_patron table\r\n8. Click on Reset password button\r\nExpected Result:\r\nReset password page should be displayed\r\n9. Enter Email Id and Account id and click on submit\r\nExpected Result:\r\nPatron should receive tempory password via \r\nemail\r\n10. Try login using account id and temperory password\r\nExpected Result:\r\nPatron should be able to login\r\n11. Verify that patron is able to login using temperory \r\npassword and is forcing the patron to change tempory \r\npassword\r\nExpected Result:\r\nOnce the patron login using temporary \r\npassword,force password change form \r\nshould be displayed\r\n12. Enter new password and click on sumbit\r\nExpected Result:\r\nPassword change sucees message should \r\nbe displayed in screen\r\n13. Logout and login using new password\r\nExpected Result:\r\nThe  patron should be  able to login using new \r\npassword.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisites\r\n1.Create a new patron from PV\r\n2.Set UNMTLGEN = true\r\n2. Launch GPL Mytickets URL\r\n3. Login using Patron created from PV with PV user name \r\nand password\r\n4. Click on Accept button in Terms & Conditions page\r\n5. Verify that the account is getting linked to email  .Check My \r\naccount header in My account page\r\n6. Logout and  try to login above patron using email id & \r\nverify that patron is able to login.\r\n7. Verify DB-run below queries\r\n \r\nSelect * from pvo.PATRON_REG where \r\npatron_id='XXXXXX'\r\n\r\nSelect * from PVO.sub_agency_patron where \r\nPATRON_ID='XXXXX'\r\n8. Click on Reset password button\r\n9. Enter Email Id and Account id and click on submit\r\n10. Try login using account id and temperory password\r\n11. Verify that patron is able to login using temperory \r\npassword and is forcing the patron to change tempory \r\npassword\r\n12. Enter new password and click on sumbit\r\n13. Logout and login using new password",
        "expected": "1. The pre-requisite should be met\r\n2. Patron should be able to launch the URL\r\n3. Patron should be able to login using PV username \r\nand password\r\n4. Patron should be directed to My account page\r\n5. The header should display username in below \r\nformat.My Account (Account:[])\r\n6. Patron should be able to login\r\n7. Make sure that origin_type_id  20 record is \r\ncreated and the two records are linked via the \r\nsub_agency_patron table\r\n8. Reset password page should be displayed\r\n9. Patron should receive tempory password via \r\nemail\r\n10. Patron should be able to login\r\n11. Once the patron login using temporary \r\npassword,force password change form \r\nshould be displayed\r\n12. Password change sucees message should \r\nbe displayed in screen\r\n13. The  patron should be  able to login using new \r\npassword."
      }
    ],
    "custom_jiras": "62.1"
  },
  {
    "id": 30692915,
    "title": "Verify that after creating a new patron by clicking the Create New Account link on the MyTickets login page, the patron is getting linked to email when UNMTLGEN is true",
    "section_id": 1685007,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14966",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C906907",
    "custom_pvo_pvodc_category": 6,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisites\r\n1.Create a new patron from PV\r\n2.Set UNMTLGEN = true\r\nExpected Result:\r\nThe pre-requisite should be met\r\n2. Launch GPL Mytickets URL\r\nExpected Result:\r\nPatron should be able to launch the URL\r\n3. Click on create account button\r\nExpected Result:\r\nPatron should be able presented with account \r\ncreation page\r\n4. Give account details and click on save changes.\r\nExpected Result:\r\n.Verify that new account is getting created \r\nsucessfully.\r\n5. Verify that the account is getting linked to email  .Check My \r\naccount header in My account page\r\nExpected Result:\r\nThe header should display username in below \r\nformat.My Account (Account:[])\r\n6. Logout and  try to login above patron using email id & \r\nverify that patron is able to login.\r\nExpected Result:\r\nPatron should be able to login\r\n7. Verify DB-run below queries\r\n \r\nSelect * from pvo.PATRON_REG where \r\npatron_id='XXXXXX'\r\n\r\nSelect * from PVO.sub_agency_patron where \r\nPATRON_ID='XXXXX'\r\nExpected Result:\r\nMake sure that origin_type_id  20 record is \r\ncreated and the two records are linked via the \r\nsub_agency_patron table",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisites\r\n1.Create a new patron from PV\r\n2.Set UNMTLGEN = true\r\n2. Launch GPL Mytickets URL\r\n3. Click on create account button\r\n4. Give account details and click on save changes.\r\n5. Verify that the account is getting linked to email  .Check My \r\naccount header in My account page\r\n6. Logout and  try to login above patron using email id & \r\nverify that patron is able to login.\r\n7. Verify DB-run below queries\r\n \r\nSelect * from pvo.PATRON_REG where \r\npatron_id='XXXXXX'\r\n\r\nSelect * from PVO.sub_agency_patron where \r\nPATRON_ID='XXXXX'",
        "expected": "1. The pre-requisite should be met\r\n2. Patron should be able to launch the URL\r\n3. Patron should be able presented with account \r\ncreation page\r\n4. .Verify that new account is getting created \r\nsucessfully.\r\n5. The header should display username in below \r\nformat.My Account (Account:[])\r\n6. Patron should be able to login\r\n7. Make sure that origin_type_id  20 record is \r\ncreated and the two records are linked via the \r\nsub_agency_patron table"
      }
    ],
    "custom_jiras": "62.1"
  },
  {
    "id": 30692916,
    "title": "Verify that existing old accounts with same nickaname were still able to login into Mytickets",
    "section_id": 1685007,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14841",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C906908",
    "custom_pvo_pvodc_category": 6,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite:\r\n\r\n1.Set UNMTLGEN to true.\r\n2.Have a multiple patron accounts with same nickaname \r\nlinked to an MLBAM email\r\nExpected Result:\r\nPrerequisite should be met\r\n2. Launch mytickets application\r\nExpected Result:\r\napplication should be launched successfully\r\n3. Verify that we are able login using existing old accounts with \r\nsame nickaname even after QC 14841 fix\r\nExpected Result:\r\nUser should be able to login using existing old \r\naccounts with same nickaname",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite:\r\n\r\n1.Set UNMTLGEN to true.\r\n2.Have a multiple patron accounts with same nickaname \r\nlinked to an MLBAM email\r\n2. Launch mytickets application\r\n3. Verify that we are able login using existing old accounts with \r\nsame nickaname even after QC 14841 fix",
        "expected": "1. Prerequisite should be met\r\n2. application should be launched successfully\r\n3. User should be able to login using existing old \r\naccounts with same nickaname"
      }
    ],
    "custom_jiras": "62.1"
  },
  {
    "id": 30692917,
    "title": "Verify the default error message displayed when giving same nickname while trying trying to create a new account using an MLBAM email linked to another account",
    "section_id": 1685007,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14841",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_refs": "C906909",
    "custom_pvo_pvodc_category": 6,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Have a mytickets account with account email id as \r\n'Vishnu@ ust.com'  but have it linked to another MLBAM \r\nemail say 'Bob@ust.com' for which no mytickets account \r\nexist  with nickname 'Vishnu'\r\nExpected Result:\r\nPrerequisite should be met\r\n2. Try to create a new Mytickets account with account email as \r\n'Bob@ ust.com with nickname 'Vishnu'\r\n3. Verify that Patron is getting proper error message in this case\r\nExpected Result:\r\nUser should get appropriate error message.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Have a mytickets account with account email id as \r\n'Vishnu@ ust.com'  but have it linked to another MLBAM \r\nemail say 'Bob@ust.com' for which no mytickets account \r\nexist  with nickname 'Vishnu'\r\n2. Try to create a new Mytickets account with account email as \r\n'Bob@ ust.com with nickname 'Vishnu'\r\n3. Verify that Patron is getting proper error message in this case",
        "expected": "1. Prerequisite should be met\r\n2. \r\n3. User should get appropriate error message."
      }
    ],
    "custom_jiras": "62.1"
  },
  {
    "id": 30692918,
    "title": "Verify the user is able to edit the account details in MPV of an existing account created via MTD",
    "section_id": 1685007,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14849",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_refs": "C906910",
    "custom_pvo_pvodc_category": 6,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre-requisites:\r\n \r\n1. A PVO My Tickets account should exist - \r\nCreate a new account with UNMTLGEN as true.\r\n2. Go to Link MLB Accounts tab and unlink the \r\naccount.\r\nExpected Result:\r\nPre-requisite should be met.\r\n2. Launch MPV URL.\r\n3. 1. Select Login option from menu.\r\n2. Login with the credentials of patron \r\nmentioned in pre-requisite.\r\nExpected Result:\r\nLogin should be successful.\r\n4. Complete the transaction.\r\nExpected Result:\r\nTransaction should be completed successfully.\r\n5. Login to MTD and verify that account automatically linked after login to MPV.\r\nExpected Result:\r\nAccount should be automatically linked.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-requisites:\r\n \r\n1. A PVO My Tickets account should exist - \r\nCreate a new account with UNMTLGEN as true.\r\n2. Go to Link MLB Accounts tab and unlink the \r\naccount.\r\n2. Launch MPV URL.\r\n3. 1. Select Login option from menu.\r\n2. Login with the credentials of patron \r\nmentioned in pre-requisite.\r\n4. Complete the transaction.\r\n5. Login to MTD and verify that account automatically linked after login to MPV.",
        "expected": "1. Pre-requisite should be met.\r\n2. \r\n3. Login should be successful.\r\n4. Transaction should be completed successfully.\r\n5. Account should be automatically linked."
      }
    ],
    "custom_jiras": "62.1"
  },
  {
    "id": 30692919,
    "title": "Verify the user is able to edit the account details in MTD of an existing account created via MPV",
    "section_id": 1685007,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14849",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 9,
    "custom_is_automated": false,
    "custom_refs": "C906911",
    "custom_pvo_pvodc_category": 6,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre-requisites:\r\n \r\n1. A PVO My Tickets account should exist - \r\nCreate a new account with UNMTLGEN as true.\r\n2. Go to Link MLB Accounts tab and unlink the \r\naccount.\r\nExpected Result:\r\nPre-requisite should be met.\r\n2. Launch MPV URL.\r\n3. 1. Select Login option from menu.\r\n2. Login with the credentials of patron \r\nmentioned in pre-requisite.\r\nExpected Result:\r\nLogin should be successful.\r\n4. Complete the transaction.\r\nExpected Result:\r\nTransaction should be completed successfully.\r\n5. Login to MTD and verify that account automatically linked after login to MPV.\r\nExpected Result:\r\nAccount should be automatically linked.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-requisites:\r\n \r\n1. A PVO My Tickets account should exist - \r\nCreate a new account with UNMTLGEN as true.\r\n2. Go to Link MLB Accounts tab and unlink the \r\naccount.\r\n2. Launch MPV URL.\r\n3. 1. Select Login option from menu.\r\n2. Login with the credentials of patron \r\nmentioned in pre-requisite.\r\n4. Complete the transaction.\r\n5. Login to MTD and verify that account automatically linked after login to MPV.",
        "expected": "1. Pre-requisite should be met.\r\n2. \r\n3. Login should be successful.\r\n4. Transaction should be completed successfully.\r\n5. Account should be automatically linked."
      }
    ],
    "custom_jiras": "62.1"
  },
  {
    "id": 30692920,
    "title": "Verify the user is able to edit account details of an existing account in MPV",
    "section_id": 1685007,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14849",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 10,
    "custom_is_automated": false,
    "custom_refs": "C906912",
    "custom_pvo_pvodc_category": 6,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre-requisites:\n \n1. A PVO My Tickets account should exist - \nCreate a new account with UNMTLGEN as true.\n2. Go to Link MLB Accounts tab and unlink the \naccount.\r\nExpected Result:\r\nPre-requisite should be met.\r\n2. Launch MPV URL.\r\n3. 1. Select Login option from menu.\n2. Login with the credentials of patron \nmentioned in pre-requisite.\r\nExpected Result:\r\nLogin should be successful.\r\n4. Complete the transaction.\r\nExpected Result:\r\nTransaction should be completed successfully.\r\n5. Login to MTD and verify that account automatically linked after login to MPV.\r\nExpected Result:\r\nAccount should be automatically linked.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-requisites:\n \n1. A PVO My Tickets account should exist - \nCreate a new account with UNMTLGEN as true.\n2. Go to Link MLB Accounts tab and unlink the \naccount.\r\n2. Launch MPV URL.\r\n3. 1. Select Login option from menu.\n2. Login with the credentials of patron \nmentioned in pre-requisite.\r\n4. Complete the transaction.\r\n5. Login to MTD and verify that account automatically linked after login to MPV.",
        "expected": "1. Pre-requisite should be met.\r\n2. \r\n3. Login should be successful.\r\n4. Transaction should be completed successfully.\r\n5. Account should be automatically linked."
      }
    ],
    "custom_jiras": "62.1"
  },
  {
    "id": 30692921,
    "title": "Verify the user is able to edit account details of an existing account in MTD",
    "section_id": 1685007,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14849",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 11,
    "custom_is_automated": false,
    "custom_refs": "C906913",
    "custom_pvo_pvodc_category": 6,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre-requisites:\n \n1. A PVO My Tickets account should exist - \nCreate a new account with UNMTLGEN as true.\n2. Go to Link MLB Accounts tab and unlink the \naccount.\r\nExpected Result:\r\nPre-requisite should be met.\r\n2. Launch MPV URL.\r\n3. 1. Select Login option from menu.\n2. Login with the credentials of patron \nmentioned in pre-requisite.\r\nExpected Result:\r\nLogin should be successful.\r\n4. Complete the transaction.\r\nExpected Result:\r\nTransaction should be completed successfully.\r\n5. Login to MTD and verify that account automatically linked after login to MPV.\r\nExpected Result:\r\nAccount should be automatically linked.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-requisites:\n \n1. A PVO My Tickets account should exist - \nCreate a new account with UNMTLGEN as true.\n2. Go to Link MLB Accounts tab and unlink the \naccount.\r\n2. Launch MPV URL.\r\n3. 1. Select Login option from menu.\n2. Login with the credentials of patron \nmentioned in pre-requisite.\r\n4. Complete the transaction.\r\n5. Login to MTD and verify that account automatically linked after login to MPV.",
        "expected": "1. Pre-requisite should be met.\r\n2. \r\n3. Login should be successful.\r\n4. Transaction should be completed successfully.\r\n5. Account should be automatically linked."
      }
    ],
    "custom_jiras": "62.1"
  },
  {
    "id": 30692922,
    "title": "Verify editing nickname of Patron in MTD for the patron created via PVO Single sales",
    "section_id": 1685007,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14841",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 12,
    "custom_is_automated": false,
    "custom_refs": "C906914",
    "custom_pvo_pvodc_category": 6,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Launch PVO single sales application\r\nExpected Result:\r\nlaunch the single sales link successfully\r\n2. Create a new MLB patron via PVO single \r\nsales  by selecting \"I don't have an account \r\noption\"\r\n3. Launch MTD link and login using email id of patron \r\ncreated via MPV\r\nExpected Result:\r\nUser should be navigated to My Account page\r\n4. Go to Link MLB Accounts tab and verify the \r\nnickname displayed-Supplier Patron id will be \r\ndisplayed as nickname for the patron created via \r\nMPV\r\nExpected Result:\r\nNickname should be displayed\r\n5. Try editing the nickname to different name and \r\nclick on save\r\n6. Verify that patron is able to save the edited \r\nnickname\r\nExpected Result:\r\nDetails should be saved",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PVO single sales application\r\n2. Create a new MLB patron via PVO single \r\nsales  by selecting \"I don't have an account \r\noption\"\r\n3. Launch MTD link and login using email id of patron \r\ncreated via MPV\r\n4. Go to Link MLB Accounts tab and verify the \r\nnickname displayed-Supplier Patron id will be \r\ndisplayed as nickname for the patron created via \r\nMPV\r\n5. Try editing the nickname to different name and \r\nclick on save\r\n6. Verify that patron is able to save the edited \r\nnickname",
        "expected": "1. launch the single sales link successfully\r\n2. \r\n3. User should be navigated to My Account page\r\n4. Nickname should be displayed\r\n5. \r\n6. Details should be saved"
      }
    ],
    "custom_jiras": "62.1"
  },
  {
    "id": 30692923,
    "title": "Verify the default error message displayed while trying to edit an MTD account with  nickname that already exists for another linked account having different email id",
    "section_id": 1685007,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14841",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 13,
    "custom_is_automated": false,
    "custom_refs": "C906915",
    "custom_pvo_pvodc_category": 6,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite:\r\n \r\n1.Set UNMTLGEN to true.\r\n2.Have an MLBAM email linked to multiple \r\npatron accounts with different \r\nnicknames.Say 'email 1@ust.com' is linked to \r\nPatron A,Patron B and Patron C\r\n3.Have duplicate check turned off in PV\r\nExpected Result:\r\nPrerequisite should be met\r\n2. Login into MTD application as Patron B\r\nExpected Result:\r\nlaunch the mytickets link successfully\r\n3. Go to Link MLB accounts tab\r\nExpected Result:\r\nuser should be navigated to account tab\r\n4. Edit the nickname of logged in patron as same \r\nthe nickname of Patron B linked to another \r\nemail mentioned in Pre-requisite. \r\nClick on save changes",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite:\r\n \r\n1.Set UNMTLGEN to true.\r\n2.Have an MLBAM email linked to multiple \r\npatron accounts with different \r\nnicknames.Say 'email 1@ust.com' is linked to \r\nPatron A,Patron B and Patron C\r\n3.Have duplicate check turned off in PV\r\n2. Login into MTD application as Patron B\r\n3. Go to Link MLB accounts tab\r\n4. Edit the nickname of logged in patron as same \r\nthe nickname of Patron B linked to another \r\nemail mentioned in Pre-requisite. \r\nClick on save changes",
        "expected": "1. Prerequisite should be met\r\n2. launch the mytickets link successfully\r\n3. user should be navigated to account tab\r\n4."
      }
    ],
    "custom_jiras": "62.1"
  },
  {
    "id": 30692924,
    "title": "Verify the default error message displayed while trying to edit an MTD account with  nickname that already exists for another linked account having same email id",
    "section_id": 1685007,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14841",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 14,
    "custom_is_automated": false,
    "custom_refs": "C906916",
    "custom_pvo_pvodc_category": 6,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite:\r\n \r\n1.Set UNMTLGEN to true.\r\n2.Have an MLBAM email linked to multiple \r\npatron accounts with different \r\nnicknames.Say 'email 1@ust.com' is linked to \r\nPatron A,Patron B and Patron C\r\n3.Have duplicate check turned off in PV\r\nExpected Result:\r\nPrerequisite should be met\r\n2. Login into MTD application as Patron B\r\nExpected Result:\r\nlaunch the mytickets link successfully\r\n3. Go to Link MLB accounts tab\r\nExpected Result:\r\nuser should be navigated to account tab\r\n4. Edit the nickname of Patron B and Patron C to \r\nPatron A's nickname and click on save \r\nchanges\r\n5. Verify that patron is presented with below \r\ndefault error  \"The nickname entered already \r\nexists on one of your linked accounts.  Please \r\nenter a unique nickname\"\r\nExpected Result:\r\nError message should be displayed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite:\r\n \r\n1.Set UNMTLGEN to true.\r\n2.Have an MLBAM email linked to multiple \r\npatron accounts with different \r\nnicknames.Say 'email 1@ust.com' is linked to \r\nPatron A,Patron B and Patron C\r\n3.Have duplicate check turned off in PV\r\n2. Login into MTD application as Patron B\r\n3. Go to Link MLB accounts tab\r\n4. Edit the nickname of Patron B and Patron C to \r\nPatron A's nickname and click on save \r\nchanges\r\n5. Verify that patron is presented with below \r\ndefault error  \"The nickname entered already \r\nexists on one of your linked accounts.  Please \r\nenter a unique nickname\"",
        "expected": "1. Prerequisite should be met\r\n2. launch the mytickets link successfully\r\n3. user should be navigated to account tab\r\n4. \r\n5. Error message should be displayed"
      }
    ],
    "custom_jiras": "62.1"
  },
  {
    "id": 30692925,
    "title": "Verify the default error message displayed while trying to create a new MTD account with  nickname that already exists for another linked account with a different email id",
    "section_id": 1685007,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14841",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 15,
    "custom_is_automated": false,
    "custom_refs": "C906917",
    "custom_pvo_pvodc_category": 6,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite:\r\n \r\n1.Set UNMTLGEN to true.\r\n2.Have a MTD Patron linked to an MLBAM \r\nemail.\r\n3.Have duplicate check turned  off in PV\r\nExpected Result:\r\nPrerequisite should be met\r\n2. Launch mytickets link.\r\nExpected Result:\r\nlaunch the mytickets link successfully\r\n3. Click on create an account button\r\nEnter all the details.\r\nExpected Result:\r\nuser should be able to cretae a new patron\r\n4. Click on 'I already have an account on MLB'\r\n5. Enter a nickname that already exisits for that \r\nMLBAM account linked to another email(the \r\nnickaname of account mentioned in pre-requisite)\r\nExpected Result:\r\nedit the nickname with an already exisitng name \r\nand click on save changes",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite:\r\n \r\n1.Set UNMTLGEN to true.\r\n2.Have a MTD Patron linked to an MLBAM \r\nemail.\r\n3.Have duplicate check turned  off in PV\r\n2. Launch mytickets link.\r\n3. Click on create an account button\r\nEnter all the details.\r\n4. Click on 'I already have an account on MLB'\r\n5. Enter a nickname that already exisits for that \r\nMLBAM account linked to another email(the \r\nnickaname of account mentioned in pre-requisite)",
        "expected": "1. Prerequisite should be met\r\n2. launch the mytickets link successfully\r\n3. user should be able to cretae a new patron\r\n4. \r\n5. edit the nickname with an already exisitng name \r\nand click on save changes"
      }
    ],
    "custom_jiras": "62.1"
  },
  {
    "id": 30692926,
    "title": "Verify the default error message displayed while trying to create a new MTD account with  nickname that already exists for another linked account having same email id",
    "section_id": 1685007,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14841",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 16,
    "custom_is_automated": false,
    "custom_refs": "C906918",
    "custom_pvo_pvodc_category": 6,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite:\r\n \r\n1.Set UNMTLGEN to true.\r\n2.Have a MTD Patron linked to an MLBAM \r\nemail.\r\n3.Have duplicate check turned  off in PV\r\nExpected Result:\r\nPrerequisite should be met\r\n2. Launch mytickets link.\r\nExpected Result:\r\nlaunch the mytickets link successfully\r\n3. Click on create an account button\r\nEnter all the details.\r\nExpected Result:\r\nuser should be able to cretae a new patron\r\n4. Click on 'I already have an account on MLB'\r\nEnter a nickname that already exisits for that \r\nMLBAM account.\r\nExpected Result:\r\nedit the nickname with an already exisitng name from \r\nthe list and click on save changes\r\n5. Verify that patron is presented with  default  \r\nerror message  \"The nickname entered \r\nalready exists on one of your linked \r\naccounts.  Please enter a unique nickname\"\r\nExpected Result:\r\nThe set error message should be displayed\r\n6. Verify the nickname duplicate error message \r\nin resource bundle and in maintenance text.\r\nExpected Result:\r\nThe error message should match",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite:\r\n \r\n1.Set UNMTLGEN to true.\r\n2.Have a MTD Patron linked to an MLBAM \r\nemail.\r\n3.Have duplicate check turned  off in PV\r\n2. Launch mytickets link.\r\n3. Click on create an account button\r\nEnter all the details.\r\n4. Click on 'I already have an account on MLB'\r\nEnter a nickname that already exisits for that \r\nMLBAM account.\r\n5. Verify that patron is presented with  default  \r\nerror message  \"The nickname entered \r\nalready exists on one of your linked \r\naccounts.  Please enter a unique nickname\"\r\n6. Verify the nickname duplicate error message \r\nin resource bundle and in maintenance text.",
        "expected": "1. Prerequisite should be met\r\n2. launch the mytickets link successfully\r\n3. user should be able to cretae a new patron\r\n4. edit the nickname with an already exisitng name from \r\nthe list and click on save changes\r\n5. The set error message should be displayed\r\n6. The error message should match"
      }
    ],
    "custom_jiras": "62.1"
  },
  {
    "id": 30692927,
    "title": "Verify the nickname display  in account selection dropdown for an email linked to multiple accounts",
    "section_id": 1685007,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14841",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 17,
    "custom_is_automated": false,
    "custom_refs": "C906919",
    "custom_pvo_pvodc_category": 6,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite:\r\n \r\n\r\n1.Set UNMTLGEN to true.\r\n2.Have an MLBAM email linked to multiple \r\npatron accounts with different \r\nnicknames.Say 'email 1@ust.com' is linked to \r\nPatron A,Patron B and Patron C\r\nExpected Result:\r\nPrerequisite should be met\r\n2. Launch mytickets link.\r\nExpected Result:\r\nlaunch the mytickets link successfully\r\n3. Login using email ID linked to multiple patrons\r\nExpected Result:\r\nuser should be able to login with MLBAM account and\r\n4. Verify that nicknames are displayed in account \r\nselection dropdown\r\nExpected Result:\r\nselection dropdown should be displayed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite:\r\n \r\n\r\n1.Set UNMTLGEN to true.\r\n2.Have an MLBAM email linked to multiple \r\npatron accounts with different \r\nnicknames.Say 'email 1@ust.com' is linked to \r\nPatron A,Patron B and Patron C\r\n2. Launch mytickets link.\r\n3. Login using email ID linked to multiple patrons\r\n4. Verify that nicknames are displayed in account \r\nselection dropdown",
        "expected": "1. Prerequisite should be met\r\n2. launch the mytickets link successfully\r\n3. user should be able to login with MLBAM account and\r\n4. selection dropdown should be displayed"
      }
    ],
    "custom_jiras": "62.1"
  },
  {
    "id": 30692928,
    "title": "Verify editing nickname of Patron in MTD for the patron created via MPV",
    "section_id": 1685007,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14841",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 18,
    "custom_is_automated": false,
    "custom_refs": "C906920",
    "custom_pvo_pvodc_category": 6,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Launch mytickets link.\r\nExpected Result:\r\nlaunch the mytickets link successfully\r\n2. Create a new MLB patron via MPV by selecting \"I \r\ndon't have an account option\"\r\n3. Launch MTD link and login using email id of \r\npatron created via MPV\r\nExpected Result:\r\nUser should be navigated to My Account page\r\n4. Go to Link MLB Accounts tab and verify the \r\nnickname displayed-Supplier Patron id will be \r\ndisplayed as nickname for the patron created \r\nvia MPV\r\nExpected Result:\r\nNickname should be displayed\r\n5. Try editing the nickname to different name and \r\nclick on save\r\n6. Verify that patron is able to save the edited \r\nnickname\r\nExpected Result:\r\nDetails should be saved",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch mytickets link.\r\n2. Create a new MLB patron via MPV by selecting \"I \r\ndon't have an account option\"\r\n3. Launch MTD link and login using email id of \r\npatron created via MPV\r\n4. Go to Link MLB Accounts tab and verify the \r\nnickname displayed-Supplier Patron id will be \r\ndisplayed as nickname for the patron created \r\nvia MPV\r\n5. Try editing the nickname to different name and \r\nclick on save\r\n6. Verify that patron is able to save the edited \r\nnickname",
        "expected": "1. launch the mytickets link successfully\r\n2. \r\n3. User should be navigated to My Account page\r\n4. Nickname should be displayed\r\n5. \r\n6. Details should be saved"
      }
    ],
    "custom_jiras": "62.1"
  },
  {
    "id": 30692929,
    "title": "Verify the default error message displayed when giving same nickname while trying to link an unlinked account to an account which is already linked to another email.",
    "section_id": 1685007,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14841",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 19,
    "custom_is_automated": false,
    "custom_refs": "C906921",
    "custom_pvo_pvodc_category": 6,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite:\r\n \r\n1.Set UNMTLGEN to true.\r\n2.Have a MTD Patron account,say patron A linked \r\nto an MLBAM email.\r\n3.Have another MTD Patron account ,say patron \r\nB which is not linked to any email.\r\nExpected Result:\r\nPrerequisite should be met\r\n2. Launch mytickets link.\r\nExpected Result:\r\nlaunch the mytickets link successfully\r\n3. Login into MTD application as patron A mentioned \r\nin pre-requisite\r\nExpected Result:\r\nuser should be able to login with MLBAM account\r\n4. Go to Link MLB accounts tab\r\nExpected Result:\r\nAccount link page should be displayed\r\n5. Now try to link patron B mentioned in \r\npre-quisite to this account by giving same \r\nnickname as of Patron A\r\n6. Verify that patron is presented with  default  \r\nerror message  \"The nickname entered \r\nalready exists on one of your linked \r\naccounts.  Please enter a unique nickname\"\r\nExpected Result:\r\nError message should be displayed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite:\r\n \r\n1.Set UNMTLGEN to true.\r\n2.Have a MTD Patron account,say patron A linked \r\nto an MLBAM email.\r\n3.Have another MTD Patron account ,say patron \r\nB which is not linked to any email.\r\n2. Launch mytickets link.\r\n3. Login into MTD application as patron A mentioned \r\nin pre-requisite\r\n4. Go to Link MLB accounts tab\r\n5. Now try to link patron B mentioned in \r\npre-quisite to this account by giving same \r\nnickname as of Patron A\r\n6. Verify that patron is presented with  default  \r\nerror message  \"The nickname entered \r\nalready exists on one of your linked \r\naccounts.  Please enter a unique nickname\"",
        "expected": "1. Prerequisite should be met\r\n2. launch the mytickets link successfully\r\n3. user should be able to login with MLBAM account\r\n4. Account link page should be displayed\r\n5. \r\n6. Error message should be displayed"
      }
    ],
    "custom_jiras": "62.1"
  },
  {
    "id": 30692930,
    "title": "Verify error message displayed for duplicate nickname account is configurable",
    "section_id": 1685007,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14841",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 20,
    "custom_is_automated": false,
    "custom_refs": "C906922",
    "custom_pvo_pvodc_category": 6,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite:\r\n1. Set  duplicate nickname account message \r\ntextcode with a non-default value.\r\nExpected Result:\r\nPrerequisite should be met\r\n2. Launch mytickets link.\r\nExpected Result:\r\nlaunch the mytickets link successfully\r\n3. create new account\r\nExpected Result:\r\nAccount should be created\r\n4. Verify that the set value of duplicate nickname \r\naccount message is displayed in UI\r\nExpected Result:\r\nError message should be displayed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite:\r\n1. Set  duplicate nickname account message \r\ntextcode with a non-default value.\r\n2. Launch mytickets link.\r\n3. create new account\r\n4. Verify that the set value of duplicate nickname \r\naccount message is displayed in UI",
        "expected": "1. Prerequisite should be met\r\n2. launch the mytickets link successfully\r\n3. Account should be created\r\n4. Error message should be displayed"
      }
    ],
    "custom_jiras": "62.1"
  },
  {
    "id": 30692931,
    "title": "Verify PVO is not writing out bad patron data when patron edits the email address on the payment page with linking enabled",
    "section_id": 1685007,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-8663",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 21,
    "custom_is_automated": false,
    "custom_refs": "C906923",
    "custom_pvo_pvodc_category": 10,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Set LMATMT = true at supplier level\r\nExpected Result:\r\nLMATMT should be set to set to true\r\n2. Launch single tickets link and select \r\nfew tickets\r\nExpected Result:\r\nUser should be able to luanch single sales and \r\nselect few tickets\r\n3. Navigate to shopping cart and click on \r\ncontinue\r\nExpected Result:\r\nUser should be able to continue from shopping \r\ncart\r\n4. In Login modal -login as as MLB \r\npatron,say  xyz@tickets.com who has \r\nemail address tom@tickets.com (patron \r\n123)\r\nExpected Result:\r\nPatron should be able to login\r\n5. Then on the payment page change the \r\nemail , say abc@tickets.com.\r\nExpected Result:\r\npatron should be able to change the email \r\naddress\r\n6. Complete  the purchase\r\nExpected Result:\r\npatron should be able to complete the purchase\r\n7. Check database by looking up both PVO \r\npatron id in Patro_ reg table\r\nExpected Result:\r\nWe  should get a new PV patron and new \r\nPVO patron id and the original patron we \r\nlogged in with should still have a matching \r\npatron_reg and supplier_patron record",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Set LMATMT = true at supplier level\r\n2. Launch single tickets link and select \r\nfew tickets\r\n3. Navigate to shopping cart and click on \r\ncontinue\r\n4. In Login modal -login as as MLB \r\npatron,say  xyz@tickets.com who has \r\nemail address tom@tickets.com (patron \r\n123)\r\n5. Then on the payment page change the \r\nemail , say abc@tickets.com.\r\n6. Complete  the purchase\r\n7. Check database by looking up both PVO \r\npatron id in Patro_ reg table",
        "expected": "1. LMATMT should be set to set to true\r\n2. User should be able to luanch single sales and \r\nselect few tickets\r\n3. User should be able to continue from shopping \r\ncart\r\n4. Patron should be able to login\r\n5. patron should be able to change the email \r\naddress\r\n6. patron should be able to complete the purchase\r\n7. We  should get a new PV patron and new \r\nPVO patron id and the original patron we \r\nlogged in with should still have a matching \r\npatron_reg and supplier_patron record"
      }
    ],
    "custom_jiras": "52"
  },
  {
    "id": 30692932,
    "title": "Verify that the getLinkedMyTicketsAccountDetails method is not running slowly",
    "section_id": 1685007,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12814",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 22,
    "custom_is_automated": false,
    "custom_refs": "C906924",
    "custom_pvo_pvodc_category": 10,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre-requisite: \r\n1. Select a My Tickets user who is already associated with a MLB.com ID\r\n2. Note both the My Tickets as well as MLB.com ID userid and password\r\n3. Note userids and passwords of the other My Tickets users to be added.\r\nExpected Result:\r\nThe pre-requisite should be met.\r\n2. Launch the My Tickets application using : and login My Tickets user noted above.\r\nExpected Result:\r\nThe user should be logged in successfully.\r\n3. 1. The \"Manage Linked Accounts\" button should be displayed in the My Account view. Click on it.\r\n2. Verify the \"Manage Linked Accounts\" view.\r\nExpected Result:\r\n1. The user should be navigated to the  \"Manage Linked Accounts\" view of the My Tickets patron.\r\n2. The associated MLB User ID: and the MyTickets Accounts should be displayed.\r\n4. Make changes in Manage account tab\r\nExpected Result:\r\nUser should be able to make changes\r\n5. Verify that the getLinkedMyTicketsAccountDetails method is not running slowly in log_data\r\nExpected Result:\r\ntime taken for multiple runs should be less",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-requisite: \r\n1. Select a My Tickets user who is already associated with a MLB.com ID\r\n2. Note both the My Tickets as well as MLB.com ID userid and password\r\n3. Note userids and passwords of the other My Tickets users to be added.\r\n2. Launch the My Tickets application using : and login My Tickets user noted above.\r\n3. 1. The \"Manage Linked Accounts\" button should be displayed in the My Account view. Click on it.\r\n2. Verify the \"Manage Linked Accounts\" view.\r\n4. Make changes in Manage account tab\r\n5. Verify that the getLinkedMyTicketsAccountDetails method is not running slowly in log_data",
        "expected": "1. The pre-requisite should be met.\r\n2. The user should be logged in successfully.\r\n3. 1. The user should be navigated to the  \"Manage Linked Accounts\" view of the My Tickets patron.\r\n2. The associated MLB User ID: and the MyTickets Accounts should be displayed.\r\n4. User should be able to make changes\r\n5. time taken for multiple runs should be less"
      }
    ],
    "custom_jiras": "58"
  },
  {
    "id": 30692933,
    "title": "Verify user able to Reset the password using Associated E-Mail ID",
    "section_id": 1685007,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-11818",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 23,
    "custom_is_automated": false,
    "custom_refs": "C906925",
    "custom_pvo_pvodc_category": 10,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite:\r\nSet the text code OSSF :  http://images.tickets.com/styles/mytickets/consolidated_mytickets_test.css\r\nSet the text code: COMYUIE to true.\r\nRemove the HETABCO and HETABCO1 text codes from the ORG level and these text codes are not set at any level.\r\nExpected Result:\r\nPrerequisite should be met\r\n2. Launch the application using the URL:\r\nExpected Result:\r\nThe application should be launched.\r\n3. Click on the Reset Password Button in the login page.\r\nExpected Result:\r\nIt should be navigated to Reset password modal.\r\n4. 1. Input the login details and the email address. (Note:Enter Associated E-Mail ID in Account Number Fiels)\r\n2. Click on Submit button.\r\nExpected Result:\r\nApplication should be navigated to Login Page and Password Reset Error message should display\r\n5. Verify the mail and get the Reset password from the mail.\r\nExpected Result:\r\nThe user should get a password Reset mail with the new password in it.\r\n6. Login using the Auto generated password\r\nExpected Result:\r\nLogin should be successfull and the page should be navigated to Change Password page\r\n7. 1. Enter the New Password details and click on Save Changes\r\n2. Verify the Password changed sucessfully message is shown.\r\nExpected Result:\r\n1. Password changed sucessfully message should be shown.\r\n2. Page Should be navigated to Login page\r\n8. Verify the confirmation mail and get the new password from the mail.\r\nExpected Result:\r\nThe user should get a password change confirmation mail with the new password in it.\r\n9. Verify the user is able to login to the application using the new password.\r\nExpected Result:\r\nThe user should be loged in to the application.\r\n10. Again click on the Reset Password Button in the login page.\r\nExpected Result:\r\nIt should be navigated to Reset password modal.\r\n11. 1. Input the login details and the email address. (Note:Enter Suppler Patron-ID in Account Number Fiels)\r\n2. Click on Submit button.\r\nExpected Result:\r\nApplication should be navigated to Login Page and Password Reset Successful message should display",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite:\r\nSet the text code OSSF :  http://images.tickets.com/styles/mytickets/consolidated_mytickets_test.css\r\nSet the text code: COMYUIE to true.\r\nRemove the HETABCO and HETABCO1 text codes from the ORG level and these text codes are not set at any level.\r\n2. Launch the application using the URL:\r\n3. Click on the Reset Password Button in the login page.\r\n4. 1. Input the login details and the email address. (Note:Enter Associated E-Mail ID in Account Number Fiels)\r\n2. Click on Submit button.\r\n5. Verify the mail and get the Reset password from the mail.\r\n6. Login using the Auto generated password\r\n7. 1. Enter the New Password details and click on Save Changes\r\n2. Verify the Password changed sucessfully message is shown.\r\n8. Verify the confirmation mail and get the new password from the mail.\r\n9. Verify the user is able to login to the application using the new password.\r\n10. Again click on the Reset Password Button in the login page.\r\n11. 1. Input the login details and the email address. (Note:Enter Suppler Patron-ID in Account Number Fiels)\r\n2. Click on Submit button.",
        "expected": "1. Prerequisite should be met\r\n2. The application should be launched.\r\n3. It should be navigated to Reset password modal.\r\n4. Application should be navigated to Login Page and Password Reset Error message should display\r\n5. The user should get a password Reset mail with the new password in it.\r\n6. Login should be successfull and the page should be navigated to Change Password page\r\n7. 1. Password changed sucessfully message should be shown.\r\n2. Page Should be navigated to Login page\r\n8. The user should get a password change confirmation mail with the new password in it.\r\n9. The user should be loged in to the application.\r\n10. It should be navigated to Reset password modal.\r\n11. Application should be navigated to Login Page and Password Reset Successful message should display"
      }
    ],
    "custom_jiras": "56"
  },
  {
    "id": 30692934,
    "title": "Verify user able to Reset the password using Supplier patron ID",
    "section_id": 1685007,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-11818",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 24,
    "custom_is_automated": false,
    "custom_refs": "C906926",
    "custom_pvo_pvodc_category": 10,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite:\r\nSet the text code OSSF :  http://images.tickets.com/styles/mytickets/consolidated_mytickets_test.css\r\nSet the text code: COMYUIE to true.\r\nRemove the HETABCO and HETABCO1 text codes from the ORG level and these text codes are not set at any level.\r\nExpected Result:\r\nPrerequisite should be met\r\n2. Launch the application using the URL:\r\nExpected Result:\r\nThe application should be launched.\r\n3. Click on the Reset Password Button in the login page.\r\nExpected Result:\r\nIt should be navigated to Reset password modal.\r\n4. 1. Input the login details and the email address. (Note:Enter Suppler Patron-ID in Account Number Fiels)\r\n2. Click on Submit button.\r\nExpected Result:\r\nApplication should be navigated to Login Page and Password Reset Successful message should display\r\n5. 1. Enter the New Password details and click on Save Changes\r\n2. Verify the Password changed sucessfully message is shown.\r\nExpected Result:\r\n1. Password changed sucessfully message should be shown.\r\n2. Page Should be navigated to Login page\r\n6. Verify the confirmation mail and get the new password from the mail.\r\nExpected Result:\r\nThe user should get a password change confirmation mail with the new password in it.\r\n7. Verify the user is able to login to the application using the new password.\r\nExpected Result:\r\nThe user should be loged in to the application.\r\n8. Verify the mail and get the Reset password from the mail.\r\nExpected Result:\r\nThe user should get a password Reset mail with the new password in it.\r\n9. Login using the Auto generated password\r\nExpected Result:\r\nLogin should be successfull and the page should be navigated to Change Password page",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite:\r\nSet the text code OSSF :  http://images.tickets.com/styles/mytickets/consolidated_mytickets_test.css\r\nSet the text code: COMYUIE to true.\r\nRemove the HETABCO and HETABCO1 text codes from the ORG level and these text codes are not set at any level.\r\n2. Launch the application using the URL:\r\n3. Click on the Reset Password Button in the login page.\r\n4. 1. Input the login details and the email address. (Note:Enter Suppler Patron-ID in Account Number Fiels)\r\n2. Click on Submit button.\r\n5. 1. Enter the New Password details and click on Save Changes\r\n2. Verify the Password changed sucessfully message is shown.\r\n6. Verify the confirmation mail and get the new password from the mail.\r\n7. Verify the user is able to login to the application using the new password.\r\n8. Verify the mail and get the Reset password from the mail.\r\n9. Login using the Auto generated password",
        "expected": "1. Prerequisite should be met\r\n2. The application should be launched.\r\n3. It should be navigated to Reset password modal.\r\n4. Application should be navigated to Login Page and Password Reset Successful message should display\r\n5. 1. Password changed sucessfully message should be shown.\r\n2. Page Should be navigated to Login page\r\n6. The user should get a password change confirmation mail with the new password in it.\r\n7. The user should be loged in to the application.\r\n8. The user should get a password Reset mail with the new password in it.\r\n9. Login should be successfull and the page should be navigated to Change Password page"
      }
    ],
    "custom_jiras": "56"
  },
  {
    "id": 30692935,
    "title": "Verify the MLB Link  Account page displayed after unlink a main Patron Account from the linked list for a New User",
    "section_id": 1685007,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-11713",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 25,
    "custom_is_automated": false,
    "custom_refs": "C906927",
    "custom_pvo_pvodc_category": 10,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre-Requisite https://images-staging.tickets.com/styles/mytickets/consolidated_mytickets_test.css\r\n\r\n2. Set the text code: COMYUIE to true.\r\n3. Remove the HETABCO and HETABCO1 text codes from the ORG level and these text codes are not set at any level.\r\n4. Set UNMTLGEN to true\r\nExpected Result:\r\nPre-Requisite\r\n2. Launch the application using the URL:\r\nExpected Result:\r\nthe application should be launched.\r\n3. In the Login page, click on Create New Account button.\r\nExpected Result:\r\nThe New account modal should be opened.\r\n4. Enter the necessary details.\r\nExpected Result:\r\nAll the manditory fields should be able to fill.\r\n5. Verify the Radio buttons\r\n\"I already have an account on MLB.com\"and \"I don't have an account on MLB.com\" \r\nis present.\r\nExpected Result:\r\nThe radio button should be present because the text code is set to ON\r\n6. Select \"I don't have an account on MLB.com \"\r\nClick apply changes button\r\nExpected Result:\r\nThe new user should be created.\r\n7. Navigate to My Account->Link Account tab\r\nExpected Result:\r\nUser Navigates to Link Accounts tab\r\n8. Click on Remove button corresponding to a linked account\r\nExpected Result:\r\nA message popup is displayed \"Are you sure you want to unlink account ? \" with Ok and cancel buttons\r\n9. Click on OK button in message pop up window\r\nExpected Result:\r\n1. User Should be stay in  \"MLB Link  Account page\"\r\n2. A message is dispalyed : \"Your change(s) have been saved\"\r\n10. logout and re login with the same patron and verify\r\nExpected Result:\r\nThe unlinked account should not be displayed in the linked accounts",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-Requisite https://images-staging.tickets.com/styles/mytickets/consolidated_mytickets_test.css\r\n\r\n2. Set the text code: COMYUIE to true.\r\n3. Remove the HETABCO and HETABCO1 text codes from the ORG level and these text codes are not set at any level.\r\n4. Set UNMTLGEN to true\r\n2. Launch the application using the URL:\r\n3. In the Login page, click on Create New Account button.\r\n4. Enter the necessary details.\r\n5. Verify the Radio buttons\r\n\"I already have an account on MLB.com\"and \"I don't have an account on MLB.com\" \r\nis present.\r\n6. Select \"I don't have an account on MLB.com \"\r\nClick apply changes button\r\n7. Navigate to My Account->Link Account tab\r\n8. Click on Remove button corresponding to a linked account\r\n9. Click on OK button in message pop up window\r\n10. logout and re login with the same patron and verify",
        "expected": "1. Pre-Requisite\r\n2. the application should be launched.\r\n3. The New account modal should be opened.\r\n4. All the manditory fields should be able to fill.\r\n5. The radio button should be present because the text code is set to ON\r\n6. The new user should be created.\r\n7. User Navigates to Link Accounts tab\r\n8. A message popup is displayed \"Are you sure you want to unlink account ? \" with Ok and cancel buttons\r\n9. 1. User Should be stay in  \"MLB Link  Account page\"\r\n2. A message is dispalyed : \"Your change(s) have been saved\"\r\n10. The unlinked account should not be displayed in the linked accounts"
      }
    ],
    "custom_jiras": "56"
  },
  {
    "id": 30692936,
    "title": "Verify the default value of the AAHDRTXT Text code in the MLBAM Account page of the My Tickets",
    "section_id": 1685007,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10227",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 26,
    "custom_is_automated": false,
    "custom_refs": "C906928",
    "custom_pvo_pvodc_category": 10,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre-requisite: \r\n1. Set-up the properties and textcodes to enable Single Sign on.\r\n2. Create a New patron \r\n3. Update the default value for the text code \"AAHDRTXT\" at subagency level\r\nExpected Result:\r\nThe pre-requisite should be met.\r\n2. Launch the My Tickets application using : \r\nEnter the above created Login credentials\r\nExpected Result:\r\nUser should be logged into the My Tickets application\r\n3. 1. Click the My Account tab.\r\n2. Verify the \"MLB.com Account\" button is displayed\r\nExpected Result:\r\nMLB Account page should be displayed to the user\r\n4. Verify that the Associate Account Header text is displayed as \"Email\" and not as \"E-mail\" (Hyphen should be displayed as default text)\r\nExpected Result:\r\nAssociate Account Header text should be displayed as \"Email\" and not as \"E-mail\" (Hyphen should be displayed as default text)",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-requisite: \r\n1. Set-up the properties and textcodes to enable Single Sign on.\r\n2. Create a New patron \r\n3. Update the default value for the text code \"AAHDRTXT\" at subagency level\r\n2. Launch the My Tickets application using : \r\nEnter the above created Login credentials\r\n3. 1. Click the My Account tab.\r\n2. Verify the \"MLB.com Account\" button is displayed\r\n4. Verify that the Associate Account Header text is displayed as \"Email\" and not as \"E-mail\" (Hyphen should be displayed as default text)",
        "expected": "1. The pre-requisite should be met.\r\n2. User should be logged into the My Tickets application\r\n3. MLB Account page should be displayed to the user\r\n4. Associate Account Header text should be displayed as \"Email\" and not as \"E-mail\" (Hyphen should be displayed as default text)"
      }
    ],
    "custom_jiras": "56"
  },
  {
    "id": 30692937,
    "title": "Verify the MLB Link  Account page displayed after unlink a Patron Account from the linked list",
    "section_id": 1685007,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-11713",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 27,
    "custom_is_automated": false,
    "custom_refs": "C906929",
    "custom_pvo_pvodc_category": 10,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre-Requisite \r\n1. Set the text code OSSF: http://images.tickets.com/styles/mytickets/consolidated_mytickets_test.css\r\n2. Set the text code: COMYUIE to true.\r\n3. Remove the HETABCO and HETABCO1 text codes from the ORG level and these text codes are not set at any level.\r\n4. Set UNMTLGEN to true\r\nExpected Result:\r\nPre-requisite should be successful.\r\n2. Make sure that patron is already assoicated to an MLB Account\r\nExpected Result:\r\nPre-requisite should be successful.\r\n3. Launch the My Tickets application in the required browser : and Login as existing user\r\nExpected Result:\r\nThe application should be launched in the required browser and the user should be logged in.\r\n4. Navigate to My Account->Link Account tab\r\nExpected Result:\r\nUser Navigates to Link Accounts tab\r\n5. 1. Remove the Patron Account other than main Patron Account\r\n2. Click on Remove button corresponding to a linked account\r\nExpected Result:\r\nA message popup is displayed \"Are you sure you want to unlink account ? \" with Ok and cancel buttons\r\n6. Click on OK button in message pop up window\r\nExpected Result:\r\n1. User Should be stay in  \"MLB Link  Account page\"\r\n2. A message is dispalyed : \"Your change(s) have been saved\"",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-Requisite \r\n1. Set the text code OSSF: http://images.tickets.com/styles/mytickets/consolidated_mytickets_test.css\r\n2. Set the text code: COMYUIE to true.\r\n3. Remove the HETABCO and HETABCO1 text codes from the ORG level and these text codes are not set at any level.\r\n4. Set UNMTLGEN to true\r\n2. Make sure that patron is already assoicated to an MLB Account\r\n3. Launch the My Tickets application in the required browser : and Login as existing user\r\n4. Navigate to My Account->Link Account tab\r\n5. 1. Remove the Patron Account other than main Patron Account\r\n2. Click on Remove button corresponding to a linked account\r\n6. Click on OK button in message pop up window",
        "expected": "1. Pre-requisite should be successful.\r\n2. Pre-requisite should be successful.\r\n3. The application should be launched in the required browser and the user should be logged in.\r\n4. User Navigates to Link Accounts tab\r\n5. A message popup is displayed \"Are you sure you want to unlink account ? \" with Ok and cancel buttons\r\n6. 1. User Should be stay in  \"MLB Link  Account page\"\r\n2. A message is dispalyed : \"Your change(s) have been saved\""
      }
    ],
    "custom_jiras": "56"
  },
  {
    "id": 30692938,
    "title": "Verify the MLB Link  Account page displayed after unlink a main Patron Account from the linked list for an Existing User",
    "section_id": 1685007,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-11713",
    "created_by": 333,
    "created_on": 1684963409,
    "updated_by": 333,
    "updated_on": 1684963409,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611387,
    "display_order": 28,
    "custom_is_automated": false,
    "custom_refs": "C906930",
    "custom_pvo_pvodc_category": 10,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre-Requisite \r\n1. Set the text code OSSF: https://images-staging.tickets.com/styles/mytickets/consolidated_mytickets_test.css\r\n2. Set the text code: COMYUIE to true.\r\n3. Remove the HETABCO and HETABCO1 text codes from the ORG level and these text codes are not set at any level.\r\n4. Set UNMTLGEN to true\r\nExpected Result:\r\nPre-requisite should be successful.\r\n2. Make sure that patron is already assoicated to an MLB Account\r\nExpected Result:\r\nPre-requisite should be successful.\r\n3. Launch the My Tickets application in the required browser : and Login as existing user\r\nExpected Result:\r\nThe application should be launched in the required browser and the user should be logged in.\r\n4. Navigate to My Account->Link Account tab\r\nExpected Result:\r\nUser Navigates to Link Accounts tab\r\n5. Click Remove icon against the Main Patron Account\r\nExpected Result:\r\nA message popup is displayed \"Are you sure you want to unlink account ? \" with Ok and cancel buttons\r\n6. Click on OK button in message pop up window\r\nExpected Result:\r\n1. User Should be stay in  \"MLB Link  Account page\"\r\n2. A message is dispalyed : \"Your change(s) have been saved\"\r\n7. Logout of the application and relogin\r\nVerify that the unlinked acccount is not displayed in the linked accounts\r\nExpected Result:\r\nUnlinked account should not be displayed in the linked accounts list",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-Requisite \r\n1. Set the text code OSSF: https://images-staging.tickets.com/styles/mytickets/consolidated_mytickets_test.css\r\n2. Set the text code: COMYUIE to true.\r\n3. Remove the HETABCO and HETABCO1 text codes from the ORG level and these text codes are not set at any level.\r\n4. Set UNMTLGEN to true\r\n2. Make sure that patron is already assoicated to an MLB Account\r\n3. Launch the My Tickets application in the required browser : and Login as existing user\r\n4. Navigate to My Account->Link Account tab\r\n5. Click Remove icon against the Main Patron Account\r\n6. Click on OK button in message pop up window\r\n7. Logout of the application and relogin\r\nVerify that the unlinked acccount is not displayed in the linked accounts",
        "expected": "1. Pre-requisite should be successful.\r\n2. Pre-requisite should be successful.\r\n3. The application should be launched in the required browser and the user should be logged in.\r\n4. User Navigates to Link Accounts tab\r\n5. A message popup is displayed \"Are you sure you want to unlink account ? \" with Ok and cancel buttons\r\n6. 1. User Should be stay in  \"MLB Link  Account page\"\r\n2. A message is dispalyed : \"Your change(s) have been saved\"\r\n7. Unlinked account should not be displayed in the linked accounts list"
      }
    ],
    "custom_jiras": "56"
  }
]