[
  {
    "id": 30716744,
    "title": "Verify that when the same buyer type does not exist or is not priced for a particular scale, existing behavior to resolve to a buyer type for the target portion of the exchange is  enforced and that buyer type?s price is used to determine price diffe",
    "section_id": 1686225,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15495",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C152254",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre requsite\n1.In PV application properties set property \nonline.seat.map.use.alternate.exchange.price.display as true\n2.In PV Event admin \na)Check Same Quantity checkbox.\nb)Uncheck Same or Greater Quantity .\n3.Go to Event Access.\n4.Select General from Set/Modify drop down\n5.The Allow checkbox against Break Exchange \nQuantity Rule should not be selected.\n6.Have Source and Target event in different price \nstructure\n7.Purchase some tickets for source event for a \npatron from PV.\r\nExpected Result:\r\nPre-requisite should be met.\r\n2. Log in to Mytickets account of the patron.\r\nExpected Result:\r\nPatron logged into Mytickets successfully.\r\n3. Select Exchange action and tickets of this event from the inventory page and continue.\r\nExpected Result:\r\nPatron should be able to select tickets from Inventory of Exchange action\r\n4. Select the target event (one with different \nprice structure such that the buyer type of \nsource event is not available on target \nevent)and navigate to ISM\r\nExpected Result:\r\nPatron should be navigated to ISM after selected \nthe target event(one with different price \nstructure such that the buyer type of source \nevent is not available on target event).\r\n5. Verify that the filters provided to allow a \npatron to view highlighted areas of the map \nbased on pricing changed to reflect price \ndifferences .Here since the source target \nbuyer is not available for target event, ensure \nthat resolved buyer type of target event is \nused to determine the price difference.\r\nExpected Result:\r\nThe filters provided to allow a patron to view \nhighlighted areas of the map based on pricing \nchanged to reflect price differences .Here since \nthe source target buyer should not available for \ntarget event, ensure that resolved buyer type of \ntarget event is used to determine the price \ndifference.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre requsite\n1.In PV application properties set property \nonline.seat.map.use.alternate.exchange.price.display as true\n2.In PV Event admin \na)Check Same Quantity checkbox.\nb)Uncheck Same or Greater Quantity .\n3.Go to Event Access.\n4.Select General from Set/Modify drop down\n5.The Allow checkbox against Break Exchange \nQuantity Rule should not be selected.\n6.Have Source and Target event in different price \nstructure\n7.Purchase some tickets for source event for a \npatron from PV.\r\n2. Log in to Mytickets account of the patron.\r\n3. Select Exchange action and tickets of this event from the inventory page and continue.\r\n4. Select the target event (one with different \nprice structure such that the buyer type of \nsource event is not available on target \nevent)and navigate to ISM\r\n5. Verify that the filters provided to allow a \npatron to view highlighted areas of the map \nbased on pricing changed to reflect price \ndifferences .Here since the source target \nbuyer is not available for target event, ensure \nthat resolved buyer type of target event is \nused to determine the price difference.",
        "expected": "1. Pre-requisite should be met.\r\n2. Patron logged into Mytickets successfully.\r\n3. Patron should be able to select tickets from Inventory of Exchange action\r\n4. Patron should be navigated to ISM after selected \nthe target event(one with different price \nstructure such that the buyer type of source \nevent is not available on target event).\r\n5. The filters provided to allow a patron to view \nhighlighted areas of the map based on pricing \nchanged to reflect price differences .Here since \nthe source target buyer should not available for \ntarget event, ensure that resolved buyer type of \ntarget event is used to determine the price \ndifference."
      }
    ],
    "custom_jiras": "63.1"
  },
  {
    "id": 30716745,
    "title": "Verify that price differences between source and target exchange tickets is displayed in ISM instead of actual target seat prices when online.seat.map.use.alternate.exchange.price.display property is set as true in PV",
    "section_id": 1686225,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15495",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C152255",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre requisite :\n\n1.In PV application properties set property \nonline.seat.map.use.alternate.exchange.price.display as \ntrue\n2.In PV Event admin \na)Check Same Quantity checkbox.\nb)Uncheck Same or Greater Quantity .\n3.Go to Event Access.\n4.Select General from Set/Modify drop down\n5.The Allow checkbox against Break Exchange Quantity \nRule should not be selected.\n6.Purchase some tickets of this event for a patron from PV\r\n2. Launch MyTickets and login with a patron having valid \ninventory for Online exchange\r\nExpected Result:\r\nUser should be logged in\r\n3. Navigate to inventory and select ticket action as exchange\r\nExpected Result:\r\nTicket action 'Ticket exhcanges ' should be \navailable (If not available, please chec all \npermissions in PV and PVO )\r\n4. Select tickets from inventory\r\nExpected Result:\r\nUser should be able to select tickets from \nInventory of Online exchange action  , If the \ntickets are greyed out or not available, please \ncheckout the permissions for the same\r\n5. Navigate to target event selection page and Select one \ntarget event\r\nExpected Result:\r\nUser should be able to selecttarget events \nfrom Target event selection page  and yuser \nshould navigate to PVO ISM page\n\nTarget event list will be displayed based on \nthe rules in PV and and PVO performance \nlevel setup\r\n6. Verify NAV map XML logs and ensure that \nuse_alternate_exchange_price_display is passed as true\r\nExpected Result:\r\nuse_alternate_exchange_price_display should \nbe pssed in logs\r\n7. Verify that price differences between source and target \nexchange tickets is displayed in ISM instead of actual target \nseat prices\r\nExpected Result:\r\nPrice differences between source and target \nexchange tickets should be displayed in ISM \ninstead of actual target seat prices\r\n8. Verify the exchange flashvar data\r\nExpected Result:\r\nVerify the new FlashVar : exchangeSeatData\n \nSample Nav map XML logs\n-------------------------------------------------------------------------------\n  \n  \n  \n  \n\r\n9. Complete the exchange trasnaction\r\nExpected Result:\r\nUser should be able to complete the exchange transaction",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre requisite :\n\n1.In PV application properties set property \nonline.seat.map.use.alternate.exchange.price.display as \ntrue\n2.In PV Event admin \na)Check Same Quantity checkbox.\nb)Uncheck Same or Greater Quantity .\n3.Go to Event Access.\n4.Select General from Set/Modify drop down\n5.The Allow checkbox against Break Exchange Quantity \nRule should not be selected.\n6.Purchase some tickets of this event for a patron from PV\r\n2. Launch MyTickets and login with a patron having valid \ninventory for Online exchange\r\n3. Navigate to inventory and select ticket action as exchange\r\n4. Select tickets from inventory\r\n5. Navigate to target event selection page and Select one \ntarget event\r\n6. Verify NAV map XML logs and ensure that \nuse_alternate_exchange_price_display is passed as true\r\n7. Verify that price differences between source and target \nexchange tickets is displayed in ISM instead of actual target \nseat prices\r\n8. Verify the exchange flashvar data\r\n9. Complete the exchange trasnaction",
        "expected": "1. \r\n2. User should be logged in\r\n3. Ticket action 'Ticket exhcanges ' should be \navailable (If not available, please chec all \npermissions in PV and PVO )\r\n4. User should be able to select tickets from \nInventory of Online exchange action  , If the \ntickets are greyed out or not available, please \ncheckout the permissions for the same\r\n5. User should be able to selecttarget events \nfrom Target event selection page  and yuser \nshould navigate to PVO ISM page\n\nTarget event list will be displayed based on \nthe rules in PV and and PVO performance \nlevel setup\r\n6. use_alternate_exchange_price_display should \nbe pssed in logs\r\n7. Price differences between source and target \nexchange tickets should be displayed in ISM \ninstead of actual target seat prices\r\n8. Verify the new FlashVar : exchangeSeatData\n \nSample Nav map XML logs\n-------------------------------------------------------------------------------\n  \n  \n  \n  \n\r\n9. User should be able to complete the exchange transaction"
      }
    ],
    "custom_jiras": "63.1"
  },
  {
    "id": 30716746,
    "title": "Verify Restriction message is not  displayed for ESD with definition type AISLE  in Online event exchange flow",
    "section_id": 1686225,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14067",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C152256",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1. Login to Maintenance with valid \ncredentials\n2. Set the textcode -  \nMYTICKETS_TICKET_EXCHANGE_ENABLED (MTTEXCEN ) = true\n3. Make sure that the event have all \npermissions in pv.\n4.Make sure text code IESRDE (Is \nEnhanced Seat Restriction Display \nEnabled) is set to true at Org or Supplier ? \nBoth MyTixx and Regular Purchase Flow.\r\nExpected Result:\r\nPre requisite should be met.\r\n2. Create a Extended Seat  Group with a \nDefinition Type ofACCESIBLE\n \nTicketing setup - Supplier Administration --> \nSUP --> Configuration Tab --> Extended \nSeat Group --> New.  Create a Group with \na Definition Type of ACCESIBLE\r\nExpected Result:\r\nA new ESD  Group with a Definition Type \nof ACCESIBLE should be created\r\n3. Click on ?Extended Seat Definitions? in the \nSelect Configuration drop down.  Click \nNew.  Make sure its in the new Group that \nwas just created.Create a new Extended \nSeat Defintion with above group\r\nExpected Result:\r\nA new ESD should be created with above \ndefined group\r\n4. Select seats from seat Map\r\nExpected Result:\r\nUser should be able to Select seats from seat \nMap\r\n5. Naviagte to Minicart and verify the Wheel \nchair symbol displayed\r\nExpected Result:\r\nMake sure thatwheel chair  symbol displayed in \nISM Mini cart\r\n6. Checkout from ISM cart\r\nExpected Result:\r\nUser should be able to checkout from ISM\r\n7. Verify that restriction message is \ndisplayed in PVO shopping cart\r\nExpected Result:\r\nRestriction message should be displayed in \nPVO shopping cart\r\n8. Complete transaction and verify that \nrestriction message is displayed in \nPayment page ,confirmation page ,T@H \npage and in confirmation email.\r\nExpected Result:\r\nRestriction message should be  displayed in \nPayment page ,confirmation page ,T@H page and \nin confirmation email.\r\n9. Enter the venue designer. Choose \nExtended Seat from the drop down. \nCreate a new config and assign seats\r\nExpected Result:\r\nUser should be able to create new ESD config \nand assign seats\r\n10. Exit Designer and go back to Master \nConfiguration --> Extended Seat Rankings \ntab and make master config as available.\r\nExpected Result:\r\nUser should be able to make master config as \navailable\r\n11. Confirm you have an Patron inventory  that \nuses above ESD config.\r\nExpected Result:\r\nPatron inventory with Event having above ESD \ndefined venue is available\r\n12. Login to MyTickets application with valid \ncredentials\r\nExpected Result:\r\nUser should be logged in\r\n13. Navigate to My Ticket s Inventory page\r\nExpected Result:\r\nMy Tickets inventory page should be displayed\r\n14. Select a ticket and continue to Target \nevent list page\r\nExpected Result:\r\nUser should be able to continue to target event \nlist page\r\n15. Select target event and naviagte to ISM\r\nExpected Result:\r\nUser should be able to naviagte to ISM\r\n16. Select section for which above ESD \nwith defintion type Restriction is \ncreated\r\nExpected Result:\r\nUser should be able to Select section for \nwhich above ESD with defintion type \nRestriction is created",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Login to Maintenance with valid \ncredentials\n2. Set the textcode -  \nMYTICKETS_TICKET_EXCHANGE_ENABLED (MTTEXCEN ) = true\n3. Make sure that the event have all \npermissions in pv.\n4.Make sure text code IESRDE (Is \nEnhanced Seat Restriction Display \nEnabled) is set to true at Org or Supplier ? \nBoth MyTixx and Regular Purchase Flow.\r\n2. Create a Extended Seat  Group with a \nDefinition Type ofACCESIBLE\n \nTicketing setup - Supplier Administration --> \nSUP --> Configuration Tab --> Extended \nSeat Group --> New.  Create a Group with \na Definition Type of ACCESIBLE\r\n3. Click on ?Extended Seat Definitions? in the \nSelect Configuration drop down.  Click \nNew.  Make sure its in the new Group that \nwas just created.Create a new Extended \nSeat Defintion with above group\r\n4. Select seats from seat Map\r\n5. Naviagte to Minicart and verify the Wheel \nchair symbol displayed\r\n6. Checkout from ISM cart\r\n7. Verify that restriction message is \ndisplayed in PVO shopping cart\r\n8. Complete transaction and verify that \nrestriction message is displayed in \nPayment page ,confirmation page ,T@H \npage and in confirmation email.\r\n9. Enter the venue designer. Choose \nExtended Seat from the drop down. \nCreate a new config and assign seats\r\n10. Exit Designer and go back to Master \nConfiguration --> Extended Seat Rankings \ntab and make master config as available.\r\n11. Confirm you have an Patron inventory  that \nuses above ESD config.\r\n12. Login to MyTickets application with valid \ncredentials\r\n13. Navigate to My Ticket s Inventory page\r\n14. Select a ticket and continue to Target \nevent list page\r\n15. Select target event and naviagte to ISM\r\n16. Select section for which above ESD \nwith defintion type Restriction is \ncreated",
        "expected": "1. Pre requisite should be met.\r\n2. A new ESD  Group with a Definition Type \nof ACCESIBLE should be created\r\n3. A new ESD should be created with above \ndefined group\r\n4. User should be able to Select seats from seat \nMap\r\n5. Make sure thatwheel chair  symbol displayed in \nISM Mini cart\r\n6. User should be able to checkout from ISM\r\n7. Restriction message should be displayed in \nPVO shopping cart\r\n8. Restriction message should be  displayed in \nPayment page ,confirmation page ,T@H page and \nin confirmation email.\r\n9. User should be able to create new ESD config \nand assign seats\r\n10. User should be able to make master config as \navailable\r\n11. Patron inventory with Event having above ESD \ndefined venue is available\r\n12. User should be logged in\r\n13. My Tickets inventory page should be displayed\r\n14. User should be able to continue to target event \nlist page\r\n15. User should be able to naviagte to ISM\r\n16. User should be able to Select section for \nwhich above ESD with defintion type \nRestriction is created"
      }
    ],
    "custom_jiras": "60.1"
  },
  {
    "id": 30716747,
    "title": "Verify primary Sales confirmation page  disallows the ability to Buy More Tickets if the order is an exchange and HBMTB is true",
    "section_id": 1686225,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13816",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C152257",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre-requisite: \n \nSet HBMTB as true at  Exchange UI sub_agency.\r\nExpected Result:\r\nPre-requisite should be met.\r\n2. Launch My tickets and login as a patron\r\nExpected Result:\r\nUser is logged in and Home screen is shown\r\n3. Complete a exchange flow\r\nExpected Result:\r\nExchange should be completed successfully\r\n4. Verify that Buy More Tickets link is not displayed on the \nconfirmation page even if HBMTB is true\r\nExpected Result:\r\nBuy More Tickets link should  not displayed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-requisite: \n \nSet HBMTB as true at  Exchange UI sub_agency.\r\n2. Launch My tickets and login as a patron\r\n3. Complete a exchange flow\r\n4. Verify that Buy More Tickets link is not displayed on the \nconfirmation page even if HBMTB is true",
        "expected": "1. Pre-requisite should be met.\r\n2. User is logged in and Home screen is shown\r\n3. Exchange should be completed successfully\r\n4. Buy More Tickets link should  not displayed"
      }
    ],
    "custom_jiras": "61"
  },
  {
    "id": 30716748,
    "title": "Verify that the user can exchange tickets where the source event belongs to receivable order and Service charge prevention set in AFP",
    "section_id": 1686225,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13411",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C152258",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre requisite :-\n \nPV:-\nPatron should have a receivable order\n \nPV - AFP Setting :-\nSet Default Downgrade Exchange Behavior as \nOpen liability\nSelect one valid  liability under ' Exchange \nDowngrade Open Item Liability Type '\nSelect one service charge under ' Service \nCharge to Prevent Receivable Reduction '\n \nPVO :-\n>Login to Maintenance with valid credentials\n>Set the textcode -  \nMYTICKETS_TICKET_EXCHANGE_ENABLED \n(MTTEXCEN ) = true\r\n2. Login to MyTickets application with valid \ncredentials\r\nExpected Result:\r\nUser should be logged in to the application\r\n3. Complete ticket exchange transaction by the \ntickets from above order(receivable order in \npre requisite) - Complete Downgrade flow \n(Returned ticket amount should be greater \nthan sale amount)\r\nExpected Result:\r\nUser should be able to compelete the transaction \nwithout any errors\r\n4. Verify that the downgraded amount has been \nadded to exchange fee bucket in payment \nsummary (verify under shopping \ncart,payment page,confirmation page & \nconfirmation email)\r\nExpected Result:\r\nDowngraded amount should be added to \nexchange fee bucket",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre requisite :-\n \nPV:-\nPatron should have a receivable order\n \nPV - AFP Setting :-\nSet Default Downgrade Exchange Behavior as \nOpen liability\nSelect one valid  liability under ' Exchange \nDowngrade Open Item Liability Type '\nSelect one service charge under ' Service \nCharge to Prevent Receivable Reduction '\n \nPVO :-\n>Login to Maintenance with valid credentials\n>Set the textcode -  \nMYTICKETS_TICKET_EXCHANGE_ENABLED \n(MTTEXCEN ) = true\r\n2. Login to MyTickets application with valid \ncredentials\r\n3. Complete ticket exchange transaction by the \ntickets from above order(receivable order in \npre requisite) - Complete Downgrade flow \n(Returned ticket amount should be greater \nthan sale amount)\r\n4. Verify that the downgraded amount has been \nadded to exchange fee bucket in payment \nsummary (verify under shopping \ncart,payment page,confirmation page & \nconfirmation email)",
        "expected": "1. \r\n2. User should be logged in to the application\r\n3. User should be able to compelete the transaction \nwithout any errors\r\n4. Downgraded amount should be added to \nexchange fee bucket"
      }
    ],
    "custom_jiras": "60.1"
  },
  {
    "id": 30716749,
    "title": "Verify that the Non inclusive service charge associated to source event is not displayed under price column in payment summary where the source event belongs to single sale order",
    "section_id": 1686225,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13881",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C152259",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite :\n \n1. Associate a non-inclusive service chanrge \nto one valid event(Event should have all \nechange permissions)\n2.Complete a single sale transaction for the \nabove event (Source event)\n3.Note down the order id and ticket details\n4.AFP - Set Exchange Downgrade behavior \nas Service charge\r\n2. Login to My Tickets with the patron used in \nthe pre requisite\r\nExpected Result:\r\nUser should be logged in\r\n3. MyTickets inventory - Select ticket action as \n'Exchange Tickets'\r\nExpected Result:\r\nUser should be able to select ticket action \n'Exchange Tickets'\r\n4. Initiate exchange :\n\n1.Select the ticket from above order(order done \nin pre requisite)\n2.Select ticket and navigate to target event \nselection page\n3.Continue with a downgrade flow(Returned \nticket amont should be greater than the sale \namount)\r\nExpected Result:\r\nUser should be able to initiate the downgrade \nexchange flow\r\n5. ISM : \n1.Select ticket from target event (ISM) \n2.Review and checkoput the tickets in ISM mini cart and navigate to shopping cart\r\nExpected Result:\r\nUser should be able to select tickets from ISM and checkout the slection\r\n6. Shopping cart page -  Verify the followings\n>The Non inclusive service charge associated to \nsource event is not displayed under price column \nin payment summary.\n \n>Verify that the non inclusive Service charge \n(associated to source event) is  added to \nexchange fee bucket\r\nExpected Result:\r\nNon-Inclusive service charge should not be displayed under price column\nnon inclusive service charge should be added in exchange fee bucket\r\n7. Navigate to payment page and verify the points in \nStep 6\r\nExpected Result:\r\nNon-Inclusive service charge should not be \ndisplayed under price column\nnon inclusive service charge should be added \nin exchange fee bucket\r\n8. Complete the transaction and navigate to confirmation page\nConfirmation page - Verify the points in step 6.\r\nExpected Result:\r\nNon-Inclusive service charge should not be \ndisplayed under price column\nnon inclusive service charge should be added \nin exchange fee bucket\r\n9. Exchange confirmation email - Verify the points in \nstep 6.\r\nExpected Result:\r\nNon-Inclusive service charge should not be \ndisplayed under price column\nnon inclusive service charge should be added \nin exchange fee bucket",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite :\n \n1. Associate a non-inclusive service chanrge \nto one valid event(Event should have all \nechange permissions)\n2.Complete a single sale transaction for the \nabove event (Source event)\n3.Note down the order id and ticket details\n4.AFP - Set Exchange Downgrade behavior \nas Service charge\r\n2. Login to My Tickets with the patron used in \nthe pre requisite\r\n3. MyTickets inventory - Select ticket action as \n'Exchange Tickets'\r\n4. Initiate exchange :\n\n1.Select the ticket from above order(order done \nin pre requisite)\n2.Select ticket and navigate to target event \nselection page\n3.Continue with a downgrade flow(Returned \nticket amont should be greater than the sale \namount)\r\n5. ISM : \n1.Select ticket from target event (ISM) \n2.Review and checkoput the tickets in ISM mini cart and navigate to shopping cart\r\n6. Shopping cart page -  Verify the followings\n>The Non inclusive service charge associated to \nsource event is not displayed under price column \nin payment summary.\n \n>Verify that the non inclusive Service charge \n(associated to source event) is  added to \nexchange fee bucket\r\n7. Navigate to payment page and verify the points in \nStep 6\r\n8. Complete the transaction and navigate to confirmation page\nConfirmation page - Verify the points in step 6.\r\n9. Exchange confirmation email - Verify the points in \nstep 6.",
        "expected": "1. \r\n2. User should be logged in\r\n3. User should be able to select ticket action \n'Exchange Tickets'\r\n4. User should be able to initiate the downgrade \nexchange flow\r\n5. User should be able to select tickets from ISM and checkout the slection\r\n6. Non-Inclusive service charge should not be displayed under price column\nnon inclusive service charge should be added in exchange fee bucket\r\n7. Non-Inclusive service charge should not be \ndisplayed under price column\nnon inclusive service charge should be added \nin exchange fee bucket\r\n8. Non-Inclusive service charge should not be \ndisplayed under price column\nnon inclusive service charge should be added \nin exchange fee bucket\r\n9. Non-Inclusive service charge should not be \ndisplayed under price column\nnon inclusive service charge should be added \nin exchange fee bucket"
      }
    ],
    "custom_jiras": "60.1"
  },
  {
    "id": 30716750,
    "title": "Verify capacity limits exceeded error message is displayed in the UI on selecting the seat for a buyer type which exceeds the hard capacity",
    "section_id": 1686225,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13842",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_refs": "C152260",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite:\n \n Prerequisite1. Setting capacity control: \n \n1.For the target event, go to Capacity control in Event Administration portal in PV\n2.Select the buyer type in event's price structure\n3.Select capacity control as hard and enter capacity limit\n4.Click on Apply changes  \n \nPrerequisite2. Purchase tickets for an event for the same buyer type by a \nMytickets patron\r\nExpected Result:\r\nPrerequisite should be met\r\n2. Launch Mytickets link and log in as patron mentioned in Prerequisite2\r\nExpected Result:\r\nPatron is logged in\r\n3. 1.Go to Mytickets inventory page\n2.Select Exchange action\n3.Select tickets mentioned in prerequisite2\n4.Click Continue\r\nExpected Result:\r\nTarget event selection page is displayed\r\n4. Click Select this event button against the target event mentioned in prerequisite1\r\nExpected Result:\r\nNavigation map of target event is loaded\r\n5. Select the desired section\r\nExpected Result:\r\nSeat map of the selected seciton is displayed\r\n6. 1.Select seats such that the number of seats exceeds the capacity limit\n2.Go to ISM mini cart\r\nExpected Result:\r\nISM mini cart is displayed with the selected seats\r\n7. Click Checkout button on Mini cart\r\nExpected Result:\r\nUser is navigated back to Seatmap with capacity limits exceeded error message \non the top\r\n8. 1.Again select seats within the capacity limit\n2.Go to ISM mini cart\r\nExpected Result:\r\nISM mini cart is displayed with the selected seats\r\n9. Click Checkout button on Mini cart\r\nExpected Result:\r\nUser is not shown no capacity limit exceeded error and navigated to PVO cart \npage.\r\n10. Complete the exchange transaction\r\nExpected Result:\r\nTickets are exchanged successfully",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite:\n \n Prerequisite1. Setting capacity control: \n \n1.For the target event, go to Capacity control in Event Administration portal in PV\n2.Select the buyer type in event's price structure\n3.Select capacity control as hard and enter capacity limit\n4.Click on Apply changes  \n \nPrerequisite2. Purchase tickets for an event for the same buyer type by a \nMytickets patron\r\n2. Launch Mytickets link and log in as patron mentioned in Prerequisite2\r\n3. 1.Go to Mytickets inventory page\n2.Select Exchange action\n3.Select tickets mentioned in prerequisite2\n4.Click Continue\r\n4. Click Select this event button against the target event mentioned in prerequisite1\r\n5. Select the desired section\r\n6. 1.Select seats such that the number of seats exceeds the capacity limit\n2.Go to ISM mini cart\r\n7. Click Checkout button on Mini cart\r\n8. 1.Again select seats within the capacity limit\n2.Go to ISM mini cart\r\n9. Click Checkout button on Mini cart\r\n10. Complete the exchange transaction",
        "expected": "1. Prerequisite should be met\r\n2. Patron is logged in\r\n3. Target event selection page is displayed\r\n4. Navigation map of target event is loaded\r\n5. Seat map of the selected seciton is displayed\r\n6. ISM mini cart is displayed with the selected seats\r\n7. User is navigated back to Seatmap with capacity limits exceeded error message \non the top\r\n8. ISM mini cart is displayed with the selected seats\r\n9. User is not shown no capacity limit exceeded error and navigated to PVO cart \npage.\r\n10. Tickets are exchanged successfully"
      }
    ],
    "custom_jiras": "60"
  },
  {
    "id": 30716751,
    "title": "Verify that the user can complete even exchange with a My Tickets account with no card on file",
    "section_id": 1686225,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13882",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_refs": "C152261",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Create a My Tickets account with no card on \nfile\r\nExpected Result:\r\nMy Tickets account should be created \n(Do not add any cards )\r\n2. Complete the transaction\r\nExpected Result:\r\nTransaction should be completed without any errors\r\n3. Sell a package to the account via PV\r\nExpected Result:\r\nTransaction should be completed in PV\n(Note down the transaction details)\r\n4. Log into the account, confirm there are no \ncards on file\r\nExpected Result:\r\nMy Tickets account should not have any cards \non file\r\n5. Verify the patron cards in DB\nselect * from PVO.patron_card_info where patron_id = XXXXX\r\nExpected Result:\r\nPatron should not have any cards on file\n(DAC will be displayed if it is enabled in PV Org level)\r\n6. Do an even exchange \n>My Tickets inventory - Select action as 'Exchange tickets'\n>Seleect ticket from My Tickets\n>Select target event\n>Select tickets which will result in the same price that we are returning(Returned ticket price should be equal to sale \nticket price)\r\nExpected Result:\r\nEven exchange should be completed without any errors on page\nPayment page:-\n>Credit card section should not be displayed\n>User should be able to complete the transaction without any errors on page",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Create a My Tickets account with no card on \nfile\r\n2. Complete the transaction\r\n3. Sell a package to the account via PV\r\n4. Log into the account, confirm there are no \ncards on file\r\n5. Verify the patron cards in DB\nselect * from PVO.patron_card_info where patron_id = XXXXX\r\n6. Do an even exchange \n>My Tickets inventory - Select action as 'Exchange tickets'\n>Seleect ticket from My Tickets\n>Select target event\n>Select tickets which will result in the same price that we are returning(Returned ticket price should be equal to sale \nticket price)",
        "expected": "1. My Tickets account should be created \n(Do not add any cards )\r\n2. Transaction should be completed without any errors\r\n3. Transaction should be completed in PV\n(Note down the transaction details)\r\n4. My Tickets account should not have any cards \non file\r\n5. Patron should not have any cards on file\n(DAC will be displayed if it is enabled in PV Org level)\r\n6. Even exchange should be completed without any errors on page\nPayment page:-\n>Credit card section should not be displayed\n>User should be able to complete the transaction without any errors on page"
      }
    ],
    "custom_jiras": "60"
  },
  {
    "id": 30716752,
    "title": "Verify the result when Transaction service charge applicable to target but not source",
    "section_id": 1686225,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13863",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 9,
    "custom_is_automated": false,
    "custom_refs": "C152262",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Setup main event and parking event where the \nparking event is in differen organization.\n2.Setup a Transaction Service Charge \nwhich associated to Target Event and not \nto Source Event.\r\n2. Login to my tickets\nMy Tickets URL: \nhttp://pvoqa1.tickets.com/buy/MyTicketsServlet?orgid=22570&agency=NGSM_MLB_MYTIXX\n\n155662/password\r\nExpected Result:\r\nUser should be logged in\r\n3. My Tickets inventory :- Select ticket action a \n'exchange tickets'\r\nExpected Result:\r\nTicket action should be selected\r\n4. Select Parking event ticket\r\nExpected Result:\r\nParking event ticket should be selected\r\n5. Complete the transaction\r\nExpected Result:\r\nTrasnaction should be completed\r\n6. Verify the result when Transaction service \ncharge applicable to target but not source\r\nExpected Result:\r\nTransaction service charge should \nbe applicable to target but not source",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Setup main event and parking event where the \nparking event is in differen organization.\n2.Setup a Transaction Service Charge \nwhich associated to Target Event and not \nto Source Event.\r\n2. Login to my tickets\nMy Tickets URL: \nhttp://pvoqa1.tickets.com/buy/MyTicketsServlet?orgid=22570&agency=NGSM_MLB_MYTIXX\n\n155662/password\r\n3. My Tickets inventory :- Select ticket action a \n'exchange tickets'\r\n4. Select Parking event ticket\r\n5. Complete the transaction\r\n6. Verify the result when Transaction service \ncharge applicable to target but not source",
        "expected": "1. \r\n2. User should be logged in\r\n3. Ticket action should be selected\r\n4. Parking event ticket should be selected\r\n5. Trasnaction should be completed\r\n6. Transaction service charge should \nbe applicable to target but not source"
      }
    ],
    "custom_jiras": "60"
  },
  {
    "id": 30716753,
    "title": "Verify the result whenÃ¿Event service charge applicable to the source but not target",
    "section_id": 1686225,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13863",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 10,
    "custom_is_automated": false,
    "custom_refs": "C152263",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Setup main event and parking event where the \nparking event is in differen organization.\n2.Setup a Event Service Charge which \nassociated to Source Event and not to \ntarget event.\r\n2. Login to my tickets\nMy Tickets URL: \nhttp://pvoqa1.tickets.com/buy/MyTicketsServlet?orgid=22570&agency=NGSM_MLB_MYTIXX\n\n155662/password\r\nExpected Result:\r\nUser should be logged in\r\n3. My Tickets inventory :- Select ticket action a \n'exchange tickets'\r\nExpected Result:\r\nTicket action should be selected\r\n4. Select Parking event ticket\r\nExpected Result:\r\nParking event ticket should be selected\r\n5. Complete the transaction\r\nExpected Result:\r\nTrasnaction should be completed\r\n6. Verify the Event service charge applicable to the \nsource but not target\r\nExpected Result:\r\nEvent service charge should be applicable to the \nsource but not to target",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Setup main event and parking event where the \nparking event is in differen organization.\n2.Setup a Event Service Charge which \nassociated to Source Event and not to \ntarget event.\r\n2. Login to my tickets\nMy Tickets URL: \nhttp://pvoqa1.tickets.com/buy/MyTicketsServlet?orgid=22570&agency=NGSM_MLB_MYTIXX\n\n155662/password\r\n3. My Tickets inventory :- Select ticket action a \n'exchange tickets'\r\n4. Select Parking event ticket\r\n5. Complete the transaction\r\n6. Verify the Event service charge applicable to the \nsource but not target",
        "expected": "1. \r\n2. User should be logged in\r\n3. Ticket action should be selected\r\n4. Parking event ticket should be selected\r\n5. Trasnaction should be completed\r\n6. Event service charge should be applicable to the \nsource but not to target"
      }
    ],
    "custom_jiras": "60"
  },
  {
    "id": 30716754,
    "title": "Verify that the credit card details section is displayed in downgrade exchange flow where a disposition is selected such that Order total becomes greater than zero",
    "section_id": 1686225,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13847",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 11,
    "custom_is_automated": false,
    "custom_refs": "C152264",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite :-\nCreate a service charge in pv and assosiate \nan event to it\nComplete a single sale transaction with above \nevent in PV\r\n2. Login to My Tixx with above patron\nPatron used in Prerequisite\r\nExpected Result:\r\nPatron should be logged in\r\n3. Select tickets from the above order\r\nExpected Result:\r\nTicket should be selected\r\n4. Do an online exchange --Downgrade flow\nMake sure that the disposition is selected \nsuch that Order total becomes greater than \nzero (Service charge amount should be \ngreater than the downgraded amount)\r\nExpected Result:\r\nUser should be able to complete the online \nexchange flow\r\n5. Verify that the credit card details section is \ndisplayed in downgrade exchange flow\r\nExpected Result:\r\nCredit card section should be displayed under \npayment page",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite :-\nCreate a service charge in pv and assosiate \nan event to it\nComplete a single sale transaction with above \nevent in PV\r\n2. Login to My Tixx with above patron\nPatron used in Prerequisite\r\n3. Select tickets from the above order\r\n4. Do an online exchange --Downgrade flow\nMake sure that the disposition is selected \nsuch that Order total becomes greater than \nzero (Service charge amount should be \ngreater than the downgraded amount)\r\n5. Verify that the credit card details section is \ndisplayed in downgrade exchange flow",
        "expected": "1. \r\n2. Patron should be logged in\r\n3. Ticket should be selected\r\n4. User should be able to complete the online \nexchange flow\r\n5. Credit card section should be displayed under \npayment page"
      }
    ],
    "custom_jiras": "60"
  },
  {
    "id": 30716755,
    "title": "Verify that the user can exchange main event tickets where the parking event is in different org comparing to Main event",
    "section_id": 1686225,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13857",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 12,
    "custom_is_automated": false,
    "custom_refs": "C152265",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Select ticket from main event\r\nExpected Result:\r\nMain event ticket should be selected\r\n2. Complete the transaction\r\nExpected Result:\r\nTrasnaction should be completed\r\n3. Verify the ticket  status under \npatron_inventory_seat table\n \nSelect * from PVO.patron_inventory where \ninventory_id=XXXX\r\nExpected Result:\r\nStatus of exchanged tickets should be changed \nto 'EX' from 'IW'\r\n4. 1.Setup main event and parking event where the \nparking event is in differen organization.\n2.Complete a sngle sale trasnaction with \nboth main event and parking event (A \ntypical game plus parking order would be 2 ? 4 \nseats in the regular event and one parking \ntickets)\r\n5. Login to my tickets\nMy Tickets URL: \nhttp://pvoqa1.tickets.com/buy/MyTicketsServlet?orgid=22570&agency=NGSM_MLB_MYTIXX\n\n155662/password\r\nExpected Result:\r\nUser should be logged in\r\n6. My Tickets inventory :- Select ticket action a \n'exchange tickets'\r\nExpected Result:\r\nTicket action should be selected",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Select ticket from main event\r\n2. Complete the transaction\r\n3. Verify the ticket  status under \npatron_inventory_seat table\n \nSelect * from PVO.patron_inventory where \ninventory_id=XXXX\r\n4. 1.Setup main event and parking event where the \nparking event is in differen organization.\n2.Complete a sngle sale trasnaction with \nboth main event and parking event (A \ntypical game plus parking order would be 2 ? 4 \nseats in the regular event and one parking \ntickets)\r\n5. Login to my tickets\nMy Tickets URL: \nhttp://pvoqa1.tickets.com/buy/MyTicketsServlet?orgid=22570&agency=NGSM_MLB_MYTIXX\n\n155662/password\r\n6. My Tickets inventory :- Select ticket action a \n'exchange tickets'",
        "expected": "1. Main event ticket should be selected\r\n2. Trasnaction should be completed\r\n3. Status of exchanged tickets should be changed \nto 'EX' from 'IW'\r\n4. \r\n5. User should be logged in\r\n6. Ticket action should be selected"
      }
    ],
    "custom_jiras": "60"
  },
  {
    "id": 30716756,
    "title": "Verify that the ticket price is hidden in online exchange confirmation email for a downgraded scenario with HIEXDPGR  set as true",
    "section_id": 1686225,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13812",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 13,
    "custom_is_automated": false,
    "custom_refs": "C152266",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Select ticket action ad 'Exchange tickets'\nSelect ticket and continue to target event \nselection page\n\nSelect target event from the list\r\nExpected Result:\r\nUser should be navigated to Target event -ISM \npage\r\n2. Complete online ticket exchange transaction\nNote - Make sure that the exchange follows \ndowngrade\r\nExpected Result:\r\nTransaction should be compelted successfully\r\n3. Verify that the ticket price is hidden in online \nexchange confirmation email\r\nExpected Result:\r\nticket price should be hidden in online exchange \nconfirmation email\r\n4. Pre requisite :-\n \n1.Set HIEXDPGR  set as true under supplier\n2.Set Downgrade behavior as service charge in \nAFP (for exchange user)\n3.patron should have valid tickets\r\n5. Login to My tickets\r\nExpected Result:\r\nUser should be logged in",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Select ticket action ad 'Exchange tickets'\nSelect ticket and continue to target event \nselection page\n\nSelect target event from the list\r\n2. Complete online ticket exchange transaction\nNote - Make sure that the exchange follows \ndowngrade\r\n3. Verify that the ticket price is hidden in online \nexchange confirmation email\r\n4. Pre requisite :-\n \n1.Set HIEXDPGR  set as true under supplier\n2.Set Downgrade behavior as service charge in \nAFP (for exchange user)\n3.patron should have valid tickets\r\n5. Login to My tickets",
        "expected": "1. User should be navigated to Target event -ISM \npage\r\n2. Transaction should be compelted successfully\r\n3. ticket price should be hidden in online exchange \nconfirmation email\r\n4. \r\n5. User should be logged in"
      }
    ],
    "custom_jiras": "60"
  },
  {
    "id": 30716757,
    "title": "Verify the full season package exchange where patron need to pay the extra upgraded amount",
    "section_id": 1686225,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13411",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 14,
    "custom_is_automated": false,
    "custom_refs": "C152267",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite:-\n \n1. Login to PVO Maintenance with valid \ncredentials\n2. Set the textcode -  \nMYTICKETS_TICKET_EXCHANGE_ENABLED \n(MTTEXCEN ) = true and Text code needed - Set \nvalue\n3. Configure the label name for exchange tab\r\n2. Login to My Tickets Application with valid \ncredentials\r\nExpected Result:\r\nUser should be able to launch the application\r\n3. Select tickets from My Tickets inventory to return\r\nExpected Result:\r\nUser should able to select the tickets from your \ninventory that you wish to exchange\r\n4. Navigate to Target event list page\r\nExpected Result:\r\nUser should be able to navigate the target event \nlist page\r\n5. Select one event  from the list\r\nExpected Result:\r\nUser should be able to select one event from the \nlist\r\n6. Verify the ISM availability page\r\nExpected Result:\r\nVerify the seats is available in ISM availability \npage\r\n7. Select seats from ISM\r\nExpected Result:\r\nUser should able to select the seats which is \navailable\r\n8. Click on 'Review Your Selection'\r\nExpected Result:\r\nIt should navigate to the mini cart pop up\r\n9. Click on Proceed to Check out\r\nExpected Result:\r\nCart page should be displayed\r\n10. Click on Continue button\r\nExpected Result:\r\nUser should navigates to the payment page\r\n11. Verify the extra upgraded amount to be paid by \nthe patron is displayed for full season package\r\nExpected Result:\r\nExtra upgraded amount should be paid by the \npatron  and it should be displayed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite:-\n \n1. Login to PVO Maintenance with valid \ncredentials\n2. Set the textcode -  \nMYTICKETS_TICKET_EXCHANGE_ENABLED \n(MTTEXCEN ) = true and Text code needed - Set \nvalue\n3. Configure the label name for exchange tab\r\n2. Login to My Tickets Application with valid \ncredentials\r\n3. Select tickets from My Tickets inventory to return\r\n4. Navigate to Target event list page\r\n5. Select one event  from the list\r\n6. Verify the ISM availability page\r\n7. Select seats from ISM\r\n8. Click on 'Review Your Selection'\r\n9. Click on Proceed to Check out\r\n10. Click on Continue button\r\n11. Verify the extra upgraded amount to be paid by \nthe patron is displayed for full season package",
        "expected": "1. \r\n2. User should be able to launch the application\r\n3. User should able to select the tickets from your \ninventory that you wish to exchange\r\n4. User should be able to navigate the target event \nlist page\r\n5. User should be able to select one event from the \nlist\r\n6. Verify the seats is available in ISM availability \npage\r\n7. User should able to select the seats which is \navailable\r\n8. It should navigate to the mini cart pop up\r\n9. Cart page should be displayed\r\n10. User should navigates to the payment page\r\n11. Extra upgraded amount should be paid by the \npatron  and it should be displayed"
      }
    ],
    "custom_jiras": "60"
  },
  {
    "id": 30716758,
    "title": "Verify the partial package exchange from variable package where the downgraded amount has been credited in account credit",
    "section_id": 1686225,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13411",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 15,
    "custom_is_automated": false,
    "custom_refs": "C152268",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite:-\n \n1. Login to PVO Maintenance with valid \ncredentials\n2. Set the textcode -  \nMYTICKETS_TICKET_EXCHANGE_ENABLED \n(MTTEXCEN ) = true and Text code needed - Set \nvalue\n3. Configure the label name for exchange tab\r\n2. Login to My Tickets Application with valid \ncredentials\r\nExpected Result:\r\nUser should be able to launch the application\r\n3. Select tickets from My Tickets inventory to return\r\nExpected Result:\r\nUser should able to select the tickets from your \ninventory that you wish to exchange\r\n4. Navigate to Target event list page\r\nExpected Result:\r\nUser should be able to navigate the target event \nlist page\r\n5. Select one event  from the list\r\nExpected Result:\r\nUser should be able to select one event from the \nlist\r\n6. Verify the ISM availability page\r\nExpected Result:\r\nVerify the seats is available in ISM availability \npage\r\n7. Select seats from ISM\r\nExpected Result:\r\nUser should able to select the seats which is \navailable\r\n8. Click on 'Review Your Selection'\r\nExpected Result:\r\nIt should navigate to the mini cart pop up\r\n9. Click on Proceed to Check out\r\nExpected Result:\r\nCart page should be displayed\r\n10. Click on Continue button\r\nExpected Result:\r\nUser should navigates to the payment page\r\n11. Verify partial package exchange from \nvariable package where the downgraded \namount is credited in account credit.\r\nExpected Result:\r\nDowngraded amount should be credited in \naccount credit.\r\n12. Compete the transaction and verify the payment details in both confirmation page and exchange confirmation email\r\nExpected Result:\r\nTransaction should be completed successfully\nPayment details should be displayed in confirmation page and email correctly\nESGACCCM message should be displayed in bothconfirmation page and confirmation email",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite:-\n \n1. Login to PVO Maintenance with valid \ncredentials\n2. Set the textcode -  \nMYTICKETS_TICKET_EXCHANGE_ENABLED \n(MTTEXCEN ) = true and Text code needed - Set \nvalue\n3. Configure the label name for exchange tab\r\n2. Login to My Tickets Application with valid \ncredentials\r\n3. Select tickets from My Tickets inventory to return\r\n4. Navigate to Target event list page\r\n5. Select one event  from the list\r\n6. Verify the ISM availability page\r\n7. Select seats from ISM\r\n8. Click on 'Review Your Selection'\r\n9. Click on Proceed to Check out\r\n10. Click on Continue button\r\n11. Verify partial package exchange from \nvariable package where the downgraded \namount is credited in account credit.\r\n12. Compete the transaction and verify the payment details in both confirmation page and exchange confirmation email",
        "expected": "1. \r\n2. User should be able to launch the application\r\n3. User should able to select the tickets from your \ninventory that you wish to exchange\r\n4. User should be able to navigate the target event \nlist page\r\n5. User should be able to select one event from the \nlist\r\n6. Verify the seats is available in ISM availability \npage\r\n7. User should able to select the seats which is \navailable\r\n8. It should navigate to the mini cart pop up\r\n9. Cart page should be displayed\r\n10. User should navigates to the payment page\r\n11. Downgraded amount should be credited in \naccount credit.\r\n12. Transaction should be completed successfully\nPayment details should be displayed in confirmation page and email correctly\nESGACCCM message should be displayed in bothconfirmation page and confirmation email"
      }
    ],
    "custom_jiras": "60"
  },
  {
    "id": 30716759,
    "title": "Verify the partial package exchange from variable package where patron need to pay the extra upgraded amount",
    "section_id": 1686225,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13411",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 16,
    "custom_is_automated": false,
    "custom_refs": "C152269",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite:-\n \n1. Login to PVO Maintenance with valid \ncredentials\n2. Set the textcode -  \nMYTICKETS_TICKET_EXCHANGE_ENABLED \n(MTTEXCEN ) = true and Text code needed - Set \nvalue\n3. Configure the label name for exchange tab\r\n2. Complete the transaction and verify the exchange confirmation email have the payment details\r\nExpected Result:\r\nTransaction should should be completed and user getting the details in the confirmation email correctly\r\n3. Login to My Tickets Application with valid \ncredentials\r\nExpected Result:\r\nUser should be able to launch the application\r\n4. Select tickets from My Tickets inventory to return\r\nExpected Result:\r\nUser should able to select the tickets from your \ninventory that you wish to exchange\r\n5. Navigate to Target event list page\r\nExpected Result:\r\nUser should be able to navigate the target event \nlist page\r\n6. Select one event  from the list\r\nExpected Result:\r\nUser should be able to select one event from the \nlist\r\n7. Verify the ISM availability page\r\nExpected Result:\r\nVerify the seats is available in ISM availability \npage\r\n8. Select seats from ISM\r\nExpected Result:\r\nUser should able to select the seats which is \navailable\r\n9. Click on 'Review Your Selection'\r\nExpected Result:\r\nIt should navigate to the mini cart pop up\r\n10. Click on Proceed to Check out\r\nExpected Result:\r\nCart page should be displayed\r\n11. Click on Continue button\r\nExpected Result:\r\nUser should navigates to the payment page\r\n12. Verify the extra upgraded amount to be paid by \nthe patron is displayed\r\nExpected Result:\r\nExtra upgraded amount should be paid by the \npatron  and it should be displayed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite:-\n \n1. Login to PVO Maintenance with valid \ncredentials\n2. Set the textcode -  \nMYTICKETS_TICKET_EXCHANGE_ENABLED \n(MTTEXCEN ) = true and Text code needed - Set \nvalue\n3. Configure the label name for exchange tab\r\n2. Complete the transaction and verify the exchange confirmation email have the payment details\r\n3. Login to My Tickets Application with valid \ncredentials\r\n4. Select tickets from My Tickets inventory to return\r\n5. Navigate to Target event list page\r\n6. Select one event  from the list\r\n7. Verify the ISM availability page\r\n8. Select seats from ISM\r\n9. Click on 'Review Your Selection'\r\n10. Click on Proceed to Check out\r\n11. Click on Continue button\r\n12. Verify the extra upgraded amount to be paid by \nthe patron is displayed",
        "expected": "1. \r\n2. Transaction should should be completed and user getting the details in the confirmation email correctly\r\n3. User should be able to launch the application\r\n4. User should able to select the tickets from your \ninventory that you wish to exchange\r\n5. User should be able to navigate the target event \nlist page\r\n6. User should be able to select one event from the \nlist\r\n7. Verify the seats is available in ISM availability \npage\r\n8. User should able to select the seats which is \navailable\r\n9. It should navigate to the mini cart pop up\r\n10. Cart page should be displayed\r\n11. User should navigates to the payment page\r\n12. Extra upgraded amount should be paid by the \npatron  and it should be displayed"
      }
    ],
    "custom_jiras": "60"
  },
  {
    "id": 30716760,
    "title": "Verify a complete flow of online ticket exchange",
    "section_id": 1686225,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13411",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 17,
    "custom_is_automated": false,
    "custom_refs": "C152270",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre requisite :-\n \n1. Login to Maintenance with valid credentials\n2. Set the textcode -  \nMYTICKETS_TICKET_EXCHANGE_ENABLED \n(MTTEXCEN ) = true\n3. Patron should have valid tickets in his ticket \ninventory.\n4. Event and patron should have all exchange \npermissions\r\n2. Login to My Tickets Application with valid \ncredentials\r\nExpected Result:\r\nUser should be able to login with valid \ncredentials\r\n3. Navigate to My Tickets inventory\r\nExpected Result:\r\nUser should be able to view my tickets \ninventory home page\r\n4. Steps to be followed to select the tickets to be \nexchanged:\n \n1. Select the event of the tickets you wish to \nexchange.\n2. Select the specific tickets to exchange.\n3. The selected tickets will appear to the right of \nthe inventory list.  \n4.Click ?Continue? below this selection display.\r\nExpected Result:\r\nUser should be able to select the tickets without \nany errors for Online exchanging\r\n5. A list of events will appear containing those that \nare eligible for selection in exchange for the event \nthat you are returning.  \n \n1.Select the desired event that you wish to attend \nby clicking the ?Select This Event? button next to \nthe desired event. \n2. To cancel and start over from this point, click \nthe ?Cancel? button on the bottom of the page to \nclear all selections and return to the inventory \nlist. \n3. Click on the ?Back? button on the bottom of the \npage to return to the inventory list, but retaining \nyour original ticket selection for review.\n4.A seat map will display with filters preselected \nbased on the tickets you are returning.   This will \nreveal highlighted areas of the map indicating \nseat availability matching the quantity and price \nlevel of your original seats.  \n5. Click an area/section on the map from which \nspecific seats can be selected.\n6. A section map will display.   Click/Select \nspecific seat location as desired.\r\nExpected Result:\r\nUser should be able to select the event to which \nthe ticket as to be exchanged\r\n6. 1. Click the ?Review Your Selection? button.\n2.. A pop-up will display illustrating the selected \nseats.  \n3. To continue to the next step in the exchange, \nselect ?Proceed to Checkout?.  To clear the seats \nfrom the cart, select ?Clear Cart?.  To add more \nseats to the cart, select ?Return to Map?.\r\nExpected Result:\r\nUser should be successfully able to proceed to \npayment\r\n7. A cart summary will display illustrating the \ntickets/seats selected for the exchange and any \nticket or transaction charges that are assessed.  \nAdditionally, any amount due will be indicated as \nwell (due to a difference in price between tickets \nreturned and sold, for example).  Click ?Continue? \nto navigate to the payment page.\r\nExpected Result:\r\nShopping cart page should be dispalyed with the \ndetails to the user\r\n8. If any payment is due, a payment method \nshould be selected or entered.  Delivery \nmethod and information shall be required to \naccess the new tickets.\r\nExpected Result:\r\nUser should be able to make the payment for \nthe tickets without any errors\r\n9. Click ?Submit? at the bottom of the page to \nconfirm and complete the transaction.\r\nExpected Result:\r\nThe transaction should be completed \nsuccessfully without any interruptions\r\n10. A confirmation page will display recapping \nthe details of the transaction.\r\nExpected Result:\r\nConfirmation page should be displayed to the \nuser with the exchanged ticket details.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre requisite :-\n \n1. Login to Maintenance with valid credentials\n2. Set the textcode -  \nMYTICKETS_TICKET_EXCHANGE_ENABLED \n(MTTEXCEN ) = true\n3. Patron should have valid tickets in his ticket \ninventory.\n4. Event and patron should have all exchange \npermissions\r\n2. Login to My Tickets Application with valid \ncredentials\r\n3. Navigate to My Tickets inventory\r\n4. Steps to be followed to select the tickets to be \nexchanged:\n \n1. Select the event of the tickets you wish to \nexchange.\n2. Select the specific tickets to exchange.\n3. The selected tickets will appear to the right of \nthe inventory list.  \n4.Click ?Continue? below this selection display.\r\n5. A list of events will appear containing those that \nare eligible for selection in exchange for the event \nthat you are returning.  \n \n1.Select the desired event that you wish to attend \nby clicking the ?Select This Event? button next to \nthe desired event. \n2. To cancel and start over from this point, click \nthe ?Cancel? button on the bottom of the page to \nclear all selections and return to the inventory \nlist. \n3. Click on the ?Back? button on the bottom of the \npage to return to the inventory list, but retaining \nyour original ticket selection for review.\n4.A seat map will display with filters preselected \nbased on the tickets you are returning.   This will \nreveal highlighted areas of the map indicating \nseat availability matching the quantity and price \nlevel of your original seats.  \n5. Click an area/section on the map from which \nspecific seats can be selected.\n6. A section map will display.   Click/Select \nspecific seat location as desired.\r\n6. 1. Click the ?Review Your Selection? button.\n2.. A pop-up will display illustrating the selected \nseats.  \n3. To continue to the next step in the exchange, \nselect ?Proceed to Checkout?.  To clear the seats \nfrom the cart, select ?Clear Cart?.  To add more \nseats to the cart, select ?Return to Map?.\r\n7. A cart summary will display illustrating the \ntickets/seats selected for the exchange and any \nticket or transaction charges that are assessed.  \nAdditionally, any amount due will be indicated as \nwell (due to a difference in price between tickets \nreturned and sold, for example).  Click ?Continue? \nto navigate to the payment page.\r\n8. If any payment is due, a payment method \nshould be selected or entered.  Delivery \nmethod and information shall be required to \naccess the new tickets.\r\n9. Click ?Submit? at the bottom of the page to \nconfirm and complete the transaction.\r\n10. A confirmation page will display recapping \nthe details of the transaction.",
        "expected": "1. \r\n2. User should be able to login with valid \ncredentials\r\n3. User should be able to view my tickets \ninventory home page\r\n4. User should be able to select the tickets without \nany errors for Online exchanging\r\n5. User should be able to select the event to which \nthe ticket as to be exchanged\r\n6. User should be successfully able to proceed to \npayment\r\n7. Shopping cart page should be dispalyed with the \ndetails to the user\r\n8. User should be able to make the payment for \nthe tickets without any errors\r\n9. The transaction should be completed \nsuccessfully without any interruptions\r\n10. Confirmation page should be displayed to the \nuser with the exchanged ticket details."
      }
    ],
    "custom_jiras": "60"
  },
  {
    "id": 30716761,
    "title": "Verify the service charge is applied in cart as per the Exchange Downgrade Service Charge set in AFP",
    "section_id": 1686225,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13411",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 18,
    "custom_is_automated": false,
    "custom_refs": "C152271",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Select seats' and navigate to shopping cart - Do a Downgrade flow(Total Returned ticket amount should be greater \nthan Total sale amount)\r\nExpected Result:\r\nUser should be able to comeplete the step\r\n2. Verify the service charge is applied in cart as per \nthe Exchange Downgrade Service Charge set in \nAFP\r\nExpected Result:\r\nProVenue shall be adding a new service \ncharge class to consume any downgrade in \nexchange values if that is desired and thus \nallow the organization to retain the original \nfunds and avoid creating a credit on the \npatron account.  The specific service charge \nto be used for this purpose shall be defined in \nProVenue permissions and passed along to \nProVenueOnline.\nFrom PV:-\nThis shall be a dropdown presenting the list \nof Service Charges defined with the service \ncharge class of Ticket Exchange Downgrade, \nwhich are in context for any suppliers to \nwhich the agency being configured has \naccess.    This value cannot be null.   This \nspecific service charge shall be assessed \nwhen the default downgrade option is \nService Charge.\r\n3. Payment page- Verify the payment summary \nupdated correctly\r\nExpected Result:\r\nPayment summary should have the exchange \nservice charge details under \"Exchange Fee' \nbucket\r\n4. Complete the transaction and verify the \ndetails are updated in confirmation email \ncorrectly\r\nExpected Result:\r\nTransaction should be completed successfully.\nExchange service cahrge details should be \nupdated in the confirmation page and \nconfirmation email\r\n5. 1. Login to Maintenance with valid credentials\n2. Set the textcode -\n\n?MTTEXCEN? ? \nMYTICKETS_TICKET_EXCHANGE_ENABLED ? Defaults to ?false?.  When ?true?, the \nExchange feature will be enabled for the \nsupplier.  Typically set at the Supplier level \nonly.\n\n3. Patron should have valid tickets in his \nticket inventory\n PV-AFP : Exchange downgrade behavior \nshould be set as 'Service Charge' and \nassociate one valid service charge to it\r\nExpected Result:\r\nPre requisite should be met.\r\n6. Login to MyTickets application with valid \ncredentials\r\nExpected Result:\r\nUser should be logged in\r\n7. Navigate to My Ticket s Inventory page\r\nExpected Result:\r\nMy Tickets inventory page should be displayed\r\n8. Select the Ticket Exchange action\r\nExpected Result:\r\nValid tickets should displayed in the inventory \npage\r\n9. Select tickets and click on continue button\r\nExpected Result:\r\nEvent selection page should displayed\r\n10. Select target event from the event selection\r\nExpected Result:\r\nuser should be able to select the events.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Select seats' and navigate to shopping cart - Do a Downgrade flow(Total Returned ticket amount should be greater \nthan Total sale amount)\r\n2. Verify the service charge is applied in cart as per \nthe Exchange Downgrade Service Charge set in \nAFP\r\n3. Payment page- Verify the payment summary \nupdated correctly\r\n4. Complete the transaction and verify the \ndetails are updated in confirmation email \ncorrectly\r\n5. 1. Login to Maintenance with valid credentials\n2. Set the textcode -\n\n?MTTEXCEN? ? \nMYTICKETS_TICKET_EXCHANGE_ENABLED ? Defaults to ?false?.  When ?true?, the \nExchange feature will be enabled for the \nsupplier.  Typically set at the Supplier level \nonly.\n\n3. Patron should have valid tickets in his \nticket inventory\n PV-AFP : Exchange downgrade behavior \nshould be set as 'Service Charge' and \nassociate one valid service charge to it\r\n6. Login to MyTickets application with valid \ncredentials\r\n7. Navigate to My Ticket s Inventory page\r\n8. Select the Ticket Exchange action\r\n9. Select tickets and click on continue button\r\n10. Select target event from the event selection",
        "expected": "1. User should be able to comeplete the step\r\n2. ProVenue shall be adding a new service \ncharge class to consume any downgrade in \nexchange values if that is desired and thus \nallow the organization to retain the original \nfunds and avoid creating a credit on the \npatron account.  The specific service charge \nto be used for this purpose shall be defined in \nProVenue permissions and passed along to \nProVenueOnline.\nFrom PV:-\nThis shall be a dropdown presenting the list \nof Service Charges defined with the service \ncharge class of Ticket Exchange Downgrade, \nwhich are in context for any suppliers to \nwhich the agency being configured has \naccess.    This value cannot be null.   This \nspecific service charge shall be assessed \nwhen the default downgrade option is \nService Charge.\r\n3. Payment summary should have the exchange \nservice charge details under \"Exchange Fee' \nbucket\r\n4. Transaction should be completed successfully.\nExchange service cahrge details should be \nupdated in the confirmation page and \nconfirmation email\r\n5. Pre requisite should be met.\r\n6. User should be logged in\r\n7. My Tickets inventory page should be displayed\r\n8. Valid tickets should displayed in the inventory \npage\r\n9. Event selection page should displayed\r\n10. user should be able to select the events."
      }
    ],
    "custom_jiras": "60"
  },
  {
    "id": 30716762,
    "title": "Verify that the negative due amount value is credited to patrons account credit as per the Exchange Downgrade Open Item Liability Type set in AFP",
    "section_id": 1686225,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13411",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 19,
    "custom_is_automated": false,
    "custom_refs": "C152272",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1. Login to Maintenance with valid credentials\n2. Set the textcode -  \nMYTICKETS_TICKET_EXCHANGE_ENABLED \n(MTTEXCEN ) = true\n3. Patron should have valid tickets in his ticket \ninventory\r\nExpected Result:\r\nPre requisite should be met.\r\n2. Login to MyTickets application with valid \ncredentials\r\nExpected Result:\r\nUser should be logged in\r\n3. Navigate to My Ticket s Inventory page\r\nExpected Result:\r\nMy Tickets inventory page should be displayed\r\n4. Select the Ticket Exchange action\r\nExpected Result:\r\nValid tickets should displayed in the inventory \npage\r\n5. Select tickets and click on continue button\r\nExpected Result:\r\nEvent selection page should displayed\r\n6. Select target event from the event selection\r\nExpected Result:\r\nuser should be able to select the events.\r\n7. Verify that the negative due amount value is \ncredited to patrons account credit as per the \nExchange Downgrade Open Item Liability Type \nset in AFP\r\nExpected Result:\r\nProVenue shall provide the default open item \nliability (credit) type that shall be used to capture \nthe funds (as defined in ProVenue permissions).  \nThe credit shall be created automatically in \nProVenue.\nThis specific open item liability type shall be used \nto create patron credits when the default \ndowngrade option is Open Item Liability Type.   \nVerify the followings too,\n>>Account credit label\n>>Account credit information bubble",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Login to Maintenance with valid credentials\n2. Set the textcode -  \nMYTICKETS_TICKET_EXCHANGE_ENABLED \n(MTTEXCEN ) = true\n3. Patron should have valid tickets in his ticket \ninventory\r\n2. Login to MyTickets application with valid \ncredentials\r\n3. Navigate to My Ticket s Inventory page\r\n4. Select the Ticket Exchange action\r\n5. Select tickets and click on continue button\r\n6. Select target event from the event selection\r\n7. Verify that the negative due amount value is \ncredited to patrons account credit as per the \nExchange Downgrade Open Item Liability Type \nset in AFP",
        "expected": "1. Pre requisite should be met.\r\n2. User should be logged in\r\n3. My Tickets inventory page should be displayed\r\n4. Valid tickets should displayed in the inventory \npage\r\n5. Event selection page should displayed\r\n6. user should be able to select the events.\r\n7. ProVenue shall provide the default open item \nliability (credit) type that shall be used to capture \nthe funds (as defined in ProVenue permissions).  \nThe credit shall be created automatically in \nProVenue.\nThis specific open item liability type shall be used \nto create patron credits when the default \ndowngrade option is Open Item Liability Type.   \nVerify the followings too,\n>>Account credit label\n>>Account credit information bubble"
      }
    ],
    "custom_jiras": "60"
  },
  {
    "id": 30716763,
    "title": "Verify that the event schedule link is not appeared in online exchange flow",
    "section_id": 1686225,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13411",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 20,
    "custom_is_automated": false,
    "custom_refs": "C152273",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1. Login to Maintenance with valid credentials\n2. Set the textcode -  \nMYTICKETS_TICKET_EXCHANGE_ENABLED \n(MTTEXCEN ) = true\n3. Patron should have valid tickets in his ticket \ninventory\n4.Set necessary text codes\r\nExpected Result:\r\nPre requisite should be met.\r\n2. Login to MyTickets application with valid \ncredentials\r\nExpected Result:\r\nUser should be logged in\r\n3. Navigate to My Ticket s Inventory page\r\nExpected Result:\r\nMy Tickets inventory page should be displayed\r\n4. Select the Ticket Exchange action\r\nExpected Result:\r\nValid tickets should displayed in the inventory \npage\r\n5. Select tickets and click on continue button\r\nExpected Result:\r\nEvent selection page should be displayed\r\n6. Verify that the event schedule link is not \nappeared in online exchange flow\r\nExpected Result:\r\nThe Event Schedule link shall be removed as \nthe patron shall not be allowed to navigate \naway from the exchange flow\r\n7. Select target event from the event selection\r\nExpected Result:\r\nUser should be able to select the events.\r\n8. Select seats' and navigate till payment page.\r\nExpected Result:\r\nPayment page should be displayed.\r\n9. Complete the transaction\r\nExpected Result:\r\nUser should be able to complete the transaction",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Login to Maintenance with valid credentials\n2. Set the textcode -  \nMYTICKETS_TICKET_EXCHANGE_ENABLED \n(MTTEXCEN ) = true\n3. Patron should have valid tickets in his ticket \ninventory\n4.Set necessary text codes\r\n2. Login to MyTickets application with valid \ncredentials\r\n3. Navigate to My Ticket s Inventory page\r\n4. Select the Ticket Exchange action\r\n5. Select tickets and click on continue button\r\n6. Verify that the event schedule link is not \nappeared in online exchange flow\r\n7. Select target event from the event selection\r\n8. Select seats' and navigate till payment page.\r\n9. Complete the transaction",
        "expected": "1. Pre requisite should be met.\r\n2. User should be logged in\r\n3. My Tickets inventory page should be displayed\r\n4. Valid tickets should displayed in the inventory \npage\r\n5. Event selection page should be displayed\r\n6. The Event Schedule link shall be removed as \nthe patron shall not be allowed to navigate \naway from the exchange flow\r\n7. User should be able to select the events.\r\n8. Payment page should be displayed.\r\n9. User should be able to complete the transaction"
      }
    ],
    "custom_jiras": "60"
  },
  {
    "id": 30716764,
    "title": "Verify the confirmation email contains all the details of exchange transaction",
    "section_id": 1686225,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13411",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 21,
    "custom_is_automated": false,
    "custom_refs": "C152274",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1. Login to Maintenance with valid credentials\n2. Set the textcode -  \nMYTICKETS_TICKET_EXCHANGE_ENABLED \n(MTTEXCEN ) = true\n3. Patron should have valid tickets in his ticket \ninventory\r\nExpected Result:\r\nPre requisite should be met.\r\n2. Login to MyTickets application with valid \ncredentials\r\nExpected Result:\r\nUser should be logged in\r\n3. Navigate to My Ticket s Inventory page\r\nExpected Result:\r\nMy Tickets inventory page should be displayed\r\n4. Select the Ticket Exchange action\r\nExpected Result:\r\nValid tickets should displayed in the inventory \npage\r\n5. Select tickets and click on continue button\r\nExpected Result:\r\nEvent selection page is displayed\r\n6. Select target event from the event selection\r\nExpected Result:\r\nuser should be able to select the events.\r\n7. Select seats' and navigate till payment page.\r\nExpected Result:\r\nPayment page is displayed.\r\n8. Complete the transaction\r\nExpected Result:\r\ntransaction should be completed\r\n9. Verify the confirmation email contains all the \ndetails of exchange transaction\r\nExpected Result:\r\nThe confirmation email shall display all ticket \ndetails for both the event being returned in the \nexchange and the event being sold in the \nexchange. \nAdditionally, any payments made to cover an \namount due resulting from an exchange shall \ndisplay or any account credit created from a \ndowngrade in price shall be available to add \nto the email format.\nThe confirmation email shall, as much as \npossible, present payment information in the \nsame display order and with the same detail \nthat is presented on the MyTickets \nconfirmation page.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Login to Maintenance with valid credentials\n2. Set the textcode -  \nMYTICKETS_TICKET_EXCHANGE_ENABLED \n(MTTEXCEN ) = true\n3. Patron should have valid tickets in his ticket \ninventory\r\n2. Login to MyTickets application with valid \ncredentials\r\n3. Navigate to My Ticket s Inventory page\r\n4. Select the Ticket Exchange action\r\n5. Select tickets and click on continue button\r\n6. Select target event from the event selection\r\n7. Select seats' and navigate till payment page.\r\n8. Complete the transaction\r\n9. Verify the confirmation email contains all the \ndetails of exchange transaction",
        "expected": "1. Pre requisite should be met.\r\n2. User should be logged in\r\n3. My Tickets inventory page should be displayed\r\n4. Valid tickets should displayed in the inventory \npage\r\n5. Event selection page is displayed\r\n6. user should be able to select the events.\r\n7. Payment page is displayed.\r\n8. transaction should be completed\r\n9. The confirmation email shall display all ticket \ndetails for both the event being returned in the \nexchange and the event being sold in the \nexchange. \nAdditionally, any payments made to cover an \namount due resulting from an exchange shall \ndisplay or any account credit created from a \ndowngrade in price shall be available to add \nto the email format.\nThe confirmation email shall, as much as \npossible, present payment information in the \nsame display order and with the same detail \nthat is presented on the MyTickets \nconfirmation page."
      }
    ],
    "custom_jiras": "60"
  },
  {
    "id": 30716765,
    "title": "Verify that the credit is applied to the due amount and amount is updated when patron selects account credit checkbox",
    "section_id": 1686225,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13411",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 22,
    "custom_is_automated": false,
    "custom_refs": "C152275",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1. Login to Maintenance with valid credentials\n2. Set the textcode -  \nMYTICKETS_TICKET_EXCHANGE_ENABLED \n(MTTEXCEN ) = true\n3. Patron should have valid tickets in his ticket \ninventory\r\nExpected Result:\r\nPre requisite should be met.\r\n2. Login to MyTickets application with valid \ncredentials\r\nExpected Result:\r\nUser should be logged in\r\n3. Navigate to My Ticket s Inventory page\r\nExpected Result:\r\nMy Tickets inventory page should be displayed\r\n4. Select the Ticket Exchange action\r\nExpected Result:\r\nValid tickets should displayed in the inventory \npage\r\n5. Select tickets and click on continue button\r\nExpected Result:\r\nEvent selection page is displayed\r\n6. Select target event from the event selection \npagea and navigate till payment page.\r\nExpected Result:\r\nPayment page is displayed.\r\n7. 1. Do not check the account credit checkbox and \nverifty the payment summary section.\n2. Due amount is not updated in the payment \nsummary section.\r\nExpected Result:\r\nthe credit section should not be displayed when \npatron doesnt have available credit\r\n8. 1. No wcheck the account credit checkbox and verifty the payement summary section.\n2. Verify that the credit is applied to the due amount and amount is updated.\r\nExpected Result:\r\nthe credit is applied to the due amount and amount is updated .",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Login to Maintenance with valid credentials\n2. Set the textcode -  \nMYTICKETS_TICKET_EXCHANGE_ENABLED \n(MTTEXCEN ) = true\n3. Patron should have valid tickets in his ticket \ninventory\r\n2. Login to MyTickets application with valid \ncredentials\r\n3. Navigate to My Ticket s Inventory page\r\n4. Select the Ticket Exchange action\r\n5. Select tickets and click on continue button\r\n6. Select target event from the event selection \npagea and navigate till payment page.\r\n7. 1. Do not check the account credit checkbox and \nverifty the payment summary section.\n2. Due amount is not updated in the payment \nsummary section.\r\n8. 1. No wcheck the account credit checkbox and verifty the payement summary section.\n2. Verify that the credit is applied to the due amount and amount is updated.",
        "expected": "1. Pre requisite should be met.\r\n2. User should be logged in\r\n3. My Tickets inventory page should be displayed\r\n4. Valid tickets should displayed in the inventory \npage\r\n5. Event selection page is displayed\r\n6. Payment page is displayed.\r\n7. the credit section should not be displayed when \npatron doesnt have available credit\r\n8. the credit is applied to the due amount and amount is updated ."
      }
    ],
    "custom_jiras": "60"
  },
  {
    "id": 30716766,
    "title": "Verify that a valid message is displayed when a buyer type is used in the exchange sale that is not the same as the one associated to any of the tickets being returned",
    "section_id": 1686225,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13411",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 23,
    "custom_is_automated": false,
    "custom_refs": "C152276",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the link and login with valid credentials\r\nExpected Result:\r\nUser should be logged into the application \nsuccessfully\r\n2. Navigate to My Tickets Inventory page and select \naction as \"Ticket Exchange\"\r\nExpected Result:\r\nUser should be navigate to \" My Tickets \nInventory\" page and select action as \"Ticket \nExchange\" successfully\r\n3. select active ticket and continue\r\nExpected Result:\r\nuser should be able to complete the transaction \nsuccessfully\r\n4. Verify that a valid message is displayed\r\nExpected Result:\r\nExpected:-\nUser should be able to get a valid message \nas expected\n\nThis shall be controlled by a text code where \nthe message can be customized, \n\n?A default exchange buyer type has been \nselected for the purpose of completing your \ntransaction successfully.?  \nset the textcode for validation message",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link and login with valid credentials\r\n2. Navigate to My Tickets Inventory page and select \naction as \"Ticket Exchange\"\r\n3. select active ticket and continue\r\n4. Verify that a valid message is displayed",
        "expected": "1. User should be logged into the application \nsuccessfully\r\n2. User should be navigate to \" My Tickets \nInventory\" page and select action as \"Ticket \nExchange\" successfully\r\n3. user should be able to complete the transaction \nsuccessfully\r\n4. Expected:-\nUser should be able to get a valid message \nas expected\n\nThis shall be controlled by a text code where \nthe message can be customized, \n\n?A default exchange buyer type has been \nselected for the purpose of completing your \ntransaction successfully.?  \nset the textcode for validation message"
      }
    ],
    "custom_jiras": "60"
  },
  {
    "id": 30716767,
    "title": "Verify the buyer type selected when same buyer type is not available in the target event",
    "section_id": 1686225,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13411",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 24,
    "custom_is_automated": false,
    "custom_refs": "C152277",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the link and login with valid credentials\r\nExpected Result:\r\nUser should be logged into the application \nsuccessfully\r\n2. Navigate to My Tickets Inventory page and select \naction as \"Ticket Exchange\"\r\nExpected Result:\r\nUser should be navigate to \" My Tickets \nInventory\" page and select action as \"Ticket \nExchange\" successfully\r\n3. select active ticket and continue\r\nExpected Result:\r\nuser should be able to complete the transaction \nsuccessfully\r\n4. Verify the buyer type selected when same buyer \ntype is not available in the target event\r\nExpected Result:\r\nExpected:-\nUser should be able to select different Buyer \ntype when same buyer type is not available in the \ntarget event",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link and login with valid credentials\r\n2. Navigate to My Tickets Inventory page and select \naction as \"Ticket Exchange\"\r\n3. select active ticket and continue\r\n4. Verify the buyer type selected when same buyer \ntype is not available in the target event",
        "expected": "1. User should be logged into the application \nsuccessfully\r\n2. User should be navigate to \" My Tickets \nInventory\" page and select action as \"Ticket \nExchange\" successfully\r\n3. user should be able to complete the transaction \nsuccessfully\r\n4. Expected:-\nUser should be able to select different Buyer \ntype when same buyer type is not available in the \ntarget event"
      }
    ],
    "custom_jiras": "60"
  },
  {
    "id": 30716768,
    "title": "Verify the buyer type selected when same buyer type is available in target event",
    "section_id": 1686225,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13411",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 25,
    "custom_is_automated": false,
    "custom_refs": "C152278",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre requisite :-\n \n>Login to Maintenance with valid credentials\n>Set the textcode -  \nTICKET_EXCHANGE_ENABLED (TIEXCEN) =true\n>Patron should have valid (Valid for Ticket \nexchange)  tickets in My Tickets inventory.\r\n2. Login to MyTickets application with valid \ncredentials\r\nExpected Result:\r\nuser should be logged in\r\n3. Navigate to My Ticket s Inventory page\r\nExpected Result:\r\nMy Tickets inventory page should be displayed\r\n4. Select the Ticket Exchange action\r\nExpected Result:\r\nValid tickets should displayed in the inventory \npage\r\n5. Select seats and move forward\r\n6. Select some other event from the available event list\r\nExpected Result:\r\nISM seat map should be displayed\r\n7. Verify the buyer type selected when same buyer \ntype is available in target event\r\nExpected Result:\r\nPatron should be able to select same buyer \ntype from target event and complete the \ntransaction\r\n8. Complete the transaction\r\nExpected Result:\r\nUser should be able to complete the transaction",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre requisite :-\n \n>Login to Maintenance with valid credentials\n>Set the textcode -  \nTICKET_EXCHANGE_ENABLED (TIEXCEN) =true\n>Patron should have valid (Valid for Ticket \nexchange)  tickets in My Tickets inventory.\r\n2. Login to MyTickets application with valid \ncredentials\r\n3. Navigate to My Ticket s Inventory page\r\n4. Select the Ticket Exchange action\r\n5. Select seats and move forward\r\n6. Select some other event from the available event list\r\n7. Verify the buyer type selected when same buyer \ntype is available in target event\r\n8. Complete the transaction",
        "expected": "1. \r\n2. user should be logged in\r\n3. My Tickets inventory page should be displayed\r\n4. Valid tickets should displayed in the inventory \npage\r\n5. \r\n6. ISM seat map should be displayed\r\n7. Patron should be able to select same buyer \ntype from target event and complete the \ntransaction\r\n8. User should be able to complete the transaction"
      }
    ],
    "custom_jiras": "60"
  },
  {
    "id": 30716769,
    "title": "Verify recall action if forward chain exists",
    "section_id": 1686226,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-11833",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C152279",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre-requisite:\r\n\r\n\r\n1.MTD Forward setup should be in place \r\n\r\nRefer the following documents for the detailed PV and PVO Forward Configuration\r\n\r\n\r\n\r\n2.Patron A should forward a ticket to Patron B(Note down the confirmation.id1) and Patron B forwards the same ticket to Patron C(Note down the confirmation.id2).\r\n\r\nRefer Test ID: [C70462] for end-end forward test case.",
    "custom_test_purpose": null,
    "custom_steps": "1. After B has forwarded the ticket to patron C, verify the tickets are displayed in A's, B's and C's inventory page as follows :\n\nIn A's inventory - 'Forwarded : C'\nIn B's inventory -'Forwarded : C'\nIn C's inventory -'Received : A'\r\nExpected Result:\r\nTickets are displayed in A's B's and C's account as follows after B has forwarded the ticket to C\n\nIn A's inventory - 'Forwarded : C'\nIn B's inventory -'Forwarded : C'\nIn C's inventory -'Received : A'\r\n2. Run the query for A's inventory\nselect INVENTORY_ID,SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME,SUPPLIER_ORDER_ID,UPDATE_TIME from pvo.PATRON_INVENTORY_SEAT where inventory_id=\n\n\r\nExpected Result:\r\n1. STATUS_CODE should be \"FT\"\n2. FORWARD_STATUS should be FORWARDED\n3. MARKET_OFFER_STATUS should be VAILD\n4. ELIGIBLE_FOR_FORWARD should be 0\n5. ELIGIBLE_FOR_RETURN_TO_SENDER should be 0\n6. ELIGIBLE_FOR_RECALL should be 1\n7. CUR_FORW_ATT_SUPPLIER_PTRN_ID should be patron C's ID\n8. CUR_FORW_ATT_PATRON_FIRST_NAME should be patron C's first name\n9. CUR_FORW_ATT_PATRON_LAST_NAME should be patron C's last name\n10. FORW_REC_FROM_SUPPLIER_PTRN_ID should be null\n11. FORW_REC_FROM_PTRN_FIRST_NAME should be null\n12. FORW_REC_FROM_PATRON_LAST_NAME should be null\n\r\n3. Run the query for B's inventory\nselect INVENTORY_ID,SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME,SUPPLIER_ORDER_ID,UPDATE_TIME from pvo.PATRON_INVENTORY_SEAT where inventory_id=\n\r\nExpected Result:\r\n1. STATUS_CODE should be \"FT\"\n2. FORWARD_STATUS should be FORWARDED\n3. MARKET_OFFER_STATUS should be VAILD\n4. ELIGIBLE_FOR_FORWARD should be 0\n5. ELIGIBLE_FOR_RETURN_TO_SENDER should be 0\n6. ELIGIBLE_FOR_RECALL should be 1\n7. CUR_FORW_ATT_SUPPLIER_PTRN_ID should be patron C's ID\n8. CUR_FORW_ATT_PATRON_FIRST_NAME should be patron C's first name\n9. CUR_FORW_ATT_PATRON_LAST_NAME should be patron C's last name\n10. FORW_REC_FROM_SUPPLIER_PTRN_ID should be patron A's ID\n11. FORW_REC_FROM_PTRN_FIRST_NAME should be patron A's first name\n12. FORW_REC_FROM_PATRON_LAST_NAME should patron A's last name\nTicket Forward confirmation modal is opened\r\n4. Run the query for C's inventory\nselect INVENTORY_ID,SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME,SUPPLIER_ORDER_ID,UPDATE_TIME from pvo.PATRON_INVENTORY_SEAT where inventory_id=\n\r\nExpected Result:\r\n1. STATUS_CODE should be \"IW\"\n2. FORWARD_STATUS should be RECEIVED\n3. MARKET_OFFER_STATUS should be VAILD\n4. ELIGIBLE_FOR_FORWARD should be 1\n5. ELIGIBLE_FOR_RETURN_TO_SENDER should be 1\n6. ELIGIBLE_FOR_RECALL should be 0\n7. CUR_FORW_ATT_SUPPLIER_PTRN_ID should be null\n8. CUR_FORW_ATT_PATRON_FIRST_NAME should be null\n9. CUR_FORW_ATT_PATRON_LAST_NAME should be null\n10. FORW_REC_FROM_SUPPLIER_PTRN_ID should be patron B's ID\n11. FORW_REC_FROM_PTRN_FIRST_NAME should be patron B's first name\n12. FORW_REC_FROM_PATRON_LAST_NAME should patron B's last name\n\r\n5. Verify Forward History page of patron A\n\n1.Log in to Mytickets account of patron A\n2.Navigate to My History->Forward page\n3.Click on ConfirmationID1 noted in prerequisite2 \n4.Verify Forward details modal is displayed\n5.Verify patron B's name and email address is displayed against Recipient and Email Address columns \n6.Status is shown as 'Forwarded' \n7.Checkbox is available against the ticket to recall the ticket\r\nExpected Result:\r\n1.When confirmationID1 is clicked, Forward details modal is displayed\n2.Patron B's name and email address is displayed against Recipient and Email Address columns\n3.Status is shown as 'Forwarded' \n4.Checkbox is available against the ticket to recall the ticket\n\r\n6. Verify Forward History page of patron B\n\n1. Log in to Mytickets account of patron B\n2. Navigate to My History->Forward page\n3. Click on ConfirmationID2 noted in prerequisite2 \n4. Verify Forward details modal is displayed\n5. Verify patron C's name and email address is displayed against Recipient and Email Address columns \n6. Status is shown as 'Forwarded' \n7. Checkbox is available against the ticket to recall the ticket\n8. Verify the ticket received from A is removed from 'Received Forward Tickets' table\n\r\nExpected Result:\r\n1.When confirmationID2 is clicked, Forward details modal is displayed\n2.Patron C's name and email address is displayed against Recipient and Email Address columns\n3.Status is shown as 'Forwarded' \n4.Checkbox is available against the ticket to recall the ticket\n5.The ticket received from A is removed from 'Received Forward Tickets' table\r\n7. Verify Forward History page of patron C\n\n1. Navigate to My History->Forward page\n2. Verify received ticket is displayed under 'Received Forward Ticket' table\n3. Verify B's name is displayed under Sender column against the ticket\n4. Verify checkbox is displayed against the ticket to return the ticket to sender\r\nExpected Result:\r\n1. Received ticket is displayed under 'Received Forward Ticket' table\n2. B's name is displayed under Sender column against the ticket\n3. Checkbox is displayed against the ticket to return the ticket to sender\r\n8. Recall action :\n1. Log in to patron B's account\n2. Navigate to My History->Forward page\n3. Click on ConfirmationID2 noted in prerequisite2 \n4. Verify Forward details modal is displayed\n5. Verify patron C's name and email address is displayed against Recipient and Email Address columns \n6. Status is shown as 'Forwarded' \n7. Checkbox is available against the ticket to recall the ticket\n8. Click on the checkbox and recall the tickets\n\r\nExpected Result:\r\nTickets are recalled successfully\r\n9. Verify tickets status in patron A's , B's and C's inventory as follows after B has recalled the tickets \nIn A's inventory - 'Forwarded : B'\nIn B's inventory -'Received : A'\nIn C's inventory -'Recalled'\r\nExpected Result:\r\nTicket's status marker should be as follows\nIn A's inventory - 'Forwarded : B'\nIn B's inventory -'Received : A'\nIn C's inventory -'Recalled'\r\n10. Verify Forward History page of patron A\n1.Log in to Mytickets account of patron A\n2.Navigate to My History->Forward page\n3.Click on ConfirmationID1 noted in prerequisite2 \n4.Verify Forward details modal is displayed\n5.Verify patron B's name and email address is displayed against Recipient and Email Address columns \n6.Status is shown as 'Forwarded' \n7.Checkbox is available against the ticket to recall the ticket\r\nExpected Result:\r\n1.When confirmationID1 is clicked, Forward details modal is displayed\n2.Patron B's name and email address is displayed against Recipient and Email Address columns\n3.Status is shown as 'Forwarded' \n4.Checkbox is available against the ticket to recall the ticket\r\n11. Verify Forward History page of patron B\n1. Log in to Mytickets account of patron B\n2. Navigate to My History->Forward page\n3. Click on ConfirmationID2 noted in prerequisite2 \n4. Verify Forward details modal is displayed\n5. Verify patron C's name and email address is displayed against Recipient and Email Address columns \n6. Status is shown as 'Recalled' \n7. No checkbox is available against the ticket to recall the ticket\r\nExpected Result:\r\n1.When confirmationID2 is clicked, Forward details modal is displayed\n2.Patron C's name and email address is displayed against Recipient and Email Address columns\n3.Status is shown as 'Recalled'\n4.No checkbox is available against the ticket to recall the ticket\r\n12. .Verify Forward History in C's My History page\n1. Log in to patron B's account\n2. Navigate to My History->Forward page\n3. Verify recalled ticket is removed from 'Received Forward tickets' table\r\nExpected Result:\r\nRecalled ticket is removed from 'Received Forward tickets' table\r\n13. Verify B received RTSCESUB-RTSCEMSG email and C received RTRNESUB-RTRNEMSG email\r\nExpected Result:\r\nB received RTSCESUB-RTSCEMSG email and C received RTRNESUB-RTRNEMSG email\r\n14. Run the query for A's inventory\nselect INVENTORY_ID,SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME,SUPPLIER_ORDER_ID,UPDATE_TIME from pvo.PATRON_INVENTORY_SEAT where inventory_id=\n\r\nExpected Result:\r\n1. STATUS_CODE should be \"FT\"\n2. FORWARD_STATUS should be FORWARDED\n3. MARKET_OFFER_STATUS should be VAILD\n4. ELIGIBLE_FOR_FORWARD should be 0\n5. ELIGIBLE_FOR_RETURN_TO_SENDER should be 0\n6. ELIGIBLE_FOR_RECALL should be 1\n7. CUR_FORW_ATT_SUPPLIER_PTRN_ID should be patron B's ID\n8. CUR_FORW_ATT_PATRON_FIRST_NAME should be patron B's first name\n9. CUR_FORW_ATT_PATRON_LAST_NAME should be patron B's last name\n10. FORW_REC_FROM_SUPPLIER_PTRN_ID should be null\n11. FORW_REC_FROM_PTRN_FIRST_NAME should be null\n12. FORW_REC_FROM_PATRON_LAST_NAME should be null\n\r\n15. Run the query for Patron A's inventory \nselect SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME from pvo.PATRON_INVENTORY_SEAT where INVENTORY_ID=\r\nExpected Result:\r\n1. STATUS_CODE should be \"IW\"\n2. FORWARD_STATUS should be RECEIVED\n3. MARKET_OFFER_STATUS should be VAILD\n4. ELIGIBLE_FOR_FORWARD should be 1\n5. ELIGIBLE_FOR_RETURN_TO_SENDER should be 1\n6. ELIGIBLE_FOR_RECALL should be 0\n7. CUR_FORW_ATT_SUPPLIER_PTRN_ID should be null\n8. CUR_FORW_ATT_PATRON_FIRST_NAME should be null\n9. CUR_FORW_ATT_PATRON_LAST_NAME should be null\n10. FORW_REC_FROM_SUPPLIER_PTRN_ID should be patron A's ID\n11. FORW_REC_FROM_PTRN_FIRST_NAME should be patron A's first name\n12. FORW_REC_FROM_PATRON_LAST_NAME should patron A's last name\r\n16. Run the query for C's inventory\nselect INVENTORY_ID,SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME,SUPPLIER_ORDER_ID,UPDATE_TIME from pvo.PATRON_INVENTORY_SEAT where inventory_id=\n\r\nExpected Result:\r\n1. STATUS_CODE should be \"IC\"\n2. FORWARD_STATUS should be RECALLED\n3. MARKET_OFFER_STATUS should be VAILD\n4. ELIGIBLE_FOR_FORWARD should be 0\n5. ELIGIBLE_FOR_RETURN_TO_SENDER should be 0\n6. ELIGIBLE_FOR_RECALL should be 0\n7. CUR_FORW_ATT_SUPPLIER_PTRN_ID should be null\n8. CUR_FORW_ATT_PATRON_FIRST_NAME should be null\n9. CUR_FORW_ATT_PATRON_LAST_NAME should be null\n10. FORW_REC_FROM_SUPPLIER_PTRN_ID should be null\n11. FORW_REC_FROM_PTRN_FIRST_NAME should be null\n12. FORW_REC_FROM_PATRON_LAST_NAME should null",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. After B has forwarded the ticket to patron C, verify the tickets are displayed in A's, B's and C's inventory page as follows :\n\nIn A's inventory - 'Forwarded : C'\nIn B's inventory -'Forwarded : C'\nIn C's inventory -'Received : A'\r\n2. Run the query for A's inventory\nselect INVENTORY_ID,SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME,SUPPLIER_ORDER_ID,UPDATE_TIME from pvo.PATRON_INVENTORY_SEAT where inventory_id=\n\n\r\n3. Run the query for B's inventory\nselect INVENTORY_ID,SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME,SUPPLIER_ORDER_ID,UPDATE_TIME from pvo.PATRON_INVENTORY_SEAT where inventory_id=\n\r\n4. Run the query for C's inventory\nselect INVENTORY_ID,SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME,SUPPLIER_ORDER_ID,UPDATE_TIME from pvo.PATRON_INVENTORY_SEAT where inventory_id=\n\r\n5. Verify Forward History page of patron A\n\n1.Log in to Mytickets account of patron A\n2.Navigate to My History->Forward page\n3.Click on ConfirmationID1 noted in prerequisite2 \n4.Verify Forward details modal is displayed\n5.Verify patron B's name and email address is displayed against Recipient and Email Address columns \n6.Status is shown as 'Forwarded' \n7.Checkbox is available against the ticket to recall the ticket\r\n6. Verify Forward History page of patron B\n\n1. Log in to Mytickets account of patron B\n2. Navigate to My History->Forward page\n3. Click on ConfirmationID2 noted in prerequisite2 \n4. Verify Forward details modal is displayed\n5. Verify patron C's name and email address is displayed against Recipient and Email Address columns \n6. Status is shown as 'Forwarded' \n7. Checkbox is available against the ticket to recall the ticket\n8. Verify the ticket received from A is removed from 'Received Forward Tickets' table\n\r\n7. Verify Forward History page of patron C\n\n1. Navigate to My History->Forward page\n2. Verify received ticket is displayed under 'Received Forward Ticket' table\n3. Verify B's name is displayed under Sender column against the ticket\n4. Verify checkbox is displayed against the ticket to return the ticket to sender\r\n8. Recall action :\n1. Log in to patron B's account\n2. Navigate to My History->Forward page\n3. Click on ConfirmationID2 noted in prerequisite2 \n4. Verify Forward details modal is displayed\n5. Verify patron C's name and email address is displayed against Recipient and Email Address columns \n6. Status is shown as 'Forwarded' \n7. Checkbox is available against the ticket to recall the ticket\n8. Click on the checkbox and recall the tickets\n\r\n9. Verify tickets status in patron A's , B's and C's inventory as follows after B has recalled the tickets \nIn A's inventory - 'Forwarded : B'\nIn B's inventory -'Received : A'\nIn C's inventory -'Recalled'\r\n10. Verify Forward History page of patron A\n1.Log in to Mytickets account of patron A\n2.Navigate to My History->Forward page\n3.Click on ConfirmationID1 noted in prerequisite2 \n4.Verify Forward details modal is displayed\n5.Verify patron B's name and email address is displayed against Recipient and Email Address columns \n6.Status is shown as 'Forwarded' \n7.Checkbox is available against the ticket to recall the ticket\r\n11. Verify Forward History page of patron B\n1. Log in to Mytickets account of patron B\n2. Navigate to My History->Forward page\n3. Click on ConfirmationID2 noted in prerequisite2 \n4. Verify Forward details modal is displayed\n5. Verify patron C's name and email address is displayed against Recipient and Email Address columns \n6. Status is shown as 'Recalled' \n7. No checkbox is available against the ticket to recall the ticket\r\n12. .Verify Forward History in C's My History page\n1. Log in to patron B's account\n2. Navigate to My History->Forward page\n3. Verify recalled ticket is removed from 'Received Forward tickets' table\r\n13. Verify B received RTSCESUB-RTSCEMSG email and C received RTRNESUB-RTRNEMSG email\r\n14. Run the query for A's inventory\nselect INVENTORY_ID,SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME,SUPPLIER_ORDER_ID,UPDATE_TIME from pvo.PATRON_INVENTORY_SEAT where inventory_id=\n\r\n15. Run the query for Patron A's inventory \nselect SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME from pvo.PATRON_INVENTORY_SEAT where INVENTORY_ID=\r\n16. Run the query for C's inventory\nselect INVENTORY_ID,SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME,SUPPLIER_ORDER_ID,UPDATE_TIME from pvo.PATRON_INVENTORY_SEAT where inventory_id=",
        "expected": "1. Tickets are displayed in A's B's and C's account as follows after B has forwarded the ticket to C\n\nIn A's inventory - 'Forwarded : C'\nIn B's inventory -'Forwarded : C'\nIn C's inventory -'Received : A'\r\n2. 1. STATUS_CODE should be \"FT\"\n2. FORWARD_STATUS should be FORWARDED\n3. MARKET_OFFER_STATUS should be VAILD\n4. ELIGIBLE_FOR_FORWARD should be 0\n5. ELIGIBLE_FOR_RETURN_TO_SENDER should be 0\n6. ELIGIBLE_FOR_RECALL should be 1\n7. CUR_FORW_ATT_SUPPLIER_PTRN_ID should be patron C's ID\n8. CUR_FORW_ATT_PATRON_FIRST_NAME should be patron C's first name\n9. CUR_FORW_ATT_PATRON_LAST_NAME should be patron C's last name\n10. FORW_REC_FROM_SUPPLIER_PTRN_ID should be null\n11. FORW_REC_FROM_PTRN_FIRST_NAME should be null\n12. FORW_REC_FROM_PATRON_LAST_NAME should be null\n\r\n3. 1. STATUS_CODE should be \"FT\"\n2. FORWARD_STATUS should be FORWARDED\n3. MARKET_OFFER_STATUS should be VAILD\n4. ELIGIBLE_FOR_FORWARD should be 0\n5. ELIGIBLE_FOR_RETURN_TO_SENDER should be 0\n6. ELIGIBLE_FOR_RECALL should be 1\n7. CUR_FORW_ATT_SUPPLIER_PTRN_ID should be patron C's ID\n8. CUR_FORW_ATT_PATRON_FIRST_NAME should be patron C's first name\n9. CUR_FORW_ATT_PATRON_LAST_NAME should be patron C's last name\n10. FORW_REC_FROM_SUPPLIER_PTRN_ID should be patron A's ID\n11. FORW_REC_FROM_PTRN_FIRST_NAME should be patron A's first name\n12. FORW_REC_FROM_PATRON_LAST_NAME should patron A's last name\nTicket Forward confirmation modal is opened\r\n4. 1. STATUS_CODE should be \"IW\"\n2. FORWARD_STATUS should be RECEIVED\n3. MARKET_OFFER_STATUS should be VAILD\n4. ELIGIBLE_FOR_FORWARD should be 1\n5. ELIGIBLE_FOR_RETURN_TO_SENDER should be 1\n6. ELIGIBLE_FOR_RECALL should be 0\n7. CUR_FORW_ATT_SUPPLIER_PTRN_ID should be null\n8. CUR_FORW_ATT_PATRON_FIRST_NAME should be null\n9. CUR_FORW_ATT_PATRON_LAST_NAME should be null\n10. FORW_REC_FROM_SUPPLIER_PTRN_ID should be patron B's ID\n11. FORW_REC_FROM_PTRN_FIRST_NAME should be patron B's first name\n12. FORW_REC_FROM_PATRON_LAST_NAME should patron B's last name\n\r\n5. 1.When confirmationID1 is clicked, Forward details modal is displayed\n2.Patron B's name and email address is displayed against Recipient and Email Address columns\n3.Status is shown as 'Forwarded' \n4.Checkbox is available against the ticket to recall the ticket\n\r\n6. 1.When confirmationID2 is clicked, Forward details modal is displayed\n2.Patron C's name and email address is displayed against Recipient and Email Address columns\n3.Status is shown as 'Forwarded' \n4.Checkbox is available against the ticket to recall the ticket\n5.The ticket received from A is removed from 'Received Forward Tickets' table\r\n7. 1. Received ticket is displayed under 'Received Forward Ticket' table\n2. B's name is displayed under Sender column against the ticket\n3. Checkbox is displayed against the ticket to return the ticket to sender\r\n8. Tickets are recalled successfully\r\n9. Ticket's status marker should be as follows\nIn A's inventory - 'Forwarded : B'\nIn B's inventory -'Received : A'\nIn C's inventory -'Recalled'\r\n10. 1.When confirmationID1 is clicked, Forward details modal is displayed\n2.Patron B's name and email address is displayed against Recipient and Email Address columns\n3.Status is shown as 'Forwarded' \n4.Checkbox is available against the ticket to recall the ticket\r\n11. 1.When confirmationID2 is clicked, Forward details modal is displayed\n2.Patron C's name and email address is displayed against Recipient and Email Address columns\n3.Status is shown as 'Recalled'\n4.No checkbox is available against the ticket to recall the ticket\r\n12. Recalled ticket is removed from 'Received Forward tickets' table\r\n13. B received RTSCESUB-RTSCEMSG email and C received RTRNESUB-RTRNEMSG email\r\n14. 1. STATUS_CODE should be \"FT\"\n2. FORWARD_STATUS should be FORWARDED\n3. MARKET_OFFER_STATUS should be VAILD\n4. ELIGIBLE_FOR_FORWARD should be 0\n5. ELIGIBLE_FOR_RETURN_TO_SENDER should be 0\n6. ELIGIBLE_FOR_RECALL should be 1\n7. CUR_FORW_ATT_SUPPLIER_PTRN_ID should be patron B's ID\n8. CUR_FORW_ATT_PATRON_FIRST_NAME should be patron B's first name\n9. CUR_FORW_ATT_PATRON_LAST_NAME should be patron B's last name\n10. FORW_REC_FROM_SUPPLIER_PTRN_ID should be null\n11. FORW_REC_FROM_PTRN_FIRST_NAME should be null\n12. FORW_REC_FROM_PATRON_LAST_NAME should be null\n\r\n15. 1. STATUS_CODE should be \"IW\"\n2. FORWARD_STATUS should be RECEIVED\n3. MARKET_OFFER_STATUS should be VAILD\n4. ELIGIBLE_FOR_FORWARD should be 1\n5. ELIGIBLE_FOR_RETURN_TO_SENDER should be 1\n6. ELIGIBLE_FOR_RECALL should be 0\n7. CUR_FORW_ATT_SUPPLIER_PTRN_ID should be null\n8. CUR_FORW_ATT_PATRON_FIRST_NAME should be null\n9. CUR_FORW_ATT_PATRON_LAST_NAME should be null\n10. FORW_REC_FROM_SUPPLIER_PTRN_ID should be patron A's ID\n11. FORW_REC_FROM_PTRN_FIRST_NAME should be patron A's first name\n12. FORW_REC_FROM_PATRON_LAST_NAME should patron A's last name\r\n16. 1. STATUS_CODE should be \"IC\"\n2. FORWARD_STATUS should be RECALLED\n3. MARKET_OFFER_STATUS should be VAILD\n4. ELIGIBLE_FOR_FORWARD should be 0\n5. ELIGIBLE_FOR_RETURN_TO_SENDER should be 0\n6. ELIGIBLE_FOR_RECALL should be 0\n7. CUR_FORW_ATT_SUPPLIER_PTRN_ID should be null\n8. CUR_FORW_ATT_PATRON_FIRST_NAME should be null\n9. CUR_FORW_ATT_PATRON_LAST_NAME should be null\n10. FORW_REC_FROM_SUPPLIER_PTRN_ID should be null\n11. FORW_REC_FROM_PTRN_FIRST_NAME should be null\n12. FORW_REC_FROM_PATRON_LAST_NAME should null"
      }
    ],
    "custom_jiras": "58"
  },
  {
    "id": 30716770,
    "title": "Verify RTYESUB RTYEMSG Thanks email received by the sender",
    "section_id": 1686226,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-11833",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C152280",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": "1.MTD Forward setup should be in place\r\n2.A mytixx patron with Forward permission should be available and the patron must have friends in friendlist\r\n3.Recipient of the ticket forward must have an existing mytixx account\r\n4.Recipients email credentials must be noted.",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to Mytickets account of the patron mentioned in Pre-requisite 2\r\nExpected Result:\r\nUser is logged in successfully\r\n2. Navigate to Mytickets Inventory page\r\nExpected Result:\r\nMytickets Inventory page is displayed\r\n3. Select 'Forward Tickets' from Ticket Action drop down\r\nExpected Result:\r\nFriend list is displayed on the Right pane\r\n4. Select seats and assign to a friend\r\nExpected Result:\r\n1.The seats will be highlighted with a color change\n2.The Friend's name should be shown against the tickets with a x (remove) icon\n3.The Tickets# is updated with number of tickets assigned to that friend\r\n5. Click on Continue button\r\nExpected Result:\r\nReview modal is displayed\r\n6. Verify the following details in  in Review modal :\n1. Modal Header -Total # Event(s) | # Seat(s) | # Friend(s)\n2. Note for Friend text area\n3. Table header-Friend name-Email address\n4. Grid columns-Event,Section,Row, Seat and Remove\r\nExpected Result:\r\nThe following details in  in Review modal are shown correctly :\n1. Modal Header -Total # Event(s) | # Seat(s) | # Friend(s)\n2. Note for Friend text area\n3. Table header-Friend name-Email address\n4. Grid columns-Event,Section,Row, Seat and Remove\r\n7. Click on Forward Tickets button\r\nExpected Result:\r\nPatron is shown Confiramtion modal window\r\n8. 1.Logout from Myticket\n2. Log in again to Mytickets account of the patron mentioned in Pre-requisite 2\r\nExpected Result:\r\nUser is logged in successfully\r\n9. Verify status marker against the forwarded tickets is updated to 'Forwarded: '\r\nExpected Result:\r\nThe status marker against the forwarded tickets is updated to 'Forwarded: '\r\n10. Navigate to History->Forward tab\r\nExpected Result:\r\nForward tab is displayed\r\n11. Click on Confirmation ID# of the forward created above and verify the following details in Forward Details modal\n\n1.Confirmation ID\n2.Table header-Event details\n3.Grid columns-Select,Section,Row,Seat,Recipient and Email Address\r\nExpected Result:\r\nThe following details in Forward Details modal are displayed correctly\n\n1.Confirmation ID\n2.Table header-Event details\n3.Grid columns-Select,Section,Row,Seat,Recipient and Email Address\r\n12. Run the query for sender's inventory \nselect SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME from pvo.PATRON_INVENTORY_SEAT where INVENTORY_ID=\r\nExpected Result:\r\n1.      STATUS_CODE should be \"FT\"\n2.      FORWARD_STATUS should be FORWARDED\n3.      MARKET_OFFER_STATUS should be VAILD\n4.      ELIGIBLE_FOR_FORWARD should be 0\n5.      ELIGIBLE_FOR_RETURN_TO_SENDER should be 0\n6.      ELIGIBLE_FOR_RECALL should be 1\n7.      CUR_FORW_ATT_SUPPLIER_PTRN_ID should be recipient's ID\n8.      CUR_FORW_ATT_PATRON_FIRST_NAME should be recipient's first name\n9.      CUR_FORW_ATT_PATRON_LAST_NAME should be recipient's last name\n10.     FORW_REC_FROM_SUPPLIER_PTRN_ID should be null\n11.     FORW_REC_FROM_PTRN_FIRST_NAME should be null\n12.     FORW_REC_FROM_PATRON_LAST_NAME should be null\r\n13. Run the query\nSELECT * FROM pvo.OFFER where order_id=\r\nExpected Result:\r\nSTATUS_CODE should be \"FO\"\r\n14. Run the query\nSELECT * from pvo.OFFER_SEAT where order_id=\r\nExpected Result:\r\n1.STATUS_CODE should be \"FO\"\n2.ATTENDING_PATRON_ID should be the Patron ID of the recipient\r\n15. Verify Forward,Assign delivery and Checkout API request and response in logs\r\n16. Verify FTSEMSUB/FTSEMMSG email is received by the sender\r\nExpected Result:\r\nThe FTSEMSUB/FTSEMMSG email is received by the sender\r\n17. Verify FTREESUB/FTREEMSG email is received by the friend\r\nExpected Result:\r\nThe FTREESUB/FTREEMSG email is received by the friend\r\n18. 1.Access FTREESUB/FTREEMSG email is received by the friend\n2.Click on Send a Thank you message link in the FTREEMSG email\r\nExpected Result:\r\nUser is navigated to Send Message page\r\n19. Verify the UI of Send Message page\r\nExpected Result:\r\n1.Send Message header is displayed\n2.RETHYMIT message(Below are the tickets which are forwarded to you by {0}. To send a thank you message to {1}, enter the message and click on the 'Send Message' button.  An email will be sent to {2} with your message.) is displayed\n3.A grid with event details (Event's public description,date and time) as header and Section,Row and Seat as columns is displayed\n4.Thank You Message field is displayed\n5.Send Thanks button is displayed\r\n20. 1.Enter thank you message in 'Thank You Message' field\n2.Click on Send thanks button\r\nExpected Result:\r\nMessage has been sent successfully' message is displayed in the UI of Send message page itself\r\n21. Verify RTYESUB-RTYEMSG is received by the sender with the message from friend\r\nExpected Result:\r\nRTYESUB-RTYEMSG is received by the sender with the message from friend\n\nSubject : ,  thank you for forwarding me tickets!\nBody :  \nThanks again for forwarding me these tickets:\n\nMessage from : \nSincerely, \r\n22. Login to Mytickets account of the Friend\r\nExpected Result:\r\nUser is logged in successfully\r\n23. Run the query for Recipient's inventory \nselect SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME from pvo.PATRON_INVENTORY_SEAT where INVENTORY_ID=\r\nExpected Result:\r\n1.      STATUS_CODE should be \"IW\"\n2.      FORWARD_STATUS should be RECEIVED \n3.      MARKET_OFFER_STATUS should be VAILD\n4.      ELIGIBLE_FOR_FORWARD should be 1 (depending upon PV permission)\n5.      ELIGIBLE_FOR_RETURN_TO_SENDER should be 1 \n6.      ELIGIBLE_FOR_RECALL should be 0 \n7.      CUR_FORW_ATT_SUPPLIER_PTRN_ID should be null\n8.      CUR_FORW_ATT_PATRON_FIRST_NAME should be null\n9.      CUR_FORW_ATT_PATRON_LAST_NAME should be null\n10.     FORW_REC_FROM_SUPPLIER_PTRN_ID should be sender's ID\n11.     FORW_REC_FROM_PTRN_FIRST_NAME should be sender's First name\n12.     FORW_REC_FROM_PATRON_LAST_NAME should be sender's last name\r\n24. Navigate to Mytickets Inventory page\r\nExpected Result:\r\nMytickets Inventory page is displayed\r\n25. 1.Verify the seats received from the sender are shown in Inventory page\n2.Verify the status marker against the received tickets is 'Received: '\r\nExpected Result:\r\n1. Seats received from the sender are shown in Inventory page\n2. The status marker against the received tickets is 'Received: '\r\n26. 1.Navigate to History->Forward tab\n2.Verify all tickets received from the sender are displayed in 'Recieved Forward Tickets' table\r\nExpected Result:\r\nAll tickets received from sender are displayed in 'Recieved Forward Tickets' table",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to Mytickets account of the patron mentioned in Pre-requisite 2\r\n2. Navigate to Mytickets Inventory page\r\n3. Select 'Forward Tickets' from Ticket Action drop down\r\n4. Select seats and assign to a friend\r\n5. Click on Continue button\r\n6. Verify the following details in  in Review modal :\n1. Modal Header -Total # Event(s) | # Seat(s) | # Friend(s)\n2. Note for Friend text area\n3. Table header-Friend name-Email address\n4. Grid columns-Event,Section,Row, Seat and Remove\r\n7. Click on Forward Tickets button\r\n8. 1.Logout from Myticket\n2. Log in again to Mytickets account of the patron mentioned in Pre-requisite 2\r\n9. Verify status marker against the forwarded tickets is updated to 'Forwarded: '\r\n10. Navigate to History->Forward tab\r\n11. Click on Confirmation ID# of the forward created above and verify the following details in Forward Details modal\n\n1.Confirmation ID\n2.Table header-Event details\n3.Grid columns-Select,Section,Row,Seat,Recipient and Email Address\r\n12. Run the query for sender's inventory \nselect SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME from pvo.PATRON_INVENTORY_SEAT where INVENTORY_ID=\r\n13. Run the query\nSELECT * FROM pvo.OFFER where order_id=\r\n14. Run the query\nSELECT * from pvo.OFFER_SEAT where order_id=\r\n15. Verify Forward,Assign delivery and Checkout API request and response in logs\r\n16. Verify FTSEMSUB/FTSEMMSG email is received by the sender\r\n17. Verify FTREESUB/FTREEMSG email is received by the friend\r\n18. 1.Access FTREESUB/FTREEMSG email is received by the friend\n2.Click on Send a Thank you message link in the FTREEMSG email\r\n19. Verify the UI of Send Message page\r\n20. 1.Enter thank you message in 'Thank You Message' field\n2.Click on Send thanks button\r\n21. Verify RTYESUB-RTYEMSG is received by the sender with the message from friend\r\n22. Login to Mytickets account of the Friend\r\n23. Run the query for Recipient's inventory \nselect SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME from pvo.PATRON_INVENTORY_SEAT where INVENTORY_ID=\r\n24. Navigate to Mytickets Inventory page\r\n25. 1.Verify the seats received from the sender are shown in Inventory page\n2.Verify the status marker against the received tickets is 'Received: '\r\n26. 1.Navigate to History->Forward tab\n2.Verify all tickets received from the sender are displayed in 'Recieved Forward Tickets' table",
        "expected": "1. User is logged in successfully\r\n2. Mytickets Inventory page is displayed\r\n3. Friend list is displayed on the Right pane\r\n4. 1.The seats will be highlighted with a color change\n2.The Friend's name should be shown against the tickets with a x (remove) icon\n3.The Tickets# is updated with number of tickets assigned to that friend\r\n5. Review modal is displayed\r\n6. The following details in  in Review modal are shown correctly :\n1. Modal Header -Total # Event(s) | # Seat(s) | # Friend(s)\n2. Note for Friend text area\n3. Table header-Friend name-Email address\n4. Grid columns-Event,Section,Row, Seat and Remove\r\n7. Patron is shown Confiramtion modal window\r\n8. User is logged in successfully\r\n9. The status marker against the forwarded tickets is updated to 'Forwarded: '\r\n10. Forward tab is displayed\r\n11. The following details in Forward Details modal are displayed correctly\n\n1.Confirmation ID\n2.Table header-Event details\n3.Grid columns-Select,Section,Row,Seat,Recipient and Email Address\r\n12. 1.      STATUS_CODE should be \"FT\"\n2.      FORWARD_STATUS should be FORWARDED\n3.      MARKET_OFFER_STATUS should be VAILD\n4.      ELIGIBLE_FOR_FORWARD should be 0\n5.      ELIGIBLE_FOR_RETURN_TO_SENDER should be 0\n6.      ELIGIBLE_FOR_RECALL should be 1\n7.      CUR_FORW_ATT_SUPPLIER_PTRN_ID should be recipient's ID\n8.      CUR_FORW_ATT_PATRON_FIRST_NAME should be recipient's first name\n9.      CUR_FORW_ATT_PATRON_LAST_NAME should be recipient's last name\n10.     FORW_REC_FROM_SUPPLIER_PTRN_ID should be null\n11.     FORW_REC_FROM_PTRN_FIRST_NAME should be null\n12.     FORW_REC_FROM_PATRON_LAST_NAME should be null\r\n13. STATUS_CODE should be \"FO\"\r\n14. 1.STATUS_CODE should be \"FO\"\n2.ATTENDING_PATRON_ID should be the Patron ID of the recipient\r\n15. \r\n16. The FTSEMSUB/FTSEMMSG email is received by the sender\r\n17. The FTREESUB/FTREEMSG email is received by the friend\r\n18. User is navigated to Send Message page\r\n19. 1.Send Message header is displayed\n2.RETHYMIT message(Below are the tickets which are forwarded to you by {0}. To send a thank you message to {1}, enter the message and click on the 'Send Message' button.  An email will be sent to {2} with your message.) is displayed\n3.A grid with event details (Event's public description,date and time) as header and Section,Row and Seat as columns is displayed\n4.Thank You Message field is displayed\n5.Send Thanks button is displayed\r\n20. Message has been sent successfully' message is displayed in the UI of Send message page itself\r\n21. RTYESUB-RTYEMSG is received by the sender with the message from friend\n\nSubject : ,  thank you for forwarding me tickets!\nBody :  \nThanks again for forwarding me these tickets:\n\nMessage from : \nSincerely, \r\n22. User is logged in successfully\r\n23. 1.      STATUS_CODE should be \"IW\"\n2.      FORWARD_STATUS should be RECEIVED \n3.      MARKET_OFFER_STATUS should be VAILD\n4.      ELIGIBLE_FOR_FORWARD should be 1 (depending upon PV permission)\n5.      ELIGIBLE_FOR_RETURN_TO_SENDER should be 1 \n6.      ELIGIBLE_FOR_RECALL should be 0 \n7.      CUR_FORW_ATT_SUPPLIER_PTRN_ID should be null\n8.      CUR_FORW_ATT_PATRON_FIRST_NAME should be null\n9.      CUR_FORW_ATT_PATRON_LAST_NAME should be null\n10.     FORW_REC_FROM_SUPPLIER_PTRN_ID should be sender's ID\n11.     FORW_REC_FROM_PTRN_FIRST_NAME should be sender's First name\n12.     FORW_REC_FROM_PATRON_LAST_NAME should be sender's last name\r\n24. Mytickets Inventory page is displayed\r\n25. 1. Seats received from the sender are shown in Inventory page\n2. The status marker against the received tickets is 'Received: '\r\n26. All tickets received from sender are displayed in 'Recieved Forward Tickets' table"
      }
    ],
    "custom_jiras": "58"
  },
  {
    "id": 30716771,
    "title": "Verify that on clicking ForwardedTicketRecipientURL in FTREEMSG email MTD login page is displayed without any error message.",
    "section_id": 1686226,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14024",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C152281",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": "Forward setup should be in place",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to MTD account of Financial patron\r\nExpected Result:\r\nUser should logged in to the account successfully\r\n2. Go to Inventory page\nSelect Forward action\nSelect tickets\nAssign to Friend\nClick Continue button\r\nExpected Result:\r\nForward review modal is opened\r\n3. Click Forward tickets button\r\nExpected Result:\r\nForward Confirmation modal is displayed\r\n4. Verify FTREESUB -FTREEMSG  is received by the friend patron\r\nExpected Result:\r\nFTREESUB FTREEMSG email is received by the friend\r\n5. Click ForwardedTicketRecipientURL in the email\r\nExpected Result:\r\nLogin page is displayed and there are no errors displayed on it",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to MTD account of Financial patron\r\n2. Go to Inventory page\nSelect Forward action\nSelect tickets\nAssign to Friend\nClick Continue button\r\n3. Click Forward tickets button\r\n4. Verify FTREESUB -FTREEMSG  is received by the friend patron\r\n5. Click ForwardedTicketRecipientURL in the email",
        "expected": "1. User should logged in to the account successfully\r\n2. Forward review modal is opened\r\n3. Forward Confirmation modal is displayed\r\n4. FTREESUB FTREEMSG email is received by the friend\r\n5. Login page is displayed and there are no errors displayed on it"
      }
    ],
    "custom_jiras": "61"
  },
  {
    "id": 30716772,
    "title": "Verify each recipients can print the tickets using the T@H URL  provided in the Forward recipient confirmation mail when financial patron forwards tickets to multiple recipients",
    "section_id": 1686226,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13067",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C152282",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": "The litteral  is added to the text code FTREEMSG",
    "custom_test_purpose": null,
    "custom_steps": "1. Log in to MTD account of the Financial patron\r\nExpected Result:\r\nUser should logged in to the account successfully\r\n2. Go to Inventory page\nSelect Forward action\nSelect few tickets and assign to three different recipients\nClick on continue\r\nExpected Result:\r\nForward review modal is opened\r\n3. Click Forward tickets button on the review modal\r\nExpected Result:\r\nForward confirmation modal is opened\r\n4. Verify FTREESUB- FTREEMSG email is received by all three recipients\r\nExpected Result:\r\nFTREESUB- FTREEMSG email is received by all three recipients\r\n5. For each recipient patron,\n\nClick on ForwardRecipientTAHURL on the FTREEMSG  email \n\r\nExpected Result:\r\nPrint tickets page is opened with the tickets that corresponds to each recipient\r\n6. Print the tickets\r\nExpected Result:\r\nTickets are printed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Log in to MTD account of the Financial patron\r\n2. Go to Inventory page\nSelect Forward action\nSelect few tickets and assign to three different recipients\nClick on continue\r\n3. Click Forward tickets button on the review modal\r\n4. Verify FTREESUB- FTREEMSG email is received by all three recipients\r\n5. For each recipient patron,\n\nClick on ForwardRecipientTAHURL on the FTREEMSG  email \n\r\n6. Print the tickets",
        "expected": "1. User should logged in to the account successfully\r\n2. Forward review modal is opened\r\n3. Forward confirmation modal is opened\r\n4. FTREESUB- FTREEMSG email is received by all three recipients\r\n5. Print tickets page is opened with the tickets that corresponds to each recipient\r\n6. Tickets are printed"
      }
    ],
    "custom_jiras": "58.1"
  },
  {
    "id": 30716773,
    "title": "Verify Ticket Forward return to sender-End to end testcase",
    "section_id": 1686226,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-11833",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C152283",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set MTFTE to true at Mytickets supplier level\r\n2.Set TTKTSE to false\r\n3.Set MTSSPE to true\r\n4.A Mytickets patron who has Forward permission ON should be available (FOWSELP is true in patron_attributes table)\r\n5.The patron mentioned in Pre-requisite 4 should have some Friends in Friend List\r\n6.Set FTSEMSUB,FTSEMMSG,FTREESUB,FTREEMSG, RRTSESUB,RRTSEMSG,SRTSESUB and SRTSEMSG textcodes. \r\n\r\nPlease refer below document for the literals to be set:",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to Mytickets account of the patron mentioned in Pre-requisite 4\r\nExpected Result:\r\nUser is logged in successfully\r\n2. Navigate to Mytickets Inventory page\r\nExpected Result:\r\nMytickets Inventory page is displayed\r\n3. Select 'Forward Tickets' from Ticket Action drop down\r\nExpected Result:\r\nFriend list is displayed on the Right pane\r\n4. Select seats and assign to a friend\r\nExpected Result:\r\n1.The seats will be highlighted with a color change\n2.The Friend's name should be shown against the tickets with a x (remove) icon\n3.The Tickets# is updated with number of tickets assigned to that friend\r\n5. Click on Continue button\r\nExpected Result:\r\nReview modal is displayed\r\n6. Verify the following details in in Review modal :\n1. Modal Header -Total # Event(s) | # Seat(s) | # Friend(s)\n2. Note for Friend text area\n3. Table header-Friend name-Email address\n4. Grid columns-Event,Section,Row, Seat and Remove\r\nExpected Result:\r\nThe following details in in Review modal are shown correctly :\n1. Modal Header -Total # Event(s) | # Seat(s) | # Friend(s)\n2. Note for Friend text area\n3. Table header-Friend name-Email address\n4. Grid columns-Event,Section,Row, Seat and Remove\r\n7. Click on Forward Tickets button\r\nExpected Result:\r\nPatron is shown Confirmation modal window\n\r\n8. Click Mytickets Inventory button on the modal\r\nExpected Result:\r\nMytickets Inventory page is displayed\r\n9. Verify status marker against the forwarded tickets is updated to 'Forwarded: '\r\nExpected Result:\r\nThe status marker against the forwarded tickets is updated to 'Forwarded: '\n\r\n10. Navigate to History->Forward tab\r\nExpected Result:\r\nForward tab is displayed\r\n11. Click on Confirmation ID# of the forward created above and verify the following details in Forward Details modal\n\n1.Confirmation ID\n2.Table header-Event details\n3.Grid columns-Select,Section,Row,Seat,Recipient and Email Address\r\nExpected Result:\r\nThe following details in Forward Details modal are displayed correctly\n\n1.Confirmation ID\n2.Table header-Event details\n3.Grid columns-Select,Section,Row,Seat,Recipient and Email Address\r\n12. Run the query for sender's inventory \nselect SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME from pvo.PATRON_INVENTORY_SEAT where INVENTORY_ID=\n\r\nExpected Result:\r\n1. STATUS_CODE should be \"FT\"\n2. FORWARD_STATUS should be FORWARDED\n3. MARKET_OFFER_STATUS should be VAILD\n4. ELIGIBLE_FOR_FORWARD should be 0\n5. ELIGIBLE_FOR_RETURN_TO_SENDER should be 0\n6. ELIGIBLE_FOR_RECALL should be 1\n7. CUR_FORW_ATT_SUPPLIER_PTRN_ID should be recipient's ID\n8. CUR_FORW_ATT_PATRON_FIRST_NAME should be recipient's first name\n9. CUR_FORW_ATT_PATRON_LAST_NAME should be recipient's last name\n10. FORW_REC_FROM_SUPPLIER_PTRN_ID should be null\n11. FORW_REC_FROM_PTRN_FIRST_NAME should be null\n12. FORW_REC_FROM_PATRON_LAST_NAME should be null\n\r\n13. Run the query\nSELECT * FROM pvo.OFFER where order_id=\n\r\nExpected Result:\r\nSTATUS_CODE should be \"FO\"\r\n14. Run the query\nSELECT * from pvo.OFFER_SEAT where order_id=\r\nExpected Result:\r\n1.STATUS_CODE should be \"FO\"\n2.ATTENDING_PATRON_ID should be the Patron ID of the recipient\n\r\n15. Verify Forward,Assign delivery and Checkout API request and response in logs\r\n16. Verify FTSEMSUB/FTSEMMSG email is received by the sender\r\nExpected Result:\r\nThe FTSEMSUB/FTSEMMSG email is received by the sender\n\r\n17. Verify FTREESUB/FTREEMSG email is received by the friend\r\nExpected Result:\r\nThe FTREESUB/FTREEMSG email is received by the friend\n\r\n18. Login to Mytickets account of the Friend\r\nExpected Result:\r\nUser is logged in successfully\n\r\n19. Run the query for Recipient's inventory \nselect SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME from pvo.PATRON_INVENTORY_SEAT where INVENTORY_ID=\n\r\nExpected Result:\r\n1. STATUS_CODE should be \"IW\"\n2. FORWARD_STATUS should be RECEIVED \n3. MARKET_OFFER_STATUS should be VAILD\n4. ELIGIBLE_FOR_FORWARD should be 1 (depending upon PV permission)\n5. ELIGIBLE_FOR_RETURN_TO_SENDER should be 1 \n6. ELIGIBLE_FOR_RECALL should be 0 \n7. CUR_FORW_ATT_SUPPLIER_PTRN_ID should be null\n8. CUR_FORW_ATT_PATRON_FIRST_NAME should be null\n9. CUR_FORW_ATT_PATRON_LAST_NAME should be null\n10. FORW_REC_FROM_SUPPLIER_PTRN_ID should be sender's ID\n11. FORW_REC_FROM_PTRN_FIRST_NAME should be sender's First name\n12. FORW_REC_FROM_PATRON_LAST_NAME should be sender's last name\n\r\n20. Navigate to Mytickets Inventory page\r\nExpected Result:\r\nMytickets Inventory page is displayed\r\n21. 1.Verify the seats received from the patron mentioned in Pre-requisite 4 is shown in Inventory page\n2.Verify the status marker against the received tickets is 'Received: '\n\n\r\nExpected Result:\r\n1. Seats received from the patron mentioned in Pre-requisite 4 is shown in Inventory page\n2. The status marker against the received tickets is 'Received: '\n\r\n22. 1.Navigate to History->Forward tab\n2.Verify all tickets received from the patron mentioned in Pre-requisite 4 are displayed in 'Recieved Forward Tickets' table\r\nExpected Result:\r\nAll tickets received from the patron mentioned in Pre-requisite 4 are displayed in 'Recieved Forward Tickets' table\r\n23. Select received tickets and click on Return Tickets button\r\nExpected Result:\r\nReturn to Sender modal window is displayed\r\n24. Enter comments in Return to Sender Modal and click on Return to Sender button\r\nExpected Result:\r\nReturn to Sender Confirmation modal is displayed\r\n25. Navigate to Mytickets Inventory page\r\nExpected Result:\r\nMytickets Inventory page is displayed\r\n26. Verify the status marker against the returned tickets is 'Retruned' and tickets are not active\r\nExpected Result:\r\nThe status marker against the returned tickets is 'Retruned' and tickets are not active\n\r\n27. Log in again to Mytickets account of the patron mentioned in Pre-requisite 4 (Sender)\r\nExpected Result:\r\nUser is logged in successfully\r\n28. Go to Inventory page \nVerify returned tickets are displayed as Active\r\nExpected Result:\r\nReturned tickets are displayed as Active in sender's account\n\r\n29. Navigate to History->Forward tab\r\nExpected Result:\r\nForward tab is displayed\r\n30. Click on Confirmation ID#\r\nExpected Result:\r\nForward Details modal is displayed\n\r\n31. Verify there is no checkbox available to select the tickets to perform recall\n\r\nExpected Result:\r\nThere is no checkbox available to select the tickets to perform recall of returned tickets\n\r\n32. Run the query for sender's inventory\nselect SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME from pvo.PATRON_INVENTORY_SEAT where INVENTORY_ID=\n\r\nExpected Result:\r\n1. STATUS_CODE should be \"IW\"\n2. FORWARD_STATUS should be null\n3. MARKET_OFFER_STATUS should be VAILD\n4. ELIGIBLE_FOR_FORWARD should be 1 \n5. ELIGIBLE_FOR_RETURN_TO_SENDER should be 0\n6. ELIGIBLE_FOR_RECALL should be 0\n7. CUR_FORW_ATT_SUPPLIER_PTRN_ID should be sender's ID\n8. CUR_FORW_ATT_PATRON_FIRST_NAME should be sender's First name\n9. CUR_FORW_ATT_PATRON_LAST_NAME should be sender's last name\n10. FORW_REC_FROM_SUPPLIER_PTRN_ID should be null\n11. FORW_REC_FROM_PTRN_FIRST_NAME should be null\n12. FORW_REC_FROM_PATRON_LAST_NAME should be null\n\r\n33. Run the query for recipinet's inventory\nSELECT SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS, CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME from pvo.PATRON_INVENTORY_SEAT where INVENTORY_ID=\n\r\nExpected Result:\r\n1. STATUS_CODE should be \"IC\"\n2. FORWARD_STATUS should be RETURNED_TO_SENDER\n3. MARKET_OFFER_STATUS should be VAILD\n4. ELIGIBLE_FOR_FORWARD should be 0 \n5. ELIGIBLE_FOR_RETURN_TO_SENDER should be 0\n6. ELIGIBLE_FOR_RECALL should be 0\n7. CUR_FORW_ATT_SUPPLIER_PTRN_ID should be null\n8. CUR_FORW_ATT_PATRON_FIRST_NAME should be null\n9. CUR_FORW_ATT_PATRON_LAST_NAME should be null\n10. FORW_REC_FROM_SUPPLIER_PTRN_ID should be null\n11. FORW_REC_FROM_PTRN_FIRST_NAME should be null\n12. FORW_REC_FROM_PATRON_LAST_NAME should be null\n\r\n34. Verify RRTSESUB/RRTSEMSG email is received by the person doing retrun after return action\n\r\nExpected Result:\r\nRRTSESUB/RRTSEMSG email is received by the person doing retrun after return action\n\r\n35. Verify SRTSESUB/SRTSEMSG email is received by original sender after return action\n\r\nExpected Result:\r\nSRTSESUB/SRTSEMSG email is received by original sender after return action\n\r\n36. Verify Retrun API request and response in logs\n\r\nExpected Result:\r\nReturn API request and response in logs must be verified",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to Mytickets account of the patron mentioned in Pre-requisite 4\r\n2. Navigate to Mytickets Inventory page\r\n3. Select 'Forward Tickets' from Ticket Action drop down\r\n4. Select seats and assign to a friend\r\n5. Click on Continue button\r\n6. Verify the following details in in Review modal :\n1. Modal Header -Total # Event(s) | # Seat(s) | # Friend(s)\n2. Note for Friend text area\n3. Table header-Friend name-Email address\n4. Grid columns-Event,Section,Row, Seat and Remove\r\n7. Click on Forward Tickets button\r\n8. Click Mytickets Inventory button on the modal\r\n9. Verify status marker against the forwarded tickets is updated to 'Forwarded: '\r\n10. Navigate to History->Forward tab\r\n11. Click on Confirmation ID# of the forward created above and verify the following details in Forward Details modal\n\n1.Confirmation ID\n2.Table header-Event details\n3.Grid columns-Select,Section,Row,Seat,Recipient and Email Address\r\n12. Run the query for sender's inventory \nselect SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME from pvo.PATRON_INVENTORY_SEAT where INVENTORY_ID=\n\r\n13. Run the query\nSELECT * FROM pvo.OFFER where order_id=\n\r\n14. Run the query\nSELECT * from pvo.OFFER_SEAT where order_id=\r\n15. Verify Forward,Assign delivery and Checkout API request and response in logs\r\n16. Verify FTSEMSUB/FTSEMMSG email is received by the sender\r\n17. Verify FTREESUB/FTREEMSG email is received by the friend\r\n18. Login to Mytickets account of the Friend\r\n19. Run the query for Recipient's inventory \nselect SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME from pvo.PATRON_INVENTORY_SEAT where INVENTORY_ID=\n\r\n20. Navigate to Mytickets Inventory page\r\n21. 1.Verify the seats received from the patron mentioned in Pre-requisite 4 is shown in Inventory page\n2.Verify the status marker against the received tickets is 'Received: '\n\n\r\n22. 1.Navigate to History->Forward tab\n2.Verify all tickets received from the patron mentioned in Pre-requisite 4 are displayed in 'Recieved Forward Tickets' table\r\n23. Select received tickets and click on Return Tickets button\r\n24. Enter comments in Return to Sender Modal and click on Return to Sender button\r\n25. Navigate to Mytickets Inventory page\r\n26. Verify the status marker against the returned tickets is 'Retruned' and tickets are not active\r\n27. Log in again to Mytickets account of the patron mentioned in Pre-requisite 4 (Sender)\r\n28. Go to Inventory page \nVerify returned tickets are displayed as Active\r\n29. Navigate to History->Forward tab\r\n30. Click on Confirmation ID#\r\n31. Verify there is no checkbox available to select the tickets to perform recall\n\r\n32. Run the query for sender's inventory\nselect SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME from pvo.PATRON_INVENTORY_SEAT where INVENTORY_ID=\n\r\n33. Run the query for recipinet's inventory\nSELECT SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS, CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME from pvo.PATRON_INVENTORY_SEAT where INVENTORY_ID=\n\r\n34. Verify RRTSESUB/RRTSEMSG email is received by the person doing retrun after return action\n\r\n35. Verify SRTSESUB/SRTSEMSG email is received by original sender after return action\n\r\n36. Verify Retrun API request and response in logs",
        "expected": "1. User is logged in successfully\r\n2. Mytickets Inventory page is displayed\r\n3. Friend list is displayed on the Right pane\r\n4. 1.The seats will be highlighted with a color change\n2.The Friend's name should be shown against the tickets with a x (remove) icon\n3.The Tickets# is updated with number of tickets assigned to that friend\r\n5. Review modal is displayed\r\n6. The following details in in Review modal are shown correctly :\n1. Modal Header -Total # Event(s) | # Seat(s) | # Friend(s)\n2. Note for Friend text area\n3. Table header-Friend name-Email address\n4. Grid columns-Event,Section,Row, Seat and Remove\r\n7. Patron is shown Confirmation modal window\n\r\n8. Mytickets Inventory page is displayed\r\n9. The status marker against the forwarded tickets is updated to 'Forwarded: '\n\r\n10. Forward tab is displayed\r\n11. The following details in Forward Details modal are displayed correctly\n\n1.Confirmation ID\n2.Table header-Event details\n3.Grid columns-Select,Section,Row,Seat,Recipient and Email Address\r\n12. 1. STATUS_CODE should be \"FT\"\n2. FORWARD_STATUS should be FORWARDED\n3. MARKET_OFFER_STATUS should be VAILD\n4. ELIGIBLE_FOR_FORWARD should be 0\n5. ELIGIBLE_FOR_RETURN_TO_SENDER should be 0\n6. ELIGIBLE_FOR_RECALL should be 1\n7. CUR_FORW_ATT_SUPPLIER_PTRN_ID should be recipient's ID\n8. CUR_FORW_ATT_PATRON_FIRST_NAME should be recipient's first name\n9. CUR_FORW_ATT_PATRON_LAST_NAME should be recipient's last name\n10. FORW_REC_FROM_SUPPLIER_PTRN_ID should be null\n11. FORW_REC_FROM_PTRN_FIRST_NAME should be null\n12. FORW_REC_FROM_PATRON_LAST_NAME should be null\n\r\n13. STATUS_CODE should be \"FO\"\r\n14. 1.STATUS_CODE should be \"FO\"\n2.ATTENDING_PATRON_ID should be the Patron ID of the recipient\n\r\n15. \r\n16. The FTSEMSUB/FTSEMMSG email is received by the sender\n\r\n17. The FTREESUB/FTREEMSG email is received by the friend\n\r\n18. User is logged in successfully\n\r\n19. 1. STATUS_CODE should be \"IW\"\n2. FORWARD_STATUS should be RECEIVED \n3. MARKET_OFFER_STATUS should be VAILD\n4. ELIGIBLE_FOR_FORWARD should be 1 (depending upon PV permission)\n5. ELIGIBLE_FOR_RETURN_TO_SENDER should be 1 \n6. ELIGIBLE_FOR_RECALL should be 0 \n7. CUR_FORW_ATT_SUPPLIER_PTRN_ID should be null\n8. CUR_FORW_ATT_PATRON_FIRST_NAME should be null\n9. CUR_FORW_ATT_PATRON_LAST_NAME should be null\n10. FORW_REC_FROM_SUPPLIER_PTRN_ID should be sender's ID\n11. FORW_REC_FROM_PTRN_FIRST_NAME should be sender's First name\n12. FORW_REC_FROM_PATRON_LAST_NAME should be sender's last name\n\r\n20. Mytickets Inventory page is displayed\r\n21. 1. Seats received from the patron mentioned in Pre-requisite 4 is shown in Inventory page\n2. The status marker against the received tickets is 'Received: '\n\r\n22. All tickets received from the patron mentioned in Pre-requisite 4 are displayed in 'Recieved Forward Tickets' table\r\n23. Return to Sender modal window is displayed\r\n24. Return to Sender Confirmation modal is displayed\r\n25. Mytickets Inventory page is displayed\r\n26. The status marker against the returned tickets is 'Retruned' and tickets are not active\n\r\n27. User is logged in successfully\r\n28. Returned tickets are displayed as Active in sender's account\n\r\n29. Forward tab is displayed\r\n30. Forward Details modal is displayed\n\r\n31. There is no checkbox available to select the tickets to perform recall of returned tickets\n\r\n32. 1. STATUS_CODE should be \"IW\"\n2. FORWARD_STATUS should be null\n3. MARKET_OFFER_STATUS should be VAILD\n4. ELIGIBLE_FOR_FORWARD should be 1 \n5. ELIGIBLE_FOR_RETURN_TO_SENDER should be 0\n6. ELIGIBLE_FOR_RECALL should be 0\n7. CUR_FORW_ATT_SUPPLIER_PTRN_ID should be sender's ID\n8. CUR_FORW_ATT_PATRON_FIRST_NAME should be sender's First name\n9. CUR_FORW_ATT_PATRON_LAST_NAME should be sender's last name\n10. FORW_REC_FROM_SUPPLIER_PTRN_ID should be null\n11. FORW_REC_FROM_PTRN_FIRST_NAME should be null\n12. FORW_REC_FROM_PATRON_LAST_NAME should be null\n\r\n33. 1. STATUS_CODE should be \"IC\"\n2. FORWARD_STATUS should be RETURNED_TO_SENDER\n3. MARKET_OFFER_STATUS should be VAILD\n4. ELIGIBLE_FOR_FORWARD should be 0 \n5. ELIGIBLE_FOR_RETURN_TO_SENDER should be 0\n6. ELIGIBLE_FOR_RECALL should be 0\n7. CUR_FORW_ATT_SUPPLIER_PTRN_ID should be null\n8. CUR_FORW_ATT_PATRON_FIRST_NAME should be null\n9. CUR_FORW_ATT_PATRON_LAST_NAME should be null\n10. FORW_REC_FROM_SUPPLIER_PTRN_ID should be null\n11. FORW_REC_FROM_PTRN_FIRST_NAME should be null\n12. FORW_REC_FROM_PATRON_LAST_NAME should be null\n\r\n34. RRTSESUB/RRTSEMSG email is received by the person doing retrun after return action\n\r\n35. SRTSESUB/SRTSEMSG email is received by original sender after return action\n\r\n36. Return API request and response in logs must be verified"
      }
    ],
    "custom_jiras": "58"
  },
  {
    "id": 30716774,
    "title": "Verify orginal recipient receives  RTRNESUB-RTRNEMSG email and attending patron receives RTCAPES-RTCAPEM email if recall happens within a forward chain",
    "section_id": 1686226,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-11833",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C152284",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre-requisite:\r\n\r\n1.Set MYTICKETS_FORWARD_TICKETS_ENABLED (MTFTE) textcode as true at supplier level\r\n2. Set RTRNESUB/RTRNEMSG  textcodes\r\n3.A patron should be available who has forward permission\r\n4.Forward chain should exist (Refer Test ID# 24454 to see how to forward tickets )\r\n\r\neg:-  Patron A forwarded 3 tickets to Patron B (note the offer id)\r\nFrom that received tickets, Patron B forwarded 2 tickets to Patron C",
    "custom_test_purpose": null,
    "custom_steps": "1. Log in to MTD account of Patron A\r\nExpected Result:\r\nPatron A is logged in\r\n2. Navigate to History->Forward tab\r\nExpected Result:\r\nForwards history page is displayed\r\n3. 1.Click on the Forward ID# of the offer (offer id created during tickets forwarded to Patron B)\n2.Select the tickets and click Recall button\n\r\nExpected Result:\r\nRecall review modal is opened\r\n4. Click Recall button on the modal\r\nExpected Result:\r\nRecall confirmation modal is opened\r\n5. Click OK on the modal\r\nExpected Result:\r\nThe modal is closed and History page is shown again\r\n6. Verify B receives RTRNESUB-RTRNEMSG email  that contains all 3 seats\r\nExpected Result:\r\nB receives RTRNESUB-RTRNEMSG email  that contains all 3 seats\r\n7. Verify C receives RTCAPES-RTCAPEM email that contains the 2 tickets\r\nExpected Result:\r\nC receives RTCAPES-RTCAPEM email that contains the 2 tickets",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Log in to MTD account of Patron A\r\n2. Navigate to History->Forward tab\r\n3. 1.Click on the Forward ID# of the offer (offer id created during tickets forwarded to Patron B)\n2.Select the tickets and click Recall button\n\r\n4. Click Recall button on the modal\r\n5. Click OK on the modal\r\n6. Verify B receives RTRNESUB-RTRNEMSG email  that contains all 3 seats\r\n7. Verify C receives RTCAPES-RTCAPEM email that contains the 2 tickets",
        "expected": "1. Patron A is logged in\r\n2. Forwards history page is displayed\r\n3. Recall review modal is opened\r\n4. Recall confirmation modal is opened\r\n5. The modal is closed and History page is shown again\r\n6. B receives RTRNESUB-RTRNEMSG email  that contains all 3 seats\r\n7. C receives RTCAPES-RTCAPEM email that contains the 2 tickets"
      }
    ],
    "custom_jiras": "58"
  },
  {
    "id": 30716775,
    "title": "Verify seat grid in SRTSESUB-SRTSEMSG email received by each sender contains only the targeted tickets when recipient returns the tickets received from multiple senders at a time",
    "section_id": 1686226,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-11833",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_refs": "C152285",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set MYTICKETS_FORWARD_TICKETS_ENABLED (MTFTE) textcode as true at supplier level\r\n2. A patron should have tickets in 'Forwards You have received' table that are received from different senders\r\n3. Set SRTSESUB/SRTSEMSG textcodes.",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to Mytickets account of the patron mentioned in pre-requisite 2\r\nExpected Result:\r\nPatron is logged into Mytickets account\r\n2. Navigate to History page\r\nExpected Result:\r\nHistory page is displayed\r\n3. Verify Forwards tab is displayed as the first tab in History page\r\nExpected Result:\r\nForwards tab is displayed as the first tab in History page\r\n4. Select the tickets mentioned in pre-requisite 2 and click on Return button\r\nExpected Result:\r\nReturn confirmation message is displayed\r\n5. Click on Yes on the confirmation modal window\r\nExpected Result:\r\nUser is taken back to History page and status of the tickets in 'Forwards You have Recieved' table is changed to 'Returned'\r\n6. Verify SRTSESUB/SRTSEMSG email received by all senders\r\nExpected Result:\r\nSRTSESUB/SRTSEMSG email is received by each sender\r\n7. Verify seat grid in SRTSESUB/SRTSEMSG email received by each sender\r\nExpected Result:\r\nSeat grid in SRTSESUB/SRTSEMSG email received by each sender contains only the targted tickets",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to Mytickets account of the patron mentioned in pre-requisite 2\r\n2. Navigate to History page\r\n3. Verify Forwards tab is displayed as the first tab in History page\r\n4. Select the tickets mentioned in pre-requisite 2 and click on Return button\r\n5. Click on Yes on the confirmation modal window\r\n6. Verify SRTSESUB/SRTSEMSG email received by all senders\r\n7. Verify seat grid in SRTSESUB/SRTSEMSG email received by each sender",
        "expected": "1. Patron is logged into Mytickets account\r\n2. History page is displayed\r\n3. Forwards tab is displayed as the first tab in History page\r\n4. Return confirmation message is displayed\r\n5. User is taken back to History page and status of the tickets in 'Forwards You have Recieved' table is changed to 'Returned'\r\n6. SRTSESUB/SRTSEMSG email is received by each sender\r\n7. Seat grid in SRTSESUB/SRTSEMSG email received by each sender contains only the targted tickets"
      }
    ],
    "custom_jiras": "58"
  },
  {
    "id": 30716776,
    "title": "Verify RRTSESUB-RRTSEMSG email received by the person doing the return when tickets of same event recevied from different senders are returned at a time",
    "section_id": 1686226,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-11833",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_refs": "C152286",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set MYTICKETS_FORWARD_TICKETS_ENABLED (MTFTE) textcode as true at supplier level\r\n2. A patron should have tickets in 'Forwards You have received' table that belongs to same event and received from different senders\r\n3. Set RRTSESUB / RRTSEMSG textcodes.",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to Mytickets account of the patron mentioned in pre-requisite 2\r\nExpected Result:\r\nPatron is logged into Mytickets account\r\n2. Navigate to History page\r\nExpected Result:\r\nHistory page is displayed\r\n3. Verify Forwards tab is displayed as the first tab in History page\r\nExpected Result:\r\nForwards tab is displayed as the first tab in History page\r\n4. Select the tickets mentioned in pre-requisite 2 and click on Return button\r\nExpected Result:\r\nReturn confirmation message is displayed\r\n5. Click on Yes on the confirmation modal window\r\nExpected Result:\r\nUser is taken back to History page and status of the tickets in 'Forwards You have Recieved' table is changed to 'Returned'\r\n6. Verify RRTSESUB/RRTSEMSG email received by the person doing the return\r\nExpected Result:\r\nRRTSESUB/RRTSEMSG email received by the person doing the return\r\n7. Verify ReturnToSenderConfirmationEmailSeatFormat literal in email\n1. There should be only one seat grid\n2. Event's Name. date and time should be displayed\n3. Sender Name & Email Address should be correctly displayed against each ticket\r\nExpected Result:\r\n1. There should be only one seat grid\n2. Event's Name. date and time should be displayed\n3. Sender Name & Email Address should be correctly displayed against each ticket",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to Mytickets account of the patron mentioned in pre-requisite 2\r\n2. Navigate to History page\r\n3. Verify Forwards tab is displayed as the first tab in History page\r\n4. Select the tickets mentioned in pre-requisite 2 and click on Return button\r\n5. Click on Yes on the confirmation modal window\r\n6. Verify RRTSESUB/RRTSEMSG email received by the person doing the return\r\n7. Verify ReturnToSenderConfirmationEmailSeatFormat literal in email\n1. There should be only one seat grid\n2. Event's Name. date and time should be displayed\n3. Sender Name & Email Address should be correctly displayed against each ticket",
        "expected": "1. Patron is logged into Mytickets account\r\n2. History page is displayed\r\n3. Forwards tab is displayed as the first tab in History page\r\n4. Return confirmation message is displayed\r\n5. User is taken back to History page and status of the tickets in 'Forwards You have Recieved' table is changed to 'Returned'\r\n6. RRTSESUB/RRTSEMSG email received by the person doing the return\r\n7. 1. There should be only one seat grid\n2. Event's Name. date and time should be displayed\n3. Sender Name & Email Address should be correctly displayed against each ticket"
      }
    ],
    "custom_jiras": "58"
  },
  {
    "id": 30716777,
    "title": "Verify seat grid in RTRNESUB-RTRNEMSG  email received by each recipient contains only the targeted tickets when sender recalls the tickets forwarded to multiple recipients at a time",
    "section_id": 1686226,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-11833",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 9,
    "custom_is_automated": false,
    "custom_refs": "C152287",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set MYTICKETS_FORWARD_TICKETS_ENABLED (MTFTE) textcode as true at supplier level\r\n2. A patron should be available who has forward permission\r\n3 Set RTRNESUB / RTRNEMSG  textcodes",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to Mytickets account of the patron mentioned in pre-requisite 2\r\nExpected Result:\r\nPatron is logged into Mytickets account\r\n2. Navigate to Inventory page and select Forward Tickets action\r\nExpected Result:\r\nFriends List is displayed\r\n3. Select tickets and assign each ticket to different friends\r\nExpected Result:\r\n1.Friend's name is displayed against the ticket with a remove icon\n2.#Ticket of friend is updated with the number of tickets assigned to that friend\r\n4. Click on Continue button on Inventory page\r\nExpected Result:\r\nForward Review modal is displayed\r\n5. Click on Forward Tickets button on Review modal\r\nExpected Result:\r\nConfirmation modal window is displayed\r\n6. Click on Mytickets button on Confirmation modal\r\nExpected Result:\r\nInventory page is displayed\r\n7. Verify forwarded tickets' status has been changed to 'Forwarded :\r\nExpected Result:\r\nForwarded tickets' status has been changed to 'Forwarded :\r\n8. Navigate to History->Forward tab\r\nExpected Result:\r\nForwards history page is displayed\r\n9. 1.Click on the Forward ID# of the offer created in step 4\n2.Recall all tickets\r\nExpected Result:\r\nThe recalled tickets become Active in Sender's inventory page\r\n10. Verify RTRNESUB/RTRNEMSG email received by each recipient\r\nExpected Result:\r\nRTRNESUB/RTRNEMSG email is received by each recipient\r\n11. Verify RecipientForwardedSeatFormat literal in email received my each recipient\n1. Seat grid is displayed for all events\n2. Seat grids are displayed in sorted order of event's date and time\n3.Each recipient is shown only the targeted seats; not all recalled tickets in the offer\r\nExpected Result:\r\n1. Seat grid is displayed for all events\n2. Seat grids are displayed in sorted order of event's date and time\n3.Each recipient is shown only the targeted seats; not all recalled tickets in the offer",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to Mytickets account of the patron mentioned in pre-requisite 2\r\n2. Navigate to Inventory page and select Forward Tickets action\r\n3. Select tickets and assign each ticket to different friends\r\n4. Click on Continue button on Inventory page\r\n5. Click on Forward Tickets button on Review modal\r\n6. Click on Mytickets button on Confirmation modal\r\n7. Verify forwarded tickets' status has been changed to 'Forwarded :\r\n8. Navigate to History->Forward tab\r\n9. 1.Click on the Forward ID# of the offer created in step 4\n2.Recall all tickets\r\n10. Verify RTRNESUB/RTRNEMSG email received by each recipient\r\n11. Verify RecipientForwardedSeatFormat literal in email received my each recipient\n1. Seat grid is displayed for all events\n2. Seat grids are displayed in sorted order of event's date and time\n3.Each recipient is shown only the targeted seats; not all recalled tickets in the offer",
        "expected": "1. Patron is logged into Mytickets account\r\n2. Friends List is displayed\r\n3. 1.Friend's name is displayed against the ticket with a remove icon\n2.#Ticket of friend is updated with the number of tickets assigned to that friend\r\n4. Forward Review modal is displayed\r\n5. Confirmation modal window is displayed\r\n6. Inventory page is displayed\r\n7. Forwarded tickets' status has been changed to 'Forwarded :\r\n8. Forwards history page is displayed\r\n9. The recalled tickets become Active in Sender's inventory page\r\n10. RTRNESUB/RTRNEMSG email is received by each recipient\r\n11. 1. Seat grid is displayed for all events\n2. Seat grids are displayed in sorted order of event's date and time\n3.Each recipient is shown only the targeted seats; not all recalled tickets in the offer"
      }
    ],
    "custom_jiras": "58"
  },
  {
    "id": 30716778,
    "title": "Verify Recipient is allowed to return the tickets to sender by clicking Return to sender link in FTREEMSG email received by recipient",
    "section_id": 1686226,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-11833",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 10,
    "custom_is_automated": false,
    "custom_refs": "C152288",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": "1.MTD Forward setup should be in place\r\n2.A mytixx patron with Forward permission should be available and the patron must have friends in friendlist\r\n3.Recipient of the ticket forward must have an existing mytixx account\r\n4.Recipients email credentials must be noted.",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to Mytickets account of the patron mentioned in Pre-requisite 2\r\nExpected Result:\r\nUser is logged in successfully\r\n2. Navigate to Mytickets Inventory page\r\nExpected Result:\r\nMytickets Inventory page is displayed\r\n3. Select 'Forward Tickets' from Ticket Action drop down\r\nExpected Result:\r\nFriend list is displayed on the Right pane\r\n4. Select seats and assign to a friend\r\nExpected Result:\r\n1.The seats will be highlighted with a color change\n2.The Friend's name should be shown against the tickets with a x (remove) icon\n3.The Tickets# is updated with number of tickets assigned to that friend\r\n5. Click on Continue button\r\nExpected Result:\r\nReview modal is displayed\r\n6. Verify the following details in  in Review modal :\n1. Modal Header -Total # Event(s) | # Seat(s) | # Friend(s)\n2. Note for Friend text area\n3. Table header-Friend name-Email address\n4. Grid columns-Event,Section,Row, Seat and Remove\r\nExpected Result:\r\nThe following details in  in Review modal are shown correctly :\n1. Modal Header -Total # Event(s) | # Seat(s) | # Friend(s)\n2. Note for Friend text area\n3. Table header-Friend name-Email address\n4. Grid columns-Event,Section,Row, Seat and Remove\r\n7. Click on Forward Tickets button\r\nExpected Result:\r\nPatron is shown Confiramtion modal window\r\n8. 1.Logout from Myticket\n2. Log in again to Mytickets account of the patron mentioned in Pre-requisite 2\r\nExpected Result:\r\nUser is logged in successfully\r\n9. Verify status marker against the forwarded tickets is updated to 'Forwarded: '\r\nExpected Result:\r\nThe status marker against the forwarded tickets is updated to 'Forwarded: '\r\n10. Navigate to History->Forward tab\r\nExpected Result:\r\nForward tab is displayed\r\n11. Click on Confirmation ID# of the forward created above and verify the following details in Forward Details modal\n\n1.Confirmation ID\n2.Table header-Event details\n3.Grid columns-Select,Section,Row,Seat,Recipient and Email Address\r\nExpected Result:\r\nThe following details in Forward Details modal are displayed correctly\n\n1.Confirmation ID\n2.Table header-Event details\n3.Grid columns-Select,Section,Row,Seat,Recipient and Email Address\r\n12. Run the query for sender's inventory \nselect SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME from pvo.PATRON_INVENTORY_SEAT where INVENTORY_ID=\r\nExpected Result:\r\n1.      STATUS_CODE should be \"FT\"\n2.      FORWARD_STATUS should be FORWARDED\n3.      MARKET_OFFER_STATUS should be VAILD\n4.      ELIGIBLE_FOR_FORWARD should be 0\n5.      ELIGIBLE_FOR_RETURN_TO_SENDER should be 0\n6.      ELIGIBLE_FOR_RECALL should be 1\n7.      CUR_FORW_ATT_SUPPLIER_PTRN_ID should be recipient's ID\n8.      CUR_FORW_ATT_PATRON_FIRST_NAME should be recipient's first name\n9.      CUR_FORW_ATT_PATRON_LAST_NAME should be recipient's last name\n10.     FORW_REC_FROM_SUPPLIER_PTRN_ID should be null\n11.     FORW_REC_FROM_PTRN_FIRST_NAME should be null\n12.     FORW_REC_FROM_PATRON_LAST_NAME should be null\r\n13. Run the query\nSELECT * FROM pvo.OFFER where order_id=\r\nExpected Result:\r\nSTATUS_CODE should be \"FO\"\r\n14. Run the query\nSELECT * from pvo.OFFER_SEAT where order_id=\r\nExpected Result:\r\n1.STATUS_CODE should be \"FO\"\n2.ATTENDING_PATRON_ID should be the Patron ID of the recipient\r\n15. Verify Forward,Assign delivery and Checkout API request and response in logs\r\n16. Verify FTSEMSUB/FTSEMMSG email is received by the sender\r\nExpected Result:\r\nThe FTSEMSUB/FTSEMMSG email is received by the sender\r\n17. Verify FTREESUB/FTREEMSG email is received by the friend\r\nExpected Result:\r\nThe FTREESUB/FTREEMSG email is received by the friend\r\n18. 1.Access FTREESUB/FTREEMSG email is received by the friend\n2. Click on Return to sender link in the FTREEMSG email\r\nExpected Result:\r\nUser is navigated to Return to Sender page (No need to log in to MTD)\r\n19. Verify the UI of Return to Sender page displayed from email\r\nExpected Result:\r\n1.Return to Sender header is displayed\n2.RTSEINTmessage(Below are the tickets you have received from {0}. If you would like to return any of these tickets, select those ticket(s) and click on 'Return to Sender'. You will get a confirmation email upon successful return of the ticket(s). {1} will also be notified that the ticket(s) have been returned by you.) is displayed\n3.A grid with event details (Event's public description,date and time) as header and Select,Section,Row and Seat as columns is displayed\n4.Checkboxes are available against the tickets under Select column in  Return to Sender page \n5.Note to your friend field is displayed\n6.Return to Sender button is displayed\r\n20. 1.Click the checkbox and enter comments in 'Note to your friend' field\n2.Click on Return to Sender button\r\nExpected Result:\r\nTickets have been returned successfully message is shown' in UI of Return to Sender page itself\r\n21. Verify RRTSESUB/RRTSEMSG email is received by the person doing retrun after return action\r\nExpected Result:\r\nRRTSESUB/RRTSEMSG email is received by the person doing retrun after return action\r\n22. Verify SRTSESUB/SRTSEMSG email is received by original sender after return action\r\nExpected Result:\r\nSRTSESUB/SRTSEMSG email is received by original sender after return action\r\n23. Login to Mytickets account of the Friend\r\nExpected Result:\r\nUser is logged in successfully\r\n24. Run the query for Recipient's inventory \nselect SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME from pvo.PATRON_INVENTORY_SEAT where INVENTORY_ID=\r\nExpected Result:\r\n1.      STATUS_CODE should be \"IW\"\n2.      FORWARD_STATUS should be RECEIVED \n3.      MARKET_OFFER_STATUS should be VAILD\n4.      ELIGIBLE_FOR_FORWARD should be 1 (depending upon PV permission)\n5.      ELIGIBLE_FOR_RETURN_TO_SENDER should be 1 \n6.      ELIGIBLE_FOR_RECALL should be 0 \n7.      CUR_FORW_ATT_SUPPLIER_PTRN_ID should be null\n8.      CUR_FORW_ATT_PATRON_FIRST_NAME should be null\n9.      CUR_FORW_ATT_PATRON_LAST_NAME should be null\n10.     FORW_REC_FROM_SUPPLIER_PTRN_ID should be sender's ID\n11.     FORW_REC_FROM_PTRN_FIRST_NAME should be sender's First name\n12.     FORW_REC_FROM_PATRON_LAST_NAME should be sender's last name\r\n25. Navigate to Mytickets Inventory page\r\nExpected Result:\r\nMytickets Inventory page is displayed\r\n26. Verify the status marker against the returned tickets is 'Retruned' and tickets are not active\r\nExpected Result:\r\nThe status marker against the returned tickets is 'Retruned' and tickets are not active\r\n27. Navigate to History->Forward tab\r\nExpected Result:\r\nForward tab is displayed\r\n28. Verify returned tickets are removed from 'Recieved Forward Tickets' table\r\nExpected Result:\r\nReturned tickets are removed from 'Recieved Forward Tickets' table\r\n29. Log in again to Mytickets account of the Sender\r\nExpected Result:\r\nUser is logged in successfully\r\n30. Verify returned tickets are displayed as Active\r\nExpected Result:\r\nReturned tickets are displayed as Active in sender's account\r\n31. Navigate to History->Forward tab\r\nExpected Result:\r\nForward tab is displayed\r\n32. Click on Confirmation ID#\r\nExpected Result:\r\nForward Details modal is displayed\r\n33. Verify there is no checkbox available to select the tickets to perform recall\r\nExpected Result:\r\nThere is no checkbox available to select the tickets to perform recall of returned tickets\r\n34. Run the query for sender's inventory\nselect SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME from pvo.PATRON_INVENTORY_SEAT where INVENTORY_ID=\r\nExpected Result:\r\n1.      STATUS_CODE should be \"IW\"\n2.      FORWARD_STATUS should be null\n3.      MARKET_OFFER_STATUS should be VAILD\n4.      ELIGIBLE_FOR_FORWARD should be 1 \n5.      ELIGIBLE_FOR_RETURN_TO_SENDER should be 0\n6.      ELIGIBLE_FOR_RECALL should be 0\n7.      CUR_FORW_ATT_SUPPLIER_PTRN_ID should be sender's ID\n8.      CUR_FORW_ATT_PATRON_FIRST_NAME should be sender's First name\n9.      CUR_FORW_ATT_PATRON_LAST_NAME should be sender's last name\n10.     FORW_REC_FROM_SUPPLIER_PTRN_ID should be null\n11.     FORW_REC_FROM_PTRN_FIRST_NAME should be null\n12.     FORW_REC_FROM_PATRON_LAST_NAME should be null\r\n35. Run the query for recipinet's inventory\nSELECT SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS, CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME from pvo.PATRON_INVENTORY_SEAT where INVENTORY_ID=\r\nExpected Result:\r\n1.      STATUS_CODE should be \"IC\"\n2.      FORWARD_STATUS should be RETURNED_TO_SENDER\n3.      MARKET_OFFER_STATUS should be VAILD\n4.      ELIGIBLE_FOR_FORWARD should be 0 \n5.      ELIGIBLE_FOR_RETURN_TO_SENDER should be 0\n6.      ELIGIBLE_FOR_RECALL should be 0\n7.      CUR_FORW_ATT_SUPPLIER_PTRN_ID should be null\n8.      CUR_FORW_ATT_PATRON_FIRST_NAME should be null\n9.      CUR_FORW_ATT_PATRON_LAST_NAME should be null\n10.     FORW_REC_FROM_SUPPLIER_PTRN_ID should be null\n11.     FORW_REC_FROM_PTRN_FIRST_NAME should be null\n12.     FORW_REC_FROM_PATRON_LAST_NAME should be null\r\n36. Verify Retrun API request and response in logs\r\nExpected Result:\r\nReturn API request and response in logs must be verified",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to Mytickets account of the patron mentioned in Pre-requisite 2\r\n2. Navigate to Mytickets Inventory page\r\n3. Select 'Forward Tickets' from Ticket Action drop down\r\n4. Select seats and assign to a friend\r\n5. Click on Continue button\r\n6. Verify the following details in  in Review modal :\n1. Modal Header -Total # Event(s) | # Seat(s) | # Friend(s)\n2. Note for Friend text area\n3. Table header-Friend name-Email address\n4. Grid columns-Event,Section,Row, Seat and Remove\r\n7. Click on Forward Tickets button\r\n8. 1.Logout from Myticket\n2. Log in again to Mytickets account of the patron mentioned in Pre-requisite 2\r\n9. Verify status marker against the forwarded tickets is updated to 'Forwarded: '\r\n10. Navigate to History->Forward tab\r\n11. Click on Confirmation ID# of the forward created above and verify the following details in Forward Details modal\n\n1.Confirmation ID\n2.Table header-Event details\n3.Grid columns-Select,Section,Row,Seat,Recipient and Email Address\r\n12. Run the query for sender's inventory \nselect SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME from pvo.PATRON_INVENTORY_SEAT where INVENTORY_ID=\r\n13. Run the query\nSELECT * FROM pvo.OFFER where order_id=\r\n14. Run the query\nSELECT * from pvo.OFFER_SEAT where order_id=\r\n15. Verify Forward,Assign delivery and Checkout API request and response in logs\r\n16. Verify FTSEMSUB/FTSEMMSG email is received by the sender\r\n17. Verify FTREESUB/FTREEMSG email is received by the friend\r\n18. 1.Access FTREESUB/FTREEMSG email is received by the friend\n2. Click on Return to sender link in the FTREEMSG email\r\n19. Verify the UI of Return to Sender page displayed from email\r\n20. 1.Click the checkbox and enter comments in 'Note to your friend' field\n2.Click on Return to Sender button\r\n21. Verify RRTSESUB/RRTSEMSG email is received by the person doing retrun after return action\r\n22. Verify SRTSESUB/SRTSEMSG email is received by original sender after return action\r\n23. Login to Mytickets account of the Friend\r\n24. Run the query for Recipient's inventory \nselect SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME from pvo.PATRON_INVENTORY_SEAT where INVENTORY_ID=\r\n25. Navigate to Mytickets Inventory page\r\n26. Verify the status marker against the returned tickets is 'Retruned' and tickets are not active\r\n27. Navigate to History->Forward tab\r\n28. Verify returned tickets are removed from 'Recieved Forward Tickets' table\r\n29. Log in again to Mytickets account of the Sender\r\n30. Verify returned tickets are displayed as Active\r\n31. Navigate to History->Forward tab\r\n32. Click on Confirmation ID#\r\n33. Verify there is no checkbox available to select the tickets to perform recall\r\n34. Run the query for sender's inventory\nselect SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME from pvo.PATRON_INVENTORY_SEAT where INVENTORY_ID=\r\n35. Run the query for recipinet's inventory\nSELECT SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS, CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME from pvo.PATRON_INVENTORY_SEAT where INVENTORY_ID=\r\n36. Verify Retrun API request and response in logs",
        "expected": "1. User is logged in successfully\r\n2. Mytickets Inventory page is displayed\r\n3. Friend list is displayed on the Right pane\r\n4. 1.The seats will be highlighted with a color change\n2.The Friend's name should be shown against the tickets with a x (remove) icon\n3.The Tickets# is updated with number of tickets assigned to that friend\r\n5. Review modal is displayed\r\n6. The following details in  in Review modal are shown correctly :\n1. Modal Header -Total # Event(s) | # Seat(s) | # Friend(s)\n2. Note for Friend text area\n3. Table header-Friend name-Email address\n4. Grid columns-Event,Section,Row, Seat and Remove\r\n7. Patron is shown Confiramtion modal window\r\n8. User is logged in successfully\r\n9. The status marker against the forwarded tickets is updated to 'Forwarded: '\r\n10. Forward tab is displayed\r\n11. The following details in Forward Details modal are displayed correctly\n\n1.Confirmation ID\n2.Table header-Event details\n3.Grid columns-Select,Section,Row,Seat,Recipient and Email Address\r\n12. 1.      STATUS_CODE should be \"FT\"\n2.      FORWARD_STATUS should be FORWARDED\n3.      MARKET_OFFER_STATUS should be VAILD\n4.      ELIGIBLE_FOR_FORWARD should be 0\n5.      ELIGIBLE_FOR_RETURN_TO_SENDER should be 0\n6.      ELIGIBLE_FOR_RECALL should be 1\n7.      CUR_FORW_ATT_SUPPLIER_PTRN_ID should be recipient's ID\n8.      CUR_FORW_ATT_PATRON_FIRST_NAME should be recipient's first name\n9.      CUR_FORW_ATT_PATRON_LAST_NAME should be recipient's last name\n10.     FORW_REC_FROM_SUPPLIER_PTRN_ID should be null\n11.     FORW_REC_FROM_PTRN_FIRST_NAME should be null\n12.     FORW_REC_FROM_PATRON_LAST_NAME should be null\r\n13. STATUS_CODE should be \"FO\"\r\n14. 1.STATUS_CODE should be \"FO\"\n2.ATTENDING_PATRON_ID should be the Patron ID of the recipient\r\n15. \r\n16. The FTSEMSUB/FTSEMMSG email is received by the sender\r\n17. The FTREESUB/FTREEMSG email is received by the friend\r\n18. User is navigated to Return to Sender page (No need to log in to MTD)\r\n19. 1.Return to Sender header is displayed\n2.RTSEINTmessage(Below are the tickets you have received from {0}. If you would like to return any of these tickets, select those ticket(s) and click on 'Return to Sender'. You will get a confirmation email upon successful return of the ticket(s). {1} will also be notified that the ticket(s) have been returned by you.) is displayed\n3.A grid with event details (Event's public description,date and time) as header and Select,Section,Row and Seat as columns is displayed\n4.Checkboxes are available against the tickets under Select column in  Return to Sender page \n5.Note to your friend field is displayed\n6.Return to Sender button is displayed\r\n20. Tickets have been returned successfully message is shown' in UI of Return to Sender page itself\r\n21. RRTSESUB/RRTSEMSG email is received by the person doing retrun after return action\r\n22. SRTSESUB/SRTSEMSG email is received by original sender after return action\r\n23. User is logged in successfully\r\n24. 1.      STATUS_CODE should be \"IW\"\n2.      FORWARD_STATUS should be RECEIVED \n3.      MARKET_OFFER_STATUS should be VAILD\n4.      ELIGIBLE_FOR_FORWARD should be 1 (depending upon PV permission)\n5.      ELIGIBLE_FOR_RETURN_TO_SENDER should be 1 \n6.      ELIGIBLE_FOR_RECALL should be 0 \n7.      CUR_FORW_ATT_SUPPLIER_PTRN_ID should be null\n8.      CUR_FORW_ATT_PATRON_FIRST_NAME should be null\n9.      CUR_FORW_ATT_PATRON_LAST_NAME should be null\n10.     FORW_REC_FROM_SUPPLIER_PTRN_ID should be sender's ID\n11.     FORW_REC_FROM_PTRN_FIRST_NAME should be sender's First name\n12.     FORW_REC_FROM_PATRON_LAST_NAME should be sender's last name\r\n25. Mytickets Inventory page is displayed\r\n26. The status marker against the returned tickets is 'Retruned' and tickets are not active\r\n27. Forward tab is displayed\r\n28. Returned tickets are removed from 'Recieved Forward Tickets' table\r\n29. User is logged in successfully\r\n30. Returned tickets are displayed as Active in sender's account\r\n31. Forward tab is displayed\r\n32. Forward Details modal is displayed\r\n33. There is no checkbox available to select the tickets to perform recall of returned tickets\r\n34. 1.      STATUS_CODE should be \"IW\"\n2.      FORWARD_STATUS should be null\n3.      MARKET_OFFER_STATUS should be VAILD\n4.      ELIGIBLE_FOR_FORWARD should be 1 \n5.      ELIGIBLE_FOR_RETURN_TO_SENDER should be 0\n6.      ELIGIBLE_FOR_RECALL should be 0\n7.      CUR_FORW_ATT_SUPPLIER_PTRN_ID should be sender's ID\n8.      CUR_FORW_ATT_PATRON_FIRST_NAME should be sender's First name\n9.      CUR_FORW_ATT_PATRON_LAST_NAME should be sender's last name\n10.     FORW_REC_FROM_SUPPLIER_PTRN_ID should be null\n11.     FORW_REC_FROM_PTRN_FIRST_NAME should be null\n12.     FORW_REC_FROM_PATRON_LAST_NAME should be null\r\n35. 1.      STATUS_CODE should be \"IC\"\n2.      FORWARD_STATUS should be RETURNED_TO_SENDER\n3.      MARKET_OFFER_STATUS should be VAILD\n4.      ELIGIBLE_FOR_FORWARD should be 0 \n5.      ELIGIBLE_FOR_RETURN_TO_SENDER should be 0\n6.      ELIGIBLE_FOR_RECALL should be 0\n7.      CUR_FORW_ATT_SUPPLIER_PTRN_ID should be null\n8.      CUR_FORW_ATT_PATRON_FIRST_NAME should be null\n9.      CUR_FORW_ATT_PATRON_LAST_NAME should be null\n10.     FORW_REC_FROM_SUPPLIER_PTRN_ID should be null\n11.     FORW_REC_FROM_PTRN_FIRST_NAME should be null\n12.     FORW_REC_FROM_PATRON_LAST_NAME should be null\r\n36. Return API request and response in logs must be verified"
      }
    ],
    "custom_jiras": "58"
  },
  {
    "id": 30716779,
    "title": "Verify seat grid in FTREESUB FTREEMSG email received by each recipient contains only the targeted tickets when sender forwards tickets to multiple recipients at a time",
    "section_id": 1686226,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-11833",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 11,
    "custom_is_automated": false,
    "custom_refs": "C152289",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": "Forward setup should be in place",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch My Tickets URL and log in as Financial patron\r\nExpected Result:\r\nPatron is logged in\r\n2. Click on My Tickets tab\r\nExpected Result:\r\nMy Tickets inventory page must be displayed\r\n3. 1.Select Forward Tickets action\n2.Select tickets and assign them to different friends\n3.Click Continue button\r\nExpected Result:\r\nReview modal must be displayed\r\n4. Click on Forward Tickets button\r\nExpected Result:\r\nConfirmation window must be displayed\r\n5. Verify all recipients received  FTREESUB/FTREEMSG  email\r\nExpected Result:\r\nAll recipients received  FTREESUB/FTREEMSG  email\r\n6. Open the email for each recipient and verify seat grid in FTREESUB/FTREEMSG email contains only the targeted tickets \r\nExpected Result:\r\nFor each recipient and verify seat grid in FTREESUB/FTREEMSG email contains only the targeted tickets",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch My Tickets URL and log in as Financial patron\r\n2. Click on My Tickets tab\r\n3. 1.Select Forward Tickets action\n2.Select tickets and assign them to different friends\n3.Click Continue button\r\n4. Click on Forward Tickets button\r\n5. Verify all recipients received  FTREESUB/FTREEMSG  email\r\n6. Open the email for each recipient and verify seat grid in FTREESUB/FTREEMSG email contains only the targeted tickets",
        "expected": "1. Patron is logged in\r\n2. My Tickets inventory page must be displayed\r\n3. Review modal must be displayed\r\n4. Confirmation window must be displayed\r\n5. All recipients received  FTREESUB/FTREEMSG  email\r\n6. For each recipient and verify seat grid in FTREESUB/FTREEMSG email contains only the targeted tickets"
      }
    ],
    "custom_jiras": "58"
  },
  {
    "id": 30716780,
    "title": "Verify setting MYTICKETS_FORWARD_TICKETS_ENABLED textcode to false",
    "section_id": 1686226,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-11833",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 12,
    "custom_is_automated": false,
    "custom_refs": "C152290",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": "1. Set MTFTE( MYTICKETS_FORWARD_TICKETS_ENABLED ) to false at supplier level\r\n2. A patron with Forward permission should be available. The patron should have tickets available for forward",
    "custom_test_purpose": null,
    "custom_steps": "1. Pre-requisite should be met\r\n2. Login to Mytickets account of the patron mentioned in pre-requisite 2\r\nExpected Result:\r\nPatron is logged into Mytickets account\r\n3. Navigate to Inventory page.\r\nExpected Result:\r\nInventory page is displayed\r\n4. Verify Forward option is not available in Ticket Action drop down\r\nExpected Result:\r\nForward option is not available in Ticket Action drop down\r\n5. Navigate to History page\r\nExpected Result:\r\nHistory page is displayed\r\n6. Verify Forwards tab is not displayed\r\nExpected Result:\r\nForwards tab is not displayed under History",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. \r\n2. Login to Mytickets account of the patron mentioned in pre-requisite 2\r\n3. Navigate to Inventory page.\r\n4. Verify Forward option is not available in Ticket Action drop down\r\n5. Navigate to History page\r\n6. Verify Forwards tab is not displayed",
        "expected": "1. Pre-requisite should be met\r\n2. Patron is logged into Mytickets account\r\n3. Inventory page is displayed\r\n4. Forward option is not available in Ticket Action drop down\r\n5. History page is displayed\r\n6. Forwards tab is not displayed under History"
      }
    ],
    "custom_jiras": "58"
  },
  {
    "id": 30716781,
    "title": "Verify return to sender action if there is a forward chain exists",
    "section_id": 1686226,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-11833",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 13,
    "custom_is_automated": false,
    "custom_refs": "C152291",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre-requisite:\r\n\r\n1.MTD Forward setup should be in place \r\n2.Patron A should forward a ticket to Patron B(Note down the confirmation.id1) and Patron B forwards the same ticket to Patron C(Note down the confirmation.id2).\r\n\r\nRefer Test ID: [C123374] for end-end forward test case.",
    "custom_test_purpose": null,
    "custom_steps": "1. After B has forwarded the ticket to patron C, verify  the tickets are displayed in A's, B's and C's inventory page as follows :\n\nIn A's inventory - 'Forwarded : C'\nIn B's inventory -'Forwarded : C'\nIn C's inventory -'Received : A'\r\nExpected Result:\r\nTickets are displayed in A's B's and C's account as follows after B has forwarded the ticket to C\nIn A's inventory - 'Forwarded : C'\nIn B's inventory -'Forwarded : C'\nIn C's inventory -'Received : A'\r\n2. Run the query for A's inventory\nselect INVENTORY_ID,SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME,SUPPLIER_ORDER_ID,UPDATE_TIME from pvo.PATRON_INVENTORY_SEAT where inventory_id=\r\nExpected Result:\r\n1.      STATUS_CODE should be \"FT\"\n2.      FORWARD_STATUS should be FORWARDED\n3.      MARKET_OFFER_STATUS should be VAILD\n4.      ELIGIBLE_FOR_FORWARD should be 0\n5.      ELIGIBLE_FOR_RETURN_TO_SENDER should be 0\n6.      ELIGIBLE_FOR_RECALL should be 1\n7.      CUR_FORW_ATT_SUPPLIER_PTRN_ID should be patron C's ID\n8.      CUR_FORW_ATT_PATRON_FIRST_NAME should be patron C's first name\n9.      CUR_FORW_ATT_PATRON_LAST_NAME should be patron C's last name\n10.     FORW_REC_FROM_SUPPLIER_PTRN_ID should be null\n11.     FORW_REC_FROM_PTRN_FIRST_NAME should be null\n12.     FORW_REC_FROM_PATRON_LAST_NAME should be null\r\n3. Run the query for B's inventory\nselect INVENTORY_ID,SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME,SUPPLIER_ORDER_ID,UPDATE_TIME from pvo.PATRON_INVENTORY_SEAT where inventory_id=\r\nExpected Result:\r\n1.      STATUS_CODE should be \"FT\"\n2.      FORWARD_STATUS should be FORWARDED\n3.      MARKET_OFFER_STATUS should be VAILD\n4.      ELIGIBLE_FOR_FORWARD should be 0\n5.      ELIGIBLE_FOR_RETURN_TO_SENDER should be 0\n6.      ELIGIBLE_FOR_RECALL should be 1\n7.      CUR_FORW_ATT_SUPPLIER_PTRN_ID should be patron C's ID\n8.      CUR_FORW_ATT_PATRON_FIRST_NAME should be patron C's first name\n9.      CUR_FORW_ATT_PATRON_LAST_NAME should be patron C's last name\n10.     FORW_REC_FROM_SUPPLIER_PTRN_ID should be patron A's ID\n11.     FORW_REC_FROM_PTRN_FIRST_NAME should be patron A's first name\n12.     FORW_REC_FROM_PATRON_LAST_NAME should patron A's last name\r\n4. Run the query for C's inventory\nselect INVENTORY_ID,SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME,SUPPLIER_ORDER_ID,UPDATE_TIME from pvo.PATRON_INVENTORY_SEAT where inventory_id=\r\nExpected Result:\r\n1.      STATUS_CODE should be \"IW\"\n2.      FORWARD_STATUS should be RECEIVED\n3.      MARKET_OFFER_STATUS should be VAILD\n4.      ELIGIBLE_FOR_FORWARD should be 1\n5.      ELIGIBLE_FOR_RETURN_TO_SENDER should be 1\n6.      ELIGIBLE_FOR_RECALL should be 0\n7.      CUR_FORW_ATT_SUPPLIER_PTRN_ID should be null\n8.      CUR_FORW_ATT_PATRON_FIRST_NAME should be null\n9.      CUR_FORW_ATT_PATRON_LAST_NAME should be null\n10.     FORW_REC_FROM_SUPPLIER_PTRN_ID should be patron B's ID\n11.     FORW_REC_FROM_PTRN_FIRST_NAME should be patron B's first name\n12.     FORW_REC_FROM_PATRON_LAST_NAME should patron B's last name\r\n5. Verify Forward History page of patron A\n1.Log in to Mytickets account of patron A\n2.Navigate to My History->Forward page\n3.Click on ConfirmationID1 noted in prerequisite2 \n4.Verify Forward details modal is displayed\n5.Verify patron B's name and email address is displayed against Recipient and Email Address columns \n6.Status is shown as 'Forwarded' \n7.Checkbox is available against the ticket to recall the ticket\r\nExpected Result:\r\n1.When confirmationID1 is clicked, Forward details modal is displayed\n2.Patron B's name and email address is displayed against Recipient and Email Address columns\n3.Status is shown as 'Forwarded' \n4.Checkbox is available against the ticket to recall the ticket\r\n6. 4. Verify Forward History page of patron B\n1.      Log in to Mytickets account of patron B\n2.      Navigate to My History->Forward page\n3.      Click on ConfirmationID2 noted in prerequisite2 \n4.      Verify Forward details modal is displayed\n5.      Verify patron C's name and email address is displayed against Recipient and Email Address columns \n6.      Status is shown as 'Forwarded' \n7.      Checkbox is available against the ticket to recall the ticket\n8.      Verify the ticket received from A is removed from 'Received Forward Tickets' table\r\nExpected Result:\r\n1.When confirmationID2 is clicked, Forward details modal is displayed\n2.Patron C's name and email address is displayed against Recipient and Email Address columns\n3.Status is shown as 'Forwarded' \n4.Checkbox is available against the ticket to recall the ticket\n5.The ticket received from A is removed from 'Received Forward Tickets' table\r\n7. Verify Forward History page of patron C\n1.      Navigate to My History->Forward page\n2.      Verify received ticket is displayed under 'Received Forward Ticket' table\n3.      Verify B's name is displayed under Sender column against the ticket\n4.      Verify checkbox is displayed against the ticket to return the ticket to sender\r\nExpected Result:\r\n1.      Received ticket is displayed under 'Received Forward Ticket' table\n2.      B's name is displayed under Sender column against the ticket\n3.      Checkbox is displayed against the ticket to return the ticket to sender\r\n8. Retrun to Sender action :\n1.      Log in to patron C's account\n2.      Navigate to My History->Forward page\n3.      Verify received ticket is displayed under 'Received Forward Ticket' table\n4.      Verify B's name is displayed under Sender column against the ticket \n5.      Click on the checkbox to return the tickets and complete return to sender action\r\nExpected Result:\r\nTickets are returned to sender successfully\r\n9. Verify tickets status in patron A's , B's and C's inventory as follows after C has returned the tickets \nIn A's inventory - 'Forwarded : B'\nIn B's inventory -'Received : A'\nIn C's inventory -'Returned'\r\nExpected Result:\r\nTicket's status marker should be as follows\nIn A's inventory - 'Forwarded : B'\nIn B's inventory -'Received : A'\nIn C's inventory -'Returned'\r\n10. Verify Forward History page of patron A\n1.Log in to Mytickets account of patron A\n2.Navigate to My History->Forward page\n3.Click on ConfirmationID1 noted in prerequisite2 \n4.Verify Forward details modal is displayed\n5.Verify patron B's name and email address is displayed against Recipient and Email Address columns \n6.Status is shown as 'Forwarded' \n7.Checkbox is available against the ticket to recall the ticket\r\nExpected Result:\r\n1.When confirmationID1 is clicked, Forward details modal is displayed\n2.Patron B's name and email address is displayed against Recipient and Email Address columns\n3.Status is shown as 'Forwarded' \n4.Checkbox is available against the ticket to recall the ticket\r\n11. Verify Forward History page of patron B\n1.      Log in to Mytickets account of patron B\n2.      Navigate to My History->Forward page\n3.      Click on ConfirmationID2 noted in prerequisite2 \n4.      Verify Forward details modal is displayed\n5.      Verify patron C's name and email address is displayed against Recipient and Email Address columns \n6.      Status is shown as 'Forwarded'\n7.      No checkbox is available against the ticket to recall the ticket\r\nExpected Result:\r\n1.When confirmationID2 is clicked, Forward details modal is displayed\n2.Patron C's name and email address is displayed against Recipient and Email Address columns\n3.Status is shown as 'Forwarded'\n4.No checkbox is available against the ticket to recall the ticket\r\n12. .Verify Forward History in C's My History page\n1.      Log in to patron B's account\n2.      Navigate to My History->Forward page\n3.      Verify returned ticket is removed from 'Received Forward tickets' table\r\nExpected Result:\r\nReturned ticket is removed from 'Received Forward tickets' table\r\n13. Verify B received RTSCESUB-RTSCEMSG email and C received RTRNESUB-RTRNEMSG email\r\nExpected Result:\r\nB received RTSCESUB-RTSCEMSG email and C received RTRNESUB-RTRNEMSG email\r\n14. Run the query for A's inventory\nselect INVENTORY_ID,SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME,SUPPLIER_ORDER_ID,UPDATE_TIME from pvo.PATRON_INVENTORY_SEAT where inventory_id=\r\nExpected Result:\r\n1.      STATUS_CODE should be \"FT\"\n2.      FORWARD_STATUS should be FORWARDED\n3.      MARKET_OFFER_STATUS should be VAILD\n4.      ELIGIBLE_FOR_FORWARD should be 0\n5.      ELIGIBLE_FOR_RETURN_TO_SENDER should be 0\n6.      ELIGIBLE_FOR_RECALL should be 1\n7.      CUR_FORW_ATT_SUPPLIER_PTRN_ID should be patron B's ID\n8.      CUR_FORW_ATT_PATRON_FIRST_NAME should be patron B's first name\n9.      CUR_FORW_ATT_PATRON_LAST_NAME should be patron B's last name\n10.     FORW_REC_FROM_SUPPLIER_PTRN_ID should be null\n11.     FORW_REC_FROM_PTRN_FIRST_NAME should be null\n12.     FORW_REC_FROM_PATRON_LAST_NAME should be null\r\n15. Run the query for B's inventory\nselect INVENTORY_ID,SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME,SUPPLIER_ORDER_ID,UPDATE_TIME from pvo.PATRON_INVENTORY_SEAT where inventory_id=\r\nExpected Result:\r\n1.      STATUS_CODE should be \"IW\"\n2.      FORWARD_STATUS should be RECEIVED\n3.      MARKET_OFFER_STATUS should be VAILD\n4.      ELIGIBLE_FOR_FORWARD should be 1\n5.      ELIGIBLE_FOR_RETURN_TO_SENDER should be 1\n6.      ELIGIBLE_FOR_RECALL should be 0\n7.      CUR_FORW_ATT_SUPPLIER_PTRN_ID should be null\n8.      CUR_FORW_ATT_PATRON_FIRST_NAME should be null\n9.      CUR_FORW_ATT_PATRON_LAST_NAME should be null\n10.     FORW_REC_FROM_SUPPLIER_PTRN_ID should be patron A's ID\n11.     FORW_REC_FROM_PTRN_FIRST_NAME should be patron A's first name\n12.     FORW_REC_FROM_PATRON_LAST_NAME should patron A's last name\r\n16. Run the query for C's inventory\nselect INVENTORY_ID,SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME,SUPPLIER_ORDER_ID,UPDATE_TIME from pvo.PATRON_INVENTORY_SEAT where inventory_id=\r\nExpected Result:\r\n1.      STATUS_CODE should be \"IC\"\n2.      FORWARD_STATUS should be RETURNED\n3.      MARKET_OFFER_STATUS should be VAILD\n4.      ELIGIBLE_FOR_FORWARD should be 0\n5.      ELIGIBLE_FOR_RETURN_TO_SENDER should be 0\n6.      ELIGIBLE_FOR_RECALL should be 0\n7.      CUR_FORW_ATT_SUPPLIER_PTRN_ID should be null\n8.      CUR_FORW_ATT_PATRON_FIRST_NAME should be null\n9.      CUR_FORW_ATT_PATRON_LAST_NAME should be null\n10.     FORW_REC_FROM_SUPPLIER_PTRN_ID should be null\n11.     FORW_REC_FROM_PTRN_FIRST_NAME should be null\n12.     FORW_REC_FROM_PATRON_LAST_NAME should null",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. After B has forwarded the ticket to patron C, verify  the tickets are displayed in A's, B's and C's inventory page as follows :\n\nIn A's inventory - 'Forwarded : C'\nIn B's inventory -'Forwarded : C'\nIn C's inventory -'Received : A'\r\n2. Run the query for A's inventory\nselect INVENTORY_ID,SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME,SUPPLIER_ORDER_ID,UPDATE_TIME from pvo.PATRON_INVENTORY_SEAT where inventory_id=\r\n3. Run the query for B's inventory\nselect INVENTORY_ID,SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME,SUPPLIER_ORDER_ID,UPDATE_TIME from pvo.PATRON_INVENTORY_SEAT where inventory_id=\r\n4. Run the query for C's inventory\nselect INVENTORY_ID,SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME,SUPPLIER_ORDER_ID,UPDATE_TIME from pvo.PATRON_INVENTORY_SEAT where inventory_id=\r\n5. Verify Forward History page of patron A\n1.Log in to Mytickets account of patron A\n2.Navigate to My History->Forward page\n3.Click on ConfirmationID1 noted in prerequisite2 \n4.Verify Forward details modal is displayed\n5.Verify patron B's name and email address is displayed against Recipient and Email Address columns \n6.Status is shown as 'Forwarded' \n7.Checkbox is available against the ticket to recall the ticket\r\n6. 4. Verify Forward History page of patron B\n1.      Log in to Mytickets account of patron B\n2.      Navigate to My History->Forward page\n3.      Click on ConfirmationID2 noted in prerequisite2 \n4.      Verify Forward details modal is displayed\n5.      Verify patron C's name and email address is displayed against Recipient and Email Address columns \n6.      Status is shown as 'Forwarded' \n7.      Checkbox is available against the ticket to recall the ticket\n8.      Verify the ticket received from A is removed from 'Received Forward Tickets' table\r\n7. Verify Forward History page of patron C\n1.      Navigate to My History->Forward page\n2.      Verify received ticket is displayed under 'Received Forward Ticket' table\n3.      Verify B's name is displayed under Sender column against the ticket\n4.      Verify checkbox is displayed against the ticket to return the ticket to sender\r\n8. Retrun to Sender action :\n1.      Log in to patron C's account\n2.      Navigate to My History->Forward page\n3.      Verify received ticket is displayed under 'Received Forward Ticket' table\n4.      Verify B's name is displayed under Sender column against the ticket \n5.      Click on the checkbox to return the tickets and complete return to sender action\r\n9. Verify tickets status in patron A's , B's and C's inventory as follows after C has returned the tickets \nIn A's inventory - 'Forwarded : B'\nIn B's inventory -'Received : A'\nIn C's inventory -'Returned'\r\n10. Verify Forward History page of patron A\n1.Log in to Mytickets account of patron A\n2.Navigate to My History->Forward page\n3.Click on ConfirmationID1 noted in prerequisite2 \n4.Verify Forward details modal is displayed\n5.Verify patron B's name and email address is displayed against Recipient and Email Address columns \n6.Status is shown as 'Forwarded' \n7.Checkbox is available against the ticket to recall the ticket\r\n11. Verify Forward History page of patron B\n1.      Log in to Mytickets account of patron B\n2.      Navigate to My History->Forward page\n3.      Click on ConfirmationID2 noted in prerequisite2 \n4.      Verify Forward details modal is displayed\n5.      Verify patron C's name and email address is displayed against Recipient and Email Address columns \n6.      Status is shown as 'Forwarded'\n7.      No checkbox is available against the ticket to recall the ticket\r\n12. .Verify Forward History in C's My History page\n1.      Log in to patron B's account\n2.      Navigate to My History->Forward page\n3.      Verify returned ticket is removed from 'Received Forward tickets' table\r\n13. Verify B received RTSCESUB-RTSCEMSG email and C received RTRNESUB-RTRNEMSG email\r\n14. Run the query for A's inventory\nselect INVENTORY_ID,SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME,SUPPLIER_ORDER_ID,UPDATE_TIME from pvo.PATRON_INVENTORY_SEAT where inventory_id=\r\n15. Run the query for B's inventory\nselect INVENTORY_ID,SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME,SUPPLIER_ORDER_ID,UPDATE_TIME from pvo.PATRON_INVENTORY_SEAT where inventory_id=\r\n16. Run the query for C's inventory\nselect INVENTORY_ID,SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME,SUPPLIER_ORDER_ID,UPDATE_TIME from pvo.PATRON_INVENTORY_SEAT where inventory_id=",
        "expected": "1. Tickets are displayed in A's B's and C's account as follows after B has forwarded the ticket to C\nIn A's inventory - 'Forwarded : C'\nIn B's inventory -'Forwarded : C'\nIn C's inventory -'Received : A'\r\n2. 1.      STATUS_CODE should be \"FT\"\n2.      FORWARD_STATUS should be FORWARDED\n3.      MARKET_OFFER_STATUS should be VAILD\n4.      ELIGIBLE_FOR_FORWARD should be 0\n5.      ELIGIBLE_FOR_RETURN_TO_SENDER should be 0\n6.      ELIGIBLE_FOR_RECALL should be 1\n7.      CUR_FORW_ATT_SUPPLIER_PTRN_ID should be patron C's ID\n8.      CUR_FORW_ATT_PATRON_FIRST_NAME should be patron C's first name\n9.      CUR_FORW_ATT_PATRON_LAST_NAME should be patron C's last name\n10.     FORW_REC_FROM_SUPPLIER_PTRN_ID should be null\n11.     FORW_REC_FROM_PTRN_FIRST_NAME should be null\n12.     FORW_REC_FROM_PATRON_LAST_NAME should be null\r\n3. 1.      STATUS_CODE should be \"FT\"\n2.      FORWARD_STATUS should be FORWARDED\n3.      MARKET_OFFER_STATUS should be VAILD\n4.      ELIGIBLE_FOR_FORWARD should be 0\n5.      ELIGIBLE_FOR_RETURN_TO_SENDER should be 0\n6.      ELIGIBLE_FOR_RECALL should be 1\n7.      CUR_FORW_ATT_SUPPLIER_PTRN_ID should be patron C's ID\n8.      CUR_FORW_ATT_PATRON_FIRST_NAME should be patron C's first name\n9.      CUR_FORW_ATT_PATRON_LAST_NAME should be patron C's last name\n10.     FORW_REC_FROM_SUPPLIER_PTRN_ID should be patron A's ID\n11.     FORW_REC_FROM_PTRN_FIRST_NAME should be patron A's first name\n12.     FORW_REC_FROM_PATRON_LAST_NAME should patron A's last name\r\n4. 1.      STATUS_CODE should be \"IW\"\n2.      FORWARD_STATUS should be RECEIVED\n3.      MARKET_OFFER_STATUS should be VAILD\n4.      ELIGIBLE_FOR_FORWARD should be 1\n5.      ELIGIBLE_FOR_RETURN_TO_SENDER should be 1\n6.      ELIGIBLE_FOR_RECALL should be 0\n7.      CUR_FORW_ATT_SUPPLIER_PTRN_ID should be null\n8.      CUR_FORW_ATT_PATRON_FIRST_NAME should be null\n9.      CUR_FORW_ATT_PATRON_LAST_NAME should be null\n10.     FORW_REC_FROM_SUPPLIER_PTRN_ID should be patron B's ID\n11.     FORW_REC_FROM_PTRN_FIRST_NAME should be patron B's first name\n12.     FORW_REC_FROM_PATRON_LAST_NAME should patron B's last name\r\n5. 1.When confirmationID1 is clicked, Forward details modal is displayed\n2.Patron B's name and email address is displayed against Recipient and Email Address columns\n3.Status is shown as 'Forwarded' \n4.Checkbox is available against the ticket to recall the ticket\r\n6. 1.When confirmationID2 is clicked, Forward details modal is displayed\n2.Patron C's name and email address is displayed against Recipient and Email Address columns\n3.Status is shown as 'Forwarded' \n4.Checkbox is available against the ticket to recall the ticket\n5.The ticket received from A is removed from 'Received Forward Tickets' table\r\n7. 1.      Received ticket is displayed under 'Received Forward Ticket' table\n2.      B's name is displayed under Sender column against the ticket\n3.      Checkbox is displayed against the ticket to return the ticket to sender\r\n8. Tickets are returned to sender successfully\r\n9. Ticket's status marker should be as follows\nIn A's inventory - 'Forwarded : B'\nIn B's inventory -'Received : A'\nIn C's inventory -'Returned'\r\n10. 1.When confirmationID1 is clicked, Forward details modal is displayed\n2.Patron B's name and email address is displayed against Recipient and Email Address columns\n3.Status is shown as 'Forwarded' \n4.Checkbox is available against the ticket to recall the ticket\r\n11. 1.When confirmationID2 is clicked, Forward details modal is displayed\n2.Patron C's name and email address is displayed against Recipient and Email Address columns\n3.Status is shown as 'Forwarded'\n4.No checkbox is available against the ticket to recall the ticket\r\n12. Returned ticket is removed from 'Received Forward tickets' table\r\n13. B received RTSCESUB-RTSCEMSG email and C received RTRNESUB-RTRNEMSG email\r\n14. 1.      STATUS_CODE should be \"FT\"\n2.      FORWARD_STATUS should be FORWARDED\n3.      MARKET_OFFER_STATUS should be VAILD\n4.      ELIGIBLE_FOR_FORWARD should be 0\n5.      ELIGIBLE_FOR_RETURN_TO_SENDER should be 0\n6.      ELIGIBLE_FOR_RECALL should be 1\n7.      CUR_FORW_ATT_SUPPLIER_PTRN_ID should be patron B's ID\n8.      CUR_FORW_ATT_PATRON_FIRST_NAME should be patron B's first name\n9.      CUR_FORW_ATT_PATRON_LAST_NAME should be patron B's last name\n10.     FORW_REC_FROM_SUPPLIER_PTRN_ID should be null\n11.     FORW_REC_FROM_PTRN_FIRST_NAME should be null\n12.     FORW_REC_FROM_PATRON_LAST_NAME should be null\r\n15. 1.      STATUS_CODE should be \"IW\"\n2.      FORWARD_STATUS should be RECEIVED\n3.      MARKET_OFFER_STATUS should be VAILD\n4.      ELIGIBLE_FOR_FORWARD should be 1\n5.      ELIGIBLE_FOR_RETURN_TO_SENDER should be 1\n6.      ELIGIBLE_FOR_RECALL should be 0\n7.      CUR_FORW_ATT_SUPPLIER_PTRN_ID should be null\n8.      CUR_FORW_ATT_PATRON_FIRST_NAME should be null\n9.      CUR_FORW_ATT_PATRON_LAST_NAME should be null\n10.     FORW_REC_FROM_SUPPLIER_PTRN_ID should be patron A's ID\n11.     FORW_REC_FROM_PTRN_FIRST_NAME should be patron A's first name\n12.     FORW_REC_FROM_PATRON_LAST_NAME should patron A's last name\r\n16. 1.      STATUS_CODE should be \"IC\"\n2.      FORWARD_STATUS should be RETURNED\n3.      MARKET_OFFER_STATUS should be VAILD\n4.      ELIGIBLE_FOR_FORWARD should be 0\n5.      ELIGIBLE_FOR_RETURN_TO_SENDER should be 0\n6.      ELIGIBLE_FOR_RECALL should be 0\n7.      CUR_FORW_ATT_SUPPLIER_PTRN_ID should be null\n8.      CUR_FORW_ATT_PATRON_FIRST_NAME should be null\n9.      CUR_FORW_ATT_PATRON_LAST_NAME should be null\n10.     FORW_REC_FROM_SUPPLIER_PTRN_ID should be null\n11.     FORW_REC_FROM_PTRN_FIRST_NAME should be null\n12.     FORW_REC_FROM_PATRON_LAST_NAME should null"
      }
    ],
    "custom_jiras": "58"
  },
  {
    "id": 30716782,
    "title": "Verify multiple event icon is not displayed in Forwards You Have Sent table if the offer has tickets from main and assoicated parking event",
    "section_id": 1686226,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-11833",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 14,
    "custom_is_automated": false,
    "custom_refs": "C152292",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Forward Tickets option must be enabled\r\n2.Set MYTICKETS_FORWARD_TICKETS_ENABLED (MTFTE) textcode as true at supplier level\r\n3.A patron who has forward tickets permission should be available\r\n4.Ticket forwarding(Refer Test ID: []): must be done for an event which have main and associated parking event and note down the Confirmation.Id for the forward done.",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch My Tickets URL\r\nExpected Result:\r\nMy Tickets Login page must be displayed\r\n2. Enter the username and password of financial patron who has done the Forward mentioned in prerquisite\r\nExpected Result:\r\nHome page for My Tickets must be displayed\r\n3. Click on History button on the top of inventory page displayed and then select Forwards tab\r\nExpected Result:\r\nHistory page must be displayed with forwards tab a the default and left most tab\r\n4. Click on the confirmation number link noted in prerequiste 4 and verify Event Date column in Forwards You Have Sent table\r\nExpected Result:\r\nMultiple event icon must not be displayed in Forwards You Have Sent table if the offer has tickets from main and assoicated parking event",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch My Tickets URL\r\n2. Enter the username and password of financial patron who has done the Forward mentioned in prerquisite\r\n3. Click on History button on the top of inventory page displayed and then select Forwards tab\r\n4. Click on the confirmation number link noted in prerequiste 4 and verify Event Date column in Forwards You Have Sent table",
        "expected": "1. My Tickets Login page must be displayed\r\n2. Home page for My Tickets must be displayed\r\n3. History page must be displayed with forwards tab a the default and left most tab\r\n4. Multiple event icon must not be displayed in Forwards You Have Sent table if the offer has tickets from main and assoicated parking event"
      }
    ],
    "custom_jiras": "58"
  },
  {
    "id": 30716783,
    "title": "Verify forwarding tickets to a recipient who does not have a MyTickets account associated with the email address",
    "section_id": 1686226,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-11833",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 15,
    "custom_is_automated": false,
    "custom_refs": "C152293",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set MYTICKETS_FORWARD_TICKETS_ENABLED (MTFTE) textcode as true at supplier level\r\n2.A patron who has forward tickets permission should be available\r\n3.The patron should have tickets that are enabled for Forward action in inventory\r\n4.The patron should have a friend in Friend List who has no MTD account associated with his email ID",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to Mytickets account of the patron mentioned in pre-requisite 2\r\nExpected Result:\r\nPatron is logged into Mytickets account\r\n2. Navigate to Inventory page and select Forward Tickets action\r\nExpected Result:\r\nFriends List is displayed\r\n3. Select tickets available for forward action and assign them to the friend mentioed in Pre-requsite 4\r\nExpected Result:\r\n1.Friend's name is displayed against the ticket with a remove icon\n2.#Ticket of friend is updated with the number of tickets assigned to that friend\r\n4. Click on Continue button on Inventory page\r\nExpected Result:\r\nForward Review modal is displayed\r\n5. Click on Forward Tickets button on Review modal\r\nExpected Result:\r\nConfirmation modal window is displayed\r\n6. Click on Mytickets button on Confirmation modal\r\nExpected Result:\r\nInventory page is displayed\r\n7. Verify forwarded tickets' status has been changed to 'Forwarded :\r\nExpected Result:\r\nForwarded tickets' status has been changed to 'Forwarded :\r\n8. Logout from Mytickets\r\nExpected Result:\r\nPatron is logged out\r\n9. Verify the recipient has received FTREESUB/FTREEMSG email\r\nExpected Result:\r\nThe recipient has received FTREESUB/FTREEMSG email\r\n10. Click on the Mytickets link in the email\r\nExpected Result:\r\nPatron is directed to a MyTickets account creation form\r\n11. Verify the email address is pre-populated in the form with the email address to which the forwarded ticket is sent\r\nExpected Result:\r\nThe email address is pre-populated in the form with the email address to which the forwarded ticket is sent\r\n12. Complete account creation\r\nExpected Result:\r\nAccount has been successfully created\r\n13. Verify, upon creating the account, the ticket is automatically be added to the patron's inventory\r\nExpected Result:\r\nUpon creating the account, the ticket is automatically be added to the patron's inventory\r\n14. Verify the ticket is marked as a forwarded ticket and have a status marker indicating the name of the forwarding (sending) patron\r\nExpected Result:\r\nThe ticket is marked as a forwarded ticket and have a status marker indicating the name of the forwarding (sending) patron",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to Mytickets account of the patron mentioned in pre-requisite 2\r\n2. Navigate to Inventory page and select Forward Tickets action\r\n3. Select tickets available for forward action and assign them to the friend mentioed in Pre-requsite 4\r\n4. Click on Continue button on Inventory page\r\n5. Click on Forward Tickets button on Review modal\r\n6. Click on Mytickets button on Confirmation modal\r\n7. Verify forwarded tickets' status has been changed to 'Forwarded :\r\n8. Logout from Mytickets\r\n9. Verify the recipient has received FTREESUB/FTREEMSG email\r\n10. Click on the Mytickets link in the email\r\n11. Verify the email address is pre-populated in the form with the email address to which the forwarded ticket is sent\r\n12. Complete account creation\r\n13. Verify, upon creating the account, the ticket is automatically be added to the patron's inventory\r\n14. Verify the ticket is marked as a forwarded ticket and have a status marker indicating the name of the forwarding (sending) patron",
        "expected": "1. Patron is logged into Mytickets account\r\n2. Friends List is displayed\r\n3. 1.Friend's name is displayed against the ticket with a remove icon\n2.#Ticket of friend is updated with the number of tickets assigned to that friend\r\n4. Forward Review modal is displayed\r\n5. Confirmation modal window is displayed\r\n6. Inventory page is displayed\r\n7. Forwarded tickets' status has been changed to 'Forwarded :\r\n8. Patron is logged out\r\n9. The recipient has received FTREESUB/FTREEMSG email\r\n10. Patron is directed to a MyTickets account creation form\r\n11. The email address is pre-populated in the form with the email address to which the forwarded ticket is sent\r\n12. Account has been successfully created\r\n13. Upon creating the account, the ticket is automatically be added to the patron's inventory\r\n14. The ticket is marked as a forwarded ticket and have a status marker indicating the name of the forwarding (sending) patron"
      }
    ],
    "custom_jiras": "58"
  },
  {
    "id": 30716784,
    "title": "Verify Ticket Forwarding- End to end testcase",
    "section_id": 1686226,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-11833",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 16,
    "custom_is_automated": false,
    "custom_refs": "C152294",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set MTFTE to true at Mytickets supplier level\r\n2.Set TTKTSE to false\r\n3.Set MTSSPE to true\r\n4.A Mytickets patron who has Forward permission ON should be available (FOWSELP is true in patron_attributes table)\r\n5.The patron mentioned in Pre-requisite 4 should have some Friends in Friend List and tickets in inventory\r\n6.Set FTSEMSUB,FTSEMMSG,FTREESUB and FTREEMSG textcodes. Please refer below document for the literals to be set:",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to Mytickets account of the patron mentioned in Pre-requisite 4\r\nExpected Result:\r\nUser is logged in successfully\r\n2. Navigate to Mytickets Inventory page\r\nExpected Result:\r\nMytickets Inventory page is displayed\r\n3. Select 'Forward Tickets' from Ticket Action drop down\r\nExpected Result:\r\nFriend list is displayed on the Right pane\r\n4. Select seats and assign to a friend\r\nExpected Result:\r\n1.The seats will be highlighted with a color change\n2.The Friend's name should be shown against the tickets with a x (remove) icon\n3.The Tickets# is updated with number of tickets assigned to that friend\r\n5. Click on Continue button\r\nExpected Result:\r\nReview modal is displayed\r\n6. Verify the following details in  in Review modal :\n1. Modal Header -Total # Event(s) | # Seat(s) | # Friend(s)\n2. Note for Friend text area\n3. Table header-Friend name-Email address\n4. Grid columns-Event,Section,Row, Seat and Remove\r\nExpected Result:\r\nThe following details in  in Review modal are shown correctly :\n1. Modal Header -Total # Event(s) | # Seat(s) | # Friend(s)\n2. Note for Friend text area\n3. Table header-Friend name-Email address\n4. Grid columns-Event,Section,Row, Seat and Remove\r\n7. Click on Forward Tickets button\r\nExpected Result:\r\nPatron is shown Confirmation modal window with Confirmation Id\r\n8. 1.Logout from Myticket\n2. Log in again to Mytickets account of the patron mentioned in Pre-requisite 4\r\nExpected Result:\r\nUser is logged in successfully\r\n9. Verify status marker against the forwarded tickets is updated to 'Forwarded: '\r\nExpected Result:\r\nThe status marker against the forwarded tickets is updated to 'Forwarded: '\r\n10. Navigate to History->Forward tab\r\nExpected Result:\r\nForward tab is displayed\r\n11. Click on Confirmation ID# of the forward created above in Forwards Sent table and verify the following details \n\n1.Confirmation ID\n2.Table header-Event details\n3.Grid columns-Select,Section,Row,Seat,Recipient and Email Address\r\nExpected Result:\r\nThe following details in Forward Details modal are displayed correctly\n\n1.Confirmation ID\n2.Table header-Event details\n3.Grid columns-Select,Section,Row,Seat,Recipient and Email Address\r\n12. Run the query for sender's inventory \nselect SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME from pvo.PATRON_INVENTORY_SEAT where INVENTORY_ID=\r\nExpected Result:\r\n1.      STATUS_CODE should be \"FT\"\n2.      FORWARD_STATUS should be FORWARDED\n3.      MARKET_OFFER_STATUS should be VAILD\n4.      ELIGIBLE_FOR_FORWARD should be 0\n5.      ELIGIBLE_FOR_RETURN_TO_SENDER should be 0\n6.      ELIGIBLE_FOR_RECALL should be 1\n7.      CUR_FORW_ATT_SUPPLIER_PTRN_ID should be recipient's ID\n8.      CUR_FORW_ATT_PATRON_FIRST_NAME should be recipient's first name\n9.      CUR_FORW_ATT_PATRON_LAST_NAME should be recipient's last name\n10.     FORW_REC_FROM_SUPPLIER_PTRN_ID should be null\n11.     FORW_REC_FROM_PTRN_FIRST_NAME should be null\n12.     FORW_REC_FROM_PATRON_LAST_NAME should be null\r\n13. Run the query\nSELECT * FROM pvo.OFFER where order_id=\r\nExpected Result:\r\nSTATUS_CODE should be \"FO\"\r\n14. Run the query\nSELECT * from pvo.OFFER_SEAT where order_id=\r\nExpected Result:\r\n1.STATUS_CODE should be \"FO\"\n2.ATTENDING_PATRON_ID should be the Patron ID of the recipient\r\n15. Verify Forward,Assign delivery and Checkout API request and response in logs\r\nExpected Result:\r\nForward,Assign delivery and Checkout API request and response in logs must be verified\r\n16. Login to Mytickets account of the Friend\r\nExpected Result:\r\nUser is logged in successfully\r\n17. Run the query for Recipient's inventory \nselect SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME from pvo.PATRON_INVENTORY_SEAT where INVENTORY_ID=\r\nExpected Result:\r\n1.      STATUS_CODE should be \"IW\"\n2.      FORWARD_STATUS should be RECEIVED \n3.      MARKET_OFFER_STATUS should be VAILD\n4.      ELIGIBLE_FOR_FORWARD should be 1 (depending upon PV permission)\n5.      ELIGIBLE_FOR_RETURN_TO_SENDER should be 1 \n6.      ELIGIBLE_FOR_RECALL should be 0 \n7.      CUR_FORW_ATT_SUPPLIER_PTRN_ID should be null\n8.      CUR_FORW_ATT_PATRON_FIRST_NAME should be null\n9.      CUR_FORW_ATT_PATRON_LAST_NAME should be null\n10.     FORW_REC_FROM_SUPPLIER_PTRN_ID should be sender's ID\n11.     FORW_REC_FROM_PTRN_FIRST_NAME should be sender's First name\n12.     FORW_REC_FROM_PATRON_LAST_NAME should be sender's last name\r\n18. Navigate to Mytickets Inventory page\r\nExpected Result:\r\nMytickets Inventory page is displayed\r\n19. 1.Verify the seats received from the patron mentioned in Pre-requisite 4 is shown in Inventory page\n2.Verify the status marker against the received tickets is 'Received: '\r\nExpected Result:\r\n1. Seats received from the patron mentioned in Pre-requisite 4 is shown in Inventory page\n2. The status marker against the received tickets is 'Received: '\r\n20. 1.Navigate to History->Forward tab\n2.Verify all tickets received from the patron mentioned in Pre-requisite 4 are displayed in 'Recieved Forward Tickets' table\r\nExpected Result:\r\nAll tickets received from the patron mentioned in Pre-requisite 4 are displayed in 'Recieved Forward Tickets' table\r\n21. Verify FTSEMSUB/FTSEMMSG email is received by the sender\r\nExpected Result:\r\nThe FTSEMSUB/FTSEMMSG email is received by the sender\r\n22. Verify FTREESUB/FTREEMSG email is received by the friend\r\nExpected Result:\r\nThe FTREESUB/FTREEMSG email  received by the friend must contain My Tickets Inventory link,Return to Sender link and Send thanks link\r\n23. Login to PV as PVO-PV user\r\nExpected Result:\r\nUser is logged in\r\n24. Navigate to Ticketing->Ticket services and search using order ID\r\nExpected Result:\r\nTransaction details are displayed\r\n25. Click on Order ID and select Deliveris tab\r\nExpected Result:\r\nDelivery details are shown\r\n26. Click on Delivery ID of the Forward transaction\r\nExpected Result:\r\nDelivery details are shown\r\n27. Verify Attending patron details are updated with recipient details\r\nExpected Result:\r\nAttending patron details are updated with recipient details",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to Mytickets account of the patron mentioned in Pre-requisite 4\r\n2. Navigate to Mytickets Inventory page\r\n3. Select 'Forward Tickets' from Ticket Action drop down\r\n4. Select seats and assign to a friend\r\n5. Click on Continue button\r\n6. Verify the following details in  in Review modal :\n1. Modal Header -Total # Event(s) | # Seat(s) | # Friend(s)\n2. Note for Friend text area\n3. Table header-Friend name-Email address\n4. Grid columns-Event,Section,Row, Seat and Remove\r\n7. Click on Forward Tickets button\r\n8. 1.Logout from Myticket\n2. Log in again to Mytickets account of the patron mentioned in Pre-requisite 4\r\n9. Verify status marker against the forwarded tickets is updated to 'Forwarded: '\r\n10. Navigate to History->Forward tab\r\n11. Click on Confirmation ID# of the forward created above in Forwards Sent table and verify the following details \n\n1.Confirmation ID\n2.Table header-Event details\n3.Grid columns-Select,Section,Row,Seat,Recipient and Email Address\r\n12. Run the query for sender's inventory \nselect SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME from pvo.PATRON_INVENTORY_SEAT where INVENTORY_ID=\r\n13. Run the query\nSELECT * FROM pvo.OFFER where order_id=\r\n14. Run the query\nSELECT * from pvo.OFFER_SEAT where order_id=\r\n15. Verify Forward,Assign delivery and Checkout API request and response in logs\r\n16. Login to Mytickets account of the Friend\r\n17. Run the query for Recipient's inventory \nselect SECTION_,ROW_,SEAT_,STATUS_CODE,FORWARD_STATUS,MARKET_OFFER_STATUS,ELIGIBLE_FOR_FORWARD,ELIGIBLE_FOR_RETURN_TO_SENDER,ELIGIBLE_FOR_RECALL,CUR_FORW_ATT_SUPPLIER_PTRN_ID,CUR_FORW_ATT_PATRON_FIRST_NAME,CUR_FORW_ATT_PATRON_LAST_NAME,FORW_REC_FROM_SUPPLIER_PTRN_ID,FORW_REC_FROM_PTRN_FIRST_NAME,FORW_REC_FROM_PATRON_LAST_NAME from pvo.PATRON_INVENTORY_SEAT where INVENTORY_ID=\r\n18. Navigate to Mytickets Inventory page\r\n19. 1.Verify the seats received from the patron mentioned in Pre-requisite 4 is shown in Inventory page\n2.Verify the status marker against the received tickets is 'Received: '\r\n20. 1.Navigate to History->Forward tab\n2.Verify all tickets received from the patron mentioned in Pre-requisite 4 are displayed in 'Recieved Forward Tickets' table\r\n21. Verify FTSEMSUB/FTSEMMSG email is received by the sender\r\n22. Verify FTREESUB/FTREEMSG email is received by the friend\r\n23. Login to PV as PVO-PV user\r\n24. Navigate to Ticketing->Ticket services and search using order ID\r\n25. Click on Order ID and select Deliveris tab\r\n26. Click on Delivery ID of the Forward transaction\r\n27. Verify Attending patron details are updated with recipient details",
        "expected": "1. User is logged in successfully\r\n2. Mytickets Inventory page is displayed\r\n3. Friend list is displayed on the Right pane\r\n4. 1.The seats will be highlighted with a color change\n2.The Friend's name should be shown against the tickets with a x (remove) icon\n3.The Tickets# is updated with number of tickets assigned to that friend\r\n5. Review modal is displayed\r\n6. The following details in  in Review modal are shown correctly :\n1. Modal Header -Total # Event(s) | # Seat(s) | # Friend(s)\n2. Note for Friend text area\n3. Table header-Friend name-Email address\n4. Grid columns-Event,Section,Row, Seat and Remove\r\n7. Patron is shown Confirmation modal window with Confirmation Id\r\n8. User is logged in successfully\r\n9. The status marker against the forwarded tickets is updated to 'Forwarded: '\r\n10. Forward tab is displayed\r\n11. The following details in Forward Details modal are displayed correctly\n\n1.Confirmation ID\n2.Table header-Event details\n3.Grid columns-Select,Section,Row,Seat,Recipient and Email Address\r\n12. 1.      STATUS_CODE should be \"FT\"\n2.      FORWARD_STATUS should be FORWARDED\n3.      MARKET_OFFER_STATUS should be VAILD\n4.      ELIGIBLE_FOR_FORWARD should be 0\n5.      ELIGIBLE_FOR_RETURN_TO_SENDER should be 0\n6.      ELIGIBLE_FOR_RECALL should be 1\n7.      CUR_FORW_ATT_SUPPLIER_PTRN_ID should be recipient's ID\n8.      CUR_FORW_ATT_PATRON_FIRST_NAME should be recipient's first name\n9.      CUR_FORW_ATT_PATRON_LAST_NAME should be recipient's last name\n10.     FORW_REC_FROM_SUPPLIER_PTRN_ID should be null\n11.     FORW_REC_FROM_PTRN_FIRST_NAME should be null\n12.     FORW_REC_FROM_PATRON_LAST_NAME should be null\r\n13. STATUS_CODE should be \"FO\"\r\n14. 1.STATUS_CODE should be \"FO\"\n2.ATTENDING_PATRON_ID should be the Patron ID of the recipient\r\n15. Forward,Assign delivery and Checkout API request and response in logs must be verified\r\n16. User is logged in successfully\r\n17. 1.      STATUS_CODE should be \"IW\"\n2.      FORWARD_STATUS should be RECEIVED \n3.      MARKET_OFFER_STATUS should be VAILD\n4.      ELIGIBLE_FOR_FORWARD should be 1 (depending upon PV permission)\n5.      ELIGIBLE_FOR_RETURN_TO_SENDER should be 1 \n6.      ELIGIBLE_FOR_RECALL should be 0 \n7.      CUR_FORW_ATT_SUPPLIER_PTRN_ID should be null\n8.      CUR_FORW_ATT_PATRON_FIRST_NAME should be null\n9.      CUR_FORW_ATT_PATRON_LAST_NAME should be null\n10.     FORW_REC_FROM_SUPPLIER_PTRN_ID should be sender's ID\n11.     FORW_REC_FROM_PTRN_FIRST_NAME should be sender's First name\n12.     FORW_REC_FROM_PATRON_LAST_NAME should be sender's last name\r\n18. Mytickets Inventory page is displayed\r\n19. 1. Seats received from the patron mentioned in Pre-requisite 4 is shown in Inventory page\n2. The status marker against the received tickets is 'Received: '\r\n20. All tickets received from the patron mentioned in Pre-requisite 4 are displayed in 'Recieved Forward Tickets' table\r\n21. The FTSEMSUB/FTSEMMSG email is received by the sender\r\n22. The FTREESUB/FTREEMSG email  received by the friend must contain My Tickets Inventory link,Return to Sender link and Send thanks link\r\n23. User is logged in\r\n24. Transaction details are displayed\r\n25. Delivery details are shown\r\n26. Delivery details are shown\r\n27. Attending patron details are updated with recipient details"
      }
    ],
    "custom_jiras": "58"
  },
  {
    "id": 30716785,
    "title": "Verify list of events are sort by event date in Online Promotion Details page",
    "section_id": 1686227,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PVO-15836",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C152295",
    "custom_pvo_pvodc_category": 10,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Launch the OMP url\r\n2.Login as valid user\r\n3.Select the supplier.Click on Continue\r\n4.Click on New to create a new Promotion in Online Promotions tab\r\n5.Select Promotion Type as Public.\r\n6.Enter Valid Code ,Description ,Display panel and Display Order\r\n7.Select Promotion Details as Click Action since we have multiple Events Associated to a Promotion\r\n8.Enter Valid details for Public Title,Sub title and Description\r\n9.Enter Valid Onsale ,offsale,visible on date,Visible off dates\r\n10.Select Organisation and click on Show Events.\r\n11.Associate the Events to the Promotion and select sub agency\r\n12.Click on Save and Promotion has created successfully.",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch My Tickets and login. \r\nExpected Result:\r\nUser is successfully logged in to My Tickets\r\n2. Go to Special offers tab and verify that the promotion created in the prerequisite is appearing in the page with a 'Details' button under Action.\r\nExpected Result:\r\nThe promotion created is appearing as expected.\r\n3. Click on the Details button\r\nExpected Result:\r\nUser is navigated to Promotion Details page \r\n4. Verify the events appearing in the Promotion Details page are sorted in ascending order based on the event date\r\nExpected Result:\r\nEvents are sorted in ascending order based on the vent date as expected.\r\n5. Launch PV and go to TICKETING SETUP->EVENT ADMINISTRATION.\nSearch for any event associated.\r\nExpected Result:\r\nThe corresponding event is appearing in edit mode\r\n6. Change the Start Date/Time of the event from PV and perf accept the event in maintenance site.\r\nExpected Result:\r\nPatron should be able to change the date and perf accept should be successful.\r\n7. Repeat Steps 1->3\r\nExpected Result:\r\nUser is navigated to Promotion Details page \r\n8. Check the display order of the events in the promotion\r\nExpected Result:\r\nThe changed event should be moved with respect to the event date.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch My Tickets and login. \r\n2. Go to Special offers tab and verify that the promotion created in the prerequisite is appearing in the page with a 'Details' button under Action.\r\n3. Click on the Details button\r\n4. Verify the events appearing in the Promotion Details page are sorted in ascending order based on the event date\r\n5. Launch PV and go to TICKETING SETUP->EVENT ADMINISTRATION.\nSearch for any event associated.\r\n6. Change the Start Date/Time of the event from PV and perf accept the event in maintenance site.\r\n7. Repeat Steps 1->3\r\n8. Check the display order of the events in the promotion",
        "expected": "1. User is successfully logged in to My Tickets\r\n2. The promotion created is appearing as expected.\r\n3. User is navigated to Promotion Details page \r\n4. Events are sorted in ascending order based on the vent date as expected.\r\n5. The corresponding event is appearing in edit mode\r\n6. Patron should be able to change the date and perf accept should be successful.\r\n7. User is navigated to Promotion Details page \r\n8. The changed event should be moved with respect to the event date."
      }
    ],
    "custom_jiras": null
  },
  {
    "id": 30716786,
    "title": "Verify in Targeted Online Promotion flow if the target event is not onsale, it is selectable on the calendar page after navigating from one month to the next",
    "section_id": 1686227,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13524",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C152296",
    "custom_pvo_pvodc_category": 12,
    "custom_pvocodelines": null,
    "custom_preconds": "Have an event with future Onsale date\r\nHave a patron with trait id\r\nSetup a Targeted online promotion in OMP following the steps from 1-15 in [C87581]",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MYTIXX link\r\nExpected Result:\r\nUser should be launched the link successfully\r\n2. Log in to Mytixx account of patron who has trait associated with\r\nExpected Result:\r\nUser should logged into the application\r\n3. Go to Special Offers page\nSelect the target promotion to purchase\r\nExpected Result:\r\nUser is navigated to availability page\r\n4. Select the tickets from Availability page and navigate till shopping cart\r\nExpected Result:\r\nUser should be navigated till shopping cart page successfully\r\n5. Click on Schedule link\r\nExpected Result:\r\nSchedule page is launched with current month and the event is onsale and selectable\r\n6. Go to next month\r\nExpected Result:\r\nSchedule page is launched with next month and the event is onsale and selectable\r\n7. Go back to current month \r\nExpected Result:\r\nSchedule page is launched with current month and the event is onsale and selectable\r\n8. Continue from shopping cart and reach Delivery  page\r\nExpected Result:\r\nUser should navigated to delivery page successfully\r\n9. Repeat steps 5-7\r\nExpected Result:\r\nThe targeted event should be onsale and selectable\r\n10. Select the delivery method and navigate to payment page\n\r\nExpected Result:\r\nUser is navigated to Payment page\r\n11. Repeat steps 5-7\r\nExpected Result:\r\nThe targeted event should be onsale and selectable\r\n12. Complete the transaction\n\nVerify the transaction details are getting updated in the DB and LOG\r\nExpected Result:\r\nTransaction details should be updated in the DB and LOG",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MYTIXX link\r\n2. Log in to Mytixx account of patron who has trait associated with\r\n3. Go to Special Offers page\nSelect the target promotion to purchase\r\n4. Select the tickets from Availability page and navigate till shopping cart\r\n5. Click on Schedule link\r\n6. Go to next month\r\n7. Go back to current month \r\n8. Continue from shopping cart and reach Delivery  page\r\n9. Repeat steps 5-7\r\n10. Select the delivery method and navigate to payment page\n\r\n11. Repeat steps 5-7\r\n12. Complete the transaction\n\nVerify the transaction details are getting updated in the DB and LOG",
        "expected": "1. User should be launched the link successfully\r\n2. User should logged into the application\r\n3. User is navigated to availability page\r\n4. User should be navigated till shopping cart page successfully\r\n5. Schedule page is launched with current month and the event is onsale and selectable\r\n6. Schedule page is launched with next month and the event is onsale and selectable\r\n7. Schedule page is launched with current month and the event is onsale and selectable\r\n8. User should navigated to delivery page successfully\r\n9. The targeted event should be onsale and selectable\r\n10. User is navigated to Payment page\r\n11. The targeted event should be onsale and selectable\r\n12. Transaction details should be updated in the DB and LOG"
      }
    ],
    "custom_jiras": "56.1"
  },
  {
    "id": 30716787,
    "title": "Verify the buyer display in ISM  when DNETCE is set as true  and USE_EXCLUSIVE_TRAITS_IN_ISM  flashvar is  set as false in ISMFACFRC",
    "section_id": 1686227,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12283",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C152297",
    "custom_pvo_pvodc_category": 12,
    "custom_pvocodelines": null,
    "custom_preconds": "Setup a Targeted online promotion in OMP following the steps from 1-15 in [C87581]\r\nSet DNETCE as true in suppiler level.\r\nSet USE_EXCLUSIVE_TRAITS_IN_ISM  flashvar in ISMACFRC as false",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Mytickets URL and login using valid credentials\r\nExpected Result:\r\nMytickets URL should be launched sucessfully and user should be able to login\r\n2. Go to Special Offers tab.\r\nExpected Result:\r\nAll special offers should be listed as expected\r\n3. Click on BuyTickets button on Targeted promotion setup for this patron\r\nExpected Result:\r\nUser should be navigated to Single sales availability\r\n4. In availability verify that both trait protected and normal buyer types are displayed since DNETCE is set as true.\r\nExpected Result:\r\nBoth trait protected and normal buyer types should be displayed as expected.\r\n5. Click on View Seat Map\r\nExpected Result:\r\nUser should be navigated to ISM\r\n6. Verify that both trait protected and normal buyer types are displayed in ISM map since USE_EXCLUSIVE_TRAITS_IN_ISM is set as false\r\nExpected Result:\r\nIn ISM both trait protected buyer types  and normal buyers are displayed in Nav map,seat Map and in OSS cart.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Mytickets URL and login using valid credentials\r\n2. Go to Special Offers tab.\r\n3. Click on BuyTickets button on Targeted promotion setup for this patron\r\n4. In availability verify that both trait protected and normal buyer types are displayed since DNETCE is set as true.\r\n5. Click on View Seat Map\r\n6. Verify that both trait protected and normal buyer types are displayed in ISM map since USE_EXCLUSIVE_TRAITS_IN_ISM is set as false",
        "expected": "1. Mytickets URL should be launched sucessfully and user should be able to login\r\n2. All special offers should be listed as expected\r\n3. User should be navigated to Single sales availability\r\n4. Both trait protected and normal buyer types should be displayed as expected.\r\n5. User should be navigated to ISM\r\n6. In ISM both trait protected buyer types  and normal buyers are displayed in Nav map,seat Map and in OSS cart."
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716788,
    "title": "Verify the buyer display in ISM  when DNETCE is set as false and USE_EXCLUSIVE_TRAITS_IN_ISM  flashvar is not set in ISMFACFRC",
    "section_id": 1686227,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12283",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C152298",
    "custom_pvo_pvodc_category": 12,
    "custom_pvocodelines": null,
    "custom_preconds": "Setup a Targeted online promotion in OMP following the steps from 1-15 in [C87581]\r\nSet DNETCE as falsein suppiler level.\r\nDo not set USE_EXCLUSIVE_TRAITS_IN_ISM  flashvar in ISMFACFRC",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Mytickets URL and login using valid credentials\r\nExpected Result:\r\nMytickets URL should be launched sucessfully and user should be able to login\r\n2. Go to Special Offers tab.\r\nExpected Result:\r\nAll special offers should be listed as expected\r\n3. Click on BuyTickets button on Targeted promotion setup for this patron\r\nExpected Result:\r\nUser should be naviagted to Single sales availabilty\r\n4. In availability verify that  only trait protected buyer types are displayed since DNETCE is set as false.\r\nExpected Result:\r\nOnly trait protected buyer types should be displayed since DNETCE is set as false.\r\n5. Click on View Seat Map\r\nExpected Result:\r\nUser should be navigated to ISM\r\n6. Verify that only trait protected buyer types are displayed in ISM map.\r\nExpected Result:\r\nIn ISM only trait protected buyer types are displayed in Nav map,seat Map and in OSS cart.\r\n7. In View source also make sure that PVO is passing myFlashVars.USE_EXCLUSIVE_TRAITS_IN_ISM as 'true'\r\nExpected Result:\r\nIn View source- PVO should pass myFlashVars.USE_EXCLUSIVE_TRAITS_IN_ISM as 'true'",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Mytickets URL and login using valid credentials\r\n2. Go to Special Offers tab.\r\n3. Click on BuyTickets button on Targeted promotion setup for this patron\r\n4. In availability verify that  only trait protected buyer types are displayed since DNETCE is set as false.\r\n5. Click on View Seat Map\r\n6. Verify that only trait protected buyer types are displayed in ISM map.\r\n7. In View source also make sure that PVO is passing myFlashVars.USE_EXCLUSIVE_TRAITS_IN_ISM as 'true'",
        "expected": "1. Mytickets URL should be launched sucessfully and user should be able to login\r\n2. All special offers should be listed as expected\r\n3. User should be naviagted to Single sales availabilty\r\n4. Only trait protected buyer types should be displayed since DNETCE is set as false.\r\n5. User should be navigated to ISM\r\n6. In ISM only trait protected buyer types are displayed in Nav map,seat Map and in OSS cart.\r\n7. In View source- PVO should pass myFlashVars.USE_EXCLUSIVE_TRAITS_IN_ISM as 'true'"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716789,
    "title": "Verify that MyTickets redirects to fixed package URL set from OMP when public promo is selected.",
    "section_id": 1686227,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12460",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C152299",
    "custom_pvo_pvodc_category": 12,
    "custom_pvocodelines": null,
    "custom_preconds": "a.Have a fixed package and perf accept via Maintenance.\r\nb.Have a valid patron in PV\r\nc.Create an online promotion using the following steps:\r\n   1.Launch the OMP url\r\n   2.Login as valid user\r\n   3.Select the supplier.Click on Continue\r\n   4.Click on New to create a new Promotion in Online Promotions tab\r\n   5.Select Promotion Type as Public.\r\n   6.Enter Valid Code ,Description ,Display panel and Display Order\r\n   7.Select URL as Click Action and enter  the url of the package created in PV\r\n   8.Enter Valid details for Public Title,Sub title and Description\r\n   9.Enter Valid Onsale ,offsale,visible on date,Visible off dates\r\n   10.Select Organisation and click on Show Events.\r\n   11.Associate the Events to the Promotion and select sub agency\r\n   12.Click on Save and Promotion has created successfully.",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch My Tickets and login.\n\n\r\nExpected Result:\r\nUser is successfully logged in to My Tickets\r\n2. Navigate to Special Offers tab and select the public promotion created in OMP from the list\r\nExpected Result:\r\nUser should be able to select the public promtion created  in OMP\r\n3. Verify that user is redirected to fixed package URL set from OMP on clicking Buy Tickets button\r\nExpected Result:\r\nUser should be redirected to Availability page of fixed package url set in OMP",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch My Tickets and login.\n\n\r\n2. Navigate to Special Offers tab and select the public promotion created in OMP from the list\r\n3. Verify that user is redirected to fixed package URL set from OMP on clicking Buy Tickets button",
        "expected": "1. User is successfully logged in to My Tickets\r\n2. User should be able to select the public promtion created  in OMP\r\n3. User should be redirected to Availability page of fixed package url set in OMP"
      }
    ],
    "custom_jiras": "58"
  },
  {
    "id": 30716790,
    "title": "Verify set value of BTOPPOSM  message is shown for a Targeted promotion  when onsale and offsale date is in past but promotion is visible",
    "section_id": 1686227,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12066",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C152300",
    "custom_pvo_pvodc_category": 12,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Setup a Targeted online promotion in OMP following the steps from 1-15 in [C87581]\r\n2.Select the same Targeted promotion in OMP created above and set the onsale and offsale date as past\r\n3.Set BTOPNOSM",
    "custom_test_purpose": null,
    "custom_steps": "1. 1. Login to Mytickets account of the patron\n2. Navigate to Special Offers page\r\nExpected Result:\r\nSpecial Offers page is displayed\r\n2. Verify BTOPPOSM message is shown for the expired promotion created in precondition\r\nExpected Result:\r\nBTOPPOSM message is shown for the promotion created",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Login to Mytickets account of the patron\n2. Navigate to Special Offers page\r\n2. Verify BTOPPOSM message is shown for the expired promotion created in precondition",
        "expected": "1. Special Offers page is displayed\r\n2. BTOPPOSM message is shown for the promotion created"
      }
    ],
    "custom_jiras": "57"
  },
  {
    "id": 30716791,
    "title": "Verify that PVO is displaying only trait resticted  Buyer type associated to an event when the patron has matching trait protected buyer type for an event when DNETCE is false",
    "section_id": 1686227,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12206",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_refs": "C152301",
    "custom_pvo_pvodc_category": 12,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Launch PV\r\n2.Create new price structure under TICKETING SETUP->SUPPLIER ADMINISTRATION->Price Structure associating 3 buyer types.\r\n3.Create a new event associating this price structure\r\n4.Setup a Targeted online promotion in OMP following the steps from 1-15 in [C87581] using the above event\r\n5.Set DNETCE as true in suppiler level.",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Mytickets application and login into mytickets\r\nExpected Result:\r\nUser should be able to login mytickets application \r\n2. Go to Special Offers tab\r\nExpected Result:\r\nUser is able to view targeted Promotion in Special Offers page\r\n3. Click on the promotion event \r\nExpected Result:\r\nUser is navigated to availability page\r\n4. verify whether only trait protected buyer type is getting displayed\r\nExpected Result:\r\nPVO should display only trait protected buyer type",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Mytickets application and login into mytickets\r\n2. Go to Special Offers tab\r\n3. Click on the promotion event \r\n4. verify whether only trait protected buyer type is getting displayed",
        "expected": "1. User should be able to login mytickets application \r\n2. User is able to view targeted Promotion in Special Offers page\r\n3. User is navigated to availability page\r\n4. PVO should display only trait protected buyer type"
      }
    ],
    "custom_jiras": "56.1"
  },
  {
    "id": 30716792,
    "title": "Verify that patron is restricted any number of orders above the highest trait integer value associated with a promotion",
    "section_id": 1686227,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-11336",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_refs": "C152302",
    "custom_pvo_pvodc_category": 12,
    "custom_pvocodelines": null,
    "custom_preconds": "Setup a Targeted online promotion in OMP following the steps from 1-15 in [C87581] \r\nIn PV, go to Patron Management->Patron->Trait and edit the 'No of permissible transaction' to 2.",
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Login to pv application\n2.Select one patron\n3.Associate trait, set the highest integer number as 3.\n4.Assosiate one buyer type promotion in it.\r\nExpected Result:\r\npre requisite should be done\r\n2. Login to my tickets application ( Using the above patron)\r\nExpected Result:\r\nUser should be logged in to the application successfully\r\n3. Verify that information about Traits associated with the account in Buy tickets page\r\nExpected Result:\r\nTrait and patron information should be displayed in the buy tickets page(targeted promotion)\r\n4. Select the BuyTickets button against the targeted promotion created\r\nExpected Result:\r\nUser is navigated to availability page.\r\n5. Select some seats and navigate to payment page and complete the transaction\r\nExpected Result:\r\nUser is able to complete the transaction as expected\r\n6. Click on 'Back to Special Offers' button in  the confirmation page\r\nExpected Result:\r\nUser navigated back to Special Offers page\r\n7. Repeat Steps from 4-6\r\nExpected Result:\r\nUser navigated back to Special Offers page\r\n8. Again select the BuyTickets button against the targeted promotion created.\nVerify that user is getting error message and not able to purchase the tickets. \r\nExpected Result:\r\nThe patron should be restricted any number of orders above the highest trait integer value associated with a promotion with an error",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Login to pv application\n2.Select one patron\n3.Associate trait, set the highest integer number as 3.\n4.Assosiate one buyer type promotion in it.\r\n2. Login to my tickets application ( Using the above patron)\r\n3. Verify that information about Traits associated with the account in Buy tickets page\r\n4. Select the BuyTickets button against the targeted promotion created\r\n5. Select some seats and navigate to payment page and complete the transaction\r\n6. Click on 'Back to Special Offers' button in  the confirmation page\r\n7. Repeat Steps from 4-6\r\n8. Again select the BuyTickets button against the targeted promotion created.\nVerify that user is getting error message and not able to purchase the tickets.",
        "expected": "1. pre requisite should be done\r\n2. User should be logged in to the application successfully\r\n3. Trait and patron information should be displayed in the buy tickets page(targeted promotion)\r\n4. User is navigated to availability page.\r\n5. User is able to complete the transaction as expected\r\n6. User navigated back to Special Offers page\r\n7. User navigated back to Special Offers page\r\n8. The patron should be restricted any number of orders above the highest trait integer value associated with a promotion with an error"
      }
    ],
    "custom_jiras": "55.1"
  },
  {
    "id": 30716793,
    "title": "Verify the users can add clickable URL in the AD promotions",
    "section_id": 1686227,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-11336",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 9,
    "custom_is_automated": false,
    "custom_refs": "C152303",
    "custom_pvo_pvodc_category": 12,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Launch the OMP url\r\n2.Login as valid user\r\n3.Select the supplier.Click on Continue\r\n4.Click on New to create a new Promotion\r\n5.Select Promotion Type as AD.\r\n6.Enter Valid Code ,Description ,Display panel and Display Order\r\n9.Enter Valid details for Subagency,Public Title and Description\r\n10.Enter Valide Onsale ,offsale,visible on date,Visible off dates\r\n11.Select the radio button as URL, and enter the clickable URL.\r\n12.Click on Save changed and Promotion has created successfully.",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to my tickets application ( Using the above patron)\r\nExpected Result:\r\nUser should be logged in to the application successfully\r\n2. Click on buy tickets tab\r\nExpected Result:\r\nUser should be navigated to Buy tickets tab and all available  Promotions for the logged in Patron\r\n3. Verify whether the Public promotion created above, is displayed in the buy tickets page and the AD promotion associated to the targeted promotion is displayed to the user in the right pane.\r\nExpected Result:\r\nThe AD promotion created should displayed to the user.\r\n4. Click on AD promotion and verify the user is navigated to the availability of the associated event\r\nExpected Result:\r\nUser should be navigated to the availability page of the event mapped to the AD promotion.\r\n5. Complete the transaction and verify the values are updated in DB\r\nExpected Result:\r\nUser should be able to complete the transaction and transaction details should be successfully updated in DB.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to my tickets application ( Using the above patron)\r\n2. Click on buy tickets tab\r\n3. Verify whether the Public promotion created above, is displayed in the buy tickets page and the AD promotion associated to the targeted promotion is displayed to the user in the right pane.\r\n4. Click on AD promotion and verify the user is navigated to the availability of the associated event\r\n5. Complete the transaction and verify the values are updated in DB",
        "expected": "1. User should be logged in to the application successfully\r\n2. User should be navigated to Buy tickets tab and all available  Promotions for the logged in Patron\r\n3. The AD promotion created should displayed to the user.\r\n4. User should be navigated to the availability page of the event mapped to the AD promotion.\r\n5. User should be able to complete the transaction and transaction details should be successfully updated in DB."
      }
    ],
    "custom_jiras": "55.1"
  },
  {
    "id": 30716794,
    "title": "Verify the Auction Opening Date Entry field is disabled when Start Right Now option is selected",
    "section_id": 1686228,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10810",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C152304",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": "Prerequisite:\r\n1.Set the text code OSSF:  http://images.tickets.com/styles/mytickets/consolidated_mytickets_test.css\r\n2.Set the text code: COMYUIE to true.\r\n3.Remove the HETABCO and HETABCO1 text codes from the ORG level and these text codes are not set at any level.\r\n4.Create an event and do perf to Mytixx\r\n5. Set text code AUCTIONE to True in Supplier level\r\n6. Set text code PHPAUCI to True in Event  level\r\n7. Set text code PRIAUCP to True in> level\r\nComplete a sale transaction for a patron1\r\nLaunch the application using the URL:\r\n\r\nLogin to My tixx uisng a valid credentials\r\nNavigate to My Tickets page from the home page displayed\r\nSelect View By Event\r\nVerify the Create Auction button should display\r\n1.Select the Tickets\r\n2. Verify the Create Auction button\r\n3. Click on Create Auction\r\n1. Verify the header text\r\n2. Verify the sub header text\r\n3. Verify the message\r\nSelect the Start Right Now Radio box in Create Auction page\r\nClick on Log out",
    "custom_test_purpose": null,
    "custom_steps": "1. Step 1: Pre-Request\r\nExpected Result:\r\nPre-Request should be satisfied\r\n2. Step 2: Single Ticket sales\r\nExpected Result:\r\nThe parton1 should be able to complete the transaction\r\n3. Step 3 : Launch the link\r\nExpected Result:\r\nThe application should be launched.\r\n4. Step 4: Log in\r\nExpected Result:\r\nUser should able to login\r\n5. Step 5: Verify\r\nExpected Result:\r\nMy Tickets page should display\r\n6. Step 6: View By Event\r\nExpected Result:\r\nTickets should display based on the Event details\r\n7. Step 7: Verify\r\nExpected Result:\r\nThe system should display Create Auction button\r\n8. Step 8: Create Auction\r\nExpected Result:\r\n1. User should able to select the tickets\n2. Create Auction button should display\n3. Page should navigate to Create Auction\r\n9. Step 9: Verif UI\r\nExpected Result:\r\n1. Default header text should be \"Create Auction (Account: )\".\n2. Default sub header text should be \"Create a new auction for selected seats\".\n3. The system should display a default text message = \"Enter the below auction details and click create auction to continue. You may change the selected tickets by clicking on select different ticket. Note: The auction start and end dates should be in the time zone of the venue. All amounts should be entered in USD\".\r\n10. Step 10: Start Right Now\r\nExpected Result:\r\nSystem should display the present date and time and system should disable (gray out) the auction opening date entry field\r\n11. Step 11: Log out\r\nExpected Result:\r\nUser should able to log out",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Step 1: Pre-Request\r\n2. Step 2: Single Ticket sales\r\n3. Step 3 : Launch the link\r\n4. Step 4: Log in\r\n5. Step 5: Verify\r\n6. Step 6: View By Event\r\n7. Step 7: Verify\r\n8. Step 8: Create Auction\r\n9. Step 9: Verif UI\r\n10. Step 10: Start Right Now\r\n11. Step 11: Log out",
        "expected": "1. Pre-Request should be satisfied\r\n2. The parton1 should be able to complete the transaction\r\n3. The application should be launched.\r\n4. User should able to login\r\n5. My Tickets page should display\r\n6. Tickets should display based on the Event details\r\n7. The system should display Create Auction button\r\n8. 1. User should able to select the tickets\n2. Create Auction button should display\n3. Page should navigate to Create Auction\r\n9. 1. Default header text should be \"Create Auction (Account: )\".\n2. Default sub header text should be \"Create a new auction for selected seats\".\n3. The system should display a default text message = \"Enter the below auction details and click create auction to continue. You may change the selected tickets by clicking on select different ticket. Note: The auction start and end dates should be in the time zone of the venue. All amounts should be entered in USD\".\r\n10. System should display the present date and time and system should disable (gray out) the auction opening date entry field\r\n11. User should able to log out"
      }
    ],
    "custom_jiras": "55.1"
  },
  {
    "id": 30716795,
    "title": "Verify OUTBIDES-OUTBIDET email is received by previous high bidder when their bid is outbid if tdc.email.jms_enabled property is true",
    "section_id": 1686228,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15832",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C152305",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite:\n1. Have an auction created for an event\n2. Create a patron P2, P3 to bid for the auction\n3. Set the auction email text codes:AUCBCET, \nAUCBCES, OUTBIDES, OUTBIDET, AUCSCET \nAND AUCSCES\n4.Set ?tdc.email.jms_enabled? property to \ntrue to send the mail through jms\r\nExpected Result:\r\nPre-requsite should be satisfied\r\n2. Login as a patron to Bid for the auction created in the previous step (Patron P2)\n\na. enter valid user name/ password\nb. Select the account from the drop down list\r\nExpected Result:\r\nPatron should successfully logged in\r\n3. Select 'View Auctions' tab\r\nExpected Result:\r\nUser should be shown Auction lIsting page\r\n4. Verify the UI of the Auction listing pages\n\na. All Active Auctions (Event list/ Bid list pages)\nb. My Active Aucitons page\r\nExpected Result:\r\nAuction listing pages UI should be as per the PRD/ Wireframe\r\n5. Select the Description link of the event for making a bid\r\nExpected Result:\r\nPatron should be shown the Available Auctions list of the event\r\n6. Select Bid button\r\nExpected Result:\r\nPatorn should be shown a page to Place Bid for the auction offer\r\n7. Verify the UI of the 'Place Bid' page\r\nExpected Result:\r\nPlace Bid' page UI should be as per the PRD/ Wireframe\r\n8. Enter valid payment method, Bid Amount and click Place Bid button\r\nExpected Result:\r\nBid should be successfully placed\r\n9. Verify the UI of the Bid Confirmation modal window\r\nExpected Result:\r\nBid Confirmation' modal UI should be as per the PRD/ Wireframe\r\n10. Verify the auction offer in the My Active Auctions page\r\nExpected Result:\r\nThe offer should be shown in the My Active Auctions page. The current bid should be highlighted in green color (indicating highest bidder).\r\n11. Log out from the application\r\nExpected Result:\r\nThe user should be able to log out from the application.\r\n12. Login as a patron to Bid for the auction created in the previous step (Patron P3)\n\na. enter valid user name/ password\nb. Select the account from the drop down list\r\nExpected Result:\r\nPatron should successfully logged in\r\n13. Select 'View Auctions' tab\r\nExpected Result:\r\nUser should be shown Auction lIsting page\r\n14. Verify the UI of the Auction listing pages\n\na. All Active Auctions (Event list/ Bid list pages)\nb. My Active Aucitons page\r\nExpected Result:\r\nAuction listing pages UI should be as per the PRD/ Wireframe\r\n15. Select the Description link of the event for making a bid\r\nExpected Result:\r\nPatron should be shown the Available Auctions list of the event\r\n16. Select Bid button\r\nExpected Result:\r\nPatorn should be shown a page to Place Bid for the auction offer\r\n17. Verify the UI of the 'Place Bid' page\r\nExpected Result:\r\nPlace Bid' page UI should be as per the PRD/ Wireframe\r\n18. Enter valid payment method, Bid Amount and click Place Bid button\r\nExpected Result:\r\nBid should be successfully placed\r\n19. Verify the UI of the Bid Confirmation modal window\r\nExpected Result:\r\nBid Confirmation' modal UI should be as per the PRD/ Wireframe\r\n20. Verify the auction offer in the My Active Auctions page\r\nExpected Result:\r\nThe offer should be shown in the My Active Auctions page. The current bid should be highlighted in green color (indicating highest bidder).\r\n21. Log out from the application\r\nExpected Result:\r\nThe user should be able to log out from the application.\r\n22. Verify the outbid mail to the first buyer patron. Verify the mail content\r\nExpected Result:\r\nFirst buyer patron should receive an outbid mail. The mail content should be according to the set text code\r\n23. Select the link to bid from the Outbid mail\r\nExpected Result:\r\nPatron should be shown the 'Login' page of MyTickets application\r\n24. Patron login using valid credentials\r\nExpected Result:\r\nPatron should show the 'Place Bid' page\r\n25. Enter valid payment method, Bid Amount and click Place Bid button\r\nExpected Result:\r\nBid should be successfully placed\r\n26. Verify the auction success mail for the highest bid patron\r\nExpected Result:\r\nOnce the auction is closed, the highest bidder patron should receive an auction success mail\r\n27. Verify the auction success mail content\r\nExpected Result:\r\nAuction success mail UI should be as per the text code set\r\n28. Verify the auction won seats in the buyer my tickets account\r\nExpected Result:\r\nAuction won seats should be listed in the My Tickets page of the buyer patron\r\n29. Verify OUTBIDES-OUTBIDET email is received \nby previous high bidder when their bid is \noutbid if tdc.email.jms_enabled property is \ntrue\r\nExpected Result:\r\nOUTBIDES-OUTBIDET email is received by \nprevious high bidder when their bid is outbid if \ntdc.email.jms_enabled property is true\r\n30. 50.Verify mail_header, mail_addr, and mail_message tables and confirm the email is persisted\r\nExpected Result:\r\nmail_header, mail_addr, and mail_message \ntables should be as expected and the email \nis persisted\r\n31. 51.Verify in mail_header table and see the sent_flag is set to 1\r\nExpected Result:\r\nsent_flag is set to 1",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite:\n1. Have an auction created for an event\n2. Create a patron P2, P3 to bid for the auction\n3. Set the auction email text codes:AUCBCET, \nAUCBCES, OUTBIDES, OUTBIDET, AUCSCET \nAND AUCSCES\n4.Set ?tdc.email.jms_enabled? property to \ntrue to send the mail through jms\r\n2. Login as a patron to Bid for the auction created in the previous step (Patron P2)\n\na. enter valid user name/ password\nb. Select the account from the drop down list\r\n3. Select 'View Auctions' tab\r\n4. Verify the UI of the Auction listing pages\n\na. All Active Auctions (Event list/ Bid list pages)\nb. My Active Aucitons page\r\n5. Select the Description link of the event for making a bid\r\n6. Select Bid button\r\n7. Verify the UI of the 'Place Bid' page\r\n8. Enter valid payment method, Bid Amount and click Place Bid button\r\n9. Verify the UI of the Bid Confirmation modal window\r\n10. Verify the auction offer in the My Active Auctions page\r\n11. Log out from the application\r\n12. Login as a patron to Bid for the auction created in the previous step (Patron P3)\n\na. enter valid user name/ password\nb. Select the account from the drop down list\r\n13. Select 'View Auctions' tab\r\n14. Verify the UI of the Auction listing pages\n\na. All Active Auctions (Event list/ Bid list pages)\nb. My Active Aucitons page\r\n15. Select the Description link of the event for making a bid\r\n16. Select Bid button\r\n17. Verify the UI of the 'Place Bid' page\r\n18. Enter valid payment method, Bid Amount and click Place Bid button\r\n19. Verify the UI of the Bid Confirmation modal window\r\n20. Verify the auction offer in the My Active Auctions page\r\n21. Log out from the application\r\n22. Verify the outbid mail to the first buyer patron. Verify the mail content\r\n23. Select the link to bid from the Outbid mail\r\n24. Patron login using valid credentials\r\n25. Enter valid payment method, Bid Amount and click Place Bid button\r\n26. Verify the auction success mail for the highest bid patron\r\n27. Verify the auction success mail content\r\n28. Verify the auction won seats in the buyer my tickets account\r\n29. Verify OUTBIDES-OUTBIDET email is received \nby previous high bidder when their bid is \noutbid if tdc.email.jms_enabled property is \ntrue\r\n30. 50.Verify mail_header, mail_addr, and mail_message tables and confirm the email is persisted\r\n31. 51.Verify in mail_header table and see the sent_flag is set to 1",
        "expected": "1. Pre-requsite should be satisfied\r\n2. Patron should successfully logged in\r\n3. User should be shown Auction lIsting page\r\n4. Auction listing pages UI should be as per the PRD/ Wireframe\r\n5. Patron should be shown the Available Auctions list of the event\r\n6. Patorn should be shown a page to Place Bid for the auction offer\r\n7. Place Bid' page UI should be as per the PRD/ Wireframe\r\n8. Bid should be successfully placed\r\n9. Bid Confirmation' modal UI should be as per the PRD/ Wireframe\r\n10. The offer should be shown in the My Active Auctions page. The current bid should be highlighted in green color (indicating highest bidder).\r\n11. The user should be able to log out from the application.\r\n12. Patron should successfully logged in\r\n13. User should be shown Auction lIsting page\r\n14. Auction listing pages UI should be as per the PRD/ Wireframe\r\n15. Patron should be shown the Available Auctions list of the event\r\n16. Patorn should be shown a page to Place Bid for the auction offer\r\n17. Place Bid' page UI should be as per the PRD/ Wireframe\r\n18. Bid should be successfully placed\r\n19. Bid Confirmation' modal UI should be as per the PRD/ Wireframe\r\n20. The offer should be shown in the My Active Auctions page. The current bid should be highlighted in green color (indicating highest bidder).\r\n21. The user should be able to log out from the application.\r\n22. First buyer patron should receive an outbid mail. The mail content should be according to the set text code\r\n23. Patron should be shown the 'Login' page of MyTickets application\r\n24. Patron should show the 'Place Bid' page\r\n25. Bid should be successfully placed\r\n26. Once the auction is closed, the highest bidder patron should receive an auction success mail\r\n27. Auction success mail UI should be as per the text code set\r\n28. Auction won seats should be listed in the My Tickets page of the buyer patron\r\n29. OUTBIDES-OUTBIDET email is received by \nprevious high bidder when their bid is outbid if \ntdc.email.jms_enabled property is true\r\n30. mail_header, mail_addr, and mail_message \ntables should be as expected and the email \nis persisted\r\n31. sent_flag is set to 1"
      }
    ],
    "custom_jiras": "64"
  },
  {
    "id": 30716796,
    "title": "Verify that the auction initiator gets mail when auction is won",
    "section_id": 1686228,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10810",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C152306",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre-requsite:\n\n1.Set the text code OSSF: \nhttp://images.tickets.com/styles/mytickets/consolidated_mytickets_test.css\n2.Set the text code: COMYUIE to true.\n3.Remove the HETABCO and HETABCO1 text codes \nfrom the ORG level and these text codes are not set at \nany level\n4. Create a patron P1 who has permission to create \nauction\n5. Create patrons(P2,P3,P4,..) to bid for auctions\n6. Set AUCSCES and AUCSCET\r\nExpected Result:\r\nPre-requsite should be satisfied\r\n2. Launch the mytickets application\r\nExpected Result:\r\nMyTickets application should be launched\r\n3. Login using valid credentials:\na. Enter login name/ password\nb. Select the Account from the drop down list\r\nExpected Result:\r\nPatron should log in to the mytickets applicaton\r\n4. Select MyTickets button at the top of the page\r\nExpected Result:\r\nPatron should be shown the Tickets and Events page\r\n5. Selects tickets from View by Event/ View By Order tab and click Create Auction button\r\nExpected Result:\r\nPatron shoud be shown the 'Create Auction' page\r\n6. In the 'Create Auction' page enter valid data for fields Auction Description, Auction Date,\nStarting Bid Price, Reserve Price, Minimum Bid Increment and Delivery method and click Create Auction\r\nExpected Result:\r\nAuction should successfully be created\r\n7. Login as a patron to Bid for the auction created in the previous step (Patron P2)\n\na. enter valid user name/ password\nb. Select the account from the drop down list\r\nExpected Result:\r\nPatron should successfully logged in\r\n8. Select 'View Auctions' tab\r\nExpected Result:\r\nUser should be shown Auction lIsting page\r\n9. Select the Description link of the event for making a bid\r\nExpected Result:\r\nPatron should be shown the Available Auctions list of the event\r\n10. Select Bid button\r\nExpected Result:\r\nPatorn should be shown a page to Place Bid for the auction offer\r\n11. Enter valid payment method, Bid Amount and click Place Bid button\r\nExpected Result:\r\nBid should be successfully placed\r\n12. Log out from the application\r\nExpected Result:\r\nThe user should be able to log out from the application.\r\n13. Verify the auction success mail for the highest bid patron\r\nExpected Result:\r\nOnce the auction is closed, the highest bidder patron should receive an auction success mail\r\n14. Verify the auction success mail\r\nExpected Result:\r\nAuction success mail UI should be as per the text code set\r\n15. Verify that the patron who created the auction offer gets a mail when the auction is won by a patron\r\nExpected Result:\r\nAuction initiator should get a mail when the auciton won by a patron\r\n16. Verify the mail content of the auction initiator\r\nExpected Result:\r\nThe mail content should be as per the text code set",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-requsite:\n\n1.Set the text code OSSF: \nhttp://images.tickets.com/styles/mytickets/consolidated_mytickets_test.css\n2.Set the text code: COMYUIE to true.\n3.Remove the HETABCO and HETABCO1 text codes \nfrom the ORG level and these text codes are not set at \nany level\n4. Create a patron P1 who has permission to create \nauction\n5. Create patrons(P2,P3,P4,..) to bid for auctions\n6. Set AUCSCES and AUCSCET\r\n2. Launch the mytickets application\r\n3. Login using valid credentials:\na. Enter login name/ password\nb. Select the Account from the drop down list\r\n4. Select MyTickets button at the top of the page\r\n5. Selects tickets from View by Event/ View By Order tab and click Create Auction button\r\n6. In the 'Create Auction' page enter valid data for fields Auction Description, Auction Date,\nStarting Bid Price, Reserve Price, Minimum Bid Increment and Delivery method and click Create Auction\r\n7. Login as a patron to Bid for the auction created in the previous step (Patron P2)\n\na. enter valid user name/ password\nb. Select the account from the drop down list\r\n8. Select 'View Auctions' tab\r\n9. Select the Description link of the event for making a bid\r\n10. Select Bid button\r\n11. Enter valid payment method, Bid Amount and click Place Bid button\r\n12. Log out from the application\r\n13. Verify the auction success mail for the highest bid patron\r\n14. Verify the auction success mail\r\n15. Verify that the patron who created the auction offer gets a mail when the auction is won by a patron\r\n16. Verify the mail content of the auction initiator",
        "expected": "1. Pre-requsite should be satisfied\r\n2. MyTickets application should be launched\r\n3. Patron should log in to the mytickets applicaton\r\n4. Patron should be shown the Tickets and Events page\r\n5. Patron shoud be shown the 'Create Auction' page\r\n6. Auction should successfully be created\r\n7. Patron should successfully logged in\r\n8. User should be shown Auction lIsting page\r\n9. Patron should be shown the Available Auctions list of the event\r\n10. Patorn should be shown a page to Place Bid for the auction offer\r\n11. Bid should be successfully placed\r\n12. The user should be able to log out from the application.\r\n13. Once the auction is closed, the highest bidder patron should receive an auction success mail\r\n14. Auction success mail UI should be as per the text code set\r\n15. Auction initiator should get a mail when the auciton won by a patron\r\n16. The mail content should be as per the text code set"
      }
    ],
    "custom_jiras": "55.1"
  },
  {
    "id": 30716797,
    "title": "Verify the email received by highest bidder patron when auction won",
    "section_id": 1686228,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10810",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C152307",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre-requsite:\n\n1.Set the text code OSSF: http://images.tickets.com/styles/mytickets/consolidated_mytickets_test.css\n2.Set the text code: COMYUIE to true.\n3.Remove the HETABCO and HETABCO1 text codes from the ORG level and these text codes are not set at any level\n4. Create a patron P1 who has permission to create auction\n5. Create patrons(P2,P3,P4,..) to bid for auctions\r\nExpected Result:\r\nPre-requsite should be satisfied\r\n2. Launch the mytickets application\r\nExpected Result:\r\nMyTickets application should be launched\r\n3. Login using valid credentials:\na. Enter login name/ password\nb. Select the Account from the drop down list\r\nExpected Result:\r\nPatron should log in to the mytickets applicaton\r\n4. Select MyTickets button at the top of the page\r\nExpected Result:\r\nPatron should be shown the Tickets and Events page\r\n5. Selects tickets from View by Event/ View By Order tab and click Create Auction button\r\nExpected Result:\r\nPatron shoud be shown the 'Create Auction' page\r\n6. In the 'Create Auction' page enter valid data for fields Auction Description, Auction Date,\nStarting Bid Price, Reserve Price, Minimum Bid Increment and Delivery method as T@H and click Create Auction\r\nExpected Result:\r\nAuction should successfully be created\r\n7. Login as a patron to Bid for the auction created in the previous step (Patron P2)\n\na. enter valid user name/ password\nb. Select the account from the drop down list\r\nExpected Result:\r\nPatron should successfully logged in\r\n8. Select 'View Auctions' tab\r\nExpected Result:\r\nUser should be shown Auction lIsting page\r\n9. Select the Description link of the event for making a bid\r\nExpected Result:\r\nPatron should be shown the Available Auctions list of the event\r\n10. Select Bid button\r\nExpected Result:\r\nPatorn should be shown a page to Place Bid for the auction offer\r\n11. Enter valid payment method, Bid Amount and click Place Bid button\r\nExpected Result:\r\nBid should be successfully placed\r\n12. Log out from the application\r\nExpected Result:\r\nThe user should be able to log out from the application.\r\n13. Verify the auction success mail for the highest bid patron\r\nExpected Result:\r\nOnce the auction is closed, the highest bidder patron should receive an auction success mail\r\n14. Verify the auction success mail\r\nExpected Result:\r\nAuction success mail UI should be as per the text code set",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-requsite:\n\n1.Set the text code OSSF: http://images.tickets.com/styles/mytickets/consolidated_mytickets_test.css\n2.Set the text code: COMYUIE to true.\n3.Remove the HETABCO and HETABCO1 text codes from the ORG level and these text codes are not set at any level\n4. Create a patron P1 who has permission to create auction\n5. Create patrons(P2,P3,P4,..) to bid for auctions\r\n2. Launch the mytickets application\r\n3. Login using valid credentials:\na. Enter login name/ password\nb. Select the Account from the drop down list\r\n4. Select MyTickets button at the top of the page\r\n5. Selects tickets from View by Event/ View By Order tab and click Create Auction button\r\n6. In the 'Create Auction' page enter valid data for fields Auction Description, Auction Date,\nStarting Bid Price, Reserve Price, Minimum Bid Increment and Delivery method as T@H and click Create Auction\r\n7. Login as a patron to Bid for the auction created in the previous step (Patron P2)\n\na. enter valid user name/ password\nb. Select the account from the drop down list\r\n8. Select 'View Auctions' tab\r\n9. Select the Description link of the event for making a bid\r\n10. Select Bid button\r\n11. Enter valid payment method, Bid Amount and click Place Bid button\r\n12. Log out from the application\r\n13. Verify the auction success mail for the highest bid patron\r\n14. Verify the auction success mail",
        "expected": "1. Pre-requsite should be satisfied\r\n2. MyTickets application should be launched\r\n3. Patron should log in to the mytickets applicaton\r\n4. Patron should be shown the Tickets and Events page\r\n5. Patron shoud be shown the 'Create Auction' page\r\n6. Auction should successfully be created\r\n7. Patron should successfully logged in\r\n8. User should be shown Auction lIsting page\r\n9. Patron should be shown the Available Auctions list of the event\r\n10. Patorn should be shown a page to Place Bid for the auction offer\r\n11. Bid should be successfully placed\r\n12. The user should be able to log out from the application.\r\n13. Once the auction is closed, the highest bidder patron should receive an auction success mail\r\n14. Auction success mail UI should be as per the text code set"
      }
    ],
    "custom_jiras": "55.1"
  },
  {
    "id": 30716798,
    "title": "Verify the status of an closed auction offer without any bid",
    "section_id": 1686228,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10810",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C152308",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Create a Near Ending auction\nDo not bid that Auction\nWait till the Auction get closed\r\n2. Launch the My Tickets application in the required browser : and Login as existing user\r\nExpected Result:\r\nThe application should be launched in the required browser and the user should be logged in.\r\n3. Click on the History tab and verify\r\nExpected Result:\r\nUser should be navigated to \"History\" page.\nThe Tool tip History tab should be displayed correctly.\r\n4. Verify that the following details are displayed correctly in the UI:\n1. Verify the the Header title : Account History(Account:USERNAMExxxx) \n2.Verify the help and information link with the standard information symbol\n3.Verify that the tabs : Transfer,Replay,Auction,Donation\r\nExpected Result:\r\nThe following details should be  displayed correctly in the UI:\n1. The the Header title : Account History(Account:USERNAMExxxx) should be displayed \n2.The help and information link with the standard information symbol should be displayed \n3.The tabs : Transfer,Replay,Auction,Donation should be displayed and should be selectable\r\n5. Verify that the following details are displayed correctly in the UI:\n1.Auctions tab page shall be sub-divided into two tables:Auctions You Created, Auctions You Have Bid On.\n2.Each table header row with a table title:Auctions You Created, Auctions You Have Bid On.\n3.Columns in the Auction table :Bid,Offer number,Auction Description,Event,Section/Row/Seats,Status,High Bid for Auctions Created table, Current Bid for Auctions Bid table,Auction Closing Date.\n4.Sortable column headers :Offer number,Status,Offer closing date.\n5.Default sort order displays:\nOffer number starting with highest to lowest offer number.\n6.The offer number can be clickable:\n Clicking the offer number for an Auction created shall open the offer details page. An unsold offer can be edited or canceled or acted on in other permissible fashion.\nClicking the offer number on a bid shall open the offer details page.  A user can raise the bid or perform other permissible actions on the bid.\nClicking the offer number on a purchased offer shall display the offer details page.\n7.Reset Button with an Icon.\r\nExpected Result:\r\nThe following details should be  displayed correctly in the UI:\n1.Auctions tab page shall be sub-divided into two tables:Auctions You Created, Auctions You Have Bid On.\n2.Each table header row with a table title:Auctions You Created, Auctions You Have Bid On.\n3.Columns in the Auction table :Bid,Offer number,Auction Description,Event,Section/Row/Seats,Status,High Bid for Auctions Created table, Current Bid for Auctions Bid table,Auction Closing Date.\n4.Sortable column headers :Offer number,Status,Offer closing date.\n5.Default sort order displays:\nOffer number starting with highest to lowest offer number.\n6.The offer number can be clickable:\n Clicking the offer number for an Auction created shall open the offer details page. An unsold offer can be edited or canceled or acted on in other permissible fashion.\nClicking the offer number on a bid shall open the offer details page.  A user can raise the bid or perform other permissible actions on the bid.\nClicking the offer number on a purchased offer shall display the offer details page.\n7.Reset Button with an Icon.\r\n6. Verify the status of the Auction Closed in the Auction table.\r\nExpected Result:\r\nIf an auction is Closed, the Bid column should not contain a Bid button .\nAnd Status should be Auction closed in the Auctions table\r\n7. Click on the Logout tab at the top right end of the Application.\r\nExpected Result:\r\nThe user should be logged out from the application.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Create a Near Ending auction\nDo not bid that Auction\nWait till the Auction get closed\r\n2. Launch the My Tickets application in the required browser : and Login as existing user\r\n3. Click on the History tab and verify\r\n4. Verify that the following details are displayed correctly in the UI:\n1. Verify the the Header title : Account History(Account:USERNAMExxxx) \n2.Verify the help and information link with the standard information symbol\n3.Verify that the tabs : Transfer,Replay,Auction,Donation\r\n5. Verify that the following details are displayed correctly in the UI:\n1.Auctions tab page shall be sub-divided into two tables:Auctions You Created, Auctions You Have Bid On.\n2.Each table header row with a table title:Auctions You Created, Auctions You Have Bid On.\n3.Columns in the Auction table :Bid,Offer number,Auction Description,Event,Section/Row/Seats,Status,High Bid for Auctions Created table, Current Bid for Auctions Bid table,Auction Closing Date.\n4.Sortable column headers :Offer number,Status,Offer closing date.\n5.Default sort order displays:\nOffer number starting with highest to lowest offer number.\n6.The offer number can be clickable:\n Clicking the offer number for an Auction created shall open the offer details page. An unsold offer can be edited or canceled or acted on in other permissible fashion.\nClicking the offer number on a bid shall open the offer details page.  A user can raise the bid or perform other permissible actions on the bid.\nClicking the offer number on a purchased offer shall display the offer details page.\n7.Reset Button with an Icon.\r\n6. Verify the status of the Auction Closed in the Auction table.\r\n7. Click on the Logout tab at the top right end of the Application.",
        "expected": "1. \r\n2. The application should be launched in the required browser and the user should be logged in.\r\n3. User should be navigated to \"History\" page.\nThe Tool tip History tab should be displayed correctly.\r\n4. The following details should be  displayed correctly in the UI:\n1. The the Header title : Account History(Account:USERNAMExxxx) should be displayed \n2.The help and information link with the standard information symbol should be displayed \n3.The tabs : Transfer,Replay,Auction,Donation should be displayed and should be selectable\r\n5. The following details should be  displayed correctly in the UI:\n1.Auctions tab page shall be sub-divided into two tables:Auctions You Created, Auctions You Have Bid On.\n2.Each table header row with a table title:Auctions You Created, Auctions You Have Bid On.\n3.Columns in the Auction table :Bid,Offer number,Auction Description,Event,Section/Row/Seats,Status,High Bid for Auctions Created table, Current Bid for Auctions Bid table,Auction Closing Date.\n4.Sortable column headers :Offer number,Status,Offer closing date.\n5.Default sort order displays:\nOffer number starting with highest to lowest offer number.\n6.The offer number can be clickable:\n Clicking the offer number for an Auction created shall open the offer details page. An unsold offer can be edited or canceled or acted on in other permissible fashion.\nClicking the offer number on a bid shall open the offer details page.  A user can raise the bid or perform other permissible actions on the bid.\nClicking the offer number on a purchased offer shall display the offer details page.\n7.Reset Button with an Icon.\r\n6. If an auction is Closed, the Bid column should not contain a Bid button .\nAnd Status should be Auction closed in the Auctions table\r\n7. The user should be logged out from the application."
      }
    ],
    "custom_jiras": "55.1"
  },
  {
    "id": 30716799,
    "title": "Verify the email received by patron when auction close",
    "section_id": 1686228,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10810",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C152309",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Set the text code OSSF: http://images.tickets.com/styles/mytickets/consolidated_mytickets_test.css\n2.Set the text code: COMYUIE to true.\n3.Remove the HETABCO and HETABCO1 text codes from the ORG level and these text codes are not set at any level\n4. Create a patron P1 who has permission to create auction\n5. Create patrons(P2,P3,P4,..) to bid for auctions\n6. Launch the application.\n7. Login to the application as Patron P1\n8.Select My Tickets portal\n9. Select the Event by either using View by Event or View by Order tab\n10. Select the Tickets\n11.Click on Create Auction.The Create Auction page should open\n12.Input the values in the mandatory fields such as Auction Description,Auction Date,\nStarting Bid Price,Reserve Price,Minimum Bid Increment and Delivery method\n13.Click on Create Auction.\r\nExpected Result:\r\nThe Pre-requsite should be satisfied\r\n2. 1.Auction setup should be in place\n2.Set AUCBCES and AUCBCET textcodes\n3.Create an auction offer\r\nExpected Result:\r\nPrerequisite should be met\r\n3. Login to the mytixx application of a bidder patron\r\nExpected Result:\r\nThe user should able to login to the application\r\n4. 1.Navigate to View Auctions portal \n2. Search for an Event by Event Name or Event Date using simple search or Advanced Search button in the View Auctions page\n3.Click on the Description of the Event from the search result\n\nVerify that the user is able to navigate to the Auction Bidding page.\r\nExpected Result:\r\nThe bid auction page should display\r\n5. Click on the Bid button of the required auction\r\nExpected Result:\r\nThe bid auction page should display\r\n6. Verify the auction bid details such as: 1.Number of Bids 2.Current Bid  3. Minimum Bid Increment  4. Auction\r\nExpected Result:\r\nThe bidding details should be displayed correctly\r\n7. Enter  all the auction payment method details such as : 1. Card on File 2. Card Type 3.Card Number 4 . Exp. Month  5.Zip Code 6. CVC\r\nExpected Result:\r\nThe user should be able to enter the details correctly\r\n8. Enter the bid amount and click on the Place Bid button\r\nExpected Result:\r\nThe confirmation page should be displayed\r\n9. Repeat the above steps for another bidder patron\r\n10. Wait for the auction closing time to reach\nVerify AUCBCES -AUCBCET tthe confirmation email is \nrecieved by the highest bidder\r\nExpected Result:\r\nAUCBCES -AUCBCET tthe confirmation email is recieved by the highest bidder",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Set the text code OSSF: http://images.tickets.com/styles/mytickets/consolidated_mytickets_test.css\n2.Set the text code: COMYUIE to true.\n3.Remove the HETABCO and HETABCO1 text codes from the ORG level and these text codes are not set at any level\n4. Create a patron P1 who has permission to create auction\n5. Create patrons(P2,P3,P4,..) to bid for auctions\n6. Launch the application.\n7. Login to the application as Patron P1\n8.Select My Tickets portal\n9. Select the Event by either using View by Event or View by Order tab\n10. Select the Tickets\n11.Click on Create Auction.The Create Auction page should open\n12.Input the values in the mandatory fields such as Auction Description,Auction Date,\nStarting Bid Price,Reserve Price,Minimum Bid Increment and Delivery method\n13.Click on Create Auction.\r\n2. 1.Auction setup should be in place\n2.Set AUCBCES and AUCBCET textcodes\n3.Create an auction offer\r\n3. Login to the mytixx application of a bidder patron\r\n4. 1.Navigate to View Auctions portal \n2. Search for an Event by Event Name or Event Date using simple search or Advanced Search button in the View Auctions page\n3.Click on the Description of the Event from the search result\n\nVerify that the user is able to navigate to the Auction Bidding page.\r\n5. Click on the Bid button of the required auction\r\n6. Verify the auction bid details such as: 1.Number of Bids 2.Current Bid  3. Minimum Bid Increment  4. Auction\r\n7. Enter  all the auction payment method details such as : 1. Card on File 2. Card Type 3.Card Number 4 . Exp. Month  5.Zip Code 6. CVC\r\n8. Enter the bid amount and click on the Place Bid button\r\n9. Repeat the above steps for another bidder patron\r\n10. Wait for the auction closing time to reach\nVerify AUCBCES -AUCBCET tthe confirmation email is \nrecieved by the highest bidder",
        "expected": "1. The Pre-requsite should be satisfied\r\n2. Prerequisite should be met\r\n3. The user should able to login to the application\r\n4. The bid auction page should display\r\n5. The bid auction page should display\r\n6. The bidding details should be displayed correctly\r\n7. The user should be able to enter the details correctly\r\n8. The confirmation page should be displayed\r\n9. \r\n10. AUCBCES -AUCBCET tthe confirmation email is recieved by the highest bidder"
      }
    ],
    "custom_jiras": "55.1"
  },
  {
    "id": 30716800,
    "title": "Bid for the Auction and verify the Bid increment in the Auction offers",
    "section_id": 1686228,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10810",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_refs": "C152310",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite:\n1.Set the text code OSSF: http://images.tickets.com/styles/mytickets/consolidated_mytickets_test.css\n2.Set the text code: COMYUIE to true.\n3.Remove the HETABCO and HETABCO1 text codes from the ORG level and these text codes are not set at any level\n4. Launch the application.\n5. Login to the application Patron P1\n6.Select My Tickets portal\n7. Select the Event by either using View by Event or by View by Order tab\n8. Select the Tickets\n9.Click on Create Auction.The Create Auction page should open\n10.Input the values in the mandatory fields such as Auction Description,Auction Date,\nStarting Bid Price,Reserve Price,Minimum Bid Increment and Delivery method\n11.Click on Create Auction.\r\nExpected Result:\r\nPre-requsite should be satisfied\r\n2. Launch the Link:\r\nExpected Result:\r\nThe link should launched successfully\r\n3. Login as Patron P2\r\nExpected Result:\r\nThe user should be able to login to the application\r\n4. 1.Navigate to View Auctions portal \n2. Search for an Event by Event Name or Event Date using simple search or Advanced Search button in the View Auctions page\n3.Click on the Description of the Event from the search result\n\nVerify that the user is able to navigate to the Auction Bidding page.\r\nExpected Result:\r\nThe patron should be able to Navigate to the Auction Bidding page\r\n5. Click on the Bid button of the required auction\r\nExpected Result:\r\nThe bid auction page should display\r\n6. Verify the auction bid details such as: 1.Number of Bids 2.Current Bid  3. Minimum Bid Increment  4. Auction\r\nExpected Result:\r\nThe Auction details should be displayed correctly\r\n7. Enter  all the auction payment method details such as : 1. Card on File 2. Card Type 3.Card Number 4 . Exp. Month  5.Zip Code 6. CVC\r\nExpected Result:\r\nThe user should be able to enter all the details\r\n8. Enter the bid amount and click on the Place Bid button\r\nExpected Result:\r\nThe confirmation popup modal should be displayed\r\n9. 1.Go to View Auction page\n2.Click on My Active Auctions tab\n\nVerify the auction details dispalyed under the My Active Auctions tab\r\nExpected Result:\r\nThe Current Bid amount should gets updated and the highest bid amount should appear as green in colour\r\n10. Log out from the application\r\nExpected Result:\r\nThe user should be able to logout from the application",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite:\n1.Set the text code OSSF: http://images.tickets.com/styles/mytickets/consolidated_mytickets_test.css\n2.Set the text code: COMYUIE to true.\n3.Remove the HETABCO and HETABCO1 text codes from the ORG level and these text codes are not set at any level\n4. Launch the application.\n5. Login to the application Patron P1\n6.Select My Tickets portal\n7. Select the Event by either using View by Event or by View by Order tab\n8. Select the Tickets\n9.Click on Create Auction.The Create Auction page should open\n10.Input the values in the mandatory fields such as Auction Description,Auction Date,\nStarting Bid Price,Reserve Price,Minimum Bid Increment and Delivery method\n11.Click on Create Auction.\r\n2. Launch the Link:\r\n3. Login as Patron P2\r\n4. 1.Navigate to View Auctions portal \n2. Search for an Event by Event Name or Event Date using simple search or Advanced Search button in the View Auctions page\n3.Click on the Description of the Event from the search result\n\nVerify that the user is able to navigate to the Auction Bidding page.\r\n5. Click on the Bid button of the required auction\r\n6. Verify the auction bid details such as: 1.Number of Bids 2.Current Bid  3. Minimum Bid Increment  4. Auction\r\n7. Enter  all the auction payment method details such as : 1. Card on File 2. Card Type 3.Card Number 4 . Exp. Month  5.Zip Code 6. CVC\r\n8. Enter the bid amount and click on the Place Bid button\r\n9. 1.Go to View Auction page\n2.Click on My Active Auctions tab\n\nVerify the auction details dispalyed under the My Active Auctions tab\r\n10. Log out from the application",
        "expected": "1. Pre-requsite should be satisfied\r\n2. The link should launched successfully\r\n3. The user should be able to login to the application\r\n4. The patron should be able to Navigate to the Auction Bidding page\r\n5. The bid auction page should display\r\n6. The Auction details should be displayed correctly\r\n7. The user should be able to enter all the details\r\n8. The confirmation popup modal should be displayed\r\n9. The Current Bid amount should gets updated and the highest bid amount should appear as green in colour\r\n10. The user should be able to logout from the application"
      }
    ],
    "custom_jiras": "55.1"
  },
  {
    "id": 30716801,
    "title": "Verify the auction delivery methods are configured using the ADCCFPA text code",
    "section_id": 1686228,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10810",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_refs": "C152311",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite:\n1.Set the text code OSSF:  http://images.tickets.com/styles/mytickets/consolidated_mytickets_test.css\n2.Set the text code: COMYUIE to true.\n3.Remove the HETABCO and HETABCO1 text codes from the ORG level and these text codes are not set at any level.\n4.Create an event and do perf to Mytixx\n5. Set text code AUCTIONE to True in Supplier level\n6. Set text code PHPAUCI to True in Event  level\n7. Set text code PRIAUCP to True in> level\n8. Set text code ADCCFPA with the code of the delivery methods (eg: ADCCFPA=1|2)\r\nExpected Result:\r\nPre-Request should be satisfied\r\n2. Complete a sale transaction for patron1\r\nExpected Result:\r\nThe parton1 should be able to complete the transaction\r\n3. Launch the application using the URL:\n\r\nExpected Result:\r\nThe application should be launched.\r\n4. 1. Login to My tixx uisng a valid credentials\nLogin id     : Sreekanth.Madambath@ust-global.com/114221\nPassword : password\n2. Click on Login\r\nExpected Result:\r\nUser should able to login\r\n5. Select MyTickets tab\r\nExpected Result:\r\nMy Tickets page should display\r\n6. Select tickets from the My Tickets page and click Auction button\r\nExpected Result:\r\nUser should be shown 'Create Auction' page\r\n7. Verify the delivery methods in the 'Create Auction' page\r\nExpected Result:\r\nThe 'Create Auction' page should show only the delivery methods set in the ADCCFPA text code\r\n8. Enter the following details: Auction start and closing date, starting bid price, reserve price and minimum bid increment and select Create Auction\r\nExpected Result:\r\nAuction offer should be created successfully\r\n9. Click on Log out\r\nExpected Result:\r\nUser should able to log out",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite:\n1.Set the text code OSSF:  http://images.tickets.com/styles/mytickets/consolidated_mytickets_test.css\n2.Set the text code: COMYUIE to true.\n3.Remove the HETABCO and HETABCO1 text codes from the ORG level and these text codes are not set at any level.\n4.Create an event and do perf to Mytixx\n5. Set text code AUCTIONE to True in Supplier level\n6. Set text code PHPAUCI to True in Event  level\n7. Set text code PRIAUCP to True in> level\n8. Set text code ADCCFPA with the code of the delivery methods (eg: ADCCFPA=1|2)\r\n2. Complete a sale transaction for patron1\r\n3. Launch the application using the URL:\n\r\n4. 1. Login to My tixx uisng a valid credentials\nLogin id     : Sreekanth.Madambath@ust-global.com/114221\nPassword : password\n2. Click on Login\r\n5. Select MyTickets tab\r\n6. Select tickets from the My Tickets page and click Auction button\r\n7. Verify the delivery methods in the 'Create Auction' page\r\n8. Enter the following details: Auction start and closing date, starting bid price, reserve price and minimum bid increment and select Create Auction\r\n9. Click on Log out",
        "expected": "1. Pre-Request should be satisfied\r\n2. The parton1 should be able to complete the transaction\r\n3. The application should be launched.\r\n4. User should able to login\r\n5. My Tickets page should display\r\n6. User should be shown 'Create Auction' page\r\n7. The 'Create Auction' page should show only the delivery methods set in the ADCCFPA text code\r\n8. Auction offer should be created successfully\r\n9. User should able to log out"
      }
    ],
    "custom_jiras": "55.1"
  },
  {
    "id": 30716802,
    "title": "My Tickets UI Refresh - Verify the highest bidder wins the Auction",
    "section_id": 1686228,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10810",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 9,
    "custom_is_automated": false,
    "custom_refs": "C152312",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre-requsite:\r\n\r\n1.Set the text code OSSF: http://images.tickets.com/styles/mytickets/consolidated_mytickets_test.css\r\n2.Set the text code: COMYUIE to true at the sub agency.\r\n3.Remove the HETABCO and HETABCO1 text codes from the ORG level and these text codes are not set at any level\r\n4. Create a patron P1 who has permission to create auction\r\n5. Create patrons(P2,P3,P4,..) to bid for auctions\r\n\r\n6. Set the auction email text codes:\r\nAUCBCET, AUCBCES, OUTBIDES, OUTBIDET, AUCSCET AND AUCSCES",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the mytickets application\r\nExpected Result:\r\nMyTickets application should be launched\r\n2. Login using valid credentials:\na. Enter login name/ password\nb. Select the Account from the drop down list\r\nExpected Result:\r\nPatron should log in to the mytickets application\nLogs need to verify  :\nFindPatron API\nGetAuction inventory\n\r\n3. Navigate to MyTickets inventory\r\nExpected Result:\r\nPatron should be shown the Tickets and Events page\n\r\n4. Selects tickets from View by Event tab and click Auction button\n\r\nExpected Result:\r\ninventory mini cart should be updated with event and seat details \nPatron should be shown the 'Create Auction' page After clicking the Continue button In MyTickets inventory page \n\r\n5. In the 'Create Auction' page enter valid data for fields Auction Description, Auction Date,\nStarting Bid Price, Reserve Price, Minimum Bid Increment and Delivery method and click Create Auction\r\nExpected Result:\r\nAuction should successfully be created\nPersist inventory call should be made with seat details\r\n6.  Navigate to MyHistory page and verify the offer details has been added under Auction history\r\nExpected Result:\r\nAuction offer should be listed under specific Auction offer id with 'Auction in progress' status\n\r\n7. Verify the Auction offer in Auctions tab\r\nExpected Result:\r\nNewly created auction offer must be listed under 'All Active Auctions' tab \r\n8. Verify Auction create email\r\nExpected Result:\r\nAUCICES-AUCICET email should be sent to the Auction primary seller .\r\n9. Login as a patron to Bid for the auction created in the previous step (Patron P2)\n\na. enter valid user name/ password\nb. Select the account from the drop down list\r\nExpected Result:\r\nPatron should successfully logged in\r\n10. Select 'View Auctions' tab\r\nExpected Result:\r\nUser should be shown Auction lIsting page\r\n11. Select the Description link of the event for making a bid\r\nExpected Result:\r\nPatron should be shown the Available Auctions list of the event\r\n12. Select Bid button\r\nExpected Result:\r\nPatron should be shown a page to Place Bid for the auction offer\r\n13. Enter valid payment method, Bid Amount and click Place Bid button\r\nExpected Result:\r\nBid should be successfully placed\r\n14. Log out from the application\r\nExpected Result:\r\nThe user should be able to log out from the application.\r\n15. Verify the auction success mail for the highest bid patron\r\nExpected Result:\r\nOnce the auction is closed, the highest bidder patron should receive an auction success mail\n\nEmails : \n\nâ€œAUCBCETâ€� - AUCTION_BUYER_CONFIRMATION_EMAIL_TEXT â€“ Contains the email body for the email sent to the Auction winning bidder when an Auction is sold.\n\nâ€œAUCBCESâ€� - AUCTION_BUYER_CONFIRMATION_EMAIL_SUBJECT â€“ Contains the subject line for the email sent to the Auction winning bidder when an Auction is sold.\n\nâ€œAUCSCETâ€� - AUCTION_SELLER_CONFIRMATION_EMAIL_TEXT â€“ Contains the email body for the email sent to the Auction seller when an Auction is sold.\n\nâ€œAUCSCESâ€� - AUCTION_SELLER_CONFIRMATION_EMAIL_SUBJECT â€“ Contains the subject line for the email sent to the Auction seller when an Auction is sold.\n\r\n16. Repeat steps 9 to 14 with another patron - Patron3 and Bid with higher amount \r\nExpected Result:\r\npatron should be able to Bid the offer\r\n17. Verify the outbid mail to the first buyer patron. Verify the mail content\r\nExpected Result:\r\nFirst buyer patron should receive an outbid mail. The mail content should be according to the set text code\n\nâ€œOUTBIDESâ€� - OUTBID_EMAIL_SUBJECT â€“ Contains the subject line for the email sent to the previous high bidder when their bid is outbid.\n\nâ€œOUTBIDETâ€� - OUTBID_EMAIL_TEXTâ€“ Contains the email body for the email sent to the previous high bidder when their bid is outbid.\n\r\n18. Wait for the Auction closing time\r\n19. Verify auciton sold mail to the auction seller patron. Verify the mail content\r\nExpected Result:\r\nAuction seller patron should receive an email that the auciton offer is sold. The mail content should be as per the set text code\r\n20. Verify the auction won seats in the buyer my tickets account\r\nExpected Result:\r\nAuction won seats should be listed in the My Tickets page of the buyer patron\r\n21. Verify the auction history in the BOTS\n\nTicket Services > Market Offer Search\r\nExpected Result:\r\nAuction status should be shown in the Market Offer Search\r\n22. Verify the Auction status in the DB\n\nSELECT * FROM PVO.AUCTION WHERE AUCTION_ID= \nSELECT * FROM PVO.PATRON_CARD_INFO WHERE PATRON_ID= \r\nExpected Result:\r\nAuction status should be 'AD'.\nCard Details should be shown in the PATRON_CARD_INFO table\r\n23. Verify the created auction offer in the History > Auction tab.\nVerify its UI\r\nExpected Result:\r\nNewly created auction offer should be shown in the History > Auction tab with a status 'Auction Offered'.\n\nAuction tab UI should be as per PRD/ Wireframe\r\n24. Verify the auction offer in the My Active Auctions page\r\nExpected Result:\r\nThe offer should be shown in the My Active Auctions page. The current bid should be highlighted in green color (indicating highest bidder).\r\n25. Verify the auction offer in the My Active Auctions page\r\nExpected Result:\r\nThe offer should be shown in the My Active Auctions page. The current bid should be highlighted in green color (indicating highest bidder).\r\n26. In the PVO logs verify that no unexpected error message is shown related to the completed auction transaction\r\nExpected Result:\r\nPVO Logs should not display any unexpected error messages related to the completed auction transaction",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the mytickets application\r\n2. Login using valid credentials:\na. Enter login name/ password\nb. Select the Account from the drop down list\r\n3. Navigate to MyTickets inventory\r\n4. Selects tickets from View by Event tab and click Auction button\n\r\n5. In the 'Create Auction' page enter valid data for fields Auction Description, Auction Date,\nStarting Bid Price, Reserve Price, Minimum Bid Increment and Delivery method and click Create Auction\r\n6.  Navigate to MyHistory page and verify the offer details has been added under Auction history\r\n7. Verify the Auction offer in Auctions tab\r\n8. Verify Auction create email\r\n9. Login as a patron to Bid for the auction created in the previous step (Patron P2)\n\na. enter valid user name/ password\nb. Select the account from the drop down list\r\n10. Select 'View Auctions' tab\r\n11. Select the Description link of the event for making a bid\r\n12. Select Bid button\r\n13. Enter valid payment method, Bid Amount and click Place Bid button\r\n14. Log out from the application\r\n15. Verify the auction success mail for the highest bid patron\r\n16. Repeat steps 9 to 14 with another patron - Patron3 and Bid with higher amount \r\n17. Verify the outbid mail to the first buyer patron. Verify the mail content\r\n18. Wait for the Auction closing time\r\n19. Verify auciton sold mail to the auction seller patron. Verify the mail content\r\n20. Verify the auction won seats in the buyer my tickets account\r\n21. Verify the auction history in the BOTS\n\nTicket Services > Market Offer Search\r\n22. Verify the Auction status in the DB\n\nSELECT * FROM PVO.AUCTION WHERE AUCTION_ID= \nSELECT * FROM PVO.PATRON_CARD_INFO WHERE PATRON_ID= \r\n23. Verify the created auction offer in the History > Auction tab.\nVerify its UI\r\n24. Verify the auction offer in the My Active Auctions page\r\n25. Verify the auction offer in the My Active Auctions page\r\n26. In the PVO logs verify that no unexpected error message is shown related to the completed auction transaction",
        "expected": "1. MyTickets application should be launched\r\n2. Patron should log in to the mytickets application\nLogs need to verify  :\nFindPatron API\nGetAuction inventory\n\r\n3. Patron should be shown the Tickets and Events page\n\r\n4. inventory mini cart should be updated with event and seat details \nPatron should be shown the 'Create Auction' page After clicking the Continue button In MyTickets inventory page \n\r\n5. Auction should successfully be created\nPersist inventory call should be made with seat details\r\n6. Auction offer should be listed under specific Auction offer id with 'Auction in progress' status\n\r\n7. Newly created auction offer must be listed under 'All Active Auctions' tab \r\n8. AUCICES-AUCICET email should be sent to the Auction primary seller .\r\n9. Patron should successfully logged in\r\n10. User should be shown Auction lIsting page\r\n11. Patron should be shown the Available Auctions list of the event\r\n12. Patron should be shown a page to Place Bid for the auction offer\r\n13. Bid should be successfully placed\r\n14. The user should be able to log out from the application.\r\n15. Once the auction is closed, the highest bidder patron should receive an auction success mail\n\nEmails : \n\nâ€œAUCBCETâ€� - AUCTION_BUYER_CONFIRMATION_EMAIL_TEXT â€“ Contains the email body for the email sent to the Auction winning bidder when an Auction is sold.\n\nâ€œAUCBCESâ€� - AUCTION_BUYER_CONFIRMATION_EMAIL_SUBJECT â€“ Contains the subject line for the email sent to the Auction winning bidder when an Auction is sold.\n\nâ€œAUCSCETâ€� - AUCTION_SELLER_CONFIRMATION_EMAIL_TEXT â€“ Contains the email body for the email sent to the Auction seller when an Auction is sold.\n\nâ€œAUCSCESâ€� - AUCTION_SELLER_CONFIRMATION_EMAIL_SUBJECT â€“ Contains the subject line for the email sent to the Auction seller when an Auction is sold.\n\r\n16. patron should be able to Bid the offer\r\n17. First buyer patron should receive an outbid mail. The mail content should be according to the set text code\n\nâ€œOUTBIDESâ€� - OUTBID_EMAIL_SUBJECT â€“ Contains the subject line for the email sent to the previous high bidder when their bid is outbid.\n\nâ€œOUTBIDETâ€� - OUTBID_EMAIL_TEXTâ€“ Contains the email body for the email sent to the previous high bidder when their bid is outbid.\n\r\n18. \r\n19. Auction seller patron should receive an email that the auciton offer is sold. The mail content should be as per the set text code\r\n20. Auction won seats should be listed in the My Tickets page of the buyer patron\r\n21. Auction status should be shown in the Market Offer Search\r\n22. Auction status should be 'AD'.\nCard Details should be shown in the PATRON_CARD_INFO table\r\n23. Newly created auction offer should be shown in the History > Auction tab with a status 'Auction Offered'.\n\nAuction tab UI should be as per PRD/ Wireframe\r\n24. The offer should be shown in the My Active Auctions page. The current bid should be highlighted in green color (indicating highest bidder).\r\n25. The offer should be shown in the My Active Auctions page. The current bid should be highlighted in green color (indicating highest bidder).\r\n26. PVO Logs should not display any unexpected error messages related to the completed auction transaction"
      }
    ],
    "custom_jiras": "55.1"
  },
  {
    "id": 30716803,
    "title": "Create an auction for an ET timezone venue and verify auction starts and closes at correct time",
    "section_id": 1686228,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12178",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 10,
    "custom_is_automated": false,
    "custom_refs": "C152313",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre-requisite:\r\nFor auction seller patron add tickets of events having ET timezone venue",
    "custom_test_purpose": null,
    "custom_steps": "1. 1. Launch MyTickets URL \n2. Login as auction seller patron\r\nExpected Result:\r\nAucton seller patron should be logged in successfully.\r\n2. 1. In the MyTickets tab select tickets of events having ET timezone venue and click Auction button\n\n2. Input the required details\nAuction Description: \nStart Date: Start Now/ select current date and time\nEnd Date: \nStart Bid Price: \nReserve Price:  \nAuction Express Price: \nMOD: \nClick on create auction.\r\nExpected Result:\r\nAuction offer should be created successfully.\r\n3. 1. Launch MyTickets URL  \n2. Login as auction bidder patron\r\nExpected Result:\r\nPatron should be logged in successfully.\r\n4. 1. Select Auction tab\n2. Search for the auction offer created in the above steps\n(User all the search criteria and see the auction offer is getting displayed in the search results)\r\nExpected Result:\r\nAuction offer created selecting ET timezone event should be shown in the search result.\r\n5. Select the auction offer and enter bid amount the Auction Bid page and place the bid\r\nExpected Result:\r\nBid should be placed successfully.\r\n6. In the My Active Auctions tab, verify the auction offer\r\nExpected Result:\r\nBid placed auction offer should be displayed in the My Active Auctions tab with amount high lighted as green color as the patron is the highest bidder\r\n7. In the Histroy > Auction tab, verify the auction offer\r\nExpected Result:\r\nBid placed auction offer should be displayed in the History > Auction tab with amount high lighted as green color as the patron is the highest bidder\r\n8. At the auction close time, verify that the highest bidder patron wins the auction offer\r\nExpected Result:\r\nAt the auction close time, highest auction bidder should win the auction offer and the ticket should be added in the buyer patron MyTickets account",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch MyTickets URL \n2. Login as auction seller patron\r\n2. 1. In the MyTickets tab select tickets of events having ET timezone venue and click Auction button\n\n2. Input the required details\nAuction Description: \nStart Date: Start Now/ select current date and time\nEnd Date: \nStart Bid Price: \nReserve Price:  \nAuction Express Price: \nMOD: \nClick on create auction.\r\n3. 1. Launch MyTickets URL  \n2. Login as auction bidder patron\r\n4. 1. Select Auction tab\n2. Search for the auction offer created in the above steps\n(User all the search criteria and see the auction offer is getting displayed in the search results)\r\n5. Select the auction offer and enter bid amount the Auction Bid page and place the bid\r\n6. In the My Active Auctions tab, verify the auction offer\r\n7. In the Histroy > Auction tab, verify the auction offer\r\n8. At the auction close time, verify that the highest bidder patron wins the auction offer",
        "expected": "1. Aucton seller patron should be logged in successfully.\r\n2. Auction offer should be created successfully.\r\n3. Patron should be logged in successfully.\r\n4. Auction offer created selecting ET timezone event should be shown in the search result.\r\n5. Bid should be placed successfully.\r\n6. Bid placed auction offer should be displayed in the My Active Auctions tab with amount high lighted as green color as the patron is the highest bidder\r\n7. Bid placed auction offer should be displayed in the History > Auction tab with amount high lighted as green color as the patron is the highest bidder\r\n8. At the auction close time, highest auction bidder should win the auction offer and the ticket should be added in the buyer patron MyTickets account"
      }
    ],
    "custom_jiras": "58"
  },
  {
    "id": 30716804,
    "title": "Highest bidder place bid with an invalid card_Once the auction is closed change the card to a valid one with 10 min_Verify auction is completed successfully",
    "section_id": 1686228,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10810",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 11,
    "custom_is_automated": false,
    "custom_refs": "C152314",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre-requsite:\r\n\r\n1.Set the text code OSSF: http://images.tickets.com/styles/mytickets/consolidated_mytickets_test.css\r\n2.Set the text code: COMYUIE to true.\r\n3.Remove the HETABCO and HETABCO1 text codes from the ORG level and these text codes are not set at any level\r\n4. Create a patron P1 who has permission to create auction\r\n5. Create patrons(P2,P3,P4,..) to bid for auctions",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the mytickets application\r\nExpected Result:\r\nMyTickets application should be launched\r\n2. Login using valid credentials: (Using Primary auction seller)\na. Enter login name/ password\nb. Select the Account from the drop down list\r\nExpected Result:\r\nPatron should log in to the mytickets applicaton\r\n3. Select MyTickets button at the top of the page\r\nExpected Result:\r\nPatron should be shown the Tickets and Events page\r\n4. Selects tickets from View by Event/ View By Order tab and click Create Auction button\r\nExpected Result:\r\nPatron shoud be shown the 'Create Auction' page\r\n5. In the 'Create Auction' page enter valid data for fields Auction Description, Auction Date,\nStarting Bid Price, Reserve Price, Minimum Bid Increment and Delivery method and click Create Auction\r\nExpected Result:\r\nAuction should successfully be created\r\n6. Login as a patron to Bid for the auction created in the previous step (Patron P2)\n\na. enter valid user name/ password\nb. Select the account from the drop down list\r\nExpected Result:\r\nPatron should successfully logged in\r\n7. Select 'View Auctions' tab\r\nExpected Result:\r\nUser should be shown Auction lIsting page\r\n8. Select the Description link of the event for making a bid\r\nExpected Result:\r\nPatron should be shown the Available Auctions list of the event\r\n9. Select Bid button\r\nExpected Result:\r\nPatorn should be shown a page to Place Bid for the auction offer\r\n10. Enter an invalid card details (or enter valid card details once bid placement. Then disable the card type in the BOTS) in the payment method, Bid Amount and click Place Bid button\r\nExpected Result:\r\nBid should be successfully placed\r\n11. Log out from the application\r\nExpected Result:\r\nThe user should be able to log out from the application.\r\n12. Verify that the auction creator gets a mail stating that the auction is cancelled\r\nExpected Result:\r\nAuction creator should receive a mail that the auction is cancelled\r\n13. Verify the mail content\r\nExpected Result:\r\nMail content should be as per the text code set\r\n14. The highest bidder update the bid with a valid card with 10 min after the bid is closed\r\nExpected Result:\r\nBid should be updated\r\n15. Verify the bid success mail of the highest bidder\r\nExpected Result:\r\nThe highest bidder should win the auction offer and he should receive an auction success mail\r\n16. Verify the mail content\r\nExpected Result:\r\nMail content should be as per the text code set",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the mytickets application\r\n2. Login using valid credentials: (Using Primary auction seller)\na. Enter login name/ password\nb. Select the Account from the drop down list\r\n3. Select MyTickets button at the top of the page\r\n4. Selects tickets from View by Event/ View By Order tab and click Create Auction button\r\n5. In the 'Create Auction' page enter valid data for fields Auction Description, Auction Date,\nStarting Bid Price, Reserve Price, Minimum Bid Increment and Delivery method and click Create Auction\r\n6. Login as a patron to Bid for the auction created in the previous step (Patron P2)\n\na. enter valid user name/ password\nb. Select the account from the drop down list\r\n7. Select 'View Auctions' tab\r\n8. Select the Description link of the event for making a bid\r\n9. Select Bid button\r\n10. Enter an invalid card details (or enter valid card details once bid placement. Then disable the card type in the BOTS) in the payment method, Bid Amount and click Place Bid button\r\n11. Log out from the application\r\n12. Verify that the auction creator gets a mail stating that the auction is cancelled\r\n13. Verify the mail content\r\n14. The highest bidder update the bid with a valid card with 10 min after the bid is closed\r\n15. Verify the bid success mail of the highest bidder\r\n16. Verify the mail content",
        "expected": "1. MyTickets application should be launched\r\n2. Patron should log in to the mytickets applicaton\r\n3. Patron should be shown the Tickets and Events page\r\n4. Patron shoud be shown the 'Create Auction' page\r\n5. Auction should successfully be created\r\n6. Patron should successfully logged in\r\n7. User should be shown Auction lIsting page\r\n8. Patron should be shown the Available Auctions list of the event\r\n9. Patorn should be shown a page to Place Bid for the auction offer\r\n10. Bid should be successfully placed\r\n11. The user should be able to log out from the application.\r\n12. Auction creator should receive a mail that the auction is cancelled\r\n13. Mail content should be as per the text code set\r\n14. Bid should be updated\r\n15. The highest bidder should win the auction offer and he should receive an auction success mail\r\n16. Mail content should be as per the text code set"
      }
    ],
    "custom_jiras": "55.1"
  },
  {
    "id": 30716805,
    "title": "Highest bidder place bid with an invalid card_verify auction creator gets mail once the auction closed",
    "section_id": 1686228,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10810",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 12,
    "custom_is_automated": false,
    "custom_refs": "C152315",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre-requsite:\r\n\r\n1.Set the text code OSSF: http://images.tickets.com/styles/mytickets/consolidated_mytickets_test.css\r\n2.Set the text code: COMYUIE to true.\r\n3.Remove the HETABCO and HETABCO1 text codes from the ORG level and these text codes are not set at any level\r\n4. Create a patron P1 who has permission to create auction\r\n5. Create patrons(P2,P3,P4,..) to bid for auctions",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the mytickets application\r\nExpected Result:\r\nMyTickets application should be launched\r\n2. Login using valid credentials: (Login with valid Primary Auction seller patron)\na. Enter login name/ password\nb. Select the Account from the drop down list\r\nExpected Result:\r\nPatron should log in to the mytickets applicaton\r\n3. Select MyTickets button at the top of the page\r\nExpected Result:\r\nPatron should be shown the Tickets and Events page\r\n4. Selects tickets from View by Event/ View By Order tab and click Create Auction button\r\nExpected Result:\r\nPatron shoud be shown the 'Create Auction' page\r\n5. In the 'Create Auction' page enter valid data for fields Auction Description, Auction Date,\nStarting Bid Price, Reserve Price, Minimum Bid Increment and Delivery method and click Create Auction\r\nExpected Result:\r\nAuction should successfully be created\r\n6. Login as a patron to Bid for the auction created in the previous step (Patron P2)\n\na. enter valid user name/ password\nb. Select the account from the drop down list\r\nExpected Result:\r\nPatron should successfully logged in\r\n7. Select 'View Auctions' tab\r\nExpected Result:\r\nUser should be shown Auction lIsting page\r\n8. Select the Description link of the event for making a bid\r\nExpected Result:\r\nPatron should be shown the Available Auctions list of the event\r\n9. Select Bid button\r\nExpected Result:\r\nPatorn should be shown a page to Place Bid for the auction offer\r\n10. Enter an invalid card details (or enter valid card details once bid placement. Then disable the card type in the BOTS) in the payment method, Bid Amount and click Place Bid button\r\nExpected Result:\r\nBid should be successfully placed\r\n11. Log out from the application\r\nExpected Result:\r\nThe user should be able to log out from the application.\r\n12. Verify that the auction creator gets a mail stating that the auction is cancelled\r\nExpected Result:\r\nAuction creator should receive a mail that the auction is cancelled\r\n13. Verify the mail content\n\nWe can verify emails via PVO Maintenance by following below steps :\n\n1 . Login to PVO maintenance site\n2 .  Go to Patrons & Orders\n3 .  Go to  Resend Confirmation Email\n4 . Enter email id / Order od / Patron id (Any of the required field) and click on search button corresponds to the field\n5 . user will get the search results with Main ID\n6 . Note: Latest Mail ID will always points to the last email sent to the search criteria\n7 . user can Verify the email with the values returned under the box \" Message\" \n\n8 . If needed , it can be viewed as an email by saving it with a notepad application with html extension .\n\n\r\nExpected Result:\r\nMail content should be as per the text code set",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the mytickets application\r\n2. Login using valid credentials: (Login with valid Primary Auction seller patron)\na. Enter login name/ password\nb. Select the Account from the drop down list\r\n3. Select MyTickets button at the top of the page\r\n4. Selects tickets from View by Event/ View By Order tab and click Create Auction button\r\n5. In the 'Create Auction' page enter valid data for fields Auction Description, Auction Date,\nStarting Bid Price, Reserve Price, Minimum Bid Increment and Delivery method and click Create Auction\r\n6. Login as a patron to Bid for the auction created in the previous step (Patron P2)\n\na. enter valid user name/ password\nb. Select the account from the drop down list\r\n7. Select 'View Auctions' tab\r\n8. Select the Description link of the event for making a bid\r\n9. Select Bid button\r\n10. Enter an invalid card details (or enter valid card details once bid placement. Then disable the card type in the BOTS) in the payment method, Bid Amount and click Place Bid button\r\n11. Log out from the application\r\n12. Verify that the auction creator gets a mail stating that the auction is cancelled\r\n13. Verify the mail content\n\nWe can verify emails via PVO Maintenance by following below steps :\n\n1 . Login to PVO maintenance site\n2 .  Go to Patrons & Orders\n3 .  Go to  Resend Confirmation Email\n4 . Enter email id / Order od / Patron id (Any of the required field) and click on search button corresponds to the field\n5 . user will get the search results with Main ID\n6 . Note: Latest Mail ID will always points to the last email sent to the search criteria\n7 . user can Verify the email with the values returned under the box \" Message\" \n\n8 . If needed , it can be viewed as an email by saving it with a notepad application with html extension .",
        "expected": "1. MyTickets application should be launched\r\n2. Patron should log in to the mytickets applicaton\r\n3. Patron should be shown the Tickets and Events page\r\n4. Patron shoud be shown the 'Create Auction' page\r\n5. Auction should successfully be created\r\n6. Patron should successfully logged in\r\n7. User should be shown Auction lIsting page\r\n8. Patron should be shown the Available Auctions list of the event\r\n9. Patorn should be shown a page to Place Bid for the auction offer\r\n10. Bid should be successfully placed\r\n11. The user should be able to log out from the application.\r\n12. Auction creator should receive a mail that the auction is cancelled\r\n13. Mail content should be as per the text code set"
      }
    ],
    "custom_jiras": "55.1"
  },
  {
    "id": 30716806,
    "title": "Cancel an auction offer_ Verify both creator and highest bidder gets an e-mail that auction cancelled",
    "section_id": 1686228,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10810",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 13,
    "custom_is_automated": false,
    "custom_refs": "C152316",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre-requsite:\n\n1.Set the text code OSSF: http://images.tickets.com/styles/mytickets/consolidated_mytickets_test.css\n2.Set the text code: COMYUIE to true.\n3.Remove the HETABCO and HETABCO1 text codes from the ORG level and these text codes are not set at any level\n4. Create a patron P1 who has permission to create auction\n5. Create patrons(P2,P3,P4,..) to bid for auctions\n6. Set text codes BAUCCES, BAUCCET\r\nExpected Result:\r\nPre-requsite should be satisfied\r\n2. Launch the mytickets application\r\nExpected Result:\r\nMyTickets application should be launched\r\n3. Login using valid credentials:\na. Enter login name/ password\nb. Select the Account from the drop down list\r\nExpected Result:\r\nPatron should log in to the mytickets applicaton\r\n4. Select MyTickets button at the top of the page\r\nExpected Result:\r\nPatron should be shown the Tickets and Events page\r\n5. Selects tickets from View by Event and click Create Auction button\r\nExpected Result:\r\nPatron shoud be shown the 'Create Auction' page\r\n6. Verify the UI of the Create Auction page\r\nExpected Result:\r\nThe Create Auction page UI should be as per the PRD/ Wireframe\r\n7. In the 'Create Auction' page enter valid data for fields Auction Description, Auction Date,\nStarting Bid Price, Reserve Price, Minimum Bid Increment and Delivery method and click Create Auction\r\nExpected Result:\r\nAuction should successfully be created\r\n8. Verify the UI of the Auction Confirmation modal window\r\nExpected Result:\r\nAuction Confirmation modal UI should be as per PRD/ Wireframe\r\n9. Verify the auction creation confirmation email to the auction seller\r\nExpected Result:\r\nAuction seller should receive an auction creation confirmation email\r\n10. Verify the created auction offer in the History > Auction tab\r\nExpected Result:\r\nThe auction offer should be shown in the Aucitons You Have Created table with status 'Auction Offered'.\r\n11. Login as a patron to Bid for the auction created in the previous step (Patron P2)\n\na. enter valid user name/ password\nb. Select the account from the drop down list\r\nExpected Result:\r\nPatron should successfully logged in\r\n12. Select 'View Auctions' tab\r\nExpected Result:\r\nUser should be shown Auction lIsting page\r\n13. Verify the UI of the Auction listing pages\n\na. All Active Auctions (Event list/ Bid list pages)\nb. My Active Aucitons page\r\nExpected Result:\r\nAuction listing pages UI should be as per the PRD/ Wireframe\r\n14. Select the Description link of the event for making a bid\r\nExpected Result:\r\nPatron should be shown the Available Auctions list of the event\r\n15. Select Bid button\r\nExpected Result:\r\nPatorn should be shown a page to Place Bid for the auction offer\r\n16. Verify the UI of the 'Place Bid' page\r\nExpected Result:\r\nPlace Bid' page UI should be as per the PRD/ Wireframe\r\n17. Enter valid payment method, Bid Amount and click Place Bid button\r\nExpected Result:\r\nBid should be successfully placed\r\n18. Verify the UI of the Bid Confirmation modal window\r\nExpected Result:\r\nBid Confirmation' modal UI should be as per the PRD/ Wireframe\r\n19. Verify the offer status in the My Active Auctions page.\r\nExpected Result:\r\nIn the My Active Auctions page, the auciton offer should be displayed. The Current Bid column should be highlighted in green color (indicating highest bidder)\r\n20. Log out from the application\r\nExpected Result:\r\nThe user should be able to log out from the application.\r\n21. Auction creator patron cancel the auction offer\nLogin as auction seller patron\n\na. Select History tab > Auction\nb. Select the Offer # link of the auction offer to cancel the offer\nc. Click Cancel Offer button in the 'Offer Details' modal window\nd. Select Yes, Cancel Offer button to confirm cancel\r\nExpected Result:\r\nThe auction offer should be cancelled\r\n22. Verify the auction cancel mail of the highest bid patron\r\nExpected Result:\r\nOnce the auction is cancelled, the highest bidder patron should receive an auction cancel mail\r\n23. Verify the auction cancel mail content of the highest bid patron\r\nExpected Result:\r\nAuction cancel mail content should be as per the text code set\r\n24. Verify the auction cancel mail of the auction creator patron\r\nExpected Result:\r\nOnce the auction is cancelled, the auction creator patron should receive an auction cancel mail\r\n25. Verify the auction cancel mail content\r\nExpected Result:\r\nAuction cancel mail content should be as per the text code set\r\n26. Verify the Auction Offer status in the DB\n\nSELECT * FROM PVO.AUCTION WHERE AUCTION_ID= \nSELECT * FROM PVO.PATRON_CARD_INFO WHERE PATRON_ID= \r\nExpected Result:\r\nThe auction status should be 'Cancelled Auction'\r\n27. Verify the auction history in the BOTS\n\nTicket Services > Market Offer Search\r\nExpected Result:\r\nAuction status should be shown in the Market Offer Search\r\n28. In the PVO logs verify that no unexpected error is shown related to the completed auction transaction\r\nExpected Result:\r\nPVO logs should not display any unexpected error messages related to the completed auction transaction",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-requsite:\n\n1.Set the text code OSSF: http://images.tickets.com/styles/mytickets/consolidated_mytickets_test.css\n2.Set the text code: COMYUIE to true.\n3.Remove the HETABCO and HETABCO1 text codes from the ORG level and these text codes are not set at any level\n4. Create a patron P1 who has permission to create auction\n5. Create patrons(P2,P3,P4,..) to bid for auctions\n6. Set text codes BAUCCES, BAUCCET\r\n2. Launch the mytickets application\r\n3. Login using valid credentials:\na. Enter login name/ password\nb. Select the Account from the drop down list\r\n4. Select MyTickets button at the top of the page\r\n5. Selects tickets from View by Event and click Create Auction button\r\n6. Verify the UI of the Create Auction page\r\n7. In the 'Create Auction' page enter valid data for fields Auction Description, Auction Date,\nStarting Bid Price, Reserve Price, Minimum Bid Increment and Delivery method and click Create Auction\r\n8. Verify the UI of the Auction Confirmation modal window\r\n9. Verify the auction creation confirmation email to the auction seller\r\n10. Verify the created auction offer in the History > Auction tab\r\n11. Login as a patron to Bid for the auction created in the previous step (Patron P2)\n\na. enter valid user name/ password\nb. Select the account from the drop down list\r\n12. Select 'View Auctions' tab\r\n13. Verify the UI of the Auction listing pages\n\na. All Active Auctions (Event list/ Bid list pages)\nb. My Active Aucitons page\r\n14. Select the Description link of the event for making a bid\r\n15. Select Bid button\r\n16. Verify the UI of the 'Place Bid' page\r\n17. Enter valid payment method, Bid Amount and click Place Bid button\r\n18. Verify the UI of the Bid Confirmation modal window\r\n19. Verify the offer status in the My Active Auctions page.\r\n20. Log out from the application\r\n21. Auction creator patron cancel the auction offer\nLogin as auction seller patron\n\na. Select History tab > Auction\nb. Select the Offer # link of the auction offer to cancel the offer\nc. Click Cancel Offer button in the 'Offer Details' modal window\nd. Select Yes, Cancel Offer button to confirm cancel\r\n22. Verify the auction cancel mail of the highest bid patron\r\n23. Verify the auction cancel mail content of the highest bid patron\r\n24. Verify the auction cancel mail of the auction creator patron\r\n25. Verify the auction cancel mail content\r\n26. Verify the Auction Offer status in the DB\n\nSELECT * FROM PVO.AUCTION WHERE AUCTION_ID= \nSELECT * FROM PVO.PATRON_CARD_INFO WHERE PATRON_ID= \r\n27. Verify the auction history in the BOTS\n\nTicket Services > Market Offer Search\r\n28. In the PVO logs verify that no unexpected error is shown related to the completed auction transaction",
        "expected": "1. Pre-requsite should be satisfied\r\n2. MyTickets application should be launched\r\n3. Patron should log in to the mytickets applicaton\r\n4. Patron should be shown the Tickets and Events page\r\n5. Patron shoud be shown the 'Create Auction' page\r\n6. The Create Auction page UI should be as per the PRD/ Wireframe\r\n7. Auction should successfully be created\r\n8. Auction Confirmation modal UI should be as per PRD/ Wireframe\r\n9. Auction seller should receive an auction creation confirmation email\r\n10. The auction offer should be shown in the Aucitons You Have Created table with status 'Auction Offered'.\r\n11. Patron should successfully logged in\r\n12. User should be shown Auction lIsting page\r\n13. Auction listing pages UI should be as per the PRD/ Wireframe\r\n14. Patron should be shown the Available Auctions list of the event\r\n15. Patorn should be shown a page to Place Bid for the auction offer\r\n16. Place Bid' page UI should be as per the PRD/ Wireframe\r\n17. Bid should be successfully placed\r\n18. Bid Confirmation' modal UI should be as per the PRD/ Wireframe\r\n19. In the My Active Auctions page, the auciton offer should be displayed. The Current Bid column should be highlighted in green color (indicating highest bidder)\r\n20. The user should be able to log out from the application.\r\n21. The auction offer should be cancelled\r\n22. Once the auction is cancelled, the highest bidder patron should receive an auction cancel mail\r\n23. Auction cancel mail content should be as per the text code set\r\n24. Once the auction is cancelled, the auction creator patron should receive an auction cancel mail\r\n25. Auction cancel mail content should be as per the text code set\r\n26. The auction status should be 'Cancelled Auction'\r\n27. Auction status should be shown in the Market Offer Search\r\n28. PVO logs should not display any unexpected error messages related to the completed auction transaction"
      }
    ],
    "custom_jiras": "55.1"
  },
  {
    "id": 30716807,
    "title": "Verify that the highest bidder gets a mail when the auction offer closes with a bid amount less than the reserve price",
    "section_id": 1686228,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10810",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 14,
    "custom_is_automated": false,
    "custom_refs": "C152317",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre-requsite:\r\n\r\n1.Set the text code OSSF: http://images.tickets.com/styles/mytickets/consolidated_mytickets_test.css\r\n2.Set the text code: COMYUIE to true at the sub agency.\r\n3.Remove the HETABCO and HETABCO1 text codes from the ORG level and these text codes are not set at any level\r\n4. Create a patron P1 who has permission to create auction\r\n5. Create patrons(P2,P3,P4,..) to bid for auctions\r\n\r\n6. Set text codes ASCFES, ASCFEM, BAUCCES and BAUCCET",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch and Login to MyTickets with valid Primary Auction Seller\r\nExpected Result:\r\nUser should be logged in\r\n2. Select tickets from Inventory and Continue to Create a new auction offer\r\nExpected Result:\r\nUser should be able to select tickets from Inventory\r\n3. In the 'Create Auction' page enter valid data for fields Auction Description, Auction Date,\nStarting Bid Price, Reserve Price, Minimum Bid Increment and Delivery method and click Create Auction\r\nExpected Result:\r\nAuction should successfully be created\r\n4. Verify the UI of the 'Auction Creation Confirmation' modal window\r\nExpected Result:\r\nAuction Creation Confirmation' modal window UI should be as per the PRD/ Wireframe\r\n5. Verify the created auction offer in the History > Auction tab.\nVerify its UI\r\nExpected Result:\r\nNewly created auction offer should be shown in the History > Auction tab. The offer should be with status 'Auction Offered'\n\nAuction tab UI should be as per PRD/ Wireframe\r\n6. Verify the Auction Creation Confirmatin email to the seller patron\r\nExpected Result:\r\nSeller patron should receive an auction creation confirmatin email\r\n7. Login as a patron to Bid for the auction created in the previous step (Patron P2)\n\na. enter valid user name/ password\nb. Select the account from the drop down list\r\nExpected Result:\r\nPatron should successfully logged in\r\n8. Select 'View Auctions' tab\r\nExpected Result:\r\nUser should be shown Auction lIsting page\r\n9. Verify the UI of the Auction listing pages\n\na. All Active Auctions (Event list/ Bid list pages)\nb. My Active Aucitons page\r\nExpected Result:\r\nAuction listing pages UI should be as per the PRD/ Wireframe\r\n10. Select the Description link of the event for making a bid\r\nExpected Result:\r\nPatron should be shown the Available Auctions list of the event\r\n11. Select Bid button\r\nExpected Result:\r\nPatorn should be shown a page to Place Bid for the auction offer\r\n12. Verify the UI of the 'Place Bid' page\r\nExpected Result:\r\nPlace Bid' page UI should be as per the PRD/ Wireframe\r\n13. Enter a bid amount less than the reserve price, valid payment method and click Place Bid button\r\nExpected Result:\r\nBid should be successfully placed\r\n14. Verify the UI of the Bid Confirmation modal window\r\nExpected Result:\r\nBid Confirmation' modal UI should be as per the PRD/ Wireframe\r\n15. Verify the auction offer in the My Active Auctions page\r\nExpected Result:\r\nThe offer should be shown in the My Active Auctions page. The current bid should be highlighted in green color (indicating highest bidder).\r\n16. Log out from the application\r\nExpected Result:\r\nThe user should be able to log out from the application.\r\n17. Verify the highest bidder receives a mail that the auction is not won since the bid amount is less than the reserve price\r\nExpected Result:\r\nThe highest bidder should receive a mail that the auction is not won by the patron since the bid amount is less than the reserve price\r\n18. Verify the content of the mail\r\nExpected Result:\r\nMail content should be as per the text code set\r\n19. Verify the mail received by the auction seller patron\r\nExpected Result:\r\nThe auction seller patron should receive a mail that the auction is failed to sell\r\n20. Verify the auction history in the BOTS\n\nTicket Services > Market Offer Search\r\nExpected Result:\r\nAuction status should be shown in the Market Offer Search\r\n21. Verify the Auction status in the DB\n\nSELECT * FROM PVO.AUCTION WHERE AUCTION_ID= \nSELECT * FROM PVO.PATRON_CARD_INFO WHERE PATRON_ID= \r\nExpected Result:\r\nAuction status should be 'AD'\r\n22. In the PVO Logs verify that no unexpected error is shown related to the completed auction transaction\r\nExpected Result:\r\nPVO logs should not display any errors related to the completed auction transaction",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch and Login to MyTickets with valid Primary Auction Seller\r\n2. Select tickets from Inventory and Continue to Create a new auction offer\r\n3. In the 'Create Auction' page enter valid data for fields Auction Description, Auction Date,\nStarting Bid Price, Reserve Price, Minimum Bid Increment and Delivery method and click Create Auction\r\n4. Verify the UI of the 'Auction Creation Confirmation' modal window\r\n5. Verify the created auction offer in the History > Auction tab.\nVerify its UI\r\n6. Verify the Auction Creation Confirmatin email to the seller patron\r\n7. Login as a patron to Bid for the auction created in the previous step (Patron P2)\n\na. enter valid user name/ password\nb. Select the account from the drop down list\r\n8. Select 'View Auctions' tab\r\n9. Verify the UI of the Auction listing pages\n\na. All Active Auctions (Event list/ Bid list pages)\nb. My Active Aucitons page\r\n10. Select the Description link of the event for making a bid\r\n11. Select Bid button\r\n12. Verify the UI of the 'Place Bid' page\r\n13. Enter a bid amount less than the reserve price, valid payment method and click Place Bid button\r\n14. Verify the UI of the Bid Confirmation modal window\r\n15. Verify the auction offer in the My Active Auctions page\r\n16. Log out from the application\r\n17. Verify the highest bidder receives a mail that the auction is not won since the bid amount is less than the reserve price\r\n18. Verify the content of the mail\r\n19. Verify the mail received by the auction seller patron\r\n20. Verify the auction history in the BOTS\n\nTicket Services > Market Offer Search\r\n21. Verify the Auction status in the DB\n\nSELECT * FROM PVO.AUCTION WHERE AUCTION_ID= \nSELECT * FROM PVO.PATRON_CARD_INFO WHERE PATRON_ID= \r\n22. In the PVO Logs verify that no unexpected error is shown related to the completed auction transaction",
        "expected": "1. User should be logged in\r\n2. User should be able to select tickets from Inventory\r\n3. Auction should successfully be created\r\n4. Auction Creation Confirmation' modal window UI should be as per the PRD/ Wireframe\r\n5. Newly created auction offer should be shown in the History > Auction tab. The offer should be with status 'Auction Offered'\n\nAuction tab UI should be as per PRD/ Wireframe\r\n6. Seller patron should receive an auction creation confirmatin email\r\n7. Patron should successfully logged in\r\n8. User should be shown Auction lIsting page\r\n9. Auction listing pages UI should be as per the PRD/ Wireframe\r\n10. Patron should be shown the Available Auctions list of the event\r\n11. Patorn should be shown a page to Place Bid for the auction offer\r\n12. Place Bid' page UI should be as per the PRD/ Wireframe\r\n13. Bid should be successfully placed\r\n14. Bid Confirmation' modal UI should be as per the PRD/ Wireframe\r\n15. The offer should be shown in the My Active Auctions page. The current bid should be highlighted in green color (indicating highest bidder).\r\n16. The user should be able to log out from the application.\r\n17. The highest bidder should receive a mail that the auction is not won by the patron since the bid amount is less than the reserve price\r\n18. Mail content should be as per the text code set\r\n19. The auction seller patron should receive a mail that the auction is failed to sell\r\n20. Auction status should be shown in the Market Offer Search\r\n21. Auction status should be 'AD'\r\n22. PVO logs should not display any errors related to the completed auction transaction"
      }
    ],
    "custom_jiras": "55.1"
  },
  {
    "id": 30716808,
    "title": "Auction - no bid_verify auction creator gets e-mail that no bid",
    "section_id": 1686228,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10810",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 15,
    "custom_is_automated": false,
    "custom_refs": "C152318",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre-requsite:\r\n\r\n1.Set the text code OSSF: http://images.tickets.com/styles/mytickets/consolidated_mytickets_test.css\r\n2.Set the text code: COMYUIE to true.\r\n3.Remove the HETABCO and HETABCO1 text codes from the ORG level and these text codes are not set at any level\r\n4. Create a patron P1 who has permission to create auction",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the mytickets application\r\nExpected Result:\r\nMyTickets application should be launched\r\n2. Login using valid credentials: (Login with Primary Auction seller patron)\na. Enter login name/ password\nb. Select the Account from the drop down list\r\nExpected Result:\r\nPatron should log in to the mytickets applicaton\r\n3. Select MyTickets button at the top of the page\r\nExpected Result:\r\nPatron should be shown the Tickets and Events page\r\n4. Selects tickets from View by Event/ View By Order tab and click Create Auction button\r\nExpected Result:\r\nPatron shoud be shown the 'Create Auction' page\r\n5. In the 'Create Auction' page enter valid data for fields Auction Description, Auction Date,\nStarting Bid Price, Reserve Price, Minimum Bid Increment and Delivery method and click Create Auction\r\nExpected Result:\r\nAuction should successfully be created\r\n6. Login as a patron to Bid for the auction created in the previous step (Patron P2)\n\na. enter valid user name/ password\nb. Select the account from the drop down list\r\nExpected Result:\r\nPatron should successfully logged in\r\n7. Select 'View Auctions' tab\r\nExpected Result:\r\nUser should be shown Auction lIsting page\r\n8. Select the Description link of the event for making a bid\r\nExpected Result:\r\nPatron should be shown the Available Auctions list of the event\r\n9. Select Bid button\r\nExpected Result:\r\nPatorn should be shown a page to Place Bid for the auction offer\r\n10. Enter valid payment method, Bid Amount and click Place Bid button\r\nExpected Result:\r\nBid should be successfully placed\r\n11. Log out from the application\r\nExpected Result:\r\nThe user should be able to log out from the application.\r\n12. Verify the auction success mail for the highest bid patron\r\nExpected Result:\r\nOnce the auction is closed, the highest bidder patron should receive an auction success mail\r\n13. Verify the auction success mail\r\nExpected Result:\r\nAuction success mail UI should be as per the text code set\r\n14. Verify that the patron who created the auction offer gets a mail when the auction is won by a patron\r\nExpected Result:\r\nAuction initiator should get a mail when the auciton won by a patron\r\n15. Verify the mail content of the auction initiator\r\nExpected Result:\r\nThe mail content should be as per the text code set",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the mytickets application\r\n2. Login using valid credentials: (Login with Primary Auction seller patron)\na. Enter login name/ password\nb. Select the Account from the drop down list\r\n3. Select MyTickets button at the top of the page\r\n4. Selects tickets from View by Event/ View By Order tab and click Create Auction button\r\n5. In the 'Create Auction' page enter valid data for fields Auction Description, Auction Date,\nStarting Bid Price, Reserve Price, Minimum Bid Increment and Delivery method and click Create Auction\r\n6. Login as a patron to Bid for the auction created in the previous step (Patron P2)\n\na. enter valid user name/ password\nb. Select the account from the drop down list\r\n7. Select 'View Auctions' tab\r\n8. Select the Description link of the event for making a bid\r\n9. Select Bid button\r\n10. Enter valid payment method, Bid Amount and click Place Bid button\r\n11. Log out from the application\r\n12. Verify the auction success mail for the highest bid patron\r\n13. Verify the auction success mail\r\n14. Verify that the patron who created the auction offer gets a mail when the auction is won by a patron\r\n15. Verify the mail content of the auction initiator",
        "expected": "1. MyTickets application should be launched\r\n2. Patron should log in to the mytickets applicaton\r\n3. Patron should be shown the Tickets and Events page\r\n4. Patron shoud be shown the 'Create Auction' page\r\n5. Auction should successfully be created\r\n6. Patron should successfully logged in\r\n7. User should be shown Auction lIsting page\r\n8. Patron should be shown the Available Auctions list of the event\r\n9. Patorn should be shown a page to Place Bid for the auction offer\r\n10. Bid should be successfully placed\r\n11. The user should be able to log out from the application.\r\n12. Once the auction is closed, the highest bidder patron should receive an auction success mail\r\n13. Auction success mail UI should be as per the text code set\r\n14. Auction initiator should get a mail when the auciton won by a patron\r\n15. The mail content should be as per the text code set"
      }
    ],
    "custom_jiras": "55.1"
  },
  {
    "id": 30716809,
    "title": "Verify that print icon is not available in MTD MyTickets inventory when the ticket is printed via MPV.",
    "section_id": 1686229,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14825",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C152319",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": "1. Patron with tickets in the inventory should be available",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch MPV MyTickets link\r\nExpected Result:\r\nLink should launch successfully\r\n2. Go to invnetory and choose an event.\r\nExpected Result:\r\nEvent should get chosed\r\n3. Choose a ticket and Verify the barcode in the \nprint page.\r\nExpected Result:\r\nBarcode should get verified\r\n4. Complete any secondary action with that ticket.\r\nExpected Result:\r\nSecondary action should get completed\r\n5. Login to MTD MyTickets as same patron.\r\nExpected Result:\r\nPatron should login successfully\r\n6. GO to inventory and verify that the print icon \nis not available against the ticket that is \nprinted via MPV.\r\nExpected Result:\r\nPrint icon should not available for the ticket printed via MPV\r\n7. Verify SELF_SERVICE_PRINTED_DATE in \nPATRON_INVENTORY_SEAT table is null\r\nExpected Result:\r\nSELF_SERVICE_PRINTED_DATE in PATRON_INVENTORY_SEAT \ntable should be null",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch MPV MyTickets link\r\n2. Go to invnetory and choose an event.\r\n3. Choose a ticket and Verify the barcode in the \nprint page.\r\n4. Complete any secondary action with that ticket.\r\n5. Login to MTD MyTickets as same patron.\r\n6. GO to inventory and verify that the print icon \nis not available against the ticket that is \nprinted via MPV.\r\n7. Verify SELF_SERVICE_PRINTED_DATE in \nPATRON_INVENTORY_SEAT table is null",
        "expected": "1. Link should launch successfully\r\n2. Event should get chosed\r\n3. Barcode should get verified\r\n4. Secondary action should get completed\r\n5. Patron should login successfully\r\n6. Print icon should not available for the ticket printed via MPV\r\n7. SELF_SERVICE_PRINTED_DATE in PATRON_INVENTORY_SEAT \ntable should be null"
      }
    ],
    "custom_jiras": "62.2"
  },
  {
    "id": 30716810,
    "title": "Verify user is able to do self print for already self printed ticket",
    "section_id": 1686229,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14825",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C152320",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set MTSSPE(MYTIXX_SELF_SERVICE_PRINT_ENABLED) textcode to true at supplier level to enable Print Tickets option.\r\n2.Purchase Tickets from PVO for an existing patron.",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch PVO Mytickets link and Login using patron mentioned in pre-requisite.\r\nExpected Result:\r\nLogin should be successfull\r\n2. Choose Print Tickets as Ticket action\r\nExpected Result:\r\nPrint Tickets ticket action should be chosen\r\n3. Choose tickets for an event.\r\nExpected Result:\r\nTickets should be chosen\r\n4. Click on Continue.\r\nExpected Result:\r\nPatron should be navigated to Print Ticket page.\r\n5. Click on Print Tickets button \r\nExpected Result:\r\nPrint confirmation page should be displayed\r\n6. Click on the View & Print Tickets button\r\nExpected Result:\r\nTickets should be successfully printed.\r\n7. Go back to inventory \r\nExpected Result:\r\nUser should be navigated to the inventory page\r\n8. Verify the print icon against the ticket\r\nExpected Result:\r\nThe print icon should be available against the ticket that is printed.\r\n9. Confirm SELF_SERVICE_PRINTED_DATE in PATRON_INVENTORY_SEAT table is updated with last print date\r\nExpected Result:\r\nSELF_SERVICE_PRINTED_DATE in PATRON_INVENTORY_SEAT table is updated with last print date\r\n10. GO to inventory \r\nExpected Result:\r\nUser should be navigated to the inventory page\r\n11. Choose Print Tickets as Ticket action\r\nExpected Result:\r\nPrint Tickets ticket action should be chosen\r\n12. Choose the same ticket that is printed already.\r\nExpected Result:\r\nPreviously printed ticket should be chosen successfully\r\n13. Click on Continue.\r\nExpected Result:\r\nPatron should be navigated to Print Ticket page.\r\n14. Click on Print Tickets button \r\nExpected Result:\r\nPrint confirmation page should be displayed\r\n15. Click on the View & Print Tickets button\r\nExpected Result:\r\nTickets should be successfully printed.\r\n16. Go back to inventory\r\nExpected Result:\r\nUser should be navigated to the inventory page\r\n17. Verify the print icon against the ticket .\r\nExpected Result:\r\nThe print icon should be available against the \nticket that is printed.\r\n18. Hover over the print icon and verify that the date \nin the hovering text is the second printed date.\r\nExpected Result:\r\nDate in the hovering text should be the second \nprinted date.\r\n19. Confirm SELF_SERVICE_PRINTED_DATE in \nPATRON_INVENTORY_SEAT table is updated \nwith print date of the second print\r\nExpected Result:\r\nSELF_SERVICE_PRINTED_DATE in \nPATRON_INVENTORY_SEAT table should be \nupdated with print date of the second print",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PVO Mytickets link and Login using patron mentioned in pre-requisite.\r\n2. Choose Print Tickets as Ticket action\r\n3. Choose tickets for an event.\r\n4. Click on Continue.\r\n5. Click on Print Tickets button \r\n6. Click on the View & Print Tickets button\r\n7. Go back to inventory \r\n8. Verify the print icon against the ticket\r\n9. Confirm SELF_SERVICE_PRINTED_DATE in PATRON_INVENTORY_SEAT table is updated with last print date\r\n10. GO to inventory \r\n11. Choose Print Tickets as Ticket action\r\n12. Choose the same ticket that is printed already.\r\n13. Click on Continue.\r\n14. Click on Print Tickets button \r\n15. Click on the View & Print Tickets button\r\n16. Go back to inventory\r\n17. Verify the print icon against the ticket .\r\n18. Hover over the print icon and verify that the date \nin the hovering text is the second printed date.\r\n19. Confirm SELF_SERVICE_PRINTED_DATE in \nPATRON_INVENTORY_SEAT table is updated \nwith print date of the second print",
        "expected": "1. Login should be successfull\r\n2. Print Tickets ticket action should be chosen\r\n3. Tickets should be chosen\r\n4. Patron should be navigated to Print Ticket page.\r\n5. Print confirmation page should be displayed\r\n6. Tickets should be successfully printed.\r\n7. User should be navigated to the inventory page\r\n8. The print icon should be available against the ticket that is printed.\r\n9. SELF_SERVICE_PRINTED_DATE in PATRON_INVENTORY_SEAT table is updated with last print date\r\n10. User should be navigated to the inventory page\r\n11. Print Tickets ticket action should be chosen\r\n12. Previously printed ticket should be chosen successfully\r\n13. Patron should be navigated to Print Ticket page.\r\n14. Print confirmation page should be displayed\r\n15. Tickets should be successfully printed.\r\n16. User should be navigated to the inventory page\r\n17. The print icon should be available against the \nticket that is printed.\r\n18. Date in the hovering text should be the second \nprinted date.\r\n19. SELF_SERVICE_PRINTED_DATE in \nPATRON_INVENTORY_SEAT table should be \nupdated with print date of the second print"
      }
    ],
    "custom_jiras": "62.2"
  },
  {
    "id": 30716811,
    "title": "Verify when the ticket is printed via Selfprint, a printed ticket icon is displayed in order view of patrons inventory",
    "section_id": 1686229,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14825",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C152321",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set MTSSPE(MYTIXX_SELF_SERVICE_PRINT_ENABLED) textcode to true at supplier level to enable Print Tickets option.\r\n2.Purchase Tickets from PV for an existing patron.",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch PVO Mytickets link \r\nExpected Result:\r\nPVO Mytickets link should be launched successfully\r\n2. Login using patron mentioned in pre-requisite.\r\nExpected Result:\r\nLogin should be successful\r\n3. Choose Print Tickets as Ticket action.\r\nExpected Result:\r\nPrint Tickets should be chosen as the Ticket action.\r\n4. Choose tickets for an event.\r\nExpected Result:\r\nTickets should be chosen\r\n5. Click on Continue.\r\nExpected Result:\r\nPrint confirmation page should be displayed\r\n6. Click on Print tickets\r\nExpected Result:\r\nTickets should be printed successfully\r\n7. Now navigate back to inventory .\r\nExpected Result:\r\nUser should be navigated to the Inventory page\r\n8. Verify the print ticket icon is displayed \nagainst printed ticket in order view.\r\nExpected Result:\r\nPrint ticket icon should be displayed.\r\n9. Confirm SELF_SERVICE_PRINTED_DATE in PATRON_INVENTORY_SEAT table is updated with print date\r\nExpected Result:\r\nSELF_SERVICE_PRINTED_DATE in PATRON_INVENTORY_SEAT table should be updated with print date",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PVO Mytickets link \r\n2. Login using patron mentioned in pre-requisite.\r\n3. Choose Print Tickets as Ticket action.\r\n4. Choose tickets for an event.\r\n5. Click on Continue.\r\n6. Click on Print tickets\r\n7. Now navigate back to inventory .\r\n8. Verify the print ticket icon is displayed \nagainst printed ticket in order view.\r\n9. Confirm SELF_SERVICE_PRINTED_DATE in PATRON_INVENTORY_SEAT table is updated with print date",
        "expected": "1. PVO Mytickets link should be launched successfully\r\n2. Login should be successful\r\n3. Print Tickets should be chosen as the Ticket action.\r\n4. Tickets should be chosen\r\n5. Print confirmation page should be displayed\r\n6. Tickets should be printed successfully\r\n7. User should be navigated to the Inventory page\r\n8. Print ticket icon should be displayed.\r\n9. SELF_SERVICE_PRINTED_DATE in PATRON_INVENTORY_SEAT table should be updated with print date"
      }
    ],
    "custom_jiras": "62.2"
  },
  {
    "id": 30716812,
    "title": "Set MMISE390 to true and  Verify multiple events are  supported for mytickets self service printing",
    "section_id": 1686229,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12284",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C152322",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set pvo.mytixx_enable_self_service_print to true\r\n2.Set MTSSPE to true in Supplier level\r\n3. The setup of Mytickets Refreshed Ui should be in place\r\n4. A Mytickets patron should be available\r\n5. The patron should have tickets of different events available for self service printing\r\n6. Set MMISE390 to true",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to Mytickets account of the patron\r\nExpected Result:\r\nUser should be logged in successfully.\r\n2. Navigate to Mytickets page \r\nExpected Result:\r\nUser should be navigated to Mytickets page \r\n3. Choose Print Tickets as Ticket action\r\nExpected Result:\r\nPrint Tickets ticket action should be chosen\r\n4. Choose tickets from different events\r\nExpected Result:\r\nTickets should be chosen\r\n5. Click on Continue.\r\nExpected Result:\r\nPatron should be navigated to Print Ticket page.\r\n6. Click on Print Tickets button \r\nExpected Result:\r\nPrint confirmation page should be displayed\r\n7. Click on the View & Print Tickets button\r\nExpected Result:\r\nTickets should be successfully printed.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to Mytickets account of the patron\r\n2. Navigate to Mytickets page \r\n3. Choose Print Tickets as Ticket action\r\n4. Choose tickets from different events\r\n5. Click on Continue.\r\n6. Click on Print Tickets button \r\n7. Click on the View & Print Tickets button",
        "expected": "1. User should be logged in successfully.\r\n2. User should be navigated to Mytickets page \r\n3. Print Tickets ticket action should be chosen\r\n4. Tickets should be chosen\r\n5. Patron should be navigated to Print Ticket page.\r\n6. Print confirmation page should be displayed\r\n7. Tickets should be successfully printed."
      }
    ],
    "custom_jiras": "57"
  },
  {
    "id": 30716813,
    "title": "Set MMISE390 to false and  Verify multiple events are not supported for mytickets self service printing",
    "section_id": 1686229,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12284",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C152323",
    "custom_pvo_pvodc_category": 8,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set pvo.mytixx_enable_self_service_print to true\r\n2.Set MTSSPE to true in Supplier level\r\n3. The setup of Mytickets Refreshed Ui should be in place\r\n4. A Mytickets patron should be available\r\n5. The patron should have tickets of different events available for self service printing\r\n6. Set MMISE390 to false",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to Mytickets account of the patron\r\nExpected Result:\r\nUser should be logged in successfully.\r\n2. Navigate to Mytickets page \r\nExpected Result:\r\nUser should be navigated to Mytickets page \r\n3. Choose Print Tickets as Ticket action\r\nExpected Result:\r\nPrint Tickets ticket action should be chosen\r\n4. Choose tickets from different events\r\nExpected Result:\r\nTickets should be chosen\r\n5. Click on Continue.\r\nExpected Result:\r\nUser should be shown proper error message indicating that tickets of multiple events cannot be self printed together\n\nError message::\"You cannot choose tickets from multiple events in one transaction. Please select tickets from a single event and continue\"",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to Mytickets account of the patron\r\n2. Navigate to Mytickets page \r\n3. Choose Print Tickets as Ticket action\r\n4. Choose tickets from different events\r\n5. Click on Continue.",
        "expected": "1. User should be logged in successfully.\r\n2. User should be navigated to Mytickets page \r\n3. Print Tickets ticket action should be chosen\r\n4. Tickets should be chosen\r\n5. User should be shown proper error message indicating that tickets of multiple events cannot be self printed together\n\nError message::\"You cannot choose tickets from multiple events in one transaction. Please select tickets from a single event and continue\""
      }
    ],
    "custom_jiras": "57"
  },
  {
    "id": 30716814,
    "title": "Verify the Renewal orders are displayed in the \"To Do\" list page when SRMU text code is not set (Default is true)",
    "section_id": 1686230,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-1111",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C152324",
    "custom_pvo_pvodc_category": 11,
    "custom_pvocodelines": null,
    "custom_preconds": "1. Have a Patron with Renewable orders for event and Packages \r\n2.Make sure that SRMU text code is not set in any levels",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MyTickets link\r\nExpected Result:\r\nUser is landed on the MyTickets SingUp/Login page\r\n2. Login as the above Patron\r\nExpected Result:\r\nUser is landed to ToDo list page\r\n3. Verify the Renewal orders are displayed in \"To Do\" list\r\nExpected Result:\r\nThe Renewal orders are displayed in \"To Do\" list",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MyTickets link\r\n2. Login as the above Patron\r\n3. Verify the Renewal orders are displayed in \"To Do\" list",
        "expected": "1. User is landed on the MyTickets SingUp/Login page\r\n2. User is landed to ToDo list page\r\n3. The Renewal orders are displayed in \"To Do\" list"
      }
    ],
    "custom_jiras": null
  },
  {
    "id": 30716815,
    "title": "Verify by setting the apply available patron credits during claim to Pre-Apply for cash receipts when the user has multiple orders",
    "section_id": 1686231,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C152349",
    "custom_pvo_pvodc_category": 11,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Create a patron in PV application\nAdd credits to the patron for a particular supplier\r\nExpected Result:\r\nUser should be able to complete the pre-requisite successfully\r\n2. Launch and Login PV application\r\nExpected Result:\r\nUser should be able to login PV application successfully\r\n3. Navigate to the Supplier administration\nSelect the Event groups tab\nSelect Renewal group from the dropdown\nClick New button\r\nExpected Result:\r\nRenewal group options to create a new renewal group should be displayed\r\n4. Enter the required details to create renewal group\nSelect  Consume credit during online Renewal as pre-apply\nClick Apply changes\r\nExpected Result:\r\nUser should be able to create a renewals group successfully\r\n5. Create  packages with the above renewal group\r\nExpected Result:\r\nUser should be able to create the package successfully\r\n6. Navigate to ticket sales\nPerform reservations for the above packages with the patron in pre-requisite\r\nExpected Result:\r\nUser should be able to perform the reservations successfully\r\n7. Launch the mytickets application\nLogin using the patron mentioned above\nVerify the orders in To do list page\r\nExpected Result:\r\nThe above created orders should be displayed\r\n8. Select the orders and click renew button & Navigate to the payment page\r\nExpected Result:\r\nUser should navigate to the renewal cart/payments page\r\n9. Verify the display of the credits in the payment page\r\nExpected Result:\r\nThe Account credit should be pre applied & will be on Payoff items.\n\nText display will be : â€œACPAâ€� - APPLY_CREDITS_PRE_APPLY - An account credit of {0} has been pre-applied to the items in this cart and the installments have been calculated on the remaining balance after your credit was applied.\r\n10. Complete the Renewals Payment \r\nExpected Result:\r\nThe Renewal should be completed by Account credit\r\n11. \nVerify the DB\n\nSELECT * FROM pvo.payment where order_id =xxxx\nSELECT * FROM pvo.patron_card_info where patron_id= xxxxx\nselect * from pvo.PATRON_ADDRESS where PATRON_ID= xxxx\nselect * from pvo.OFFER_SEAT where ORDER_ID=xxxx\nselect * from pvo.TDC_ORDER where Order_ID=xxxx\n\n\n\n\r\nExpected Result:\r\nAll the database should be verified, Verify the Patron Address table is still having the account address and not replaced with the Delivery/payment method address added",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Create a patron in PV application\nAdd credits to the patron for a particular supplier\r\n2. Launch and Login PV application\r\n3. Navigate to the Supplier administration\nSelect the Event groups tab\nSelect Renewal group from the dropdown\nClick New button\r\n4. Enter the required details to create renewal group\nSelect  Consume credit during online Renewal as pre-apply\nClick Apply changes\r\n5. Create  packages with the above renewal group\r\n6. Navigate to ticket sales\nPerform reservations for the above packages with the patron in pre-requisite\r\n7. Launch the mytickets application\nLogin using the patron mentioned above\nVerify the orders in To do list page\r\n8. Select the orders and click renew button & Navigate to the payment page\r\n9. Verify the display of the credits in the payment page\r\n10. Complete the Renewals Payment \r\n11. \nVerify the DB\n\nSELECT * FROM pvo.payment where order_id =xxxx\nSELECT * FROM pvo.patron_card_info where patron_id= xxxxx\nselect * from pvo.PATRON_ADDRESS where PATRON_ID= xxxx\nselect * from pvo.OFFER_SEAT where ORDER_ID=xxxx\nselect * from pvo.TDC_ORDER where Order_ID=xxxx",
        "expected": "1. User should be able to complete the pre-requisite successfully\r\n2. User should be able to login PV application successfully\r\n3. Renewal group options to create a new renewal group should be displayed\r\n4. User should be able to create a renewals group successfully\r\n5. User should be able to create the package successfully\r\n6. User should be able to perform the reservations successfully\r\n7. The above created orders should be displayed\r\n8. User should navigate to the renewal cart/payments page\r\n9. The Account credit should be pre applied & will be on Payoff items.\n\nText display will be : â€œACPAâ€� - APPLY_CREDITS_PRE_APPLY - An account credit of {0} has been pre-applied to the items in this cart and the installments have been calculated on the remaining balance after your credit was applied.\r\n10. The Renewal should be completed by Account credit\r\n11. All the database should be verified, Verify the Patron Address table is still having the account address and not replaced with the Delivery/payment method address added"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716816,
    "title": "Verify by setting the apply available patron credits during claim to NOT ALLOWED",
    "section_id": 1686231,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C152350",
    "custom_pvo_pvodc_category": 11,
    "custom_pvocodelines": null,
    "custom_preconds": "Create a patron in PV application\r\nAdd credits to the patron for a particular supplier\r\nLaunch and Login PV application\r\nNavigate to the Supplier administration\r\nSelect the Event groups tab\r\nSelect Renewal group from the dropdown\r\nClick New button\r\nEnter the required details to create renewal group\r\nSelect  Consume credit during online Renewal as NOT ALLOWED\r\nClick Apply changes\r\nCreate  packages with the above renewal group and associate manual paymnet plans to the package\r\nNavigate to ticket sales\r\nPerform reservation for the above package with the patron in pre-requisite such that the cart amount exceeds the credit applied",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the mytickets application\nLogin using the patron mentioned above\nVerify the orders in To do list page\r\nExpected Result:\r\nThe above created orders should be displayed\r\n2. Select the orders and click renew button\r\nExpected Result:\r\nUser should navigate to the Delivery methods page\r\n3. Select Delivery method other than the default\r\nExpected Result:\r\nThe alternate delivery method should be chosen, say, MAIL\r\n4. Verify the display of the credits in the payment page\n\nSelect manual payment radio button\r\nExpected Result:\r\nUser should be promopted for the user to opt-in/out of applying eligible credits in the cart\r\n5. Select opt in from the prompt\nCheck the check box for full optional\nThe installment schedule shall be updated to reflect application of the credit.\r\nExpected Result:\r\nVerify the message from textcdoe - ACFOPTIN is displayed Ãº A credit has been applied to the items in this cart in the amount of {1}.  The installment schedule has been updated to reflect the reduced balance of this cart.\r\n6. Complete the transaction and verify the installment amount\r\nExpected Result:\r\nThe installment amount should be updated subjected to the amount paid via credit\r\n7. Verify the Payrenewal call is passed from PVO to PV\r\nExpected Result:\r\nPayrenewal call should be initiated with correct payment method details to PV\r\n8. Verify the DB\n\nSELECT * FROM pvo.payment where order_id =xxxx\nSELECT * FROM pvo.patron_card_info where patron_id= xxxxx\nselect * from pvo.PATRON_ADDRESS where PATRON_ID= xxxx\nselect * from pvo.OFFER_SEAT where ORDER_ID=xxxx\nselect * from pvo.TDC_ORDER where Order_ID=xxxx\r\nExpected Result:\r\nAll the database should be verified, Verify the Patron Address table is still having the account address and not replaced with the Delivery/payment method address added",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the mytickets application\nLogin using the patron mentioned above\nVerify the orders in To do list page\r\n2. Select the orders and click renew button\r\n3. Select Delivery method other than the default\r\n4. Verify the display of the credits in the payment page\n\nSelect manual payment radio button\r\n5. Select opt in from the prompt\nCheck the check box for full optional\nThe installment schedule shall be updated to reflect application of the credit.\r\n6. Complete the transaction and verify the installment amount\r\n7. Verify the Payrenewal call is passed from PVO to PV\r\n8. Verify the DB\n\nSELECT * FROM pvo.payment where order_id =xxxx\nSELECT * FROM pvo.patron_card_info where patron_id= xxxxx\nselect * from pvo.PATRON_ADDRESS where PATRON_ID= xxxx\nselect * from pvo.OFFER_SEAT where ORDER_ID=xxxx\nselect * from pvo.TDC_ORDER where Order_ID=xxxx",
        "expected": "1. The above created orders should be displayed\r\n2. User should navigate to the Delivery methods page\r\n3. The alternate delivery method should be chosen, say, MAIL\r\n4. User should be promopted for the user to opt-in/out of applying eligible credits in the cart\r\n5. Verify the message from textcdoe - ACFOPTIN is displayed Ãº A credit has been applied to the items in this cart in the amount of {1}.  The installment schedule has been updated to reflect the reduced balance of this cart.\r\n6. The installment amount should be updated subjected to the amount paid via credit\r\n7. Payrenewal call should be initiated with correct payment method details to PV\r\n8. All the database should be verified, Verify the Patron Address table is still having the account address and not replaced with the Delivery/payment method address added"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716817,
    "title": "Verify that patron is shown default ACDAAZ text when due now is zero and applied credit is zero",
    "section_id": 1686231,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13145",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C152351",
    "custom_pvo_pvodc_category": 11,
    "custom_pvocodelines": null,
    "custom_preconds": "1. Create a patron in PV application with no account credit\r\n2. Create a package with renewal group having Consume Credits - Due Amount Auto and patron perform a reservation\r\n3. Do not set text code ACDAAZ",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the mytickets application\nLogin using the patron mentioned above\nVerify the order in To do list page\r\nExpected Result:\r\nThe above created order should be displayed\r\n2. a. select the order\nb. select a payment plan having no installments due & Click on renew\r\nExpected Result:\r\nUser should be navigated to the Delivery methods page\r\n3. Select an alternate delivery method\r\nExpected Result:\r\nDelivery method should be selected from the drop down\r\n4. Verify the account credit message shown under Installments section\r\nExpected Result:\r\nApplication should display the default value of text code ACDAAZ (Your account has a credit of {0} which is eligible for the items in this cart but there are no payments due today.)",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the mytickets application\nLogin using the patron mentioned above\nVerify the order in To do list page\r\n2. a. select the order\nb. select a payment plan having no installments due & Click on renew\r\n3. Select an alternate delivery method\r\n4. Verify the account credit message shown under Installments section",
        "expected": "1. The above created order should be displayed\r\n2. User should be navigated to the Delivery methods page\r\n3. Delivery method should be selected from the drop down\r\n4. Application should display the default value of text code ACDAAZ (Your account has a credit of {0} which is eligible for the items in this cart but there are no payments due today.)"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716818,
    "title": "Verify that patron is shown default ACDAA text when due now is non zero and applied credit is non zero",
    "section_id": 1686231,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13145",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C152352",
    "custom_pvo_pvodc_category": 11,
    "custom_pvocodelines": null,
    "custom_preconds": "Prerequisite:\r\n\r\n1. Create a patron in PV application with an account credit enough to pay a due installment\r\n2. Create a package with renewal group having Consume Credits - Due Amount Auto and patron perform a reservation\r\n3. Do not set text code ACDAA",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the mytickets application\nLogin using the patron mentioned above\nVerify the order in To do list page\r\nExpected Result:\r\nThe above created order should be displayed\r\n2. a. Select the order\nb. Select a payment plan having an installment due\r\nExpected Result:\r\nUser should be navigated to the Multiple Delivery method selection page\r\n3. Select one alternative Delivery method from the Delivery methods drop down\r\nExpected Result:\r\nThe Delivery method should be chosen and is different from Default delivery method\r\n4. Verify the account credit message shown under Installments section\r\nExpected Result:\r\nApplication should display the default value of text code ACDAA (Your account has a credit of {0} which is eligible for items in this cart. {1} of this credit has been applied to the current due amount.)",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the mytickets application\nLogin using the patron mentioned above\nVerify the order in To do list page\r\n2. a. Select the order\nb. Select a payment plan having an installment due\r\n3. Select one alternative Delivery method from the Delivery methods drop down\r\n4. Verify the account credit message shown under Installments section",
        "expected": "1. The above created order should be displayed\r\n2. User should be navigated to the Multiple Delivery method selection page\r\n3. The Delivery method should be chosen and is different from Default delivery method\r\n4. Application should display the default value of text code ACDAA (Your account has a credit of {0} which is eligible for items in this cart. {1} of this credit has been applied to the current due amount.)"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716819,
    "title": "Verify ACFOPTIN text is displayed instead of ACFOPIF text,When using a pay in full payment plan with optional credits and not enough credit to cover the transaction",
    "section_id": 1686231,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13285",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C152353",
    "custom_pvo_pvodc_category": 11,
    "custom_pvocodelines": null,
    "custom_preconds": "PV Side setup:\r\n\r\nCreate a pay in full payment plan in PV\r\n\r\n1.Log into PV application\r\n2.Navigate Ticketing setup->Supplier administration\r\n3.Select Payment plan tab\r\n4.Click on New button\r\n5.Fill in all required and desired fields on Payment plan creation page\r\n6.Add only one installment under Installment setup\r\n7.Click on Apply changes\r\n\r\nCreate a renewal group\r\n\r\n1.Log into PV application\r\n2.Navigate Ticketing setup->Supplier administration\r\n3.Select Event group tab\r\n4.Select 'Renewal group' from Event Group Type drop down\r\n5.Click on New button\r\n6.Fill in all required and desired fields \r\n7.Select 'Full-Optional' from Consume Credit During Online Renewal  drop down\r\n8.Click on Apply changes\r\n\r\nAdd a package to this renewal group\r\n\r\n1.In PV, navigate to Ticketing setup->Package Administration\r\n2.Search for the package\r\n3.Under 'Renewal Group' section ,select the above created renewal group \r\n4.Click on Apply changes\r\n\r\nCreate patron credit\r\n\r\n1.In PV, navigate to Ticketing ->Patron Administration\r\n2.Search for the patron\r\n3.Select Account Balance tab\r\n4.Click on Add credit button\r\n5.Fill in all required fields in 'Add Account Credit' modal\r\n6.Click on OK\r\n7.Payment page is displayed\r\n8.Select the payment method and complete the transaction\r\n\r\n\r\nCreate a recevable for this patron for the package mentioned in step 3 such that the available credit for the patron is less than the total amount",
    "custom_test_purpose": null,
    "custom_steps": "1. Log in to Mytickets account of the patron\r\nExpected Result:\r\nPatron is logged in\r\n2. Navigate to To Do List\r\nExpected Result:\r\nThe recevable order is displayed in To Do list\r\n3. Select the order for payment & payment plan with Due Now & Click on renew\r\nExpected Result:\r\nThe Multiple delivery page should be displayed\r\n4. Select the Alternate delivery method & Click on Continue\r\nExpected Result:\r\nThe user should be navigated to the Payment page\r\n5. 1.Select to use the credits\n2.Verify ACFOPTIN message is displayed and not ACFOPIF message\r\nExpected Result:\r\nThe below message is displayed\n A credit has been applied to the items in this cart in the amount of {1}.  The installment schedule has been updated to reflect the reduced balance of this cart.  If you do not wish for the credit to be applied to this cart, deselect the checkbox.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Log in to Mytickets account of the patron\r\n2. Navigate to To Do List\r\n3. Select the order for payment & payment plan with Due Now & Click on renew\r\n4. Select the Alternate delivery method & Click on Continue\r\n5. 1.Select to use the credits\n2.Verify ACFOPTIN message is displayed and not ACFOPIF message",
        "expected": "1. Patron is logged in\r\n2. The recevable order is displayed in To Do list\r\n3. The Multiple delivery page should be displayed\r\n4. The user should be navigated to the Payment page\r\n5. The below message is displayed\n A credit has been applied to the items in this cart in the amount of {1}.  The installment schedule has been updated to reflect the reduced balance of this cart.  If you do not wish for the credit to be applied to this cart, deselect the checkbox."
      }
    ],
    "custom_jiras": "59.1"
  },
  {
    "id": 30716820,
    "title": "Verify ACPIF text is displayed when renewal group is set for Full-Auto and the available credit amount exceeds the order total",
    "section_id": 1686231,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13285",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C152354",
    "custom_pvo_pvodc_category": 11,
    "custom_pvocodelines": null,
    "custom_preconds": "PV Side setup:\r\n\r\nCreate a pay in full payment plan in PV\r\n\r\n1.Log into PV application\r\n2.Navigate Ticketing setup->Supplier administration\r\n3.Select Payment plan tab\r\n4.Click on New button\r\n5.Fill in all required and desired fields on Payment plan creation page\r\n6.Add only one installment under Installment setup\r\n7.Click on Apply changes\r\n\r\nAdd a package to this renewal group\r\n\r\n1.In PV, navigate to Ticketing setup->Package Administration\r\n2.Search for the package\r\n3.Under 'Renewal Group' section ,select the above created renewal group \r\n4.Click on Apply changes\r\n\r\nCreate a renewal group\r\n\r\n1.Log into PV application\r\n2.Navigate Ticketing setup->Supplier administration\r\n3.Select Event group tab\r\n4.Select 'Renewal group' from Event Group Type drop down\r\n5.Click on New button\r\n6.Fill in all required and desired fields \r\n7.Select 'Full-Auto' from Consume Credit During Online Renewal  drop down\r\n8.Click on Apply changes\r\n\r\nCreate patron credit\r\n\r\n1.In PV, navigate to Ticketing ->Patron Administration\r\n2.Search for the patron\r\n3.Select Account Balance tab\r\n4.Click on Add credit button\r\n5.Fill in all required fields in 'Add Account Credit' modal\r\n6.Click on OK\r\n7.Payment page is displayed\r\n8.Select the payment method and complete the transaction\r\n\r\nCreate a recevable for this patron for the package mentioned in step 3 such that the available credit amount exceeds the order total",
    "custom_test_purpose": null,
    "custom_steps": "1. Log in to Mytickets account of the patron\r\nExpected Result:\r\nPatron is logged in\r\n2. Navigate to To Do List\r\nExpected Result:\r\nThe recevable order is displayed in To Do list\r\n3. Select the order for payment ,Payment plan with Due Now & Click on renew\r\nExpected Result:\r\nThe user should be navigated to Multiple delivery page\r\n4. Select the Delivery method & Continue\r\nExpected Result:\r\nThe user should be navigated to payment page\r\n5. Verify ACPIF message is displayed near to the Account credit checkbox\r\nExpected Result:\r\nThe below message is displayed\n   Your account has {0} in credits eligible for this cart and {1} has been applied to this transaction. The orders in this cart have been paid in full and no further payment is required.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Log in to Mytickets account of the patron\r\n2. Navigate to To Do List\r\n3. Select the order for payment ,Payment plan with Due Now & Click on renew\r\n4. Select the Delivery method & Continue\r\n5. Verify ACPIF message is displayed near to the Account credit checkbox",
        "expected": "1. Patron is logged in\r\n2. The recevable order is displayed in To Do list\r\n3. The user should be navigated to Multiple delivery page\r\n4. The user should be navigated to payment page\r\n5. The below message is displayed\n   Your account has {0} in credits eligible for this cart and {1} has been applied to this transaction. The orders in this cart have been paid in full and no further payment is required."
      }
    ],
    "custom_jiras": "59.1"
  },
  {
    "id": 30716821,
    "title": "Verify ACFOPIF text is displayed when renewal group is set for Full-Optional, the patron opted-in and the available credit amount exceeds the order total",
    "section_id": 1686231,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13285",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_refs": "C152355",
    "custom_pvo_pvodc_category": 11,
    "custom_pvocodelines": null,
    "custom_preconds": "PV Side setup:\r\n\r\nCreate a pay in full payment plan in PV\r\n\r\n1.Log into PV application\r\n2.Navigate Ticketing setup->Supplier administration\r\n3.Select Payment plan tab\r\n4.Click on New button\r\n5.Fill in all required and desired fields on Payment plan creation page\r\n6.Add only one installment under Installment setup\r\n7.Click on Apply changes\r\n\r\nCreate a renewal group\r\n\r\n1.Log into PV application\r\n2.Navigate Ticketing setup->Supplier administration\r\n3.Select Event group tab\r\n4.Select 'Renewal group' from Event Group Type drop down\r\n5.Click on New button\r\n6.Fill in all required and desired fields \r\n7.Select 'Full-Optional' from Consume Credit During Online Renewal  drop down\r\n8.Click on Apply changes\r\n\r\nAdd a package to this renewal group\r\n\r\n1.In PV, navigate to Ticketing setup->Package Administration\r\n2.Search for the package\r\n3.Under 'Renewal Group' section ,select the above created renewal group \r\n4.Click on Apply changes\r\n\r\nCreate patron credit\r\n\r\n1.In PV, navigate to Ticketing ->Patron Administration\r\n2.Search for the patron\r\n3.Select Account Balance tab\r\n4.Click on Add credit button\r\n5.Fill in all required fields in 'Add Account Credit' modal\r\n6.Click on OK\r\n7.Payment page is displayed\r\n8.Select the payment method and complete the transaction\r\n\r\nCreate a recevable for this patron for the package mentioned in such a way that the available credit amount exceeds the order total",
    "custom_test_purpose": null,
    "custom_steps": "1. Log in to Mytickets account of the patron\r\nExpected Result:\r\nPatron is logged in\r\n2. Navigate to To Do List\r\nExpected Result:\r\nThe recevable order is displayed in To Do list\r\n3. Select the order for payment & Navigate to the Delivery method page\r\nExpected Result:\r\nDelivery method drop down should be displayed\r\n4. Click on Continue\r\nExpected Result:\r\nUser should be navigated to the Payment page\r\n5. 1.Select to use the credits\n2.Verify ACFOPIF message is displayed and not ACFOPIF message\r\nExpected Result:\r\nThe below message is displayed\nYour account had {0} in credits eligible for this cart and {1} has been applied to this transaction.  The orders in this cart have been paid in full and no further payment is required. If you do not wish for the credit to be applied to this cart, deselect the checkbox.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Log in to Mytickets account of the patron\r\n2. Navigate to To Do List\r\n3. Select the order for payment & Navigate to the Delivery method page\r\n4. Click on Continue\r\n5. 1.Select to use the credits\n2.Verify ACFOPIF message is displayed and not ACFOPIF message",
        "expected": "1. Patron is logged in\r\n2. The recevable order is displayed in To Do list\r\n3. Delivery method drop down should be displayed\r\n4. User should be navigated to the Payment page\r\n5. The below message is displayed\nYour account had {0} in credits eligible for this cart and {1} has been applied to this transaction.  The orders in this cart have been paid in full and no further payment is required. If you do not wish for the credit to be applied to this cart, deselect the checkbox."
      }
    ],
    "custom_jiras": "59.1"
  },
  {
    "id": 30716822,
    "title": "Verify if the consume credit is set to Full auto and the patron has enough credits to cover the entire first installment and some of the second installment, ACFA is displayed when a manual payment plan is choosen",
    "section_id": 1686231,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13460",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_refs": "C152356",
    "custom_pvo_pvodc_category": 11,
    "custom_pvocodelines": null,
    "custom_preconds": "1.A Two Installment manual payment plan is set \r\nup in PV\r\n2.Consume credit during online renewal is set as \r\n'Full Auto for the Renewal group\r\n3.Add the package to this renewal group\r\n4.Do a reservation for the package\r\n5.The patron should have enough credit to cover \r\nthe entire first installment and some of the \r\nsecond installment",
    "custom_test_purpose": null,
    "custom_steps": "1. Log in to Mytixx account of the patron\r\nExpected Result:\r\nPatron is logged in\r\n2. Select To Do List tab->Pending renewals tab\r\nExpected Result:\r\nPending renewals page is displayed\r\n3. Verify the GetRenewalorder API from Splunk\r\nExpected Result:\r\nOnce the Patron log in the Get Renewal Order call will be generated from PVO to PV. Verify\n\n1. Order number\n2. Offer name , Section and rows\n3.Offer price and Service charges\n4.Payment plan in API\r\n4. Verify the Top navigation \"To Do List\" button  is highlighted with total available items in To Do List\r\nExpected Result:\r\nIf one receivable order is created , then the count should be displayed in To DO List Top navigation as 1.\r\n5. Verify the UI of the Renewal_Receivable panel\r\nExpected Result:\r\nIt should contain:\n\n1.Checkbox for making select all items/individual offer\nOrder ID from ProVenue\n2. Package Eventlist name (Event name if you created offer with Event) under Pending items header\n3.Section Row and Seats (If multiple seats are there it is sepearted with /)\n4.Payment options drop downs with associated Payment plans (Default Payment plan drop down before selection as \" Select Payment Plan\") \n5.Under Financial header Order Total (Ticket price+Service charges) will be displayed with Currency symbol ($ for dollar)\r\n6. Select the Required Payment plan (created in Prerequisite) from the Drop down for the offer\r\nExpected Result:\r\nThe Payment plan should be selected and verify the checkbox of the corresponding offer is checked.\r\n7. Now Click on renew button\r\nExpected Result:\r\nThe user should be navigated to Multiple delivery page\r\n8. Verify the Default value in the delivery drop down\r\nExpected Result:\r\nThe default delivery should be the one we used to create Recievable in PV.\r\n9. Change the Delivery method , say to MAIL\r\nExpected Result:\r\n The delivery method should be updated to \"MAIL\" in financial summary\r\n10. Now Clcik on Continue and navigate to the Payment page\r\nExpected Result:\r\nThe Payment should be displayed with apckage event list details, Payment plan, Installment table,card drop down, Installments (If enabled), email and confimation email, Seat details with fiancial summary, Terms and conditions etc\r\n11. Verify the Delivery details,  address is passed in Get renewalcart request from PVO\r\nExpected Result:\r\nThe address info should be passed via GetRenewalcart API to PV\r\n12. Verify ACFA message  is displayed on \nrenewal payment page\r\nExpected Result:\r\nACFA message  is displayed on renewal \npayment page\r\n13. Complete the transaction and confirm that \n1. 1st installment is paid from patron credit\n2. Some of the 2nd installment is paid from the \ncredit\n3. The remaining 2nd installment has to be paid \nfrom credit card\r\nExpected Result:\r\n1. 1st installment is paid from patron credit\n2. Some of the 2nd installment is paid from the \ncredit\n3. The remaining 2nd installment has to be paid \nfrom credit card\r\n14. Verify the Payrenewal call is passed from PVO to PV\r\nExpected Result:\r\nPayrenewal call should be initiated with correct payment method details to PV\r\n15. Navigate to Scheduled Payments tab in To Do List Page\r\nExpected Result:\r\nThe Scheduled payment done should be displayed in a tabular format\r\n16. Verify the DB\n\nSELECT * FROM pvo.payment where order_id =xxxx\nSELECT * FROM pvo.patron_card_info where patron_id= xxxxx\nselect * from pvo.PATRON_ADDRESS where PATRON_ID= xxxx\nselect * from pvo.OFFER_SEAT where ORDER_ID=xxxx\nselect * from pvo.TDC_ORDER where Order_ID=xxxx\r\nExpected Result:\r\nAll the database should be verified, Verify the Patron Address table is still having the account address and not replaced with the Delivery/payment method address added",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Log in to Mytixx account of the patron\r\n2. Select To Do List tab->Pending renewals tab\r\n3. Verify the GetRenewalorder API from Splunk\r\n4. Verify the Top navigation \"To Do List\" button  is highlighted with total available items in To Do List\r\n5. Verify the UI of the Renewal_Receivable panel\r\n6. Select the Required Payment plan (created in Prerequisite) from the Drop down for the offer\r\n7. Now Click on renew button\r\n8. Verify the Default value in the delivery drop down\r\n9. Change the Delivery method , say to MAIL\r\n10. Now Clcik on Continue and navigate to the Payment page\r\n11. Verify the Delivery details,  address is passed in Get renewalcart request from PVO\r\n12. Verify ACFA message  is displayed on \nrenewal payment page\r\n13. Complete the transaction and confirm that \n1. 1st installment is paid from patron credit\n2. Some of the 2nd installment is paid from the \ncredit\n3. The remaining 2nd installment has to be paid \nfrom credit card\r\n14. Verify the Payrenewal call is passed from PVO to PV\r\n15. Navigate to Scheduled Payments tab in To Do List Page\r\n16. Verify the DB\n\nSELECT * FROM pvo.payment where order_id =xxxx\nSELECT * FROM pvo.patron_card_info where patron_id= xxxxx\nselect * from pvo.PATRON_ADDRESS where PATRON_ID= xxxx\nselect * from pvo.OFFER_SEAT where ORDER_ID=xxxx\nselect * from pvo.TDC_ORDER where Order_ID=xxxx",
        "expected": "1. Patron is logged in\r\n2. Pending renewals page is displayed\r\n3. Once the Patron log in the Get Renewal Order call will be generated from PVO to PV. Verify\n\n1. Order number\n2. Offer name , Section and rows\n3.Offer price and Service charges\n4.Payment plan in API\r\n4. If one receivable order is created , then the count should be displayed in To DO List Top navigation as 1.\r\n5. It should contain:\n\n1.Checkbox for making select all items/individual offer\nOrder ID from ProVenue\n2. Package Eventlist name (Event name if you created offer with Event) under Pending items header\n3.Section Row and Seats (If multiple seats are there it is sepearted with /)\n4.Payment options drop downs with associated Payment plans (Default Payment plan drop down before selection as \" Select Payment Plan\") \n5.Under Financial header Order Total (Ticket price+Service charges) will be displayed with Currency symbol ($ for dollar)\r\n6. The Payment plan should be selected and verify the checkbox of the corresponding offer is checked.\r\n7. The user should be navigated to Multiple delivery page\r\n8. The default delivery should be the one we used to create Recievable in PV.\r\n9.  The delivery method should be updated to \"MAIL\" in financial summary\r\n10. The Payment should be displayed with apckage event list details, Payment plan, Installment table,card drop down, Installments (If enabled), email and confimation email, Seat details with fiancial summary, Terms and conditions etc\r\n11. The address info should be passed via GetRenewalcart API to PV\r\n12. ACFA message  is displayed on renewal \npayment page\r\n13. 1. 1st installment is paid from patron credit\n2. Some of the 2nd installment is paid from the \ncredit\n3. The remaining 2nd installment has to be paid \nfrom credit card\r\n14. Payrenewal call should be initiated with correct payment method details to PV\r\n15. The Scheduled payment done should be displayed in a tabular format\r\n16. All the database should be verified, Verify the Patron Address table is still having the account address and not replaced with the Delivery/payment method address added"
      }
    ],
    "custom_jiras": "60"
  },
  {
    "id": 30716823,
    "title": "Verify selecting all the orders and clicking schedule button when Renew together is required",
    "section_id": 1686232,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C152338",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create New event and perf accept with renewals supplier\r\n3. Set renew together flag as required\r\n\r\n1.Launch the PV link\r\n2. Do 2 Receivable transactions with Scheduled Payments(each payment plan has a scheduled payments flag with one of the following values:  Required\r\n3.The scheduled payment flag may be set to Required or Optional.\r\n4.BROWPEN is set to true",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MyTixx application\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n2. Verify that the ticket is available in the To Do list.\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\n3.      Pending manual payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\nExpected Result:\r\nAll the details regardign the receivab le transaction created in pre requisite should should be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n3. Verify the user is able to select single order\r\nExpected Result:\r\nUser should not be allowed to selec one of the orders alone when renew together is set to required\r\n4. Select all orders and execute the Steps of [C70460]",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MyTixx application\r\n2. Verify that the ticket is available in the To Do list.\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\n3.      Pending manual payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\n3. Verify the user is able to select single order\r\n4. Select all orders and execute the Steps of [C70460]",
        "expected": "1. User should able to login to mytixx application successfully\r\n2. All the details regardign the receivab le transaction created in pre requisite should should be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n3. User should not be allowed to selec one of the orders alone when renew together is set to required\r\n4."
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716824,
    "title": "Verify few orders and clicking on schedule button when Renew together is Optional",
    "section_id": 1686232,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C152339",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create New event and perf accept with renewals supplier\r\n3. Set renew together flag as optional\r\n1.Launch the PV link\r\n2. Do few Receivable transactions with Scheduled Payments(each payment plan has a scheduled payments flag with one of the following values:  Required\r\n3.The scheduled payment flag may be set to Required or Optional.\r\n4.BROWPEN is set to true",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MyTixx application\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n2. Verify that the ticket is available in the To Do list.\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\n3.      Pending manual payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\nExpected Result:\r\nAll the details regardign the receivab le transaction created in pre requisite should should be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n3. Select one/few of the orders and click on schedule button\r\nExpected Result:\r\nUser should be allowed to select few of the orders.\r\n4. Complete the renewal process with [C70460]\r\nExpected Result:\r\nUser should be able to successfully renew tall the orders in a single cart",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MyTixx application\r\n2. Verify that the ticket is available in the To Do list.\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\n3.      Pending manual payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\n3. Select one/few of the orders and click on schedule button\r\n4. Complete the renewal process with [C70460]",
        "expected": "1. User should able to login to mytixx application successfully\r\n2. All the details regardign the receivab le transaction created in pre requisite should should be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n3. User should be allowed to select few of the orders.\r\n4. User should be able to successfully renew tall the orders in a single cart"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716825,
    "title": "Verify user will not able to select multiple orders when Renew together is not Allowed",
    "section_id": 1686232,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C152340",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create New event and perf accept with renewals supplier\r\n3. Set renew together flag as not Allowed\r\n\r\n1.Launch the PV link\r\n2. Do 2 Receivable transactions with Scheduled Payments(each payment plan has a scheduled payments flag with one of the following values:  Required\r\n3.The scheduled payment flag may be set to Required or Optional.\r\n4.BROWPEN is set to true",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MyTixx application\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n2. Verify that the ticket is available in the To Do list.\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\n3.      Pending manual payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\nExpected Result:\r\nAll the details regardign the receivab le transaction created in pre requisite should should be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n3. Verify whether the user is able to Select group of orders and click on schedule/Renew button\r\nExpected Result:\r\nUser should not be allowed to selec group of orders alone when renew together is set to Not allowed.\nonly one order should be allowed.\r\n4. Select the Order and execute the steps of  [C70459]",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MyTixx application\r\n2. Verify that the ticket is available in the To Do list.\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\n3.      Pending manual payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\n3. Verify whether the user is able to Select group of orders and click on schedule/Renew button\r\n4. Select the Order and execute the steps of  [C70459]",
        "expected": "1. User should able to login to mytixx application successfully\r\n2. All the details regardign the receivab le transaction created in pre requisite should should be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n3. User should not be allowed to selec group of orders alone when renew together is set to Not allowed.\nonly one order should be allowed.\r\n4."
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716826,
    "title": "Verify that the user is able to release the tickets when can be released online is set to true",
    "section_id": 1686233,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C152391",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Have 2 Package under same renewals Groups\r\nOne Main Package & other is Parking package\r\nMain Package should have \"Can be Released online\" true & Parking has the same permission set to false.\r\nRenewal group Renew together permission should be - Required.\r\nCreate a Reservation transaction for the both orders (2 orders for parking)\r\n\r\nPlease find the reference doc for the flow",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MyTixx application and login as the above said patron\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n2. Verify the To Do List for the Order details\r\nExpected Result:\r\n- There should not be the check box for selecting individual orders from the Renewal group\n- The Order to be releases (Permission set to true, Here parking package) has action drop down\n- Action drop down has Keep & Remove options\r\n3. Select Keep for the First parking order & Remove for second Parking order\r\nExpected Result:\r\nThe Order should be selected accordingly\r\n4. Proceed to the Multiple delivery method\r\nExpected Result:\r\n- Here we are expecting the order which are Keep in status along with Main package (Order which is Remove status should not be available)\r\n5. Select Delivery method & Proceed to Payment page\r\nExpected Result:\r\nThe user should be navigated to the Payment page\r\n6. Verify the \"Release\" order message & Cancel Order & exit button near to the installment table\r\nExpected Result:\r\nThe message should be :â€œRRTPPWRNâ€� - RENEWALS_RELEASED_TIXX_PYMT_PAGE_WARNING â€“ Defaults to:  The tickets below will be released from your ticket inventory when you select the \"Submit\" button at the bottom of this page. You will not be able to renew these tickets later. If you wish to retain or renew these tickets, cancel this transaction and select the \"Keep\" option on the Pending Renewals/Payments page.\r\n7. Now Cancel the order by clicking Cancel and exist from the Release block\r\nExpected Result:\r\nThe user should be navigated to To Do List page\r\n8. Select \"Remove\" from 2 orders along with main package and click on renew\r\nExpected Result:\r\nOnly main package should be available in Delivery page\r\n9. Select Delivery method & Proceed to Payment page\r\nExpected Result:\r\nThe user should be navigated to the Payment page & Service charges details of the released orders should be avoided for finance summary calculation\r\n10. Verify the \"Release\" order message & Cancel Order & exit button near to the installment table\r\nExpected Result:\r\nThe message should be :â€œRRTPPWRNâ€� - RENEWALS_RELEASED_TIXX_PYMT_PAGE_WARNING â€“ Defaults to:  The tickets below will be released from your ticket inventory when you select the \"Submit\" button at the bottom of this page. You will not be able to renew these tickets later. If you wish to retain or renew these tickets, cancel this transaction and select the \"Keep\" option on the Pending Renewals/Payments page.\n\nwith the above 2 orders\r\n11. Execute the steps 20-28 from [C70459]\r\n12. Verify in the confirmation page as well, we have the release order message & Block\r\nExpected Result:\r\nâ€œRRTCPWRNâ€� - RENEWALS_RELEASED_TIXX_CONFIRMATION_PAGE_WARNING â€“ Defaults to:   At your request, the tickets below have been released and are no longer in your ticket inventory.\n \n\r\n13. Verify the Confirmation email information available for released orders\r\nExpected Result:\r\nConfirmation email for the same should be verfied",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MyTixx application and login as the above said patron\r\n2. Verify the To Do List for the Order details\r\n3. Select Keep for the First parking order & Remove for second Parking order\r\n4. Proceed to the Multiple delivery method\r\n5. Select Delivery method & Proceed to Payment page\r\n6. Verify the \"Release\" order message & Cancel Order & exit button near to the installment table\r\n7. Now Cancel the order by clicking Cancel and exist from the Release block\r\n8. Select \"Remove\" from 2 orders along with main package and click on renew\r\n9. Select Delivery method & Proceed to Payment page\r\n10. Verify the \"Release\" order message & Cancel Order & exit button near to the installment table\r\n11. Execute the steps 20-28 from [C70459]\r\n12. Verify in the confirmation page as well, we have the release order message & Block\r\n13. Verify the Confirmation email information available for released orders",
        "expected": "1. User should able to login to mytixx application successfully\r\n2. - There should not be the check box for selecting individual orders from the Renewal group\n- The Order to be releases (Permission set to true, Here parking package) has action drop down\n- Action drop down has Keep & Remove options\r\n3. The Order should be selected accordingly\r\n4. - Here we are expecting the order which are Keep in status along with Main package (Order which is Remove status should not be available)\r\n5. The user should be navigated to the Payment page\r\n6. The message should be :â€œRRTPPWRNâ€� - RENEWALS_RELEASED_TIXX_PYMT_PAGE_WARNING â€“ Defaults to:  The tickets below will be released from your ticket inventory when you select the \"Submit\" button at the bottom of this page. You will not be able to renew these tickets later. If you wish to retain or renew these tickets, cancel this transaction and select the \"Keep\" option on the Pending Renewals/Payments page.\r\n7. The user should be navigated to To Do List page\r\n8. Only main package should be available in Delivery page\r\n9. The user should be navigated to the Payment page & Service charges details of the released orders should be avoided for finance summary calculation\r\n10. The message should be :â€œRRTPPWRNâ€� - RENEWALS_RELEASED_TIXX_PYMT_PAGE_WARNING â€“ Defaults to:  The tickets below will be released from your ticket inventory when you select the \"Submit\" button at the bottom of this page. You will not be able to renew these tickets later. If you wish to retain or renew these tickets, cancel this transaction and select the \"Keep\" option on the Pending Renewals/Payments page.\n\nwith the above 2 orders\r\n11. \r\n12. â€œRRTCPWRNâ€� - RENEWALS_RELEASED_TIXX_CONFIRMATION_PAGE_WARNING â€“ Defaults to:   At your request, the tickets below have been released and are no longer in your ticket inventory.\n \n\r\n13. Confirmation email for the same should be verfied"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716827,
    "title": "Verify that the order reserved and then released from PV application is not displayed.",
    "section_id": 1686234,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C152357",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create New event and perf accept with renewals supplier\r\n3. Complete a reservation transaction\r\n4. Release these seats via pv\r\n2. 1.Launch the PV link\r\n2. Complete a reservation transaction\r\n3. Release these seats via pv\r\n3. Launch the MyTixx application\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n4. Verify that the order reserved and then released from PV application is not displayed.\r\nExpected Result:\r\nThe tickets which are already released should not be seen in the renewal page",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create New event and perf accept with renewals supplier\r\n3. Complete a reservation transaction\r\n4. Release these seats via pv\r\n2. 1.Launch the PV link\r\n2. Complete a reservation transaction\r\n3. Release these seats via pv\r\n3. Launch the MyTixx application\r\n4. Verify that the order reserved and then released from PV application is not displayed.",
        "expected": "1. \r\n2. \r\n3. User should able to login to mytixx application successfully\r\n4. The tickets which are already released should not be seen in the renewal page"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716828,
    "title": "Verify that the order reserved and then claimed from PV application is displayed in Fully paid order",
    "section_id": 1686234,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C152358",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create New event and perf accept with renewals supplier\r\n3. Complete a reservation transaction\r\n4. Claim the seats and complete the transaction via pv",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MyTixx application\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n2. Verify that the ticket is not available in the To Do list Renewals tab.\r\nExpected Result:\r\nFully paid orders should not be available in To DO List\r\n3. Go to My History Tab -> Recently Paid Orders\r\nExpected Result:\r\nAll the details regarding the reservation claim transaction should be displayed in the Fully paid order section",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MyTixx application\r\n2. Verify that the ticket is not available in the To Do list Renewals tab.\r\n3. Go to My History Tab -> Recently Paid Orders",
        "expected": "1. User should able to login to mytixx application successfully\r\n2. Fully paid orders should not be available in To DO List\r\n3. All the details regarding the reservation claim transaction should be displayed in the Fully paid order section"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716829,
    "title": "Verify the order display in the to do list after the release date of the reservation",
    "section_id": 1686234,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C152359",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Create New Patron in PV BOTS(or use an existing patron)\r\n2. Create a package and perf accept it\r\n3. BROWPEN is set to true\r\n4. Set RRBDEN to true at any of the allowed levels\r\n5. Complete a Reservation transaction for the above said package\r\n6.Set Release Date of renewal package",
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Launch the PV link\n2. Complete a reservation transactions for the above said event\r\n2. Launch the MyTixx application\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n3. Verify that the ticket is available in the To Do list.\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\n3.      Pending manual payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\nExpected Result:\r\nAll the details regardign the receivab le transaction created in pre requisite should should be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n4. Verify  the order of reservation in the pending renewals page\r\nExpected Result:\r\nThe order should be displayed sorted order under the renewal group.\r\n5. Verify the order display in the to do list after the release date of the reservation\r\nExpected Result:\r\nThe order should not be displayed under the renewal group, after the release date of the reservation",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Launch the PV link\n2. Complete a reservation transactions for the above said event\r\n2. Launch the MyTixx application\r\n3. Verify that the ticket is available in the To Do list.\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\n3.      Pending manual payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\n4. Verify  the order of reservation in the pending renewals page\r\n5. Verify the order display in the to do list after the release date of the reservation",
        "expected": "1. \r\n2. User should able to login to mytixx application successfully\r\n3. All the details regardign the receivab le transaction created in pre requisite should should be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n4. The order should be displayed sorted order under the renewal group.\r\n5. The order should not be displayed under the renewal group, after the release date of the reservation"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716830,
    "title": "Verify that the orders which are already associated with the recievable are displayed with the due date in Orders Needing payments section",
    "section_id": 1686234,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C152360",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create New event and perf accept with renewals supplier\r\n\r\n1.Launch the PV link\r\n2. Do a Claim reservation transaction with Scheduled Payments(each payment plan has a scheduled payments flag with one of the following values:  Optional, Required or Not Allowed.)\r\n3.The scheduled payment flag may be set to Required or Optional.\r\n4.BROWPEN is set to true",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MyTixx application\r\nExpected Result:\r\nLink should be launched succesfully\r\n2. Verify that the ticket is available in the To Do list.\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page,\r\nExpected Result:\r\nThe Created orders should be displayed in \"To Do \" List page\r\n3. Verify that the orders which are already associated with the recievable are displayed with the due date in 'Orders Needing payments' section\r\nExpected Result:\r\nOrders which are already associated with the recievable Should be displayed with the due date in 'Orders Needing payments' section",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MyTixx application\r\n2. Verify that the ticket is available in the To Do list.\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page,\r\n3. Verify that the orders which are already associated with the recievable are displayed with the due date in 'Orders Needing payments' section",
        "expected": "1. Link should be launched succesfully\r\n2. The Created orders should be displayed in \"To Do \" List page\r\n3. Orders which are already associated with the recievable Should be displayed with the due date in 'Orders Needing payments' section"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716831,
    "title": "Verify that the reservation release date is displayed in the Financial column",
    "section_id": 1686234,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C152361",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create New event and perf accept it\r\n3. BROWPEN is set to true\r\n4. Set RRBDEN to true at any of the allowed levels\r\n5. Complete a Reservation for the above said  event",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MyTixx application\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n2. Verify that the ticket is available in the To Do list.\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\n3.      Pending manual payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\nExpected Result:\r\nAll the details regardign the receivab le transaction created in pre requisite should should be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n3. Verify if the reservation release date is displayed in the Financial column\r\nExpected Result:\r\nProVenue shall send the earliest reservation release date on each reservation order which should be displayed in the 'Financial' column",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MyTixx application\r\n2. Verify that the ticket is available in the To Do list.\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\n3.      Pending manual payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\n3. Verify if the reservation release date is displayed in the Financial column",
        "expected": "1. User should able to login to mytixx application successfully\r\n2. All the details regardign the receivab le transaction created in pre requisite should should be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n3. ProVenue shall send the earliest reservation release date on each reservation order which should be displayed in the 'Financial' column"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716832,
    "title": "Verify by rollover of the orders and using the payment plan with Scheduled payments as optional and opt out",
    "section_id": 1686235,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C152397",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create New event and perf accept with renewals supplier\r\n2. 1.Launch the PV link\r\n2. Do a Receivable transaction with Scheduled Payments(each payment plan has a scheduled payments flag with one of the following values:  Optional, Required or Not Allowed.)\r\n3.The scheduled payment flag may be set to Optional\r\n4.BROWPEN is set to true\r\n5. Rollover the event with a target package\r\n6. Verify the schedule payment order in the target package\r\n3. Launch the MyTixx application\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n4. Verify that the ticket is available in the To Do list.\r\n\r\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \r\n\r\nTo do list is divided into 3 sections\r\n1.      Reservations\r\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\r\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\r\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\r\n3.      Pending manual payments - this can include orders where:\r\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\nExpected Result:\r\nAll the setials should be displayed successfully\r\n5. Verfiy that the new scheduled payments block shall also group orders by renewal group and they shall observe the 'Renew Together' value, offering the same types of controls which are available in the Reservations block (checkboxes, radio buttons, or schedule all orders in the renewal group).\r\nExpected Result:\r\nThe new scheduled payments block shall also group orders by renewal group and they shall observe the 'Renew Together' value, offering the same types of controls which are available in the Reservations block (checkboxes, radio buttons, or schedule all orders in the renewal group).\r\n6. 1. Verify that when scheduled payments are optional and the instalment is paid for the first time, a choice shall be presented to patrons. \r\n2.  opt out of scheduled payments during the claim transaction, the installments will subsequently be manually payable\r\nExpected Result:\r\nThe patron opts out of scheduled payments during a claim transaction, so the installments will subsequently be manually payable\r\n7. Complete the Transaction by navigating to the renewal cart\r\n\r\nVerfiy the Renewal Cart/Payment Page offered (once the patron has selected orders per 'renew together' rules for the category/renewal group and they have selected a payment plan for each, where applicable, they may proceed to the renewal cart.  )\r\nExpected Result:\r\nonce the patron has selected orders per 'renew together' rules for the category/renewal group and they have selected a payment plan for each, where applicable, they may proceed to the renewal cart\r\n8. .Verfiy the Order Summary Block\r\n3. Verify the Delivery Block\r\n4. Verify Ticket Insurance Block\r\n5. Verify Installments Block\r\n(Due date/Instalment amount/Paymet method sector/CVV)\r\n6. Verify Email address block\r\n7. Verify Financial Sumamry block\r\n8. Verify Terms and conditions\r\n9.Verify Actions\r\nExpected Result:\r\nAll the detials should be displayed successfully\r\n9. Checkout from the enhanced renewal cart\r\nExpected Result:\r\nUser should able to checkout successfully\r\n10. Verfiy the confirmation page.\r\nExpected Result:\r\nOrder confirmation details,Delivery details,the 'Scheduled Payments' block, the 'Future manual Payment' block should be verified.\r\n\r\nIf payments were collected against a 'Due Now' amount, the confirmation page will contain a summary of payments collected.\r\nIf any orderes were released in the transaction, the confirmation page shall contain a summary of the released orders.\r\n\r\nA summary of the orders in the cart shall be provided.  This will summary will follow the same conventions used in the payment page.  \r\nThe financial summary shall also be displayed in the confirmation page.\r\nA single button shall be provided for navigating the user back to the Pending Renewals page.  Alternatively, they will also have access to all of the MyTickets tabs at the top of the page for navigating to other areas of MyTickets.\r\n11. Rollover this event to a target package\r\nExpected Result:\r\nThe rollover should be successfully done\r\n12. Verify the order for schedule payment opt out in the target package\r\nExpected Result:\r\nThe schedule payment order in the target package should as well be in schedule payment opt out status i.e. the installments will subsequently be manually payable",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create New event and perf accept with renewals supplier\r\n2. 1.Launch the PV link\r\n2. Do a Receivable transaction with Scheduled Payments(each payment plan has a scheduled payments flag with one of the following values:  Optional, Required or Not Allowed.)\r\n3.The scheduled payment flag may be set to Optional\r\n4.BROWPEN is set to true\r\n5. Rollover the event with a target package\r\n6. Verify the schedule payment order in the target package\r\n3. Launch the MyTixx application\r\n4. Verify that the ticket is available in the To Do list.\r\n\r\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \r\n\r\nTo do list is divided into 3 sections\r\n1.      Reservations\r\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\r\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\r\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\r\n3.      Pending manual payments - this can include orders where:\r\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\n5. Verfiy that the new scheduled payments block shall also group orders by renewal group and they shall observe the 'Renew Together' value, offering the same types of controls which are available in the Reservations block (checkboxes, radio buttons, or schedule all orders in the renewal group).\r\n6. 1. Verify that when scheduled payments are optional and the instalment is paid for the first time, a choice shall be presented to patrons. \r\n2.  opt out of scheduled payments during the claim transaction, the installments will subsequently be manually payable\r\n7. Complete the Transaction by navigating to the renewal cart\r\n\r\nVerfiy the Renewal Cart/Payment Page offered (once the patron has selected orders per 'renew together' rules for the category/renewal group and they have selected a payment plan for each, where applicable, they may proceed to the renewal cart.  )\r\n8. .Verfiy the Order Summary Block\r\n3. Verify the Delivery Block\r\n4. Verify Ticket Insurance Block\r\n5. Verify Installments Block\r\n(Due date/Instalment amount/Paymet method sector/CVV)\r\n6. Verify Email address block\r\n7. Verify Financial Sumamry block\r\n8. Verify Terms and conditions\r\n9.Verify Actions\r\n9. Checkout from the enhanced renewal cart\r\n10. Verfiy the confirmation page.\r\n11. Rollover this event to a target package\r\n12. Verify the order for schedule payment opt out in the target package",
        "expected": "1. \r\n2. \r\n3. User should able to login to mytixx application successfully\r\n4. All the setials should be displayed successfully\r\n5. The new scheduled payments block shall also group orders by renewal group and they shall observe the 'Renew Together' value, offering the same types of controls which are available in the Reservations block (checkboxes, radio buttons, or schedule all orders in the renewal group).\r\n6. The patron opts out of scheduled payments during a claim transaction, so the installments will subsequently be manually payable\r\n7. once the patron has selected orders per 'renew together' rules for the category/renewal group and they have selected a payment plan for each, where applicable, they may proceed to the renewal cart\r\n8. All the detials should be displayed successfully\r\n9. User should able to checkout successfully\r\n10. Order confirmation details,Delivery details,the 'Scheduled Payments' block, the 'Future manual Payment' block should be verified.\r\n\r\nIf payments were collected against a 'Due Now' amount, the confirmation page will contain a summary of payments collected.\r\nIf any orderes were released in the transaction, the confirmation page shall contain a summary of the released orders.\r\n\r\nA summary of the orders in the cart shall be provided.  This will summary will follow the same conventions used in the payment page.  \r\nThe financial summary shall also be displayed in the confirmation page.\r\nA single button shall be provided for navigating the user back to the Pending Renewals page.  Alternatively, they will also have access to all of the MyTickets tabs at the top of the page for navigating to other areas of MyTickets.\r\n11. The rollover should be successfully done\r\n12. The schedule payment order in the target package should as well be in schedule payment opt out status i.e. the installments will subsequently be manually payable"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716833,
    "title": "Verify by rollover of the orders and using the payment plan with Scheduled payments as optional and opt in",
    "section_id": 1686235,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C152398",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create New event and perf accept with renewals supplier\r\n2. 1.Launch the PV link\r\n2. Do a Receivable transaction with Scheduled Payments(each payment plan has a scheduled payments flag with one of the following values:  Optional, Required or Not Allowed.)\r\n3.The scheduled payment flag may be set to Optional\r\n4.BROWPEN is set to true\r\n5. Rollover the event with a target package\r\n6. Verify the schedule payment order in the target package\r\n3. Launch the MyTixx application\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n4. Verify that the target package ticket is available in the To Do list.\r\n\r\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \r\n\r\nTo do list is divided into 3 sections\r\n1.      Reservations\r\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\r\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\r\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\r\n3.      Pending manual payments - this can include orders where:\r\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\nExpected Result:\r\nAll the detials should be displayed successfully\r\n5. Verfiy that the new scheduled payments block shall also group orders by renewal group and they shall observe the 'Renew Together' value, offering the same types of controls which are available in the Reservations block (checkboxes, radio buttons, or schedule all orders in the renewal group).\r\nExpected Result:\r\nThe new scheduled payments block shall also group orders by renewal group and they shall observe the 'Renew Together' value, offering the same types of controls which are available in the Reservations block (checkboxes, radio buttons, or schedule all orders in the renewal group).\r\n6. Verify that When scheduled payments are optional and the user pays for the first time, a choice shall be presented to patrons.    If the patron opts in for scheduled payments, they will be able to schedule payment methods to be charged automatically for future installments and no further manual steps shall be necessary.\r\nExpected Result:\r\nIf the patron opts in for scheduled payments, they will be able to schedule payment methods to be charged automatically for future installments and no further manual steps shall be necessary.\r\n7. Complete the Transaction by navigating to the renewal cart\r\n\r\nVerfiy the Renewal Cart/Payment Page offered (once the patron has selected orders per 'renew together' rules for the category/renewal group and they have selected a payment plan for each, where applicable, they may proceed to the renewal cart.  )\r\nExpected Result:\r\nonce the patron has selected orders per 'renew together' rules for the category/renewal group and they have selected a payment plan for each, where applicable, they may proceed to the renewal cart\r\n8. .Verfiy the Order Summary Block\r\n3. Verify the Delivery Block\r\n4. Verify Ticket Insurance Block\r\n5. Verify Installments Block\r\n(Due date/Instalment amount/Paymet method sector/CVV)\r\n6. Verify Email address block\r\n7. Verify Financial Sumamry block\r\n8. Verify Terms and conditions\r\n9.Verify Actions\r\nExpected Result:\r\nAll the detials should be displayed successfully\r\n9. Checkout from the enhanced renewal cart\r\nExpected Result:\r\nUser should able to checkout successfully\r\n10. Verfiy the confirmation page.\r\nExpected Result:\r\nOrder confirmation details,Delivery details,the 'Scheduled Payments' block, the 'Future manual Payment' block should be verified.\r\n\r\nIf payments were collected against a 'Due Now' amount, the confirmation page will contain a summary of payments collected.\r\nIf any orderes were released in the transaction, the confirmation page shall contain a summary of the released orders.\r\n\r\nA summary of the orders in the cart shall be provided.  This will summary will follow the same conventions used in the payment page.  \r\nThe financial summary shall also be displayed in the confirmation page.\r\nA single button shall be provided for navigating the user back to the Pending Renewals page.  Alternatively, they will also have access to all of the MyTickets tabs at the top of the page for navigating to other areas of MyTickets.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create New event and perf accept with renewals supplier\r\n2. 1.Launch the PV link\r\n2. Do a Receivable transaction with Scheduled Payments(each payment plan has a scheduled payments flag with one of the following values:  Optional, Required or Not Allowed.)\r\n3.The scheduled payment flag may be set to Optional\r\n4.BROWPEN is set to true\r\n5. Rollover the event with a target package\r\n6. Verify the schedule payment order in the target package\r\n3. Launch the MyTixx application\r\n4. Verify that the target package ticket is available in the To Do list.\r\n\r\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \r\n\r\nTo do list is divided into 3 sections\r\n1.      Reservations\r\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\r\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\r\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\r\n3.      Pending manual payments - this can include orders where:\r\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\n5. Verfiy that the new scheduled payments block shall also group orders by renewal group and they shall observe the 'Renew Together' value, offering the same types of controls which are available in the Reservations block (checkboxes, radio buttons, or schedule all orders in the renewal group).\r\n6. Verify that When scheduled payments are optional and the user pays for the first time, a choice shall be presented to patrons.    If the patron opts in for scheduled payments, they will be able to schedule payment methods to be charged automatically for future installments and no further manual steps shall be necessary.\r\n7. Complete the Transaction by navigating to the renewal cart\r\n\r\nVerfiy the Renewal Cart/Payment Page offered (once the patron has selected orders per 'renew together' rules for the category/renewal group and they have selected a payment plan for each, where applicable, they may proceed to the renewal cart.  )\r\n8. .Verfiy the Order Summary Block\r\n3. Verify the Delivery Block\r\n4. Verify Ticket Insurance Block\r\n5. Verify Installments Block\r\n(Due date/Instalment amount/Paymet method sector/CVV)\r\n6. Verify Email address block\r\n7. Verify Financial Sumamry block\r\n8. Verify Terms and conditions\r\n9.Verify Actions\r\n9. Checkout from the enhanced renewal cart\r\n10. Verfiy the confirmation page.",
        "expected": "1. \r\n2. \r\n3. User should able to login to mytixx application successfully\r\n4. All the detials should be displayed successfully\r\n5. The new scheduled payments block shall also group orders by renewal group and they shall observe the 'Renew Together' value, offering the same types of controls which are available in the Reservations block (checkboxes, radio buttons, or schedule all orders in the renewal group).\r\n6. If the patron opts in for scheduled payments, they will be able to schedule payment methods to be charged automatically for future installments and no further manual steps shall be necessary.\r\n7. once the patron has selected orders per 'renew together' rules for the category/renewal group and they have selected a payment plan for each, where applicable, they may proceed to the renewal cart\r\n8. All the detials should be displayed successfully\r\n9. User should able to checkout successfully\r\n10. Order confirmation details,Delivery details,the 'Scheduled Payments' block, the 'Future manual Payment' block should be verified.\r\n\r\nIf payments were collected against a 'Due Now' amount, the confirmation page will contain a summary of payments collected.\r\nIf any orderes were released in the transaction, the confirmation page shall contain a summary of the released orders.\r\n\r\nA summary of the orders in the cart shall be provided.  This will summary will follow the same conventions used in the payment page.  \r\nThe financial summary shall also be displayed in the confirmation page.\r\nA single button shall be provided for navigating the user back to the Pending Renewals page.  Alternatively, they will also have access to all of the MyTickets tabs at the top of the page for navigating to other areas of MyTickets."
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716834,
    "title": "Verify by rollover of the orders and using the payment plan with Scheduled payments as required",
    "section_id": 1686235,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C152399",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create New event and perf accept with renewals supplier\r\n2. 1.Launch the PV link\r\n2. Do a Receivable transaction with Scheduled Payments(each payment plan has a scheduled payments flag with one of the following values:  Required\r\n3.The scheduled payment flag may be set to Required or Optional.\r\n4.BROWPEN is set to true\r\n5. Rollover the event with a target package\r\n6. Verify the schedule payment order in the target package\r\n3. Launch the MyTixx application\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n4. Verify that the ticket is available in the To Do list.\r\n\r\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \r\n\r\nTo do list is divided into 3 sections\r\n1.      Reservations\r\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\r\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\r\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\r\n3.      Pending manual payments - this can include orders where:\r\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\nExpected Result:\r\nAll the setials should be displayed successfully\r\n5. Verfiy that the new scheduled payments block shall also group orders by renewal group and they shall observe the 'Renew Together' value, offering the same types of controls which are available in the Reservations block (checkboxes, radio buttons, or schedule all orders in the renewal group).\r\nExpected Result:\r\nThe new scheduled payments block shall also group orders by renewal group and they shall observe the 'Renew Together' value, offering the same types of controls which are available in the Reservations block (checkboxes, radio buttons, or schedule all orders in the renewal group).\r\n6. Verify that Payment plans which have required scheduled payments shall offer a scheduled payment interface which allows the patron to schedule one or more payment methods to be charged for each installment such that all balances are scheduled to be paid in full.  A utility in ProVenue shall be run to collect scheduled payments and the patron will not be required to perform any manual steps to pay their installments\r\nExpected Result:\r\nPayment plans which have required scheduled payments shall offer a scheduled payment interface which allows the patron to schedule one or more payment methods to be charged for each installment such that all balances are scheduled to be paid in full.  A utility in ProVenue shall be run to collect scheduled payments and the patron will not be required to perform any manual steps to pay their installments\r\n7. Complete the Transaction by navigating to the renewal cart\r\n\r\nVerfiy the Renewal Cart/Payment Page offered (once the patron has selected orders per 'renew together' rules for the category/renewal group and they have selected a payment plan for each, where applicable, they may proceed to the renewal cart.  )\r\nExpected Result:\r\nonce the patron has selected orders per 'renew together' rules for the category/renewal group and they have selected a payment plan for each, where applicable, they may proceed to the renewal cart\r\n8. .Verfiy the Order Summary Block\r\n3. Verify the Delivery Block\r\n4. Verify Ticket Insurance Block\r\n5. Verify Installments Block\r\n(Due date/Instalment amount/Paymet method sector/CVV)\r\n6. Verify Email address block\r\n7. Verify Financial Sumamry block\r\n8. Verify Terms and conditions\r\n9.Verify Actions\r\nExpected Result:\r\nAll the detials should be displayed successfully\r\n9. Checkout from the enhanced renewal cart\r\nExpected Result:\r\nUser should able to checkout successfully\r\n10. Verfiy the confirmation page.\r\nExpected Result:\r\nOrder confirmation details,Delivery details,the 'Scheduled Payments' block, the 'Future manual Payment' block should be verified.\r\n\r\nIf payments were collected against a 'Due Now' amount, the confirmation page will contain a summary of payments collected.\r\nIf any orderes were released in the transaction, the confirmation page shall contain a summary of the released orders.\r\n\r\nA summary of the orders in the cart shall be provided.  This will summary will follow the same conventions used in the payment page.  \r\nThe financial summary shall also be displayed in the confirmation page.\r\nA single button shall be provided for navigating the user back to the Pending Renewals page.  Alternatively, they will also have access to all of the MyTickets tabs at the top of the page for navigating to other areas of MyTickets.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create New event and perf accept with renewals supplier\r\n2. 1.Launch the PV link\r\n2. Do a Receivable transaction with Scheduled Payments(each payment plan has a scheduled payments flag with one of the following values:  Required\r\n3.The scheduled payment flag may be set to Required or Optional.\r\n4.BROWPEN is set to true\r\n5. Rollover the event with a target package\r\n6. Verify the schedule payment order in the target package\r\n3. Launch the MyTixx application\r\n4. Verify that the ticket is available in the To Do list.\r\n\r\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \r\n\r\nTo do list is divided into 3 sections\r\n1.      Reservations\r\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\r\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\r\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\r\n3.      Pending manual payments - this can include orders where:\r\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\n5. Verfiy that the new scheduled payments block shall also group orders by renewal group and they shall observe the 'Renew Together' value, offering the same types of controls which are available in the Reservations block (checkboxes, radio buttons, or schedule all orders in the renewal group).\r\n6. Verify that Payment plans which have required scheduled payments shall offer a scheduled payment interface which allows the patron to schedule one or more payment methods to be charged for each installment such that all balances are scheduled to be paid in full.  A utility in ProVenue shall be run to collect scheduled payments and the patron will not be required to perform any manual steps to pay their installments\r\n7. Complete the Transaction by navigating to the renewal cart\r\n\r\nVerfiy the Renewal Cart/Payment Page offered (once the patron has selected orders per 'renew together' rules for the category/renewal group and they have selected a payment plan for each, where applicable, they may proceed to the renewal cart.  )\r\n8. .Verfiy the Order Summary Block\r\n3. Verify the Delivery Block\r\n4. Verify Ticket Insurance Block\r\n5. Verify Installments Block\r\n(Due date/Instalment amount/Paymet method sector/CVV)\r\n6. Verify Email address block\r\n7. Verify Financial Sumamry block\r\n8. Verify Terms and conditions\r\n9.Verify Actions\r\n9. Checkout from the enhanced renewal cart\r\n10. Verfiy the confirmation page.",
        "expected": "1. \r\n2. \r\n3. User should able to login to mytixx application successfully\r\n4. All the setials should be displayed successfully\r\n5. The new scheduled payments block shall also group orders by renewal group and they shall observe the 'Renew Together' value, offering the same types of controls which are available in the Reservations block (checkboxes, radio buttons, or schedule all orders in the renewal group).\r\n6. Payment plans which have required scheduled payments shall offer a scheduled payment interface which allows the patron to schedule one or more payment methods to be charged for each installment such that all balances are scheduled to be paid in full.  A utility in ProVenue shall be run to collect scheduled payments and the patron will not be required to perform any manual steps to pay their installments\r\n7. once the patron has selected orders per 'renew together' rules for the category/renewal group and they have selected a payment plan for each, where applicable, they may proceed to the renewal cart\r\n8. All the detials should be displayed successfully\r\n9. User should able to checkout successfully\r\n10. Order confirmation details,Delivery details,the 'Scheduled Payments' block, the 'Future manual Payment' block should be verified.\r\n\r\nIf payments were collected against a 'Due Now' amount, the confirmation page will contain a summary of payments collected.\r\nIf any orderes were released in the transaction, the confirmation page shall contain a summary of the released orders.\r\n\r\nA summary of the orders in the cart shall be provided.  This will summary will follow the same conventions used in the payment page.  \r\nThe financial summary shall also be displayed in the confirmation page.\r\nA single button shall be provided for navigating the user back to the Pending Renewals page.  Alternatively, they will also have access to all of the MyTickets tabs at the top of the page for navigating to other areas of MyTickets."
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716835,
    "title": "Verify that the cash reciept section consists of orders rolled over into recievables and the orders rolledover into reservations and claimed by the patron and converted into an order with a receivable",
    "section_id": 1686235,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C152400",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create New event and perf accept with renewals supplier\r\n3.BROWPEN is set to true\r\n4.Peform a reservation transaction\r\nExpected Result:\r\nPrerequisite must be met\r\n2. Launch the MyTixx application url,enter teh login credentials and click on Login\r\nExpected Result:\r\nPatron must be logged into mytixx application\r\n3. Navigate to To Do list\r\nExpected Result:\r\nTo do list must be displayed\r\n4. Verify that the cash reciept section consists of orders rolled over into recievables and the orders rolled over into reservations and claimed by the patron and converted into an order with a receivable\r\nExpected Result:\r\nTo Do list page must be displayed with cash reciept section consists of orders rolled over into recievables and the orders rolled over into reservations and claimed by the patron and converted into an order with a receivable",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create New event and perf accept with renewals supplier\r\n3.BROWPEN is set to true\r\n4.Peform a reservation transaction\r\n2. Launch the MyTixx application url,enter teh login credentials and click on Login\r\n3. Navigate to To Do list\r\n4. Verify that the cash reciept section consists of orders rolled over into recievables and the orders rolled over into reservations and claimed by the patron and converted into an order with a receivable",
        "expected": "1. Prerequisite must be met\r\n2. Patron must be logged into mytixx application\r\n3. To do list must be displayed\r\n4. To Do list page must be displayed with cash reciept section consists of orders rolled over into recievables and the orders rolled over into reservations and claimed by the patron and converted into an order with a receivable"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716836,
    "title": "Verify by rollover of the orders and using the payment plan with Scheduled payments as not allowed",
    "section_id": 1686235,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C152401",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create New event and perf accept with renewals supplier\r\n2. 1.Launch the PV link\r\n2. Do a Receivable transaction with Scheduled Payments(each payment plan has a scheduled payments flag with one of the following values:  Optional, Required or Not Allowed.)\r\n3.The scheduled payment flag may be set to Not Allowed\r\n4.BROWPEN is set to true\r\n5. Rollover the event with a target package\r\n6. Verify the schedule payment order in the target package\r\n3. Launch the MyTixx application\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n4. Verify that the ticket is available in the To Do list.\r\n\r\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \r\n\r\nTo do list is divided into 3 sections\r\n1.      Reservations\r\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\r\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\r\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\r\n3.      Pending manual payments - this can include orders where:\r\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\nExpected Result:\r\nAll the setials should be displayed successfully\r\n5. Verfiy that the new scheduled payments block shall also group orders by renewal group and they shall observe the 'Renew Together' value, offering the same types of controls which are available in the Reservations block (checkboxes, radio buttons, or schedule all orders in the renewal group).\r\nExpected Result:\r\nThe new scheduled payments block shall also group orders by renewal group and they shall observe the 'Renew Together' value, offering the same types of controls which are available in the Reservations block (checkboxes, radio buttons, or schedule all orders in the renewal group).\r\n6. Verfiy that if a payment plan's scheduled payment flag is 'Not Allowed' then the first installment shall be considered 'Due Now' during the claim and the remaining installments will need to be manually paid by the scheduled due date.\r\nExpected Result:\r\nIf a payment plan's scheduled payment flag is 'Not Allowed' then the first installment shall be considered 'Due Now' during the claim and the remaining installments will need to be manually paid by the scheduled due date.\r\n7. Complete the Transaction by navigating to the renewal cart\r\n\r\nVerfiy the Renewal Cart/Payment Page offered (once the patron has selected orders per 'renew together' rules for the category/renewal group and they have selected a payment plan for each, where applicable, they may proceed to the renewal cart.  )\r\nExpected Result:\r\nonce the patron has selected orders per 'renew together' rules for the category/renewal group and they have selected a payment plan for each, where applicable, they may proceed to the renewal cart\r\n8. .Verfiy the Order Summary Block\r\n3. Verify the Delivery Block\r\n4. Verify Ticket Insurance Block\r\n5. Verify Installments Block\r\n(Due date/Instalment amount/Paymet method sector/CVV)\r\n6. Verify Email address block\r\n7. Verify Financial Sumamry block\r\n8. Verify Terms and conditions\r\n9.Verify Actions\r\nExpected Result:\r\nAll the detials should be displayed successfully\r\n9. Checkout from the enhanced renewal cart\r\nExpected Result:\r\nUser should able to checkout successfully\r\n10. Verfiy the confirmation page.\r\nExpected Result:\r\nOrder confirmation details,Delivery details,the 'Scheduled Payments' block, the 'Future manual Payment' block should be verified.\r\n\r\nIf payments were collected against a 'Due Now' amount, the confirmation page will contain a summary of payments collected.\r\nIf any orderes were released in the transaction, the confirmation page shall contain a summary of the released orders.\r\n\r\nA summary of the orders in the cart shall be provided.  This will summary will follow the same conventions used in the payment page.  \r\nThe financial summary shall also be displayed in the confirmation page.\r\nA single button shall be provided for navigating the user back to the Pending Renewals page.  Alternatively, they will also have access to all of the MyTickets tabs at the top of the page for navigating to other areas of MyTickets.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create New event and perf accept with renewals supplier\r\n2. 1.Launch the PV link\r\n2. Do a Receivable transaction with Scheduled Payments(each payment plan has a scheduled payments flag with one of the following values:  Optional, Required or Not Allowed.)\r\n3.The scheduled payment flag may be set to Not Allowed\r\n4.BROWPEN is set to true\r\n5. Rollover the event with a target package\r\n6. Verify the schedule payment order in the target package\r\n3. Launch the MyTixx application\r\n4. Verify that the ticket is available in the To Do list.\r\n\r\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \r\n\r\nTo do list is divided into 3 sections\r\n1.      Reservations\r\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\r\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\r\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\r\n3.      Pending manual payments - this can include orders where:\r\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\n5. Verfiy that the new scheduled payments block shall also group orders by renewal group and they shall observe the 'Renew Together' value, offering the same types of controls which are available in the Reservations block (checkboxes, radio buttons, or schedule all orders in the renewal group).\r\n6. Verfiy that if a payment plan's scheduled payment flag is 'Not Allowed' then the first installment shall be considered 'Due Now' during the claim and the remaining installments will need to be manually paid by the scheduled due date.\r\n7. Complete the Transaction by navigating to the renewal cart\r\n\r\nVerfiy the Renewal Cart/Payment Page offered (once the patron has selected orders per 'renew together' rules for the category/renewal group and they have selected a payment plan for each, where applicable, they may proceed to the renewal cart.  )\r\n8. .Verfiy the Order Summary Block\r\n3. Verify the Delivery Block\r\n4. Verify Ticket Insurance Block\r\n5. Verify Installments Block\r\n(Due date/Instalment amount/Paymet method sector/CVV)\r\n6. Verify Email address block\r\n7. Verify Financial Sumamry block\r\n8. Verify Terms and conditions\r\n9.Verify Actions\r\n9. Checkout from the enhanced renewal cart\r\n10. Verfiy the confirmation page.",
        "expected": "1. \r\n2. \r\n3. User should able to login to mytixx application successfully\r\n4. All the setials should be displayed successfully\r\n5. The new scheduled payments block shall also group orders by renewal group and they shall observe the 'Renew Together' value, offering the same types of controls which are available in the Reservations block (checkboxes, radio buttons, or schedule all orders in the renewal group).\r\n6. If a payment plan's scheduled payment flag is 'Not Allowed' then the first installment shall be considered 'Due Now' during the claim and the remaining installments will need to be manually paid by the scheduled due date.\r\n7. once the patron has selected orders per 'renew together' rules for the category/renewal group and they have selected a payment plan for each, where applicable, they may proceed to the renewal cart\r\n8. All the detials should be displayed successfully\r\n9. User should able to checkout successfully\r\n10. Order confirmation details,Delivery details,the 'Scheduled Payments' block, the 'Future manual Payment' block should be verified.\r\n\r\nIf payments were collected against a 'Due Now' amount, the confirmation page will contain a summary of payments collected.\r\nIf any orderes were released in the transaction, the confirmation page shall contain a summary of the released orders.\r\n\r\nA summary of the orders in the cart shall be provided.  This will summary will follow the same conventions used in the payment page.  \r\nThe financial summary shall also be displayed in the confirmation page.\r\nA single button shall be provided for navigating the user back to the Pending Renewals page.  Alternatively, they will also have access to all of the MyTickets tabs at the top of the page for navigating to other areas of MyTickets."
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716837,
    "title": "Verify the undefined renewal group orders are displayed under Scheduled Payments Undefined Renewal Group",
    "section_id": 1686236,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C152392",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Prerequisite:\r\n1. Create an package and do not associate any renewal group to it, create a patron\r\n2. Create payment plans, with one of the payment plans with schedule payments is required and associate to package   \r\n3. Perform a receivable transaction for the event such that some payment is to be scheduled for future",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MyTixx application url,enter teh login credentials and click on Login\r\nExpected Result:\r\nPatron must be logged into mytixx application\r\n2. Navigate to To Do list\r\nExpected Result:\r\nTo do list must be displayed\r\n3. Verify the undefined renewal group orders are displayed under Pending renewals /Payments tab \r\nExpected Result:\r\n The heading will read as renewable orders for the group which is undefined",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MyTixx application url,enter teh login credentials and click on Login\r\n2. Navigate to To Do list\r\n3. Verify the undefined renewal group orders are displayed under Pending renewals /Payments tab",
        "expected": "1. Patron must be logged into mytixx application\r\n2. To do list must be displayed\r\n3.  The heading will read as renewable orders for the group which is undefined"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716838,
    "title": "Verify that option to remove the order is not available for recieavables, pendinig manual payment and pending scheduled payment categories",
    "section_id": 1686237,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C152347",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre requisite:-\r\n>Create a patron in PV\r\n>Create a renewal group where 'Renew Together' set to required .\r\n>Create a package \r\n>Complete one receivable order with above package and patron\r\n>Complete a reservation transaction with above package and patron",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to MyTixx with above patron\r\nExpected Result:\r\nUser should be logged in to the My Tixx account successfully\r\n2. Select the order :-\nSelect the orders from To Do list tab\r\nExpected Result:\r\nOrders should be displayed in To Do list tab\r\n3. Verify the option 'Remove is not available for recieavables, pendinig manual payment and pending scheduled payment categories:-\n\n>Select the receivable order\n>Select the payment plan from the payment options dropdown\n>Verify that the Remove option is not displayed under the action dropdown\nNote :-\n1.      If scheduled payments are 'Optional' then a choice is presented.  No radio buttons shall be displayed if scheduled payments are either 'Required' or 'Not Allowed.'\r\nExpected Result:\r\nRemove option should not be displayed for the orders other than Reservation categories\r\n4. Verify the option 'Remove' is available for for reservation categories (claims only).\n\n>Select the reservation order\n>Select the payment plan from the payment options dropdown\n>Verify that the Remove option is displayed and available for reservation orders - under action\nNote :-\n1.      If scheduled payments are 'Optional' then a choice is presented.  No radio buttons shall be displayed if scheduled payments are either 'Required' or 'Not Allowed.'\r\nExpected Result:\r\nThe option to remove an order shall only be available for reservation categories (claims only)",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to MyTixx with above patron\r\n2. Select the order :-\nSelect the orders from To Do list tab\r\n3. Verify the option 'Remove is not available for recieavables, pendinig manual payment and pending scheduled payment categories:-\n\n>Select the receivable order\n>Select the payment plan from the payment options dropdown\n>Verify that the Remove option is not displayed under the action dropdown\nNote :-\n1.      If scheduled payments are 'Optional' then a choice is presented.  No radio buttons shall be displayed if scheduled payments are either 'Required' or 'Not Allowed.'\r\n4. Verify the option 'Remove' is available for for reservation categories (claims only).\n\n>Select the reservation order\n>Select the payment plan from the payment options dropdown\n>Verify that the Remove option is displayed and available for reservation orders - under action\nNote :-\n1.      If scheduled payments are 'Optional' then a choice is presented.  No radio buttons shall be displayed if scheduled payments are either 'Required' or 'Not Allowed.'",
        "expected": "1. User should be logged in to the My Tixx account successfully\r\n2. Orders should be displayed in To Do list tab\r\n3. Remove option should not be displayed for the orders other than Reservation categories\r\n4. The option to remove an order shall only be available for reservation categories (claims only)"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716839,
    "title": "Verify that option to remove the order is available for reservations category",
    "section_id": 1686237,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C152348",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create New event and perf accept it\r\n3. BROWPEN is set to true\r\n4. Set \"Can be Released Online\" to true in PV bots\r\n5. Set renew together to required\r\n\r\n1.Launch the PV link\r\n2. Perform two reservation transaction",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MyTixx application and login as the above said patron\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n2. Verify that the ticket is available in the To Do list.\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\n3.      Pending manual payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\nExpected Result:\r\nAll the details regardign the receivab le transaction created in pre requisite should should be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n3. Remove one of the order from the reservation group\r\nExpected Result:\r\nUser should be able to remove the order.\r\n4. Execute the test steps with the other order order in the list choosing the Payment plan - SCH REQ\r\nExpected Result:\r\nExecute the Test steps 12-28 of [C70459]",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MyTixx application and login as the above said patron\r\n2. Verify that the ticket is available in the To Do list.\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\n3.      Pending manual payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\n3. Remove one of the order from the reservation group\r\n4. Execute the test steps with the other order order in the list choosing the Payment plan - SCH REQ",
        "expected": "1. User should able to login to mytixx application successfully\r\n2. All the details regardign the receivab le transaction created in pre requisite should should be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n3. User should be able to remove the order.\r\n4. Execute the Test steps 12-28 of [C70459]"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716840,
    "title": "Verify the confirmation email for schedule payments",
    "section_id": 1686238,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C152402",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Create a patron in PV application\r\nCreate a payment plan with Schedule option as optional or required\r\nExecute the Steps of [C70459]",
    "custom_test_purpose": null,
    "custom_steps": "1. Verify the Confirmation email\r\nExpected Result:\r\nConfirmation email should have For each delivery, the confirmation email shall support the following data:\nâ€¢\tDelivery Method\nâ€¢\tDelivery Details\nâ€¢\tOrder ID(s)\no\tTicket Item Description\nFinanace summary\nOrder Summary\nPayment method\n\r\n2. Verify the Confirmation email having the Details for the Scheduled installments date under \"SCHEDULED PAYMENT\" section\r\nExpected Result:\r\nDetails for the Scheduled installments date under \"SCHEDULED PAYMENT\" section should be displayed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Verify the Confirmation email\r\n2. Verify the Confirmation email having the Details for the Scheduled installments date under \"SCHEDULED PAYMENT\" section",
        "expected": "1. Confirmation email should have For each delivery, the confirmation email shall support the following data:\nâ€¢\tDelivery Method\nâ€¢\tDelivery Details\nâ€¢\tOrder ID(s)\no\tTicket Item Description\nFinanace summary\nOrder Summary\nPayment method\n\r\n2. Details for the Scheduled installments date under \"SCHEDULED PAYMENT\" section should be displayed"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716841,
    "title": "Verify the confirmation email for Manual/SCH_NA payments",
    "section_id": 1686238,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C152403",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Create a patron in PV application\r\nCreate a payment plan with Schedule option as optional or required\r\nExecute the Steps of [C70460]",
    "custom_test_purpose": null,
    "custom_steps": "1. Verify the Confirmation email\r\nExpected Result:\r\nConfirmation email should have For each delivery, the confirmation email shall support the following data:\nâ€¢\tDelivery Method\nâ€¢\tDelivery Details\nâ€¢\tOrder ID(s)\no\tTicket Item Description\nFinanace summary\nOrder Summary\nPayment method\n\r\n2. Verify the Confirmation email having the Details for the Scheduled installments date under \"MANUAL PAYMENT\" section\r\nExpected Result:\r\nDetails for the Scheduled installments date under \"SCHEDULED PAYMENT\" section should be displayed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Verify the Confirmation email\r\n2. Verify the Confirmation email having the Details for the Scheduled installments date under \"MANUAL PAYMENT\" section",
        "expected": "1. Confirmation email should have For each delivery, the confirmation email shall support the following data:\nâ€¢\tDelivery Method\nâ€¢\tDelivery Details\nâ€¢\tOrder ID(s)\no\tTicket Item Description\nFinanace summary\nOrder Summary\nPayment method\n\r\n2. Details for the Scheduled installments date under \"SCHEDULED PAYMENT\" section should be displayed"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716842,
    "title": "Verify by opting to pay only the past due when the user has a past due",
    "section_id": 1686239,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C152362",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create a New event and perf accept with renewals supplier, \r\n3. Associate a manual payment plan to the above event such that the first two installments occur in a very short interval. So that we can verify once the first installment pasts.\r\n4. Complete a receivable transaction with the above events for the patron created\r\n5. Wait until the first installment due passes",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MyTixx application, login as patron created at pre requisite\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n2. Verify that the ticket is available in the To Do List - Pending manual Payments\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\n3.      Pending manual payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\nExpected Result:\r\nAll the details regarding the receivable le transaction created in pre requisite should  be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n3. 1. Select the order created in pre requisite\n2. Verify if the patron is presented with the choice to either pay just the past due amount or the past due + currently due amounts.\r\nExpected Result:\r\nUser should be able to select the order\r\n4. 1. Select past due amount alone\n2. Click on Pay button\r\nExpected Result:\r\nUser should be directed to Delivery details\r\n5. Click on continue in delivery details page\r\nExpected Result:\r\nUser should be directed to renewal payment page\r\n6. 1. Select an option for insurance \n2. Select payment method\n3. Provide email address\n4. Check Terms and conditions\n5. Click on submit button\r\nExpected Result:\r\nUser should be navigated to the confirmation page which displays the order and delivery details - The past due should be paid, current due should still remain outstanding",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MyTixx application, login as patron created at pre requisite\r\n2. Verify that the ticket is available in the To Do List - Pending manual Payments\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\n3.      Pending manual payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\n3. 1. Select the order created in pre requisite\n2. Verify if the patron is presented with the choice to either pay just the past due amount or the past due + currently due amounts.\r\n4. 1. Select past due amount alone\n2. Click on Pay button\r\n5. Click on continue in delivery details page\r\n6. 1. Select an option for insurance \n2. Select payment method\n3. Provide email address\n4. Check Terms and conditions\n5. Click on submit button",
        "expected": "1. User should able to login to mytixx application successfully\r\n2. All the details regarding the receivable le transaction created in pre requisite should  be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n3. User should be able to select the order\r\n4. User should be directed to Delivery details\r\n5. User should be directed to renewal payment page\r\n6. User should be navigated to the confirmation page which displays the order and delivery details - The past due should be paid, current due should still remain outstanding"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716843,
    "title": "Verify by opting to pay total amount due when the user has a past due",
    "section_id": 1686239,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C152363",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create a New event and perf accept with renewals supplier, \r\n3. Associate a manual payment plan to the above event  such that the first two installments occur in a very short interval. So that we can verify once the first installment pasts.\r\n4. Complete a receivable transaction with the above events for the patron created\r\n5. Wait until the first installment due passes",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MyTixx application, login as patron created at pre requisite\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n2. Verify that the ticket is available in the To Do List - Pending manual Payments\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\n3.      Pending manual payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\nExpected Result:\r\nAll the details regarding the receivable le transaction created in pre requisite should  be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n3. 1. Select the order created in pre requisite\n2. Verify if the patron is presented with the choice to either pay just the past due amount or the past due + currently due amounts.\r\nExpected Result:\r\nUser should be able to select the order\r\n4. 1. Select past due amount and current due\n2. Click on Pay button\r\nExpected Result:\r\nUser should be directed to Delivery options page\r\n5. Click on continue in Delivery options page\r\nExpected Result:\r\nuser should be directed to renewal payment page\r\n6. 1. Select an option for insurance \n2. Select payment method\n3. Provide email address\n4. Check Terms and conditions\n5. Click on submit button\r\nExpected Result:\r\nUser should be navigated to the confirmation page which displays the order and delivery details - The current due and past due should be paid",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MyTixx application, login as patron created at pre requisite\r\n2. Verify that the ticket is available in the To Do List - Pending manual Payments\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\n3.      Pending manual payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\n3. 1. Select the order created in pre requisite\n2. Verify if the patron is presented with the choice to either pay just the past due amount or the past due + currently due amounts.\r\n4. 1. Select past due amount and current due\n2. Click on Pay button\r\n5. Click on continue in Delivery options page\r\n6. 1. Select an option for insurance \n2. Select payment method\n3. Provide email address\n4. Check Terms and conditions\n5. Click on submit button",
        "expected": "1. User should able to login to mytixx application successfully\r\n2. All the details regarding the receivable le transaction created in pre requisite should  be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n3. User should be able to select the order\r\n4. User should be directed to Delivery options page\r\n5. user should be directed to renewal payment page\r\n6. User should be navigated to the confirmation page which displays the order and delivery details - The current due and past due should be paid"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716844,
    "title": "Verify that the order total is displayed correctly when the service charges are included",
    "section_id": 1686239,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C152364",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create New event and perf accept with renewals supplier\r\n3.Service charge must be set\r\n3.BROWPEN is set to true\r\n4.Peform a transaction which contains same renewal groups from different packages in same order \r\n5.Scheduled payment flag must be set to 'Required or 'Optional'",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MyTixx application url,enter the login credentials and click on Login\r\nExpected Result:\r\nPatron must be logged into mytixx application\r\n2. Navigate to To Do list\r\nExpected Result:\r\nTo do list must be displayed\r\n3. Verify that the order total is displayed correctly when the service charges are included\r\nExpected Result:\r\nOrder total must be displayed correctly when the service charges included",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MyTixx application url,enter the login credentials and click on Login\r\n2. Navigate to To Do list\r\n3. Verify that the order total is displayed correctly when the service charges are included",
        "expected": "1. Patron must be logged into mytixx application\r\n2. To do list must be displayed\r\n3. Order total must be displayed correctly when the service charges included"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716845,
    "title": "Verify the order total is displayed correctly for the reservation order",
    "section_id": 1686239,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C152365",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Create New Patron in PV BOTS(or use an existing patron) Do not add any credits to the patron\r\n2. Create a RENEWAL Group with Consume credit during online Renewal set to full auto\r\n3.Create New event for the above renewal group and perf accept it, associate few payment plans to it\r\n3. BROWPEN is set to true\r\n4. Compete a reservation transaction",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch and Login PV application\r\nExpected Result:\r\nUser should be able to login PV application successfully\r\n2. Navigate to the Supplier administration\nSelect the Event groups tab\nSelect Renewal group from the dropdown\nClick New button\r\nExpected Result:\r\nRenewal group options to create a new renewal group should be displayed\r\n3. Enter the required details to create renewal group\nSelect  Consume credit during online Renewal as ALWAYS\nClick Apply changes\r\nExpected Result:\r\nUser should be able to create a renewals group successfully\r\n4. Create a package with the above renewal group\r\nExpected Result:\r\nUser should be able to create the package successfully\r\n5. Navigate to ticket sales\nPerform a reservation transaction for the above package with the patron in pre-requisite\r\nExpected Result:\r\nUser should be able to perform the  reservation transaction successfully\r\n6. Launch the my tickets application. Login using the patron mentioned above\nVerify the order in To do list page\r\nExpected Result:\r\nThe above created order should be displayed\r\n7. Select the order and click renew button\r\nExpected Result:\r\nUser should navigate to the renewal cart/payments page\r\n8. Verify the order total is displayed correctly for the reservation order\r\nExpected Result:\r\nOrder total must be displayed correctly for the reservation order",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch and Login PV application\r\n2. Navigate to the Supplier administration\nSelect the Event groups tab\nSelect Renewal group from the dropdown\nClick New button\r\n3. Enter the required details to create renewal group\nSelect  Consume credit during online Renewal as ALWAYS\nClick Apply changes\r\n4. Create a package with the above renewal group\r\n5. Navigate to ticket sales\nPerform a reservation transaction for the above package with the patron in pre-requisite\r\n6. Launch the my tickets application. Login using the patron mentioned above\nVerify the order in To do list page\r\n7. Select the order and click renew button\r\n8. Verify the order total is displayed correctly for the reservation order",
        "expected": "1. User should be able to login PV application successfully\r\n2. Renewal group options to create a new renewal group should be displayed\r\n3. User should be able to create a renewals group successfully\r\n4. User should be able to create the package successfully\r\n5. User should be able to perform the  reservation transaction successfully\r\n6. The above created order should be displayed\r\n7. User should navigate to the renewal cart/payments page\r\n8. Order total must be displayed correctly for the reservation order"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716846,
    "title": "Verify that the order with the claim service charges are displayed correctly in fully paid orders tab",
    "section_id": 1686239,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C152366",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1. Create New Patron in PV BOTS(or use an existing patron)\r\n2. Create New event and perf accept with renewals supplier\r\n3. Create a service charge for claim sale\r\n4. Associate the claim service charge to the event created above \r\n5. Complete a reservation transaction\r\n6. Claim the seats and complete the transaction via pv.",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MyTixx application\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n2. Verify that the ticket is available in the To Do list Renewals tab.\r\nExpected Result:\r\nAll the details regarding the reservation claim transaction should be displayed in the Fully paid order section\r\n3. Verify if the claims service charge amounts are displayed correctly in the order details\r\nExpected Result:\r\nThe service charge amount should also be added to the total amount for the ticket and the other inventory details should be displayed correctly",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MyTixx application\r\n2. Verify that the ticket is available in the To Do list Renewals tab.\r\n3. Verify if the claims service charge amounts are displayed correctly in the order details",
        "expected": "1. User should able to login to mytixx application successfully\r\n2. All the details regarding the reservation claim transaction should be displayed in the Fully paid order section\r\n3. The service charge amount should also be added to the total amount for the ticket and the other inventory details should be displayed correctly"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716847,
    "title": "Verify the order in the scheduled payment tab when the installment is partially paid",
    "section_id": 1686239,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C152367",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Create a patron in PV application\r\nCreate a payment plan with Schedule option as optional or required",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch and Login PV application\r\nExpected Result:\r\nUser should be able to login PV application successfully\r\n2. Navigate to ticket sales\nPerform a recievable transaction for the package with the payment plan and the patron created in pre-requisite\r\nExpected Result:\r\nUser should be able to perform the recievable transaction successfully\r\n3. Launch the mytickets application\nLogin using the patron mentioned above\nVerify the orders in To do list page\r\nExpected Result:\r\nThe above created orders should be displayed\r\n4. Select the orders and click renew button\r\nExpected Result:\r\nUser should navigate to the delivery details page.\r\n5. Click on continue in delivery details page\r\nExpected Result:\r\nUser should navigate to renewals payment page\r\n6. In the payment page, select a card for scheduling the renewal transaction. Click submit button\r\nExpected Result:\r\nUser should be able to schedule the payments\r\n7. Verify the order in the scheduled payment tab when the installment is partially paid\r\nExpected Result:\r\nRemaining Installment Balance' should reflect the payment.  \nThe 'Current Scheduled' should reflect the amount that remains to be charged against the payment method.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch and Login PV application\r\n2. Navigate to ticket sales\nPerform a recievable transaction for the package with the payment plan and the patron created in pre-requisite\r\n3. Launch the mytickets application\nLogin using the patron mentioned above\nVerify the orders in To do list page\r\n4. Select the orders and click renew button\r\n5. Click on continue in delivery details page\r\n6. In the payment page, select a card for scheduling the renewal transaction. Click submit button\r\n7. Verify the order in the scheduled payment tab when the installment is partially paid",
        "expected": "1. User should be able to login PV application successfully\r\n2. User should be able to perform the recievable transaction successfully\r\n3. The above created orders should be displayed\r\n4. User should navigate to the delivery details page.\r\n5. User should navigate to renewals payment page\r\n6. User should be able to schedule the payments\r\n7. Remaining Installment Balance' should reflect the payment.  \nThe 'Current Scheduled' should reflect the amount that remains to be charged against the payment method."
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716848,
    "title": "Verify the order in the scheduled payment tab when the installment is completely paid",
    "section_id": 1686239,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_refs": "C152368",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Create a patron in PV application\r\nCreate a payment plan with Schedule option as optional or required",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch and Login PV application\r\nExpected Result:\r\nUser should be able to login PV application successfully\r\n2. Navigate to ticket sales\nPerform a recievable transaction for the package with the payment plan and the patron created in pre-requisite\r\nExpected Result:\r\nUser should be able to perform the recievable transaction successfully\r\n3. Launch the mytickets application\nLogin using the patron mentioned above\nVerify the orders in To do list page\r\nExpected Result:\r\nThe above created orders should be displayed\r\n4. Select the orders and click renew button\r\nExpected Result:\r\nUser should navigate to the delivery details page\r\n5. Click on continue in delivery details page\r\nExpected Result:\r\nUser should navigate to Renewals payment page\r\n6. In the payment page, select a card for scheduling the renewal transaction. Click submit button.\r\nExpected Result:\r\nUser should be able to schedule the payments\r\n7. Verify the order in the scheduled payment tab when the installment is partially paid\r\nExpected Result:\r\nRemaining Installment Balance' should reflect the payment.  \nThe 'Current Scheduled' should reflect the amount that remains to be charged against the payment method.\r\n8. Verify the order in the scheduled payment tab when the installment is completely paid\r\nExpected Result:\r\nCompletely Paid orders should not be displayed in scheduled payments tab",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch and Login PV application\r\n2. Navigate to ticket sales\nPerform a recievable transaction for the package with the payment plan and the patron created in pre-requisite\r\n3. Launch the mytickets application\nLogin using the patron mentioned above\nVerify the orders in To do list page\r\n4. Select the orders and click renew button\r\n5. Click on continue in delivery details page\r\n6. In the payment page, select a card for scheduling the renewal transaction. Click submit button.\r\n7. Verify the order in the scheduled payment tab when the installment is partially paid\r\n8. Verify the order in the scheduled payment tab when the installment is completely paid",
        "expected": "1. User should be able to login PV application successfully\r\n2. User should be able to perform the recievable transaction successfully\r\n3. The above created orders should be displayed\r\n4. User should navigate to the delivery details page\r\n5. User should navigate to Renewals payment page\r\n6. User should be able to schedule the payments\r\n7. Remaining Installment Balance' should reflect the payment.  \nThe 'Current Scheduled' should reflect the amount that remains to be charged against the payment method.\r\n8. Completely Paid orders should not be displayed in scheduled payments tab"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716849,
    "title": "Verify the order total displayed in the scheduled payment tab when there are service charges",
    "section_id": 1686239,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_refs": "C152369",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Create a patron in PV application\r\nCreate a payment plan with Schedule option as optional or required\r\nCreate a package and include service charges",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch and Login PV application\r\nExpected Result:\r\nUser should be able to login PV application successfully\r\n2. Navigate to ticket sales\nPerform a recievable transaction for the package with the payment plan and the patron created in pre-requisite\r\nExpected Result:\r\nUser should be able to perform the recievable transaction successfully\r\n3. Launch the mytickets application\nLogin using the patron mentioned above\nVerify the orders in To do list page\r\nExpected Result:\r\nThe above created orders should be displayed\r\n4. Select the orders and click renew button\r\nExpected Result:\r\nUser should navigate to the delivery details page\r\n5. Click on continue button in the delivery details page\r\nExpected Result:\r\nUser should navigate to renewals payment page\r\n6. In the payment page, select a card for scheduling the renewal transaction. Click submit button\r\nExpected Result:\r\nUser should be able to schedule the payments\r\n7. Verify the order total displayed in the scheduled payment tab when there are service charges.\r\nExpected Result:\r\nOrder total should be displayed with the service charges",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch and Login PV application\r\n2. Navigate to ticket sales\nPerform a recievable transaction for the package with the payment plan and the patron created in pre-requisite\r\n3. Launch the mytickets application\nLogin using the patron mentioned above\nVerify the orders in To do list page\r\n4. Select the orders and click renew button\r\n5. Click on continue button in the delivery details page\r\n6. In the payment page, select a card for scheduling the renewal transaction. Click submit button\r\n7. Verify the order total displayed in the scheduled payment tab when there are service charges.",
        "expected": "1. User should be able to login PV application successfully\r\n2. User should be able to perform the recievable transaction successfully\r\n3. The above created orders should be displayed\r\n4. User should navigate to the delivery details page\r\n5. User should navigate to renewals payment page\r\n6. User should be able to schedule the payments\r\n7. Order total should be displayed with the service charges"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716850,
    "title": "Verify that the installment block displays all the installments that are due for all payment plans for all of the orders in the cart.",
    "section_id": 1686239,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 9,
    "custom_is_automated": false,
    "custom_refs": "C152370",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create 2 New event and perf accept with renewals supplier\r\n3.Create 2 payment plans with schedule payment as optional and associate to the above events\r\n4. BROWPEN is set to true in supplier level",
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Launch the PV link\n2. Complete few Receivable transactions with Scheduled Payments for the above created events\n3.The scheduled payment flag may be set to Optional.\n\r\nExpected Result:\r\nReceivable transaction with scheduled payments should be completed\r\n2. Launch the MyTixx application\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n3. Verify that the ticket is available in the To Do list.\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\n3.      Pending manual payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\nExpected Result:\r\nAll the details regarding the receivable le transaction created in pre requisite should  be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n4. Initiate the renewal process for all the orders together\r\nExpected Result:\r\nUser should be taken to the cart page\r\n5. Verify that the installment block displays all the installments that are due for all payment plans for all of the orders in the cart.\r\nExpected Result:\r\nThe installment block displays all the installments that are due for all payment plans for all of the orders in the cart.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Launch the PV link\n2. Complete few Receivable transactions with Scheduled Payments for the above created events\n3.The scheduled payment flag may be set to Optional.\n\r\n2. Launch the MyTixx application\r\n3. Verify that the ticket is available in the To Do list.\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\n3.      Pending manual payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\n4. Initiate the renewal process for all the orders together\r\n5. Verify that the installment block displays all the installments that are due for all payment plans for all of the orders in the cart.",
        "expected": "1. Receivable transaction with scheduled payments should be completed\r\n2. User should able to login to mytixx application successfully\r\n3. All the details regarding the receivable le transaction created in pre requisite should  be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n4. User should be taken to the cart page\r\n5. The installment block displays all the installments that are due for all payment plans for all of the orders in the cart."
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716851,
    "title": "Verify that the Scheduled payments are displayed before manual installments due on the same date.",
    "section_id": 1686239,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 10,
    "custom_is_automated": false,
    "custom_refs": "C152371",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create 2 New event and perf accept with renewals supplier\r\n3. Create 2 payment plans such that both are having similar amounts and time intervals, one being schedule payment and the other as manual\r\n4. Associate these payment plans to the events created above",
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Launch the PV link\n2. Complete 2 Receivable transactions with each of the above payment plan \n3.The scheduled payment flag may be set to Optional.\n4.BROWPEN is set to true in supplier level\r\nExpected Result:\r\n2 Receivable transaction should be completed\r\n2. Launch the MyTixx application\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n3. Verify that the ticket is available in the To Do list.\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\n3.      Pending manual payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\nExpected Result:\r\nAll the details regarding the receivable le transaction created in pre requisite should  be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n4. Initiate the renewal process for all the orders together\r\nExpected Result:\r\nUser should be taken to the cart page\r\n5. Verify that the Scheduled payments are displayed before manual installments due on the same date.\r\nExpected Result:\r\nThe Scheduled payments are displayed before manual installments due on the same date.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Launch the PV link\n2. Complete 2 Receivable transactions with each of the above payment plan \n3.The scheduled payment flag may be set to Optional.\n4.BROWPEN is set to true in supplier level\r\n2. Launch the MyTixx application\r\n3. Verify that the ticket is available in the To Do list.\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\n3.      Pending manual payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\n4. Initiate the renewal process for all the orders together\r\n5. Verify that the Scheduled payments are displayed before manual installments due on the same date.",
        "expected": "1. 2 Receivable transaction should be completed\r\n2. User should able to login to mytixx application successfully\r\n3. All the details regarding the receivable le transaction created in pre requisite should  be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n4. User should be taken to the cart page\r\n5. The Scheduled payments are displayed before manual installments due on the same date."
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716852,
    "title": "Verify that the Fully paid orders tab is displayed only when MTHROEN (My Tickets History Recent Orders Enabled)  is set to true",
    "section_id": 1686239,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 11,
    "custom_is_automated": false,
    "custom_refs": "C152372",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Create a patron in PV application\r\nCreate Credit for the Patron\r\nCreate a payment plan with Schedule option as optional or required",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch and Login PV application\r\nExpected Result:\r\nUser must be able to login PV application successfully\r\n2. Navigate to ticket sales\nPerform a recievable transaction for the package with the payment plan and the patron created in pre-requisite\r\nExpected Result:\r\nUser must be able to perform the recievable transaction successfully\r\n3. Launch the my tickets application\nLogin using the patron mentioned above\nVerify the orders in To do list page\r\nExpected Result:\r\nThe above created orders must be displayed\r\n4. Select the orders and click renew button\r\nExpected Result:\r\nUser must be navigated to the delivery details page\r\n5. Click on continue button in delivery details page\r\nExpected Result:\r\nUser should be navigated to renewal payment page\r\n6. In the payment page, select a card for scheduling the renewal transaction and complete the payment\r\nExpected Result:\r\nUser must be able to complete the payment and must be navigated to Confirmation page\r\n7. Navigate to History tab>>Recent Orders\r\nExpected Result:\r\nRecent paid orders must be displayed\r\n8. Verify that the Fully paid orders tab is displayed only when MTHROEN is set to true\r\nExpected Result:\r\nFully paid orders tab must be displayed only when MTHROEN is set to true.Default  value for MTHROEN-true",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch and Login PV application\r\n2. Navigate to ticket sales\nPerform a recievable transaction for the package with the payment plan and the patron created in pre-requisite\r\n3. Launch the my tickets application\nLogin using the patron mentioned above\nVerify the orders in To do list page\r\n4. Select the orders and click renew button\r\n5. Click on continue button in delivery details page\r\n6. In the payment page, select a card for scheduling the renewal transaction and complete the payment\r\n7. Navigate to History tab>>Recent Orders\r\n8. Verify that the Fully paid orders tab is displayed only when MTHROEN is set to true",
        "expected": "1. User must be able to login PV application successfully\r\n2. User must be able to perform the recievable transaction successfully\r\n3. The above created orders must be displayed\r\n4. User must be navigated to the delivery details page\r\n5. User should be navigated to renewal payment page\r\n6. User must be able to complete the payment and must be navigated to Confirmation page\r\n7. Recent paid orders must be displayed\r\n8. Fully paid orders tab must be displayed only when MTHROEN is set to true.Default  value for MTHROEN-true"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716853,
    "title": "Verify that the Fully paid orders tab is not displayed only when MTHRNTAB is set to false",
    "section_id": 1686239,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 12,
    "custom_is_automated": false,
    "custom_refs": "C152373",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Create a patron in PV application\r\nCreate Credit for the Patron\r\nCreate a payment plan with Schedule option as optional or required",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch and Login PV application\r\nExpected Result:\r\nUser must be able to login PV application successfully\r\n2. Navigate to ticket sales\nPerform a recievable transaction for the package with the payment plan and the patron created in pre-requisite\r\nExpected Result:\r\nUser must be able to perform the recievable transaction successfully\r\n3. Launch the mytickets application\nLogin using the patron mentioned above\nVerify the orders in To do list page\r\nExpected Result:\r\nThe above created orders must be displayed\r\n4. Select the orders and click renew button\r\nExpected Result:\r\nUser must be navigated to the renewal cart/payments page\r\n5. In the payment page, select a card for scheduling the renewal transaction and complete the payment\r\nExpected Result:\r\nUser must be able to complete the payment and must be navigated to Confirmation page\r\n6. Navigate to History tab>>Recent Orders\r\nExpected Result:\r\nRecent paid orders must be displayed\r\n7. Verify that the Fully paid orders tab is not displayed only when MTHRNTAB is set to false\r\nExpected Result:\r\nFully paid orders tab must not be displayed when MTHROEN is set to false.Default value for MTHRNTAB -true",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch and Login PV application\r\n2. Navigate to ticket sales\nPerform a recievable transaction for the package with the payment plan and the patron created in pre-requisite\r\n3. Launch the mytickets application\nLogin using the patron mentioned above\nVerify the orders in To do list page\r\n4. Select the orders and click renew button\r\n5. In the payment page, select a card for scheduling the renewal transaction and complete the payment\r\n6. Navigate to History tab>>Recent Orders\r\n7. Verify that the Fully paid orders tab is not displayed only when MTHRNTAB is set to false",
        "expected": "1. User must be able to login PV application successfully\r\n2. User must be able to perform the recievable transaction successfully\r\n3. The above created orders must be displayed\r\n4. User must be navigated to the renewal cart/payments page\r\n5. User must be able to complete the payment and must be navigated to Confirmation page\r\n6. Recent paid orders must be displayed\r\n7. Fully paid orders tab must not be displayed when MTHROEN is set to false.Default value for MTHRNTAB -true"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716854,
    "title": "Verify when No Past Due Amount and the next installment is not yet due. Payment plan allows paying next installment before due date._Pending manual payments",
    "section_id": 1686239,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 13,
    "custom_is_automated": false,
    "custom_refs": "C152374",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create a New event and perf accept with renewals supplier, \r\n3. Associate a manual payment plan to the above event  such that the first instalment occur in a very short interval, second instalments due date shall occur in future and the payment plan should allow payments to be paid before it becomes due\r\n4. Complete a receivable transaction with the above events for the patron created\r\n5. Pay the first installment and before the second installment becomes due proceed with the steps below",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MyTixx application, login as patron created at pre requisite\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n2. Verify that the ticket is available in the To Do List- Pending manual Payments\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to schedule pay their installments.\n3.      Pending schedule payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\nExpected Result:\r\nAll the details regarding the receivable le transaction created in pre requisite should  be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n3. Verify when Next installment is due and there is a past due amount_Pending manual payments\nSelect all the orders created in pre requisite\nSelect amount to pay\nClick on pay button\r\nExpected Result:\r\n1. Second installment  due should be available \ni.e. First instalment being - $200 due on 5/1/2014 which was paid off and second installment of $200 due on 6/1/2014 is in future  and the available options are as below\n\nAmount Due: $200\nDue Date:  6/1/2014\n(PVO will allow this order to be placed in the cart.)\nUser should be directed to delivery detail page\r\n4. click on continue in delivery details page\r\nExpected Result:\r\nUser should be navigated to paym\r\n5. 1. Select an option for insurance \n2. Select a payment method\n3. Provide email address\n4. Check Terms and conditions\n5. Click on submit button\r\nExpected Result:\r\nUser should be navigate to the confirmation page which displays the order and delivery details",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MyTixx application, login as patron created at pre requisite\r\n2. Verify that the ticket is available in the To Do List- Pending manual Payments\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to schedule pay their installments.\n3.      Pending schedule payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\n3. Verify when Next installment is due and there is a past due amount_Pending manual payments\nSelect all the orders created in pre requisite\nSelect amount to pay\nClick on pay button\r\n4. click on continue in delivery details page\r\n5. 1. Select an option for insurance \n2. Select a payment method\n3. Provide email address\n4. Check Terms and conditions\n5. Click on submit button",
        "expected": "1. User should able to login to mytixx application successfully\r\n2. All the details regarding the receivable le transaction created in pre requisite should  be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n3. 1. Second installment  due should be available \ni.e. First instalment being - $200 due on 5/1/2014 which was paid off and second installment of $200 due on 6/1/2014 is in future  and the available options are as below\n\nAmount Due: $200\nDue Date:  6/1/2014\n(PVO will allow this order to be placed in the cart.)\nUser should be directed to delivery detail page\r\n4. User should be navigated to paym\r\n5. User should be navigate to the confirmation page which displays the order and delivery details"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716855,
    "title": "Verify with 1 installment (pay in full) payment plan",
    "section_id": 1686239,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 14,
    "custom_is_automated": false,
    "custom_refs": "C152375",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create a New event and perf accept with renewals supplier, \r\n3. Associate a manual payment plan which has a single instalment to the event\r\n4. Complete a receivable transaction with the above event for the patron created",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MyTixx application, login as patron created at pre requisite\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n2. Verify that the ticket is available in the To Do List ? Pending Manual Payments\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\n3.      Pending manual payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\nExpected Result:\r\nAll the details regarding the receivable le transaction created in pre requisite should  be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n3. Select the order created in pre requisite\nClick on installment schedule link and Verify the installments\r\nExpected Result:\r\nA single installment allowing the user to pay in full should be displayed\r\n4. Select the order created in pre requisite\nSelect amount to pay - pay in full\nClick on pay button\r\nExpected Result:\r\nUser should be directed to renewal cart\r\n5. Select an option for insurance \nSelect a payment method\nProvide email address\nCheck Terms and conditions\nClick on submit button\r\nExpected Result:\r\nUser should be navigate to the confirmation page which displays the order and delivery details. Should have paid the whole order amount",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MyTixx application, login as patron created at pre requisite\r\n2. Verify that the ticket is available in the To Do List ? Pending Manual Payments\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\n3.      Pending manual payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\n3. Select the order created in pre requisite\nClick on installment schedule link and Verify the installments\r\n4. Select the order created in pre requisite\nSelect amount to pay - pay in full\nClick on pay button\r\n5. Select an option for insurance \nSelect a payment method\nProvide email address\nCheck Terms and conditions\nClick on submit button",
        "expected": "1. User should able to login to mytixx application successfully\r\n2. All the details regarding the receivable le transaction created in pre requisite should  be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n3. A single installment allowing the user to pay in full should be displayed\r\n4. User should be directed to renewal cart\r\n5. User should be navigate to the confirmation page which displays the order and delivery details. Should have paid the whole order amount"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716856,
    "title": "Create a payment plan with fixed amount and verify the installment schedule modal displays the correct amount",
    "section_id": 1686239,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 15,
    "custom_is_automated": false,
    "custom_refs": "C152376",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create a New event and perf accept with renewals supplier, \r\n3.Associate a manual payment plan which which falls on a regular interval with fixed installments, to the above event\r\n4. Complete a receivable transaction with the above event for the patron created",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MyTixx application, login as patron created at pre requisite\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n2. Verify that the ticket is available in the To Do List ? Pending Manual Payments\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\n3.      Pending manual payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\nExpected Result:\r\nAll the details regarding the receivable le transaction created in pre requisite should  be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n3. Select the order created in pre requisite\nClick on installment schedule link and Verify the installments\r\nExpected Result:\r\nThe installments created in pre requisite should be displayed correctly",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MyTixx application, login as patron created at pre requisite\r\n2. Verify that the ticket is available in the To Do List ? Pending Manual Payments\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\n3.      Pending manual payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\n3. Select the order created in pre requisite\nClick on installment schedule link and Verify the installments",
        "expected": "1. User should able to login to mytixx application successfully\r\n2. All the details regarding the receivable le transaction created in pre requisite should  be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n3. The installments created in pre requisite should be displayed correctly"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716857,
    "title": "Create a payment plan with service charges as Due with first installment checked and verify that the service charges are included in the first installment",
    "section_id": 1686239,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 16,
    "custom_is_automated": false,
    "custom_refs": "C152377",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create a New event and perf accept with renewals supplier, \r\n3. Associate a manual payment plan wiht service due with fisrt installment checked, to the above event\r\n4. Associate a per seat service charge or any other valid service charge for this scenario for the above event\r\n5. Complete a receivable transaction with the above event for the patron created",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MyTixx application, login as patron created at pre requisite\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n2. Verify that the ticket is available in the To Do List ? Pending Manual Payments\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\n3.      Pending manual payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in Pro Venue.\r\nExpected Result:\r\nAll the details regarding the receivable le transaction created in pre requisite should  be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n3. Select the order created in pre requisite\nClick on installment schedule link and Verify the installments\r\nExpected Result:\r\nThe installments created in pre requisite should be displayed correctly, the first installment should show the service charge amount\r\n4. Select the order created in pre requisite\nSelect amount to pay\nClick on pay button\r\nExpected Result:\r\nUser should be directed to renewal cart\r\n5. Select an option for insurance \nSelect a payment method\nProvide email address\nCheck Terms and conditions\nClick on submit button\r\nExpected Result:\r\nUser should be navigate to the confirmation page which displays the order and delivery details\r\n6. Navigate to To Do List. Verify the pending manual payments tab\nVerify the installment schedule of the order\r\nExpected Result:\r\nAll the remaining installments leaving the paid one should be displayed\r\n7. Select the order and pay each installment by repeating step 5, 6 and 7\r\nExpected Result:\r\nAfter each payment, the installment schedule should be updated accordingly. The seats should be added to my inventory once all the installments are settled",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MyTixx application, login as patron created at pre requisite\r\n2. Verify that the ticket is available in the To Do List ? Pending Manual Payments\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\n3.      Pending manual payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in Pro Venue.\r\n3. Select the order created in pre requisite\nClick on installment schedule link and Verify the installments\r\n4. Select the order created in pre requisite\nSelect amount to pay\nClick on pay button\r\n5. Select an option for insurance \nSelect a payment method\nProvide email address\nCheck Terms and conditions\nClick on submit button\r\n6. Navigate to To Do List. Verify the pending manual payments tab\nVerify the installment schedule of the order\r\n7. Select the order and pay each installment by repeating step 5, 6 and 7",
        "expected": "1. User should able to login to mytixx application successfully\r\n2. All the details regarding the receivable le transaction created in pre requisite should  be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n3. The installments created in pre requisite should be displayed correctly, the first installment should show the service charge amount\r\n4. User should be directed to renewal cart\r\n5. User should be navigate to the confirmation page which displays the order and delivery details\r\n6. All the remaining installments leaving the paid one should be displayed\r\n7. After each payment, the installment schedule should be updated accordingly. The seats should be added to my inventory once all the installments are settled"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716858,
    "title": "Create a payment plan with service charges as Due with first installment unchecked and verify that the installments modal",
    "section_id": 1686239,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 17,
    "custom_is_automated": false,
    "custom_refs": "C152378",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create a New event and perf accept with renewals supplier, \r\n3. Associate a manual payment plan wiht service due with fisrt installment unchecked, to the above event\r\n4. Associate a per seat service charge or any other valid service charge for this scenario for the above event\r\n5. Complete a recivable transaction with the above event for the patron created\r\n2. Launch the MyTixx application, login as patron created at pre requisite\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n3. Verify that the ticket is available in the To Do List ? Pending Manual Payments\r\n\r\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \r\n\r\nTo do list is divided into 3 sections\r\n1.      Reservations\r\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\r\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\r\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\r\n3.      Pending manual payments - this can include orders where:\r\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\nExpected Result:\r\nAll the details regarding the receivable le transaction created in pre requisite should  be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n4. Select the order created in pre requisite\r\nClick on installment schedule link and Verify the instalments\r\nExpected Result:\r\nThe installments created in pre requisite should be displayed correctly, the first installment should not show the service charge amount",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create a New event and perf accept with renewals supplier, \r\n3. Associate a manual payment plan wiht service due with fisrt installment unchecked, to the above event\r\n4. Associate a per seat service charge or any other valid service charge for this scenario for the above event\r\n5. Complete a recivable transaction with the above event for the patron created\r\n2. Launch the MyTixx application, login as patron created at pre requisite\r\n3. Verify that the ticket is available in the To Do List ? Pending Manual Payments\r\n\r\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \r\n\r\nTo do list is divided into 3 sections\r\n1.      Reservations\r\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\r\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\r\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\r\n3.      Pending manual payments - this can include orders where:\r\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\n4. Select the order created in pre requisite\r\nClick on installment schedule link and Verify the instalments",
        "expected": "1. \r\n2. User should able to login to mytixx application successfully\r\n3. All the details regarding the receivable le transaction created in pre requisite should  be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n4. The installments created in pre requisite should be displayed correctly, the first installment should not show the service charge amount"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716859,
    "title": "Verify that the patron is not able to place the order into the cart if nothing is currently considered due now when manual payments is selected",
    "section_id": 1686239,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 18,
    "custom_is_automated": false,
    "custom_refs": "C152379",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Create a patron in PV application\r\nRenew together flag must be set to required",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch and Login PV application\r\nExpected Result:\r\nUser should be able to login PV application successfully\r\n2. Navigate to the Supplier administration\nSelect the Event groups tab\nSelect Renewal group from the dropdown\nClick New button\r\nExpected Result:\r\nRenewal group options to create a new renewal group should be displayed\r\n3. Enter the required details to create renewal group\nSelect  Consume credit during online Renewal as ALWAYS\nClick Apply changes\r\nExpected Result:\r\nUser should be able to create a renewals group successfully\r\n4. Create  packages with the above renewal group\r\nExpected Result:\r\nUser should be able to create the package successfully\r\n5. Navigate to ticket sales\nPerform Scheduled payments for the above packages with the patron in pre-requisite\r\nExpected Result:\r\nUser should be able to perform the Scheduled payments successfully.\n\nIf nothing is due now, they should be able to see the next installment due date and the amount due\r\n6. Launch the mytickets application\nLogin using the patron mentioned above\nVerify the orders in To do list page\r\nExpected Result:\r\nThe above created orders should be displayed\r\n7. Select the orders and click renew button\r\nExpected Result:\r\nUser should navigate to the renewal cart/payments page\r\n8. Verify that the patron is able to place the order in the cart only when there is a current due\r\nExpected Result:\r\nIf amount due is greater than past due:  Offer a choice between paying the Amount Due or the Past Due Amount.\nIf nothing is due now, they should be able to see the next installment due date and the amount due",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch and Login PV application\r\n2. Navigate to the Supplier administration\nSelect the Event groups tab\nSelect Renewal group from the dropdown\nClick New button\r\n3. Enter the required details to create renewal group\nSelect  Consume credit during online Renewal as ALWAYS\nClick Apply changes\r\n4. Create  packages with the above renewal group\r\n5. Navigate to ticket sales\nPerform Scheduled payments for the above packages with the patron in pre-requisite\r\n6. Launch the mytickets application\nLogin using the patron mentioned above\nVerify the orders in To do list page\r\n7. Select the orders and click renew button\r\n8. Verify that the patron is able to place the order in the cart only when there is a current due",
        "expected": "1. User should be able to login PV application successfully\r\n2. Renewal group options to create a new renewal group should be displayed\r\n3. User should be able to create a renewals group successfully\r\n4. User should be able to create the package successfully\r\n5. User should be able to perform the Scheduled payments successfully.\n\nIf nothing is due now, they should be able to see the next installment due date and the amount due\r\n6. The above created orders should be displayed\r\n7. User should navigate to the renewal cart/payments page\r\n8. If amount due is greater than past due:  Offer a choice between paying the Amount Due or the Past Due Amount.\nIf nothing is due now, they should be able to see the next installment due date and the amount due"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716860,
    "title": "Verify that the order is not displayed under pending scheduled payments once the order is scheduled",
    "section_id": 1686239,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 19,
    "custom_is_automated": false,
    "custom_refs": "C152380",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1. Create an event, patron\r\n2. Create payment plans, with one of the payment plans with schedule payments as Optional. Create payment plan such that all the installments are in future \r\n3. Perform a reservation transaction for the event with the payment plan with schedule payment option as Optional",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MyTixx application\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n2. Verify that the ticket is available in the To Do list.\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\n3.      Pending manual payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\nExpected Result:\r\nAll the details regarding the receivable le transaction created in pre requisite should  be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n3. Verify the To Do List -> Pending Scheduled Payments block's UI\r\nExpected Result:\r\nThe interface should support \n? A method for displaying an installment schedule based upon the selected payment plan.  The installment schedule shall display a row for each installment with columns for:\no Installment Number\no Due Date \no Installment Amount\no ISCRDMSG\r\n4. Verify that a hyperlink \"Installment schedule\" is displayed at the drop down\r\nExpected Result:\r\nhyperlink \"Installment schedule\" should be displayed as expected.\r\n5. Verify that schedule automatic payments and Manually Pay installments radio buttons should be displayed\r\nExpected Result:\r\nschedule automatic payments and Manually Pay installments radio buttons should be displayed as expected.\r\n6. 1.Select schedule automatic payment radio button and click renew button\n2.Verify that the user navigates to the payment page and the has the option to select\n3. the payment method against each installment \n4. Select Visa card for all the installments\r\nExpected Result:\r\n1.User should be able to select schedule automatic payment  radio button and click renew button\n2. user should be able to navigates to the payment page and the has the option to select  the payment method against each installment as expected.\r\n7. complete the transaction. verify that the order is not displayed under pending scheduled payments tab\r\nExpected Result:\r\norder should not be displayed under pending scheduled payments tab",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MyTixx application\r\n2. Verify that the ticket is available in the To Do list.\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\n3.      Pending manual payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\n3. Verify the To Do List -> Pending Scheduled Payments block's UI\r\n4. Verify that a hyperlink \"Installment schedule\" is displayed at the drop down\r\n5. Verify that schedule automatic payments and Manually Pay installments radio buttons should be displayed\r\n6. 1.Select schedule automatic payment radio button and click renew button\n2.Verify that the user navigates to the payment page and the has the option to select\n3. the payment method against each installment \n4. Select Visa card for all the installments\r\n7. complete the transaction. verify that the order is not displayed under pending scheduled payments tab",
        "expected": "1. User should able to login to mytixx application successfully\r\n2. All the details regarding the receivable le transaction created in pre requisite should  be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n3. The interface should support \n? A method for displaying an installment schedule based upon the selected payment plan.  The installment schedule shall display a row for each installment with columns for:\no Installment Number\no Due Date \no Installment Amount\no ISCRDMSG\r\n4. hyperlink \"Installment schedule\" should be displayed as expected.\r\n5. schedule automatic payments and Manually Pay installments radio buttons should be displayed as expected.\r\n6. 1.User should be able to select schedule automatic payment  radio button and click renew button\n2. user should be able to navigates to the payment page and the has the option to select  the payment method against each installment as expected.\r\n7. order should not be displayed under pending scheduled payments tab"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716861,
    "title": "Verify that the order for which payments are scheduled is displayed in the automatic payments tab",
    "section_id": 1686239,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 20,
    "custom_is_automated": false,
    "custom_refs": "C152381",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1. Create an event, patron\r\n2. Create payment plans, with one of the payment plans with schedule payments as Optional. Create payment plan such that all the installments are in future \r\n3. Perform a reservation transaction for the event with the payment plan with schedule payment option as Optional",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MyTixx application and login as a patron mentioned in pre-requisite\r\nExpected Result:\r\nPatron logged into my tickets successfully\r\n2. Verify that the ticket is available in the To Do list.\nVerify that the order is displayed in Reservations section\r\nExpected Result:\r\nOrders should be displayed in Reservations section as expected.\r\n3. Select the order and select the payment plan from the dropdown. verify that the due now amount is displayed correctly\r\nExpected Result:\r\nThe due now amount should be displayed correctly as expected\r\n4. Verify that a hyperlink \"Installment schedule\" is displayed at the dropdown\r\nExpected Result:\r\nhyperlink \"Installment schedule\" is displayed  as expected.\r\n5. 1.Verify that schedule automatic payments and Manually Pay installments radio buttons should be displayed\n2.Select manually pay installments  radio button and click renew button\r\nExpected Result:\r\nuser should not be allowed to navigate to cart as none of the amount is currently due\r\n6. 1.Select to do list tab and verify that the order is not displayed under pending scheduled payments tab\n2.select the automatic payments tab and verify that the order is displayed in the automatic payments tab\r\nExpected Result:\r\norder should be  displayed in the automatic payments tab",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MyTixx application and login as a patron mentioned in pre-requisite\r\n2. Verify that the ticket is available in the To Do list.\nVerify that the order is displayed in Reservations section\r\n3. Select the order and select the payment plan from the dropdown. verify that the due now amount is displayed correctly\r\n4. Verify that a hyperlink \"Installment schedule\" is displayed at the dropdown\r\n5. 1.Verify that schedule automatic payments and Manually Pay installments radio buttons should be displayed\n2.Select manually pay installments  radio button and click renew button\r\n6. 1.Select to do list tab and verify that the order is not displayed under pending scheduled payments tab\n2.select the automatic payments tab and verify that the order is displayed in the automatic payments tab",
        "expected": "1. Patron logged into my tickets successfully\r\n2. Orders should be displayed in Reservations section as expected.\r\n3. The due now amount should be displayed correctly as expected\r\n4. hyperlink \"Installment schedule\" is displayed  as expected.\r\n5. user should not be allowed to navigate to cart as none of the amount is currently due\r\n6. order should be  displayed in the automatic payments tab"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716862,
    "title": "Verify that the when next installment is not yet due, the error message is displayed correctly",
    "section_id": 1686239,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13123",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 21,
    "custom_is_automated": false,
    "custom_refs": "C152382",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create a New event and perf accept with renewals supplier, \r\n3. Associate a manual payment plan to the above event  such that the first instalment occur in a very short interval, second instalments due date shall occur in future and the payment plan should allow payments to be paid before it becomes due\r\n4. Complete a receivable transaction with the above events for the patron created",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MyTixx application, login as patron created at pre requisite\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n2. Verify that the ticket is available in the To Do List ? Pending manual Payments\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to schedule pay their installments.\n3.      Pending schedule payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\nExpected Result:\r\nAll the details regarding the receivable le transaction created in pre requisite should  be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n3. Select the order and pay the first installment\r\nExpected Result:\r\nUser should be able to pay the 1st installment.\nOrder should be displayed in the to do list page under orders needing manual payments\nDue date for the installment should be displayed as a future date\r\n4. Select the order and click Pay button\r\nExpected Result:\r\nvalid error message is displayed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MyTixx application, login as patron created at pre requisite\r\n2. Verify that the ticket is available in the To Do List ? Pending manual Payments\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to schedule pay their installments.\n3.      Pending schedule payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\n3. Select the order and pay the first installment\r\n4. Select the order and click Pay button",
        "expected": "1. User should able to login to mytixx application successfully\r\n2. All the details regarding the receivable le transaction created in pre requisite should  be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n3. User should be able to pay the 1st installment.\nOrder should be displayed in the to do list page under orders needing manual payments\nDue date for the installment should be displayed as a future date\r\n4. valid error message is displayed"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716863,
    "title": "Verify that the individual tickets total amount is calculated correctly  in renewal and payment section",
    "section_id": 1686239,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13156",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 22,
    "custom_is_automated": false,
    "custom_refs": "C152383",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": ">Create a patron in PV\r\n>Create two packages\r\n> Complete more than one Reservation transactions where renewal group is optional(for both packages)",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MyTixx application, login as patron created at pre requisite\n\nEx:-\nhttp://pvoqa1.tickets.com/buy/MyTicketsServlet?orgid=22570&agency=NGSM_MLB_MYTIXX\n143330/password\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n2. Verify that the ticket is available in the To Do List ? Pending manual Payments\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\n3.      Pending manual payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\nExpected Result:\r\nAll the details regarding the receivable le transaction created in pre requisite should  be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n3. > Select the orders which have single perf in it and continue to renewal page\n>Verify that the tickets total amount is calculated individually for individual orders.\r\nExpected Result:\r\nTickets total amount should be calculated individually for individual orders.\r\n4. > Select the orders which have multiple perf in it and continue to renewal page\n>Verify that the tickets total amount is calculated individually for individual orders.\r\nExpected Result:\r\nTickets total amount should be calculated individually for individual orders.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MyTixx application, login as patron created at pre requisite\n\nEx:-\nhttp://pvoqa1.tickets.com/buy/MyTicketsServlet?orgid=22570&agency=NGSM_MLB_MYTIXX\n143330/password\r\n2. Verify that the ticket is available in the To Do List ? Pending manual Payments\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\n3.      Pending manual payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\n3. > Select the orders which have single perf in it and continue to renewal page\n>Verify that the tickets total amount is calculated individually for individual orders.\r\n4. > Select the orders which have multiple perf in it and continue to renewal page\n>Verify that the tickets total amount is calculated individually for individual orders.",
        "expected": "1. User should able to login to mytixx application successfully\r\n2. All the details regarding the receivable le transaction created in pre requisite should  be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n3. Tickets total amount should be calculated individually for individual orders.\r\n4. Tickets total amount should be calculated individually for individual orders."
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716864,
    "title": "verify the amount displayed correctly in scheduled payment tab after rescheduling it from PV",
    "section_id": 1686239,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13163",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 23,
    "custom_is_automated": false,
    "custom_refs": "C152384",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Complete a receivable transaction\r\n2.Schedule the payment for future using CARD_1 for the order created",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to MyTixx using valid patron\r\nExpected Result:\r\nUser should be logged in\r\n2. Verify if the order is displayed correctly in the 'Scheduled Payments' page\r\nExpected Result:\r\nOrder should be displayed\nAmount in each installments should be displayed correctly\r\n3. Reschedule the installment from PV:-\n>Login to PV\n>Navigate to Ticket Services \n>Reschedule the installments by Splitting the first installment using CARD_1 partial amount and CARD_2 partial amount\n>Click on Apply Changes\r\nExpected Result:\r\nReschedule should be done successfully\r\n4. Verify if the order is displayed correctly in the 'Scheduled Payments' page\n\n>Login to My Tixx again\n>Open To Do list\n>Navigate to Scheduled payments tab\r\nExpected Result:\r\nAmount should be displayed correctly\n>The amount, after splitting an installment should be displayed correctly",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to MyTixx using valid patron\r\n2. Verify if the order is displayed correctly in the 'Scheduled Payments' page\r\n3. Reschedule the installment from PV:-\n>Login to PV\n>Navigate to Ticket Services \n>Reschedule the installments by Splitting the first installment using CARD_1 partial amount and CARD_2 partial amount\n>Click on Apply Changes\r\n4. Verify if the order is displayed correctly in the 'Scheduled Payments' page\n\n>Login to My Tixx again\n>Open To Do list\n>Navigate to Scheduled payments tab",
        "expected": "1. User should be logged in\r\n2. Order should be displayed\nAmount in each installments should be displayed correctly\r\n3. Reschedule should be done successfully\r\n4. Amount should be displayed correctly\n>The amount, after splitting an installment should be displayed correctly"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716865,
    "title": "Verify that the Apply to All Payment button appears after claming a reservation payment with nothing due now",
    "section_id": 1686239,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13231",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 24,
    "custom_is_automated": false,
    "custom_refs": "C152385",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1. Create  the payment plans with schedule payments as Optional with all installements in future\r\n2. Complete a reservation transaction",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to mytickets application\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n2. In To do list, Verify that the order is displayed in \"Orders needing schedule payments\"\r\nExpected Result:\r\nThe order must be displayed in \"Orders needing schedule payments\r\n3. Select the order and verify that the due now amount is displayed correctly\r\nExpected Result:\r\nThe new scheduled payments block shall also group orders by renewal group and they shall observe the 'Renew Together' value, offering the same types of controls which are available in the Reservations block (checkboxes, radio buttons, or schedule all orders in the renewal group).\r\n4. Select Schedule payments installments radio button and click renew button\r\nExpected Result:\r\nIf the patron opts in for scheduled payments, they will be able to schedule payment methods to be charged automatically for future installments and no further manual steps shall be necessary.\r\n5. Verify that the user navigates to the payment page and the has the option to select the payment method against each installment\r\nExpected Result:\r\nonce the patron has selected orders per 'renew together' rules for the category/renewal group and they have selected a payment plan for each, where applicable, they may proceed to the renewal cart\r\n6. Verify that Apply to All Payments button displayed in Payment page\r\nExpected Result:\r\nApply to All Payments button should be displayed on Payment page",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to mytickets application\r\n2. In To do list, Verify that the order is displayed in \"Orders needing schedule payments\"\r\n3. Select the order and verify that the due now amount is displayed correctly\r\n4. Select Schedule payments installments radio button and click renew button\r\n5. Verify that the user navigates to the payment page and the has the option to select the payment method against each installment\r\n6. Verify that Apply to All Payments button displayed in Payment page",
        "expected": "1. User should able to login to mytixx application successfully\r\n2. The order must be displayed in \"Orders needing schedule payments\r\n3. The new scheduled payments block shall also group orders by renewal group and they shall observe the 'Renew Together' value, offering the same types of controls which are available in the Reservations block (checkboxes, radio buttons, or schedule all orders in the renewal group).\r\n4. If the patron opts in for scheduled payments, they will be able to schedule payment methods to be charged automatically for future installments and no further manual steps shall be necessary.\r\n5. once the patron has selected orders per 'renew together' rules for the category/renewal group and they have selected a payment plan for each, where applicable, they may proceed to the renewal cart\r\n6. Apply to All Payments button should be displayed on Payment page"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716866,
    "title": "Verify schedule payments if cart contains some manual payments and some scheduled payments on the same date",
    "section_id": 1686239,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13252",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 25,
    "custom_is_automated": false,
    "custom_refs": "C152386",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create a New event and perf accept with renewals supplier, \r\n3. Associate a manual payment plan which has a single instalment to the event\r\n4. Complete a recivable transaction with the above event for the patron created\r\nCreate two receivable orders in the same renewal group, using two different payment plans where scheduled payments are optional and where some of the installment dates are the same\r\nEx. Due date of 2 orders should be same date.",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MyTixx application, login as patron created at pre requisite\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n2. Verify that the ticket is available in the To Do List ? Pending Manual Payments\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\n3.      Pending manual payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\nExpected Result:\r\nAll the details regarding the receivable le transaction created in pre requisite should  be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n3. Select the order created in pre requisite\nClick on installment schedule link and Verify the instalments\r\nExpected Result:\r\nA sinle installment allowing the user to pay in full should be displayed\r\n4. Select the order created in pre requisite\nSelect amount to pay - pay in full\nClick on pay button\r\nExpected Result:\r\nUser should be directed to renewal cart\r\n5. Select an option for insurance \nSelect a payment method\nProvide email address\nCheck Terms and conditions\nClick on submit button\r\nExpected Result:\r\nUser should be navigate to the confirmation page which displays the order and delivery details. Should have paid the whole order amount",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MyTixx application, login as patron created at pre requisite\r\n2. Verify that the ticket is available in the To Do List ? Pending Manual Payments\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\n3.      Pending manual payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\n3. Select the order created in pre requisite\nClick on installment schedule link and Verify the instalments\r\n4. Select the order created in pre requisite\nSelect amount to pay - pay in full\nClick on pay button\r\n5. Select an option for insurance \nSelect a payment method\nProvide email address\nCheck Terms and conditions\nClick on submit button",
        "expected": "1. User should able to login to mytixx application successfully\r\n2. All the details regarding the receivable le transaction created in pre requisite should  be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n3. A sinle installment allowing the user to pay in full should be displayed\r\n4. User should be directed to renewal cart\r\n5. User should be navigate to the confirmation page which displays the order and delivery details. Should have paid the whole order amount"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716867,
    "title": "Verify user is able to complete a transaction when user selects a schedule payment as required and due now as zero",
    "section_id": 1686239,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13368",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 26,
    "custom_is_automated": false,
    "custom_refs": "C152387",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Create a patron in PV application\r\n2.Create a payment plan with schedule payment as set to required",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the single sales\r\nExpected Result:\r\nUser should be able to launch the single sales\r\n2. Select the tickets from availability page\r\nExpected Result:\r\nUser should able to select the tickets\r\n3. Verify the tickets in shopping cart.\r\nExpected Result:\r\nTickets should be displayed in shopping cart\r\n4. Login with patron\r\nExpected Result:\r\nPatron should able to login\r\n5. Select the Payment plan created in prerequisite\r\nExpected Result:\r\nUser should be able to select the payment plan which is set to required\r\n6. Select the delivery method as mail, $ 5.00 charged for delivery method\r\nExpected Result:\r\nDelivery whith $5.00 should applied\r\n7. Verify the remaining balance, which should include the $5 included for the delivery.\r\nExpected Result:\r\nDelivery charge should included.\r\n8. Complete the transaction\r\nExpected Result:\r\nUser should able to complete the transaction successfully.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the single sales\r\n2. Select the tickets from availability page\r\n3. Verify the tickets in shopping cart.\r\n4. Login with patron\r\n5. Select the Payment plan created in prerequisite\r\n6. Select the delivery method as mail, $ 5.00 charged for delivery method\r\n7. Verify the remaining balance, which should include the $5 included for the delivery.\r\n8. Complete the transaction",
        "expected": "1. User should be able to launch the single sales\r\n2. User should able to select the tickets\r\n3. Tickets should be displayed in shopping cart\r\n4. Patron should able to login\r\n5. User should be able to select the payment plan which is set to required\r\n6. Delivery whith $5.00 should applied\r\n7. Delivery charge should included.\r\n8. User should able to complete the transaction successfully."
      }
    ],
    "custom_jiras": "59.1"
  },
  {
    "id": 30716868,
    "title": "Verify that Apply to All Payments button is not displayed on the new renewal payment page, if there is only one payment for the order (Full payment plan)",
    "section_id": 1686239,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13342",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 27,
    "custom_is_automated": false,
    "custom_refs": "C152388",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1. Login to maintenance site and Set SPMAXPM as 4 at supplier level.\r\n2. Purchase tickets for an event from PV as receivable. Choose custom plan and enter quantity as 1 and interval as 1 week",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch my tickets URL and login as valid user\r\nExpected Result:\r\nUser logged into my tickets successfully\r\n2. Navigate to To Do list page\r\nExpected Result:\r\nTo Do list page should get displayed\r\n3. 1.Select any order for renewal\n2.Select a Pay In full payment plan\n3.Click on Pay button\r\nExpected Result:\r\nPatron is landed in Payment page\r\n4. Verify no Apply to All Payments button is \ndisplayed\r\nExpected Result:\r\nApply to All Payments button is not displayed\r\n5. Click on Submit Payment after entering \nrequired details.\r\nExpected Result:\r\nPatron should be navigated to confirmation page\r\n6. Verify log and db details\r\nExpected Result:\r\nTrnsaction details should be in Log and in ORDER table",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch my tickets URL and login as valid user\r\n2. Navigate to To Do list page\r\n3. 1.Select any order for renewal\n2.Select a Pay In full payment plan\n3.Click on Pay button\r\n4. Verify no Apply to All Payments button is \ndisplayed\r\n5. Click on Submit Payment after entering \nrequired details.\r\n6. Verify log and db details",
        "expected": "1. User logged into my tickets successfully\r\n2. To Do list page should get displayed\r\n3. Patron is landed in Payment page\r\n4. Apply to All Payments button is not displayed\r\n5. Patron should be navigated to confirmation page\r\n6. Trnsaction details should be in Log and in ORDER table"
      }
    ],
    "custom_jiras": "61"
  },
  {
    "id": 30716869,
    "title": "Verify the messaging regarding one-time-use service charge is displayed on installment modal of all applicable orders",
    "section_id": 1686239,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14075",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 28,
    "custom_is_automated": false,
    "custom_refs": "C152389",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Create a one-time-use service charge (In PV , System Setup->Service charges->New->Service charge type should be 'Transaction'->Calculation rule should be 'Fixed'->Check 'Enable One-Time Use Limit' checkbox->Include the package under Context rules\r\n2.For a single patron, create two separate reservation orders for the same package (the one-time service charge would be in place for both the orders)",
    "custom_test_purpose": null,
    "custom_steps": "1. Log in to My tickets account of the patron mentioned in the pre requisite\r\nExpected Result:\r\nUser is landed on Pending Renewals\\Payments tab\r\n2. Open the Installment modal of above created reservation orders and verify the following message\r\nExpected Result:\r\nMessage should be displayed : \n  \"The Installment schedule includes a one time service charge in the amount of {0}. This fee may be represented in several different orders but will only be charged once\"",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Log in to My tickets account of the patron mentioned in the pre requisite\r\n2. Open the Installment modal of above created reservation orders and verify the following message",
        "expected": "1. User is landed on Pending Renewals\\Payments tab\r\n2. Message should be displayed : \n  \"The Installment schedule includes a one time service charge in the amount of {0}. This fee may be represented in several different orders but will only be charged once\""
      }
    ],
    "custom_jiras": "61"
  },
  {
    "id": 30716870,
    "title": "Verify one-time use service charge is charged only once for the patron if multiple orders for the same package with same service charge context,are renewed together",
    "section_id": 1686239,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14075",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 29,
    "custom_is_automated": false,
    "custom_refs": "C152390",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1. Create a one-time-use service charge of amount $10.00\r\n2.The package is added to a Renewal group where the 'Renew Together' is set as 'Optional' or 'Required'\r\n3.For a single patron, create two separate reservation orders for the same package (the one-time service charge $10.00 would be in place for both the orders)",
    "custom_test_purpose": null,
    "custom_steps": "1. Log in to Mytickets account of the patron\r\nExpected Result:\r\nUser is landed on Pending Renewals\\Payments tab\r\n2. Open the Installment modal of above created \nreseravtion orders and verify the message is \ndisplayed on the modal\r\nExpected Result:\r\nMessage should be displayed like:\n\"The Installment schedule includes a one time \nservice charge in the amount of $10.00. This \nfee may be represented in several different \norders but will only be charged once\"\r\n3. Select both the orders to make the payment \ntogether\r\nExpected Result:\r\nUser should be able to complete the step\r\n4. Make the payment and make sure that the service \ncharge is charged only once.\r\nExpected Result:\r\nService charge should be applied only once\r\n5. Navigate to renewal payment page and complete the transaction\r\nExpected Result:\r\nRenewal transaction should be completed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Log in to Mytickets account of the patron\r\n2. Open the Installment modal of above created \nreseravtion orders and verify the message is \ndisplayed on the modal\r\n3. Select both the orders to make the payment \ntogether\r\n4. Make the payment and make sure that the service \ncharge is charged only once.\r\n5. Navigate to renewal payment page and complete the transaction",
        "expected": "1. User is landed on Pending Renewals\\Payments tab\r\n2. Message should be displayed like:\n\"The Installment schedule includes a one time \nservice charge in the amount of $10.00. This \nfee may be represented in several different \norders but will only be charged once\"\r\n3. User should be able to complete the step\r\n4. Service charge should be applied only once\r\n5. Renewal transaction should be completed"
      }
    ],
    "custom_jiras": "61"
  },
  {
    "id": 30716871,
    "title": "Verify user can add a new delivery address other than the existing one",
    "section_id": 1686240,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10274",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C152325",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre requisite :\r\n \r\n \r\nComplete a renewal transaction.\r\nExpected Result:\r\nPre requiste should be met\r\n2. Set BROWPEN as true in maintenance site\r\nExpected Result:\r\ntext code should set successfully\r\n3. Launch MyTickets and navigate to To Do list\r\nExpected Result:\r\nTo do list page should display\r\n4. Verify that the renewals To Do list page is \r\nsegmented in to separate pages while enabling \r\nthe renewals in MyTickets\r\nExpected Result:\r\nRenewals To Do list page should get segmented\r\n5. Select the order mentioned in the pre requiste.\r\nExpected Result:\r\nOrder details  page should display\r\n6. Verify the delivery method dropdown is \r\ndisplayed for the order\r\nExpected Result:\r\nDropdown should display with  Default delivery method\r\n7. Select Mail delivery method from the dropdown.\r\nExpected Result:\r\nDelivery details  should display\r\n8. Click on Add icon and enter a new form is opened\r\nExpected Result:\r\nA pop up should be displayed and user should be enter the details.\r\na.First Name , Last name ,Address 1,Address 2 , City, Country, State and postal code\r\nb.Verify the message is displayed at the bottom of the pop up.\r\n\"Be sure that your delivery details are correct and do not contain any typos or your tickets may be undeliverable.  \r\nThese delivery details will be used for delivery purposes only and will not be saved to your account\"\r\nc.Click on Save and check the detail entered is saved.\r\nd.Login to DB, the delivery details are not saved in DB\r\n9. Verify user can add a new delivery address other than the existing one\r\nExpected Result:\r\nUser should be able to add a new delivery address other than existing one",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre requisite :\r\n \r\n \r\nComplete a renewal transaction.\r\n2. Set BROWPEN as true in maintenance site\r\n3. Launch MyTickets and navigate to To Do list\r\n4. Verify that the renewals To Do list page is \r\nsegmented in to separate pages while enabling \r\nthe renewals in MyTickets\r\n5. Select the order mentioned in the pre requiste.\r\n6. Verify the delivery method dropdown is \r\ndisplayed for the order\r\n7. Select Mail delivery method from the dropdown.\r\n8. Click on Add icon and enter a new form is opened\r\n9. Verify user can add a new delivery address other than the existing one",
        "expected": "1. Pre requiste should be met\r\n2. text code should set successfully\r\n3. To do list page should display\r\n4. Renewals To Do list page should get segmented\r\n5. Order details  page should display\r\n6. Dropdown should display with  Default delivery method\r\n7. Delivery details  should display\r\n8. A pop up should be displayed and user should be enter the details.\r\na.First Name , Last name ,Address 1,Address 2 , City, Country, State and postal code\r\nb.Verify the message is displayed at the bottom of the pop up.\r\n\"Be sure that your delivery details are correct and do not contain any typos or your tickets may be undeliverable.  \r\nThese delivery details will be used for delivery purposes only and will not be saved to your account\"\r\nc.Click on Save and check the detail entered is saved.\r\nd.Login to DB, the delivery details are not saved in DB\r\n9. User should be able to add a new delivery address other than existing one"
      }
    ],
    "custom_jiras": "62.2"
  },
  {
    "id": 30716872,
    "title": "Verify that the order amounts in the To Do List page reflects the delivery service charges for the delivery delivery associated with the order",
    "section_id": 1686240,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10274",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C152326",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre requisite :\r\nA patron with both reservation and receivable orders should be available\r\nExpected Result:\r\nPrerequisites should be met\r\n2. .Set BROWPEN as true\r\nExpected Result:\r\nThe text code should be true at supplier level\r\n3. Launch MyTickets\r\nExpected Result:\r\nThe My Tickets link should be launched and the user is displayed with login\r\n4. Login as valid user (singkle or multiple account)\r\nExpected Result:\r\nThe user should be displayed with the Mytickets account page (for first login or inventory if he has tickets)\r\n5. Go to To Do list and click the same\r\nExpected Result:\r\nThe user should be able to see the pending renewals \\recievable order created\r\n6. Verify the order amount marked in the To Do list page.\r\nExpected Result:\r\nThe order amount should be displayed along with the Tickets item and order number\r\n7. Verify that the order amounts in the To Do List page reflects the delivery service charges for the delivery delivery \r\nassociated with the order(for receivables) or the default delivery (for reservations).\r\nExpected Result:\r\nThe To Do list should be displayed with the order amount reflected with the deklivery charge associated with the order.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre requisite :\r\nA patron with both reservation and receivable orders should be available\r\n2. .Set BROWPEN as true\r\n3. Launch MyTickets\r\n4. Login as valid user (singkle or multiple account)\r\n5. Go to To Do list and click the same\r\n6. Verify the order amount marked in the To Do list page.\r\n7. Verify that the order amounts in the To Do List page reflects the delivery service charges for the delivery delivery \r\nassociated with the order(for receivables) or the default delivery (for reservations).",
        "expected": "1. Prerequisites should be met\r\n2. The text code should be true at supplier level\r\n3. The My Tickets link should be launched and the user is displayed with login\r\n4. The user should be displayed with the Mytickets account page (for first login or inventory if he has tickets)\r\n5. The user should be able to see the pending renewals \\recievable order created\r\n6. The order amount should be displayed along with the Tickets item and order number\r\n7. The To Do list should be displayed with the order amount reflected with the deklivery charge associated with the order."
      }
    ],
    "custom_jiras": "62.2"
  },
  {
    "id": 30716873,
    "title": "Verify that the patron have the ability to select a delivery method from a list of available deliveries for eligible each order in the cart.",
    "section_id": 1686240,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10274",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C152327",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre requisite :\r\n \r\nA patron with both reservation and receivable orders should be available\r\nExpected Result:\r\nPrerequisites should be met\r\n2. Set BROWPEN as true\r\nExpected Result:\r\nThe text code should be set as true.\r\n3. Launch the Mytickets link\r\nExpected Result:\r\nThe my Tickets link should be able to launch\r\n4. Go to To Do list\r\nExpected Result:\r\nThe user should be displayed with the pending renewals page.\r\n5. Verify that the renewals To Do list page is segmented in to separate pages while enabling the renewals in MyTickets\r\nExpected Result:\r\nThe breadcrumb should be dispayed carrying 4 segments :\r\n\r\n1.Pending renewal page\r\n2.Delivery options\r\n3.Credit and payments\r\n4.Confirmation\r\n6. Navigate to Delivery tab and verify that the user is able to select delivery method for each orders in the list\r\nExpected Result:\r\nThe patron should be displayed with the delivery methods dropdown from which he is able to choose the required \r\ndelivery.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre requisite :\r\n \r\nA patron with both reservation and receivable orders should be available\r\n2. Set BROWPEN as true\r\n3. Launch the Mytickets link\r\n4. Go to To Do list\r\n5. Verify that the renewals To Do list page is segmented in to separate pages while enabling the renewals in MyTickets\r\n6. Navigate to Delivery tab and verify that the user is able to select delivery method for each orders in the list",
        "expected": "1. Prerequisites should be met\r\n2. The text code should be set as true.\r\n3. The my Tickets link should be able to launch\r\n4. The user should be displayed with the pending renewals page.\r\n5. The breadcrumb should be dispayed carrying 4 segments :\r\n\r\n1.Pending renewal page\r\n2.Delivery options\r\n3.Credit and payments\r\n4.Confirmation\r\n6. The patron should be displayed with the delivery methods dropdown from which he is able to choose the required \r\ndelivery."
      }
    ],
    "custom_jiras": "62.2"
  },
  {
    "id": 30716874,
    "title": "Verify if the service charge is displayed correctly in the confirmation email",
    "section_id": 1686240,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10274",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C152328",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre requisite :\r\n1. A patron with receivable & reservation order(s) should be available, who should have account credit associated \r\nwith his Provenue account.\r\n2.The ticket for the event must be associated with the delivery service charges.\r\n3.Set the TADIM text description\r\nExpected Result:\r\nPre-requisite should be met\r\n2. Set BROWPEN as true\r\nExpected Result:\r\nBROWPEN is set to true\r\n3. Launch MyTickets.\r\nExpected Result:\r\nMytickets page should get displayed\r\n4. Login as the patron who has created receivable & reservation order(s).\r\nExpected Result:\r\nPatron logged into MyTickets successfully\r\n5. Click on To Do List from Top Navigation panel.\r\nExpected Result:\r\nRenewals is shown under To Do list\r\n6. Verify the Order ID, Buyer Type, sections, amount due etc. listed in the order summary page, and should select 2 \r\norders.\r\nExpected Result:\r\nOrder ID, Buyer Type, sections, amount due etc. listed in the order summary page, and 2 orders should be selected\r\n7. Verify the Get renewal cart response from the spunk tool.\r\nExpected Result:\r\nGet renewal cart response from the spunk tool.\r\n8. Verify Get Renewal Cart response received from ProVenue shall contain any adjustments to the cart totals, amount \r\ndue; installments and balance due after all appropriate delivery service charges have been applied.\r\nExpected Result:\r\nGet Renewal Cart response received from ProVenue contain any adjustments to the cart totals, amount due; \r\ninstallments and balance due after all appropriate delivery service charges has been applied.\r\n9. Verify that in the financial summary, there is associated delivery fee info.\r\nExpected Result:\r\nIn the financial summary, associated delivery fee info is there\r\n10. Give all the required details and confirm the email address\r\nExpected Result:\r\nAll the required details are given\r\n11. Check the box for agreeing the terms and conditions and Click on Submit and checkout button.\r\nExpected Result:\r\nCheckbox selected for agreeing the terms and conditions\r\n12. The user should be navigated to Confirmation page\r\nExpected Result:\r\nConfirmation page should get displayed\r\n13. Verify that the separate line item is there in the finance summary for the delivery charge information other than \r\nconvenience fee.\r\nExpected Result:\r\nThe separate line item is there in the finance summary for the delivery charge information other than convenience fee.\r\n14. Verify the Confirmation email.\r\nIt should have :\r\n? Delivery Method\r\n? Delivery Details\r\n? Order ID(s)\r\no Ticket Item Description\r\nExpected Result:\r\nConfirmation email should have\r\nDelivery Method\r\nDelivery Details\r\nOrder ID(s)\r\nTicket Item Description",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre requisite :\r\n1. A patron with receivable & reservation order(s) should be available, who should have account credit associated \r\nwith his Provenue account.\r\n2.The ticket for the event must be associated with the delivery service charges.\r\n3.Set the TADIM text description\r\n2. Set BROWPEN as true\r\n3. Launch MyTickets.\r\n4. Login as the patron who has created receivable & reservation order(s).\r\n5. Click on To Do List from Top Navigation panel.\r\n6. Verify the Order ID, Buyer Type, sections, amount due etc. listed in the order summary page, and should select 2 \r\norders.\r\n7. Verify the Get renewal cart response from the spunk tool.\r\n8. Verify Get Renewal Cart response received from ProVenue shall contain any adjustments to the cart totals, amount \r\ndue; installments and balance due after all appropriate delivery service charges have been applied.\r\n9. Verify that in the financial summary, there is associated delivery fee info.\r\n10. Give all the required details and confirm the email address\r\n11. Check the box for agreeing the terms and conditions and Click on Submit and checkout button.\r\n12. The user should be navigated to Confirmation page\r\n13. Verify that the separate line item is there in the finance summary for the delivery charge information other than \r\nconvenience fee.\r\n14. Verify the Confirmation email.\r\nIt should have :\r\n? Delivery Method\r\n? Delivery Details\r\n? Order ID(s)\r\no Ticket Item Description",
        "expected": "1. Pre-requisite should be met\r\n2. BROWPEN is set to true\r\n3. Mytickets page should get displayed\r\n4. Patron logged into MyTickets successfully\r\n5. Renewals is shown under To Do list\r\n6. Order ID, Buyer Type, sections, amount due etc. listed in the order summary page, and 2 orders should be selected\r\n7. Get renewal cart response from the spunk tool.\r\n8. Get Renewal Cart response received from ProVenue contain any adjustments to the cart totals, amount due; \r\ninstallments and balance due after all appropriate delivery service charges has been applied.\r\n9. In the financial summary, associated delivery fee info is there\r\n10. All the required details are given\r\n11. Checkbox selected for agreeing the terms and conditions\r\n12. Confirmation page should get displayed\r\n13. The separate line item is there in the finance summary for the delivery charge information other than convenience fee.\r\n14. Confirmation email should have\r\nDelivery Method\r\nDelivery Details\r\nOrder ID(s)\r\nTicket Item Description"
      }
    ],
    "custom_jiras": "62.2"
  },
  {
    "id": 30716875,
    "title": "Verify that confirmation email when there are no service charges",
    "section_id": 1686240,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10274",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C152329",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1. Create New Patron in PV BOTS(or use an existing patron)\n2. Create New event and perf accept with renewals supplier\n3. Add a card to the patron\r\nExpected Result:\r\nUser should be able to complete the pre-requisite successfully\r\n2. Pre requisite 2:\n1. Launch the PV link\n2. Complete a reservation transaction\n3. Create a schedule payment plan\r\nExpected Result:\r\nUser should be able to complete the pre-requisite successfully\r\n3. Set the text code RCCEMSG1 at supplier level\r\nExpected Result:\r\nUser should be able to set the textcode at the supplier level\r\n4. Launch the MyTixx application and login\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n5. Verify that the ticket is available in the To Do list Renewals tab and the scheduled payment plan is shown in the dropdown\r\nExpected Result:\r\nticket should be available in the To Do list Renewals tab and the scheduled payment plan should be shown in the dropdown\r\n6. Click Renew button against the renewal order\nSelect the card mentioned in pre-requisite in the payment page\nClick Apply changes\r\nExpected Result:\r\nUser should be able to complete the renewal transaction sucessfully\r\n7. Verify the email recieved\r\nExpected Result:\r\nData should be displayed correctly in the email",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Create New Patron in PV BOTS(or use an existing patron)\n2. Create New event and perf accept with renewals supplier\n3. Add a card to the patron\r\n2. Pre requisite 2:\n1. Launch the PV link\n2. Complete a reservation transaction\n3. Create a schedule payment plan\r\n3. Set the text code RCCEMSG1 at supplier level\r\n4. Launch the MyTixx application and login\r\n5. Verify that the ticket is available in the To Do list Renewals tab and the scheduled payment plan is shown in the dropdown\r\n6. Click Renew button against the renewal order\nSelect the card mentioned in pre-requisite in the payment page\nClick Apply changes\r\n7. Verify the email recieved",
        "expected": "1. User should be able to complete the pre-requisite successfully\r\n2. User should be able to complete the pre-requisite successfully\r\n3. User should be able to set the textcode at the supplier level\r\n4. User should able to login to mytixx application successfully\r\n5. ticket should be available in the To Do list Renewals tab and the scheduled payment plan should be shown in the dropdown\r\n6. User should be able to complete the renewal transaction sucessfully\r\n7. Data should be displayed correctly in the email"
      }
    ],
    "custom_jiras": "62.2"
  },
  {
    "id": 30716876,
    "title": "Verify that the application adds the delivery fee  for the orders having same delivery method and different delivery details",
    "section_id": 1686240,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10274",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C152330",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre requisite :\r\nA patron with both reservation and receivable \r\norders should be available and both orders \r\nshould be in different renewal groups\r\n\r\nUser should have multiple orders within same \r\ndelivery method and same delivery details.\r\nExpected Result:\r\nPre requiste should be set\r\n2. Set BROWPEN as true\r\nLaunch MyTickets and navigate to To Do list\r\nExpected Result:\r\nUser should be able to login to application\r\n3. Verify that the renewals To Do list page is \r\nsegmented in to separate pages while enabling \r\nthe renewals in MyTickets\r\nExpected Result:\r\nOrder shoudl be displayed in Orders needing payments\r\n4. Select any renewal order and proceed to  \r\ndelivery page and then payment page.\r\nExpected Result:\r\nSelection successful\r\n5. Verify that the application adds the delivery fee  \r\nfor the orders having same delivery method and \r\ndifferent delivery details\r\nExpected Result:\r\nThe application adds the delivery fee  for the \r\norders having same delivery method and \r\ndifferent delivery details\r\n6. Complete the trasnaction\r\n\r\nNote : order should not be eligible for redelivery\r\nExpected Result:\r\nTransaction completed successfully",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre requisite :\r\nA patron with both reservation and receivable \r\norders should be available and both orders \r\nshould be in different renewal groups\r\n\r\nUser should have multiple orders within same \r\ndelivery method and same delivery details.\r\n2. Set BROWPEN as true\r\nLaunch MyTickets and navigate to To Do list\r\n3. Verify that the renewals To Do list page is \r\nsegmented in to separate pages while enabling \r\nthe renewals in MyTickets\r\n4. Select any renewal order and proceed to  \r\ndelivery page and then payment page.\r\n5. Verify that the application adds the delivery fee  \r\nfor the orders having same delivery method and \r\ndifferent delivery details\r\n6. Complete the trasnaction\r\n\r\nNote : order should not be eligible for redelivery",
        "expected": "1. Pre requiste should be set\r\n2. User should be able to login to application\r\n3. Order shoudl be displayed in Orders needing payments\r\n4. Selection successful\r\n5. The application adds the delivery fee  for the \r\norders having same delivery method and \r\ndifferent delivery details\r\n6. Transaction completed successfully"
      }
    ],
    "custom_jiras": "62.2"
  },
  {
    "id": 30716877,
    "title": "Verify that the delivery text  TADIM has been displayed in the delivery page while selecting the respective delivery from the dropdown",
    "section_id": 1686240,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10274",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_refs": "C152331",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre requisite :\r\n1. A patron with both reservation and receivable orders should be available and both orders should be in different \r\nrenewal groups\r\n2. Set BROWPEN as true\r\nExpected Result:\r\nPre requiste should be met\r\n2. Launch the mytixx link\r\nExpected Result:\r\nLogin modal should be displayed\r\n3. Login as the patron mentioned in the prerequiste\r\nExpected Result:\r\nLogin should be successful\r\n4. Verify that a number is dipslayed against the to do list tab\r\nExpected Result:\r\nA count should be displayed\r\n5. Click on the to do list tab\r\nExpected Result:\r\nAll the available renewal orders should get displayed\r\n6. Verify that the renewals To Do list page is segmented in to separate pages while enabling the renewals in MyTickets\r\nExpected Result:\r\nThe renewal orders should be displayed in the to do list page should be segemented in seperate pages\r\n7. Select any renewal order and proceed to delivery page and then payment page\r\nExpected Result:\r\nNavigation till the payment page should be \r\nsuccessful\r\n8. Verify that the delivery text  TADIM has been \r\ndisplayed in the delivery page while selecting the \r\nrespective delivery from the dropdown\r\nExpected Result:\r\nThe delivery text  TADIM should be displayed in \r\nthe delivery page while selecting the respective \r\ndelivery from the dropdown\r\n9. Complete the transaction\r\nExpected Result:\r\nRenewal should be completed successfully",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre requisite :\r\n1. A patron with both reservation and receivable orders should be available and both orders should be in different \r\nrenewal groups\r\n2. Set BROWPEN as true\r\n2. Launch the mytixx link\r\n3. Login as the patron mentioned in the prerequiste\r\n4. Verify that a number is dipslayed against the to do list tab\r\n5. Click on the to do list tab\r\n6. Verify that the renewals To Do list page is segmented in to separate pages while enabling the renewals in MyTickets\r\n7. Select any renewal order and proceed to delivery page and then payment page\r\n8. Verify that the delivery text  TADIM has been \r\ndisplayed in the delivery page while selecting the \r\nrespective delivery from the dropdown\r\n9. Complete the transaction",
        "expected": "1. Pre requiste should be met\r\n2. Login modal should be displayed\r\n3. Login should be successful\r\n4. A count should be displayed\r\n5. All the available renewal orders should get displayed\r\n6. The renewal orders should be displayed in the to do list page should be segemented in seperate pages\r\n7. Navigation till the payment page should be \r\nsuccessful\r\n8. The delivery text  TADIM should be displayed in \r\nthe delivery page while selecting the respective \r\ndelivery from the dropdown\r\n9. Renewal should be completed successfully"
      }
    ],
    "custom_jiras": "62.2"
  },
  {
    "id": 30716878,
    "title": "Verify that the delivery method dropdown displayes  default delivery method for reservation orders",
    "section_id": 1686240,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10274",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_refs": "C152332",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre requisite :\r\n1. A patron with both reservation and receivable orders should be available and both orders should be in different \r\nrenewal groups\r\n2. Set BROWPEN as true\r\nExpected Result:\r\nPre requiste should be met\r\n2. Launch the mytixx link\r\nExpected Result:\r\nLogin modal should be displayed\r\n3. Login as the patron mentioned in the prerequiste\r\nExpected Result:\r\nLogin should be successful\r\n4. Verify that a number is dipslayed against the to do list tab\r\nExpected Result:\r\nA count should be displayed\r\n5. Click on the to do list tab\r\nExpected Result:\r\nAll the available renewal orders should get displayed\r\n6. Verify that the renewals To Do list page is segmented in to separate pages while enabling the renewals in MyTickets\r\nExpected Result:\r\nThe renewal orders should be displayed in the to do list page should be segemented in seperate pages\r\n7. Select any renewal order and proceed to delivery page and then payment page\r\nExpected Result:\r\nNavigation till the payment page should be \r\nsuccessful\r\n8. Verify that the delivery method dropdown \r\ndisplayes  default delivery method for reservation \r\norders\r\nExpected Result:\r\nThe delivery method dropdown \r\nshould  display  default delivery method for \r\nreservation orders in get renewal orders call",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre requisite :\r\n1. A patron with both reservation and receivable orders should be available and both orders should be in different \r\nrenewal groups\r\n2. Set BROWPEN as true\r\n2. Launch the mytixx link\r\n3. Login as the patron mentioned in the prerequiste\r\n4. Verify that a number is dipslayed against the to do list tab\r\n5. Click on the to do list tab\r\n6. Verify that the renewals To Do list page is segmented in to separate pages while enabling the renewals in MyTickets\r\n7. Select any renewal order and proceed to delivery page and then payment page\r\n8. Verify that the delivery method dropdown \r\ndisplayes  default delivery method for reservation \r\norders",
        "expected": "1. Pre requiste should be met\r\n2. Login modal should be displayed\r\n3. Login should be successful\r\n4. A count should be displayed\r\n5. All the available renewal orders should get displayed\r\n6. The renewal orders should be displayed in the to do list page should be segemented in seperate pages\r\n7. Navigation till the payment page should be \r\nsuccessful\r\n8. The delivery method dropdown \r\nshould  display  default delivery method for \r\nreservation orders in get renewal orders call"
      }
    ],
    "custom_jiras": "62.2"
  },
  {
    "id": 30716879,
    "title": "Verify that the delivery method shall default to the currently associated delivery method for receivables orders",
    "section_id": 1686240,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10274",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 9,
    "custom_is_automated": false,
    "custom_refs": "C152333",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre requisite :\r\n1. A patron with both reservation and receivable orders should be available and both orders should be in different \r\nrenewal groups\r\n2. Set BROWPEN as true\r\nExpected Result:\r\nPre requiste should be met\r\n2. Launch the mytixx link\r\nExpected Result:\r\nLogin modal should be displayed\r\n3. Login as the patron mentioned in the prerequiste\r\nExpected Result:\r\nLogin should be successful\r\n4. Verify that a number is dipslayed against the to do list tab\r\nExpected Result:\r\nA count should be displayed\r\n5. Click on the to do list tab\r\nExpected Result:\r\nAll the available renewal orders should get displayed\r\n6. Verify that the renewals To Do list page is segmented in to separate pages while enabling the renewals in MyTickets\r\nExpected Result:\r\nThe renewal orders should be displayed in the to do list page should be segemented in seperate pages\r\n7. Select any renewal order and proceed to delivery page and then payment page\r\nExpected Result:\r\nNavigation till the payment page should be \r\nsuccessful\r\n8. Verify that the delivery method shall default to \r\nthe currently associated delivery method for \r\nreceivables orders\r\nExpected Result:\r\nThe delivery method shall default to the \r\ncurrently associated delivery method for \r\nreceivables orders in the getrenewal order \r\ncall",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre requisite :\r\n1. A patron with both reservation and receivable orders should be available and both orders should be in different \r\nrenewal groups\r\n2. Set BROWPEN as true\r\n2. Launch the mytixx link\r\n3. Login as the patron mentioned in the prerequiste\r\n4. Verify that a number is dipslayed against the to do list tab\r\n5. Click on the to do list tab\r\n6. Verify that the renewals To Do list page is segmented in to separate pages while enabling the renewals in MyTickets\r\n7. Select any renewal order and proceed to delivery page and then payment page\r\n8. Verify that the delivery method shall default to \r\nthe currently associated delivery method for \r\nreceivables orders",
        "expected": "1. Pre requiste should be met\r\n2. Login modal should be displayed\r\n3. Login should be successful\r\n4. A count should be displayed\r\n5. All the available renewal orders should get displayed\r\n6. The renewal orders should be displayed in the to do list page should be segemented in seperate pages\r\n7. Navigation till the payment page should be \r\nsuccessful\r\n8. The delivery method shall default to the \r\ncurrently associated delivery method for \r\nreceivables orders in the getrenewal order \r\ncall"
      }
    ],
    "custom_jiras": "62.2"
  },
  {
    "id": 30716880,
    "title": "Verify that the delivery charge is  added seperately while adding  multiple orders within different delivery  in to single renewal cart",
    "section_id": 1686240,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10274",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 10,
    "custom_is_automated": false,
    "custom_refs": "C152334",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre requisite :\r\nA patron with both reservation and receivable orders should be available\r\nExpected Result:\r\nPrerequisites should be met\r\n2. .Set BROWPEN as true\r\nExpected Result:\r\nThe text code should be true at supplier level\r\n3. Launch MyTickets\r\nExpected Result:\r\nThe My Tickets link should be launched and the user is displayed with login\r\n4. Login as valid user (singkle or multiple account)\r\nExpected Result:\r\nThe user should be displayed with the Mytickets account page (for first login or inventory if he has tickets)\r\n5. Go to To Do list and click the same\r\nExpected Result:\r\nThe user should be able to see the pending renewals \\recievable order created\r\n6. Verify the order amount marked in the To Do list page.\r\nExpected Result:\r\nThe order amount should be displayed along with the Tickets item and order number\r\n7. Verify that the order amounts in the To Do List page reflects the delivery service charges for the delivery delivery \r\nassociated with the order(for receivables) or the default delivery (for reservations).\r\nExpected Result:\r\nThe To Do list should be displayed with the order amount reflected with the deklivery charge associated with the order.\r\n8. Verify that the delivery charge is  added \r\nseperately while adding  multiple orders within \r\ndifferent delivery  in to single renewal cart\r\nExpected Result:\r\nExpected behavior:\r\n\r\n\r\nThe delivery charge should  be added \r\nseperatelywhile adding  multiple orders within \r\ndifferent delivery  in to single renewal cart",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre requisite :\r\nA patron with both reservation and receivable orders should be available\r\n2. .Set BROWPEN as true\r\n3. Launch MyTickets\r\n4. Login as valid user (singkle or multiple account)\r\n5. Go to To Do list and click the same\r\n6. Verify the order amount marked in the To Do list page.\r\n7. Verify that the order amounts in the To Do List page reflects the delivery service charges for the delivery delivery \r\nassociated with the order(for receivables) or the default delivery (for reservations).\r\n8. Verify that the delivery charge is  added \r\nseperately while adding  multiple orders within \r\ndifferent delivery  in to single renewal cart",
        "expected": "1. Prerequisites should be met\r\n2. The text code should be true at supplier level\r\n3. The My Tickets link should be launched and the user is displayed with login\r\n4. The user should be displayed with the Mytickets account page (for first login or inventory if he has tickets)\r\n5. The user should be able to see the pending renewals \\recievable order created\r\n6. The order amount should be displayed along with the Tickets item and order number\r\n7. The To Do list should be displayed with the order amount reflected with the deklivery charge associated with the order.\r\n8. Expected behavior:\r\n\r\n\r\nThe delivery charge should  be added \r\nseperatelywhile adding  multiple orders within \r\ndifferent delivery  in to single renewal cart"
      }
    ],
    "custom_jiras": "62.2"
  },
  {
    "id": 30716881,
    "title": "Verify that the delivery charge is not added seperately while adding  multiple orders within same delivery  in to single renewal cart",
    "section_id": 1686240,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10274",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 11,
    "custom_is_automated": false,
    "custom_refs": "C152335",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre requisite :\r\nA patron with both reservation and receivable orders should be available\r\nExpected Result:\r\nPrerequisites should be met\r\n2. .Set BROWPEN as true\r\nExpected Result:\r\nThe text code should be true at supplier level\r\n3. Launch MyTickets\r\nExpected Result:\r\nThe My Tickets link should be launched and the user is displayed with login\r\n4. Login as valid user (singkle or multiple account)\r\nExpected Result:\r\nThe user should be displayed with the Mytickets account page (for first login or inventory if he has tickets)\r\n5. Go to To Do list and click the same\r\nExpected Result:\r\nThe user should be able to see the pending renewals \\recievable order created\r\n6. Verify the order amount marked in the To Do list page.\r\nExpected Result:\r\nThe order amount should be displayed along with the Tickets item and order number\r\n7. Verify that the order amounts in the To Do List page reflects the delivery service charges for the delivery delivery \r\nassociated with the order(for receivables) or the default delivery (for reservations).\r\nExpected Result:\r\nThe To Do list should be displayed with the order amount reflected with the deklivery charge associated with the order.\r\n8. Verify that the delivery charge is not added seperately while adding  multiple orders within same delivery  in to single \r\nrenewal cart\r\nExpected Result:\r\nExpected behavior:\r\n \r\n \r\nThe delivery charge should not be added \r\nseperately while adding  multiple orders within \r\nsame delivery  in to single renewal cart \r\n\r\nFor example, each order may individually reflect a \r\n$4.00 charge for UPS from the To Do List page.  \r\nHowever, with the appropriate ProVenue service \r\ncharge configuration, placing both orders into a \r\nsingle renewal cart and placing them into a single \r\nUPS delivery could result in a total of $4.00 in \r\ndelivery charges, rather than charging $4.00 for \r\neach order.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre requisite :\r\nA patron with both reservation and receivable orders should be available\r\n2. .Set BROWPEN as true\r\n3. Launch MyTickets\r\n4. Login as valid user (singkle or multiple account)\r\n5. Go to To Do list and click the same\r\n6. Verify the order amount marked in the To Do list page.\r\n7. Verify that the order amounts in the To Do List page reflects the delivery service charges for the delivery delivery \r\nassociated with the order(for receivables) or the default delivery (for reservations).\r\n8. Verify that the delivery charge is not added seperately while adding  multiple orders within same delivery  in to single \r\nrenewal cart",
        "expected": "1. Prerequisites should be met\r\n2. The text code should be true at supplier level\r\n3. The My Tickets link should be launched and the user is displayed with login\r\n4. The user should be displayed with the Mytickets account page (for first login or inventory if he has tickets)\r\n5. The user should be able to see the pending renewals \\recievable order created\r\n6. The order amount should be displayed along with the Tickets item and order number\r\n7. The To Do list should be displayed with the order amount reflected with the deklivery charge associated with the order.\r\n8. Expected behavior:\r\n \r\n \r\nThe delivery charge should not be added \r\nseperately while adding  multiple orders within \r\nsame delivery  in to single renewal cart \r\n\r\nFor example, each order may individually reflect a \r\n$4.00 charge for UPS from the To Do List page.  \r\nHowever, with the appropriate ProVenue service \r\ncharge configuration, placing both orders into a \r\nsingle renewal cart and placing them into a single \r\nUPS delivery could result in a total of $4.00 in \r\ndelivery charges, rather than charging $4.00 for \r\neach order."
      }
    ],
    "custom_jiras": "62.2"
  },
  {
    "id": 30716882,
    "title": "Verify \"add new delivery details\" icon is  displayed if MRNDDIE is not set",
    "section_id": 1686240,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-1179",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 12,
    "custom_is_automated": false,
    "custom_refs": "C152336",
    "custom_pvo_pvodc_category": 11,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set PV Change Delivery as true\r\n2.Have multiple delivery methods set for the supplier\r\n3.Have renewal reservation items for a patron\r\n4.Do not set MRNDDIE(Default is true)",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MTD link and login as the patron mentioned in the prerequisite\r\nExpected Result:\r\nLogin should be successful\r\n2. Navigate to To Do List\r\nExpected Result:\r\nRenewal and Reservation order should be displayed\r\n3. Select the reservation item mentioned in the prerequiste, select the payment plan and click on Renew\r\nExpected Result:\r\nUser should be navigated to the Delivery page\r\n4. Verify that all available delivery methods are displayed under \"Select Delivery method\" drop down\r\nExpected Result:\r\nAll available delivery methods should be displayed under \"Select Delivery method\" drop down\r\n5. Verify \"add new delivery detail\" icon (green color + icon) is displayed\r\nExpected Result:\r\n\"Add new delivery detail\" icon (green color + icon) should be displayed\r\n6. Verify Delivery Details are displayed in drop down\r\nExpected Result:\r\nDelivery Details should be displayed in drop down\r\n7. Select the desired delivery method \r\nExpected Result:\r\nDelivery method should be selected\r\n8. Add new delivery details\r\nExpected Result:\r\nNew details should be added successfully\r\n9. Select the above delivery method and click on Continue\r\nExpected Result:\r\nUser should be navigated to the Payment page\r\n10. Enter all the required details and click on Submit Payment\r\nExpected Result:\r\nConfirmation page should be displayed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MTD link and login as the patron mentioned in the prerequisite\r\n2. Navigate to To Do List\r\n3. Select the reservation item mentioned in the prerequiste, select the payment plan and click on Renew\r\n4. Verify that all available delivery methods are displayed under \"Select Delivery method\" drop down\r\n5. Verify \"add new delivery detail\" icon (green color + icon) is displayed\r\n6. Verify Delivery Details are displayed in drop down\r\n7. Select the desired delivery method \r\n8. Add new delivery details\r\n9. Select the above delivery method and click on Continue\r\n10. Enter all the required details and click on Submit Payment",
        "expected": "1. Login should be successful\r\n2. Renewal and Reservation order should be displayed\r\n3. User should be navigated to the Delivery page\r\n4. All available delivery methods should be displayed under \"Select Delivery method\" drop down\r\n5. \"Add new delivery detail\" icon (green color + icon) should be displayed\r\n6. Delivery Details should be displayed in drop down\r\n7. Delivery method should be selected\r\n8. New details should be added successfully\r\n9. User should be navigated to the Payment page\r\n10. Confirmation page should be displayed"
      }
    ],
    "custom_jiras": "65.6"
  },
  {
    "id": 30716883,
    "title": "Verify \"add new delivery details\" icon is  displayed if MRNDDIE is set as true",
    "section_id": 1686240,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-1179",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 13,
    "custom_is_automated": false,
    "custom_refs": "C152337",
    "custom_pvo_pvodc_category": 11,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set PV Change Delivery as true\r\n2.Have multiple delivery methods set for the supplier\r\n3.Have renewal reservation items for a patron\r\n4.Set MRNDDIE=true",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MTD link and login as the patron mentioned in the prerequisite\r\nExpected Result:\r\nLogin should be successful\r\n2. Navigate to To Do List\r\nExpected Result:\r\nRenewal and Reservation order should be displayed\r\n3. Select the reservation item mentioned in the prerequiste, select the payment plan and click on Renew\r\nExpected Result:\r\nUser should be navigated to the Delivery page\r\n4. Verify that all available delivery methods are displayed under \"Select Delivery method\" drop down\r\nExpected Result:\r\nAll available delivery methods should be displayed under \"Select Delivery method\" drop down\r\n5. Verify \"add new delivery detail\" icon (green color + icon) is displayed\r\nExpected Result:\r\n\"Add new delivery detail\" icon (green color + icon) should be displayed\r\n6. Verify Delivery Details are displayed in drop down\r\nExpected Result:\r\nDelivery Details should be displayed in drop down\r\n7. Select the desired delivery method \r\nExpected Result:\r\nDelivery method should be selected\r\n8. Add new delivery details\r\nExpected Result:\r\nNew details should be added successfully\r\n9. Select the above delivery method and click on Continue\r\nExpected Result:\r\nUser should be navigated to the Payment page\r\n10. Enter all the required details and click on Submit Payment\r\nExpected Result:\r\nConfirmation page should be displayed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MTD link and login as the patron mentioned in the prerequisite\r\n2. Navigate to To Do List\r\n3. Select the reservation item mentioned in the prerequiste, select the payment plan and click on Renew\r\n4. Verify that all available delivery methods are displayed under \"Select Delivery method\" drop down\r\n5. Verify \"add new delivery detail\" icon (green color + icon) is displayed\r\n6. Verify Delivery Details are displayed in drop down\r\n7. Select the desired delivery method \r\n8. Add new delivery details\r\n9. Select the above delivery method and click on Continue\r\n10. Enter all the required details and click on Submit Payment",
        "expected": "1. Login should be successful\r\n2. Renewal and Reservation order should be displayed\r\n3. User should be navigated to the Delivery page\r\n4. All available delivery methods should be displayed under \"Select Delivery method\" drop down\r\n5. \"Add new delivery detail\" icon (green color + icon) should be displayed\r\n6. Delivery Details should be displayed in drop down\r\n7. Delivery method should be selected\r\n8. New details should be added successfully\r\n9. User should be navigated to the Payment page\r\n10. Confirmation page should be displayed"
      }
    ],
    "custom_jiras": "65.6"
  },
  {
    "id": 30716884,
    "title": "Verify that when VPPDSTEN is set to false, statement icon and checkbox are not displayed",
    "section_id": 1686241,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C152341",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Create a patron in PV application\r\nCreate Credit for the Patron\r\nCreate a payment plan with Schedule option as optional or required\r\nExpected Result:\r\nUser must be able to complete the pre-requisite successfully\r\n2. Launch and Login PV application\r\nExpected Result:\r\nUser must be able to login PV application successfully\r\n3. Navigate to ticket sales\r\nPerform a recievable transaction for the package with the payment plan and the patron created in pre-requisite\r\nExpected Result:\r\nUser must be able to perform the recievable transaction successfully\r\n4. Launch the mytickets application\r\nLogin using the patron mentioned above\r\nVerify the orders in To do list page\r\nExpected Result:\r\nThe above created orders must be displayed\r\n5. Select the orders and click renew button\r\nExpected Result:\r\nUser must be navigated to the renewal cart/payments page\r\n6. In the payment page, \r\nselect a card for scheduling the renewal transaction\r\n and complete the payment\r\nExpected Result:\r\nUser must be able to complete the payment and must be navigated to Confirmation page\r\n7. Navigate to History tab>>Recent Orders\r\nExpected Result:\r\nRecent paid orders must be displayed\r\n8. Verify that statement icon and checkbox are not displayed\r\nExpected Result:\r\nUser must not be able to generate a statement in rencent paid orders tab when VPPDSTEN is set to false\r\n\r\nCheckboxes corresponding to each order should not be enabled\r\n\r\nGenerate statement icon should not be available",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Create a patron in PV application\r\nCreate Credit for the Patron\r\nCreate a payment plan with Schedule option as optional or required\r\n2. Launch and Login PV application\r\n3. Navigate to ticket sales\r\nPerform a recievable transaction for the package with the payment plan and the patron created in pre-requisite\r\n4. Launch the mytickets application\r\nLogin using the patron mentioned above\r\nVerify the orders in To do list page\r\n5. Select the orders and click renew button\r\n6. In the payment page, \r\nselect a card for scheduling the renewal transaction\r\n and complete the payment\r\n7. Navigate to History tab>>Recent Orders\r\n8. Verify that statement icon and checkbox are not displayed",
        "expected": "1. User must be able to complete the pre-requisite successfully\r\n2. User must be able to login PV application successfully\r\n3. User must be able to perform the recievable transaction successfully\r\n4. The above created orders must be displayed\r\n5. User must be navigated to the renewal cart/payments page\r\n6. User must be able to complete the payment and must be navigated to Confirmation page\r\n7. Recent paid orders must be displayed\r\n8. User must not be able to generate a statement in rencent paid orders tab when VPPDSTEN is set to false\r\n\r\nCheckboxes corresponding to each order should not be enabled\r\n\r\nGenerate statement icon should not be available"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716885,
    "title": "Verify that the statement is generated with the Payment plan set at AFP",
    "section_id": 1686241,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-11982",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C152342",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre-requisite\r\n\r\nSet the Default Single Statement Payment Plan permission in AFP\r\n1.Create a Patron.\r\n2.Create a Season at Supplier Administration.Select a default delivery method for the season\r\n3.Create a Package with the same season\r\n4. Complete a receivable transaction for the above patron in PV. Create a payment plan for this in PVO \r\n5. Note the order id for the above transaction.\r\n6.The View Online Statement icon feature should be ON\r\nExpected Result:\r\nPre-requisite should be met\r\n2. Login to Mytickets account of the patron mentioned in Pre-requisite\r\nExpected Result:\r\nPatron should be logged into Mytickets account\r\n3. Navigate to To Do List->Pending Renewals page\r\nExpected Result:\r\nPending Renewals page should be displayed\r\n4. Verify that View Statement column is added to the right side of the table\r\nExpected Result:\r\nThe icon allignment should be correct\r\n5. Click on the icon\r\nExpected Result:\r\nOnline statement is displayed in PDF form in a new window or browser tab, depending on the user's browser settings.\r\n6. Verify that the format of Online statement is same as the Wireframe given in Section 4.3 of the PRD\r\nExpected Result:\r\nThe format of Online statement is same as the Wireframe given in Section 4.3 of the PRD\r\n7. Verify the correctness of all deatils in the statement\r\nExpected Result:\r\nThe payment plan used in the Statement should be the Default Single Statement Payment Plan set at AFP",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-requisite\r\n\r\nSet the Default Single Statement Payment Plan permission in AFP\r\n1.Create a Patron.\r\n2.Create a Season at Supplier Administration.Select a default delivery method for the season\r\n3.Create a Package with the same season\r\n4. Complete a receivable transaction for the above patron in PV. Create a payment plan for this in PVO \r\n5. Note the order id for the above transaction.\r\n6.The View Online Statement icon feature should be ON\r\n2. Login to Mytickets account of the patron mentioned in Pre-requisite\r\n3. Navigate to To Do List->Pending Renewals page\r\n4. Verify that View Statement column is added to the right side of the table\r\n5. Click on the icon\r\n6. Verify that the format of Online statement is same as the Wireframe given in Section 4.3 of the PRD\r\n7. Verify the correctness of all deatils in the statement",
        "expected": "1. Pre-requisite should be met\r\n2. Patron should be logged into Mytickets account\r\n3. Pending Renewals page should be displayed\r\n4. The icon allignment should be correct\r\n5. Online statement is displayed in PDF form in a new window or browser tab, depending on the user's browser settings.\r\n6. The format of Online statement is same as the Wireframe given in Section 4.3 of the PRD\r\n7. The payment plan used in the Statement should be the Default Single Statement Payment Plan set at AFP"
      }
    ],
    "custom_jiras": "56.1"
  },
  {
    "id": 30716886,
    "title": "Verify generating the statement When a renewal group has ?Renew Together? set to ?Optional?",
    "section_id": 1686241,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C152343",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1. Create New Patron in PV BOTS(or use an existing patron)\n2. Create New event and perf accept with renewals supplier\n3. Add a card to the patron\r\nExpected Result:\r\nUser should be able to complete the pre-requisite successfully\r\n2. Pre requisite 2:\n1. Launch the PV link\n2. Create a renewal group with RENEW TOGETHER as Optional\n3. Create a package with the above renewal group\n4. Complete a reservation transaction to the package \n3. Create a payment plan\r\nExpected Result:\r\nUser should be able to complete the pre-requisite successfully\r\n3. Launch and Login mytickets application\nVerify that the ticket is available in the To Do list Renewals tab and the payment plan is shown in the dropdown\r\nExpected Result:\r\nticket should be available in the To Do list Renewals tab and the scheduled payment plan should be shown in the dropdown\r\n4. DO NOT select the order\nClick Statement button\r\nExpected Result:\r\nError message should be displayed\r\n5. Select one or more orders and click statement button\r\nExpected Result:\r\nStatement should be generated",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Create New Patron in PV BOTS(or use an existing patron)\n2. Create New event and perf accept with renewals supplier\n3. Add a card to the patron\r\n2. Pre requisite 2:\n1. Launch the PV link\n2. Create a renewal group with RENEW TOGETHER as Optional\n3. Create a package with the above renewal group\n4. Complete a reservation transaction to the package \n3. Create a payment plan\r\n3. Launch and Login mytickets application\nVerify that the ticket is available in the To Do list Renewals tab and the payment plan is shown in the dropdown\r\n4. DO NOT select the order\nClick Statement button\r\n5. Select one or more orders and click statement button",
        "expected": "1. User should be able to complete the pre-requisite successfully\r\n2. User should be able to complete the pre-requisite successfully\r\n3. ticket should be available in the To Do list Renewals tab and the scheduled payment plan should be shown in the dropdown\r\n4. Error message should be displayed\r\n5. Statement should be generated"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716887,
    "title": "Verify generating the statement When a renewal group has ?Renew Together? set to ?Not Allowed?",
    "section_id": 1686241,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C152344",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create New event and perf accept with renewals supplier\r\n3. Set renew together flag as Not Allowed\r\n2. 1.Launch the PV link\r\n2. Do 2 Receivable transactions with Scheduled Payments(each payment plan has a scheduled payments flag with one of the following values:  Required\r\n3.The scheduled payment flag may be set to Required or Optional.\r\n4.BROWPEN is set to true\r\n3. Launch the MyTixx application\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n4. Verify that the ticket is available in the To Do list.\r\n\r\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \r\n\r\nTo do list is divided into 3 sections\r\n1.      Reservations\r\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\r\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\r\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\r\n3.      Pending manual payments - this can include orders where:\r\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\nExpected Result:\r\nAll the details regardign the receivab le transaction created in pre requisite should should be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n5. 1. Select all the orders \r\n2. Click on View Statements button\r\nExpected Result:\r\nUser should not be allowed to select all the statements together and view statement\r\n6. 1. Select one order \r\n2. Click on View Statements button\r\nExpected Result:\r\nUSer should be able to view the statement of a single order",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create New event and perf accept with renewals supplier\r\n3. Set renew together flag as Not Allowed\r\n2. 1.Launch the PV link\r\n2. Do 2 Receivable transactions with Scheduled Payments(each payment plan has a scheduled payments flag with one of the following values:  Required\r\n3.The scheduled payment flag may be set to Required or Optional.\r\n4.BROWPEN is set to true\r\n3. Launch the MyTixx application\r\n4. Verify that the ticket is available in the To Do list.\r\n\r\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \r\n\r\nTo do list is divided into 3 sections\r\n1.      Reservations\r\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\r\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\r\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\r\n3.      Pending manual payments - this can include orders where:\r\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\n5. 1. Select all the orders \r\n2. Click on View Statements button\r\n6. 1. Select one order \r\n2. Click on View Statements button",
        "expected": "1. \r\n2. \r\n3. User should able to login to mytixx application successfully\r\n4. All the details regardign the receivab le transaction created in pre requisite should should be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n5. User should not be allowed to select all the statements together and view statement\r\n6. USer should be able to view the statement of a single order"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716888,
    "title": "Verify generating the statement when a renewal group has ?Renew Together? set to ?Required?",
    "section_id": 1686241,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C152345",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create New event and perf accept with renewals supplier\r\n3. Set renew together flag as required\r\n2. 1.Launch the PV link\r\n2. Do 2 Receivable transactions with Scheduled Payments(each payment plan has a scheduled payments flag with one of the following values:  Required\r\n3.The scheduled payment flag may be set to Required or Optional.\r\n4.BROWPEN is set to true\r\n3. Launch the MyTixx application\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n4. Verify that the ticket is available in the To Do list.\r\n\r\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \r\n\r\nTo do list is divided into 3 sections\r\n1.      Reservations\r\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\r\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\r\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\r\n3.      Pending manual payments - this can include orders where:\r\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\nExpected Result:\r\nAll the details regardign the receivab le transaction created in pre requisite should should be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n5. 1. Select all the orders \r\n2. Click on View Statements button\r\n3. Verify the details dispalyed in the statement\r\nExpected Result:\r\nA single statement shall be generated containing all orders in the renewal group.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create New event and perf accept with renewals supplier\r\n3. Set renew together flag as required\r\n2. 1.Launch the PV link\r\n2. Do 2 Receivable transactions with Scheduled Payments(each payment plan has a scheduled payments flag with one of the following values:  Required\r\n3.The scheduled payment flag may be set to Required or Optional.\r\n4.BROWPEN is set to true\r\n3. Launch the MyTixx application\r\n4. Verify that the ticket is available in the To Do list.\r\n\r\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \r\n\r\nTo do list is divided into 3 sections\r\n1.      Reservations\r\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\r\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\r\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\r\n3.      Pending manual payments - this can include orders where:\r\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\n5. 1. Select all the orders \r\n2. Click on View Statements button\r\n3. Verify the details dispalyed in the statement",
        "expected": "1. \r\n2. \r\n3. User should able to login to mytixx application successfully\r\n4. All the details regardign the receivab le transaction created in pre requisite should should be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n5. A single statement shall be generated containing all orders in the renewal group."
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716889,
    "title": "Set VPPDSTEN as false and  VIPDSTEN  as true and verify View statement icon on Pending renewals page, Scheduled payments page and Renewals History page",
    "section_id": 1686241,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13451",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C152346",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequiste:Set VPPDSTEN as false and  VIPDSTEN  as true  at supplier level\r\n\r\nThe Mytixx patron should have orders in Pending renewals page and  Scheduled payments \r\npage\r\nExpected Result:\r\nPrerequisite should be met\r\n2. Log in to Mytixx account of the patron mentioned in prerequiste\r\nExpected Result:\r\nThe patron is logged in\r\n3. Go to To Do List->Pending renewals tab and verify hat View Statement icon is displayed \r\non Pending renewals page and  Scheduled payments page\r\nExpected Result:\r\nView Statement icon is displayed on Pending \r\nrenewals page and  Scheduled payments page\r\n4. Go to To Do List->Scheduled payments page and verify that View Statement icon is not \r\ndisplayed on Renewals History page\r\nExpected Result:\r\nView Statement icon is not displayed on \r\nRenewals History page",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequiste:Set VPPDSTEN as false and  VIPDSTEN  as true  at supplier level\r\n\r\nThe Mytixx patron should have orders in Pending renewals page and  Scheduled payments \r\npage\r\n2. Log in to Mytixx account of the patron mentioned in prerequiste\r\n3. Go to To Do List->Pending renewals tab and verify hat View Statement icon is displayed \r\non Pending renewals page and  Scheduled payments page\r\n4. Go to To Do List->Scheduled payments page and verify that View Statement icon is not \r\ndisplayed on Renewals History page",
        "expected": "1. Prerequisite should be met\r\n2. The patron is logged in\r\n3. View Statement icon is displayed on Pending \r\nrenewals page and  Scheduled payments page\r\n4. View Statement icon is not displayed on \r\nRenewals History page"
      }
    ],
    "custom_jiras": "60"
  },
  {
    "id": 30716890,
    "title": "Create a Payment plan in PV with schedule payments as Optional, Opt out during the payment and verify",
    "section_id": 1686242,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C152416",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre-requisite :\r\n1. Create an event, patron\r\n2. Create payment plans, with one of the payment plans with schedule payments as Optional\r\n3. Perform a recievable transaction for the event with the payment plan with schedule payment option as Optional",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MyTixx application\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n2. In To do list, Verify that the order is displayed in \"Orders needing schedule payments\"\r\nExpected Result:\r\nThe orders must be displayed in  \"Orders needing schedule payments\" tab\r\n3. Select the order and verify that the due now amount is displayed correctly\r\nExpected Result:\r\nThe due now amount must be dispalyed correctly\r\n4. Verify that a hyperlink \"Installment schedule\" is displayed at the dropdown\r\nExpected Result:\r\nInstallment schedule\" must be displayed at the dropdown\r\n5. Verify that schedule automatic payments and Manually Pay installments radio buttons should be displayed\r\nExpected Result:\r\nSchedule automatic payments and Manually Pay installments radio buttons must be displayed\r\n6. Execute the Steps 11- 21 of [C70460]",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MyTixx application\r\n2. In To do list, Verify that the order is displayed in \"Orders needing schedule payments\"\r\n3. Select the order and verify that the due now amount is displayed correctly\r\n4. Verify that a hyperlink \"Installment schedule\" is displayed at the dropdown\r\n5. Verify that schedule automatic payments and Manually Pay installments radio buttons should be displayed\r\n6. Execute the Steps 11- 21 of [C70460]",
        "expected": "1. User should able to login to mytixx application successfully\r\n2. The orders must be displayed in  \"Orders needing schedule payments\" tab\r\n3. The due now amount must be dispalyed correctly\r\n4. Installment schedule\" must be displayed at the dropdown\r\n5. Schedule automatic payments and Manually Pay installments radio buttons must be displayed\r\n6."
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716891,
    "title": "Create a Payment plan in PV with schedule payments as Optional, Opt in during the payment and verify",
    "section_id": 1686242,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C152417",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre-requisite :\n1. Create an event, patron\n2. Create payment plans, with one of the payment plans with schedule payments as Optional\n3. Perform a recievable transaction for the event with the payment plan with schedule payment option as Optional\r\nExpected Result:\r\nPrerequisites must be met\r\n2. Login to mytickets application\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n3. In To do list, Verify that the order is displayed in \"Orders needing schedule payments\"\r\nExpected Result:\r\nThe order must be displayed in \"Orders needing schedule payments\r\n4. Select the order and verify that the due now amount is displayed correctly\r\nExpected Result:\r\nThe new scheduled payments block shall also group orders by renewal group and they shall observe the 'Renew Together' value, offering the same types of controls which are available in the Reservations block (checkboxes, radio buttons, or schedule all orders in the renewal group).\r\n5. Select Schedule payments installments radio button and click renew button\r\nExpected Result:\r\nIf the patron opts in for scheduled payments, they will be able to schedule payment methods to be charged automatically for future installments and no further manual steps shall be necessary.\r\n6. Execute the Steps 13- 28 of [C70459]",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-requisite :\n1. Create an event, patron\n2. Create payment plans, with one of the payment plans with schedule payments as Optional\n3. Perform a recievable transaction for the event with the payment plan with schedule payment option as Optional\r\n2. Login to mytickets application\r\n3. In To do list, Verify that the order is displayed in \"Orders needing schedule payments\"\r\n4. Select the order and verify that the due now amount is displayed correctly\r\n5. Select Schedule payments installments radio button and click renew button\r\n6. Execute the Steps 13- 28 of [C70459]",
        "expected": "1. Prerequisites must be met\r\n2. User should able to login to mytixx application successfully\r\n3. The order must be displayed in \"Orders needing schedule payments\r\n4. The new scheduled payments block shall also group orders by renewal group and they shall observe the 'Renew Together' value, offering the same types of controls which are available in the Reservations block (checkboxes, radio buttons, or schedule all orders in the renewal group).\r\n5. If the patron opts in for scheduled payments, they will be able to schedule payment methods to be charged automatically for future installments and no further manual steps shall be necessary.\r\n6."
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716892,
    "title": "Verify by selecting a plan which does not have any Due NOW amount, scheduling all the installments including the 1st installment to future and verify",
    "section_id": 1686242,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C152418",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre-requisite :\r\n1. Create an event, patron\r\n2. Create payment plans, with one of the payment plans with schedule payments as required and Due later\r\n3. Perform a recievable transaction for the event",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to mytickets application\r\nExpected Result:\r\nMytickets application must be launched and patron must be logged in\r\n2. In To do list, Verify that the order is displayed in \"Orders needing schedule payments\"\r\nExpected Result:\r\nOrder must be displayed in \"Orders needing schedule payments\"\r\n3. Select the order and verify that the due amount is displayed correctly\r\nExpected Result:\r\ndue amount must be dispalyed correctly\r\n4. Verify that schedule automatic payments and Manually Pay installments radio buttons are not shown\r\nExpected Result:\r\nSchedule automatic payments and Manually Pay installments radio buttons must not be displayed\r\n5. Verify that a hyperlink \"Installment schedule\" is displayed next to the dropdown\r\nExpected Result:\r\nHyperlink \"Installment schedule\" must be displayed next to the dropdown\r\n6. Click renew button and navigate to the payment page\r\nExpected Result:\r\nPayment page must be displayed\r\n7. Verify that all the installments amount is displayed correctly\r\nExpected Result:\r\nAll installments must be displayed correctly\r\n8. Click submit button and verify that no amount is deducted on clicking submit button\r\nExpected Result:\r\nNo amount must be displayed\r\n9. \t\n\nVerify the Payrenewal call is passed from PVO to PV\n\r\nExpected Result:\r\nPayrenewal call should be initiated with correct payment method details to PV\r\n10. Verify the DB\n\nSELECT * FROM pvo.payment where order_id =xxxx\nSELECT * FROM pvo.patron_card_info where patron_id= xxxxx\nselect * from pvo.PATRON_ADDRESS where PATRON_ID= xxxx\nselect * from pvo.OFFER_SEAT where ORDER_ID=xxxx\nselect * from pvo.TDC_ORDER where Order_ID=xxxx\n\r\nExpected Result:\r\nAll the database should be verified, Verify the Patron Address table is still having the account address",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to mytickets application\r\n2. In To do list, Verify that the order is displayed in \"Orders needing schedule payments\"\r\n3. Select the order and verify that the due amount is displayed correctly\r\n4. Verify that schedule automatic payments and Manually Pay installments radio buttons are not shown\r\n5. Verify that a hyperlink \"Installment schedule\" is displayed next to the dropdown\r\n6. Click renew button and navigate to the payment page\r\n7. Verify that all the installments amount is displayed correctly\r\n8. Click submit button and verify that no amount is deducted on clicking submit button\r\n9. \t\n\nVerify the Payrenewal call is passed from PVO to PV\n\r\n10. Verify the DB\n\nSELECT * FROM pvo.payment where order_id =xxxx\nSELECT * FROM pvo.patron_card_info where patron_id= xxxxx\nselect * from pvo.PATRON_ADDRESS where PATRON_ID= xxxx\nselect * from pvo.OFFER_SEAT where ORDER_ID=xxxx\nselect * from pvo.TDC_ORDER where Order_ID=xxxx",
        "expected": "1. Mytickets application must be launched and patron must be logged in\r\n2. Order must be displayed in \"Orders needing schedule payments\"\r\n3. due amount must be dispalyed correctly\r\n4. Schedule automatic payments and Manually Pay installments radio buttons must not be displayed\r\n5. Hyperlink \"Installment schedule\" must be displayed next to the dropdown\r\n6. Payment page must be displayed\r\n7. All installments must be displayed correctly\r\n8. No amount must be displayed\r\n9. Payrenewal call should be initiated with correct payment method details to PV\r\n10. All the database should be verified, Verify the Patron Address table is still having the account address"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716893,
    "title": "Verify by selecting a schedule payment required plan for reservation",
    "section_id": 1686242,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913, PVO-16540",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C152419",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre-requisite :\r\n1. Create a Package with Renewal flag true in PV\r\n2. Create payment plans, with one of the payment plans with schedule payments as required and associate to above Package\r\n3. Perform a recievable transaction for the above package for a Patron\r\n4.Set BROWPEN text code set to true\r\n5.PV \"Change Delivery\" Permission should be true",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MyTixx application\r\nExpected Result:\r\nThe Application Should be launched and Mytixx login page displayed\r\n2. Login as the Patron in the Prerequisite 3\r\nExpected Result:\r\nThe Patron should be logged in and landed on To DO list page\r\n3. Verify the Receivable created in PV is available for PVO To Do list page under Reservation category\r\nExpected Result:\r\nThe offer should be available for renewal To Do List page - Pending Renewals/Payments\n\r\n4. Verify the GetRenewalorder API from Splunk\r\nExpected Result:\r\nOnce the Patron log in the Get Renewal Order call will be generated from PVO to PV. Verify\n\n1. Order number\n2. Offer name , Section and rows\n3.Offer price and Service charges\n4.Payment plan in API\r\n5. Verify the Top navigation \"To Do List\" button  is highlighted with total available items in To Do List\r\nExpected Result:\r\nIf one receivable order is created , then the count should be displayed in To DO List Top navigation as 1.\r\n6. Verify the UI of the Renewal_Receivable panel\r\nExpected Result:\r\nIt should contain:\n\n1.Checkbox for making select all items/individual offer\nOrder ID from ProVenue\n2. Package Eventlist name (Event name if you created offer with Event) under Pending items header\n3.Section Row and Seats (If multiple seats are there it is sepearted with /)\n4.Payment options drop downs with associated Payment plans (Default Payment plan drop down before selection as \" Select Payment Plan\") \n5.Under Financial header Order Total (Ticket price+Service charges) will be displayed with Currency symbol ($ for dollar)\r\n7. Select the Required Payment plan (created in Prerequisite) from the Drop down for the offer\r\nExpected Result:\r\nThe Payment plan should be selected and verify the checkbox of the corresponding offer is checked.\r\n8. Verify the  hyper link \"Installment Schedule\" is appearing right of the drop down\r\nExpected Result:\r\nHyper link \"Installment Schedule\" should beappearing right of the drop down\r\n9. Verify the Popup window is opened with installment same as we scheduled in PV Payment plan\r\nExpected Result:\r\nThe Installment schedule defined in PV and PVO should be same for the selected installment schedule\r\n10. Now Click on \"View Statement\" button near to renew button under the renewal offer\r\nExpected Result:\r\nThe statement window should be opened and the default invoice should be printed as expected . It is from PV\r\n11. Close the Statement PDF\r\nExpected Result:\r\nThe user should be returned to the To Do List\r\n12. Now Click on renew button\r\nExpected Result:\r\nThe user should be navigated to Multiple delivery page\r\n13. Verify the Default value in the delivery drop down\r\nExpected Result:\r\nThe default delivery should be the one we used to create Recievable in PV.\r\n14. Change the Delivery method , say to MAIL\r\nExpected Result:\r\n The delivery method should be updated to \"MAIL\" in financial summary\r\n15. Now Click on (+) and add a new address and submit the forum\r\nExpected Result:\r\nA modal should be opened asking Firstname,Lastname ,Address details and it should be filled\r\n16. Now Click on Order details link available near to the Package event list description\r\nExpected Result:\r\nThe Payment plan and the Seat info is displayed as tabular column in  Order details URL popup.\r\n17. Now Clcik on Continue and navigate to the Payment page\r\nExpected Result:\r\nThe Payment should be displayed with apckage event list details, Payment plan, Installment table,card drop down, Installments (If enabled), email and confimation email, Seat details with fiancial summary, Terms and conditions etc\r\n18. Verify the Delivery details, Added address is passed in Get renewalcart request from PVO\r\nExpected Result:\r\nThe newly added address info should be passed via GetRenewalcart API to PV\r\n19. Verify the offer price is scheduled correctly in installment table\r\nExpected Result:\r\nThe offer price should be splitted as expected with correct percentage as defined in PV Payment plan\r\n20. Select Add card from the drop down\r\nExpected Result:\r\nAdd card modal should be opened asking Patron details along with card consent to store for future use and store as default digital wallet item.\r\n21. Verify without checking the Consent for store card for future use the user is unable to submit the forum\r\nExpected Result:\r\nSince the renewal cart has installments, we should be scheduled the same card for future. So we should be stored the card in Patron wallet.\r\n22. Consent optin and submit the forum\r\nExpected Result:\r\nThe user should be able to submit the forum and return to Payment page\r\n23. Fill the required fields in the Payment page and submit\r\nExpected Result:\r\nThe user should be displayed with renewal confirmartion page having all the details on Delivery method, Payment type , Seat details and financial summary. It also list the future scheduled payments.\r\n24. Verify the Payrenewal call is passed from PVO to PV\r\nExpected Result:\r\nPayrenewal call should be initiated with correct payment method details to PV\r\n25. Navigate to Scheduled Payments tab in To Do List Page\r\nExpected Result:\r\nThe Scheduled payment done should be displayed in a tabular format\r\n26. Verify the completed transaction is grey colored\r\nExpected Result:\r\nThe Completed transaction should be grey colored amd the card is assigned the payment type for the future intstallments\r\n27. Verify the \"view statement\" is displayed in Scheduled payment table\r\nExpected Result:\r\nThe stemnet should be opened and PV default invoice should be displayed\r\n28. Verify the DB\n\nSELECT * FROM pvo.payment where order_id =xxxx\nSELECT * FROM pvo.patron_card_info where patron_id= xxxxx\nselect * from pvo.PATRON_ADDRESS where PATRON_ID= xxxx\nselect * from pvo.OFFER_SEAT where ORDER_ID=xxxx\nselect * from pvo.TDC_ORDER where Order_ID=xxxx\r\nExpected Result:\r\nAll the database should be verified, Verify the Patron Address table is still having the account address and not replaced with the Delivery/payment method address added",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MyTixx application\r\n2. Login as the Patron in the Prerequisite 3\r\n3. Verify the Receivable created in PV is available for PVO To Do list page under Reservation category\r\n4. Verify the GetRenewalorder API from Splunk\r\n5. Verify the Top navigation \"To Do List\" button  is highlighted with total available items in To Do List\r\n6. Verify the UI of the Renewal_Receivable panel\r\n7. Select the Required Payment plan (created in Prerequisite) from the Drop down for the offer\r\n8. Verify the  hyper link \"Installment Schedule\" is appearing right of the drop down\r\n9. Verify the Popup window is opened with installment same as we scheduled in PV Payment plan\r\n10. Now Click on \"View Statement\" button near to renew button under the renewal offer\r\n11. Close the Statement PDF\r\n12. Now Click on renew button\r\n13. Verify the Default value in the delivery drop down\r\n14. Change the Delivery method , say to MAIL\r\n15. Now Click on (+) and add a new address and submit the forum\r\n16. Now Click on Order details link available near to the Package event list description\r\n17. Now Clcik on Continue and navigate to the Payment page\r\n18. Verify the Delivery details, Added address is passed in Get renewalcart request from PVO\r\n19. Verify the offer price is scheduled correctly in installment table\r\n20. Select Add card from the drop down\r\n21. Verify without checking the Consent for store card for future use the user is unable to submit the forum\r\n22. Consent optin and submit the forum\r\n23. Fill the required fields in the Payment page and submit\r\n24. Verify the Payrenewal call is passed from PVO to PV\r\n25. Navigate to Scheduled Payments tab in To Do List Page\r\n26. Verify the completed transaction is grey colored\r\n27. Verify the \"view statement\" is displayed in Scheduled payment table\r\n28. Verify the DB\n\nSELECT * FROM pvo.payment where order_id =xxxx\nSELECT * FROM pvo.patron_card_info where patron_id= xxxxx\nselect * from pvo.PATRON_ADDRESS where PATRON_ID= xxxx\nselect * from pvo.OFFER_SEAT where ORDER_ID=xxxx\nselect * from pvo.TDC_ORDER where Order_ID=xxxx",
        "expected": "1. The Application Should be launched and Mytixx login page displayed\r\n2. The Patron should be logged in and landed on To DO list page\r\n3. The offer should be available for renewal To Do List page - Pending Renewals/Payments\n\r\n4. Once the Patron log in the Get Renewal Order call will be generated from PVO to PV. Verify\n\n1. Order number\n2. Offer name , Section and rows\n3.Offer price and Service charges\n4.Payment plan in API\r\n5. If one receivable order is created , then the count should be displayed in To DO List Top navigation as 1.\r\n6. It should contain:\n\n1.Checkbox for making select all items/individual offer\nOrder ID from ProVenue\n2. Package Eventlist name (Event name if you created offer with Event) under Pending items header\n3.Section Row and Seats (If multiple seats are there it is sepearted with /)\n4.Payment options drop downs with associated Payment plans (Default Payment plan drop down before selection as \" Select Payment Plan\") \n5.Under Financial header Order Total (Ticket price+Service charges) will be displayed with Currency symbol ($ for dollar)\r\n7. The Payment plan should be selected and verify the checkbox of the corresponding offer is checked.\r\n8. Hyper link \"Installment Schedule\" should beappearing right of the drop down\r\n9. The Installment schedule defined in PV and PVO should be same for the selected installment schedule\r\n10. The statement window should be opened and the default invoice should be printed as expected . It is from PV\r\n11. The user should be returned to the To Do List\r\n12. The user should be navigated to Multiple delivery page\r\n13. The default delivery should be the one we used to create Recievable in PV.\r\n14.  The delivery method should be updated to \"MAIL\" in financial summary\r\n15. A modal should be opened asking Firstname,Lastname ,Address details and it should be filled\r\n16. The Payment plan and the Seat info is displayed as tabular column in  Order details URL popup.\r\n17. The Payment should be displayed with apckage event list details, Payment plan, Installment table,card drop down, Installments (If enabled), email and confimation email, Seat details with fiancial summary, Terms and conditions etc\r\n18. The newly added address info should be passed via GetRenewalcart API to PV\r\n19. The offer price should be splitted as expected with correct percentage as defined in PV Payment plan\r\n20. Add card modal should be opened asking Patron details along with card consent to store for future use and store as default digital wallet item.\r\n21. Since the renewal cart has installments, we should be scheduled the same card for future. So we should be stored the card in Patron wallet.\r\n22. The user should be able to submit the forum and return to Payment page\r\n23. The user should be displayed with renewal confirmartion page having all the details on Delivery method, Payment type , Seat details and financial summary. It also list the future scheduled payments.\r\n24. Payrenewal call should be initiated with correct payment method details to PV\r\n25. The Scheduled payment done should be displayed in a tabular format\r\n26. The Completed transaction should be grey colored amd the card is assigned the payment type for the future intstallments\r\n27. The stemnet should be opened and PV default invoice should be displayed\r\n28. All the database should be verified, Verify the Patron Address table is still having the account address and not replaced with the Delivery/payment method address added"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716894,
    "title": "Verify by selecting a schedule payment not Allowed plan for reservation",
    "section_id": 1686242,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913, PVO-16540",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C152420",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre-requisite :\r\n1. Create a Package with Renewal flag true in PV\r\n2. Create payment plans, with one of the payment plans with schedule payments as NA with current Due and associate to above Package\r\n3. Perform a reservation transaction for the above package for a Patron, having 2 cards in file MSTR & VISA\r\n4.Set BROWPEN text code set to true\r\n5.PV \"Change Delivery\" Permission should be false\r\n6.Set Split Payment maximum text code to 2",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MyTixx application\r\nExpected Result:\r\n\t\nThe Application Should be launched and Mytixx login page displayed\r\n2. \t\nLogin as the Patron in the Prerequisite 3\r\nExpected Result:\r\nThe Patron should be logged in and landed on To DO list page\r\n3. In To do list, Verify that the order is displayed in \"Orders needing payments\"\r\nExpected Result:\r\nThe offer should be available for renewal To Do List page - Pending Renewals/Payments\r\n4. Verify the GetRenewalorder API from Splunk\r\nExpected Result:\r\n\t\nOnce the Patron log in the Get Renewal Order call will be generated from PVO to PV. Verify\n\nOrder number\nOffer name , Section and rows 3.Offer price and Service charges 4.Payment plan in API\r\n5. Verify the Top navigation \"To Do List\" button is highlighted with total available items in To Do List\r\nExpected Result:\r\nIf one receivable order is created , then the count should be displayed in To DO List Top navigation as 1.\r\n6. Verify the UI of the Renewal_Reservation panel\r\nExpected Result:\r\n\t\nIt should contain:\n\n1.Checkbox for making select all items/individual offer\nOrder ID from ProVenue\n2. Package Eventlist name (Event name if you created offer with Event) under Pending items header\n3.Section Row and Seats (If multiple seats are there it is sepearted with /)\n4.Payment options drop downs with associated Payment plans (Default Payment plan drop down before selection as \" Select Payment Plan\") \n5.Under Financial header Order Total (Ticket price+Service charges) will be displayed with Currency symbol ($ for dollar)\n6.The Due date Display in red font\n7.redelivery permission as False\r\n7. Select the SCH_NA Payment plan (created in Prerequisite) from the Drop down for the offer\r\nExpected Result:\r\nThe Payment plan should be selected and verify the checkbox of the corresponding offer is checked.\r\n8. Now Click on \"View Statement\" button near to renew button under the renewal offer\r\nExpected Result:\r\nThe statement window should be opened and the default invoice should be printed as expected . It is from PV\r\n9. Close the Statement PDF\r\nExpected Result:\r\n\t\nThe user should be returned to the To Do List\r\n10. Now Click on renew button\r\nExpected Result:\r\nThe user should be navigated to Multiple delivery page\r\n11. Verify there is no Multiple delivery drop down display, since Change Delivery permission is false\r\nExpected Result:\r\nThe Default delivery method set in Sales AFP will be displayed along with the Delivery description\r\n12. Now Click on Order details link available near to the Package event list description\r\nExpected Result:\r\nThe Payment plan and the Seat info is displayed as tabular column in Order details URL popup.\r\n13. Now Clcik on Continue and navigate to the Payment page\r\nExpected Result:\r\nThe Payment should be displayed with apckage event list details, Payment plan, Installment table,card drop down, Installments (If enabled), email and confimation email, Seat details with fiancial summary, Terms and conditions etc\r\n14. Verify the Delivery details,  address is passed in Get renewalcart request from PVO\r\nExpected Result:\r\nAll the values should be same as the Patron account information\r\n15. Verify the Scheduling is not there in installment table, Only one term of Manual Payment instead\r\nExpected Result:\r\nScheduling should not be allowed in the renewal cart (No date wi9se forecasting)\r\n16. Verify the Payment can be splitted up to two and can use different cards\r\nExpected Result:\r\nSplit the payment in to 2 and assign to MSTR and VISA\r\n17. Verify on trying Split more than 2, we are getting error message\r\nExpected Result:\r\nError should be retuned as \"maximum Split payment allowed as 2\"\r\n18. Assign unequal Percentage of  Due now amount across those cards\r\nExpected Result:\r\nThe Amount should be spitted and assigned\r\n19. Complete the Renewal transaction after filling the details\r\nExpected Result:\r\nThe user should be displayed with renewal confirmartion page having all the details on Delivery method, Payment type , Seat details and financial summary. It also list the future Manual payments.\r\n20. Verify the Payrenewal call is passed from PVO to PV\r\nExpected Result:\r\nPayrenewal call should be initiated with correct payment method details to PV\r\n21. Verify the DB\n\nSELECT * FROM pvo.payment where order_id =xxxx\nSELECT * FROM pvo.patron_card_info where patron_id= xxxxx\nselect * from pvo.PATRON_ADDRESS where PATRON_ID= xxxx\nselect * from pvo.OFFER_SEAT where ORDER_ID=xxxx\nselect * from pvo.TDC_ORDER where Order_ID=xxxx\r\nExpected Result:\r\nAll the database should be verified, Verify the Patron Address table is still having the account address",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MyTixx application\r\n2. \t\nLogin as the Patron in the Prerequisite 3\r\n3. In To do list, Verify that the order is displayed in \"Orders needing payments\"\r\n4. Verify the GetRenewalorder API from Splunk\r\n5. Verify the Top navigation \"To Do List\" button is highlighted with total available items in To Do List\r\n6. Verify the UI of the Renewal_Reservation panel\r\n7. Select the SCH_NA Payment plan (created in Prerequisite) from the Drop down for the offer\r\n8. Now Click on \"View Statement\" button near to renew button under the renewal offer\r\n9. Close the Statement PDF\r\n10. Now Click on renew button\r\n11. Verify there is no Multiple delivery drop down display, since Change Delivery permission is false\r\n12. Now Click on Order details link available near to the Package event list description\r\n13. Now Clcik on Continue and navigate to the Payment page\r\n14. Verify the Delivery details,  address is passed in Get renewalcart request from PVO\r\n15. Verify the Scheduling is not there in installment table, Only one term of Manual Payment instead\r\n16. Verify the Payment can be splitted up to two and can use different cards\r\n17. Verify on trying Split more than 2, we are getting error message\r\n18. Assign unequal Percentage of  Due now amount across those cards\r\n19. Complete the Renewal transaction after filling the details\r\n20. Verify the Payrenewal call is passed from PVO to PV\r\n21. Verify the DB\n\nSELECT * FROM pvo.payment where order_id =xxxx\nSELECT * FROM pvo.patron_card_info where patron_id= xxxxx\nselect * from pvo.PATRON_ADDRESS where PATRON_ID= xxxx\nselect * from pvo.OFFER_SEAT where ORDER_ID=xxxx\nselect * from pvo.TDC_ORDER where Order_ID=xxxx",
        "expected": "1. \t\nThe Application Should be launched and Mytixx login page displayed\r\n2. The Patron should be logged in and landed on To DO list page\r\n3. The offer should be available for renewal To Do List page - Pending Renewals/Payments\r\n4. \t\nOnce the Patron log in the Get Renewal Order call will be generated from PVO to PV. Verify\n\nOrder number\nOffer name , Section and rows 3.Offer price and Service charges 4.Payment plan in API\r\n5. If one receivable order is created , then the count should be displayed in To DO List Top navigation as 1.\r\n6. \t\nIt should contain:\n\n1.Checkbox for making select all items/individual offer\nOrder ID from ProVenue\n2. Package Eventlist name (Event name if you created offer with Event) under Pending items header\n3.Section Row and Seats (If multiple seats are there it is sepearted with /)\n4.Payment options drop downs with associated Payment plans (Default Payment plan drop down before selection as \" Select Payment Plan\") \n5.Under Financial header Order Total (Ticket price+Service charges) will be displayed with Currency symbol ($ for dollar)\n6.The Due date Display in red font\n7.redelivery permission as False\r\n7. The Payment plan should be selected and verify the checkbox of the corresponding offer is checked.\r\n8. The statement window should be opened and the default invoice should be printed as expected . It is from PV\r\n9. \t\nThe user should be returned to the To Do List\r\n10. The user should be navigated to Multiple delivery page\r\n11. The Default delivery method set in Sales AFP will be displayed along with the Delivery description\r\n12. The Payment plan and the Seat info is displayed as tabular column in Order details URL popup.\r\n13. The Payment should be displayed with apckage event list details, Payment plan, Installment table,card drop down, Installments (If enabled), email and confimation email, Seat details with fiancial summary, Terms and conditions etc\r\n14. All the values should be same as the Patron account information\r\n15. Scheduling should not be allowed in the renewal cart (No date wi9se forecasting)\r\n16. Split the payment in to 2 and assign to MSTR and VISA\r\n17. Error should be retuned as \"maximum Split payment allowed as 2\"\r\n18. The Amount should be spitted and assigned\r\n19. The user should be displayed with renewal confirmartion page having all the details on Delivery method, Payment type , Seat details and financial summary. It also list the future Manual payments.\r\n20. Payrenewal call should be initiated with correct payment method details to PV\r\n21. All the database should be verified, Verify the Patron Address table is still having the account address"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716895,
    "title": "Verify the default value of SPMAXPM (Scheduled Payments Max Payment Methods) is honoured",
    "section_id": 1686243,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C152404",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre-requisite :\r\n1. Create an event, patron\r\n2. Create payment plans, with one of the payment plans with schedule payments as Optional\r\n3. Perform a recievable transaction for the event with the payment plan with schedule payment option as Optional",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to mytickets application\r\nExpected Result:\r\nPatron must be logged into his account\r\n2. In To do list, Verify that the order is displayed in \"Orders needing schedule payments\"\r\nExpected Result:\r\nThe order is displayed in \"Orders needing schedule payments\"\r\n3. Select the order and verify that the due now amount is displayed correctly\r\nExpected Result:\r\nThe due now amount must be displayed correctly\r\n4. Verify that a hyperlink \"Installment schedule\" is displayed at the dropdown\r\nExpected Result:\r\nThe hyperlink \"Installment schedule\" must be displayed next to the Payment Options dropdown\r\n5. Verify that schedule automatic payments and Manually Pay installments radio buttons should be displayed\r\nExpected Result:\r\nThe schedule automatic payments and Manually Pay installments radio buttons must be displayed\r\n6. Select Schedule payments installments radio button and click renew button & Navigate to the Payment page\r\nExpected Result:\r\nUser must be navigated to payment page\r\n7. Verify that the user navigates to the payment page and  has the option to select the payment method against each installment\r\nExpected Result:\r\nUser must have the option to select the payment method against each installment\r\n8. Click Split icon against the installment and verify that the user can assign only 5 payment methods to an installment\nSPMAXPM (Scheduled Payments Max Payment Methods) - Default value = 5\r\nExpected Result:\r\nUser must be able to assign only 5 payment methods to an installment\nSPMAXPM set to default value",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to mytickets application\r\n2. In To do list, Verify that the order is displayed in \"Orders needing schedule payments\"\r\n3. Select the order and verify that the due now amount is displayed correctly\r\n4. Verify that a hyperlink \"Installment schedule\" is displayed at the dropdown\r\n5. Verify that schedule automatic payments and Manually Pay installments radio buttons should be displayed\r\n6. Select Schedule payments installments radio button and click renew button & Navigate to the Payment page\r\n7. Verify that the user navigates to the payment page and  has the option to select the payment method against each installment\r\n8. Click Split icon against the installment and verify that the user can assign only 5 payment methods to an installment\nSPMAXPM (Scheduled Payments Max Payment Methods) - Default value = 5",
        "expected": "1. Patron must be logged into his account\r\n2. The order is displayed in \"Orders needing schedule payments\"\r\n3. The due now amount must be displayed correctly\r\n4. The hyperlink \"Installment schedule\" must be displayed next to the Payment Options dropdown\r\n5. The schedule automatic payments and Manually Pay installments radio buttons must be displayed\r\n6. User must be navigated to payment page\r\n7. User must have the option to select the payment method against each installment\r\n8. User must be able to assign only 5 payment methods to an installment\nSPMAXPM set to default value"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716896,
    "title": "Add 2 cards(Master and Visa) each with 50 percent of the installment amount and verify that the amount is deducted correctly",
    "section_id": 1686243,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913, PVO-16540",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C152405",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre-requisite :\r\n1. Create a Package with Renewal flag true in PV\r\n2. Create payment plans, with one of the payment plans with schedule payments as NA with current Due and associate to above Package\r\n3. Perform a reservation transaction for the above package for a Patron, having 2 cards in file MSTR & VISA\r\n4.Set BROWPEN text code set to true\r\n5.PV \"Change Delivery\" Permission should be false\r\n6.Set Split Payment maximum text code to 2",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MyTixx application\r\nExpected Result:\r\n\t\nThe Application Should be launched and Mytixx login page displayed\r\n2. \t\nLogin as the Patron in the Prerequisite 3\r\nExpected Result:\r\nThe Patron should be logged in and landed on To DO list page\r\n3. In To do list, Verify that the order is displayed in \"Orders needing payments\"\r\nExpected Result:\r\nThe offer should be available for renewal To Do List page - Pending Renewals/Payments\r\n4. Verify the GetRenewalorder API from Splunk\r\nExpected Result:\r\n\t\nOnce the Patron log in the Get Renewal Order call will be generated from PVO to PV. Verify\n\nOrder number\nOffer name , Section and rows 3.Offer price and Service charges 4.Payment plan in API\r\n5. Verify the Top navigation \"To Do List\" button is highlighted with total available items in To Do List\r\nExpected Result:\r\nIf one receivable order is created , then the count should be displayed in To DO List Top navigation as 1.\r\n6. Verify the UI of the Renewal_Reservation panel\r\nExpected Result:\r\n\t\nIt should contain:\n\n1.Checkbox for making select all items/individual offer\nOrder ID from ProVenue\n2. Package Eventlist name (Event name if you created offer with Event) under Pending items header\n3.Section Row and Seats (If multiple seats are there it is sepearted with /)\n4.Payment options drop downs with associated Payment plans (Default Payment plan drop down before selection as \" Select Payment Plan\") \n5.Under Financial header Order Total (Ticket price+Service charges) will be displayed with Currency symbol ($ for dollar)\n6.The Due date Display in red font\n7.redelivery permission as False\r\n7. Select the SCH_NA Payment plan (created in Prerequisite) from the Drop down for the offer\r\nExpected Result:\r\nThe Payment plan should be selected and verify the checkbox of the corresponding offer is checked.\r\n8. Now Click on \"View Statement\" button near to renew button under the renewal offer\r\nExpected Result:\r\nThe statement window should be opened and the default invoice should be printed as expected . It is from PV\r\n9. Close the Statement PDF\r\nExpected Result:\r\n\t\nThe user should be returned to the To Do List\r\n10. Now Click on renew button\r\nExpected Result:\r\nThe user should be navigated to Multiple delivery page\r\n11. Verify there is no Multiple delivery drop down display, since Change Delivery permission is false\r\nExpected Result:\r\nThe Default delivery method set in Sales AFP will be displayed along with the Delivery description\r\n12. Now Click on Order details link available near to the Package event list description\r\nExpected Result:\r\nThe Payment plan and the Seat info is displayed as tabular column in Order details URL popup.\r\n13. Now Clcik on Continue and navigate to the Payment page\r\nExpected Result:\r\nThe Payment should be displayed with apckage event list details, Payment plan, Installment table,card drop down, Installments (If enabled), email and confimation email, Seat details with fiancial summary, Terms and conditions etc\r\n14. Verify the Delivery details,  address is passed in Get renewalcart request from PVO\r\nExpected Result:\r\nAll the values should be same as the Patron account information\r\n15. Verify the Scheduling is not there in installment table, Only one term of Manual Payment instead\r\nExpected Result:\r\nScheduling should not be allowed in the renewal cart (No date wi9se forecasting)\r\n16. Verify the Payment can be splitted up to two and can use different cards\r\nExpected Result:\r\nSplit the payment in to 2 and assign to MSTR and VISA\r\n17. Verify on trying Split more than 2, we are getting error message\r\nExpected Result:\r\nError should be retuned as \"maximum Split payment allowed as 2\"\r\n18. Assign equal Percentage of  Due now amount across those cards\r\nExpected Result:\r\nThe Amount should be spitted and assigned\r\n19. Complete the Renewal transaction after filling the details\r\nExpected Result:\r\nThe user should be displayed with renewal confirmartion page having all the details on Delivery method, Payment type , Seat details and financial summary. It also list the future Manual payments.\r\n20. Verify the Payrenewal call is passed from PVO to PV\r\nExpected Result:\r\nPayrenewal call should be initiated with correct payment method details to PV\r\n21. Verify the DB\n\nSELECT * FROM pvo.payment where order_id =xxxx\nSELECT * FROM pvo.patron_card_info where patron_id= xxxxx\nselect * from pvo.PATRON_ADDRESS where PATRON_ID= xxxx\nselect * from pvo.OFFER_SEAT where ORDER_ID=xxxx\nselect * from pvo.TDC_ORDER where Order_ID=xxxx\r\nExpected Result:\r\nAll the database should be verified, Verify the Patron Address table is still having the account address",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MyTixx application\r\n2. \t\nLogin as the Patron in the Prerequisite 3\r\n3. In To do list, Verify that the order is displayed in \"Orders needing payments\"\r\n4. Verify the GetRenewalorder API from Splunk\r\n5. Verify the Top navigation \"To Do List\" button is highlighted with total available items in To Do List\r\n6. Verify the UI of the Renewal_Reservation panel\r\n7. Select the SCH_NA Payment plan (created in Prerequisite) from the Drop down for the offer\r\n8. Now Click on \"View Statement\" button near to renew button under the renewal offer\r\n9. Close the Statement PDF\r\n10. Now Click on renew button\r\n11. Verify there is no Multiple delivery drop down display, since Change Delivery permission is false\r\n12. Now Click on Order details link available near to the Package event list description\r\n13. Now Clcik on Continue and navigate to the Payment page\r\n14. Verify the Delivery details,  address is passed in Get renewalcart request from PVO\r\n15. Verify the Scheduling is not there in installment table, Only one term of Manual Payment instead\r\n16. Verify the Payment can be splitted up to two and can use different cards\r\n17. Verify on trying Split more than 2, we are getting error message\r\n18. Assign equal Percentage of  Due now amount across those cards\r\n19. Complete the Renewal transaction after filling the details\r\n20. Verify the Payrenewal call is passed from PVO to PV\r\n21. Verify the DB\n\nSELECT * FROM pvo.payment where order_id =xxxx\nSELECT * FROM pvo.patron_card_info where patron_id= xxxxx\nselect * from pvo.PATRON_ADDRESS where PATRON_ID= xxxx\nselect * from pvo.OFFER_SEAT where ORDER_ID=xxxx\nselect * from pvo.TDC_ORDER where Order_ID=xxxx",
        "expected": "1. \t\nThe Application Should be launched and Mytixx login page displayed\r\n2. The Patron should be logged in and landed on To DO list page\r\n3. The offer should be available for renewal To Do List page - Pending Renewals/Payments\r\n4. \t\nOnce the Patron log in the Get Renewal Order call will be generated from PVO to PV. Verify\n\nOrder number\nOffer name , Section and rows 3.Offer price and Service charges 4.Payment plan in API\r\n5. If one receivable order is created , then the count should be displayed in To DO List Top navigation as 1.\r\n6. \t\nIt should contain:\n\n1.Checkbox for making select all items/individual offer\nOrder ID from ProVenue\n2. Package Eventlist name (Event name if you created offer with Event) under Pending items header\n3.Section Row and Seats (If multiple seats are there it is sepearted with /)\n4.Payment options drop downs with associated Payment plans (Default Payment plan drop down before selection as \" Select Payment Plan\") \n5.Under Financial header Order Total (Ticket price+Service charges) will be displayed with Currency symbol ($ for dollar)\n6.The Due date Display in red font\n7.redelivery permission as False\r\n7. The Payment plan should be selected and verify the checkbox of the corresponding offer is checked.\r\n8. The statement window should be opened and the default invoice should be printed as expected . It is from PV\r\n9. \t\nThe user should be returned to the To Do List\r\n10. The user should be navigated to Multiple delivery page\r\n11. The Default delivery method set in Sales AFP will be displayed along with the Delivery description\r\n12. The Payment plan and the Seat info is displayed as tabular column in Order details URL popup.\r\n13. The Payment should be displayed with apckage event list details, Payment plan, Installment table,card drop down, Installments (If enabled), email and confimation email, Seat details with fiancial summary, Terms and conditions etc\r\n14. All the values should be same as the Patron account information\r\n15. Scheduling should not be allowed in the renewal cart (No date wi9se forecasting)\r\n16. Split the payment in to 2 and assign to MSTR and VISA\r\n17. Error should be retuned as \"maximum Split payment allowed as 2\"\r\n18. The Amount should be spitted and assigned\r\n19. The user should be displayed with renewal confirmartion page having all the details on Delivery method, Payment type , Seat details and financial summary. It also list the future Manual payments.\r\n20. Payrenewal call should be initiated with correct payment method details to PV\r\n21. All the database should be verified, Verify the Patron Address table is still having the account address"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716897,
    "title": "Verify that for the scheduled payments, CVV is collected only for the Due now amounts",
    "section_id": 1686243,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C152406",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre- requisite :\r\n1. Create an event, patron\r\n2. Create payment plans, with one of the payment plans with schedule payments as required and First 2 installments are Due now & 3rd one is in Future\r\n3. Perform a receivable transaction for the event with the payment plan created above",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to mytickets application\r\nExpected Result:\r\nMytickets application must be launched and patron must be logged in\r\n2. In To do list, Verify that the order is displayed in \"Orders needing schedule payments\"\r\nExpected Result:\r\nOrder must be displayed in \"Orders needing schedule payments\"\r\n3. Select the order and verify that the due now amount is displayed correctly\r\nExpected Result:\r\ndue amount must be dispalyed correctly\r\n4. Verify that schedule automatic payments and Manually Pay installments radio buttons are not shown\r\nExpected Result:\r\nSchedule automatic payments and Manually Pay installments radio buttons must not be displayed\r\n5. Verify that a hyperlink \"Installment schedule\" is displayed next to the dropdown\r\nExpected Result:\r\nHyperlink \"Installment schedule\" must be displayed next to the dropdown\r\n6. Click renew button and navigate to the payment page\r\nExpected Result:\r\nPayment page must be displayed\r\n7. Verify that all the installments amount is displayed correctly\r\nExpected Result:\r\nAll installments must be displayed correctly\r\n8. Verify that CVV field is displayed only for Due now Amount\r\nExpected Result:\r\nOnly credit cards must be displayed in the payment methods dropdown",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to mytickets application\r\n2. In To do list, Verify that the order is displayed in \"Orders needing schedule payments\"\r\n3. Select the order and verify that the due now amount is displayed correctly\r\n4. Verify that schedule automatic payments and Manually Pay installments radio buttons are not shown\r\n5. Verify that a hyperlink \"Installment schedule\" is displayed next to the dropdown\r\n6. Click renew button and navigate to the payment page\r\n7. Verify that all the installments amount is displayed correctly\r\n8. Verify that CVV field is displayed only for Due now Amount",
        "expected": "1. Mytickets application must be launched and patron must be logged in\r\n2. Order must be displayed in \"Orders needing schedule payments\"\r\n3. due amount must be dispalyed correctly\r\n4. Schedule automatic payments and Manually Pay installments radio buttons must not be displayed\r\n5. Hyperlink \"Installment schedule\" must be displayed next to the dropdown\r\n6. Payment page must be displayed\r\n7. All installments must be displayed correctly\r\n8. Only credit cards must be displayed in the payment methods dropdown"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716898,
    "title": "Verify that The CVV column shall be suppressed from the installment table if there are no due now amounts",
    "section_id": 1686243,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913, PVO-16540",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C152407",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre-requisite :\r\n1. Create a Package with Renewal flag true in PV\r\n2. Create payment plans,manual payment for the installments not due now(future installments)\r\n3. Perform a reservation transaction for the above package for a Patron, having 2 cards in file MSTR & VISA\r\n4.Set BROWPEN text code set to true\r\n5.PV \"Change Delivery\" Permission should be false",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MyTixx application\r\nExpected Result:\r\n\t\nThe Application Should be launched and Mytixx login page displayed\r\n2. \t\nLogin as the Patron in the Prerequisite 3\r\nExpected Result:\r\nThe Patron should be logged in and landed on To DO list page\r\n3. In To do list, Verify that the order is displayed in \"Orders needing payments\"\r\nExpected Result:\r\nThe offer should be available for renewal To Do List page - Pending Renewals/Payments\r\n4. Verify the GetRenewalorder API from Splunk\r\nExpected Result:\r\n\t\nOnce the Patron log in the Get Renewal Order call will be generated from PVO to PV. Verify\n\nOrder number\nOffer name , Section and rows 3.Offer price and Service charges 4.Payment plan in API\r\n5. Verify the Top navigation \"To Do List\" button is highlighted with total available items in To Do List\r\nExpected Result:\r\nIf one receivable order is created , then the count should be displayed in To DO List Top navigation as 1.\r\n6. Verify the UI of the Renewal_Reservation panel\r\nExpected Result:\r\n\t\nIt should contain:\n\n1.Checkbox for making select all items/individual offer\nOrder ID from ProVenue\n2. Package Eventlist name (Event name if you created offer with Event) under Pending items header\n3.Section Row and Seats (If multiple seats are there it is sepearted with /)\n4.Payment options drop downs with associated Payment plans (Default Payment plan drop down before selection as \" Select Payment Plan\") \n5.Under Financial header Order Total (Ticket price+Service charges) will be displayed with Currency symbol ($ for dollar)\n6.The Due date Display in red font\n7.redelivery permission as False\r\n7. Select the Manual Payment plan (created in Prerequisite) from the Drop down for the offer\r\nExpected Result:\r\nThe Payment plan should be selected and verify the checkbox of the corresponding offer is checked.\r\n8. Now Click on \"View Statement\" button near to renew button under the renewal offer\r\nExpected Result:\r\nThe statement window should be opened and the default invoice should be printed as expected . It is from PV\r\n9. Close the Statement PDF\r\nExpected Result:\r\n\t\nThe user should be returned to the To Do List\r\n10. Now Click on renew button\r\nExpected Result:\r\nThe user should be navigated to Multiple delivery page\r\n11. Verify there is no Multiple delivery drop down display, since Change Delivery permission is false\r\nExpected Result:\r\nThe Default delivery method set in Sales AFP will be displayed along with the Delivery description\r\n12. Now Click on Order details link available near to the Package event list description\r\nExpected Result:\r\nThe Payment plan and the Seat info is displayed as tabular column in Order details URL popup.\r\n13. Now Clcik on Continue and navigate to the Payment page\r\nExpected Result:\r\nThe Payment should be displayed with apckage event list details, Payment plan, Installment table,card drop down, Installments (If enabled), email and confimation email, Seat details with fiancial summary, Terms and conditions etc\r\n14. Verify the Delivery details,  address is passed in Get renewalcart request from PVO\r\nExpected Result:\r\nAll the values should be same as the Patron account information\r\n15. Verify the Scheduling is not there in installment table, all are need to be paid in Future\r\nExpected Result:\r\nScheduling should not be allowed in the renewal cart (No date wi9se forecasting)\r\n16. Verify the CVC  column is not displaying\r\nExpected Result:\r\nCVC column should not be displayed if there is no due npow amounts\r\n17. Complete the Renewal transaction after filling the details\r\nExpected Result:\r\nThe user should be displayed with renewal confirmartion page having all the details on Delivery method, Payment type , Seat details and financial summary. It also list the future Manual payments.\r\n18. Verify the Payrenewal call is passed from PVO to PV\r\nExpected Result:\r\nPayrenewal call should be initiated with correct payment method details to PV\r\n19. Verify the DB\n\nSELECT * FROM pvo.payment where order_id =xxxx\nSELECT * FROM pvo.patron_card_info where patron_id= xxxxx\nselect * from pvo.PATRON_ADDRESS where PATRON_ID= xxxx\nselect * from pvo.OFFER_SEAT where ORDER_ID=xxxx\nselect * from pvo.TDC_ORDER where Order_ID=xxxx\r\nExpected Result:\r\nAll the database should be verified, Verify the Patron Address table is still having the account address",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MyTixx application\r\n2. \t\nLogin as the Patron in the Prerequisite 3\r\n3. In To do list, Verify that the order is displayed in \"Orders needing payments\"\r\n4. Verify the GetRenewalorder API from Splunk\r\n5. Verify the Top navigation \"To Do List\" button is highlighted with total available items in To Do List\r\n6. Verify the UI of the Renewal_Reservation panel\r\n7. Select the Manual Payment plan (created in Prerequisite) from the Drop down for the offer\r\n8. Now Click on \"View Statement\" button near to renew button under the renewal offer\r\n9. Close the Statement PDF\r\n10. Now Click on renew button\r\n11. Verify there is no Multiple delivery drop down display, since Change Delivery permission is false\r\n12. Now Click on Order details link available near to the Package event list description\r\n13. Now Clcik on Continue and navigate to the Payment page\r\n14. Verify the Delivery details,  address is passed in Get renewalcart request from PVO\r\n15. Verify the Scheduling is not there in installment table, all are need to be paid in Future\r\n16. Verify the CVC  column is not displaying\r\n17. Complete the Renewal transaction after filling the details\r\n18. Verify the Payrenewal call is passed from PVO to PV\r\n19. Verify the DB\n\nSELECT * FROM pvo.payment where order_id =xxxx\nSELECT * FROM pvo.patron_card_info where patron_id= xxxxx\nselect * from pvo.PATRON_ADDRESS where PATRON_ID= xxxx\nselect * from pvo.OFFER_SEAT where ORDER_ID=xxxx\nselect * from pvo.TDC_ORDER where Order_ID=xxxx",
        "expected": "1. \t\nThe Application Should be launched and Mytixx login page displayed\r\n2. The Patron should be logged in and landed on To DO list page\r\n3. The offer should be available for renewal To Do List page - Pending Renewals/Payments\r\n4. \t\nOnce the Patron log in the Get Renewal Order call will be generated from PVO to PV. Verify\n\nOrder number\nOffer name , Section and rows 3.Offer price and Service charges 4.Payment plan in API\r\n5. If one receivable order is created , then the count should be displayed in To DO List Top navigation as 1.\r\n6. \t\nIt should contain:\n\n1.Checkbox for making select all items/individual offer\nOrder ID from ProVenue\n2. Package Eventlist name (Event name if you created offer with Event) under Pending items header\n3.Section Row and Seats (If multiple seats are there it is sepearted with /)\n4.Payment options drop downs with associated Payment plans (Default Payment plan drop down before selection as \" Select Payment Plan\") \n5.Under Financial header Order Total (Ticket price+Service charges) will be displayed with Currency symbol ($ for dollar)\n6.The Due date Display in red font\n7.redelivery permission as False\r\n7. The Payment plan should be selected and verify the checkbox of the corresponding offer is checked.\r\n8. The statement window should be opened and the default invoice should be printed as expected . It is from PV\r\n9. \t\nThe user should be returned to the To Do List\r\n10. The user should be navigated to Multiple delivery page\r\n11. The Default delivery method set in Sales AFP will be displayed along with the Delivery description\r\n12. The Payment plan and the Seat info is displayed as tabular column in Order details URL popup.\r\n13. The Payment should be displayed with apckage event list details, Payment plan, Installment table,card drop down, Installments (If enabled), email and confimation email, Seat details with fiancial summary, Terms and conditions etc\r\n14. All the values should be same as the Patron account information\r\n15. Scheduling should not be allowed in the renewal cart (No date wi9se forecasting)\r\n16. CVC column should not be displayed if there is no due npow amounts\r\n17. The user should be displayed with renewal confirmartion page having all the details on Delivery method, Payment type , Seat details and financial summary. It also list the future Manual payments.\r\n18. Payrenewal call should be initiated with correct payment method details to PV\r\n19. All the database should be verified, Verify the Patron Address table is still having the account address"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716899,
    "title": "Verify that the split payment is not available for the manual payment for the installments not due now(future installments)",
    "section_id": 1686243,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913, PVO-16540",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C152408",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre-requisite :\r\n1. Create a Package with Renewal flag true in PV\r\n2. Create payment plans,manual payment for the installments not due now(future installments)\r\n3. Perform a reservation transaction for the above package for a Patron, having 2 cards in file MSTR & VISA\r\n4.Set BROWPEN text code set to true\r\n5.PV \"Change Delivery\" Permission should be false",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MyTixx application\r\nExpected Result:\r\n\t\nThe Application Should be launched and Mytixx login page displayed\r\n2. \t\nLogin as the Patron in the Prerequisite 3\r\nExpected Result:\r\nThe Patron should be logged in and landed on To DO list page\r\n3. In To do list, Verify that the order is displayed in \"Orders needing payments\"\r\nExpected Result:\r\nThe offer should be available for renewal To Do List page - Pending Renewals/Payments\r\n4. Verify the GetRenewalorder API from Splunk\r\nExpected Result:\r\n\t\nOnce the Patron log in the Get Renewal Order call will be generated from PVO to PV. Verify\n\nOrder number\nOffer name , Section and rows 3.Offer price and Service charges 4.Payment plan in API\r\n5. Verify the Top navigation \"To Do List\" button is highlighted with total available items in To Do List\r\nExpected Result:\r\nIf one receivable order is created , then the count should be displayed in To DO List Top navigation as 1.\r\n6. Verify the UI of the Renewal_Reservation panel\r\nExpected Result:\r\n\t\nIt should contain:\n\n1.Checkbox for making select all items/individual offer\nOrder ID from ProVenue\n2. Package Eventlist name (Event name if you created offer with Event) under Pending items header\n3.Section Row and Seats (If multiple seats are there it is sepearted with /)\n4.Payment options drop downs with associated Payment plans (Default Payment plan drop down before selection as \" Select Payment Plan\") \n5.Under Financial header Order Total (Ticket price+Service charges) will be displayed with Currency symbol ($ for dollar)\n6.The Due date Display in red font\n7.redelivery permission as False\r\n7. Select the Manual Payment plan (created in Prerequisite) from the Drop down for the offer\r\nExpected Result:\r\nThe Payment plan should be selected and verify the checkbox of the corresponding offer is checked.\r\n8. Now Click on \"View Statement\" button near to renew button under the renewal offer\r\nExpected Result:\r\nThe statement window should be opened and the default invoice should be printed as expected . It is from PV\r\n9. Close the Statement PDF\r\nExpected Result:\r\n\t\nThe user should be returned to the To Do List\r\n10. Now Click on renew button\r\nExpected Result:\r\nThe user should be navigated to Multiple delivery page\r\n11. Verify there is no Multiple delivery drop down display, since Change Delivery permission is false\r\nExpected Result:\r\nThe Default delivery method set in Sales AFP will be displayed along with the Delivery description\r\n12. Now Click on Order details link available near to the Package event list description\r\nExpected Result:\r\nThe Payment plan and the Seat info is displayed as tabular column in Order details URL popup.\r\n13. Now Clcik on Continue and navigate to the Payment page\r\nExpected Result:\r\nThe Payment should be displayed with apckage event list details, Payment plan, Installment table,card drop down, Installments (If enabled), email and confimation email, Seat details with fiancial summary, Terms and conditions etc\r\n14. Verify the Delivery details,  address is passed in Get renewalcart request from PVO\r\nExpected Result:\r\nAll the values should be same as the Patron account information\r\n15. Verify the Scheduling is not there in installment table, all are need to be paid in Future\r\nExpected Result:\r\nScheduling should not be allowed in the renewal cart (No date wi9se forecasting)\r\n16. Verify the Payment can not be splited \r\nExpected Result:\r\nSplit Payment should not be there since no provision to give card over there\r\n17. Complete the Renewal transaction after filling the details\r\nExpected Result:\r\nThe user should be displayed with renewal confirmartion page having all the details on Delivery method, Payment type , Seat details and financial summary. It also list the future Manual payments.\r\n18. Verify the Payrenewal call is passed from PVO to PV\r\nExpected Result:\r\nPayrenewal call should be initiated with correct payment method details to PV\r\n19. Verify the DB\n\nSELECT * FROM pvo.payment where order_id =xxxx\nSELECT * FROM pvo.patron_card_info where patron_id= xxxxx\nselect * from pvo.PATRON_ADDRESS where PATRON_ID= xxxx\nselect * from pvo.OFFER_SEAT where ORDER_ID=xxxx\nselect * from pvo.TDC_ORDER where Order_ID=xxxx\r\nExpected Result:\r\nAll the database should be verified, Verify the Patron Address table is still having the account address",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MyTixx application\r\n2. \t\nLogin as the Patron in the Prerequisite 3\r\n3. In To do list, Verify that the order is displayed in \"Orders needing payments\"\r\n4. Verify the GetRenewalorder API from Splunk\r\n5. Verify the Top navigation \"To Do List\" button is highlighted with total available items in To Do List\r\n6. Verify the UI of the Renewal_Reservation panel\r\n7. Select the Manual Payment plan (created in Prerequisite) from the Drop down for the offer\r\n8. Now Click on \"View Statement\" button near to renew button under the renewal offer\r\n9. Close the Statement PDF\r\n10. Now Click on renew button\r\n11. Verify there is no Multiple delivery drop down display, since Change Delivery permission is false\r\n12. Now Click on Order details link available near to the Package event list description\r\n13. Now Clcik on Continue and navigate to the Payment page\r\n14. Verify the Delivery details,  address is passed in Get renewalcart request from PVO\r\n15. Verify the Scheduling is not there in installment table, all are need to be paid in Future\r\n16. Verify the Payment can not be splited \r\n17. Complete the Renewal transaction after filling the details\r\n18. Verify the Payrenewal call is passed from PVO to PV\r\n19. Verify the DB\n\nSELECT * FROM pvo.payment where order_id =xxxx\nSELECT * FROM pvo.patron_card_info where patron_id= xxxxx\nselect * from pvo.PATRON_ADDRESS where PATRON_ID= xxxx\nselect * from pvo.OFFER_SEAT where ORDER_ID=xxxx\nselect * from pvo.TDC_ORDER where Order_ID=xxxx",
        "expected": "1. \t\nThe Application Should be launched and Mytixx login page displayed\r\n2. The Patron should be logged in and landed on To DO list page\r\n3. The offer should be available for renewal To Do List page - Pending Renewals/Payments\r\n4. \t\nOnce the Patron log in the Get Renewal Order call will be generated from PVO to PV. Verify\n\nOrder number\nOffer name , Section and rows 3.Offer price and Service charges 4.Payment plan in API\r\n5. If one receivable order is created , then the count should be displayed in To DO List Top navigation as 1.\r\n6. \t\nIt should contain:\n\n1.Checkbox for making select all items/individual offer\nOrder ID from ProVenue\n2. Package Eventlist name (Event name if you created offer with Event) under Pending items header\n3.Section Row and Seats (If multiple seats are there it is sepearted with /)\n4.Payment options drop downs with associated Payment plans (Default Payment plan drop down before selection as \" Select Payment Plan\") \n5.Under Financial header Order Total (Ticket price+Service charges) will be displayed with Currency symbol ($ for dollar)\n6.The Due date Display in red font\n7.redelivery permission as False\r\n7. The Payment plan should be selected and verify the checkbox of the corresponding offer is checked.\r\n8. The statement window should be opened and the default invoice should be printed as expected . It is from PV\r\n9. \t\nThe user should be returned to the To Do List\r\n10. The user should be navigated to Multiple delivery page\r\n11. The Default delivery method set in Sales AFP will be displayed along with the Delivery description\r\n12. The Payment plan and the Seat info is displayed as tabular column in Order details URL popup.\r\n13. The Payment should be displayed with apckage event list details, Payment plan, Installment table,card drop down, Installments (If enabled), email and confimation email, Seat details with fiancial summary, Terms and conditions etc\r\n14. All the values should be same as the Patron account information\r\n15. Scheduling should not be allowed in the renewal cart (No date wi9se forecasting)\r\n16. Split Payment should not be there since no provision to give card over there\r\n17. The user should be displayed with renewal confirmartion page having all the details on Delivery method, Payment type , Seat details and financial summary. It also list the future Manual payments.\r\n18. Payrenewal call should be initiated with correct payment method details to PV\r\n19. All the database should be verified, Verify the Patron Address table is still having the account address"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716900,
    "title": "Verify that the user is not able to delete the credit card from PVO which is assigned to scheduled payments.",
    "section_id": 1686243,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C152409",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create a New event and perf accept with renewals supplier, \r\n3. Associate a schedule payment plan to the above event\r\n4. Complete a recivable transaction with the above events for the patron created\r\n\r\nNote- Please refer the end to end Schedule _Required flow: [C70459]",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MyTixx application, login as patron created at pre requisite\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n2. Verify that the ticket is available in the To Do List ? Pending schedule Payments\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to schedulely pay their installments.\n3.      Pending schedule payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\nExpected Result:\r\nAll the details regarding the receivable le transaction created in pre requisite should  be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n3. Select the order created in pre requisite\nSelect amount to pay\nClick on schedule button & Navigate to Renewal cart page\r\nExpected Result:\r\nUser should be directed to renewal cart\r\n4. Select an option for insurance \nUnder the payment dropdown of instalment section, select Add Credit Card option\r\nExpected Result:\r\nUser should be directed to the card detials modal\r\n5. Select the card type, Number, Expiration Date, Name on Card, Card NickName, Billing address.\nClick on Update button\r\nExpected Result:\r\nThe card detials is saved, user is navigated to instalment section of renewal cart where the newly added card is selected as payment method for the instalment\r\n6. Provide email address\nCheck Terms and conditions\nClick on Submit Payment\r\nExpected Result:\r\nUser should be navigate to the confirmation page which displays theorder and delivery details\r\n7. Verify the Payrenewal call is passed from PVO to PV\r\nExpected Result:\r\n\t\n\nPayrenewal call should be initiated with correct payment method details to PV\n\r\n8. Verify the DB\n\nSELECT * FROM pvo.payment where order_id =xxxx\nSELECT * FROM pvo.patron_card_info where patron_id= xxxxx\nselect * from pvo.PATRON_ADDRESS where PATRON_ID= xxxx\nselect * from pvo.OFFER_SEAT where ORDER_ID=xxxx\nselect * from pvo.TDC_ORDER where Order_ID=xxxx\n\r\nExpected Result:\r\nThe Newly added card should be added to Patron Digital wallet\r\n9. Navigate to MyAccount -> Payment info tab\nVerify if the newly added card is present\nClick on remove icon against the card\nVerify if user is able to delete the card\r\nExpected Result:\r\nUser should not be allowed to delete the card as there is a pending schedule paymnet",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MyTixx application, login as patron created at pre requisite\r\n2. Verify that the ticket is available in the To Do List ? Pending schedule Payments\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to schedulely pay their installments.\n3.      Pending schedule payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\n3. Select the order created in pre requisite\nSelect amount to pay\nClick on schedule button & Navigate to Renewal cart page\r\n4. Select an option for insurance \nUnder the payment dropdown of instalment section, select Add Credit Card option\r\n5. Select the card type, Number, Expiration Date, Name on Card, Card NickName, Billing address.\nClick on Update button\r\n6. Provide email address\nCheck Terms and conditions\nClick on Submit Payment\r\n7. Verify the Payrenewal call is passed from PVO to PV\r\n8. Verify the DB\n\nSELECT * FROM pvo.payment where order_id =xxxx\nSELECT * FROM pvo.patron_card_info where patron_id= xxxxx\nselect * from pvo.PATRON_ADDRESS where PATRON_ID= xxxx\nselect * from pvo.OFFER_SEAT where ORDER_ID=xxxx\nselect * from pvo.TDC_ORDER where Order_ID=xxxx\n\r\n9. Navigate to MyAccount -> Payment info tab\nVerify if the newly added card is present\nClick on remove icon against the card\nVerify if user is able to delete the card",
        "expected": "1. User should able to login to mytixx application successfully\r\n2. All the details regarding the receivable le transaction created in pre requisite should  be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n3. User should be directed to renewal cart\r\n4. User should be directed to the card detials modal\r\n5. The card detials is saved, user is navigated to instalment section of renewal cart where the newly added card is selected as payment method for the instalment\r\n6. User should be navigate to the confirmation page which displays theorder and delivery details\r\n7. \t\n\nPayrenewal call should be initiated with correct payment method details to PV\n\r\n8. The Newly added card should be added to Patron Digital wallet\r\n9. User should not be allowed to delete the card as there is a pending schedule paymnet"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716901,
    "title": "Verify that the credit card postal code is being sent in PayRenewal API for Due now manual payment for the 1st installment",
    "section_id": 1686243,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13299",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_refs": "C152410",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre requisite:\r\n1. Create a Package and a Manual payment plan such that the 1st installment is Due now\r\n2. Create a patron\r\n3. Perform a recievable transaction with the patron",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MyTixx application, login as patron created at pre requisite\r\nExpected Result:\r\nUser should able to login to mytixx application successfully\r\n2. Verify that the ticket is available in the To Do List ? Pending Manual Payments\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\n3.      Pending manual payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\nExpected Result:\r\nAll the details regarding the receivable le transaction created in pre requisite should  be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n3. Verify the UI of the pending manual payments section\r\nExpected Result:\r\nA table shall display a row for each installment with columns for:\n? Installment Number\n? Due Date \n? Installment Amount\nThere shall be text offered in the installment schedule modal to indicate that the installment amounts do not reflect the application of credits.\r\n4. Select the order created in the pre-requisite\nclick Renew/ Pay button & Navigate to the Payment page\r\nExpected Result:\r\nUser should navigate to the payment page\r\n5. Select the cart\nNote the postal code \nEnter the Cvv code\nclick submit button\r\nExpected Result:\r\nUser should be able to complete the transaction successfully\r\n6. Verify the PayRenewal node in logs\r\nExpected Result:\r\npostal_code node should be displayed for the manual payments\r\n7. login to PV application\nNavigate to ticket services \nselect the order\nSelect the payments tab\nselect Auth link against the card\nVerify that the payment\r\nExpected Result:\r\nAVS postal code should be the postal code of the card",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MyTixx application, login as patron created at pre requisite\r\n2. Verify that the ticket is available in the To Do List ? Pending Manual Payments\n\n*When ProVenue returns an order which is already associated with a receivable, it shall send one or more installments, each with its own due date.  These orders will continue to be displayed under the 'Orders Needing Payment' section of the page, \n\nTo do list is divided into 3 sections\n1.      Reservations\n2.      Pending Scheduled Payments (*New*) - This will include orders which are:\na.      Rolled into receivables using a payment plan where the scheduled payment flag is either 'Required' or 'Optional'\nb.      Rolled over into reservations but have been claimed by the patron who selected a payment plan where the scheduled payment flag is 'Optional' and the patron selected the option to manually pay their installments.\n3.      Pending manual payments - this can include orders where:\na.      Rolled over into receivables using a payment plan where the scheduled payment flag is 'Not Allowed' or orders with a receivable which was created using an ad-hoc payment plan in ProVenue.\r\n3. Verify the UI of the pending manual payments section\r\n4. Select the order created in the pre-requisite\nclick Renew/ Pay button & Navigate to the Payment page\r\n5. Select the cart\nNote the postal code \nEnter the Cvv code\nclick submit button\r\n6. Verify the PayRenewal node in logs\r\n7. login to PV application\nNavigate to ticket services \nselect the order\nSelect the payments tab\nselect Auth link against the card\nVerify that the payment",
        "expected": "1. User should able to login to mytixx application successfully\r\n2. All the details regarding the receivable le transaction created in pre requisite should  be displayed as a new block for receivable orders needing payments to be scheduled successfully\r\n3. A table shall display a row for each installment with columns for:\n? Installment Number\n? Due Date \n? Installment Amount\nThere shall be text offered in the installment schedule modal to indicate that the installment amounts do not reflect the application of credits.\r\n4. User should navigate to the payment page\r\n5. User should be able to complete the transaction successfully\r\n6. postal_code node should be displayed for the manual payments\r\n7. AVS postal code should be the postal code of the card"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716902,
    "title": "Verify that Apply to All Payments button is not displayed on the new renewal payment page, once the user chooses the Split Payment button",
    "section_id": 1686243,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13450",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_refs": "C152411",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1. Have a Payment plan - Scheduled Payment plan with first 2 installment Due now and the rest are due later, Associated to a Package\r\n2.Create Reservation Order for the Package",
    "custom_test_purpose": null,
    "custom_steps": "1. 1. Launch My tickets application.\n2.Login with valid credentials of patron with \nPending Renewals\r\nExpected Result:\r\nUser is landed on Pending Renewals\\Payments tab\r\n2. Select any order for renewal and take the the Payment plan created above from the drop down\r\nExpected Result:\r\nThe renewal order and Payment plan option should be selected.\r\n3. Execute 12- 22 of the test case [C70459]\r\n4. In the installment table, Verify the \"Apply to All\" button is displayed initially\r\nExpected Result:\r\nApply to All Payments button should be displayed at the right of the credit card display\r\n5. Click on Split Payment button and Verify no  \nApply to All Payments button is displayed\r\nExpected Result:\r\nApply to All Payments button is not displayed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch My tickets application.\n2.Login with valid credentials of patron with \nPending Renewals\r\n2. Select any order for renewal and take the the Payment plan created above from the drop down\r\n3. Execute 12- 22 of the test case [C70459]\r\n4. In the installment table, Verify the \"Apply to All\" button is displayed initially\r\n5. Click on Split Payment button and Verify no  \nApply to All Payments button is displayed",
        "expected": "1. User is landed on Pending Renewals\\Payments tab\r\n2. The renewal order and Payment plan option should be selected.\r\n3. \r\n4. Apply to All Payments button should be displayed at the right of the credit card display\r\n5. Apply to All Payments button is not displayed"
      }
    ],
    "custom_jiras": "61"
  },
  {
    "id": 30716903,
    "title": "Verify authorization error message displays the last four digits of the credit card if two different card types are used for renewal payment and one card is invalid",
    "section_id": 1686243,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13472",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 9,
    "custom_is_automated": false,
    "custom_refs": "C152412",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre-requisite:\r\n \r\n1.The patron should have VISA and MSTR \r\ncards on file\r\n2.The patron should have Pending Renewal \r\nitems\r\n3. Login to maintenace site and Set SPMAXPM \r\nas 4 at supplier level.\r\n4.Purchase tickets for an event from PV as \r\nreceivable. Choose custom plan and enter \r\nquantity as 4 and interval as 4 weeks.\r\n5.Go to PV System setup->System \r\nAdmin->Codes->Card Type\r\n                Select VISA\r\n                Change 'Check Digit' from Mod 10 to \r\nMod 11  // Invalid visa card\r\n                Select Master \r\n                'Check Digit  ' should be Mod 10.   // \r\nValid master card",
    "custom_test_purpose": null,
    "custom_steps": "1. 1. Launch My tickets application.\n2.Login as patron mentioned in prerequisite\r\nExpected Result:\r\nUser is landed on Pending Renewals\\Payments tab\r\n2. 1.Selelct any order for renewal and schedule \npayment\n2.Click on Pay/Renew button & Navigate to payment page\r\nExpected Result:\r\nPayment page should be displayed\r\n3. Click on Split Payment icon against first \ninstallment\r\nExpected Result:\r\nThe payment should be  split\r\n4. Case 1:\n \nSelect Master card for first split and VISA for \nsecond split. \nEnter required fileds\nClick on Submit Payment\r\nExpected Result:\r\nError message should be displayed with  last \nfour digits of the invlaid VISA card.\r\n5. Case 2:\n \nSelect VISA card for first split and Master card \nfor second split. \nEnter required fileds\nClick on Submit Payment\r\nExpected Result:\r\nError message should be displayed with  last \nfour digits of the invlaid VISA card.\r\n6. Select Master card for all payments\r\nExpected Result:\r\nPatron should be able to selectmaster card as \nmany times\r\n7. Fill in all other required fields on the Payment page\r\nExpected Result:\r\nAll required fields are filled\r\n8. Click Submit Payment button\r\nExpected Result:\r\nPatron should be navigated to confirmation page\r\n9. Verify the DB\n\nSELECT * FROM pvo.payment where order_id =xxxx\nSELECT * FROM pvo.patron_card_info where patron_id= xxxxx\nselect * from pvo.PATRON_ADDRESS where PATRON_ID= xxxx\nselect * from pvo.OFFER_SEAT where ORDER_ID=xxxx\nselect * from pvo.TDC_ORDER where Order_ID=xxxx\n\r\nExpected Result:\r\nAll the database should be verified, Verify the Patron Address table is still having the account address and not replaced with the Delivery/payment method address added\r\n10. Verify the Payrenewal call is passed from PVO to PV\r\nExpected Result:\r\nPayrenewal call should be initiated with correct payment method details to PV",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Launch My tickets application.\n2.Login as patron mentioned in prerequisite\r\n2. 1.Selelct any order for renewal and schedule \npayment\n2.Click on Pay/Renew button & Navigate to payment page\r\n3. Click on Split Payment icon against first \ninstallment\r\n4. Case 1:\n \nSelect Master card for first split and VISA for \nsecond split. \nEnter required fileds\nClick on Submit Payment\r\n5. Case 2:\n \nSelect VISA card for first split and Master card \nfor second split. \nEnter required fileds\nClick on Submit Payment\r\n6. Select Master card for all payments\r\n7. Fill in all other required fields on the Payment page\r\n8. Click Submit Payment button\r\n9. Verify the DB\n\nSELECT * FROM pvo.payment where order_id =xxxx\nSELECT * FROM pvo.patron_card_info where patron_id= xxxxx\nselect * from pvo.PATRON_ADDRESS where PATRON_ID= xxxx\nselect * from pvo.OFFER_SEAT where ORDER_ID=xxxx\nselect * from pvo.TDC_ORDER where Order_ID=xxxx\n\r\n10. Verify the Payrenewal call is passed from PVO to PV",
        "expected": "1. User is landed on Pending Renewals\\Payments tab\r\n2. Payment page should be displayed\r\n3. The payment should be  split\r\n4. Error message should be displayed with  last \nfour digits of the invlaid VISA card.\r\n5. Error message should be displayed with  last \nfour digits of the invlaid VISA card.\r\n6. Patron should be able to selectmaster card as \nmany times\r\n7. All required fields are filled\r\n8. Patron should be navigated to confirmation page\r\n9. All the database should be verified, Verify the Patron Address table is still having the account address and not replaced with the Delivery/payment method address added\r\n10. Payrenewal call should be initiated with correct payment method details to PV"
      }
    ],
    "custom_jiras": "61"
  },
  {
    "id": 30716904,
    "title": "Verify Validate button is not displayed against already authenticated card on Multi card modal",
    "section_id": 1686243,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14048",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 10,
    "custom_is_automated": false,
    "custom_refs": "C152413",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.TNSPay configuration should be in place\r\n2.Set SEC3DE as true at Mytixx supplier level\r\n3.Set MPMKEY with appropriate value at Mytixx \r\nsupplier level\r\n4.'Credit card Processed by BOTS' should be ON \r\nfor Mytixx supplier\r\n5.Mytickets patron should be available with \r\nPending Renewal item",
    "custom_test_purpose": null,
    "custom_steps": "1. Log in to Mytickets account of the patron \nmentioned in prerequisite\r\nExpected Result:\r\nLogin should be successful\r\n2. Navigate to To Do List\r\nExpected Result:\r\nThe patron should be landed on Pending Renewals page\r\n3. Select any renewal order and Manual Payment plan \nsuch that Due now is not zero\r\nExpected Result:\r\nRenewal order and Manual payment plan should be selected such that Due now is not zero\r\n4. Click Renew/Pay button\r\nExpected Result:\r\nRenewal Payment page should be displayed\r\n5. Click Split payment button twice\r\nExpected Result:\r\nAdd card option box should be displayed\r\n6. Assign different card for each split\r\nExpected Result:\r\nCard should be assigned successfully\r\n7. Enter CVC\r\nExpected Result:\r\nCVC should be entered\r\n8. Enter the amount against each card\r\nExpected Result:\r\nAmount should be entered\r\n9. Fill in all other required fields on Payment page and Click Buy Tickets button\r\nExpected Result:\r\nMulti card modal is displayed\r\n10. Verify all selected cards are displayed on the Multi card modal and Validate button is displayed against each card\r\nExpected Result:\r\nAll cards selected on Payment page should be displayed on the Multi card modal and Validate button should be displayed against each \ncard\r\n11. Click Validate button against the 1st card\r\nExpected Result:\r\n3D secure modal should be displayed\r\n12. Enter PIN number of the card and validate\r\nExpected Result:\r\nOnce the card is validated, user should land back on multi card modal. Validate button \nagainst the 1st card should disappear.\r\n13. Complete the validation for all cards\r\nExpected Result:\r\nOnce the validation of all cards is completed, Submit Payment button should be displayed on Multi card modal and all Validate buttons should disappear.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Log in to Mytickets account of the patron \nmentioned in prerequisite\r\n2. Navigate to To Do List\r\n3. Select any renewal order and Manual Payment plan \nsuch that Due now is not zero\r\n4. Click Renew/Pay button\r\n5. Click Split payment button twice\r\n6. Assign different card for each split\r\n7. Enter CVC\r\n8. Enter the amount against each card\r\n9. Fill in all other required fields on Payment page and Click Buy Tickets button\r\n10. Verify all selected cards are displayed on the Multi card modal and Validate button is displayed against each card\r\n11. Click Validate button against the 1st card\r\n12. Enter PIN number of the card and validate\r\n13. Complete the validation for all cards",
        "expected": "1. Login should be successful\r\n2. The patron should be landed on Pending Renewals page\r\n3. Renewal order and Manual payment plan should be selected such that Due now is not zero\r\n4. Renewal Payment page should be displayed\r\n5. Add card option box should be displayed\r\n6. Card should be assigned successfully\r\n7. CVC should be entered\r\n8. Amount should be entered\r\n9. Multi card modal is displayed\r\n10. All cards selected on Payment page should be displayed on the Multi card modal and Validate button should be displayed against each \ncard\r\n11. 3D secure modal should be displayed\r\n12. Once the card is validated, user should land back on multi card modal. Validate button \nagainst the 1st card should disappear.\r\n13. Once the validation of all cards is completed, Submit Payment button should be displayed on Multi card modal and all Validate buttons should disappear."
      }
    ],
    "custom_jiras": "61"
  },
  {
    "id": 30716905,
    "title": "Verify if the card is validated successfully the Renewal transaction is completed and confirmation page is displayed if single payment is used and Pay In Full payment plan is selected",
    "section_id": 1686243,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14048",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 11,
    "custom_is_automated": false,
    "custom_refs": "C152414",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.TNSPay configuration should be in place\r\n2.Set SEC3DE as true at Mytixx supplier level\r\n3.Set MPMKEY with appropriate value at Mytixx supplier level\r\n4.'Credit card Processed by BOTS' should be ON for Mytixx \r\nsupplier\r\n5.Mytickets patron should be available with Pending Renewal \r\nitem\r\n6.Enable the Debug level in web -tiers\r\n \r\nDebug class: com.tickets.presentation.util.TdcAjaxServlet\r\nLevel: 30\r\n \r\nFor PVOQA1, \r\n \r\nhttp://irqawebpvo7.back.tickets.com/Debug.jsp?classname=com.tickets.presentation.util.TdcAjaxServlet+&attrname=debug&level=30\r\nhttp://irqawebpvo6.back.tickets.com/Debug.jsp?classname=com.tickets.presentation.util.TdcAjaxServlet+&attrname=debug&level=30",
    "custom_test_purpose": null,
    "custom_steps": "1. Log in to Mytickets account of the patron \nmentioned in prerequisite\r\nExpected Result:\r\nThe patron should land on Pending Renewals tab\r\n2. Select any renewal order and Pay In Full Payment plan\r\nExpected Result:\r\nRenewal order and Pay In Full Payment plan should be selected\r\n3. Click Renew/Pay button\r\nExpected Result:\r\nThe card should be selected and CVC should be entered\r\n4. Fill in alll other required fields on Payment page and click Submit Payment button\r\nExpected Result:\r\nA modal should be displayed for 3D secure authentication(ACS Emulator)\r\n5. Fill in alll other required fields on Payment page and click Submit Payment button\r\nExpected Result:\r\nCard should be validated successfully, system should complete the transaction and should display the confirmation page\r\n6. Select the Authentication result as 'Authentication Successful' \nand click Submit button\r\nExpected Result:\r\nThe logs should be captured\r\n7. Capture PayRenewal call to PV\n              \n                 \n                 \n                 \n                 \n                 \n                 \n              \r\nExpected Result:\r\nThe following should be passed to PV \n              \n                 \n                 \n                 \n                 \n                 \n                 \n              \r\n8. Capture PayRenewal call to PV\n              \n                 \n                 \n                 \n                 \n                 \n                 \n              \r\nExpected Result:\r\nThe logs should be captured\r\n9. Capture PV logs of TNSPay interaction\r\nExpected Result:\r\nTHREE_D_SECURE_ID field should be updated correctly\r\n10. Click Renew/Pay button\r\nExpected Result:\r\nRenewal Payment page should be displayed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Log in to Mytickets account of the patron \nmentioned in prerequisite\r\n2. Select any renewal order and Pay In Full Payment plan\r\n3. Click Renew/Pay button\r\n4. Fill in alll other required fields on Payment page and click Submit Payment button\r\n5. Fill in alll other required fields on Payment page and click Submit Payment button\r\n6. Select the Authentication result as 'Authentication Successful' \nand click Submit button\r\n7. Capture PayRenewal call to PV\n              \n                 \n                 \n                 \n                 \n                 \n                 \n              \r\n8. Capture PayRenewal call to PV\n              \n                 \n                 \n                 \n                 \n                 \n                 \n              \r\n9. Capture PV logs of TNSPay interaction\r\n10. Click Renew/Pay button",
        "expected": "1. The patron should land on Pending Renewals tab\r\n2. Renewal order and Pay In Full Payment plan should be selected\r\n3. The card should be selected and CVC should be entered\r\n4. A modal should be displayed for 3D secure authentication(ACS Emulator)\r\n5. Card should be validated successfully, system should complete the transaction and should display the confirmation page\r\n6. The logs should be captured\r\n7. The following should be passed to PV \n              \n                 \n                 \n                 \n                 \n                 \n                 \n              \r\n8. The logs should be captured\r\n9. THREE_D_SECURE_ID field should be updated correctly\r\n10. Renewal Payment page should be displayed"
      }
    ],
    "custom_jiras": "61"
  },
  {
    "id": 30716906,
    "title": "Verify user is land back to renewal payment page with appropriate error if card is not validated successfully if single payment is selected",
    "section_id": 1686243,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14048, PVO-17567",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 12,
    "custom_is_automated": false,
    "custom_refs": "C152415",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.TNSPay configuration should be in place\r\n2.Set SEC3DE as true at Mytixx supplier level\r\n3.Set MPMKEY with appropriate value at Mytixx \r\nsupplier level\r\n4.'Credit card Processed by BOTS' should be ON \r\nfor Mytixx supplier\r\n5.Mytickets patron should be available with \r\nPending Renewal item",
    "custom_test_purpose": null,
    "custom_steps": "1. Log in to Mytickets account of the patron \nmentioned in prerequisite\r\nExpected Result:\r\nThe patron should land on Pending Renewals tab\r\n2. Select any renewal order and Manual Payment plan such that Due now is not zero\r\nExpected Result:\r\nRenewal order and Manual Payment plan should be selected such that Due now is not zero\r\n3. Click Renew/Pay button\r\nExpected Result:\r\nRenewal Payment page should be displayed\r\n4. Capture PayRenewal call to PV               \n                 \n                 \n                 \n                 \n                 \n                 \n              \r\nExpected Result:\r\nPayRenewal call to PV should be verified\r\n5. Run this query in PV DB and confirm that THREE_D_SECURE_ID field is updated correctly\nselect * from card_response where transaction_id=\r\nExpected Result:\r\nTHREE_D_SECURE_ID field should be updated correctly\r\n6. Assign only one card to the Due Now amount and enter CVC\r\nExpected Result:\r\nThe card should be selected and CVC should be entered\r\n7. Fill in alll other required fields on Payment page and click Validate button\r\nExpected Result:\r\nA modal should be displayed for 3D secure authentication\r\n8. Enter invalid PIN number and validate the card\r\nExpected Result:\r\nThe modal should be closed and payment page should be displayed\nAn appropriate error message should be displayed on Payment page\r\n9. Click on Validate button on the Payment page\r\nExpected Result:\r\n3Dsecure authentication modal should be displayed\r\n10. Enter valid PIN number and click Validate button\r\nExpected Result:\r\nCard should be validated successfully, system should complete the transaction and should display the confirmation page\r\n11. Capture the log of 3Dsecure passing a unique Authentication code \nto PVO\r\nExpected Result:\r\nThe logs should be captured",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Log in to Mytickets account of the patron \nmentioned in prerequisite\r\n2. Select any renewal order and Manual Payment plan such that Due now is not zero\r\n3. Click Renew/Pay button\r\n4. Capture PayRenewal call to PV               \n                 \n                 \n                 \n                 \n                 \n                 \n              \r\n5. Run this query in PV DB and confirm that THREE_D_SECURE_ID field is updated correctly\nselect * from card_response where transaction_id=\r\n6. Assign only one card to the Due Now amount and enter CVC\r\n7. Fill in alll other required fields on Payment page and click Validate button\r\n8. Enter invalid PIN number and validate the card\r\n9. Click on Validate button on the Payment page\r\n10. Enter valid PIN number and click Validate button\r\n11. Capture the log of 3Dsecure passing a unique Authentication code \nto PVO",
        "expected": "1. The patron should land on Pending Renewals tab\r\n2. Renewal order and Manual Payment plan should be selected such that Due now is not zero\r\n3. Renewal Payment page should be displayed\r\n4. PayRenewal call to PV should be verified\r\n5. THREE_D_SECURE_ID field should be updated correctly\r\n6. The card should be selected and CVC should be entered\r\n7. A modal should be displayed for 3D secure authentication\r\n8. The modal should be closed and payment page should be displayed\nAn appropriate error message should be displayed on Payment page\r\n9. 3Dsecure authentication modal should be displayed\r\n10. Card should be validated successfully, system should complete the transaction and should display the confirmation page\r\n11. The logs should be captured"
      }
    ],
    "custom_jiras": "61"
  },
  {
    "id": 30716907,
    "title": "Verify that the reservations of the comp tickets are also sent to PVO",
    "section_id": 1686244,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C152393",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1. Create New Patron in PV BOTS(or use an existing patron)\r\n2. Create New event and perf accept it, associate a payment plan\r\n3. BROWPEN is set to true",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to PV application\nComplete a Reservation transaction for the above said event\r\nExpected Result:\r\nUser should able to complete the transactions successfully\r\n2. launch My tickets and Login with valid credentials - The patron involved in Prerequisite(step 1)\r\nExpected Result:\r\nUser should able to login to MYTIXX\r\n3. Navigate to To Do list -> Reservations section\r\nExpected Result:\r\nUser should be navigated to Reservations section\r\n4. Verify that the reservations of the comp tickets are also sent to PVO\r\nExpected Result:\r\nThese reservations contain all $0.00 value tickets and no fees such that the reservation balance is $0.00.  For these reservations, the order total shall be $0.00 and there will be no need to display any payment plan details.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to PV application\nComplete a Reservation transaction for the above said event\r\n2. launch My tickets and Login with valid credentials - The patron involved in Prerequisite(step 1)\r\n3. Navigate to To Do list -> Reservations section\r\n4. Verify that the reservations of the comp tickets are also sent to PVO",
        "expected": "1. User should able to complete the transactions successfully\r\n2. User should able to login to MYTIXX\r\n3. User should be navigated to Reservations section\r\n4. These reservations contain all $0.00 value tickets and no fees such that the reservation balance is $0.00.  For these reservations, the order total shall be $0.00 and there will be no need to display any payment plan details."
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716908,
    "title": "Verify that the user is not asked to select the payment plan when claiming a zero order reservation",
    "section_id": 1686244,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C152394",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create New event and perf accept it, associate a payment plan\r\n3. BROWPEN is set to true\r\n4. Complete a Reservation transaction for comp buyers",
    "custom_test_purpose": null,
    "custom_steps": "1. 1. Login to PV application\n2. Complete a Reservation transaction for the above said event\r\nExpected Result:\r\nUser should able to complete the transactions successfully\r\n2. launch My tickets and Login with valid credentials - The patron involved in pre-requisite- step 1\r\nExpected Result:\r\nUser should able to login to MYTIXX\r\n3. Navigate to To Do list -> Reservations section\r\nExpected Result:\r\nUser should be navigated to Reservations section\r\n4. Verify that the user is not asked to select the payment plan when claiming a zero order reservation\r\nExpected Result:\r\nThe user should not asked to select the payment plan when claiming a zero order reservation",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Login to PV application\n2. Complete a Reservation transaction for the above said event\r\n2. launch My tickets and Login with valid credentials - The patron involved in pre-requisite- step 1\r\n3. Navigate to To Do list -> Reservations section\r\n4. Verify that the user is not asked to select the payment plan when claiming a zero order reservation",
        "expected": "1. User should able to complete the transactions successfully\r\n2. User should able to login to MYTIXX\r\n3. User should be navigated to Reservations section\r\n4. The user should not asked to select the payment plan when claiming a zero order reservation"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716909,
    "title": "Verify claiming the order with comp tickets and service charges (non zero order)",
    "section_id": 1686244,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C152395",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Create New Patron in PV BOTS(or use an existing patron)\r\n2.Create New event and perf accept it, associate a payment plan\r\n3. Associate claims service charge for the above event\r\n4. Complete a Reservation transaction for comp buyers",
    "custom_test_purpose": null,
    "custom_steps": "1. launch Mytickets URL and Login with valid credentials - The patron involved in Pre-requisite step 1\r\nExpected Result:\r\nUser should able to login to MYTIXX\r\n2. Navigate to To Do list -> Reservations section\r\nExpected Result:\r\nUser should be navigated to Reservations section\r\n3. Verify claiming the order with comp tickets and service charges (non zero order)\r\nExpected Result:\r\nThe user should asked to select the payment plan when claiming a non zero order reservation",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. launch Mytickets URL and Login with valid credentials - The patron involved in Pre-requisite step 1\r\n2. Navigate to To Do list -> Reservations section\r\n3. Verify claiming the order with comp tickets and service charges (non zero order)",
        "expected": "1. User should able to login to MYTIXX\r\n2. User should be navigated to Reservations section\r\n3. The user should asked to select the payment plan when claiming a non zero order reservation"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716910,
    "title": "Verify the display of installment block for the complimentary tickets.",
    "section_id": 1686244,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12913",
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C152396",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre-requisite:-\r\n1. A perfomance is availble for the renewals supplier\r\n2. Create a payment plan for the above said patron in PV bots\r\n\r\n1. Login to PV application\r\n2. Complete a Reservation transaction for the above said event without any service charge",
    "custom_test_purpose": null,
    "custom_steps": "1. Login with valid credentials - The patron involved in step 2\r\nExpected Result:\r\nUser should able to login to MYTIXX\r\n2. Navigate to To Do list -> Reservations section\r\nExpected Result:\r\nUser should be navigated to Reservations section\r\n3. Verify the UI of the Renewal_Reservation/recievable panel\n\t\n\n\r\nExpected Result:\r\nIt should contain:\n\n1.Checkbox for making select all items/individual offer\nOrder ID from ProVenue\n2. Package Eventlist name (Event name if you created offer with Event) under Pending items header\n3.Section Row and Seats (If multiple seats are there it is sepearted with /)\n4.Payment options drop downs with associated Payment plans (Default Payment plan drop down before selection as \" Select Payment Plan\")\n5.Under Financial header Order Total (Ticket price+Service charges) will be displayed with Currency symbol ($ 0 for dollar)",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login with valid credentials - The patron involved in step 2\r\n2. Navigate to To Do list -> Reservations section\r\n3. Verify the UI of the Renewal_Reservation/recievable panel",
        "expected": "1. User should able to login to MYTIXX\r\n2. User should be navigated to Reservations section\r\n3. It should contain:\n\n1.Checkbox for making select all items/individual offer\nOrder ID from ProVenue\n2. Package Eventlist name (Event name if you created offer with Event) under Pending items header\n3.Section Row and Seats (If multiple seats are there it is sepearted with /)\n4.Payment options drop downs with associated Payment plans (Default Payment plan drop down before selection as \" Select Payment Plan\")\n5.Under Financial header Order Total (Ticket price+Service charges) will be displayed with Currency symbol ($ 0 for dollar)"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716911,
    "title": "Verify completing Renewals transaction with Personal Checking Bank account",
    "section_id": 1686245,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C907520",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre-requisite\r\n1.Application property  to enable EFT features (eft.feature.enabled ) should be set to true in PV\r\n2.A payment method 'US Bank Account' for US_BANK_EFT (USEF) payment type should be available, set with Debit EFT card merchant type\r\n3.Have a  patron available in PV with Renewable offers available\r\n4.Set  BROWPEN textcode  as true",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Mytickets, Login and reach to Payment Info Page \r\nExpected Result:\r\nPayment Info page should be enhanced to the feature with Add bank account\r\n2. Verify the FindPatron API and Make sure PV returned all the details regrading bank accounts if exists along with EFT Permissions\r\nExpected Result:\r\nPV Should return the EFT related permissions and Paymnet type in Find Patron response.\r\n3. Click on Add Bank account\r\nExpected Result:\r\nThe \"Add Bank account\" form should be displayed\r\n4. Verify the fields in ACH Bank account page contain the Billing address fields\r\nExpected Result:\r\nBank account forum contains the Billing address fields \r\n5. Go to To Do List\r\nExpected Result:\r\nThe user should be navigated to To Do list\r\n6. Take the offer for the renewal transaction along with Payment plan and navigate to the Renewal Payment page\r\nExpected Result:\r\nThe user should be navigated to the Renewal Payment Page\r\n7. Select \"Add Bank account\" from the Payment method drop down\r\nExpected Result:\r\nThe \"Add Bank account\" form should be displayed\r\n8. Verify the fields in ACH Bank account page contain the Billing address fields\r\nExpected Result:\r\nBank account forum contains the Billing address fields & is auto populated with Patron details\r\n9. Select the Ownership type- Personal and Deposit type - checking in the \"Add account\"  modal and provide the Routing number of the selected state and verified account number\r\nExpected Result:\r\nAll the details should be provided.\r\n10. Select Mandate text and click on submit/create button\r\nExpected Result:\r\nAccount should be created as expected\r\n11. Select the account and see the \"Split payment\" option is no there\r\nExpected Result:\r\nSplit Payment option should not be there for Bank accounts\r\n12.  Verify the Maintain Patron API (Insertaccount) - there in request we sends Braintree payment nonce along with mndate text,address details of the patron in the bank account form to PV for the verification.\r\nExpected Result:\r\nAddress details and Mandate text should be sent to the PV\r\n13. SELECT * FROM pvo.patron_card_info where patron_id= xxxxx (Here we must make sure the Billing address fields should be persist as such)\r\nExpected Result:\r\nSuccesfully Verified account should be persisted in Patron logout/login since Persist_wallet_optout flag in card_info table is 0.\r\n14. Complete the transaction with Bank accounts\r\nExpected Result:\r\nTransaction should be completed as expected and in Pay renewal request the Payment mapped ID should be ;passed \r\n15. 4. After each transaction Verify the below DB and PVO Order Text:\n5.patron_card_info.payment_code -EFTB\n\nPVO DB tables: \n\nSELECT * FROM pvo.payment where order_id =xxxx\nSELECT * FROM pvo.patron_card_info where patron_id= xxxxx (Here we must make sure the Billing address fields should be persist as such)\nselect * from pvo.PATRON_ADDRESS where PATRON_ID= xxxx\nselect * from pvo.OFFER_SEAT where ORDER_ID=xxxx\nselect * from pvo.TDC_ORDER where Order_ID=xxxx\n\nOrder Table:\nOrder Text - \"SRBAPOAT\" - SEASON_RENEWAL_BANK_ACCOUNT_PROOF_OF_AUTHORIZATION_TEXT\nAfter Renewal transaction with US EFT, the below records should be verified in Order_text table.\n\nâ€¢ Order amount\nâ€¢ Order date/time\nâ€¢ ProVenueOnline Patron ID (which points to a PV Patron account)\nâ€¢ IP address \nâ€¢ Link to the payment card_card table (to get card/account used for the sale)\nâ€¢ New field to add for the mandate text\n\n\r\nExpected Result:\r\nDB and PVO order text should be verified\r\n16. Verify the Confirmation email after completing the renewals\r\nExpected Result:\r\nConfirmation email should have the Payment method- EFTB",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Mytickets, Login and reach to Payment Info Page \r\n2. Verify the FindPatron API and Make sure PV returned all the details regrading bank accounts if exists along with EFT Permissions\r\n3. Click on Add Bank account\r\n4. Verify the fields in ACH Bank account page contain the Billing address fields\r\n5. Go to To Do List\r\n6. Take the offer for the renewal transaction along with Payment plan and navigate to the Renewal Payment page\r\n7. Select \"Add Bank account\" from the Payment method drop down\r\n8. Verify the fields in ACH Bank account page contain the Billing address fields\r\n9. Select the Ownership type- Personal and Deposit type - checking in the \"Add account\"  modal and provide the Routing number of the selected state and verified account number\r\n10. Select Mandate text and click on submit/create button\r\n11. Select the account and see the \"Split payment\" option is no there\r\n12.  Verify the Maintain Patron API (Insertaccount) - there in request we sends Braintree payment nonce along with mndate text,address details of the patron in the bank account form to PV for the verification.\r\n13. SELECT * FROM pvo.patron_card_info where patron_id= xxxxx (Here we must make sure the Billing address fields should be persist as such)\r\n14. Complete the transaction with Bank accounts\r\n15. 4. After each transaction Verify the below DB and PVO Order Text:\n5.patron_card_info.payment_code -EFTB\n\nPVO DB tables: \n\nSELECT * FROM pvo.payment where order_id =xxxx\nSELECT * FROM pvo.patron_card_info where patron_id= xxxxx (Here we must make sure the Billing address fields should be persist as such)\nselect * from pvo.PATRON_ADDRESS where PATRON_ID= xxxx\nselect * from pvo.OFFER_SEAT where ORDER_ID=xxxx\nselect * from pvo.TDC_ORDER where Order_ID=xxxx\n\nOrder Table:\nOrder Text - \"SRBAPOAT\" - SEASON_RENEWAL_BANK_ACCOUNT_PROOF_OF_AUTHORIZATION_TEXT\nAfter Renewal transaction with US EFT, the below records should be verified in Order_text table.\n\nâ€¢ Order amount\nâ€¢ Order date/time\nâ€¢ ProVenueOnline Patron ID (which points to a PV Patron account)\nâ€¢ IP address \nâ€¢ Link to the payment card_card table (to get card/account used for the sale)\nâ€¢ New field to add for the mandate text\n\n\r\n16. Verify the Confirmation email after completing the renewals",
        "expected": "1. Payment Info page should be enhanced to the feature with Add bank account\r\n2. PV Should return the EFT related permissions and Paymnet type in Find Patron response.\r\n3. The \"Add Bank account\" form should be displayed\r\n4. Bank account forum contains the Billing address fields \r\n5. The user should be navigated to To Do list\r\n6. The user should be navigated to the Renewal Payment Page\r\n7. The \"Add Bank account\" form should be displayed\r\n8. Bank account forum contains the Billing address fields & is auto populated with Patron details\r\n9. All the details should be provided.\r\n10. Account should be created as expected\r\n11. Split Payment option should not be there for Bank accounts\r\n12. Address details and Mandate text should be sent to the PV\r\n13. Succesfully Verified account should be persisted in Patron logout/login since Persist_wallet_optout flag in card_info table is 0.\r\n14. Transaction should be completed as expected and in Pay renewal request the Payment mapped ID should be ;passed \r\n15. DB and PVO order text should be verified\r\n16. Confirmation email should have the Payment method- EFTB"
      }
    ],
    "custom_jiras": null
  },
  {
    "id": 30716912,
    "title": "Verify completing Renewals transaction with Business Checking Bank account",
    "section_id": 1686245,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C907521",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre-requisite\r\n1.Application property  to enable EFT features (eft.feature.enabled ) should be set to true in PV\r\n2.A payment method 'US Bank Account' for US_BANK_EFT (USEF) payment type should be available, set with Debit EFT card merchant type\r\n3.Have a  patron available in PV with Renewable offers available\r\n4.Set  BROWPEN textcode  as true",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Mytickets, Login and reach to Payment Info Page \r\nExpected Result:\r\nPayment Info page should be enhanced to the feature with Add bank account\r\n2. Verify the FindPatron API and Make sure PV returned all the details regrading bank accounts if exists along with EFT Permissions\r\nExpected Result:\r\nPV Should return the EFT related permissions and Paymnet type in Find Patron response.\r\n3. Click on Add Bank account\r\nExpected Result:\r\nThe \"Add Bank account\" form should be displayed\r\n4. Verify the fields in ACH Bank account page contain the Billing address fields\r\nExpected Result:\r\nBank account forum contains the Billing address fields \r\n5. Go to To Do List\r\nExpected Result:\r\nThe user should be navigated to To Do list\r\n6. Take the offer for the renewal transaction along with Payment plan and navigate to the Renewal Payment page\r\nExpected Result:\r\nThe user should be navigated to the Renewal Payment Page\r\n7. Select \"Add Bank account\" from the Payment method drop down\r\nExpected Result:\r\nThe \"Add Bank account\" form should be displayed\r\n8. Verify the fields in ACH Bank account page contain the Billing address fields\r\nExpected Result:\r\nBank account forum contains the Billing address fields & is auto populated with Patron details\r\n9. Select the Ownership type- Business and Deposit type - checking in the \"Add account\"  modal and provide the Routing number of the selected state and verified account number\r\nExpected Result:\r\nAll the details should be provided.\r\n10. Select Mandate text and click on submit/create button\r\nExpected Result:\r\nAccount should be created as expected\r\n11. Select the account and see the \"Split payment\" option is no there\r\nExpected Result:\r\nSplit Payment option should not be there for Bank accounts\r\n12.  Verify the Maintain Patron API (Insertaccount) - there in request we sends Braintree payment nonce along with mndate text,address details of the patron in the bank account form to PV for the verification.\r\nExpected Result:\r\nAddress details and Mandate text should be sent to the PV\r\n13. SELECT * FROM pvo.patron_card_info where patron_id= xxxxx (Here we must make sure the Billing address fields should be persist as such)\r\nExpected Result:\r\nSuccesfully Verified account should be persisted in Patron logout/login since Persist_wallet_optout flag in card_info table is 0.\r\n14. Complete the transaction with Bank accounts\r\nExpected Result:\r\nTransaction should be completed as expected and in Pay renewal request the Payment mapped ID should be ;passed \r\n15. 4. After each transaction Verify the below DB and PVO Order Text:\n5.patron_card_info.payment_code -EFTB\n\nPVO DB tables: \n\nSELECT * FROM pvo.payment where order_id =xxxx\nSELECT * FROM pvo.patron_card_info where patron_id= xxxxx (Here we must make sure the Billing address fields should be persist as such)\nselect * from pvo.PATRON_ADDRESS where PATRON_ID= xxxx\nselect * from pvo.OFFER_SEAT where ORDER_ID=xxxx\nselect * from pvo.TDC_ORDER where Order_ID=xxxx\n\nOrder Table:\nOrder Text - \"SRBAPOAT\" - SEASON_RENEWAL_BANK_ACCOUNT_PROOF_OF_AUTHORIZATION_TEXT\nAfter Renewal transaction with US EFT, the below records should be verified in Order_text table.\n\nâ€¢ Order amount\nâ€¢ Order date/time\nâ€¢ ProVenueOnline Patron ID (which points to a PV Patron account)\nâ€¢ IP address \nâ€¢ Link to the payment card_card table (to get card/account used for the sale)\nâ€¢ New field to add for the mandate text\n\n\r\nExpected Result:\r\nDB and PVO order text should be verified\r\n16. Verify the Confirmation email for the EFTB Payment method\r\nExpected Result:\r\nEFTB Payment method should be there displayed in Confirmation email",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Mytickets, Login and reach to Payment Info Page \r\n2. Verify the FindPatron API and Make sure PV returned all the details regrading bank accounts if exists along with EFT Permissions\r\n3. Click on Add Bank account\r\n4. Verify the fields in ACH Bank account page contain the Billing address fields\r\n5. Go to To Do List\r\n6. Take the offer for the renewal transaction along with Payment plan and navigate to the Renewal Payment page\r\n7. Select \"Add Bank account\" from the Payment method drop down\r\n8. Verify the fields in ACH Bank account page contain the Billing address fields\r\n9. Select the Ownership type- Business and Deposit type - checking in the \"Add account\"  modal and provide the Routing number of the selected state and verified account number\r\n10. Select Mandate text and click on submit/create button\r\n11. Select the account and see the \"Split payment\" option is no there\r\n12.  Verify the Maintain Patron API (Insertaccount) - there in request we sends Braintree payment nonce along with mndate text,address details of the patron in the bank account form to PV for the verification.\r\n13. SELECT * FROM pvo.patron_card_info where patron_id= xxxxx (Here we must make sure the Billing address fields should be persist as such)\r\n14. Complete the transaction with Bank accounts\r\n15. 4. After each transaction Verify the below DB and PVO Order Text:\n5.patron_card_info.payment_code -EFTB\n\nPVO DB tables: \n\nSELECT * FROM pvo.payment where order_id =xxxx\nSELECT * FROM pvo.patron_card_info where patron_id= xxxxx (Here we must make sure the Billing address fields should be persist as such)\nselect * from pvo.PATRON_ADDRESS where PATRON_ID= xxxx\nselect * from pvo.OFFER_SEAT where ORDER_ID=xxxx\nselect * from pvo.TDC_ORDER where Order_ID=xxxx\n\nOrder Table:\nOrder Text - \"SRBAPOAT\" - SEASON_RENEWAL_BANK_ACCOUNT_PROOF_OF_AUTHORIZATION_TEXT\nAfter Renewal transaction with US EFT, the below records should be verified in Order_text table.\n\nâ€¢ Order amount\nâ€¢ Order date/time\nâ€¢ ProVenueOnline Patron ID (which points to a PV Patron account)\nâ€¢ IP address \nâ€¢ Link to the payment card_card table (to get card/account used for the sale)\nâ€¢ New field to add for the mandate text\n\n\r\n16. Verify the Confirmation email for the EFTB Payment method",
        "expected": "1. Payment Info page should be enhanced to the feature with Add bank account\r\n2. PV Should return the EFT related permissions and Paymnet type in Find Patron response.\r\n3. The \"Add Bank account\" form should be displayed\r\n4. Bank account forum contains the Billing address fields \r\n5. The user should be navigated to To Do list\r\n6. The user should be navigated to the Renewal Payment Page\r\n7. The \"Add Bank account\" form should be displayed\r\n8. Bank account forum contains the Billing address fields & is auto populated with Patron details\r\n9. All the details should be provided.\r\n10. Account should be created as expected\r\n11. Split Payment option should not be there for Bank accounts\r\n12. Address details and Mandate text should be sent to the PV\r\n13. Succesfully Verified account should be persisted in Patron logout/login since Persist_wallet_optout flag in card_info table is 0.\r\n14. Transaction should be completed as expected and in Pay renewal request the Payment mapped ID should be ;passed \r\n15. DB and PVO order text should be verified\r\n16. EFTB Payment method should be there displayed in Confirmation email"
      }
    ],
    "custom_jiras": null
  },
  {
    "id": 30716913,
    "title": "Verify completing Renewals transaction with Business Saving Bank account",
    "section_id": 1686245,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C907522",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre-requisite\r\n1.Application property  to enable EFT features (eft.feature.enabled ) should be set to true in PV\r\n2.A payment method 'US Bank Account' for US_BANK_EFT (USEF) payment type should be available, set with Debit EFT card merchant type\r\n3.Have a  patron available in PV with Renewable offers available\r\n4.Set  BROWPEN textcode  as true",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Mytickets, Login and reach to Payment Info Page \r\nExpected Result:\r\nPayment Info page should be enhanced to the feature with Add bank account\r\n2. Verify the FindPatron API and Make sure PV returned all the details regrading bank accounts if exists along with EFT Permissions\r\nExpected Result:\r\nPV Should return the EFT related permissions and Paymnet type in Find Patron response.\r\n3. Click on Add Bank account\r\nExpected Result:\r\nThe \"Add Bank account\" form should be displayed\r\n4. Verify the fields in ACH Bank account page contain the Billing address fields\r\nExpected Result:\r\nBank account forum contains the Billing address fields & is auto populated with Patron details\r\n5. Select the Ownership type- Business  and Deposit type - Savings in the \"Add account\"  modal and provide the Routing number of the selected state and verified account number\r\nExpected Result:\r\nAll the details should be provided.\r\n6. Select Mandate text and click on submit/create button\r\nExpected Result:\r\nAccount should be created as expected\r\n7.  Verify the Maintain Patron API (Insertaccount) - there in request we sends Braintree payment nonce along with mndate text,address details of the patron in the bank account form to PV for the verification.\r\nExpected Result:\r\nAddress details and Mandate text should be sent to the PV\r\n8. Go to To Do List\r\nExpected Result:\r\nThe user should be navigated to To Do list\r\n9. Take the offer for the renewal transaction along with Payment plan and navigate to the Renewal Payment page\r\nExpected Result:\r\nThe user should be navigated to the Renewal Payment Page\r\n10. Select the above created account and see the \"Split payment\" option is no there\r\nExpected Result:\r\nSplit Payment option should not be there for Bank accounts\r\n11. SELECT * FROM pvo.patron_card_info where patron_id= xxxxx (Here we must make sure the Billing address fields should be persist as such)\r\nExpected Result:\r\nSuccesfully Verified account should be persisted in Patron logout/login since Persist_wallet_optout flag in card_info table is 0.\r\n12. Complete the transaction with Bank accounts\r\nExpected Result:\r\nTransaction should be completed as expected and in Pay renewal request the Payment mapped ID should be ;passed \r\n13. 4. After each transaction Verify the below DB and PVO Order Text:\n5.patron_card_info.payment_code -EFTB\n\nPVO DB tables: \n\nSELECT * FROM pvo.payment where order_id =xxxx\nSELECT * FROM pvo.patron_card_info where patron_id= xxxxx (Here we must make sure the Billing address fields should be persist as such)\nselect * from pvo.PATRON_ADDRESS where PATRON_ID= xxxx\nselect * from pvo.OFFER_SEAT where ORDER_ID=xxxx\nselect * from pvo.TDC_ORDER where Order_ID=xxxx\n\nOrder Table:\n\nAfter Renewal transaction with US EFT, the below records should be verified in Order_text table.\nOrder Text - \"SRBAPOAT\" - SEASON_RENEWAL_BANK_ACCOUNT_PROOF_OF_AUTHORIZATION_TEXT\nâ€¢ Order amount\nâ€¢ Order date/time\nâ€¢ ProVenueOnline Patron ID (which points to a PV Patron account)\nâ€¢ IP address \nâ€¢ Link to the payment card_card table (to get card/account used for the sale)\nâ€¢ New field to add for the mandate text\n\n\r\nExpected Result:\r\nDB and PVO order text should be verified\r\n14. Verify the Payment method in Confirmation email\r\nExpected Result:\r\nPayment method should be EFTB",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Mytickets, Login and reach to Payment Info Page \r\n2. Verify the FindPatron API and Make sure PV returned all the details regrading bank accounts if exists along with EFT Permissions\r\n3. Click on Add Bank account\r\n4. Verify the fields in ACH Bank account page contain the Billing address fields\r\n5. Select the Ownership type- Business  and Deposit type - Savings in the \"Add account\"  modal and provide the Routing number of the selected state and verified account number\r\n6. Select Mandate text and click on submit/create button\r\n7.  Verify the Maintain Patron API (Insertaccount) - there in request we sends Braintree payment nonce along with mndate text,address details of the patron in the bank account form to PV for the verification.\r\n8. Go to To Do List\r\n9. Take the offer for the renewal transaction along with Payment plan and navigate to the Renewal Payment page\r\n10. Select the above created account and see the \"Split payment\" option is no there\r\n11. SELECT * FROM pvo.patron_card_info where patron_id= xxxxx (Here we must make sure the Billing address fields should be persist as such)\r\n12. Complete the transaction with Bank accounts\r\n13. 4. After each transaction Verify the below DB and PVO Order Text:\n5.patron_card_info.payment_code -EFTB\n\nPVO DB tables: \n\nSELECT * FROM pvo.payment where order_id =xxxx\nSELECT * FROM pvo.patron_card_info where patron_id= xxxxx (Here we must make sure the Billing address fields should be persist as such)\nselect * from pvo.PATRON_ADDRESS where PATRON_ID= xxxx\nselect * from pvo.OFFER_SEAT where ORDER_ID=xxxx\nselect * from pvo.TDC_ORDER where Order_ID=xxxx\n\nOrder Table:\n\nAfter Renewal transaction with US EFT, the below records should be verified in Order_text table.\nOrder Text - \"SRBAPOAT\" - SEASON_RENEWAL_BANK_ACCOUNT_PROOF_OF_AUTHORIZATION_TEXT\nâ€¢ Order amount\nâ€¢ Order date/time\nâ€¢ ProVenueOnline Patron ID (which points to a PV Patron account)\nâ€¢ IP address \nâ€¢ Link to the payment card_card table (to get card/account used for the sale)\nâ€¢ New field to add for the mandate text\n\n\r\n14. Verify the Payment method in Confirmation email",
        "expected": "1. Payment Info page should be enhanced to the feature with Add bank account\r\n2. PV Should return the EFT related permissions and Paymnet type in Find Patron response.\r\n3. The \"Add Bank account\" form should be displayed\r\n4. Bank account forum contains the Billing address fields & is auto populated with Patron details\r\n5. All the details should be provided.\r\n6. Account should be created as expected\r\n7. Address details and Mandate text should be sent to the PV\r\n8. The user should be navigated to To Do list\r\n9. The user should be navigated to the Renewal Payment Page\r\n10. Split Payment option should not be there for Bank accounts\r\n11. Succesfully Verified account should be persisted in Patron logout/login since Persist_wallet_optout flag in card_info table is 0.\r\n12. Transaction should be completed as expected and in Pay renewal request the Payment mapped ID should be ;passed \r\n13. DB and PVO order text should be verified\r\n14. Payment method should be EFTB"
      }
    ],
    "custom_jiras": null
  },
  {
    "id": 30716914,
    "title": "Verify completing Renewals transaction with Personal Saving Bank account",
    "section_id": 1686245,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 333,
    "created_on": 1685028206,
    "updated_by": 333,
    "updated_on": 1685028206,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C907523",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre-requisite\r\n1.Application property  to enable EFT features (eft.feature.enabled ) should be set to true in PV\r\n2.A payment method 'US Bank Account' for US_BANK_EFT (USEF) payment type should be available, set with Debit EFT card merchant type\r\n3.Have a  patron available in PV with Renewable offers available\r\n4.Set  BROWPEN textcode  as true",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Mytickets, Login and reach to Payment Info Page \r\nExpected Result:\r\nPayment Info page should be enhanced to the feature with Add bank account\r\n2. Verify the FindPatron API and Make sure PV returned all the details regrading bank accounts if exists along with EFT Permissions\r\nExpected Result:\r\nPV Should return the EFT related permissions and Paymnet type in Find Patron response.\r\n3. Click on Add Bank account\r\nExpected Result:\r\nThe \"Add Bank account\" form should be displayed\r\n4. Verify the fields in ACH Bank account page contain the Billing address fields\r\nExpected Result:\r\nBank account forum contains the Billing address fields & is auto populated with Patron details\r\n5. Select the Ownership type- Personal  and Deposit type - Savings in the \"Add account\"  modal and provide the Routing number of the selected state and verified account number\r\nExpected Result:\r\nAll the details should be provided.\r\n6. Select Mandate text and click on submit/create button\r\nExpected Result:\r\nAccount should be created as expected\r\n7.  Verify the Maintain Patron API (Insertaccount) - there in request we sends Braintree payment nonce along with mndate text,address details of the patron in the bank account form to PV for the verification.\r\nExpected Result:\r\nAddress details and Mandate text should be sent to the PV\r\n8. Go to To Do List\r\nExpected Result:\r\nThe user should be navigated to To Do list\r\n9. Take the offer for the renewal transaction along with Payment plan and navigate to the Renewal Payment page\r\nExpected Result:\r\nThe user should be navigated to the Renewal Payment Page\r\n10. Select the above created account and see the \"Split payment\" option is no there\r\nExpected Result:\r\nSplit Payment option should not be there for Bank accounts\r\n11. SELECT * FROM pvo.patron_card_info where patron_id= xxxxx (Here we must make sure the Billing address fields should be persist as such)\r\nExpected Result:\r\nSuccesfully Verified account should be persisted in Patron logout/login since Persist_wallet_optout flag in card_info table is 0.\r\n12. Complete the transaction with Bank accounts\r\nExpected Result:\r\nTransaction should be completed as expected and in Pay renewal request the Payment mapped ID should be ;passed \r\n13. 4. After each transaction Verify the below DB and PVO Order Text:\n5.patron_card_info.payment_code -EFTB\n\nPVO DB tables: \n\nSELECT * FROM pvo.payment where order_id =xxxx\nSELECT * FROM pvo.patron_card_info where patron_id= xxxxx (Here we must make sure the Billing address fields should be persist as such)\nselect * from pvo.PATRON_ADDRESS where PATRON_ID= xxxx\nselect * from pvo.OFFER_SEAT where ORDER_ID=xxxx\nselect * from pvo.TDC_ORDER where Order_ID=xxxx\n\nOrder Table:\n\nAfter Renewal transaction with US EFT, the below records should be verified in Order_text table.\nOrder Text - \"SRBAPOAT\" - SEASON_RENEWAL_BANK_ACCOUNT_PROOF_OF_AUTHORIZATION_TEXT\nâ€¢ Order amount\nâ€¢ Order date/time\nâ€¢ ProVenueOnline Patron ID (which points to a PV Patron account)\nâ€¢ IP address \nâ€¢ Link to the payment card_card table (to get card/account used for the sale)\nâ€¢ New field to add for the mandate text\n\n\r\nExpected Result:\r\nDB and PVO order text should be verified\r\n14. Verify the Payment method in Confirmation email\r\nExpected Result:\r\nPayment method (EFTB) should be verified in Confirmation email",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Mytickets, Login and reach to Payment Info Page \r\n2. Verify the FindPatron API and Make sure PV returned all the details regrading bank accounts if exists along with EFT Permissions\r\n3. Click on Add Bank account\r\n4. Verify the fields in ACH Bank account page contain the Billing address fields\r\n5. Select the Ownership type- Personal  and Deposit type - Savings in the \"Add account\"  modal and provide the Routing number of the selected state and verified account number\r\n6. Select Mandate text and click on submit/create button\r\n7.  Verify the Maintain Patron API (Insertaccount) - there in request we sends Braintree payment nonce along with mndate text,address details of the patron in the bank account form to PV for the verification.\r\n8. Go to To Do List\r\n9. Take the offer for the renewal transaction along with Payment plan and navigate to the Renewal Payment page\r\n10. Select the above created account and see the \"Split payment\" option is no there\r\n11. SELECT * FROM pvo.patron_card_info where patron_id= xxxxx (Here we must make sure the Billing address fields should be persist as such)\r\n12. Complete the transaction with Bank accounts\r\n13. 4. After each transaction Verify the below DB and PVO Order Text:\n5.patron_card_info.payment_code -EFTB\n\nPVO DB tables: \n\nSELECT * FROM pvo.payment where order_id =xxxx\nSELECT * FROM pvo.patron_card_info where patron_id= xxxxx (Here we must make sure the Billing address fields should be persist as such)\nselect * from pvo.PATRON_ADDRESS where PATRON_ID= xxxx\nselect * from pvo.OFFER_SEAT where ORDER_ID=xxxx\nselect * from pvo.TDC_ORDER where Order_ID=xxxx\n\nOrder Table:\n\nAfter Renewal transaction with US EFT, the below records should be verified in Order_text table.\nOrder Text - \"SRBAPOAT\" - SEASON_RENEWAL_BANK_ACCOUNT_PROOF_OF_AUTHORIZATION_TEXT\nâ€¢ Order amount\nâ€¢ Order date/time\nâ€¢ ProVenueOnline Patron ID (which points to a PV Patron account)\nâ€¢ IP address \nâ€¢ Link to the payment card_card table (to get card/account used for the sale)\nâ€¢ New field to add for the mandate text\n\n\r\n14. Verify the Payment method in Confirmation email",
        "expected": "1. Payment Info page should be enhanced to the feature with Add bank account\r\n2. PV Should return the EFT related permissions and Paymnet type in Find Patron response.\r\n3. The \"Add Bank account\" form should be displayed\r\n4. Bank account forum contains the Billing address fields & is auto populated with Patron details\r\n5. All the details should be provided.\r\n6. Account should be created as expected\r\n7. Address details and Mandate text should be sent to the PV\r\n8. The user should be navigated to To Do list\r\n9. The user should be navigated to the Renewal Payment Page\r\n10. Split Payment option should not be there for Bank accounts\r\n11. Succesfully Verified account should be persisted in Patron logout/login since Persist_wallet_optout flag in card_info table is 0.\r\n12. Transaction should be completed as expected and in Pay renewal request the Payment mapped ID should be ;passed \r\n13. DB and PVO order text should be verified\r\n14. Payment method (EFTB) should be verified in Confirmation email"
      }
    ],
    "custom_jiras": null
  },
  {
    "id": 30716915,
    "title": "Verify the error message on removing the Bank account from Payment Info which has pending items",
    "section_id": 1686245,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C907524",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Execute [C907439]",
    "custom_test_purpose": null,
    "custom_steps": "1. Go to Payment Info and try to remove the Bank account\r\nExpected Result:\r\nUser should be returned with an error: \nCARD_CANNOT_BE_DELETED_TEXT\nCCBDELT = This card/account cannot be deleted as it has a pending item on it.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Go to Payment Info and try to remove the Bank account",
        "expected": "1. User should be returned with an error: \nCARD_CANNOT_BE_DELETED_TEXT\nCCBDELT = This card/account cannot be deleted as it has a pending item on it."
      }
    ],
    "custom_jiras": null
  },
  {
    "id": 30716916,
    "title": "Verify user is able to delete bank account from payment info page which is added via renewal payment plan",
    "section_id": 1686245,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C907525",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Pre-requisite\r\n1.Application property to enable EFT features (eft.feature.enabled ) should be set to true in PV\r\n2.A payment method 'US Bank Account' for US_BANK_EFT (USEF) payment type should be available, set with Debit EFT card merchant type\r\n3.Have a patron available in PV with Renewable offers available\r\n4.Set BROWPEN textcode as true",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch PVO My tickets, Login and reach to to do list Page\r\nExpected Result:\r\nTo Do List page will be displayed\r\n2. Take the offer for the renewal transaction along with Payment plan and navigate to the Renewal Payment page\r\nExpected Result:\r\nThe user should be navigated to the Renewal Payment Page\r\n3. Verify the fields in ACH Bank account page contain the Billing address fields\r\nExpected Result:\r\nBank account forum contains the Billing address fields & is auto populated with Patron details\r\n4. Select the Ownership type- Personal and Deposit type - checking in the \"Add account\" modal and provide the Routing number of the selected state and verified account number\r\nExpected Result:\r\nAll the details should be provided.\r\n5. Select Mandate text and click on submit/create button\r\nExpected Result:\r\nAccount should be created as expected\r\n6. Select the account and see the \"Split payment\" option is no there\r\nExpected Result:\r\nSplit Payment option should not be there for Bank accounts\r\n7. Verify the Maintain Patron API (Insertaccount) - there in request we sends Braintree payment nonce along with mndate text,address details of the patron in the bank account form to PV for the verification.\r\nExpected Result:\r\nAddress details and Mandate text should be sent to the PV\r\n8. SELECT * FROM pvo.patron_card_info where patron_id= xxxxx (Here we must make sure the Billing address fields should be persist as such)\r\nExpected Result:\r\nSuccesfully Verified account should be persisted in Patron logout/login since Persist_wallet_optout flag in card_info table is 0.\r\n9. Go to Payment Info and try to remove the Bank account\r\nExpected Result:\r\nUser is able to delete bank account from payment info page which is added via renewal payment plan",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch PVO My tickets, Login and reach to to do list Page\r\n2. Take the offer for the renewal transaction along with Payment plan and navigate to the Renewal Payment page\r\n3. Verify the fields in ACH Bank account page contain the Billing address fields\r\n4. Select the Ownership type- Personal and Deposit type - checking in the \"Add account\" modal and provide the Routing number of the selected state and verified account number\r\n5. Select Mandate text and click on submit/create button\r\n6. Select the account and see the \"Split payment\" option is no there\r\n7. Verify the Maintain Patron API (Insertaccount) - there in request we sends Braintree payment nonce along with mndate text,address details of the patron in the bank account form to PV for the verification.\r\n8. SELECT * FROM pvo.patron_card_info where patron_id= xxxxx (Here we must make sure the Billing address fields should be persist as such)\r\n9. Go to Payment Info and try to remove the Bank account",
        "expected": "1. To Do List page will be displayed\r\n2. The user should be navigated to the Renewal Payment Page\r\n3. Bank account forum contains the Billing address fields & is auto populated with Patron details\r\n4. All the details should be provided.\r\n5. Account should be created as expected\r\n6. Split Payment option should not be there for Bank accounts\r\n7. Address details and Mandate text should be sent to the PV\r\n8. Succesfully Verified account should be persisted in Patron logout/login since Persist_wallet_optout flag in card_info table is 0.\r\n9. User is able to delete bank account from payment info page which is added via renewal payment plan"
      }
    ],
    "custom_jiras": null
  },
  {
    "id": 30716917,
    "title": "Verify the existing bank accounts are not displayed in MyTickets Payment Info and Renewal Payment page under specific conditions",
    "section_id": 1686245,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": null,
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_refs": "C907526",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Condition 1: eft.features.enabled Property set to False in PV\r\nHave an Account with Existing Bank acounts",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MTD URL and login with the above set up\r\nExpected Result:\r\nThe Patron Should be logged in\r\n2. Verify in Find Patron response, PV is not sending any bank accounts\r\n3. Go to the Payment Info page and \"My Bank account\" session in the Payment info page is not displayed\r\nExpected Result:\r\n\"My Bank account\" session in the Payment info page is not displayed\r\n4. Now eft.features.enabled Property set to true in PV\r\nExpected Result:\r\neft.features.enabled Property should be  set to true in PV\r\n5. Disable some of the PV accounts\r\nExpected Result:\r\nStatuses of the accounts in Patron should be changed to \"Disabled\" status\r\n6. Launch the MTD URL and login with the above set up\r\nExpected Result:\r\nThe Patron Should be logged in\r\n7. Verify in Find Patron response, PV is not sending disabled bank accounts. Enabled account should be there\r\nExpected Result:\r\nDisabled bank account should not be displayed in UI of Payment info Page\r\n8. Verify in Renewal payment method drop down\r\nExpected Result:\r\nDisabled bank account should not be displayed in UI of PRenewal Payment page\r\n9. Verify the Patron.card_info doesnt have the account information\r\nExpected Result:\r\nThe disabled account should not be displayed in Patron card info",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MTD URL and login with the above set up\r\n2. Verify in Find Patron response, PV is not sending any bank accounts\r\n3. Go to the Payment Info page and \"My Bank account\" session in the Payment info page is not displayed\r\n4. Now eft.features.enabled Property set to true in PV\r\n5. Disable some of the PV accounts\r\n6. Launch the MTD URL and login with the above set up\r\n7. Verify in Find Patron response, PV is not sending disabled bank accounts. Enabled account should be there\r\n8. Verify in Renewal payment method drop down\r\n9. Verify the Patron.card_info doesnt have the account information",
        "expected": "1. The Patron Should be logged in\r\n2. \r\n3. \"My Bank account\" session in the Payment info page is not displayed\r\n4. eft.features.enabled Property should be  set to true in PV\r\n5. Statuses of the accounts in Patron should be changed to \"Disabled\" status\r\n6. The Patron Should be logged in\r\n7. Disabled bank account should not be displayed in UI of Payment info Page\r\n8. Disabled bank account should not be displayed in UI of PRenewal Payment page\r\n9. The disabled account should not be displayed in Patron card info"
      }
    ],
    "custom_jiras": null
  },
  {
    "id": 30716918,
    "title": "VErify GA and SRO seats details are displayed consistently in different pages when the user set the values for MTGASAT & MTSRSAT",
    "section_id": 1686246,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15374",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C152482",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Make sire that the below test codes are not set in any levels (Can be verified using PID Checker)\r\n\r\nâ€œMTGASATâ€� - MYTICKETS_GENERAL_ADMIN_SEAT_ATTRIBUTE_TEXT - Custom text to replace seat and row values from PV if PV sends back a seat_area_type value of GENERAL_ADMISSION. Default value is â€œ---â€œ.\r\n\r\nâ€œMTSRSATâ€� - MYTICKETS_STANDING_ROOM_SEAT_ATTRIBUTE_TEXT - Custom text to replace seat and row values from PV if PV sends back a seat_area_type value of STANDING_ROOM_ONLY. Default value is â€œ---â€œ\r\n\r\n\r\nPID Checker :\r\n1.Login to PVO Maintenance site\r\n2.Select Utility Functions\r\n3.Select PID Checker\r\n4.Enter MyTickets PID under the textfields 'PID'\r\n5.Enter corresponding Agency under the textfield 'Agency'\r\n6.Click on Go button \r\n7.User will get the complete details for the textcode that matche the PID and agency combination\r\n8.CNTRL+ find the GA/SRO matches and make sure that there is no matches available\r\n\r\n\r\nUser should have a valid patron with active inventory having both GA and SRO seats in it",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch My Tickets link\r\nExpected Result:\r\nLink should be launched successfully\r\n2. Login using valid credentials (as the patron with \nGA seats).\r\nExpected Result:\r\nUser should be able to login successfully\r\n3. Go to My Ticket Inventory.\r\nExpected Result:\r\nUser should be navigated to ticket inventory page\r\n4. Select Ticket Action 'Forward Ticket'\r\n5. Select the events with GA seats.\r\nExpected Result:\r\nUser should be able to select the tickets\r\n6. Select a ticket and forward it to another patron.\r\nExpected Result:\r\nUser should be able to forward the ticket \nsuccessfully.\r\n7. Go to My History Tab\r\n8. 1. Check the current transaction under \n'Forwarded Tickets' section.\n2. Click open the transaction details\n3. Verify the seat details\r\nExpected Result:\r\n'Section/Row/Seat column' of GA and SRO \nseats should be displayed as - \nGA -- / \nSRO -- / \n \n \nRow and Seat columns should not be \ndisplayed.\n \nReserved Seats details should be displayed \nas before\r\n9. Log out and login as the Recepient Patron\r\nExpected Result:\r\nUser should be able to login successfully\r\n10. Go to My History page\r\nExpected Result:\r\nUser should be navigated to History\r\n11. 1. Check the current transaction under 'Received \nTickets' section.\n2. Verify the seat details\r\nExpected Result:\r\n'Section/Row/Seat column' of GA and SRO \nseats should be displayed as - \nGA -- / \nSRO -- / \n \n \nRow and Seat columns should not be \ndisplayed.\n \nReserved Seats details should be displayed \nas before",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch My Tickets link\r\n2. Login using valid credentials (as the patron with \nGA seats).\r\n3. Go to My Ticket Inventory.\r\n4. Select Ticket Action 'Forward Ticket'\r\n5. Select the events with GA seats.\r\n6. Select a ticket and forward it to another patron.\r\n7. Go to My History Tab\r\n8. 1. Check the current transaction under \n'Forwarded Tickets' section.\n2. Click open the transaction details\n3. Verify the seat details\r\n9. Log out and login as the Recepient Patron\r\n10. Go to My History page\r\n11. 1. Check the current transaction under 'Received \nTickets' section.\n2. Verify the seat details",
        "expected": "1. Link should be launched successfully\r\n2. User should be able to login successfully\r\n3. User should be navigated to ticket inventory page\r\n4. \r\n5. User should be able to select the tickets\r\n6. User should be able to forward the ticket \nsuccessfully.\r\n7. \r\n8. 'Section/Row/Seat column' of GA and SRO \nseats should be displayed as - \nGA -- / \nSRO -- / \n \n \nRow and Seat columns should not be \ndisplayed.\n \nReserved Seats details should be displayed \nas before\r\n9. User should be able to login successfully\r\n10. User should be navigated to History\r\n11. 'Section/Row/Seat column' of GA and SRO \nseats should be displayed as - \nGA -- / \nSRO -- / \n \n \nRow and Seat columns should not be \ndisplayed.\n \nReserved Seats details should be displayed \nas before"
      }
    ],
    "custom_jiras": "62"
  },
  {
    "id": 30716919,
    "title": "Verify GA and SRO seat details are suppressed in all Confirmation emails.",
    "section_id": 1686246,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15320",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C152483",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Make sire that the below test codes are not set in any levels (Can be verified using PID Checker)\r\n\r\nâ€œMTGASATâ€� - MYTICKETS_GENERAL_ADMIN_SEAT_ATTRIBUTE_TEXT - Custom text to replace seat and row values from PV if PV sends back a seat_area_type value of GENERAL_ADMISSION. Default value is â€œ---â€œ.\r\n\r\nâ€œMTSRSATâ€� - MYTICKETS_STANDING_ROOM_SEAT_ATTRIBUTE_TEXT - Custom text to replace seat and row values from PV if PV sends back a seat_area_type value of STANDING_ROOM_ONLY. Default value is â€œ---â€œ\r\n\r\nPID Checker :\r\n1.Login to PVO Maintenance site\r\n2.Select Utility Functions\r\n3.Select PID Checker\r\n4.Enter MyTickets PID under the textfields 'PID'\r\n5.Enter corresponding Agency under the textfield 'Agency'\r\n6.Click on Go button \r\n7.User will get the complete details for the textcode that matche the PID and agency combination\r\n8.CNTRL+ find the GA/SRO matches and make sure that there is no matches available\r\n\r\n\r\nUser should have a valid patron with active inventory having both GA and SRO seats in it",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch My Tickets link\r\nExpected Result:\r\nLink should be launch successfully\r\n2. Login using valid credentials \r\nExpected Result:\r\nUser should be able to login successfully\r\n3. Go to MyTickets inventory\r\nExpected Result:\r\nUser should be navigated to MyTickets inventory\r\n4. Select ticket action as Forward\r\nExpected Result:\r\nUser should be able to select the ticket action as Forward and inventory should be refreshed based on the ticket action selection\r\n5. select GA/SRO seats \n\n\r\nExpected Result:\r\nUser should be able to select the seats and friends list should be listed in right side(Inventory Mini cart area)\r\n6. Select friend and continue to forward review modal\r\nExpected Result:\r\nUser should be able to continue the process\nUser should get the review modal with seat details\r\n7. Complete the forward action\r\nExpected Result:\r\nUser should be able to complete the forward action\r\n8. Verify GA and SRO seat details are suppressed in Confirmation emails.\n\nWe can verify emails via PVO Maintenance by following below steps :\n\n1 . Login to PVO maintenance site\n2 .  Go to Patrons & Orders\n3 .  Go to  Resend Confirmation Email\n4 . Enter email id / Order od / Patron id (Any of the required field) and click on search button corresponds to the field\n5 . user will get the search results with Main ID\n6 . Note: Latest Mail ID will always points to the last email sent to the search criteria\n7 . user can Verify the email with the values returned under the box \" Message\" \n\n8 . If needed , it can be viewed as an email by saving it with a notepad application with html extension .\n\r\nExpected Result:\r\nGA and SRO seat details should be suppressed in  Confirmation \nemails.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch My Tickets link\r\n2. Login using valid credentials \r\n3. Go to MyTickets inventory\r\n4. Select ticket action as Forward\r\n5. select GA/SRO seats \n\n\r\n6. Select friend and continue to forward review modal\r\n7. Complete the forward action\r\n8. Verify GA and SRO seat details are suppressed in Confirmation emails.\n\nWe can verify emails via PVO Maintenance by following below steps :\n\n1 . Login to PVO maintenance site\n2 .  Go to Patrons & Orders\n3 .  Go to  Resend Confirmation Email\n4 . Enter email id / Order od / Patron id (Any of the required field) and click on search button corresponds to the field\n5 . user will get the search results with Main ID\n6 . Note: Latest Mail ID will always points to the last email sent to the search criteria\n7 . user can Verify the email with the values returned under the box \" Message\" \n\n8 . If needed , it can be viewed as an email by saving it with a notepad application with html extension .",
        "expected": "1. Link should be launch successfully\r\n2. User should be able to login successfully\r\n3. User should be navigated to MyTickets inventory\r\n4. User should be able to select the ticket action as Forward and inventory should be refreshed based on the ticket action selection\r\n5. User should be able to select the seats and friends list should be listed in right side(Inventory Mini cart area)\r\n6. User should be able to continue the process\nUser should get the review modal with seat details\r\n7. User should be able to complete the forward action\r\n8. GA and SRO seat details should be suppressed in  Confirmation \nemails."
      }
    ],
    "custom_jiras": "62"
  },
  {
    "id": 30716920,
    "title": "Verify that Inventory List is not duplicated, if a new patron purchased some GA or SRO seats in their MyTickets account when the GA SRO replacement feature was enabled, and then you disabled the feature.",
    "section_id": 1686246,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15339",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C152484",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "PV Side :\r\n1.Select a section in a venue  with GA Seats and select another section with SRO Seats and select another section with reserved seats in it\r\n2.Create an event with above venue\r\n3. Complete a single sale transaction for some tickets from above GA , SRO  and RESERVED sections with a valid patron .\r\n\r\nPVO :\r\nSet text value for bot GA and SRO seat details in corresponding textcodes listed below\r\n\r\nâ€œMTGASATâ€� - MYTICKETS_GENERAL_ADMIN_SEAT_ATTRIBUTE_TEXT - Custom text to replace seat and row values from PV if PV sends back a seat_area_type value of GENERAL_ADMISSION. Default value is â€œ---â€œ.\r\n\r\nâ€œMTSRSATâ€� - MYTICKETS_STANDING_ROOM_SEAT_ATTRIBUTE_TEXT - Custom text to replace seat and row values from PV if PV sends back a seat_area_type value of STANDING_ROOM_ONLY. Default value is â€œ---â€œ\r\n\r\n4.Make sure that the below textcode has been set to true (to enable the feature)\r\n\r\nâ€œUAVFGSSâ€� - USE_ALTERNATE_VALUES_FOR_GA_SRO_SEATS - A flag to indicate if to use alternate values for GA and SRO seats. Default value is â€œfalseâ€� (disabled).  Should only be set to â€œtrueâ€� for the MyTickets supplier (not for single sales suppliers).",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to PVO MyTickets with above patron (patron mentioned in the pre requisite\r\nExpected Result:\r\nUser should be able to login to the account\r\n2. Navigate to MyTickets inventory and make sure that the GA and SRO seats are displayed with alternate values set in pre requisite\r\nExpected Result:\r\nGa and SRO seat details should not be suppressed and textcode values should be returned in the application\r\n3. Verify the seat_area_type  passed from PV to PVO under  GetPatronInventory API call\r\nExpected Result:\r\nseat_area_type should be passed in GetPatronInventory API call which can be RESERVED, GENERAL_ADMISSION, or STANDING_ROOM_ONLY\r\n4. Make GA SRO replacement feature as false\n\nSet below textcode as false / use default value\nâ€œUAVFGSSâ€� - USE_ALTERNATE_VALUES_FOR_GA_SRO_SEATS - A flag to indicate if to use alternate values for GA and SRO seats. Default value is â€œfalseâ€� (disabled).  Should only be set to â€œtrueâ€� for the MyTickets supplier (not for single sales suppliers).  \n\r\nExpected Result:\r\nUser should be able to set the textcode\r\n5. Login to PVO MyTickets with above patron (patron mentioned in the pre requisite\r\nExpected Result:\r\nUser should be able to login to the account\r\n6. Navigate to MyTickets inventory and make sure that the Inventory List is not duplicated\r\nExpected Result:\r\nInventory should not be duplicated in MyTickets inventory after disabling the feature",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to PVO MyTickets with above patron (patron mentioned in the pre requisite\r\n2. Navigate to MyTickets inventory and make sure that the GA and SRO seats are displayed with alternate values set in pre requisite\r\n3. Verify the seat_area_type  passed from PV to PVO under  GetPatronInventory API call\r\n4. Make GA SRO replacement feature as false\n\nSet below textcode as false / use default value\nâ€œUAVFGSSâ€� - USE_ALTERNATE_VALUES_FOR_GA_SRO_SEATS - A flag to indicate if to use alternate values for GA and SRO seats. Default value is â€œfalseâ€� (disabled).  Should only be set to â€œtrueâ€� for the MyTickets supplier (not for single sales suppliers).  \n\r\n5. Login to PVO MyTickets with above patron (patron mentioned in the pre requisite\r\n6. Navigate to MyTickets inventory and make sure that the Inventory List is not duplicated",
        "expected": "1. User should be able to login to the account\r\n2. Ga and SRO seat details should not be suppressed and textcode values should be returned in the application\r\n3. seat_area_type should be passed in GetPatronInventory API call which can be RESERVED, GENERAL_ADMISSION, or STANDING_ROOM_ONLY\r\n4. User should be able to set the textcode\r\n5. User should be able to login to the account\r\n6. Inventory should not be duplicated in MyTickets inventory after disabling the feature"
      }
    ],
    "custom_jiras": "63"
  },
  {
    "id": 30716921,
    "title": "Verify that Inventory List is not duplicated, if a patron already has some GA or SRO seats in their MyTickets account when the GA SRO replacement feature was DISABLED, and then you enable the feature.",
    "section_id": 1686246,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15339",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C152485",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "PV Side :\r\n1.Select a section in a venue with GA Seats and select another section with SRO Seats and select another section with reserved seats in it\r\n2.Create an event with above venue\r\n3. Complete a single sale transaction for some tickets from above GA , SRO and RESERVED sections with a valid patron .\r\n\r\nPVO :\r\nSet text value for bot GA and SRO seat details in corresponding textcodes listed below\r\n\r\nâ€œMTGASATâ€� - MYTICKETS_GENERAL_ADMIN_SEAT_ATTRIBUTE_TEXT - Custom text to replace seat and row values from PV if PV sends back a seat_area_type value of GENERAL_ADMISSION. Default value is â€œ---â€œ.\r\n\r\nâ€œMTSRSATâ€� - MYTICKETS_STANDING_ROOM_SEAT_ATTRIBUTE_TEXT - Custom text to replace seat and row values from PV if PV sends back a seat_area_type value of STANDING_ROOM_ONLY. Default value is â€œ---â€œ\r\n\r\n4.Make sure that the below textcode has been set to false (to disable the feature)\r\n\r\nâ€œUAVFGSSâ€� - USE_ALTERNATE_VALUES_FOR_GA_SRO_SEATS - A flag to indicate if to use alternate values for GA and SRO seats. Default value is â€œfalseâ€� (disabled). Should only be set to â€œtrueâ€� for the MyTickets supplier (not for single sales suppliers).",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to PVO MyTickets with above patron (patron mentioned in the pre requisite\r\nExpected Result:\r\nUser should be able to login to the account\r\n2. Navigate to MyTickets inventory and make sure that the GA and SRO seats are not replaced with GA/SRO textcode values\r\nExpected Result:\r\nGA/SRO seats must be suppressed in inventory\r\n3. Make GA SRO replacement feature as true\n\nSet below textcode as true\nâ€œUAVFGSSâ€� - USE_ALTERNATE_VALUES_FOR_GA_SRO_SEATS - A flag to indicate if to use alternate values for GA and SRO seats. Default value is â€œfalseâ€� (disabled). Should only be set to â€œtrueâ€� for the MyTickets supplier (not for single sales suppliers).\r\nExpected Result:\r\nUser should be able to set the textcode\r\n4. Login to PVO MyTickets with above patron (patron mentioned in the pre requisite\r\nExpected Result:\r\nUser should be able to login to the account\r\n5. Navigate to MyTickets inventory and make sure that the GA and SRO seats are displayed with alternate values set in pre requisite\r\nExpected Result:\r\nGA and SRO seat details should not be suppressed and textcode values should be returned in the application\r\n6. Verify the seat_area_type passed from PV to PVO under GetPatronInventory API call\r\nExpected Result:\r\nseat_area_type should be passed in GetPatronInventory API call which can be RESERVED, GENERAL_ADMISSION, or STANDING_ROOM_ONLY\r\n7. Make sure that the Inventory List is not duplicated\r\nExpected Result:\r\nInventory should not be duplicated in MyTickets inventory after enabling the feature",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to PVO MyTickets with above patron (patron mentioned in the pre requisite\r\n2. Navigate to MyTickets inventory and make sure that the GA and SRO seats are not replaced with GA/SRO textcode values\r\n3. Make GA SRO replacement feature as true\n\nSet below textcode as true\nâ€œUAVFGSSâ€� - USE_ALTERNATE_VALUES_FOR_GA_SRO_SEATS - A flag to indicate if to use alternate values for GA and SRO seats. Default value is â€œfalseâ€� (disabled). Should only be set to â€œtrueâ€� for the MyTickets supplier (not for single sales suppliers).\r\n4. Login to PVO MyTickets with above patron (patron mentioned in the pre requisite\r\n5. Navigate to MyTickets inventory and make sure that the GA and SRO seats are displayed with alternate values set in pre requisite\r\n6. Verify the seat_area_type passed from PV to PVO under GetPatronInventory API call\r\n7. Make sure that the Inventory List is not duplicated",
        "expected": "1. User should be able to login to the account\r\n2. GA/SRO seats must be suppressed in inventory\r\n3. User should be able to set the textcode\r\n4. User should be able to login to the account\r\n5. GA and SRO seat details should not be suppressed and textcode values should be returned in the application\r\n6. seat_area_type should be passed in GetPatronInventory API call which can be RESERVED, GENERAL_ADMISSION, or STANDING_ROOM_ONLY\r\n7. Inventory should not be duplicated in MyTickets inventory after enabling the feature"
      }
    ],
    "custom_jiras": "63"
  },
  {
    "id": 30716922,
    "title": "Verify that GA and SRO seat details are not suppressed on the Inventory page if the text code UAVFGSS set to true",
    "section_id": 1686246,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15300",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C152486",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1. Select a section in a venue with GA Seats and select another section with SRO Seats\r\n2. Create an event with above venue\r\n3. Purchase some tickets from above GA and SRO sections for a particular patron\r\n4. Set text code UAVFGSS as true\r\n\r\nâ€œUAVFGSSâ€� - USE_ALTERNATE_VALUES_FOR_GA_SRO_SEATS - A flag to indicate if to use alternate values for GA and SRO seats. Default value is â€œfalseâ€� (disabled). Should only be set to â€œtrueâ€� for the MyTickets supplier (not for single sales suppliers).\r\n\r\nIf needed , GA/SRO seat values can be set using below text codes ,\r\n\r\nâ€œMTGASATâ€� - MYTICKETS_GENERAL_ADMIN_SEAT_ATTRIBUTE_TEXT - Custom text to replace seat and row values from PV if PV sends back a seat_area_type value of GENERAL_ADMISSION. Default value is â€œ---â€œ.\r\n\r\nâ€œMTSRSATâ€� - MYTICKETS_STANDING_ROOM_SEAT_ATTRIBUTE_TEXT - Custom text to replace seat and row values from PV if PV sends back a seat_area_type value of STANDING_ROOM_ONLY. Default value is â€œ---â€œ",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to PVO MyTickets with above patron\r\nExpected Result:\r\nPatron logged into Mytixx successfully\r\n2. Navigate to Mytickets inventory page.\r\nExpected Result:\r\nMytickets inventory page should get displaed.\r\n3. API Call need to be checked here: GetPatronInventory (logging in to MyTickets - all inventory owned by the account).  \nVerify values in Patron_Inventory_seat.\r\nExpected Result:\r\nGetPatronInventory (logging in to MyTickets - all inventory owned by the account) Patron_Inventory_seat.\n\nseat_area_type should be passed in GetPatronInventory API call which can be RESERVED, GENERAL_ADMISSION, or STANDING_ROOM_ONLY\r\n4. Verify that GA and SRO seat details are not suppressed on the Inventory page if the text code set to true\r\nExpected Result:\r\nGA and SRO will be displayed on the Inventory page instead of row number and seat number.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to PVO MyTickets with above patron\r\n2. Navigate to Mytickets inventory page.\r\n3. API Call need to be checked here: GetPatronInventory (logging in to MyTickets - all inventory owned by the account).  \nVerify values in Patron_Inventory_seat.\r\n4. Verify that GA and SRO seat details are not suppressed on the Inventory page if the text code set to true",
        "expected": "1. Patron logged into Mytixx successfully\r\n2. Mytickets inventory page should get displaed.\r\n3. GetPatronInventory (logging in to MyTickets - all inventory owned by the account) Patron_Inventory_seat.\n\nseat_area_type should be passed in GetPatronInventory API call which can be RESERVED, GENERAL_ADMISSION, or STANDING_ROOM_ONLY\r\n4. GA and SRO will be displayed on the Inventory page instead of row number and seat number."
      }
    ],
    "custom_jiras": "63"
  },
  {
    "id": 30716923,
    "title": "Verify that GA and SRO seat details are displayed on the Inventory page if the text code UAVFGSS set to false",
    "section_id": 1686246,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15300",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C152487",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1. Select a section in a venue with GA Seats and select another section with SRO Seats\r\n2. Create an event with above venue\r\n3. Purchase some tickets from above GA and SRO sections for a particular patron\r\n4. Set text code UAVFGSS as false\r\n\r\nâ€œUAVFGSSâ€� - USE_ALTERNATE_VALUES_FOR_GA_SRO_SEATS - A flag to indicate if to use alternate values for GA and SRO seats. Default value is â€œfalseâ€� (disabled). Should only be set to â€œtrueâ€� for the MyTickets supplier (not for single sales suppliers).",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to PVO MyTickets with above patron\r\nExpected Result:\r\nPatron logged into Mytixx successfully\r\n2. Navigate to Mytickets inventory page.\r\nExpected Result:\r\nMytickets inventory page should get displayed\r\n3. API Call need to be checked here: GetPatronInventory (logging in to MyTickets - all inventory owned by the account).  \nVerify values in Patron_Inventory_seat.\r\nExpected Result:\r\nGetPatronInventory (logging in to MyTickets - all inventory owned by the account) Patron_Inventory_seat.\n\nseat_area_type should be passed in GetPatronInventory API call which can be RESERVED, GENERAL_ADMISSION, or STANDING_ROOM_ONLY\r\n4. Verify that GA and SRO seat details are displayed on the Inventory page if the text code set to false.\r\nExpected Result:\r\nRow and seat number will be displayed on the \nInventory page.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to PVO MyTickets with above patron\r\n2. Navigate to Mytickets inventory page.\r\n3. API Call need to be checked here: GetPatronInventory (logging in to MyTickets - all inventory owned by the account).  \nVerify values in Patron_Inventory_seat.\r\n4. Verify that GA and SRO seat details are displayed on the Inventory page if the text code set to false.",
        "expected": "1. Patron logged into Mytixx successfully\r\n2. Mytickets inventory page should get displayed\r\n3. GetPatronInventory (logging in to MyTickets - all inventory owned by the account) Patron_Inventory_seat.\n\nseat_area_type should be passed in GetPatronInventory API call which can be RESERVED, GENERAL_ADMISSION, or STANDING_ROOM_ONLY\r\n4. Row and seat number will be displayed on the \nInventory page."
      }
    ],
    "custom_jiras": "63"
  },
  {
    "id": 30716924,
    "title": "Verify the display of seats in Selected Tickets Mini cart if GA, SRO and Reserved seats are selected",
    "section_id": 1686246,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14080",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_refs": "C152488",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.The patron should have Reserved, GA and SRO seats of same event in inventory\r\n\r\n3. Set text code UAVFGSS as false\r\nâ€œUAVFGSSâ€� - USE_ALTERNATE_VALUES_FOR_GA_SRO_SEATS - A flag to indicate if to use alternate values for GA and SRO seats. Default value is â€œfalseâ€� (disabled). Should only be set to â€œtrueâ€� for the MyTickets supplier (not for single sales suppliers).",
    "custom_test_purpose": null,
    "custom_steps": "1. Log in to Mytickets with the patron mentioned in pre requisite\r\nExpected Result:\r\nuser should be able to login\r\n2. Go to Inventory page\r\nExpected Result:\r\nInventory page is displayed\r\n3. Select any Ticket action (Ex:Sell Tickets)\r\nExpected Result:\r\nUser should be able to select the ticket action and inventory should be updated based on the ticket action\r\n4. Select Reserved, GA and SRO seats from same event\r\nExpected Result:\r\nUser should be able to select the seats seats should be listed under inventory minicart\r\n5. Verify the display of seats in mini cart\r\nExpected Result:\r\n1. For general admission seats, the system displays the section public \ndescription  text in the section column that is passed from ProVenue\n\n \n2. For general admission seats, the system suppress the display of Row and Seat information\n \n3. Default GA text value = ?General Admission? is displayed next to Section \nvalue\n \n4. For SRO seats, the system displays the section public description  text in the \nsection column that is passed from ProVenue\n \n5. For SRO seats, the system suppress the display of Row and Seat \ninformation\n \n6.Default SRO text value = ?Standing Room Only? is displayed next to Section \nvalue\n \n7.For Reserved seats, the system displays Section,Row and Seat information\n \n7. The Reserved seats are displayed first, in sorted order (sort first by Section \nthen by row then by seat number) followed by GA seats(sorted by barcode) \nand then SRO seats(sorted by barcode)",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Log in to Mytickets with the patron mentioned in pre requisite\r\n2. Go to Inventory page\r\n3. Select any Ticket action (Ex:Sell Tickets)\r\n4. Select Reserved, GA and SRO seats from same event\r\n5. Verify the display of seats in mini cart",
        "expected": "1. user should be able to login\r\n2. Inventory page is displayed\r\n3. User should be able to select the ticket action and inventory should be updated based on the ticket action\r\n4. User should be able to select the seats seats should be listed under inventory minicart\r\n5. 1. For general admission seats, the system displays the section public \ndescription  text in the section column that is passed from ProVenue\n\n \n2. For general admission seats, the system suppress the display of Row and Seat information\n \n3. Default GA text value = ?General Admission? is displayed next to Section \nvalue\n \n4. For SRO seats, the system displays the section public description  text in the \nsection column that is passed from ProVenue\n \n5. For SRO seats, the system suppress the display of Row and Seat \ninformation\n \n6.Default SRO text value = ?Standing Room Only? is displayed next to Section \nvalue\n \n7.For Reserved seats, the system displays Section,Row and Seat information\n \n7. The Reserved seats are displayed first, in sorted order (sort first by Section \nthen by row then by seat number) followed by GA seats(sorted by barcode) \nand then SRO seats(sorted by barcode)"
      }
    ],
    "custom_jiras": "62"
  },
  {
    "id": 30716925,
    "title": "Verify list of events are sort by event date in Online Promotion Details page",
    "section_id": 1686247,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PVO-15836",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C152502",
    "custom_pvo_pvodc_category": 10,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Launch the OMP url\r\n2.Login as valid user\r\n3.Select the supplier.Click on Continue\r\n4.Click on New to create a new Promotion in Online Promotions tab\r\n5.Select Promotion Type as Public.\r\n6.Enter Valid Code ,Description ,Display panel and Display Order\r\n7.Select Promotion Details as Click Action since we have multiple Events Associated to a Promotion\r\n8.Enter Valid details for Public Title,Sub title and Description\r\n9.Enter Valid Onsale ,offsale,visible on date,Visible off dates\r\n10.Select Organisation and click on Show Events.\r\n11.Associate the Events to the Promotion and select sub agency\r\n12.Click on Save and Promotion has created successfully.",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch My Tickets and login. \r\nExpected Result:\r\nUser is successfully logged in to My Tickets\r\n2. Go to Special offers tab and verify that the promotion created in the prerequisite is appearing in the page with a 'Details' button under Action.\r\nExpected Result:\r\nThe promotion created is appearing as expected.\r\n3. Click on the Details button\r\nExpected Result:\r\nUser is navigated to Promotion Details page \r\n4. Verify the events appearing in the Promotion Details page are sorted in ascending order based on the event date\r\nExpected Result:\r\nEvents are sorted in ascending order based on the vent date as expected.\r\n5. Launch PV and go to TICKETING SETUP->EVENT ADMINISTRATION.\nSearch for any event associated.\r\nExpected Result:\r\nThe corresponding event is appearing in edit mode\r\n6. Change the Start Date/Time of the event from PV and perf accept the event in maintenance site.\r\nExpected Result:\r\nPatron should be able to change the date and perf accept should be successful.\r\n7. Repeat Steps 1->3\r\nExpected Result:\r\nUser is navigated to Promotion Details page \r\n8. Check the display order of the events in the promotion\r\nExpected Result:\r\nThe changed event should be moved with respect to the event date.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch My Tickets and login. \r\n2. Go to Special offers tab and verify that the promotion created in the prerequisite is appearing in the page with a 'Details' button under Action.\r\n3. Click on the Details button\r\n4. Verify the events appearing in the Promotion Details page are sorted in ascending order based on the event date\r\n5. Launch PV and go to TICKETING SETUP->EVENT ADMINISTRATION.\nSearch for any event associated.\r\n6. Change the Start Date/Time of the event from PV and perf accept the event in maintenance site.\r\n7. Repeat Steps 1->3\r\n8. Check the display order of the events in the promotion",
        "expected": "1. User is successfully logged in to My Tickets\r\n2. The promotion created is appearing as expected.\r\n3. User is navigated to Promotion Details page \r\n4. Events are sorted in ascending order based on the vent date as expected.\r\n5. The corresponding event is appearing in edit mode\r\n6. Patron should be able to change the date and perf accept should be successful.\r\n7. User is navigated to Promotion Details page \r\n8. The changed event should be moved with respect to the event date."
      }
    ],
    "custom_jiras": null
  },
  {
    "id": 30716926,
    "title": "Verify in Targeted Online Promotion flow if the target event is not onsale, it is selectable on the calendar page after navigating from one month to the next",
    "section_id": 1686247,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13524",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C152503",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Have an event with future Onsale date\r\nHave a patron with trait id\r\nSetup a Targeted online promotion in OMP following the steps from 1-15 in [C87581]",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the MYTIXX link\r\nExpected Result:\r\nUser should be launched the link successfully\r\n2. Log in to Mytixx account of patron who has trait associated with\r\nExpected Result:\r\nUser should logged into the application\r\n3. Go to Special Offers page\nSelect the target promotion to purchase\r\nExpected Result:\r\nUser is navigated to availability page\r\n4. Select the tickets from Availability page and navigate till shopping cart\r\nExpected Result:\r\nUser should be navigated till shopping cart page successfully\r\n5. Click on Schedule link\r\nExpected Result:\r\nSchedule page is launched with current month and the event is onsale and selectable\r\n6. Go to next month\r\nExpected Result:\r\nSchedule page is launched with next month and the event is onsale and selectable\r\n7. Go back to current month \r\nExpected Result:\r\nSchedule page is launched with current month and the event is onsale and selectable\r\n8. Continue from shopping cart and reach Delivery  page\r\nExpected Result:\r\nUser should navigated to delivery page successfully\r\n9. Repeat steps 5-7\r\nExpected Result:\r\nThe targeted event should be onsale and selectable\r\n10. Select the delivery method and navigate to payment page\n\r\nExpected Result:\r\nUser is navigated to Payment page\r\n11. Repeat steps 5-7\r\nExpected Result:\r\nThe targeted event should be onsale and selectable\r\n12. Complete the transaction\n\nVerify the transaction details are getting updated in the DB and LOG\r\nExpected Result:\r\nTransaction details should be updated in the DB and LOG",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the MYTIXX link\r\n2. Log in to Mytixx account of patron who has trait associated with\r\n3. Go to Special Offers page\nSelect the target promotion to purchase\r\n4. Select the tickets from Availability page and navigate till shopping cart\r\n5. Click on Schedule link\r\n6. Go to next month\r\n7. Go back to current month \r\n8. Continue from shopping cart and reach Delivery  page\r\n9. Repeat steps 5-7\r\n10. Select the delivery method and navigate to payment page\n\r\n11. Repeat steps 5-7\r\n12. Complete the transaction\n\nVerify the transaction details are getting updated in the DB and LOG",
        "expected": "1. User should be launched the link successfully\r\n2. User should logged into the application\r\n3. User is navigated to availability page\r\n4. User should be navigated till shopping cart page successfully\r\n5. Schedule page is launched with current month and the event is onsale and selectable\r\n6. Schedule page is launched with next month and the event is onsale and selectable\r\n7. Schedule page is launched with current month and the event is onsale and selectable\r\n8. User should navigated to delivery page successfully\r\n9. The targeted event should be onsale and selectable\r\n10. User is navigated to Payment page\r\n11. The targeted event should be onsale and selectable\r\n12. Transaction details should be updated in the DB and LOG"
      }
    ],
    "custom_jiras": "56.1"
  },
  {
    "id": 30716927,
    "title": "Verify the buyer display in ISM  when DNETCE is set as true  and USE_EXCLUSIVE_TRAITS_IN_ISM  flashvar is  set as false in ISMFACFRC",
    "section_id": 1686247,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12283",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C152504",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Setup a Targeted online promotion in OMP following the steps from 1-15 in [C87581]\r\nSet DNETCE as true in suppiler level.\r\nSet USE_EXCLUSIVE_TRAITS_IN_ISM  flashvar in ISMFACFRC as false",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Mytickets URL and login using valid credentials\r\nExpected Result:\r\nMytickets URL should be launched sucessfully and user should be able to login\r\n2. Go to Special Offers tab.\r\nExpected Result:\r\nAll special offers should be listed as expected\r\n3. Click on BuyTickets button on Targeted promotion setup for this patron\r\nExpected Result:\r\nUser should be navigated to Single sales availability\r\n4. In availability verify that both trait protected and normal buyer types are displayed since DNETCE is set as true.\r\nExpected Result:\r\nBoth trait protected and normal buyer types should be displayed as expected.\r\n5. Click on View Seat Map\r\nExpected Result:\r\nUser should be navigated to ISM\r\n6. Verify that both trait protected and normal buyer types are displayed in ISM map since USE_EXCLUSIVE_TRAITS_IN_ISM is set as false\r\nExpected Result:\r\nIn ISM both trait protected buyer types  and normal buyers are displayed in Nav map,seat Map and in OSS cart.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Mytickets URL and login using valid credentials\r\n2. Go to Special Offers tab.\r\n3. Click on BuyTickets button on Targeted promotion setup for this patron\r\n4. In availability verify that both trait protected and normal buyer types are displayed since DNETCE is set as true.\r\n5. Click on View Seat Map\r\n6. Verify that both trait protected and normal buyer types are displayed in ISM map since USE_EXCLUSIVE_TRAITS_IN_ISM is set as false",
        "expected": "1. Mytickets URL should be launched sucessfully and user should be able to login\r\n2. All special offers should be listed as expected\r\n3. User should be navigated to Single sales availability\r\n4. Both trait protected and normal buyer types should be displayed as expected.\r\n5. User should be navigated to ISM\r\n6. In ISM both trait protected buyer types  and normal buyers are displayed in Nav map,seat Map and in OSS cart."
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716928,
    "title": "Verify the buyer display in ISM  when DNETCE is set as false and USE_EXCLUSIVE_TRAITS_IN_ISM  flashvar is not set in ISMFACFRC",
    "section_id": 1686247,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12283",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C152505",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Setup a Targeted online promotion in OMP following the steps from 1-15 in [C87581]\r\nSet DNETCE as falsein suppiler level.\r\nDo not set USE_EXCLUSIVE_TRAITS_IN_ISM  flashvar in ISMFACFRC",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Mytickets URL and login using valid credentials\r\nExpected Result:\r\nMytickets URL should be launched sucessfully and user should be able to login\r\n2. Go to Special Offers tab.\r\nExpected Result:\r\nAll special offers should be listed as expected\r\n3. Click on BuyTickets button on Targeted promotion setup for this patron\r\nExpected Result:\r\nUser should be naviagted to Single sales availabilty\r\n4. In availability verify that  only trait protected buyer types are displayed since DNETCE is set as false.\r\nExpected Result:\r\nOnly trait protected buyer types should be displayed since DNETCE is set as false.\r\n5. Click on View Seat Map\r\nExpected Result:\r\nUser should be navigated to ISM\r\n6. Verify that only trait protected buyer types are displayed in ISM map.\r\nExpected Result:\r\nIn ISM only trait protected buyer types are displayed in Nav map,seat Map and in OSS cart.\r\n7. In View source also make sure that PVO is passing myFlashVars.USE_EXCLUSIVE_TRAITS_IN_ISM as 'true'\r\nExpected Result:\r\nIn View source- PVO should pass myFlashVars.USE_EXCLUSIVE_TRAITS_IN_ISM as 'true'",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Mytickets URL and login using valid credentials\r\n2. Go to Special Offers tab.\r\n3. Click on BuyTickets button on Targeted promotion setup for this patron\r\n4. In availability verify that  only trait protected buyer types are displayed since DNETCE is set as false.\r\n5. Click on View Seat Map\r\n6. Verify that only trait protected buyer types are displayed in ISM map.\r\n7. In View source also make sure that PVO is passing myFlashVars.USE_EXCLUSIVE_TRAITS_IN_ISM as 'true'",
        "expected": "1. Mytickets URL should be launched sucessfully and user should be able to login\r\n2. All special offers should be listed as expected\r\n3. User should be naviagted to Single sales availabilty\r\n4. Only trait protected buyer types should be displayed since DNETCE is set as false.\r\n5. User should be navigated to ISM\r\n6. In ISM only trait protected buyer types are displayed in Nav map,seat Map and in OSS cart.\r\n7. In View source- PVO should pass myFlashVars.USE_EXCLUSIVE_TRAITS_IN_ISM as 'true'"
      }
    ],
    "custom_jiras": "59"
  },
  {
    "id": 30716929,
    "title": "Verify that MyTickets redirects to fixed package URL set from OMP when public promo is selected.",
    "section_id": 1686247,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12460",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C152506",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "a.Have a fixed package and perf accept via Maintenance.\r\nb.Have a valid patron in PV\r\nc.Create an online promotion using the following steps:\r\n   1.Launch the OMP url\r\n   2.Login as valid user\r\n   3.Select the supplier.Click on Continue\r\n   4.Click on New to create a new Promotion in Online Promotions tab\r\n   5.Select Promotion Type as Public.\r\n   6.Enter Valid Code ,Description ,Display panel and Display Order\r\n   7.Select URL as Click Action and enter  the url of the package created in PV\r\n   8.Enter Valid details for Public Title,Sub title and Description\r\n   9.Enter Valid Onsale ,offsale,visible on date,Visible off dates\r\n   10.Select Organisation and click on Show Events.\r\n   11.Associate the Events to the Promotion and select sub agency\r\n   12.Click on Save and Promotion has created successfully.",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch My Tickets and login.\n\n\r\nExpected Result:\r\nUser is successfully logged in to My Tickets\r\n2. Navigate to Special Offers tab and select the public promotion created in OMP from the list\r\nExpected Result:\r\nUser should be able to select the public promtion created  in OMP\r\n3. Verify that user is redirected to fixed package URL set from OMP on clicking Buy Tickets button\r\nExpected Result:\r\nUser should be redirected to Availability page of fixed package url set in OMP",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch My Tickets and login.\n\n\r\n2. Navigate to Special Offers tab and select the public promotion created in OMP from the list\r\n3. Verify that user is redirected to fixed package URL set from OMP on clicking Buy Tickets button",
        "expected": "1. User is successfully logged in to My Tickets\r\n2. User should be able to select the public promtion created  in OMP\r\n3. User should be redirected to Availability page of fixed package url set in OMP"
      }
    ],
    "custom_jiras": "58"
  },
  {
    "id": 30716930,
    "title": "Verify set value of BTOPPOSM  message is shown for a Targeted promotion  when onsale and offsale date is in past but promotion is visible",
    "section_id": 1686247,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12066",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C152507",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Setup a Targeted online promotion in OMP following the steps from 1-15 in [C87581]\r\n2.Select the same Targeted promotion in OMP created above and set the onsale and offsale date as past\r\n3.Set BTOPNOSM",
    "custom_test_purpose": null,
    "custom_steps": "1. 1. Login to Mytickets account of the patron\n2. Navigate to Special Offers page\r\nExpected Result:\r\nSpecial Offers page is displayed\r\n2. Verify BTOPPOSM message is shown for the expired promotion created in precondition\r\nExpected Result:\r\nBTOPPOSM message is shown for the promotion created",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Login to Mytickets account of the patron\n2. Navigate to Special Offers page\r\n2. Verify BTOPPOSM message is shown for the expired promotion created in precondition",
        "expected": "1. Special Offers page is displayed\r\n2. BTOPPOSM message is shown for the promotion created"
      }
    ],
    "custom_jiras": "57"
  },
  {
    "id": 30716931,
    "title": "Verify that PVO is displaying only trait resticted  Buyer type associated to an event when the patron has matching trait protected buyer type for an event when DNETCE is false",
    "section_id": 1686247,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12206",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_refs": "C152508",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Launch PV\r\n2.Create new price structure under TICKETING SETUP->SUPPLIER ADMINISTRATION->Price Structure associating 3 buyer types.\r\n3.Create a new event associating this price structure\r\n4.Setup a Targeted online promotion in OMP following the steps from 1-15 in [C87581] using the above event\r\n5.Set DNETCE as true in suppiler level.",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Mytickets application and login into mytickets\r\nExpected Result:\r\nUser should be able to login mytickets application \r\n2. Go to Special Offers tab\r\nExpected Result:\r\nUser is able to view targeted Promotion in Special Offers page\r\n3. Click on the promotion event \r\nExpected Result:\r\nUser is navigated to availability page\r\n4. verify whether only trait protected buyer type is getting displayed\r\nExpected Result:\r\nPVO should display only trait protected buyer type",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Mytickets application and login into mytickets\r\n2. Go to Special Offers tab\r\n3. Click on the promotion event \r\n4. verify whether only trait protected buyer type is getting displayed",
        "expected": "1. User should be able to login mytickets application \r\n2. User is able to view targeted Promotion in Special Offers page\r\n3. User is navigated to availability page\r\n4. PVO should display only trait protected buyer type"
      }
    ],
    "custom_jiras": "56.1"
  },
  {
    "id": 30716932,
    "title": "Verify that patron is restricted any number of orders above the highest trait integer value associated with a promotion",
    "section_id": 1686247,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-11336",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_refs": "C152509",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Setup a Targeted online promotion in OMP following the steps from 1-15 in [C87581] \r\nIn PV, go to Patron Management->Patron->Trait and edit the 'No of permissible transaction' to 2.",
    "custom_test_purpose": null,
    "custom_steps": "1. 1.Login to pv application\n2.Select one patron\n3.Associate trait, set the highest integer number as 3.\n4.Assosiate one buyer type promotion in it.\r\nExpected Result:\r\npre requisite should be done\r\n2. Login to my tickets application ( Using the above patron)\r\nExpected Result:\r\nUser should be logged in to the application successfully\r\n3. Verify that information about Traits associated with the account in Buy tickets page\r\nExpected Result:\r\nTrait and patron information should be displayed in the buy tickets page(targeted promotion)\r\n4. Select the BuyTickets button against the targeted promotion created\r\nExpected Result:\r\nUser is navigated to availability page.\r\n5. Select some seats and navigate to payment page and complete the transaction\r\nExpected Result:\r\nUser is able to complete the transaction as expected\r\n6. Click on 'Back to Special Offers' button in  the confirmation page\r\nExpected Result:\r\nUser navigated back to Special Offers page\r\n7. Repeat Steps from 4-6\r\nExpected Result:\r\nUser navigated back to Special Offers page\r\n8. Again select the BuyTickets button against the targeted promotion created.\nVerify that user is getting error message and not able to purchase the tickets. \r\nExpected Result:\r\nThe patron should be restricted any number of orders above the highest trait integer value associated with a promotion with an error",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1.Login to pv application\n2.Select one patron\n3.Associate trait, set the highest integer number as 3.\n4.Assosiate one buyer type promotion in it.\r\n2. Login to my tickets application ( Using the above patron)\r\n3. Verify that information about Traits associated with the account in Buy tickets page\r\n4. Select the BuyTickets button against the targeted promotion created\r\n5. Select some seats and navigate to payment page and complete the transaction\r\n6. Click on 'Back to Special Offers' button in  the confirmation page\r\n7. Repeat Steps from 4-6\r\n8. Again select the BuyTickets button against the targeted promotion created.\nVerify that user is getting error message and not able to purchase the tickets.",
        "expected": "1. pre requisite should be done\r\n2. User should be logged in to the application successfully\r\n3. Trait and patron information should be displayed in the buy tickets page(targeted promotion)\r\n4. User is navigated to availability page.\r\n5. User is able to complete the transaction as expected\r\n6. User navigated back to Special Offers page\r\n7. User navigated back to Special Offers page\r\n8. The patron should be restricted any number of orders above the highest trait integer value associated with a promotion with an error"
      }
    ],
    "custom_jiras": "55.1"
  },
  {
    "id": 30716933,
    "title": "Verify the users can add clickable URL in the AD promotions",
    "section_id": 1686247,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-11336",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 9,
    "custom_is_automated": false,
    "custom_refs": "C152510",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Launch the OMP url\r\n2.Login as valid user\r\n3.Select the supplier.Click on Continue\r\n4.Click on New to create a new Promotion\r\n5.Select Promotion Type as AD.\r\n6.Enter Valid Code ,Description ,Display panel and Display Order\r\n9.Enter Valid details for Subagency,Public Title and Description\r\n10.Enter Valide Onsale ,offsale,visible on date,Visible off dates\r\n11.Select the radio button as URL, and enter the clickable URL.\r\n12.Click on Save changed and Promotion has created successfully.",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to my tickets application ( Using the above patron)\r\nExpected Result:\r\nUser should be logged in to the application successfully\r\n2. Click on buy tickets tab\r\nExpected Result:\r\nUser should be navigated to Buy tickets tab and all available  Promotions for the logged in Patron\r\n3. Verify whether the Public promotion created above, is displayed in the buy tickets page and the AD promotion associated to the targeted promotion is displayed to the user in the right pane.\r\nExpected Result:\r\nThe AD promotion created should displayed to the user.\r\n4. Click on AD promotion and verify the user is navigated to the availability of the associated event\r\nExpected Result:\r\nUser should be navigated to the availability page of the event mapped to the AD promotion.\r\n5. Complete the transaction and verify the values are updated in DB\r\nExpected Result:\r\nUser should be able to complete the transaction and transaction details should be successfully updated in DB.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to my tickets application ( Using the above patron)\r\n2. Click on buy tickets tab\r\n3. Verify whether the Public promotion created above, is displayed in the buy tickets page and the AD promotion associated to the targeted promotion is displayed to the user in the right pane.\r\n4. Click on AD promotion and verify the user is navigated to the availability of the associated event\r\n5. Complete the transaction and verify the values are updated in DB",
        "expected": "1. User should be logged in to the application successfully\r\n2. User should be navigated to Buy tickets tab and all available  Promotions for the logged in Patron\r\n3. The AD promotion created should displayed to the user.\r\n4. User should be navigated to the availability page of the event mapped to the AD promotion.\r\n5. User should be able to complete the transaction and transaction details should be successfully updated in DB."
      }
    ],
    "custom_jiras": "55.1"
  },
  {
    "id": 30716934,
    "title": "Verify that a new user is able to perform a Single Sales Online Voucher Redemption with zero amount.",
    "section_id": 1686248,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PVO-14596",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C152489",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "PV Side setup\r\n---------------------------\r\n\r\n1.Have a Voucher Redemption subagency and attach \r\naccessrole and supplier\r\n2.Create a new redemption user , associate agency and \r\ngive access roles to user\r\n3.In AFP ,Sales Permission -> Enable Voucher Redemption \r\nBuyer Types in External Requests for single sales \r\noperator,Mytickets operator and Redemption user.\r\n4.Application Property \r\nVouchers.disable.all.voucher.redemption.service.charge.validations defaults to false (This above property is the one \r\noverrides service chargest if not set we need to associate \r\nInclusive and Non-inclusive Redemption Service charges.)\r\n5.Have a price structure for Voucher Events and Include \r\nRedemption buyers (The buyers with Voucher Redemption \r\noption checked)\r\n6.Have a Price structure for Voucher Package and Include \r\nRedemption buyers(The buyers with Voucher Redemption \r\noption checked)\r\n7.Have a price structure for Target Redemption events and \r\nInclude Redemption buyers(The buyers with Voucher \r\nRedemption option checked)\r\n8.Have Target Redemption events available.Say Target \r\nRedemption Event 1,Target Redemption Event 2,Target \r\nRedemption Event 3,Target Redemption Event 4 and Target \r\nRedemption Event 5.\r\n9. Have a Target Redemption Package List with above target \r\nredemption events included.\r\n10. Have a Target Redemption Packagewith above target \r\nredemption event list included.\r\n11.Have voucher events with event class Voucher available \r\nsay Voucher Event 1,Voucher Event 2,Voucher Event \r\n3,Voucher Event 4 and Voucher Event 5.\r\n12.Have a Voucher Payment method defined and External \r\nVoucher Payment Method in Voucher Event should contain \r\nthis Voucher Payment method\r\n13.Have Voucher Package event list with event class as \r\nVoucher and give Target Redemption Buyer, PEL and \r\nPackage in it\r\n14.Have Voucher Package with above Voucher PEL \r\nincluded\r\n15.For all Voucher Events->In Event Access->Market \r\nPermission->Give Online Redemption access for single \r\nsales operator,Mytickets operator and Redemption user.\r\n16.Define Ticket Inclusive Service charge with Service \r\ncharge class Voucher Redemption and include Target \r\nRedemption events.\r\n17.Define Ticket Non-Inclusive Service charge with Service \r\ncharge class Voucher Redemption and include Target \r\nRedemption event\r\n\r\nPVO Side setup:\r\n----------------------\r\n\r\n1.Have a Voucher Redemption Sub Agency in PVO under \r\nSingle sales supplier\r\n2.Have below Properties with default values:\r\n\r\nThe max number of voucher tickets that can be selected \r\nfrom the Inventory page:\r\npvo.max_redeem_voucher_allowed_cnt = 50\r\n\r\nThe max number of vouchers to display by default in the \r\nVoucher modal window (Availability page):\r\npvo.max_voucher_barcodes_ticketIds_to_display = 3\r\n\r\n3.Set VRDMSUBC to Voucher Redemption API \r\nsubagency in Single Tickets Supplier.\r\n4.Add literal to existing \r\nCFEM text code set up:\r\n5.Set VSALRURL to Single Tickets URL in Mytickets \r\nOrganization\r\n6.Set VREDEEME to true in mytickets supplier\r\n7.Set VRSUPPCD to single sales supplier code in \r\nmytickets supplier.\r\n8.Set VRDMSUBC to the Voucher Redemption API Sub \r\nAgency in mytickets supplier.\r\n9.Perf accept Voucher Package created above against \r\nSingle Tickets and Mytickets Subagency\r\n10..Perf accept Target Redemption Package created \r\nabove against Single Tickets and Mytickets Subagency .",
    "custom_test_purpose": null,
    "custom_steps": "1. Purchase tickets of Voucher source Package for a voucher buyer type   via PV and print the ticket to get the barcode.\r\nExpected Result:\r\nPatron should be able to print the ticket.\r\n2. Launch the Target Redemption Event .\r\nExpected Result:\r\nTarget Redemption event should be launched\r\n3. Verify that voucher buyer types are not available in price scales.\r\nExpected Result:\r\nvoucher buyer types should not be available in price scales.\r\n4. Verify Redeem Voucher Button is present in availability page\r\nExpected Result:\r\nThe Redeem Voucher button should be available \nin Availability page\r\n5. Click on Redeem Voucher Button\r\nExpected Result:\r\nPatron should be Presented with Voucher Input \nmodal\r\n6. Enter the Barcodes of Voucher Package ticket purchased.\r\nExpected Result:\r\nPatron should be able to enter barcodes.\r\n7. Click on Apply codes in Voucher Input modal\r\nExpected Result:\r\nVerify that patron is naviagted back Availabilty \npage with Voucher barcodes validated having \nEdit and Clear button\r\n8. Verify the GetRedemption Request and Response in logs\r\nExpected Result:\r\nDetails should be passed correctly\r\n9. In the Price scale verify that voucher redemption buyer type \nis unlocked with buyer max as number of vouchers \nvalidated.\r\nExpected Result:\r\nVoucher redemption buyer type should be \nunlocked with buyer max as number of vouchers \nvalidated.\r\n10. Verify the Redemption buyer ticket price.The amount should be zero.\r\nExpected Result:\r\nThe total amount should be zero. Voucher should cover the entire amount.\r\n11. Select a Ticket for Redemption buyer and continue to shopping cart\r\nExpected Result:\r\nPatron should be able to navigate to shopping \ncart\r\n12. Verify that under the seat grid, Voucher Buyer type and \nBarcode is displayed with voucher covers amount\r\nExpected Result:\r\nThe Voucher seat details should be displayed \ncorrectly.\r\n13. Login as a NEW user.\r\nExpected Result:\r\nShould be able to login as a new user.\r\n14. Verify the availability of Credit card section in payment page. \r\nExpected Result:\r\nCredit card section should be available in payment page. \r\n15. Fill email and confirmation email, Insurance and other details except credit card.\nDO NOT add credit card.\r\nExpected Result:\r\nPatron should be able to fill all details.\r\n16. Click on Buy Tickets.\r\nExpected Result:\r\nPatron should get an error.\r\n17. Add Credit card details in payment page and  Click on Buy Tickets.\r\nExpected Result:\r\nConfirmation page should be displayed\r\n18. Verify that in Confirmation page :\n-under the seat grid, Voucher Buyer type and Barcode is \ndisplayed with voucher covers amount .\n\n-page Fees, Price for ticket and Total amount due is \ndisplayed correctly.\r\nExpected Result:\r\nThe details should be displayed correctly\r\n19. Verify Sell seats call in logs\n\n\r\nExpected Result:\r\nDetails should be passed in Sell seats call\r\n20. Verify the status of Redeem Voucher ticket status  in PV\r\nExpected Result:\r\nStatus should be changed to Redeemed.\r\n21. Verify the BOTS-Ticket service for Orginal Voucher order \nand verify if tickets which are redeemed are marked with \nRed icon\r\nExpected Result:\r\nFor Orginal Voucher order verify tickets which \nare redeemed are marked with Red icon\r\n22. Verify the BOTS-Ticket service for current Redemption \norder and verify that amount and fees are charged \ncorrectly\r\nExpected Result:\r\nFor current Redemption order the amount and \nfees should be charged correctly\r\n23. Verify below details in DB\n1.Verify status of seats in \nPatron_Inventory_Seat table\n2.Verify STATUS_CODE in OFFER and \nOFFER_SEAT table\n3.Verify the details in ORDER table\r\nExpected Result:\r\nORDER table should have only one entry.\nOFFER table and OFFER_SEAT table should have status TS.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Purchase tickets of Voucher source Package for a voucher buyer type   via PV and print the ticket to get the barcode.\r\n2. Launch the Target Redemption Event .\r\n3. Verify that voucher buyer types are not available in price scales.\r\n4. Verify Redeem Voucher Button is present in availability page\r\n5. Click on Redeem Voucher Button\r\n6. Enter the Barcodes of Voucher Package ticket purchased.\r\n7. Click on Apply codes in Voucher Input modal\r\n8. Verify the GetRedemption Request and Response in logs\r\n9. In the Price scale verify that voucher redemption buyer type \nis unlocked with buyer max as number of vouchers \nvalidated.\r\n10. Verify the Redemption buyer ticket price.The amount should be zero.\r\n11. Select a Ticket for Redemption buyer and continue to shopping cart\r\n12. Verify that under the seat grid, Voucher Buyer type and \nBarcode is displayed with voucher covers amount\r\n13. Login as a NEW user.\r\n14. Verify the availability of Credit card section in payment page. \r\n15. Fill email and confirmation email, Insurance and other details except credit card.\nDO NOT add credit card.\r\n16. Click on Buy Tickets.\r\n17. Add Credit card details in payment page and  Click on Buy Tickets.\r\n18. Verify that in Confirmation page :\n-under the seat grid, Voucher Buyer type and Barcode is \ndisplayed with voucher covers amount .\n\n-page Fees, Price for ticket and Total amount due is \ndisplayed correctly.\r\n19. Verify Sell seats call in logs\n\n\r\n20. Verify the status of Redeem Voucher ticket status  in PV\r\n21. Verify the BOTS-Ticket service for Orginal Voucher order \nand verify if tickets which are redeemed are marked with \nRed icon\r\n22. Verify the BOTS-Ticket service for current Redemption \norder and verify that amount and fees are charged \ncorrectly\r\n23. Verify below details in DB\n1.Verify status of seats in \nPatron_Inventory_Seat table\n2.Verify STATUS_CODE in OFFER and \nOFFER_SEAT table\n3.Verify the details in ORDER table",
        "expected": "1. Patron should be able to print the ticket.\r\n2. Target Redemption event should be launched\r\n3. voucher buyer types should not be available in price scales.\r\n4. The Redeem Voucher button should be available \nin Availability page\r\n5. Patron should be Presented with Voucher Input \nmodal\r\n6. Patron should be able to enter barcodes.\r\n7. Verify that patron is naviagted back Availabilty \npage with Voucher barcodes validated having \nEdit and Clear button\r\n8. Details should be passed correctly\r\n9. Voucher redemption buyer type should be \nunlocked with buyer max as number of vouchers \nvalidated.\r\n10. The total amount should be zero. Voucher should cover the entire amount.\r\n11. Patron should be able to navigate to shopping \ncart\r\n12. The Voucher seat details should be displayed \ncorrectly.\r\n13. Should be able to login as a new user.\r\n14. Credit card section should be available in payment page. \r\n15. Patron should be able to fill all details.\r\n16. Patron should get an error.\r\n17. Confirmation page should be displayed\r\n18. The details should be displayed correctly\r\n19. Details should be passed in Sell seats call\r\n20. Status should be changed to Redeemed.\r\n21. For Orginal Voucher order verify tickets which \nare redeemed are marked with Red icon\r\n22. For current Redemption order the amount and \nfees should be charged correctly\r\n23. ORDER table should have only one entry.\nOFFER table and OFFER_SEAT table should have status TS."
      }
    ],
    "custom_jiras": null
  },
  {
    "id": 30716935,
    "title": "Verify that an existing user with credit card is able to perform a Zero Order Single Sales Online Voucher Redemption without entering credit card details.",
    "section_id": 1686248,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PVO-14596",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C152490",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "PV Side setup\r\n---------------------------\r\n\r\n1.Have a Voucher Redemption subagency and attach \r\naccessrole and supplier\r\n2.Create a new redemption user , associate agency and \r\ngive access roles to user\r\n3.In AFP ,Sales Permission -> Enable Voucher Redemption \r\nBuyer Types in External Requests for single sales \r\noperator,Mytickets operator and Redemption user.\r\n4.Application Property \r\nVouchers.disable.all.voucher.redemption.service.charge.validations defaults to false (This above property is the one \r\noverrides service chargest if not set we need to associate \r\nInclusive and Non-inclusive Redemption Service charges.)\r\n5.Have a price structure for Voucher Events and Include \r\nRedemption buyers (The buyers with Voucher Redemption \r\noption checked)\r\n6.Have a Price structure for Voucher Package and Include \r\nRedemption buyers(The buyers with Voucher Redemption \r\noption checked)\r\n7.Have a price structure for Target Redemption events and \r\nInclude Redemption buyers(The buyers with Voucher \r\nRedemption option checked)\r\n8.Have Target Redemption events available.Say Target \r\nRedemption Event 1,Target Redemption Event 2,Target \r\nRedemption Event 3,Target Redemption Event 4 and Target \r\nRedemption Event 5.\r\n9. Have a Target Redemption Package List with above target \r\nredemption events included.\r\n10. Have a Target Redemption Packagewith above target \r\nredemption event list included.\r\n11.Have voucher events with event class Voucher available \r\nsay Voucher Event 1,Voucher Event 2,Voucher Event \r\n3,Voucher Event 4 and Voucher Event 5.\r\n12.Have a Voucher Payment method defined and External \r\nVoucher Payment Method in Voucher Event should contain \r\nthis Voucher Payment method\r\n13.Have Voucher Package event list with event class as \r\nVoucher and give Target Redemption Buyer, PEL and \r\nPackage in it\r\n14.Have Voucher Package with above Voucher PEL \r\nincluded\r\n15.For all Voucher Events->In Event Access->Market \r\nPermission->Give Online Redemption access for single \r\nsales operator,Mytickets operator and Redemption user.\r\n16.Define Ticket Inclusive Service charge with Service \r\ncharge class Voucher Redemption and include Target \r\nRedemption events.\r\n17.Define Ticket Non-Inclusive Service charge with Service \r\ncharge class Voucher Redemption and include Target \r\nRedemption event\r\n\r\nPVO Side setup:\r\n----------------------\r\n\r\n1.Have a Voucher Redemption Sub Agency in PVO under \r\nSingle sales supplier\r\n2.Have below Properties with default values:\r\n\r\nThe max number of voucher tickets that can be selected \r\nfrom the Inventory page:\r\npvo.max_redeem_voucher_allowed_cnt = 50\r\n\r\nThe max number of vouchers to display by default in the \r\nVoucher modal window (Availability page):\r\npvo.max_voucher_barcodes_ticketIds_to_display = 3\r\n\r\n3.Set VRDMSUBC to Voucher Redemption API \r\nsubagency in Single Tickets Supplier.\r\n4.Add literal to existing \r\nCFEM text code set up:\r\n5.Set VSALRURL to Single Tickets URL in Mytickets \r\nOrganization\r\n6.Set VREDEEME to true in mytickets supplier\r\n7.Set VRSUPPCD to single sales supplier code in \r\nmytickets supplier.\r\n8.Set VRDMSUBC to the Voucher Redemption API Sub \r\nAgency in mytickets supplier.\r\n9.Perf accept Voucher Package created above against \r\nSingle Tickets and Mytickets Subagency\r\n10..Perf accept Target Redemption Package created \r\nabove against Single Tickets and Mytickets Subagency .",
    "custom_test_purpose": null,
    "custom_steps": "1. Purchase tickets of Voucher source Package for a voucher buyer type   via PV and print the ticket to get the barcode.\r\nExpected Result:\r\nPatron should be able to print the ticket.\r\n2. Launch the Target Redemption Event .\r\nExpected Result:\r\nTarget Redemption event should be launched\r\n3. Verify that voucher buyer types are not available in price scales.\r\nExpected Result:\r\nvoucher buyer types should not be available in price scales.\r\n4. Verify Redeem Voucher Button is present in availability page\r\nExpected Result:\r\nThe Redeem Voucher button should be available \nin Availability page\r\n5. Click on Redeem Voucher Button\r\nExpected Result:\r\nPatron should be Presented with Voucher Input \nmodal\r\n6. Enter the Barcodes of Voucher Package ticket purchased.\r\nExpected Result:\r\nPatron should be able to enter barcodes.\r\n7. Click on Apply codes in Voucher Input modal\r\nExpected Result:\r\nVerify that patron is naviagted back Availabilty \npage with Voucher barcodes validated having \nEdit and Clear button\r\n8. Verify the GetRedemption Request and Response in logs\r\nExpected Result:\r\nDetails should be passed correctly\r\n9. In the Price scale verify that voucher redemption buyer type \nis unlocked with buyer max as number of vouchers \nvalidated.\r\nExpected Result:\r\nVoucher redemption buyer type should be \nunlocked with buyer max as number of vouchers \nvalidated.\r\n10. Verify the Redemption buyer ticket price.The amount should be zero.\r\nExpected Result:\r\nThe total amount should be zero. Voucher should cover the entire amount.\r\n11. Select a Ticket for Redemption buyer and continue to shopping cart\r\nExpected Result:\r\nPatron should be able to navigate to shopping \ncart\r\n12. Verify that under the seat grid, Voucher Buyer type and \nBarcode is displayed with voucher covers amount\r\nExpected Result:\r\nThe Voucher seat details should be displayed \ncorrectly.\r\n13. Login as an existing user with credit cards available.\r\nExpected Result:\r\nShould be able to login as an existing user.\r\n14. Verify that Credit card section in NOT available in payment page. \r\nExpected Result:\r\nCredit card section should NOT be available in payment page. \r\n15. Fill email and confirmation email, Insurance and other details \r\nExpected Result:\r\nPatron should be able to fill all details.\r\n16. Click on Buy Tickets.\r\nExpected Result:\r\nConfirmation page should be displayed\r\n17. Verify that in Confirmation page :\n-under the seat grid, Voucher Buyer type and Barcode is \ndisplayed with voucher covers amount .\n\n-page Fees, Price for ticket and Total amount due is \ndisplayed correctly.\r\nExpected Result:\r\nThe details should be displayed correctly\r\n18. Verify Sell seats call in logs\n\n\r\nExpected Result:\r\nDetails should be passed in Sell seats call\r\n19. Verify the status of Redeem Voucher ticket status  in PV\r\nExpected Result:\r\nStatus should be changed to Redeemed.\r\n20. Verify the BOTS-Ticket service for Orginal Voucher order \nand verify if tickets which are redeemed are marked with \nRed icon\r\nExpected Result:\r\nFor Orginal Voucher order verify tickets which \nare redeemed are marked with Red icon\r\n21. Verify the BOTS-Ticket service for current Redemption \norder and verify that amount and fees are charged \ncorrectly\r\nExpected Result:\r\nFor current Redemption order the amount and \nfees should be charged correctly\r\n22. Verify below details in DB\n1.Verify status of seats in \nPatron_Inventory_Seat table\n2.Verify STATUS_CODE in OFFER and \nOFFER_SEAT table\n3.Verify the details in ORDER table\r\nExpected Result:\r\nORDER table should have only one entry.\nOFFER table and OFFER_SEAT table should have status TS.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Purchase tickets of Voucher source Package for a voucher buyer type   via PV and print the ticket to get the barcode.\r\n2. Launch the Target Redemption Event .\r\n3. Verify that voucher buyer types are not available in price scales.\r\n4. Verify Redeem Voucher Button is present in availability page\r\n5. Click on Redeem Voucher Button\r\n6. Enter the Barcodes of Voucher Package ticket purchased.\r\n7. Click on Apply codes in Voucher Input modal\r\n8. Verify the GetRedemption Request and Response in logs\r\n9. In the Price scale verify that voucher redemption buyer type \nis unlocked with buyer max as number of vouchers \nvalidated.\r\n10. Verify the Redemption buyer ticket price.The amount should be zero.\r\n11. Select a Ticket for Redemption buyer and continue to shopping cart\r\n12. Verify that under the seat grid, Voucher Buyer type and \nBarcode is displayed with voucher covers amount\r\n13. Login as an existing user with credit cards available.\r\n14. Verify that Credit card section in NOT available in payment page. \r\n15. Fill email and confirmation email, Insurance and other details \r\n16. Click on Buy Tickets.\r\n17. Verify that in Confirmation page :\n-under the seat grid, Voucher Buyer type and Barcode is \ndisplayed with voucher covers amount .\n\n-page Fees, Price for ticket and Total amount due is \ndisplayed correctly.\r\n18. Verify Sell seats call in logs\n\n\r\n19. Verify the status of Redeem Voucher ticket status  in PV\r\n20. Verify the BOTS-Ticket service for Orginal Voucher order \nand verify if tickets which are redeemed are marked with \nRed icon\r\n21. Verify the BOTS-Ticket service for current Redemption \norder and verify that amount and fees are charged \ncorrectly\r\n22. Verify below details in DB\n1.Verify status of seats in \nPatron_Inventory_Seat table\n2.Verify STATUS_CODE in OFFER and \nOFFER_SEAT table\n3.Verify the details in ORDER table",
        "expected": "1. Patron should be able to print the ticket.\r\n2. Target Redemption event should be launched\r\n3. voucher buyer types should not be available in price scales.\r\n4. The Redeem Voucher button should be available \nin Availability page\r\n5. Patron should be Presented with Voucher Input \nmodal\r\n6. Patron should be able to enter barcodes.\r\n7. Verify that patron is naviagted back Availabilty \npage with Voucher barcodes validated having \nEdit and Clear button\r\n8. Details should be passed correctly\r\n9. Voucher redemption buyer type should be \nunlocked with buyer max as number of vouchers \nvalidated.\r\n10. The total amount should be zero. Voucher should cover the entire amount.\r\n11. Patron should be able to navigate to shopping \ncart\r\n12. The Voucher seat details should be displayed \ncorrectly.\r\n13. Should be able to login as an existing user.\r\n14. Credit card section should NOT be available in payment page. \r\n15. Patron should be able to fill all details.\r\n16. Confirmation page should be displayed\r\n17. The details should be displayed correctly\r\n18. Details should be passed in Sell seats call\r\n19. Status should be changed to Redeemed.\r\n20. For Orginal Voucher order verify tickets which \nare redeemed are marked with Red icon\r\n21. For current Redemption order the amount and \nfees should be charged correctly\r\n22. ORDER table should have only one entry.\nOFFER table and OFFER_SEAT table should have status TS."
      }
    ],
    "custom_jiras": null
  },
  {
    "id": 30716936,
    "title": "Single sales Online Voucher Redemption_End to End Flow",
    "section_id": 1686248,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13898",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C152491",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. PV Side setup\r\n \r\n1.Have a Voucher Redemption subagency and attach \r\naccessrole and supplier\r\n2.Create a new redemption user , associate agency and \r\ngive access roles to user\r\n3.In AFP ,Sales Permission -> Enable Voucher Redemption \r\nBuyer Types in External Requests for single sales \r\noperator,Mytickets operator and Redemption user.\r\n4.Application Property \r\nVouchers.disable.all.voucher.redemption.service.charge.validations defaults to false (This above property is the one \r\noverrides service chargest if not set we need to associate \r\nInclusive and Non-inclusive Redemption Service charges.)\r\n5.Have a  price structure for Voucher Events and Include \r\nRedemption buyers (The buyers with Voucher Redemption \r\noption checked)\r\n6.Have a  Price structure for Voucher Package and Include \r\nRedemption buyers(The buyers with Voucher Redemption \r\noption checked)\r\n7.Have a price structure for Target Redemption events and \r\nInclude Redemption buyers(The buyers with Voucher \r\nRedemption option checked)\r\n8.Have Target Redemption events available.Say Target \r\nRedemption Event 1,Target Redemption Event 2,Target \r\nRedemption  Event 3,Target Redemption  Event 4 and Target \r\nRedemption Event 5.\r\n9. Have a Target Redemption Package List with above target \r\nredemption events included.\r\n10. Have a Target Redemption Packagewith above target \r\nredemption event list included.\r\n11.Have voucher events with event class Voucher available \r\nsay  Voucher Event 1,Voucher Event 2,Voucher Event \r\n3,Voucher Event 4 and Voucher Event 5.\r\n12.Have a Voucher Payment method defined and External \r\nVoucher Payment Method in Voucher Event should contain \r\nthis Voucher Payment method\r\n13.Have Voucher Package event list with event class as \r\nVoucher and give Target Redemption Buyer, PEL and \r\nPackage in it\r\n14.Have Voucher Package with above Voucher PEL \r\nincluded\r\n15.For all Voucher Events->In Event Access->Market \r\nPermission->Give Online Redemption access  for single \r\nsales operator,Mytickets operator and Redemption user.\r\n16.Define Ticket Inclusive Service charge with Service \r\ncharge class Voucher Redemption and include Target \r\nRedemption events.\r\n17.Define Ticket Non-Inclusive Service charge with Service \r\ncharge class Voucher Redemption and include Target \r\nRedemption event\r\nExpected Result:\r\nAll mentioned PV side setup should be done\r\n2. PVO Side setup:\r\n \r\n1.Have a Voucher Redemption Sub Agency in PVO under \r\nSingle sales supplier\r\n2.Have below Properties with default values:\r\n \r\nThe max number of voucher tickets that can be selected \r\nfrom the Inventory page:\r\npvo.max_redeem_voucher_allowed_cnt = 50\r\n \r\nThe max number of vouchers to display by default in the \r\nVoucher modal window (Availability page):\r\npvo.max_voucher_barcodes_ticketIds_to_display = 3\r\n \r\n3.Set VRDMSUBC to Voucher Redemption API \r\nsubagency in Single Tickets Supplier.\r\n4.Add literal  to existing \r\nCFEM text code set up:\r\n5.Set VSALRURL to Single Tickets URL in Mytickets \r\nOrganization              \r\n6.Set VREDEEME to true in mytickets supplier\r\n7.Set VRSUPPCD to single sales supplier code in \r\nmytickets supplier.\r\n8.Set VRDMSUBC to the Voucher Redemption API Sub \r\nAgency  in mytickets supplier.\r\n9.Perf accept Voucher Package created above against \r\nSingle Tickets and Mytickets Subagency\r\n10..Perf accept Target Redemption Package created \r\nabove against Single Tickets and Mytickets Subagency .\r\nExpected Result:\r\nAll mentioned PV side setup should be done\r\n3. Launch the Target Redemption Event .\r\nExpected Result:\r\nTarget Redemption event should be launched\r\n4. Verify Redeem Voucher Button is present in availability page\r\nExpected Result:\r\nThe Redeem Voucher button should be available \r\nin Availabilty page\r\n5. Click on Redeem Voucher Button\r\nExpected Result:\r\nPatron should be Presented with Voucher Input \r\nmodal\r\n6. Enter the Barcodes of Voucher Package ticket purchased\r\nExpected Result:\r\nPatron should be able to enter barcodes\r\n7. Click on Apply codes in Voucher Input modal\r\nExpected Result:\r\nVerify that patron is naviagted back Availabilty \r\npage with Voucher barcodes validated having \r\nEdit and Clear button\r\n8. Verify the GetRedemption Request and Response in logs\r\nExpected Result:\r\nDetails should be passed correctly\r\n9. In the Price scale verify that voucher redemption buyer type \r\nis unlocked with buyer max as number of vouchers \r\nvalidated.\r\nExpected Result:\r\nVoucher redemption buyer type should be \r\nunlocked with buyer max as number of vouchers \r\nvalidated.\r\n10. Verify the Redemption buyer ticket price,The amount that \r\nVoucher covers and the non-inclusive service charge.\r\nExpected Result:\r\nWhen all-in-pricing is used, the 'Cost' value \r\nshould always include the cost of service \r\ncharges + any amount of the ticket price which \r\nisn't covred by the voucher.  The voucher should \r\nonly covers amounts up to the value of the ticket \r\nprice.\r\n11. Select a Ticket for Redemption buyer and one ticket for \r\nnormal buyer and continue to shopping cart\r\nExpected Result:\r\nPatron should be able to naviagte to shopping \r\ncart\r\n12. Verify that under the seat grid, Voucher Buyer type and \r\nBarcode is displayed with voucher covers amount\r\nExpected Result:\r\nThe Voucher seat details should be displayed \r\ncorrectly.\r\n13. Verify Fees, Price for ticket and Total amount due is \r\ndisplayed correctly.\r\nExpected Result:\r\nThe Price amount in Shopping cart should be \r\ncorrect\r\n14. Select delivery method from Tickets delivery page and \r\nreach on Payment page\r\nExpected Result:\r\nPatron should be able to select delivery method \r\nand reach on payment page\r\n15. Verify that in Payment page :\r\n-under the seat grid, Voucher Buyer type and Barcode is \r\ndisplayed with voucher covers amount .\r\n \r\n-page Fees, Price for ticket and Total amount due is \r\ndisplayed correctly.\r\nExpected Result:\r\nThe details should be displayed correctly\r\n16. Click on Buy Tickets button and verify the confirmation page\r\nExpected Result:\r\nConfirmation page should be displayed\r\n17. Verify that in Confirmation  page :\r\n-under the seat grid, Voucher Buyer type and Barcode is \r\ndisplayed with voucher covers amount .\r\n \r\n-page Fees, Price for ticket and Total amount due is \r\ndisplayed correctly.\r\nExpected Result:\r\nThe details should be displayed correctly\r\n18. Verify Sell seats call in logs\r\nExpected Result:\r\nDetails should be passed in Sellseats call\r\n19. Click on Back to Inventory button\r\nExpected Result:\r\nPatron should be naviagted back to Inventory\r\n20. Verify that Redeem Voucher ticket status changed to \r\nRedeemed\r\nExpected Result:\r\nThe status of tickets in inventory should be \r\nchanged to Redeemed\r\n21. Verify the BOTS-Ticket service  for current Redemption \r\norder and verify that amount and fees are charged \r\ncorrectly\r\nExpected Result:\r\nFor current Redemption order the amount and \r\nfees should be charged correctly\r\n22. Verify the BOTS-Ticket service for Orginal Voucher order \r\nand verify if tickets which are redeemed are marked with \r\nRed icon\r\nExpected Result:\r\nFor Orginal Voucher order verify  tickets which \r\nare redeemed are marked with Red icon\r\n23. Verify below details in DB\r\n   1.Verify status of seats in \r\nPatron_Inventory_Seat table\r\n    2.Verify STATUS_CODE  in OFFER and \r\nOFFER_SEAT table\r\n     3.Verify the details in ORDER table\r\nExpected Result:\r\nAll details should be updated in DB correctly.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. PV Side setup\r\n \r\n1.Have a Voucher Redemption subagency and attach \r\naccessrole and supplier\r\n2.Create a new redemption user , associate agency and \r\ngive access roles to user\r\n3.In AFP ,Sales Permission -> Enable Voucher Redemption \r\nBuyer Types in External Requests for single sales \r\noperator,Mytickets operator and Redemption user.\r\n4.Application Property \r\nVouchers.disable.all.voucher.redemption.service.charge.validations defaults to false (This above property is the one \r\noverrides service chargest if not set we need to associate \r\nInclusive and Non-inclusive Redemption Service charges.)\r\n5.Have a  price structure for Voucher Events and Include \r\nRedemption buyers (The buyers with Voucher Redemption \r\noption checked)\r\n6.Have a  Price structure for Voucher Package and Include \r\nRedemption buyers(The buyers with Voucher Redemption \r\noption checked)\r\n7.Have a price structure for Target Redemption events and \r\nInclude Redemption buyers(The buyers with Voucher \r\nRedemption option checked)\r\n8.Have Target Redemption events available.Say Target \r\nRedemption Event 1,Target Redemption Event 2,Target \r\nRedemption  Event 3,Target Redemption  Event 4 and Target \r\nRedemption Event 5.\r\n9. Have a Target Redemption Package List with above target \r\nredemption events included.\r\n10. Have a Target Redemption Packagewith above target \r\nredemption event list included.\r\n11.Have voucher events with event class Voucher available \r\nsay  Voucher Event 1,Voucher Event 2,Voucher Event \r\n3,Voucher Event 4 and Voucher Event 5.\r\n12.Have a Voucher Payment method defined and External \r\nVoucher Payment Method in Voucher Event should contain \r\nthis Voucher Payment method\r\n13.Have Voucher Package event list with event class as \r\nVoucher and give Target Redemption Buyer, PEL and \r\nPackage in it\r\n14.Have Voucher Package with above Voucher PEL \r\nincluded\r\n15.For all Voucher Events->In Event Access->Market \r\nPermission->Give Online Redemption access  for single \r\nsales operator,Mytickets operator and Redemption user.\r\n16.Define Ticket Inclusive Service charge with Service \r\ncharge class Voucher Redemption and include Target \r\nRedemption events.\r\n17.Define Ticket Non-Inclusive Service charge with Service \r\ncharge class Voucher Redemption and include Target \r\nRedemption event\r\n2. PVO Side setup:\r\n \r\n1.Have a Voucher Redemption Sub Agency in PVO under \r\nSingle sales supplier\r\n2.Have below Properties with default values:\r\n \r\nThe max number of voucher tickets that can be selected \r\nfrom the Inventory page:\r\npvo.max_redeem_voucher_allowed_cnt = 50\r\n \r\nThe max number of vouchers to display by default in the \r\nVoucher modal window (Availability page):\r\npvo.max_voucher_barcodes_ticketIds_to_display = 3\r\n \r\n3.Set VRDMSUBC to Voucher Redemption API \r\nsubagency in Single Tickets Supplier.\r\n4.Add literal  to existing \r\nCFEM text code set up:\r\n5.Set VSALRURL to Single Tickets URL in Mytickets \r\nOrganization              \r\n6.Set VREDEEME to true in mytickets supplier\r\n7.Set VRSUPPCD to single sales supplier code in \r\nmytickets supplier.\r\n8.Set VRDMSUBC to the Voucher Redemption API Sub \r\nAgency  in mytickets supplier.\r\n9.Perf accept Voucher Package created above against \r\nSingle Tickets and Mytickets Subagency\r\n10..Perf accept Target Redemption Package created \r\nabove against Single Tickets and Mytickets Subagency .\r\n3. Launch the Target Redemption Event .\r\n4. Verify Redeem Voucher Button is present in availability page\r\n5. Click on Redeem Voucher Button\r\n6. Enter the Barcodes of Voucher Package ticket purchased\r\n7. Click on Apply codes in Voucher Input modal\r\n8. Verify the GetRedemption Request and Response in logs\r\n9. In the Price scale verify that voucher redemption buyer type \r\nis unlocked with buyer max as number of vouchers \r\nvalidated.\r\n10. Verify the Redemption buyer ticket price,The amount that \r\nVoucher covers and the non-inclusive service charge.\r\n11. Select a Ticket for Redemption buyer and one ticket for \r\nnormal buyer and continue to shopping cart\r\n12. Verify that under the seat grid, Voucher Buyer type and \r\nBarcode is displayed with voucher covers amount\r\n13. Verify Fees, Price for ticket and Total amount due is \r\ndisplayed correctly.\r\n14. Select delivery method from Tickets delivery page and \r\nreach on Payment page\r\n15. Verify that in Payment page :\r\n-under the seat grid, Voucher Buyer type and Barcode is \r\ndisplayed with voucher covers amount .\r\n \r\n-page Fees, Price for ticket and Total amount due is \r\ndisplayed correctly.\r\n16. Click on Buy Tickets button and verify the confirmation page\r\n17. Verify that in Confirmation  page :\r\n-under the seat grid, Voucher Buyer type and Barcode is \r\ndisplayed with voucher covers amount .\r\n \r\n-page Fees, Price for ticket and Total amount due is \r\ndisplayed correctly.\r\n18. Verify Sell seats call in logs\r\n19. Click on Back to Inventory button\r\n20. Verify that Redeem Voucher ticket status changed to \r\nRedeemed\r\n21. Verify the BOTS-Ticket service  for current Redemption \r\norder and verify that amount and fees are charged \r\ncorrectly\r\n22. Verify the BOTS-Ticket service for Orginal Voucher order \r\nand verify if tickets which are redeemed are marked with \r\nRed icon\r\n23. Verify below details in DB\r\n   1.Verify status of seats in \r\nPatron_Inventory_Seat table\r\n    2.Verify STATUS_CODE  in OFFER and \r\nOFFER_SEAT table\r\n     3.Verify the details in ORDER table",
        "expected": "1. All mentioned PV side setup should be done\r\n2. All mentioned PV side setup should be done\r\n3. Target Redemption event should be launched\r\n4. The Redeem Voucher button should be available \r\nin Availabilty page\r\n5. Patron should be Presented with Voucher Input \r\nmodal\r\n6. Patron should be able to enter barcodes\r\n7. Verify that patron is naviagted back Availabilty \r\npage with Voucher barcodes validated having \r\nEdit and Clear button\r\n8. Details should be passed correctly\r\n9. Voucher redemption buyer type should be \r\nunlocked with buyer max as number of vouchers \r\nvalidated.\r\n10. When all-in-pricing is used, the 'Cost' value \r\nshould always include the cost of service \r\ncharges + any amount of the ticket price which \r\nisn't covred by the voucher.  The voucher should \r\nonly covers amounts up to the value of the ticket \r\nprice.\r\n11. Patron should be able to naviagte to shopping \r\ncart\r\n12. The Voucher seat details should be displayed \r\ncorrectly.\r\n13. The Price amount in Shopping cart should be \r\ncorrect\r\n14. Patron should be able to select delivery method \r\nand reach on payment page\r\n15. The details should be displayed correctly\r\n16. Confirmation page should be displayed\r\n17. The details should be displayed correctly\r\n18. Details should be passed in Sellseats call\r\n19. Patron should be naviagted back to Inventory\r\n20. The status of tickets in inventory should be \r\nchanged to Redeemed\r\n21. For current Redemption order the amount and \r\nfees should be charged correctly\r\n22. For Orginal Voucher order verify  tickets which \r\nare redeemed are marked with Red icon\r\n23. All details should be updated in DB correctly."
      }
    ],
    "custom_jiras": "61"
  },
  {
    "id": 30716937,
    "title": "Mytickets to Single sales Online Voucher Redemption_End to End Flow",
    "section_id": 1686248,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13898",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C152492",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. PV Side setup\r\n \r\n1.Have a Voucher Redemption subagency and attach \r\naccessrole and supplier\r\n2.Create a new redemption user , associate agency and \r\ngive access roles to user\r\n3.In AFP ,Sales Permission -> Enable Voucher Redemption \r\nBuyer Types in External Requests for single sales \r\noperator,Mytickets operator and Redemption user.\r\n4.Application Property \r\nVouchers.disable.all.voucher.redemption.service.charge.validations defaults to false (This above property is the one \r\noverrides service chargest if not set we need to associate \r\nInclusive and Non-inclusive Redemption Service charges.)\r\n5.Have a  price structure for Voucher Events and Include \r\nRedemption buyers (The buyers with Voucher Redemption \r\noption checked)\r\n6.Have a  Price structure for Voucher Package and Include \r\nRedemption buyers(The buyers with Voucher Redemption \r\noption checked)\r\n7.Have a price structure for Target Redemption events and \r\nInclude Redemption buyers(The buyers with Voucher \r\nRedemption option checked)\r\n8.Have Target Redemption events available.Say Target \r\nRedemption Event 1,Target Redemption Event 2,Target \r\nRedemption  Event 3,Target Redemption  Event 4 and Target \r\nRedemption Event 5.\r\n9. Have a Target Redemption Package List with above target \r\nredemption events included.\r\n10. Have a Target Redemption Packagewith above target \r\nredemption event list included.\r\n11.Have voucher events with event class Voucher available \r\nsay  Voucher Event 1,Voucher Event 2,Voucher Event \r\n3,Voucher Event 4 and Voucher Event 5.\r\n12.Have a Voucher Payment method defined and External \r\nVoucher Payment Method in Voucher Event should contain \r\nthis Voucher Payment method\r\n13.Have Voucher Package event list with event class as \r\nVoucher and give Target Redemption Buyer, PEL and \r\nPackage in it\r\n14.Have Voucher Package with above Voucher PEL \r\nincluded\r\n15.For all Voucher Events->In Event Access->Market \r\nPermission->Give Online Redemption access  for single \r\nsales operator,Mytickets operator and Redemption user.\r\n16.Define Ticket Inclusive Service charge with Service \r\ncharge class Voucher Redemption and include Target \r\nRedemption events.\r\n17.Define Ticket Non-Inclusive Service charge with Service \r\ncharge class Voucher Redemption and include Target \r\nRedemption event\r\nExpected Result:\r\nAll mentioned PV side setup should be done\r\n2. PVO Side setup:\r\n \r\n1.Have a Voucher Redemption Sub Agency in PVO under \r\nSingle sales supplier\r\n2.Have below Properties with default values:\r\n \r\nThe max number of voucher tickets that can be selected \r\nfrom the Inventory page:\r\npvo.max_redeem_voucher_allowed_cnt = 50\r\n \r\nThe max number of vouchers to display by default in the \r\nVoucher modal window (Availability page):\r\npvo.max_voucher_barcodes_ticketIds_to_display = 3\r\n \r\n3.Set VRDMSUBC to Voucher Redemption API \r\nsubagency in Single Tickets Supplier.\r\n4.Add literal  to existing \r\nCFEM text code set up:\r\n5.Set VSALRURL to Single Tickets URL in Mytickets \r\nOrganization              \r\n6.Set VREDEEME to true in mytickets supplier\r\n7.Set VRSUPPCD to single sales supplier code in \r\nmytickets supplier.\r\n8.Set VRDMSUBC to the Voucher Redemption API Sub \r\nAgency  in mytickets supplier.\r\n9.Perf accept Voucher Package created above against \r\nSingle Tickets and Mytickets Subagency\r\n10..Perf accept Target Redemption Package created \r\nabove against Single Tickets and Mytickets Subagency .\r\nExpected Result:\r\nAll mentioned PV side setup should be done\r\n3. Purchase tickets for voucher Package from BOTS for a \r\npatron.\r\nExpected Result:\r\nPatron shoould be able to purchase voucher \r\ntickets\r\n4. Print the purchased voucher tickets and note down the \r\nbarcodes.\r\nExpected Result:\r\nThe patron should be able to print the tickets and \r\nnote down the barcodes\r\n5. Launch Mytickets URL and login as above patron for \r\nwhich we purchased voucher tickets.\r\nExpected Result:\r\nPatron should be able to luanch the URL\r\n6. Select action Redeem Voucher in Inventory.\r\nExpected Result:\r\nPatron should be able to select Redeem \r\nvoucher action from inventory\r\n7. Verify that once Redeem voucher action is selected only \r\nOrder tab is visible and Show actionable only check box \r\nis selected.\r\nExpected Result:\r\nOnce Redeem voucher action is selected only \r\nOrder tab is visible and Show actionable only \r\ncheck box should be selected by default.\r\n8. Verify that Purchased Voucher tickets are displayed in \r\ninventory with format Voucher Buyer type then Barcode \r\nwith Voucher icon.\r\nExpected Result:\r\nPurchased Voucher tickets should be displayed \r\nin inventory with format Voucher Buyer type then \r\nBarcode with Voucher icon.\r\n9. Verify that IS_Redeemable flag is true for above tickets is \r\npassed as true in GetPatronInventory call.\r\nExpected Result:\r\nThe IS_Redeemable flag should be passed as  \r\ntrue for above tickets is passed as true in \r\nGetPatronInventory call.\r\n10. Select a Voucher Ticket and click on continue\r\nExpected Result:\r\nPatron should be able to select voucher ticket \r\nand click on continue\r\n11. Verify that Patron is presented with Eligible Redemption \r\nevents page and verify Eligible Events Call in logs\r\nExpected Result:\r\nPatron should be  presented with Eligible \r\nRedemption events page and Eligible Events Call \r\nin logs should list all eligible events\r\n12. Select a Eligible Redemption event\r\nExpected Result:\r\nPatron should be able to select Eligible \r\nRedemption events page\r\n13. Verify that patron is naviagted to Availabilty page with \r\nVoucher barcodes validated having Edit and Clear button\r\nExpected Result:\r\nPatron should be naviagted to Availabilty page \r\nwith Voucher barcodes validated having Edit \r\nand Clear button\r\n14. In the Price scale verify that voucher redemption buyer type \r\nis unlocked with buyer max as number of vouchers \r\nvalidated.\r\nExpected Result:\r\nVoucher redemption buyer type should be \r\nunlocked with buyer max as number of vouchers \r\nvalidated.\r\n15. Verify the Redemption buyer ticket price,The amount that \r\nVoucher covers and the non-inclusive service charge.\r\nExpected Result:\r\nWhen all-in-pricing is used, the 'Cost' value \r\nshould always include the cost of service \r\ncharges + any amount of the ticket price which \r\nisn't covred by the voucher.  The voucher should \r\nonly covers amounts up to the value of the ticket \r\nprice.\r\n16. Select a Ticket for Redemption buyer and one ticket for \r\nnormal buyer and continue to shopping cart\r\nExpected Result:\r\nPatron should be able to naviagte to shopping \r\ncart\r\n17. Verify that under the seat grid, Voucher Buyer type and \r\nBarcode is displayed with voucher covers amount\r\nExpected Result:\r\nThe Voucher seat details should be displayed \r\ncorrectly.\r\n18. Verify Fees, Price for ticket and Total amount due is \r\ndisplayed correctly.\r\nExpected Result:\r\nThe Price amount in Shopping cart should be \r\ncorrect\r\n19. Select delivery method from Tickets delivery page and \r\nreach on Payment page\r\nExpected Result:\r\nPatron should be able to select delivery method \r\nand reach on payment page\r\n20. Verify that in Payment page :\r\n-under the seat grid, Voucher Buyer type and Barcode is \r\ndisplayed with voucher covers amount .\r\n \r\n-page Fees, Price for ticket and Total amount due is \r\ndisplayed correctly.\r\nExpected Result:\r\nThe details should be displayed correctly\r\n21. Click on Buy Tickets button and verify the confirmation page\r\nExpected Result:\r\nConfirmation page should be displayed\r\n22. Verify that in Confirmation  page :\r\n-under the seat grid, Voucher Buyer type and Barcode is \r\ndisplayed with voucher covers amount .\r\n \r\n-page Fees, Price for ticket and Total amount due is \r\ndisplayed correctly.\r\nExpected Result:\r\nThe details should be displayed correctly\r\n23. Verify Sell seats call in logs\r\nExpected Result:\r\nDetails should be passed in Sellseats call\r\n24. Click on Back to Inventory button\r\nExpected Result:\r\nPatron should be naviagted back to Inventory\r\n25. Verify that Redeem Voucher ticket status changed to \r\nRedeemed\r\nExpected Result:\r\nThe status of tickets in inventory should be \r\nchanged to Redeemed\r\n26. Verify the BOTS-Ticket service  for current Redemption \r\norder and verify that amount and fees are charged \r\ncorrectly\r\nExpected Result:\r\nFor current Redemption order the amount and \r\nfees should be charged correctly\r\n27. Verify the BOTS-Ticket service for Orginal Voucher order \r\nand verify if tickets which are redeemed are marked with \r\nRed icon\r\nExpected Result:\r\nFor Orginal Voucher order verify  tickets which \r\nare redeemed are marked with Red icon\r\n28. Verify below details in DB\r\n   1.Verify status of seats in Patron_Inventory_Seat table\r\n    2.Verify STATUS_CODE  in OFFER and OFFER_SEAT \r\ntable\r\n     3.Verify the details in ORDER table\r\nExpected Result:\r\nAll details should be updated in DB correctly.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. PV Side setup\r\n \r\n1.Have a Voucher Redemption subagency and attach \r\naccessrole and supplier\r\n2.Create a new redemption user , associate agency and \r\ngive access roles to user\r\n3.In AFP ,Sales Permission -> Enable Voucher Redemption \r\nBuyer Types in External Requests for single sales \r\noperator,Mytickets operator and Redemption user.\r\n4.Application Property \r\nVouchers.disable.all.voucher.redemption.service.charge.validations defaults to false (This above property is the one \r\noverrides service chargest if not set we need to associate \r\nInclusive and Non-inclusive Redemption Service charges.)\r\n5.Have a  price structure for Voucher Events and Include \r\nRedemption buyers (The buyers with Voucher Redemption \r\noption checked)\r\n6.Have a  Price structure for Voucher Package and Include \r\nRedemption buyers(The buyers with Voucher Redemption \r\noption checked)\r\n7.Have a price structure for Target Redemption events and \r\nInclude Redemption buyers(The buyers with Voucher \r\nRedemption option checked)\r\n8.Have Target Redemption events available.Say Target \r\nRedemption Event 1,Target Redemption Event 2,Target \r\nRedemption  Event 3,Target Redemption  Event 4 and Target \r\nRedemption Event 5.\r\n9. Have a Target Redemption Package List with above target \r\nredemption events included.\r\n10. Have a Target Redemption Packagewith above target \r\nredemption event list included.\r\n11.Have voucher events with event class Voucher available \r\nsay  Voucher Event 1,Voucher Event 2,Voucher Event \r\n3,Voucher Event 4 and Voucher Event 5.\r\n12.Have a Voucher Payment method defined and External \r\nVoucher Payment Method in Voucher Event should contain \r\nthis Voucher Payment method\r\n13.Have Voucher Package event list with event class as \r\nVoucher and give Target Redemption Buyer, PEL and \r\nPackage in it\r\n14.Have Voucher Package with above Voucher PEL \r\nincluded\r\n15.For all Voucher Events->In Event Access->Market \r\nPermission->Give Online Redemption access  for single \r\nsales operator,Mytickets operator and Redemption user.\r\n16.Define Ticket Inclusive Service charge with Service \r\ncharge class Voucher Redemption and include Target \r\nRedemption events.\r\n17.Define Ticket Non-Inclusive Service charge with Service \r\ncharge class Voucher Redemption and include Target \r\nRedemption event\r\n2. PVO Side setup:\r\n \r\n1.Have a Voucher Redemption Sub Agency in PVO under \r\nSingle sales supplier\r\n2.Have below Properties with default values:\r\n \r\nThe max number of voucher tickets that can be selected \r\nfrom the Inventory page:\r\npvo.max_redeem_voucher_allowed_cnt = 50\r\n \r\nThe max number of vouchers to display by default in the \r\nVoucher modal window (Availability page):\r\npvo.max_voucher_barcodes_ticketIds_to_display = 3\r\n \r\n3.Set VRDMSUBC to Voucher Redemption API \r\nsubagency in Single Tickets Supplier.\r\n4.Add literal  to existing \r\nCFEM text code set up:\r\n5.Set VSALRURL to Single Tickets URL in Mytickets \r\nOrganization              \r\n6.Set VREDEEME to true in mytickets supplier\r\n7.Set VRSUPPCD to single sales supplier code in \r\nmytickets supplier.\r\n8.Set VRDMSUBC to the Voucher Redemption API Sub \r\nAgency  in mytickets supplier.\r\n9.Perf accept Voucher Package created above against \r\nSingle Tickets and Mytickets Subagency\r\n10..Perf accept Target Redemption Package created \r\nabove against Single Tickets and Mytickets Subagency .\r\n3. Purchase tickets for voucher Package from BOTS for a \r\npatron.\r\n4. Print the purchased voucher tickets and note down the \r\nbarcodes.\r\n5. Launch Mytickets URL and login as above patron for \r\nwhich we purchased voucher tickets.\r\n6. Select action Redeem Voucher in Inventory.\r\n7. Verify that once Redeem voucher action is selected only \r\nOrder tab is visible and Show actionable only check box \r\nis selected.\r\n8. Verify that Purchased Voucher tickets are displayed in \r\ninventory with format Voucher Buyer type then Barcode \r\nwith Voucher icon.\r\n9. Verify that IS_Redeemable flag is true for above tickets is \r\npassed as true in GetPatronInventory call.\r\n10. Select a Voucher Ticket and click on continue\r\n11. Verify that Patron is presented with Eligible Redemption \r\nevents page and verify Eligible Events Call in logs\r\n12. Select a Eligible Redemption event\r\n13. Verify that patron is naviagted to Availabilty page with \r\nVoucher barcodes validated having Edit and Clear button\r\n14. In the Price scale verify that voucher redemption buyer type \r\nis unlocked with buyer max as number of vouchers \r\nvalidated.\r\n15. Verify the Redemption buyer ticket price,The amount that \r\nVoucher covers and the non-inclusive service charge.\r\n16. Select a Ticket for Redemption buyer and one ticket for \r\nnormal buyer and continue to shopping cart\r\n17. Verify that under the seat grid, Voucher Buyer type and \r\nBarcode is displayed with voucher covers amount\r\n18. Verify Fees, Price for ticket and Total amount due is \r\ndisplayed correctly.\r\n19. Select delivery method from Tickets delivery page and \r\nreach on Payment page\r\n20. Verify that in Payment page :\r\n-under the seat grid, Voucher Buyer type and Barcode is \r\ndisplayed with voucher covers amount .\r\n \r\n-page Fees, Price for ticket and Total amount due is \r\ndisplayed correctly.\r\n21. Click on Buy Tickets button and verify the confirmation page\r\n22. Verify that in Confirmation  page :\r\n-under the seat grid, Voucher Buyer type and Barcode is \r\ndisplayed with voucher covers amount .\r\n \r\n-page Fees, Price for ticket and Total amount due is \r\ndisplayed correctly.\r\n23. Verify Sell seats call in logs\r\n24. Click on Back to Inventory button\r\n25. Verify that Redeem Voucher ticket status changed to \r\nRedeemed\r\n26. Verify the BOTS-Ticket service  for current Redemption \r\norder and verify that amount and fees are charged \r\ncorrectly\r\n27. Verify the BOTS-Ticket service for Orginal Voucher order \r\nand verify if tickets which are redeemed are marked with \r\nRed icon\r\n28. Verify below details in DB\r\n   1.Verify status of seats in Patron_Inventory_Seat table\r\n    2.Verify STATUS_CODE  in OFFER and OFFER_SEAT \r\ntable\r\n     3.Verify the details in ORDER table",
        "expected": "1. All mentioned PV side setup should be done\r\n2. All mentioned PV side setup should be done\r\n3. Patron shoould be able to purchase voucher \r\ntickets\r\n4. The patron should be able to print the tickets and \r\nnote down the barcodes\r\n5. Patron should be able to luanch the URL\r\n6. Patron should be able to select Redeem \r\nvoucher action from inventory\r\n7. Once Redeem voucher action is selected only \r\nOrder tab is visible and Show actionable only \r\ncheck box should be selected by default.\r\n8. Purchased Voucher tickets should be displayed \r\nin inventory with format Voucher Buyer type then \r\nBarcode with Voucher icon.\r\n9. The IS_Redeemable flag should be passed as  \r\ntrue for above tickets is passed as true in \r\nGetPatronInventory call.\r\n10. Patron should be able to select voucher ticket \r\nand click on continue\r\n11. Patron should be  presented with Eligible \r\nRedemption events page and Eligible Events Call \r\nin logs should list all eligible events\r\n12. Patron should be able to select Eligible \r\nRedemption events page\r\n13. Patron should be naviagted to Availabilty page \r\nwith Voucher barcodes validated having Edit \r\nand Clear button\r\n14. Voucher redemption buyer type should be \r\nunlocked with buyer max as number of vouchers \r\nvalidated.\r\n15. When all-in-pricing is used, the 'Cost' value \r\nshould always include the cost of service \r\ncharges + any amount of the ticket price which \r\nisn't covred by the voucher.  The voucher should \r\nonly covers amounts up to the value of the ticket \r\nprice.\r\n16. Patron should be able to naviagte to shopping \r\ncart\r\n17. The Voucher seat details should be displayed \r\ncorrectly.\r\n18. The Price amount in Shopping cart should be \r\ncorrect\r\n19. Patron should be able to select delivery method \r\nand reach on payment page\r\n20. The details should be displayed correctly\r\n21. Confirmation page should be displayed\r\n22. The details should be displayed correctly\r\n23. Details should be passed in Sellseats call\r\n24. Patron should be naviagted back to Inventory\r\n25. The status of tickets in inventory should be \r\nchanged to Redeemed\r\n26. For current Redemption order the amount and \r\nfees should be charged correctly\r\n27. For Orginal Voucher order verify  tickets which \r\nare redeemed are marked with Red icon\r\n28. All details should be updated in DB correctly."
      }
    ],
    "custom_jiras": "61"
  },
  {
    "id": 30716938,
    "title": "Verify that previously entered voucher buyer types are not be offered until a new barcode were to be entered when patron select another event from Event Schedule and move to a new transaction in single sales redemption flow",
    "section_id": 1686248,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14455",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C152493",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "PV Side setup\r\n \r\n1.Have a Voucher Redemption subagency and attach \r\naccessrole and supplier\r\n2.Create a new redemption user , associate agency and \r\ngive access roles to user\r\n3.In AFP ,Sales Permission -> Enable Voucher Redemption \r\nBuyer Types in External Requests for single sales \r\noperator,Mytickets operator and Redemption user.\r\n4.Application Property \r\nVouchers.disable.all.voucher.redemption.service.charge.validations defaults to false (This above property is the one \r\noverrides service chargest if not set we need to associate \r\nInclusive and Non-inclusive Redemption Service charges.)\r\n5.Have a  price structure for Voucher Events and Include \r\nRedemption buyers (The buyers with Voucher Redemption \r\noption checked)\r\n6.Have a  Price structure for Voucher Package and Include \r\nRedemption buyers(The buyers with Voucher Redemption \r\noption checked)\r\n7.Have a price structure for Target Redemption events and \r\nInclude Redemption buyers(The buyers with Voucher \r\nRedemption option checked)\r\n8.Have Target Redemption events available.Say Target \r\nRedemption Event 1,Target Redemption Event 2,Target \r\nRedemption  Event 3,Target Redemption  Event 4 and Target \r\nRedemption Event 5.\r\n9. Have a Target Redemption Package List with above target \r\nredemption events included.\r\n10. Have a Target Redemption Packagewith above target \r\nredemption event list included.\r\n11.Have voucher events with event class Voucher available \r\nsay  Voucher Event 1,Voucher Event 2,Voucher Event \r\n3,Voucher Event 4 and Voucher Event 5.\r\n12.Have a Voucher Payment method defined and External \r\nVoucher Payment Method in Voucher Event should contain \r\nthis Voucher Payment method\r\n13.Have Voucher Package event list with event class as \r\nVoucher and give Target Redemption Buyer, PEL and \r\nPackage in it\r\n14.Have Voucher Package with above Voucher PEL \r\nincluded\r\n15.For all Voucher Events->In Event Access->Market \r\nPermission->Give Online Redemption access  for single \r\nsales operator,Mytickets operator and Redemption user.\r\n16.Define Ticket Inclusive Service charge with Service \r\ncharge class Voucher Redemption and include Target \r\nRedemption events.\r\n17.Define Ticket Non-Inclusive Service charge with Service \r\ncharge class Voucher Redemption and include Target \r\nRedemption event\r\n\r\nPVO Side setup:\r\n \r\n1.Have a Voucher Redemption Sub Agency in PVO under \r\nSingle sales supplier\r\n2.Have below Properties with default values:\r\n \r\nThe max number of voucher tickets that can be selected \r\nfrom the Inventory page:\r\npvo.max_redeem_voucher_allowed_cnt = 50\r\n \r\nThe max number of vouchers to display by default in the \r\nVoucher modal window (Availability page):\r\npvo.max_voucher_barcodes_ticketIds_to_display = 3\r\n \r\n3.Set VRDMSUBC to Voucher Redemption API \r\nsubagency in Single Tickets Supplier.\r\n4.Add literal  to existing \r\nCFEM text code set up:\r\n5.Set VSALRURL to Single Tickets URL in Mytickets \r\nOrganization              \r\n6.Set VREDEEME to true in mytickets supplier\r\n7.Set VRSUPPCD to single sales supplier code in \r\nmytickets supplier.\r\n8.Set VRDMSUBC to the Voucher Redemption API Sub \r\nAgency  in mytickets supplier.\r\n9.Perf accept Voucher Package created above against \r\nSingle Tickets and Mytickets Subagency\r\n10..Perf accept Target Redemption Package created \r\nabove against Single Tickets and Mytickets Subagency .",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Single sales Target Redemption event URL\r\nExpected Result:\r\nUser should be able to launch the link\r\n2. Click on Redeem Voucher button\r\nExpected Result:\r\nRedeem Voucher Modal should be displayed\r\n3. Click on Continue and select Eligible Redemption Event .\r\nExpected Result:\r\nPatron should be able to select Redemption event\r\n4. Enter Barcode and click on continue\r\nExpected Result:\r\nThe Barcode should be validated and redemption \nbuyer type should be unlocked\r\n5. Select a Price scale and verify the price display\r\nExpected Result:\r\nMake sure that the voucher covers doesn?t \ninclude fee even though Voucher ticket price is \nhigh and the Cost should be  displayed as zero if \nAll-in Pricing is disabled\r\n6. Select a Ticket for Voucher redemption and Reach on \nshopping cart\r\nExpected Result:\r\nThe voucher redemption buyer should be locked\r\n7. Click on Event Schedule link on top of shopping cart page.\r\nExpected Result:\r\nPatron should be able to Select another event\r\n8. Verify that previously entered voucher buyer types are not \nbe offered on Availabilty page\r\nExpected Result:\r\nThe previously entered voucher buyer types \nshould not be offered on availabilty page.\r\n9. Enter a new barcode and click on apply codes\r\nExpected Result:\r\nAfter entering barcode the corresponding \nRedemption buyer should get  unlocked\r\n10. Select Ticket for Redemption buyer and continue\r\nExpected Result:\r\nPatron should be able to lock seats\r\n11. Verify that under the seat grid, Voucher Buyer type and \nBarcode is displayed with voucher covers amount\r\nExpected Result:\r\nThe Voucher seat details should be displayed \ncorrectly.\r\n12. Verify Fees, Price for ticket and Total amount due is \ndisplayed correctly.\r\nExpected Result:\r\nThe Price amount in Shopping cart should be \ncorrect\r\n13. Select delivery method from Tickets delivery page and \nreach on Payment page\r\nExpected Result:\r\nPatron should be able to select delivery method \nand reach on payment page\r\n14. Verify that in Payment page :\n-under the seat grid, Voucher Buyer type and Barcode is \ndisplayed with voucher covers amount .\n \n-page Fees, Price for ticket and Total amount due is \ndisplayed correctly.\r\nExpected Result:\r\nThe details should be displayed correctly\r\n15. Click on Buy Tickets button and verify the confirmation page\r\nExpected Result:\r\nConfirmation page should be displayed\r\n16. Verify that in Confirmation  page :\n-under the seat grid, Voucher Buyer type and Barcode is \ndisplayed with voucher covers amount .\n \n-page Fees, Price for ticket and Total amount due is \ndisplayed correctly.\r\nExpected Result:\r\nThe details should be displayed correctly\r\n17. Verify Sell seats call in logs\r\nExpected Result:\r\nDetails should be passed in Sellseats call\r\n18. Verify that Redeem Voucher ticket status changed to \nRedeemed In PV\r\nExpected Result:\r\nThe status of tickets in inventory should be \nchanged to Redeemed in PV\r\n19. Verify the BOTS-Ticket service  for current Redemption \norder and verify that amount and fees are charged \ncorrectly\r\nExpected Result:\r\nFor current Redemption order the amount and \nfees should be charged correctly\r\n20. Verify the BOTS-Ticket service for Orginal Voucher order \nand verify if tickets which are redeemed are marked with \nRed icon\r\nExpected Result:\r\nFor Orginal Voucher order verify  tickets which \nare redeemed are marked with Red icon\r\n21. Verify below details in DB\n   1.Verify status of seats in \nPatron_Inventory_Seat table\n    2.Verify STATUS_CODE  in OFFER and \nOFFER_SEAT table\n     3.Verify the details in ORDER table\r\nExpected Result:\r\nAll details should be updated in DB correctly.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Single sales Target Redemption event URL\r\n2. Click on Redeem Voucher button\r\n3. Click on Continue and select Eligible Redemption Event .\r\n4. Enter Barcode and click on continue\r\n5. Select a Price scale and verify the price display\r\n6. Select a Ticket for Voucher redemption and Reach on \nshopping cart\r\n7. Click on Event Schedule link on top of shopping cart page.\r\n8. Verify that previously entered voucher buyer types are not \nbe offered on Availabilty page\r\n9. Enter a new barcode and click on apply codes\r\n10. Select Ticket for Redemption buyer and continue\r\n11. Verify that under the seat grid, Voucher Buyer type and \nBarcode is displayed with voucher covers amount\r\n12. Verify Fees, Price for ticket and Total amount due is \ndisplayed correctly.\r\n13. Select delivery method from Tickets delivery page and \nreach on Payment page\r\n14. Verify that in Payment page :\n-under the seat grid, Voucher Buyer type and Barcode is \ndisplayed with voucher covers amount .\n \n-page Fees, Price for ticket and Total amount due is \ndisplayed correctly.\r\n15. Click on Buy Tickets button and verify the confirmation page\r\n16. Verify that in Confirmation  page :\n-under the seat grid, Voucher Buyer type and Barcode is \ndisplayed with voucher covers amount .\n \n-page Fees, Price for ticket and Total amount due is \ndisplayed correctly.\r\n17. Verify Sell seats call in logs\r\n18. Verify that Redeem Voucher ticket status changed to \nRedeemed In PV\r\n19. Verify the BOTS-Ticket service  for current Redemption \norder and verify that amount and fees are charged \ncorrectly\r\n20. Verify the BOTS-Ticket service for Orginal Voucher order \nand verify if tickets which are redeemed are marked with \nRed icon\r\n21. Verify below details in DB\n   1.Verify status of seats in \nPatron_Inventory_Seat table\n    2.Verify STATUS_CODE  in OFFER and \nOFFER_SEAT table\n     3.Verify the details in ORDER table",
        "expected": "1. User should be able to launch the link\r\n2. Redeem Voucher Modal should be displayed\r\n3. Patron should be able to select Redemption event\r\n4. The Barcode should be validated and redemption \nbuyer type should be unlocked\r\n5. Make sure that the voucher covers doesn?t \ninclude fee even though Voucher ticket price is \nhigh and the Cost should be  displayed as zero if \nAll-in Pricing is disabled\r\n6. The voucher redemption buyer should be locked\r\n7. Patron should be able to Select another event\r\n8. The previously entered voucher buyer types \nshould not be offered on availabilty page.\r\n9. After entering barcode the corresponding \nRedemption buyer should get  unlocked\r\n10. Patron should be able to lock seats\r\n11. The Voucher seat details should be displayed \ncorrectly.\r\n12. The Price amount in Shopping cart should be \ncorrect\r\n13. Patron should be able to select delivery method \nand reach on payment page\r\n14. The details should be displayed correctly\r\n15. Confirmation page should be displayed\r\n16. The details should be displayed correctly\r\n17. Details should be passed in Sellseats call\r\n18. The status of tickets in inventory should be \nchanged to Redeemed in PV\r\n19. For current Redemption order the amount and \nfees should be charged correctly\r\n20. For Orginal Voucher order verify  tickets which \nare redeemed are marked with Red icon\r\n21. All details should be updated in DB correctly."
      }
    ],
    "custom_jiras": "61"
  },
  {
    "id": 30716939,
    "title": "Verify that when a user vaidates a coupon code and validates a voucher buyer type, then the voucher buyer type, coupon code buyer type including normal buyer types is displayed in mytickets redemption flow when DNECCES is set to true",
    "section_id": 1686248,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14457",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C152494",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. PV Side setup\r\n \r\n1.Have voucher package and target \r\nredemption setup available\r\n2.Setup  discount value promotion with a \r\ncoupon for a target redemption event\r\n3.Complete purchase for above target \r\nredemption event and note down the \r\nbarcodes.\r\nExpected Result:\r\nAll mentioned PV side setup should be done\r\n2. PVO Side setup:\r\n \r\n1.Set DNECCES as true\r\n2.Set BBVWDE as true\r\nExpected Result:\r\nAll mentioned PVO side setup should be done\r\n3. Launch mytickets and login as above patron\r\nExpected Result:\r\nPatrons hould be able to login successfully.\r\n4. Select Redeem voucher action and voucher ticket available in inventory and \r\nClick on continue and naviagte to target event list page\r\nExpected Result:\r\nTarget events should be listed\r\n5. Select traget event mentioned in pre-requisite for we have associated coupon\r\nExpected Result:\r\nReach the availabilty of traget redemption event\r\n6. Verify that that voucher buyer type along with normal buyers (non-coupon)are displayed\r\nExpected Result:\r\nvoucher buyer type along with normal buyers (non-coupon)should be displayed\r\n7. Enter valid  coupon code associated and  click on \r\nApply button\r\nExpected Result:\r\nVerify that voucher buyer type along with the \r\ncoupon protected buyer type is displayed.Ensure \r\nthat normal buyer types(non-coupon buyers) \r\nshould not be displayed [Check in price-scales]\r\n8. Select voucher buyer type and coupon \r\nprotected buyer type and complete the \r\ntransaction.\r\nExpected Result:\r\nPatrons hould be able to complete the voucher \r\nredemption.\r\n9. Verify logs and DB:\r\n\r\nSelect * from PVO.tdc_order where order_id=xxxx\r\nExpected Result:\r\nThe ticket status should be changed to RV for voucher and amounts should be correctly passed in SellSeats logs.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. PV Side setup\r\n \r\n1.Have voucher package and target \r\nredemption setup available\r\n2.Setup  discount value promotion with a \r\ncoupon for a target redemption event\r\n3.Complete purchase for above target \r\nredemption event and note down the \r\nbarcodes.\r\n2. PVO Side setup:\r\n \r\n1.Set DNECCES as true\r\n2.Set BBVWDE as true\r\n3. Launch mytickets and login as above patron\r\n4. Select Redeem voucher action and voucher ticket available in inventory and \r\nClick on continue and naviagte to target event list page\r\n5. Select traget event mentioned in pre-requisite for we have associated coupon\r\n6. Verify that that voucher buyer type along with normal buyers (non-coupon)are displayed\r\n7. Enter valid  coupon code associated and  click on \r\nApply button\r\n8. Select voucher buyer type and coupon \r\nprotected buyer type and complete the \r\ntransaction.\r\n9. Verify logs and DB:\r\n\r\nSelect * from PVO.tdc_order where order_id=xxxx",
        "expected": "1. All mentioned PV side setup should be done\r\n2. All mentioned PVO side setup should be done\r\n3. Patrons hould be able to login successfully.\r\n4. Target events should be listed\r\n5. Reach the availabilty of traget redemption event\r\n6. voucher buyer type along with normal buyers (non-coupon)should be displayed\r\n7. Verify that voucher buyer type along with the \r\ncoupon protected buyer type is displayed.Ensure \r\nthat normal buyer types(non-coupon buyers) \r\nshould not be displayed [Check in price-scales]\r\n8. Patrons hould be able to complete the voucher \r\nredemption.\r\n9. The ticket status should be changed to RV for voucher and amounts should be correctly passed in SellSeats logs."
      }
    ],
    "custom_jiras": "63"
  },
  {
    "id": 30716940,
    "title": "Verify credit card section is displayed during voucher redemption via single sales if a new  patron has no due amount to be paid",
    "section_id": 1686248,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14596",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_refs": "C152495",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre-requisite :\r\n \r\n1.Textcode to enable Redeem Voucher action -VREDEEME(VOUCHER_REDEMPTION_ENABLED )should be set to True.\r\n2.The new AFP permission  ?Send voucher redemption buyer types in external availability responses ?(defaults to false ) should be set  to true in Sales Permissions for Mytickets operator.\r\n3.Have an event in PV with Event Class as 'Voucher'\r\n4.Event Access Market Permission?Online Redemption??permission should  be   set  for above created event.\r\n5.Purchase tickets for this event  from PV.\r\nExpected Result:\r\nPrerequisites should be met.\r\n2. Launch the singlesale link\r\nExpected Result:\r\nThe availibility page should be shown.\r\n3. 1. Enter barcodes.\r\n2. Click on Apply Codes.\r\nExpected Result:\r\nBarcodes should be validated and availability page should be displayed with voucher redemption buyer type.\r\n4. Click on Redeem voucher button\r\nExpected Result:\r\nVoucher barcode input modal should be displayed.\r\n5. 1. Select seats with amount same as voucher amount.\r\n2. Click on Continue.\r\nExpected Result:\r\nPatron should be redirected to Shopping cart page.\r\n6. Verify that the voucher redemption process will result in a $0.00 cart since the patron has nothing to pay.\r\nExpected Result:\r\nDue amount should be zero.\r\n7. Click on Continue.\r\nExpected Result:\r\nUser should be prompted with a login page.\r\n8. 1. Select the option I don't have an MLB.com account.\r\n2. Create a new account.\r\n3. Click on Login.\r\nExpected Result:\r\nPatron should be navigated to Payment page.\r\n9. Verify that credit card section is displayed on payment page since no shipping address is available for the newly created patron.\r\nExpected Result:\r\nCredit card section should be displayed on payment page.\r\n10. Complete the transaction.\r\nExpected Result:\r\nTransaction should be successfully completed.\r\n11. Verify the BOTS-Ticket service  for current Redemption order and verify that pay type should be payment voucher.\r\nExpected Result:\r\nPay type should be Payment voucher.\r\n12. Verify the BOTS-Ticket service for Orginal Voucher order \r\nand verify if tickets which are redeemed are marked with \r\nRed icon\r\nExpected Result:\r\nFor Orginal Voucher order verify  tickets which \r\nare redeemed are marked with Red icon\r\n13. Verify below details in DB\r\n   1.Verify status of seats in Patron_Inventory_Seat table\r\n    2.Verify STATUS_CODE  in OFFER and OFFER_SEAT \r\ntable\r\n     3.Verify the details in ORDER table\r\nExpected Result:\r\nAll details should be updated in DB correctly.\r\n14. Add a new credit card by entering patron details.\r\nExpected Result:\r\nNew credit card should be added.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-requisite :\r\n \r\n1.Textcode to enable Redeem Voucher action -VREDEEME(VOUCHER_REDEMPTION_ENABLED )should be set to True.\r\n2.The new AFP permission  ?Send voucher redemption buyer types in external availability responses ?(defaults to false ) should be set  to true in Sales Permissions for Mytickets operator.\r\n3.Have an event in PV with Event Class as 'Voucher'\r\n4.Event Access Market Permission?Online Redemption??permission should  be   set  for above created event.\r\n5.Purchase tickets for this event  from PV.\r\n2. Launch the singlesale link\r\n3. 1. Enter barcodes.\r\n2. Click on Apply Codes.\r\n4. Click on Redeem voucher button\r\n5. 1. Select seats with amount same as voucher amount.\r\n2. Click on Continue.\r\n6. Verify that the voucher redemption process will result in a $0.00 cart since the patron has nothing to pay.\r\n7. Click on Continue.\r\n8. 1. Select the option I don't have an MLB.com account.\r\n2. Create a new account.\r\n3. Click on Login.\r\n9. Verify that credit card section is displayed on payment page since no shipping address is available for the newly created patron.\r\n10. Complete the transaction.\r\n11. Verify the BOTS-Ticket service  for current Redemption order and verify that pay type should be payment voucher.\r\n12. Verify the BOTS-Ticket service for Orginal Voucher order \r\nand verify if tickets which are redeemed are marked with \r\nRed icon\r\n13. Verify below details in DB\r\n   1.Verify status of seats in Patron_Inventory_Seat table\r\n    2.Verify STATUS_CODE  in OFFER and OFFER_SEAT \r\ntable\r\n     3.Verify the details in ORDER table\r\n14. Add a new credit card by entering patron details.",
        "expected": "1. Prerequisites should be met.\r\n2. The availibility page should be shown.\r\n3. Barcodes should be validated and availability page should be displayed with voucher redemption buyer type.\r\n4. Voucher barcode input modal should be displayed.\r\n5. Patron should be redirected to Shopping cart page.\r\n6. Due amount should be zero.\r\n7. User should be prompted with a login page.\r\n8. Patron should be navigated to Payment page.\r\n9. Credit card section should be displayed on payment page.\r\n10. Transaction should be successfully completed.\r\n11. Pay type should be Payment voucher.\r\n12. For Orginal Voucher order verify  tickets which \r\nare redeemed are marked with Red icon\r\n13. All details should be updated in DB correctly.\r\n14. New credit card should be added."
      }
    ],
    "custom_jiras": "62"
  },
  {
    "id": 30716941,
    "title": "Verify credit card section is not displayed during voucher redemption via My Tickets if a new patron has no due amount to be paid",
    "section_id": 1686248,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14596",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_refs": "C152496",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre-requisite :\r\n \r\n1.Textcode to enable Redeem Voucher action -VREDEEME(VOUCHER_REDEMPTION_ENABLED )should be set to True.\r\n2.The new AFP permission  ?Send voucher redemption buyer types in external availability responses ?(defaults to false ) should be set  to true in Sales Permissions for Mytickets operator.\r\n3.Have an event in PV with Event Class as 'Voucher'\r\n4.Event Access Market Permission?Online Redemption??permission should  be   set  for above created event.\r\n5.Create a new patron.\r\n6.Patron should not have any credit cards added.\r\n7.Purchase tickets for this event  from PV for newly created patron.\r\nExpected Result:\r\nPrerequisites should be met.\r\n2. Launch My Tickets URL.\r\nExpected Result:\r\nThe availibility page should be displayed.\r\n3. 1.Select 'Redeem Voucher' as Ticket Action.\r\n2.Select an order and tickets.\r\n3.Click on continue.\r\nExpected Result:\r\nTarget Redemption events page should be displayed.\r\n4. Select target redemption event.\r\nExpected Result:\r\nAvailability page should be displayed with voucher validated message.\r\n5. 1. Select seats with amount same as voucher amount.\r\n2. Click on Continue.\r\nExpected Result:\r\nPatron should be redirected to Shopping cart page.\r\n6. Verify that the voucher redemption process will result in a $0.00 cart since the patron has nothing to pay.\r\nExpected Result:\r\nDue amount should be zero.\r\n7. Click on Continue.\r\nExpected Result:\r\nUser should be displayed with payment page.\r\n8. Verify that credit card section should be hidden on payment page since the patron has no due amount to be paid.\r\nExpected Result:\r\nCredit card section should not be displayed on payment page.\r\n9. Complete the transaction.\r\nExpected Result:\r\nTransaction should be successfully completed.\r\n10. Verify the BOTS-Ticket service  for current Redemption order and verify that pay type should be payment voucher.\r\nExpected Result:\r\nPay type should be Payment voucher.\r\n11. Verify the BOTS-Ticket service for Orginal Voucher order \r\nand verify if tickets which are redeemed are marked with \r\nRed icon\r\nExpected Result:\r\nFor Orginal Voucher order verify  tickets which \r\nare redeemed are marked with Red icon\r\n12. Verify below details in DB\r\n   1.Verify status of seats in Patron_Inventory_Seat table\r\n    2.Verify STATUS_CODE  in OFFER and OFFER_SEAT \r\ntable\r\n     3.Verify the details in ORDER table\r\nExpected Result:\r\nAll details should be updated in DB correctly.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-requisite :\r\n \r\n1.Textcode to enable Redeem Voucher action -VREDEEME(VOUCHER_REDEMPTION_ENABLED )should be set to True.\r\n2.The new AFP permission  ?Send voucher redemption buyer types in external availability responses ?(defaults to false ) should be set  to true in Sales Permissions for Mytickets operator.\r\n3.Have an event in PV with Event Class as 'Voucher'\r\n4.Event Access Market Permission?Online Redemption??permission should  be   set  for above created event.\r\n5.Create a new patron.\r\n6.Patron should not have any credit cards added.\r\n7.Purchase tickets for this event  from PV for newly created patron.\r\n2. Launch My Tickets URL.\r\n3. 1.Select 'Redeem Voucher' as Ticket Action.\r\n2.Select an order and tickets.\r\n3.Click on continue.\r\n4. Select target redemption event.\r\n5. 1. Select seats with amount same as voucher amount.\r\n2. Click on Continue.\r\n6. Verify that the voucher redemption process will result in a $0.00 cart since the patron has nothing to pay.\r\n7. Click on Continue.\r\n8. Verify that credit card section should be hidden on payment page since the patron has no due amount to be paid.\r\n9. Complete the transaction.\r\n10. Verify the BOTS-Ticket service  for current Redemption order and verify that pay type should be payment voucher.\r\n11. Verify the BOTS-Ticket service for Orginal Voucher order \r\nand verify if tickets which are redeemed are marked with \r\nRed icon\r\n12. Verify below details in DB\r\n   1.Verify status of seats in Patron_Inventory_Seat table\r\n    2.Verify STATUS_CODE  in OFFER and OFFER_SEAT \r\ntable\r\n     3.Verify the details in ORDER table",
        "expected": "1. Prerequisites should be met.\r\n2. The availibility page should be displayed.\r\n3. Target Redemption events page should be displayed.\r\n4. Availability page should be displayed with voucher validated message.\r\n5. Patron should be redirected to Shopping cart page.\r\n6. Due amount should be zero.\r\n7. User should be displayed with payment page.\r\n8. Credit card section should not be displayed on payment page.\r\n9. Transaction should be successfully completed.\r\n10. Pay type should be Payment voucher.\r\n11. For Orginal Voucher order verify  tickets which \r\nare redeemed are marked with Red icon\r\n12. All details should be updated in DB correctly."
      }
    ],
    "custom_jiras": "62"
  },
  {
    "id": 30716942,
    "title": "Verify credit card section is not displayed during voucher redemption via My Tickets if an existing patron has no due amount to be paid",
    "section_id": 1686248,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14596",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 9,
    "custom_is_automated": false,
    "custom_refs": "C152497",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre-requisite :\r\n \r\n1.Textcode to enable Redeem Voucher action -VREDEEME(VOUCHER_REDEMPTION_ENABLED )should be set to True.\r\n2.The new AFP permission  ?Send voucher redemption buyer types in external availability responses ?(defaults to false ) should be set  to true in Sales Permissions for Mytickets operator.\r\n3.Have an event in PV with Event Class as 'Voucher'\r\n4.Event Access Market Permission?Online Redemption??permission should  be   set  for above created event.\r\n5.Purchase tickets for this event  from PV for a patron.\r\n6.Patron should not have any credit cards.\r\nExpected Result:\r\nPrerequisites should be met.\r\n2. Launch My Tickets URL.\r\nExpected Result:\r\nThe availibility page should be displayed.\r\n3. 1.Select 'Redeem Voucher' as Ticket Action.\r\n2.Select an order and tickets.\r\n3.Click on continue.\r\nExpected Result:\r\nTarget Redemption events page should be displayed.\r\n4. Select target redemption event.\r\nExpected Result:\r\nAvailability page should be displayed with voucher validated message.\r\n5. 1. Select seats with amount same as voucher amount.\r\n2. Click on Continue.\r\nExpected Result:\r\nPatron should be redirected to Shopping cart page.\r\n6. Verify that the voucher redemption process will result in a $0.00 cart since the patron has nothing to pay.\r\nExpected Result:\r\nDue amount should be zero.\r\n7. Click on Continue.\r\nExpected Result:\r\nUser should be displayed with payment page.\r\n8. Verify that credit card section should be hidden on payment page since the patron has no due amount to be paid.\r\nExpected Result:\r\nCredit card section should not be displayed on payment page.\r\n9. Complete the transaction.\r\nExpected Result:\r\nTransaction should be successfully completed.\r\n10. Verify the BOTS-Ticket service  for current Redemption order and verify that pay type should be payment voucher.\r\nExpected Result:\r\nPay type should be Payment voucher.\r\n11. Verify the BOTS-Ticket service for Orginal Voucher order \r\nand verify if tickets which are redeemed are marked with \r\nRed icon\r\nExpected Result:\r\nFor Orginal Voucher order verify  tickets which \r\nare redeemed are marked with Red icon\r\n12. Verify below details in DB\r\n   1.Verify status of seats in Patron_Inventory_Seat table\r\n    2.Verify STATUS_CODE  in OFFER and OFFER_SEAT \r\ntable\r\n     3.Verify the details in ORDER table\r\nExpected Result:\r\nAll details should be updated in DB correctly.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-requisite :\r\n \r\n1.Textcode to enable Redeem Voucher action -VREDEEME(VOUCHER_REDEMPTION_ENABLED )should be set to True.\r\n2.The new AFP permission  ?Send voucher redemption buyer types in external availability responses ?(defaults to false ) should be set  to true in Sales Permissions for Mytickets operator.\r\n3.Have an event in PV with Event Class as 'Voucher'\r\n4.Event Access Market Permission?Online Redemption??permission should  be   set  for above created event.\r\n5.Purchase tickets for this event  from PV for a patron.\r\n6.Patron should not have any credit cards.\r\n2. Launch My Tickets URL.\r\n3. 1.Select 'Redeem Voucher' as Ticket Action.\r\n2.Select an order and tickets.\r\n3.Click on continue.\r\n4. Select target redemption event.\r\n5. 1. Select seats with amount same as voucher amount.\r\n2. Click on Continue.\r\n6. Verify that the voucher redemption process will result in a $0.00 cart since the patron has nothing to pay.\r\n7. Click on Continue.\r\n8. Verify that credit card section should be hidden on payment page since the patron has no due amount to be paid.\r\n9. Complete the transaction.\r\n10. Verify the BOTS-Ticket service  for current Redemption order and verify that pay type should be payment voucher.\r\n11. Verify the BOTS-Ticket service for Orginal Voucher order \r\nand verify if tickets which are redeemed are marked with \r\nRed icon\r\n12. Verify below details in DB\r\n   1.Verify status of seats in Patron_Inventory_Seat table\r\n    2.Verify STATUS_CODE  in OFFER and OFFER_SEAT \r\ntable\r\n     3.Verify the details in ORDER table",
        "expected": "1. Prerequisites should be met.\r\n2. The availibility page should be displayed.\r\n3. Target Redemption events page should be displayed.\r\n4. Availability page should be displayed with voucher validated message.\r\n5. Patron should be redirected to Shopping cart page.\r\n6. Due amount should be zero.\r\n7. User should be displayed with payment page.\r\n8. Credit card section should not be displayed on payment page.\r\n9. Transaction should be successfully completed.\r\n10. Pay type should be Payment voucher.\r\n11. For Orginal Voucher order verify  tickets which \r\nare redeemed are marked with Red icon\r\n12. All details should be updated in DB correctly."
      }
    ],
    "custom_jiras": "62"
  },
  {
    "id": 30716943,
    "title": "Verify credit card section is not displayed during voucher redemption via single sales if an existing patron has no due amount to be paid",
    "section_id": 1686248,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14596",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 10,
    "custom_is_automated": false,
    "custom_refs": "C152498",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Pre-requisite :\r\n \r\n1.Textcode to enable Redeem Voucher action -VREDEEME(VOUCHER_REDEMPTION_ENABLED )should be set to True.\r\n2.The new AFP permission  ?Send voucher redemption buyer types in external availability responses ?(defaults to false ) should be set  to true in Sales Permissions for Mytickets operator.\r\n3.Have an event in PV with Event Class as 'Voucher'\r\n4.Event Access Market Permission?Online Redemption??permission should  be   set  for above created event.\r\n5.Purchase tickets for this event  from PV for a patron.\r\n6.Patron should not have any credit cards.\r\nExpected Result:\r\nPrerequisites should be met.\r\n2. Launch the singlesale link\r\nExpected Result:\r\nThe availibility page should be shown.\r\n3. Click on Redeem voucher button\r\nExpected Result:\r\nVoucher barcode input modal should be displayed.\r\n4. 1. Enter barcodes.\r\n2. Click on Apply Codes.\r\nExpected Result:\r\nBarcodes should be validated and availability page should be displayed with voucher redemption buyer type.\r\n5. 1. Select seats with amount same as voucher amount.\r\n2. Click on Continue.\r\nExpected Result:\r\nPatron should be redirected to Shopping cart page.\r\n6. Verify that the voucher redemption process will result in a $0.00 cart since the patron has nothing to pay.\r\nExpected Result:\r\nDue amount should be zero.\r\n7. Click on Continue.\r\nExpected Result:\r\nUser should be prompted with a login page.\r\n8. Verify that credit card section should be hidden on payment page since the patron has no due amount to be paid.\r\nExpected Result:\r\nCredit card section should not be displayed on payment page.\r\n9. Complete the transaction.\r\nExpected Result:\r\nTransaction should be successfully completed.\r\n10. Verify the BOTS-Ticket service  for current Redemption order and verify that pay type should be payment voucher.\r\nExpected Result:\r\nPay type should be Payment voucher.\r\n11. Verify the BOTS-Ticket service for Orginal Voucher order \r\nand verify if tickets which are redeemed are marked with \r\nRed icon\r\nExpected Result:\r\nFor Orginal Voucher order verify  tickets which \r\nare redeemed are marked with Red icon\r\n12. Verify below details in DB\r\n   1.Verify status of seats in Patron_Inventory_Seat table\r\n    2.Verify STATUS_CODE  in OFFER and OFFER_SEAT \r\ntable\r\n     3.Verify the details in ORDER table\r\nExpected Result:\r\nAll details should be updated in DB correctly.\r\n13. 1. Select the option I already have an MLB.com account.\r\n2. Enter valid patron user name and password.\r\n3. Click on Login.\r\nExpected Result:\r\nPatron should be navigated to Payment page.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Pre-requisite :\r\n \r\n1.Textcode to enable Redeem Voucher action -VREDEEME(VOUCHER_REDEMPTION_ENABLED )should be set to True.\r\n2.The new AFP permission  ?Send voucher redemption buyer types in external availability responses ?(defaults to false ) should be set  to true in Sales Permissions for Mytickets operator.\r\n3.Have an event in PV with Event Class as 'Voucher'\r\n4.Event Access Market Permission?Online Redemption??permission should  be   set  for above created event.\r\n5.Purchase tickets for this event  from PV for a patron.\r\n6.Patron should not have any credit cards.\r\n2. Launch the singlesale link\r\n3. Click on Redeem voucher button\r\n4. 1. Enter barcodes.\r\n2. Click on Apply Codes.\r\n5. 1. Select seats with amount same as voucher amount.\r\n2. Click on Continue.\r\n6. Verify that the voucher redemption process will result in a $0.00 cart since the patron has nothing to pay.\r\n7. Click on Continue.\r\n8. Verify that credit card section should be hidden on payment page since the patron has no due amount to be paid.\r\n9. Complete the transaction.\r\n10. Verify the BOTS-Ticket service  for current Redemption order and verify that pay type should be payment voucher.\r\n11. Verify the BOTS-Ticket service for Orginal Voucher order \r\nand verify if tickets which are redeemed are marked with \r\nRed icon\r\n12. Verify below details in DB\r\n   1.Verify status of seats in Patron_Inventory_Seat table\r\n    2.Verify STATUS_CODE  in OFFER and OFFER_SEAT \r\ntable\r\n     3.Verify the details in ORDER table\r\n13. 1. Select the option I already have an MLB.com account.\r\n2. Enter valid patron user name and password.\r\n3. Click on Login.",
        "expected": "1. Prerequisites should be met.\r\n2. The availibility page should be shown.\r\n3. Voucher barcode input modal should be displayed.\r\n4. Barcodes should be validated and availability page should be displayed with voucher redemption buyer type.\r\n5. Patron should be redirected to Shopping cart page.\r\n6. Due amount should be zero.\r\n7. User should be prompted with a login page.\r\n8. Credit card section should not be displayed on payment page.\r\n9. Transaction should be successfully completed.\r\n10. Pay type should be Payment voucher.\r\n11. For Orginal Voucher order verify  tickets which \r\nare redeemed are marked with Red icon\r\n12. All details should be updated in DB correctly.\r\n13. Patron should be navigated to Payment page."
      }
    ],
    "custom_jiras": "62"
  },
  {
    "id": 30716944,
    "title": "Verify the behavior when patron manually clears barcode fields and click on Apply codes in Redeem voucher modal",
    "section_id": 1686248,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14254",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 11,
    "custom_is_automated": false,
    "custom_refs": "C152499",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisites:\r\n \r\nBOTSIDE:\r\n \r\n \r\n1.Create a voucher event.\r\n        a. Create new event in PV with Event Class as 'Voucher'\r\n        b.Event Access Market Permission?Online Redemption??permission should be set for above created event.\r\n2. Purchase tickets for this event  from PV for a patron.\r\n3.Print the ticket\r\n\r\n \r\nPvo side setup:\r\n \r\n1.Perf accept the event for single sale agency\r\n2.Enable the text code true for voucher feature activation(Note:  In single sales, the voucher feature will be enabled when we have at least one buyer type in the Availability data with the voucher_restricted attribute \r\n(perf_pg_discount) set to ?true?.)\r\nExpected Result:\r\nPrerequisites should be met.\r\n2. Launch MyTickets link\r\nExpected Result:\r\nApplication should be opened\r\n3. Login with valid credentials\r\nExpected Result:\r\nPatron should be able to login\r\n4. Go to my tikcets inventory tab and choose \r\nRedeem voucher as ticket action and select \r\ntikcets to redeem and click on COntinue\r\nExpected Result:\r\nPatron should be able to select the tickets and \r\npatron should be navigated to targeted event list \r\npage\r\n5. Select an event\r\nExpected Result:\r\nPatron should be redirected to availability page\r\n6. Click on Edit voucher button\r\nExpected Result:\r\nBarcode input model should be opened with the barcode of selected tickets\r\n7. Manually clear all the barcodes entered and click on Apply codes\r\nExpected Result:\r\nPatron should be redirected back to availability page.\r\n8. Verify that Availability page got refreshed and Redeem Voucher button displayed.\r\nExpected Result:\r\nRedeem Voucher button should be displayed in Availability page.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisites:\r\n \r\nBOTSIDE:\r\n \r\n \r\n1.Create a voucher event.\r\n        a. Create new event in PV with Event Class as 'Voucher'\r\n        b.Event Access Market Permission?Online Redemption??permission should be set for above created event.\r\n2. Purchase tickets for this event  from PV for a patron.\r\n3.Print the ticket\r\n\r\n \r\nPvo side setup:\r\n \r\n1.Perf accept the event for single sale agency\r\n2.Enable the text code true for voucher feature activation(Note:  In single sales, the voucher feature will be enabled when we have at least one buyer type in the Availability data with the voucher_restricted attribute \r\n(perf_pg_discount) set to ?true?.)\r\n2. Launch MyTickets link\r\n3. Login with valid credentials\r\n4. Go to my tikcets inventory tab and choose \r\nRedeem voucher as ticket action and select \r\ntikcets to redeem and click on COntinue\r\n5. Select an event\r\n6. Click on Edit voucher button\r\n7. Manually clear all the barcodes entered and click on Apply codes\r\n8. Verify that Availability page got refreshed and Redeem Voucher button displayed.",
        "expected": "1. Prerequisites should be met.\r\n2. Application should be opened\r\n3. Patron should be able to login\r\n4. Patron should be able to select the tickets and \r\npatron should be navigated to targeted event list \r\npage\r\n5. Patron should be redirected to availability page\r\n6. Barcode input model should be opened with the barcode of selected tickets\r\n7. Patron should be redirected back to availability page.\r\n8. Redeem Voucher button should be displayed in Availability page."
      }
    ],
    "custom_jiras": "61"
  },
  {
    "id": 30716945,
    "title": "Verify the behavior while adding or removing voucher barcodes in availability page under Mytikcets redemption flow",
    "section_id": 1686248,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14268",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 12,
    "custom_is_automated": false,
    "custom_refs": "C152500",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Launch MyTickets link\r\nExpected Result:\r\nApplication should be opened\r\n2. Login with valid credentials\r\nExpected Result:\r\nPatron should be able to login\r\n3. Go to my tikcets inventory tab and choose Redeem voucher as ticket action and select tickets to redeem and Click on \r\nContinue\r\nExpected Result:\r\nPatron should be navigated to targeted event list page\r\n4. Select one event\r\nExpected Result:\r\nPatron should be navigated to Availability page\r\n5. Click on Edit voucher button\r\nExpected Result:\r\nBarcode input model should be opened\r\n6. Enter another barcode and click on apply codes\r\nExpected Result:\r\nPatron should be redirected to availability page\r\n7. Verify the voucher validation message and number of tickets displayed against Voucher buyer type\r\nExpected Result:\r\nThe message and number of tikcets should be based on the barcodes\r\n8. Click on Edit voucher button and enter same barcode and click on Apply codes\r\nExpected Result:\r\nPatron should  be redierected to availabity with message and number of tickets without counting the repeated \r\nbarcodes\r\n9. Click on Clear voucher and then Click on Redeem voucher button\r\nExpected Result:\r\nBarcode input model should be opened with no barcodes in it\r\n10. Enter the same barcode more than one time and click on apply codes\r\nExpected Result:\r\nPatron should be redirected to availabilty page with number of tikcets and validation message without counting the repeated barcodes\r\n11. PV Side setup\r\n \r\n1.Have a Voucher Redemption subagency and attach \r\naccessrole and supplier\r\n2.Create a new redemption user , associate agency and \r\ngive access roles to user\r\n3.In AFP ,Sales Permission -> Enable Voucher Redemption \r\nBuyer Types in External Requests for single sales \r\noperator,Mytickets operator and Redemption user.\r\n4.Application Property \r\nVouchers.disable.all.voucher.redemption.service.charge.validations defaults to false (This above property is the one \r\noverrides service chargest if not set we need to associate \r\nInclusive and Non-inclusive Redemption Service charges.)\r\n5.Have a  price structure for Voucher Events and Include \r\nRedemption buyers (The buyers with Voucher Redemption \r\noption checked)\r\n6.Have a  Price structure for Voucher Package and Include \r\nRedemption buyers(The buyers with Voucher Redemption \r\noption checked)\r\n7.Have a price structure for Target Redemption events and \r\nInclude Redemption buyers(The buyers with Voucher \r\nRedemption option checked)\r\n8.Have Target Redemption events available.Say Target \r\nRedemption Event 1,Target Redemption Event 2,Target \r\nRedemption  Event 3,Target Redemption  Event 4 and Target \r\nRedemption Event 5.\r\n9. Have a Target Redemption Package List with above target \r\nredemption events included.\r\n10. Have a Target Redemption Packagewith above target \r\nredemption event list included.\r\n11.Have voucher events with event class Voucher available \r\nsay  Voucher Event 1,Voucher Event 2,Voucher Event \r\n3,Voucher Event 4 and Voucher Event 5.\r\n12.Have a Voucher Payment method defined and External \r\nVoucher Payment Method in Voucher Event should contain \r\nthis Voucher Payment method\r\n13.Have Voucher Package event list with event class as \r\nVoucher and give Target Redemption Buyer, PEL and \r\nPackage in it\r\n14.Have Voucher Package with above Voucher PEL \r\nincluded\r\n15.For all Voucher Events->In Event Access->Market \r\nPermission->Give Online Redemption access  for single \r\nsales operator,Mytickets operator and Redemption user.\r\n16.Define Ticket Inclusive Service charge with Service \r\ncharge class Voucher Redemption and include Target \r\nRedemption events.\r\n17.Define Ticket Non-Inclusive Service charge with Service \r\ncharge class Voucher Redemption and include Target \r\nRedemption event\r\nExpected Result:\r\nAll mentioned PV side setup should be done\r\n12. PVO Side setup:\r\n \r\n1.Have a Voucher Redemption Sub Agency in PVO under \r\nSingle sales supplier\r\n2.Have below Properties with default values:\r\n \r\nThe max number of voucher tickets that can be selected \r\nfrom the Inventory page:\r\npvo.max_redeem_voucher_allowed_cnt = 50\r\n \r\nThe max number of vouchers to display by default in the \r\nVoucher modal window (Availability page):\r\npvo.max_voucher_barcodes_ticketIds_to_display = 3\r\n \r\n3.Set VRDMSUBC to Voucher Redemption API \r\nsubagency in Single Tickets Supplier.\r\n4.Add literal  to existing \r\nCFEM text code set up:\r\n5.Set VSALRURL to Single Tickets URL in Mytickets \r\nOrganization              \r\n6.Set VREDEEME to true in mytickets supplier\r\n7.Set VRSUPPCD to single sales supplier code in \r\nmytickets supplier.\r\n8.Set VRDMSUBC to the Voucher Redemption API Sub \r\nAgency  in mytickets supplier.\r\n9.Perf accept Voucher Package created above against \r\nSingle Tickets and Mytickets Subagency\r\n10..Perf accept Target Redemption Package created \r\nabove against Single Tickets and Mytickets Subagency .\r\nExpected Result:\r\nAll mentioned PV side setup should be done",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch MyTickets link\r\n2. Login with valid credentials\r\n3. Go to my tikcets inventory tab and choose Redeem voucher as ticket action and select tickets to redeem and Click on \r\nContinue\r\n4. Select one event\r\n5. Click on Edit voucher button\r\n6. Enter another barcode and click on apply codes\r\n7. Verify the voucher validation message and number of tickets displayed against Voucher buyer type\r\n8. Click on Edit voucher button and enter same barcode and click on Apply codes\r\n9. Click on Clear voucher and then Click on Redeem voucher button\r\n10. Enter the same barcode more than one time and click on apply codes\r\n11. PV Side setup\r\n \r\n1.Have a Voucher Redemption subagency and attach \r\naccessrole and supplier\r\n2.Create a new redemption user , associate agency and \r\ngive access roles to user\r\n3.In AFP ,Sales Permission -> Enable Voucher Redemption \r\nBuyer Types in External Requests for single sales \r\noperator,Mytickets operator and Redemption user.\r\n4.Application Property \r\nVouchers.disable.all.voucher.redemption.service.charge.validations defaults to false (This above property is the one \r\noverrides service chargest if not set we need to associate \r\nInclusive and Non-inclusive Redemption Service charges.)\r\n5.Have a  price structure for Voucher Events and Include \r\nRedemption buyers (The buyers with Voucher Redemption \r\noption checked)\r\n6.Have a  Price structure for Voucher Package and Include \r\nRedemption buyers(The buyers with Voucher Redemption \r\noption checked)\r\n7.Have a price structure for Target Redemption events and \r\nInclude Redemption buyers(The buyers with Voucher \r\nRedemption option checked)\r\n8.Have Target Redemption events available.Say Target \r\nRedemption Event 1,Target Redemption Event 2,Target \r\nRedemption  Event 3,Target Redemption  Event 4 and Target \r\nRedemption Event 5.\r\n9. Have a Target Redemption Package List with above target \r\nredemption events included.\r\n10. Have a Target Redemption Packagewith above target \r\nredemption event list included.\r\n11.Have voucher events with event class Voucher available \r\nsay  Voucher Event 1,Voucher Event 2,Voucher Event \r\n3,Voucher Event 4 and Voucher Event 5.\r\n12.Have a Voucher Payment method defined and External \r\nVoucher Payment Method in Voucher Event should contain \r\nthis Voucher Payment method\r\n13.Have Voucher Package event list with event class as \r\nVoucher and give Target Redemption Buyer, PEL and \r\nPackage in it\r\n14.Have Voucher Package with above Voucher PEL \r\nincluded\r\n15.For all Voucher Events->In Event Access->Market \r\nPermission->Give Online Redemption access  for single \r\nsales operator,Mytickets operator and Redemption user.\r\n16.Define Ticket Inclusive Service charge with Service \r\ncharge class Voucher Redemption and include Target \r\nRedemption events.\r\n17.Define Ticket Non-Inclusive Service charge with Service \r\ncharge class Voucher Redemption and include Target \r\nRedemption event\r\n12. PVO Side setup:\r\n \r\n1.Have a Voucher Redemption Sub Agency in PVO under \r\nSingle sales supplier\r\n2.Have below Properties with default values:\r\n \r\nThe max number of voucher tickets that can be selected \r\nfrom the Inventory page:\r\npvo.max_redeem_voucher_allowed_cnt = 50\r\n \r\nThe max number of vouchers to display by default in the \r\nVoucher modal window (Availability page):\r\npvo.max_voucher_barcodes_ticketIds_to_display = 3\r\n \r\n3.Set VRDMSUBC to Voucher Redemption API \r\nsubagency in Single Tickets Supplier.\r\n4.Add literal  to existing \r\nCFEM text code set up:\r\n5.Set VSALRURL to Single Tickets URL in Mytickets \r\nOrganization              \r\n6.Set VREDEEME to true in mytickets supplier\r\n7.Set VRSUPPCD to single sales supplier code in \r\nmytickets supplier.\r\n8.Set VRDMSUBC to the Voucher Redemption API Sub \r\nAgency  in mytickets supplier.\r\n9.Perf accept Voucher Package created above against \r\nSingle Tickets and Mytickets Subagency\r\n10..Perf accept Target Redemption Package created \r\nabove against Single Tickets and Mytickets Subagency .",
        "expected": "1. Application should be opened\r\n2. Patron should be able to login\r\n3. Patron should be navigated to targeted event list page\r\n4. Patron should be navigated to Availability page\r\n5. Barcode input model should be opened\r\n6. Patron should be redirected to availability page\r\n7. The message and number of tikcets should be based on the barcodes\r\n8. Patron should  be redierected to availabity with message and number of tickets without counting the repeated \r\nbarcodes\r\n9. Barcode input model should be opened with no barcodes in it\r\n10. Patron should be redirected to availabilty page with number of tikcets and validation message without counting the repeated barcodes\r\n11. All mentioned PV side setup should be done\r\n12. All mentioned PV side setup should be done"
      }
    ],
    "custom_jiras": "61"
  },
  {
    "id": 30716946,
    "title": "Verify patron is able to redeem voucher using unprinted ticket",
    "section_id": 1686248,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13898",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 13,
    "custom_is_automated": false,
    "custom_refs": "C152501",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. PV Side setup\r\n \r\n1.Have a Voucher Redemption subagency \r\nand attach accessrole and supplier\r\n2.Create a new redemption user , associate \r\nagency and give access roles to user\r\n3.In AFP ,Sales Permission -> Enable \r\nVoucher Redemption Buyer Types in \r\nExternal Requests for single sales \r\noperator,Mytickets operator and Redemption \r\nuser.\r\n4.Application Property \r\nVouchers.disable.all.voucher.redemption.service.charge.validations defaults to false (This \r\nabove property is the one overrides service \r\nchargest if not set we need to associate \r\nInclusive and Non-inclusive Redemption \r\nService charges.)\r\n5.Have a  price structure for Voucher Events \r\nand Include Redemption buyers (The buyers \r\nwith Voucher Redemption option checked)\r\n6.Have a  Price structure for Voucher \r\nPackage and Include Redemption buyers(The \r\nbuyers with Voucher Redemption option \r\nchecked)\r\n7.Have a price structure for Target \r\nRedemption events and Include Redemption \r\nbuyers(The buyers with Voucher Redemption \r\noption checked)\r\n8.Have Target Redemption events \r\navailable.Say Target Redemption Event \r\n1,Target Redemption Event 2,Target \r\nRedemption  Event 3,Target \r\nRedemption  Event 4 and Target Redemption \r\nEvent 5.\r\n9. Have a Target Redemption Package List \r\nwith above target redemption events \r\nincluded.\r\n10. Have a Target Redemption Packagewith \r\nabove target redemption event list included.\r\n11.Have voucher events with event class \r\nVoucher available say  Voucher Event \r\n1,Voucher Event 2,Voucher Event 3,Voucher \r\nEvent 4 and Voucher Event 5.\r\n12.Have a Voucher Payment method defined \r\nand External Voucher Payment Method in \r\nVoucher Event should contain this Voucher \r\nPayment method\r\n13.Have Voucher Package event list with \r\nevent class as Voucher and give Target \r\nRedemption Buyer, PEL and Package in it\r\n14.Have Voucher Package with above \r\nVoucher PEL included\r\n15.For all Voucher Events->In Event \r\nAccess->Market Permission->Give Online \r\nRedemption access  for single sales \r\noperator,Mytickets operator and Redemption \r\nuser.\r\n16.Define Ticket Inclusive Service charge \r\nwith Service charge class Voucher \r\nRedemption and include Target Redemption \r\nevents.\r\n17.Define Ticket Non-Inclusive Service charge \r\nwith Service charge class Voucher \r\nRedemption and include Target Redemption \r\nevent\r\n18.DO NOT PRINT the event .\r\nExpected Result:\r\nAll mentioned PV side setup should be done\r\n2. PVO Side setup:\r\n \r\n1.Have a Voucher Redemption Sub Agency in PVO under \r\nSingle sales supplier\r\n2.Have below Properties with default values:\r\n \r\nThe max number of voucher tickets that can be selected \r\nfrom the Inventory page:\r\npvo.max_redeem_voucher_allowed_cnt = 50\r\n \r\nThe max number of vouchers to display by default in the \r\nVoucher modal window (Availability page):\r\npvo.max_voucher_barcodes_ticketIds_to_display = 3\r\n \r\n3.Set VRDMSUBC to Voucher Redemption API \r\nsubagency in Single Tickets Supplier.\r\n4.Add literal  to existing \r\nCFEM text code set up:\r\n5.Set VSALRURL to Single Tickets URL in Mytickets \r\nOrganization              \r\n6.Set VREDEEME to true in mytickets supplier\r\n7.Set VRSUPPCD to single sales supplier code in \r\nmytickets supplier.\r\n8.Set VRDMSUBC to the Voucher Redemption API Sub \r\nAgency  in mytickets supplier.\r\n9.Perf accept Voucher Package created above against \r\nSingle Tickets and Mytickets Subagency\r\n10..Perf accept Target Redemption Package created \r\nabove against Single Tickets and Mytickets Subagency .\r\nExpected Result:\r\nAll mentioned PV side setup should be done\r\n3. Purchase tickets for voucher Package from BOTS for a \r\npatron.\r\nExpected Result:\r\nPatron shoould be able to purchase voucher \r\ntickets\r\n4. Print the purchased voucher tickets and note down the \r\nbarcodes.\r\nExpected Result:\r\nThe patron should be able to print the tickets and \r\nnote down the barcodes\r\n5. Launch Mytickets URL and login as above patron for \r\nwhich we purchased voucher tickets.\r\nExpected Result:\r\nPatron should be able to luanch the URL\r\n6. Select action Redeem Voucher in Inventory.\r\nExpected Result:\r\nPatron should be able to select Redeem \r\nvoucher action from inventory\r\n7. Verify that once Redeem voucher action is selected only \r\nOrder tab is visible and Show actionable only check box \r\nis selected.\r\nExpected Result:\r\nOnce Redeem voucher action is selected only \r\nOrder tab is visible and Show actionable only \r\ncheck box should be selected by default.\r\n8. Verify that Purchased Voucher tickets are displayed in \r\ninventory with format Voucher Buyer type then Barcode \r\nwith Voucher icon.\r\nExpected Result:\r\nPurchased Voucher tickets should be displayed \r\nin inventory with format Voucher Buyer type then \r\nBarcode with Voucher icon.\r\n9. Verify that IS_Redeemable flag is true for above tickets is \r\npassed as true in GetPatronInventory call.\r\nExpected Result:\r\nThe IS_Redeemable flag should be passed as  \r\ntrue for above tickets is passed as true in \r\nGetPatronInventory call.\r\n10. Select an UNPRINTED  Voucher Ticket and click \r\non continue\r\nExpected Result:\r\nPatron should be able to select voucher ticket \r\nand click on continue\r\n11. Verify that Patron is presented with Eligible Redemption \r\nevents page and verify Eligible Events Call in logs\r\nExpected Result:\r\nPatron should be  presented with Eligible \r\nRedemption events page and Eligible Events Call \r\nin logs should list all eligible events\r\n12. Select a Eligible Redemption event\r\nExpected Result:\r\nPatron should be able to select Eligible \r\nRedemption events page\r\n13. Verify that patron is naviagted to Availabilty page with \r\nVoucher barcodes validated having Edit and Clear button\r\nExpected Result:\r\nPatron should be naviagted to Availabilty page \r\nwith Voucher barcodes validated having Edit \r\nand Clear button\r\n14. In the Price scale verify that voucher redemption buyer type \r\nis unlocked with buyer max as number of vouchers \r\nvalidated.\r\nExpected Result:\r\nVoucher redemption buyer type should be \r\nunlocked with buyer max as number of vouchers \r\nvalidated.\r\n15. Verify the Redemption buyer ticket price,The amount that \r\nVoucher covers and the non-inclusive service charge.\r\nExpected Result:\r\nWhen all-in-pricing is used, the 'Cost' value \r\nshould always include the cost of service \r\ncharges + any amount of the ticket price which \r\nisn't covred by the voucher.  The voucher should \r\nonly covers amounts up to the value of the ticket \r\nprice.\r\n16. Select a Ticket for Redemption buyer and one ticket for \r\nnormal buyer and continue to shopping cart\r\nExpected Result:\r\nPatron should be able to naviagte to shopping \r\ncart\r\n17. Verify that under the seat grid, Voucher Buyer \r\ntype  is displayed with voucher covers amount\r\nExpected Result:\r\nThe Voucher seat details should be displayed \r\ncorrectly.\r\n18. Verify Fees, Price for ticket and Total amount due is \r\ndisplayed correctly.\r\nExpected Result:\r\nThe Price amount in Shopping cart should be \r\ncorrect\r\n19. Select delivery method from Tickets delivery page and \r\nreach on Payment page\r\nExpected Result:\r\nPatron should be able to select delivery method \r\nand reach on payment page\r\n20. Verify that in Payment page :\r\n-under the seat grid, Voucher Buyer type and Barcode is \r\ndisplayed with voucher covers amount .\r\n \r\n-page Fees, Price for ticket and Total amount due is \r\ndisplayed correctly.\r\nExpected Result:\r\nThe details should be displayed correctly\r\n21. Click on Buy Tickets button and verify the confirmation page\r\nExpected Result:\r\nConfirmation page should be displayed\r\n22. Verify that in Confirmation  page :\r\n-under the seat grid, Voucher Buyer type  is \r\ndisplayed with voucher covers amount .\r\n \r\n-page Fees, Price for ticket and Total amount due \r\nis displayed correctly.\r\nExpected Result:\r\nThe details should be displayed correctly\r\n23. Verify Sell seats call in logs\r\nExpected Result:\r\nDetails should be passed in Sellseats call\r\n24. Click on Back to Inventory button\r\nExpected Result:\r\nPatron should be naviagted back to Inventory\r\n25. Verify that Redeem Voucher ticket status changed to \r\nRedeemed\r\nExpected Result:\r\nThe status of tickets in inventory should be \r\nchanged to Redeemed\r\n26. Verify the BOTS-Ticket service  for current Redemption \r\norder and verify that amount and fees are charged \r\ncorrectly\r\nExpected Result:\r\nFor current Redemption order the amount and \r\nfees should be charged correctly\r\n27. Verify the BOTS-Ticket service for Orginal Voucher order \r\nand verify if tickets which are redeemed are marked with \r\nRed icon\r\nExpected Result:\r\nFor Orginal Voucher order verify  tickets which \r\nare redeemed are marked with Red icon\r\n28. Verify below details in DB\r\n   1.Verify status of seats in Patron_Inventory_Seat table\r\n    2.Verify STATUS_CODE  in OFFER and OFFER_SEAT \r\ntable\r\n     3.Verify the details in ORDER table\r\nExpected Result:\r\nAll details should be updated in DB correctly.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. PV Side setup\r\n \r\n1.Have a Voucher Redemption subagency \r\nand attach accessrole and supplier\r\n2.Create a new redemption user , associate \r\nagency and give access roles to user\r\n3.In AFP ,Sales Permission -> Enable \r\nVoucher Redemption Buyer Types in \r\nExternal Requests for single sales \r\noperator,Mytickets operator and Redemption \r\nuser.\r\n4.Application Property \r\nVouchers.disable.all.voucher.redemption.service.charge.validations defaults to false (This \r\nabove property is the one overrides service \r\nchargest if not set we need to associate \r\nInclusive and Non-inclusive Redemption \r\nService charges.)\r\n5.Have a  price structure for Voucher Events \r\nand Include Redemption buyers (The buyers \r\nwith Voucher Redemption option checked)\r\n6.Have a  Price structure for Voucher \r\nPackage and Include Redemption buyers(The \r\nbuyers with Voucher Redemption option \r\nchecked)\r\n7.Have a price structure for Target \r\nRedemption events and Include Redemption \r\nbuyers(The buyers with Voucher Redemption \r\noption checked)\r\n8.Have Target Redemption events \r\navailable.Say Target Redemption Event \r\n1,Target Redemption Event 2,Target \r\nRedemption  Event 3,Target \r\nRedemption  Event 4 and Target Redemption \r\nEvent 5.\r\n9. Have a Target Redemption Package List \r\nwith above target redemption events \r\nincluded.\r\n10. Have a Target Redemption Packagewith \r\nabove target redemption event list included.\r\n11.Have voucher events with event class \r\nVoucher available say  Voucher Event \r\n1,Voucher Event 2,Voucher Event 3,Voucher \r\nEvent 4 and Voucher Event 5.\r\n12.Have a Voucher Payment method defined \r\nand External Voucher Payment Method in \r\nVoucher Event should contain this Voucher \r\nPayment method\r\n13.Have Voucher Package event list with \r\nevent class as Voucher and give Target \r\nRedemption Buyer, PEL and Package in it\r\n14.Have Voucher Package with above \r\nVoucher PEL included\r\n15.For all Voucher Events->In Event \r\nAccess->Market Permission->Give Online \r\nRedemption access  for single sales \r\noperator,Mytickets operator and Redemption \r\nuser.\r\n16.Define Ticket Inclusive Service charge \r\nwith Service charge class Voucher \r\nRedemption and include Target Redemption \r\nevents.\r\n17.Define Ticket Non-Inclusive Service charge \r\nwith Service charge class Voucher \r\nRedemption and include Target Redemption \r\nevent\r\n18.DO NOT PRINT the event .\r\n2. PVO Side setup:\r\n \r\n1.Have a Voucher Redemption Sub Agency in PVO under \r\nSingle sales supplier\r\n2.Have below Properties with default values:\r\n \r\nThe max number of voucher tickets that can be selected \r\nfrom the Inventory page:\r\npvo.max_redeem_voucher_allowed_cnt = 50\r\n \r\nThe max number of vouchers to display by default in the \r\nVoucher modal window (Availability page):\r\npvo.max_voucher_barcodes_ticketIds_to_display = 3\r\n \r\n3.Set VRDMSUBC to Voucher Redemption API \r\nsubagency in Single Tickets Supplier.\r\n4.Add literal  to existing \r\nCFEM text code set up:\r\n5.Set VSALRURL to Single Tickets URL in Mytickets \r\nOrganization              \r\n6.Set VREDEEME to true in mytickets supplier\r\n7.Set VRSUPPCD to single sales supplier code in \r\nmytickets supplier.\r\n8.Set VRDMSUBC to the Voucher Redemption API Sub \r\nAgency  in mytickets supplier.\r\n9.Perf accept Voucher Package created above against \r\nSingle Tickets and Mytickets Subagency\r\n10..Perf accept Target Redemption Package created \r\nabove against Single Tickets and Mytickets Subagency .\r\n3. Purchase tickets for voucher Package from BOTS for a \r\npatron.\r\n4. Print the purchased voucher tickets and note down the \r\nbarcodes.\r\n5. Launch Mytickets URL and login as above patron for \r\nwhich we purchased voucher tickets.\r\n6. Select action Redeem Voucher in Inventory.\r\n7. Verify that once Redeem voucher action is selected only \r\nOrder tab is visible and Show actionable only check box \r\nis selected.\r\n8. Verify that Purchased Voucher tickets are displayed in \r\ninventory with format Voucher Buyer type then Barcode \r\nwith Voucher icon.\r\n9. Verify that IS_Redeemable flag is true for above tickets is \r\npassed as true in GetPatronInventory call.\r\n10. Select an UNPRINTED  Voucher Ticket and click \r\non continue\r\n11. Verify that Patron is presented with Eligible Redemption \r\nevents page and verify Eligible Events Call in logs\r\n12. Select a Eligible Redemption event\r\n13. Verify that patron is naviagted to Availabilty page with \r\nVoucher barcodes validated having Edit and Clear button\r\n14. In the Price scale verify that voucher redemption buyer type \r\nis unlocked with buyer max as number of vouchers \r\nvalidated.\r\n15. Verify the Redemption buyer ticket price,The amount that \r\nVoucher covers and the non-inclusive service charge.\r\n16. Select a Ticket for Redemption buyer and one ticket for \r\nnormal buyer and continue to shopping cart\r\n17. Verify that under the seat grid, Voucher Buyer \r\ntype  is displayed with voucher covers amount\r\n18. Verify Fees, Price for ticket and Total amount due is \r\ndisplayed correctly.\r\n19. Select delivery method from Tickets delivery page and \r\nreach on Payment page\r\n20. Verify that in Payment page :\r\n-under the seat grid, Voucher Buyer type and Barcode is \r\ndisplayed with voucher covers amount .\r\n \r\n-page Fees, Price for ticket and Total amount due is \r\ndisplayed correctly.\r\n21. Click on Buy Tickets button and verify the confirmation page\r\n22. Verify that in Confirmation  page :\r\n-under the seat grid, Voucher Buyer type  is \r\ndisplayed with voucher covers amount .\r\n \r\n-page Fees, Price for ticket and Total amount due \r\nis displayed correctly.\r\n23. Verify Sell seats call in logs\r\n24. Click on Back to Inventory button\r\n25. Verify that Redeem Voucher ticket status changed to \r\nRedeemed\r\n26. Verify the BOTS-Ticket service  for current Redemption \r\norder and verify that amount and fees are charged \r\ncorrectly\r\n27. Verify the BOTS-Ticket service for Orginal Voucher order \r\nand verify if tickets which are redeemed are marked with \r\nRed icon\r\n28. Verify below details in DB\r\n   1.Verify status of seats in Patron_Inventory_Seat table\r\n    2.Verify STATUS_CODE  in OFFER and OFFER_SEAT \r\ntable\r\n     3.Verify the details in ORDER table",
        "expected": "1. All mentioned PV side setup should be done\r\n2. All mentioned PV side setup should be done\r\n3. Patron shoould be able to purchase voucher \r\ntickets\r\n4. The patron should be able to print the tickets and \r\nnote down the barcodes\r\n5. Patron should be able to luanch the URL\r\n6. Patron should be able to select Redeem \r\nvoucher action from inventory\r\n7. Once Redeem voucher action is selected only \r\nOrder tab is visible and Show actionable only \r\ncheck box should be selected by default.\r\n8. Purchased Voucher tickets should be displayed \r\nin inventory with format Voucher Buyer type then \r\nBarcode with Voucher icon.\r\n9. The IS_Redeemable flag should be passed as  \r\ntrue for above tickets is passed as true in \r\nGetPatronInventory call.\r\n10. Patron should be able to select voucher ticket \r\nand click on continue\r\n11. Patron should be  presented with Eligible \r\nRedemption events page and Eligible Events Call \r\nin logs should list all eligible events\r\n12. Patron should be able to select Eligible \r\nRedemption events page\r\n13. Patron should be naviagted to Availabilty page \r\nwith Voucher barcodes validated having Edit \r\nand Clear button\r\n14. Voucher redemption buyer type should be \r\nunlocked with buyer max as number of vouchers \r\nvalidated.\r\n15. When all-in-pricing is used, the 'Cost' value \r\nshould always include the cost of service \r\ncharges + any amount of the ticket price which \r\nisn't covred by the voucher.  The voucher should \r\nonly covers amounts up to the value of the ticket \r\nprice.\r\n16. Patron should be able to naviagte to shopping \r\ncart\r\n17. The Voucher seat details should be displayed \r\ncorrectly.\r\n18. The Price amount in Shopping cart should be \r\ncorrect\r\n19. Patron should be able to select delivery method \r\nand reach on payment page\r\n20. The details should be displayed correctly\r\n21. Confirmation page should be displayed\r\n22. The details should be displayed correctly\r\n23. Details should be passed in Sellseats call\r\n24. Patron should be naviagted back to Inventory\r\n25. The status of tickets in inventory should be \r\nchanged to Redeemed\r\n26. For current Redemption order the amount and \r\nfees should be charged correctly\r\n27. For Orginal Voucher order verify  tickets which \r\nare redeemed are marked with Red icon\r\n28. All details should be updated in DB correctly."
      }
    ],
    "custom_jiras": "61"
  },
  {
    "id": 30716947,
    "title": "Verify patrons with null username in patron_reg table is not allowed to reset password via Mytixx",
    "section_id": 1686249,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-16051",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C152511",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "FPSIE should be true for GPL Single sales(supplier level)",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch single tickets link and select \nfew tickets\r\nExpected Result:\r\nUser should be able to luanch single sales and \nselect few tickets\r\n2. Navigate to shopping cart and click on \ncontinue\r\nExpected Result:\r\nUser should be able to continue from shopping \ncart\r\n3. In Login modal -Select \"I don?t have an account\" \nand enter email credentails (Email entered is \nsay-marchy123@ust.com)\r\nExpected Result:\r\nPatron should be able to login\r\n4. Payment page-Do not fill in credit card data and \nCancel the order\r\nExpected Result:\r\nOrder should be cancelled.\r\n5. Run the query \nselect * from pvo.patron_reg where \nusername='nggx:juny123@ust.com';\r\nExpected Result:\r\nThe origin_type_id should be 20\r\n6. Go to Maintenance site->Patron&Orders->Patron. \nSearch for patron using email id \n'marchy123@ust.com' and note down the pvo \npatron_id\r\nExpected Result:\r\nUser should get a patron id\r\n7. Run the query \nselect * from pvo.patron_reg where patron_id=\r\nExpected Result:\r\nThe origin_type_id should be 11 and username should be null.\r\n8. Launch Mytixx link and click Reset password \nbutton\r\nExpected Result:\r\nReset password page should be opened\r\n9. Enter email if od \"incomplete patron\" and submit\r\nExpected Result:\r\nError should be displayed and no reset \npassword email should be received",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch single tickets link and select \nfew tickets\r\n2. Navigate to shopping cart and click on \ncontinue\r\n3. In Login modal -Select \"I don?t have an account\" \nand enter email credentails (Email entered is \nsay-marchy123@ust.com)\r\n4. Payment page-Do not fill in credit card data and \nCancel the order\r\n5. Run the query \nselect * from pvo.patron_reg where \nusername='nggx:juny123@ust.com';\r\n6. Go to Maintenance site->Patron&Orders->Patron. \nSearch for patron using email id \n'marchy123@ust.com' and note down the pvo \npatron_id\r\n7. Run the query \nselect * from pvo.patron_reg where patron_id=\r\n8. Launch Mytixx link and click Reset password \nbutton\r\n9. Enter email if od \"incomplete patron\" and submit",
        "expected": "1. User should be able to luanch single sales and \nselect few tickets\r\n2. User should be able to continue from shopping \ncart\r\n3. Patron should be able to login\r\n4. Order should be cancelled.\r\n5. The origin_type_id should be 20\r\n6. User should get a patron id\r\n7. The origin_type_id should be 11 and username should be null.\r\n8. Reset password page should be opened\r\n9. Error should be displayed and no reset \npassword email should be received"
      }
    ],
    "custom_jiras": "64.1"
  },
  {
    "id": 30716948,
    "title": "Verify PVO doesnot write out bad GPL Mytickets patron data if a new Mytickets account is created with same email as previous incomplete patron",
    "section_id": 1686249,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-16051",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C152512",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "FPSIE should be true for GPL Single sales(supplier level)",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch single tickets link and select \nfew tickets\r\nExpected Result:\r\nUser should be able to luanch single sales and \nselect few tickets\r\n2. Navigate to shopping cart and click on \ncontinue\r\nExpected Result:\r\nUser should be able to continue from shopping \ncart\r\n3. In Login modal -Select \"I don?t have an account\" \nand enter email credentails (Email entered is \nsay-marchy123@ust.com)\r\nExpected Result:\r\nPatron should be able to login\r\n4. Payment page-Do not fill in credit card data and \nCancel the order\r\nExpected Result:\r\nOrder should be cancelled.\r\n5. Run the query \nselect * from pvo.patron_reg where \nusername='nggx:juny123@ust.com';\r\nExpected Result:\r\nThe origin_type_id should be 20\r\n6. Go to Maintenance site->Patron&Orders->Patron. \nSearch for patron using email id \n'marchy123@ust.com' and note down the pvo \npatron_id\r\nExpected Result:\r\nUser should get a patron id\r\n7. Run the query \nselect * from pvo.patron_reg where patron_id=\r\nExpected Result:\r\nThe origin_type_id should be 11 and username should be null.\r\n8. Run the query\nselect * from pvo.supplier_patron where patron_id=\r\nExpected Result:\r\nNo rows should  exists\r\n9. .Run the query \nselect * from PVO.sub_agency_patron where patron_id =\r\nExpected Result:\r\nNo rows should  exists\r\n10. Launch Mytixx link and click Create new account button\r\nExpected Result:\r\nNew account creation page should be displayed.\r\n11. Create a new account with same email id (entered in single sales login modal)\r\nExpected Result:\r\nAccount should be created.\r\n12. Go to Maintenance site->Patron&Orders->Patron. \nSearch for patron using email id \n'marchy123@ust.com' and see that one more \nrow is retrieved that the one got in Step 7.\r\nExpected Result:\r\nThe new row's patron_id should be same as the \npatron_id in patron_reg table with origin_id as 11\r\n13. select * from pvo.patron_reg where patron_id=.\r\nExpected Result:\r\nThe  origin_type_id should be 11 and username should be  updated like 'supplier:supplier patronid' (like 'nggx:180625')\r\n14. Run the query\nselect * from pvo.supplier_patron where patron_id=.\r\nExpected Result:\r\none row should be  retrieved\r\n15. Run the query \nselect * from PVO.sub_agency_patron where patron_id =\r\nExpected Result:\r\none row should be  retrieved\r\n16. Try log in using account id/ pw in mytixx\r\nExpected Result:\r\n- User shoule be able to login\r\n17. Create new account with same email id of \"incomplete\" patron\r\nExpected Result:\r\nError message should be displayed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch single tickets link and select \nfew tickets\r\n2. Navigate to shopping cart and click on \ncontinue\r\n3. In Login modal -Select \"I don?t have an account\" \nand enter email credentails (Email entered is \nsay-marchy123@ust.com)\r\n4. Payment page-Do not fill in credit card data and \nCancel the order\r\n5. Run the query \nselect * from pvo.patron_reg where \nusername='nggx:juny123@ust.com';\r\n6. Go to Maintenance site->Patron&Orders->Patron. \nSearch for patron using email id \n'marchy123@ust.com' and note down the pvo \npatron_id\r\n7. Run the query \nselect * from pvo.patron_reg where patron_id=\r\n8. Run the query\nselect * from pvo.supplier_patron where patron_id=\r\n9. .Run the query \nselect * from PVO.sub_agency_patron where patron_id =\r\n10. Launch Mytixx link and click Create new account button\r\n11. Create a new account with same email id (entered in single sales login modal)\r\n12. Go to Maintenance site->Patron&Orders->Patron. \nSearch for patron using email id \n'marchy123@ust.com' and see that one more \nrow is retrieved that the one got in Step 7.\r\n13. select * from pvo.patron_reg where patron_id=.\r\n14. Run the query\nselect * from pvo.supplier_patron where patron_id=.\r\n15. Run the query \nselect * from PVO.sub_agency_patron where patron_id =\r\n16. Try log in using account id/ pw in mytixx\r\n17. Create new account with same email id of \"incomplete\" patron",
        "expected": "1. User should be able to luanch single sales and \nselect few tickets\r\n2. User should be able to continue from shopping \ncart\r\n3. Patron should be able to login\r\n4. Order should be cancelled.\r\n5. The origin_type_id should be 20\r\n6. User should get a patron id\r\n7. The origin_type_id should be 11 and username should be null.\r\n8. No rows should  exists\r\n9. No rows should  exists\r\n10. New account creation page should be displayed.\r\n11. Account should be created.\r\n12. The new row's patron_id should be same as the \npatron_id in patron_reg table with origin_id as 11\r\n13. The  origin_type_id should be 11 and username should be  updated like 'supplier:supplier patronid' (like 'nggx:180625')\r\n14. one row should be  retrieved\r\n15. one row should be  retrieved\r\n16. - User shoule be able to login\r\n17. Error message should be displayed"
      }
    ],
    "custom_jiras": "64.1"
  },
  {
    "id": 30716949,
    "title": "Verify SSO login is successful when PTSK is not set ,integrator_salt_value is set, mathcing property name is found and Secret key matches the property value",
    "section_id": 1686249,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-16204",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C152513",
    "custom_pvo_pvodc_category": 5,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Do not set PTSK at any levels\r\n2.Set the property mlbam.integrator_salt_value=7Gh718Kjsjh918",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch MobileMyTicketsTester.jsp page and select Single Sign API tab\r\nExpected Result:\r\nSingle Sign API tab is opened\r\n2. Enter\nSupplier patron ID\nEpoch time\nSecret Key =7Gh718Kjsjh918\nClick Generate Hash button\r\nExpected Result:\r\nGenerated Hash Value (tpssm) is displayed\r\n3. Enter \ntpssu\ntpsst\ntpssm\nIntegrator name=mlbam\nClick SSO login button\r\nExpected Result:\r\nSingle Sign-On JSON Response shows result\r\n4. Launch MTD link with rdpid\n\nExample\n\nhttp://pvoqa1.tickets.com/buy/MyTicketsServlet?orgid=22570&agency=NGSM_MLB_MYTIXX&tpssu=173232&tpsst=1517381100766&tpssm=XFMGe4e/653PN0zvTj7r2TPWrDE=&rdpid=mlbam\r\nExpected Result:\r\nUser is shown landing page of Mytixx. User is not asked to login\r\n5. Launch MTD link without rdpid\n\nExample\n\nhttps://pvoqa1.tickets.com/buy/MyTicketsServlet?orgid=22570&agency=NGSM_MLB_MYTIXX&tpssu=173232&tpsst=1517381100766&tpssm=XFMGe4e/653PN0zvTj7r2TPWrDE=\r\nExpected Result:\r\nSSLOGFM message should be shown on Login page",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch MobileMyTicketsTester.jsp page and select Single Sign API tab\r\n2. Enter\nSupplier patron ID\nEpoch time\nSecret Key =7Gh718Kjsjh918\nClick Generate Hash button\r\n3. Enter \ntpssu\ntpsst\ntpssm\nIntegrator name=mlbam\nClick SSO login button\r\n4. Launch MTD link with rdpid\n\nExample\n\nhttp://pvoqa1.tickets.com/buy/MyTicketsServlet?orgid=22570&agency=NGSM_MLB_MYTIXX&tpssu=173232&tpsst=1517381100766&tpssm=XFMGe4e/653PN0zvTj7r2TPWrDE=&rdpid=mlbam\r\n5. Launch MTD link without rdpid\n\nExample\n\nhttps://pvoqa1.tickets.com/buy/MyTicketsServlet?orgid=22570&agency=NGSM_MLB_MYTIXX&tpssu=173232&tpsst=1517381100766&tpssm=XFMGe4e/653PN0zvTj7r2TPWrDE=",
        "expected": "1. Single Sign API tab is opened\r\n2. Generated Hash Value (tpssm) is displayed\r\n3. Single Sign-On JSON Response shows result\r\n4. User is shown landing page of Mytixx. User is not asked to login\r\n5. SSLOGFM message should be shown on Login page"
      }
    ],
    "custom_jiras": null
  },
  {
    "id": 30716950,
    "title": "Verify SSO login is failed when PTSK is set, integrator_salt_value  is not set, Secret key does not match PTSK value",
    "section_id": 1686249,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-16204",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C152514",
    "custom_pvo_pvodc_category": 5,
    "custom_pvocodelines": null,
    "custom_preconds": "1. Set: PTSK=7Gh718Kjsjh918\r\n2. Do not set integrator_salt_value",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch MobileMyTicketsTester.jsp page and select Single Sign API tab\r\nExpected Result:\r\nSingle Sign API tab is opened\r\n2. Enter\nSupplier patron ID\nEpoch time\nSecret Key =1234\nClick Generate Hash button\r\nExpected Result:\r\nGenerated Hash Value (tpssm) is displayed\r\n3. Enter \ntpssu\ntpsst\ntpssm\nIntegrator name=mlbam\nClick SSO login button\r\nExpected Result:\r\nSingle Sign-On JSON Response shows SSLOGFM error\r\n4. Launch MTD link with rdpid\n\nExample\n\nhttp://pvoqa1.tickets.com/buy/MyTicketsServlet?orgid=22570&agency=NGSM_MLB_MYTIXX&tpssu=173232&tpsst=1517382391886&tpssm=pgCUrwIUZo8M6lszhpL6Jmz+T7A=&rdpid=mlbam\r\nExpected Result:\r\nSSLOGFM error is shown in login page\r\n5. Launch MTD link without rdpid\n\nExample\n\nhttp://pvoqa1.tickets.com/buy/MyTicketsServlet?orgid=22570&agency=NGSM_MLB_MYTIXX&tpssu=173232&tpsst=1517382391886&tpssm=pgCUrwIUZo8M6lszhpL6Jmz+T7A= \r\nExpected Result:\r\nSSLOGFM error is shown in login page",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch MobileMyTicketsTester.jsp page and select Single Sign API tab\r\n2. Enter\nSupplier patron ID\nEpoch time\nSecret Key =1234\nClick Generate Hash button\r\n3. Enter \ntpssu\ntpsst\ntpssm\nIntegrator name=mlbam\nClick SSO login button\r\n4. Launch MTD link with rdpid\n\nExample\n\nhttp://pvoqa1.tickets.com/buy/MyTicketsServlet?orgid=22570&agency=NGSM_MLB_MYTIXX&tpssu=173232&tpsst=1517382391886&tpssm=pgCUrwIUZo8M6lszhpL6Jmz+T7A=&rdpid=mlbam\r\n5. Launch MTD link without rdpid\n\nExample\n\nhttp://pvoqa1.tickets.com/buy/MyTicketsServlet?orgid=22570&agency=NGSM_MLB_MYTIXX&tpssu=173232&tpsst=1517382391886&tpssm=pgCUrwIUZo8M6lszhpL6Jmz+T7A=",
        "expected": "1. Single Sign API tab is opened\r\n2. Generated Hash Value (tpssm) is displayed\r\n3. Single Sign-On JSON Response shows SSLOGFM error\r\n4. SSLOGFM error is shown in login page\r\n5. SSLOGFM error is shown in login page"
      }
    ],
    "custom_jiras": null
  },
  {
    "id": 30716951,
    "title": "Verify SSO login is successful when PTSK and integrator_salt_value is set with different values, mathcing property name is found and Secret key matches the property value",
    "section_id": 1686249,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-16204",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C152515",
    "custom_pvo_pvodc_category": 5,
    "custom_pvocodelines": null,
    "custom_preconds": "Set:\r\nPTSK=1234\r\nmlbam.integrator_salt_value=123",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch MobileMyTicketsTester.jsp page and select Single Sign API tab\r\nExpected Result:\r\nSingle Sign API tab is opened\r\n2. Enter\nSupplier patron ID\nEpoch time\nSecret Key =123\nClick Generate Hash button\r\nExpected Result:\r\nGenerated Hash Value (tpssm) is displayed\r\n3. Enter \ntpssu\ntpsst\ntpssm\nIntegrator name=mlbam\nClick SSO login button\r\nExpected Result:\r\nSingle Sign-On JSON Response shows success result\r\n4. Launch MTD link with rdpid\n\nExample\n\nhttps://pvoqa1.tickets.com/buy/MyTicketsServlet?orgid=22570&agency=NGSM_MLB_MYTIXX&tpssu=173232&tpsst=1517389591878&tpssm=sE6S74cGNCcNKWkjuTN4Lh8w3AY=&rdpid=mlbam\r\nExpected Result:\r\nUser is shown landing page of mytixx and user is not asked to log in\r\n5. Launch MTD link without rdpid\n\nExample\nhttps://pvoqa1.tickets.com/buy/MyTicketsServlet?orgid=22570&agency=NGSM_MLB_MYTIXX&tpssu=173232&tpsst=1517389799627&tpssm=oEATjoKV7PffUnejvJgR3YpBiJQ=\r\nExpected Result:\r\nSSLOGFM errror is shown on login page",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch MobileMyTicketsTester.jsp page and select Single Sign API tab\r\n2. Enter\nSupplier patron ID\nEpoch time\nSecret Key =123\nClick Generate Hash button\r\n3. Enter \ntpssu\ntpsst\ntpssm\nIntegrator name=mlbam\nClick SSO login button\r\n4. Launch MTD link with rdpid\n\nExample\n\nhttps://pvoqa1.tickets.com/buy/MyTicketsServlet?orgid=22570&agency=NGSM_MLB_MYTIXX&tpssu=173232&tpsst=1517389591878&tpssm=sE6S74cGNCcNKWkjuTN4Lh8w3AY=&rdpid=mlbam\r\n5. Launch MTD link without rdpid\n\nExample\nhttps://pvoqa1.tickets.com/buy/MyTicketsServlet?orgid=22570&agency=NGSM_MLB_MYTIXX&tpssu=173232&tpsst=1517389799627&tpssm=oEATjoKV7PffUnejvJgR3YpBiJQ=",
        "expected": "1. Single Sign API tab is opened\r\n2. Generated Hash Value (tpssm) is displayed\r\n3. Single Sign-On JSON Response shows success result\r\n4. User is shown landing page of mytixx and user is not asked to log in\r\n5. SSLOGFM errror is shown on login page"
      }
    ],
    "custom_jiras": null
  },
  {
    "id": 30716952,
    "title": "Verify SSO login is failed when PTSK and integrator_salt_value is set with different values, mathcing property name is found and Secret key matches the PTSK value",
    "section_id": 1686249,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-16204",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C152516",
    "custom_pvo_pvodc_category": 5,
    "custom_pvocodelines": null,
    "custom_preconds": "Set:\r\nPTSK=1234\r\nmlbam.integrator_salt_value=123",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch MobileMyTicketsTester.jsp page and select Single Sign API tab\r\nExpected Result:\r\nSingle Sign API tab is opened\r\n2. Enter\nSupplier patron ID\nEpoch time\nSecret Key =1234\nClick Generate Hash button\r\nExpected Result:\r\nGenerated Hash Value (tpssm) is displayed\r\n3. Enter \ntpssu\ntpsst\ntpssm\nIntegrator name=mlbam\nClick SSO login button\r\nExpected Result:\r\nSingle Sign-On JSON Response shows SSLOGFM error\r\n4. Launch MTD link with rdpid\n\nExample\n\nhttps://pvoqa1.tickets.com/buy/MyTicketsServlet?orgid=22570&agency=NGSM_MLB_MYTIXX&tpssu=173232&tpsst=1517389799627&tpssm=oEATjoKV7PffUnejvJgR3YpBiJQ=&rdpid=mlbam\r\nExpected Result:\r\nSSLOGFM errror is shown on login page\r\n5. Launch MTD link without rdpid\n\nExample\nhttps://pvoqa1.tickets.com/buy/MyTicketsServlet?orgid=22570&agency=NGSM_MLB_MYTIXX&tpssu=173232&tpsst=1517389799627&tpssm=oEATjoKV7PffUnejvJgR3YpBiJQ=\r\nExpected Result:\r\nUser is shown landing page of mytixx and user is not asked to log in",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch MobileMyTicketsTester.jsp page and select Single Sign API tab\r\n2. Enter\nSupplier patron ID\nEpoch time\nSecret Key =1234\nClick Generate Hash button\r\n3. Enter \ntpssu\ntpsst\ntpssm\nIntegrator name=mlbam\nClick SSO login button\r\n4. Launch MTD link with rdpid\n\nExample\n\nhttps://pvoqa1.tickets.com/buy/MyTicketsServlet?orgid=22570&agency=NGSM_MLB_MYTIXX&tpssu=173232&tpsst=1517389799627&tpssm=oEATjoKV7PffUnejvJgR3YpBiJQ=&rdpid=mlbam\r\n5. Launch MTD link without rdpid\n\nExample\nhttps://pvoqa1.tickets.com/buy/MyTicketsServlet?orgid=22570&agency=NGSM_MLB_MYTIXX&tpssu=173232&tpsst=1517389799627&tpssm=oEATjoKV7PffUnejvJgR3YpBiJQ=",
        "expected": "1. Single Sign API tab is opened\r\n2. Generated Hash Value (tpssm) is displayed\r\n3. Single Sign-On JSON Response shows SSLOGFM error\r\n4. SSLOGFM errror is shown on login page\r\n5. User is shown landing page of mytixx and user is not asked to log in"
      }
    ],
    "custom_jiras": null
  },
  {
    "id": 30716953,
    "title": "Verify that MLB login link form is presented to user when  user logs into Mytickets after creating a new account via Single sales with LMATMT as false",
    "section_id": 1686250,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13866",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C152533",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1. Set FMLBLWME as true at Mytickets supplier level\r\n2. Set UNMTLGEN as true at Mytickets supplier level\r\n3. Set LMATMT as false at Single sales supplier level\r\n4. Set SPLITDE=true at Single sales supplier level",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch MLB Single sales link\r\nExpected Result:\r\nCalendar page is displayed\r\n2. Click T link against any event\r\nExpected Result:\r\nUser is taken into event's availability page\r\n3. Select number of tickets from required section/price scale and click Continue button\r\nExpected Result:\r\nShopping cart is displayed with selected event and ticket details\r\n4. Click Continue button on the cart page\r\nExpected Result:\r\nLogin modal is opened\r\n5. On the login modal,\n\n1.Select I don't have a MLB.com account option \n2.Enter Login ID,Password and Confirm Password fields\n3.Click Login button\n\r\nExpected Result:\r\nDelivery page is opened\r\n6. 1.Select desired Delivery method and click Edit/Add address button\n2. Fill in Delivery address details on the modal and click Save\n3. Click Continue button on the Delivery page\r\nExpected Result:\r\nUser is navigated to Payment page\r\n7. Fill in all required fields on the payment page:\n\n1.Add a new credit card- click Add new card button. Fill in Card Type, card Number, Expiry date, CVC, Name fields, Address fields, Country, State, Postal code, Phone number and click Submit\n\n2.Fill in Email and Mobile phone fields \n3.Opt in/out insurance\n4.Fill in gender and dob if applicable\n5.Select Marketing source info\n6.Select DPUs if applicable\n\nClick Buy Tickets button\r\nExpected Result:\r\nUser is navigated to Conformation page.\n\n \"Manage Tickets\" button & LMLCMSG text is not displayed on the confirmation page\r\n8. Log into PV application->Go to Ticketing->Patron Management->Advanced search->Enter MLB.com email id of the patron created in Single sales flow->FIND\r\nExpected Result:\r\nPatron details are opened\r\n9. Click the icon against Account ID field\r\nExpected Result:\r\nAccount Details modal is opened\r\n10. Note down the Account ID and Password\r\nExpected Result:\r\nAccount ID and Password is noted down\r\n11. Launch Mytickets link and enter the Account ID and password noted in previous step. Click Login button\r\nExpected Result:\r\nUser is logged in and shown the T&C page\r\n12. Click Accept button\r\nExpected Result:\r\n1. MLB force link form is displayed to user. \n2. I already have an account on MLB.com radio button is selected by default.\n3.The following MLBLWMRM message is displayed at the top of the page\n\n\"You must have an MLB.com account linked to your MyTickets account in order to continue. Please enter the required information below to link your MyTickets account to your MLB.com account. If you do not have an MLB.com account choose the \"I don't have an account on MLB.com\" option.\"\r\n13. On the form,\n\n1. Select I already have an account on MLB.com(it would be preselected)\n2. Enter MLB.com email of the patron created in single sales\n3. Enter password (the same password entered in single sales login modal)\n4. Enter a nick name\n5.Click Save changes\r\nExpected Result:\r\n1. \"Your MyTickets account has been successfully linked to your MLB.com account.\" message is shown\n\n2.My Tickets Accounts grid is displayed with Account#,Name, Nick Name and Remove icon",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch MLB Single sales link\r\n2. Click T link against any event\r\n3. Select number of tickets from required section/price scale and click Continue button\r\n4. Click Continue button on the cart page\r\n5. On the login modal,\n\n1.Select I don't have a MLB.com account option \n2.Enter Login ID,Password and Confirm Password fields\n3.Click Login button\n\r\n6. 1.Select desired Delivery method and click Edit/Add address button\n2. Fill in Delivery address details on the modal and click Save\n3. Click Continue button on the Delivery page\r\n7. Fill in all required fields on the payment page:\n\n1.Add a new credit card- click Add new card button. Fill in Card Type, card Number, Expiry date, CVC, Name fields, Address fields, Country, State, Postal code, Phone number and click Submit\n\n2.Fill in Email and Mobile phone fields \n3.Opt in/out insurance\n4.Fill in gender and dob if applicable\n5.Select Marketing source info\n6.Select DPUs if applicable\n\nClick Buy Tickets button\r\n8. Log into PV application->Go to Ticketing->Patron Management->Advanced search->Enter MLB.com email id of the patron created in Single sales flow->FIND\r\n9. Click the icon against Account ID field\r\n10. Note down the Account ID and Password\r\n11. Launch Mytickets link and enter the Account ID and password noted in previous step. Click Login button\r\n12. Click Accept button\r\n13. On the form,\n\n1. Select I already have an account on MLB.com(it would be preselected)\n2. Enter MLB.com email of the patron created in single sales\n3. Enter password (the same password entered in single sales login modal)\n4. Enter a nick name\n5.Click Save changes",
        "expected": "1. Calendar page is displayed\r\n2. User is taken into event's availability page\r\n3. Shopping cart is displayed with selected event and ticket details\r\n4. Login modal is opened\r\n5. Delivery page is opened\r\n6. User is navigated to Payment page\r\n7. User is navigated to Conformation page.\n\n \"Manage Tickets\" button & LMLCMSG text is not displayed on the confirmation page\r\n8. Patron details are opened\r\n9. Account Details modal is opened\r\n10. Account ID and Password is noted down\r\n11. User is logged in and shown the T&C page\r\n12. 1. MLB force link form is displayed to user. \n2. I already have an account on MLB.com radio button is selected by default.\n3.The following MLBLWMRM message is displayed at the top of the page\n\n\"You must have an MLB.com account linked to your MyTickets account in order to continue. Please enter the required information below to link your MyTickets account to your MLB.com account. If you do not have an MLB.com account choose the \"I don't have an account on MLB.com\" option.\"\r\n13. 1. \"Your MyTickets account has been successfully linked to your MLB.com account.\" message is shown\n\n2.My Tickets Accounts grid is displayed with Account#,Name, Nick Name and Remove icon"
      }
    ],
    "custom_jiras": "60.1"
  },
  {
    "id": 30716954,
    "title": "Verify creating new account with unified login enabled and FMLBLWME  as true.",
    "section_id": 1686250,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13866",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C152534",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Set UNMTLGEN=true and FMLBLWME=true at Mytickets supplier level",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the My Tickets application and click Create New account button\r\nExpected Result:\r\n1.Account creation form is opened\n2.The form has MLB Account Information section with following fields:\n\na.I already have an account on MLB.com and I don't have an account on MLB.com fields with I already have an account on MLB.com pre-selected\nb.MLB.com email\nc.Password\n\n\r\n2. 1.Fill in Contact information fields, Phone fields\n2.Select \"I donthave an account on MLB.com\" button\n3.Enter MLB.com email \n4.Enter Password and Confirm password\n5.Enter Nick Name\n\nSelect T&C checkbox\nClick Save changes button\r\nExpected Result:\r\n1. The following NEWACINM message is displayed at the top\n\nWelcome {0}!Your login id is: {1}. Please make sure to write it down and store in a safe place.\n\n{0} must be replaced with First name and Last Name\n{1} must be replaced with MLB.com Email ID\n\n\r\n3. Verify Link MLB accounts tab is present\r\nExpected Result:\r\n Link MLB accounts tab is present\r\n4. Click  Link MLB accounts tab \r\nExpected Result:\r\nLinking page is opened with My Tickets Accounts grid that ha Account#, Name, Nick Name and Remove icon\r\n5. Logout and login-Verify that user is not presented with MLB.com login link form  as the account is alaredy linked\r\nExpected Result:\r\nUser should not be displayed with  MLB.com login link page.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the My Tickets application and click Create New account button\r\n2. 1.Fill in Contact information fields, Phone fields\n2.Select \"I donthave an account on MLB.com\" button\n3.Enter MLB.com email \n4.Enter Password and Confirm password\n5.Enter Nick Name\n\nSelect T&C checkbox\nClick Save changes button\r\n3. Verify Link MLB accounts tab is present\r\n4. Click  Link MLB accounts tab \r\n5. Logout and login-Verify that user is not presented with MLB.com login link form  as the account is alaredy linked",
        "expected": "1. 1.Account creation form is opened\n2.The form has MLB Account Information section with following fields:\n\na.I already have an account on MLB.com and I don't have an account on MLB.com fields with I already have an account on MLB.com pre-selected\nb.MLB.com email\nc.Password\n\n\r\n2. 1. The following NEWACINM message is displayed at the top\n\nWelcome {0}!Your login id is: {1}. Please make sure to write it down and store in a safe place.\n\n{0} must be replaced with First name and Last Name\n{1} must be replaced with MLB.com Email ID\n\n\r\n3.  Link MLB accounts tab is present\r\n4. Linking page is opened with My Tickets Accounts grid that ha Account#, Name, Nick Name and Remove icon\r\n5. User should not be displayed with  MLB.com login link page."
      }
    ],
    "custom_jiras": "60.1"
  },
  {
    "id": 30716955,
    "title": "Verify the user is presented with the MLB.com login link form, if the account is created via PV BOTS",
    "section_id": 1686250,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13866",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C152535",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1. Set FMLBLWME as true at Mytickets supplier level\r\n2. Set UNMTLGEN as true at Mytickets supplier level",
    "custom_test_purpose": null,
    "custom_steps": "1. Log into PV application->Go to Ticketing->Patron Management->Click New\r\nExpected Result:\r\nAccount creation page is opened\r\n2. Fill in:\n\n1. First Name\n2. Last Name\n3. Date Of Birth\n4. Gender\n5. Phone\n6. Address fields\n7. Email\n\nClick Apply changes\n\r\nExpected Result:\r\nNew patron is created\r\n3. Click the icon against Account ID field\r\nExpected Result:\r\nAccount Details modal is opened\r\n4. Note down the Account ID and Password\r\nExpected Result:\r\nAccount ID and Password is noted down\r\n5. Launch Mytickets link and enter the Account ID and password noted in previous step. Click Login button\r\nExpected Result:\r\nUser is logged in and shown the T&C page\r\n6. Click Accept button\r\nExpected Result:\r\n1. MLB force link form is displayed to user. \n2. I already have an account on MLB.com radio button is selected by default.\n3.The following MLBLWMRM message is displayed at the top of the page\n\n\"You must have an MLB.com account linked to your MyTickets account in order to continue. Please enter the required information below to link your MyTickets account to your MLB.com account. If you do not have an MLB.com account choose the \"I don't have an account on MLB.com\" option.\"\r\n7. On the form,\n\n1. Select I don't have an account on MLB.com\n2. Enter MLB.com email \n3. Enter password and Confirm Password\n4. Enter a nick name\n5.Click Save changes\r\nExpected Result:\r\n1. \"Your MyTickets account has been successfully linked to your MLB.com account.\" message is shown\n\n2.My Tickets Accounts grid is displayed with Account#,Name, Nick Name and Remove icon",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Log into PV application->Go to Ticketing->Patron Management->Click New\r\n2. Fill in:\n\n1. First Name\n2. Last Name\n3. Date Of Birth\n4. Gender\n5. Phone\n6. Address fields\n7. Email\n\nClick Apply changes\n\r\n3. Click the icon against Account ID field\r\n4. Note down the Account ID and Password\r\n5. Launch Mytickets link and enter the Account ID and password noted in previous step. Click Login button\r\n6. Click Accept button\r\n7. On the form,\n\n1. Select I don't have an account on MLB.com\n2. Enter MLB.com email \n3. Enter password and Confirm Password\n4. Enter a nick name\n5.Click Save changes",
        "expected": "1. Account creation page is opened\r\n2. New patron is created\r\n3. Account Details modal is opened\r\n4. Account ID and Password is noted down\r\n5. User is logged in and shown the T&C page\r\n6. 1. MLB force link form is displayed to user. \n2. I already have an account on MLB.com radio button is selected by default.\n3.The following MLBLWMRM message is displayed at the top of the page\n\n\"You must have an MLB.com account linked to your MyTickets account in order to continue. Please enter the required information below to link your MyTickets account to your MLB.com account. If you do not have an MLB.com account choose the \"I don't have an account on MLB.com\" option.\"\r\n7. 1. \"Your MyTickets account has been successfully linked to your MLB.com account.\" message is shown\n\n2.My Tickets Accounts grid is displayed with Account#,Name, Nick Name and Remove icon"
      }
    ],
    "custom_jiras": "60.1"
  },
  {
    "id": 30716956,
    "title": "Verify user is not allowed to continue in MyTickets, when  the account is unlinked via Link MLB Accounts page",
    "section_id": 1686250,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13866",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C152536",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set UNMTLGEN=true and FMLBLWME=true at Mytickets supplier\r\n2.Have an existing Mytickets account that is already linked to MLB.com",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the My Tickets application and log in as the account mentioned in prerquisite\r\nExpected Result:\r\nUser is logged in\r\n2. Go to Myaccount->Link MLB Accounts tab\r\nExpected Result:\r\nMLB linking page is displayed\r\n3. Verify My Tickets Accounts grid is displayed with linked account details\r\nExpected Result:\r\nMy Tickets Accounts grid is displayed  with Account#, Name , Nick Name and Remove icon\r\n4. Click Remove icon against the logged in account\r\nExpected Result:\r\n1. Unlink confirmation modal is displayed with the following message:\nAre you sure you want to unlink account {Account id}? \n\n2. OK and Cancel button is also present\r\n5. Click OK button\r\nExpected Result:\r\n1. User is landed back on MLB linking page with following MLBLWMRM message at the top:\n\n\"You must have an MLB.com account linked to your MyTickets account in order to continue. Please enter the required information below to link your MyTickets account to your MLB.com account. If you do not have an MLB.com account choose the \"I don't have an account on MLB.com\" option.\"\n\n2.My Tickets Accounts grid is not displayed  \n\n3.MLB Account Information section is displayed with :\n\na.  \"I already have an account on MLB.com\" and \"I don't have an account on MLB.com radio buttons\"\nb.\"I already have an account on MLB.com\" button is pre-selected\nc.MLB.com email, Password and Nickname fields are present\n\n\n4.In the main header, only Account ID is displayed as follows:\n\n(Account: 42870777)\r\n6. Click on all visible top navigation tabs and subtabs\r\nExpected Result:\r\nThe tabs are clickable but user is not able to navigate to any of them\r\n7. On MLB.com linking page,\n\n1. Select \"I already have an account on MLB.com\" (it would be preselected)\n2. Enter MLB.com email (same email ID to which the account was linked earlier)\n3.Password (Password of same MLB.com email ID)\n4. Nick name\n\nClick Save changes\r\nExpected Result:\r\n1.\"Your MyTickets account has been successfully linked to your MLB.com account.\" message is displayed\n\n2.My Tickets Accounts grid is displayed with Account#,Name, Nick Name and Remove icon\r\n8. Click on all visible top navigation tabs and subtabs\r\nExpected Result:\r\nThe tabs are clickable but user is able to navigate to all of them",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the My Tickets application and log in as the account mentioned in prerquisite\r\n2. Go to Myaccount->Link MLB Accounts tab\r\n3. Verify My Tickets Accounts grid is displayed with linked account details\r\n4. Click Remove icon against the logged in account\r\n5. Click OK button\r\n6. Click on all visible top navigation tabs and subtabs\r\n7. On MLB.com linking page,\n\n1. Select \"I already have an account on MLB.com\" (it would be preselected)\n2. Enter MLB.com email (same email ID to which the account was linked earlier)\n3.Password (Password of same MLB.com email ID)\n4. Nick name\n\nClick Save changes\r\n8. Click on all visible top navigation tabs and subtabs",
        "expected": "1. User is logged in\r\n2. MLB linking page is displayed\r\n3. My Tickets Accounts grid is displayed  with Account#, Name , Nick Name and Remove icon\r\n4. 1. Unlink confirmation modal is displayed with the following message:\nAre you sure you want to unlink account {Account id}? \n\n2. OK and Cancel button is also present\r\n5. 1. User is landed back on MLB linking page with following MLBLWMRM message at the top:\n\n\"You must have an MLB.com account linked to your MyTickets account in order to continue. Please enter the required information below to link your MyTickets account to your MLB.com account. If you do not have an MLB.com account choose the \"I don't have an account on MLB.com\" option.\"\n\n2.My Tickets Accounts grid is not displayed  \n\n3.MLB Account Information section is displayed with :\n\na.  \"I already have an account on MLB.com\" and \"I don't have an account on MLB.com radio buttons\"\nb.\"I already have an account on MLB.com\" button is pre-selected\nc.MLB.com email, Password and Nickname fields are present\n\n\n4.In the main header, only Account ID is displayed as follows:\n\n(Account: 42870777)\r\n6. The tabs are clickable but user is not able to navigate to any of them\r\n7. 1.\"Your MyTickets account has been successfully linked to your MLB.com account.\" message is displayed\n\n2.My Tickets Accounts grid is displayed with Account#,Name, Nick Name and Remove icon\r\n8. The tabs are clickable but user is able to navigate to all of them"
      }
    ],
    "custom_jiras": "60.1"
  },
  {
    "id": 30716957,
    "title": "Verify if the logged in account does not have a MLB.com link configured, the MLB.com login link form is not shown to the user if UNMTLGEN is false",
    "section_id": 1686250,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13866",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C152537",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Set UNMTLGEN=false and FMLBLWME=true at Mytickets supplier level",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the My Tickets application and click Create New account button\r\nExpected Result:\r\nNew account creation page is displayed\r\n2. Verify MLB.com link section is not displayed in the Account creation page\r\nExpected Result:\r\nThe MLB.com link section should not be displayed on Account creation page \r\n3. Fill in Contact Information fields, Phone fields and DPUs (if applicable) and click Save changes button\r\nExpected Result:\r\nNew account is created \r\n4. Log out from Mytickets\r\nExpected Result:\r\nUser should be able to log out from the application as expected.\r\n5. Log in again using new Account ID and password\r\nExpected Result:\r\nuser should be able to login to the appication successfully.\r\n6. Verify MLB.com login link form is not displayed to the user\r\nExpected Result:\r\nUser should not be displayed with MLB.com login link form",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the My Tickets application and click Create New account button\r\n2. Verify MLB.com link section is not displayed in the Account creation page\r\n3. Fill in Contact Information fields, Phone fields and DPUs (if applicable) and click Save changes button\r\n4. Log out from Mytickets\r\n5. Log in again using new Account ID and password\r\n6. Verify MLB.com login link form is not displayed to the user",
        "expected": "1. New account creation page is displayed\r\n2. The MLB.com link section should not be displayed on Account creation page \r\n3. New account is created \r\n4. User should be able to log out from the application as expected.\r\n5. user should be able to login to the appication successfully.\r\n6. User should not be displayed with MLB.com login link form"
      }
    ],
    "custom_jiras": "60.1"
  },
  {
    "id": 30716958,
    "title": "Verify if the logged in account does not have a MLB.com link configured, the user is not allowed to continue until a valid MLB.com login is associated with the MyTickets account",
    "section_id": 1686250,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13866",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C152538",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set UNMTLGEN=true and FMLBLWME=true at Mytickets supplier\r\n2.Have an existing Mytickets account that is not already linked to MLB.com",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the My Tickets application and log in as the account mentioned in prerquisite\r\nExpected Result:\r\n1. User is landed on MLB linking page with following MLBLWMRM message at the top:\n\n\"You must have an MLB.com account linked to your MyTickets account in order to continue. Please enter the required information below to link your MyTickets account to your MLB.com account. If you do not have an MLB.com account choose the \"I don't have an account on MLB.com\" option.\"\n\n2.My Tickets Accounts grid is not displayed  \n\n3.MLB Account Information section is displayed with :\n\na.  \"I already have an account on MLB.com\" and \"I don't have an account on MLB.com radio buttons\"\nb.\"I already have an account on MLB.com\" button is pre-selected\nc.MLB.com email, Password and Nickname fields are present\n\n\n4.In the main header, only Account ID is displayed as follows:\n\n(Account: 42870777)\r\n2. Click on all visible top navigation tabs and subtabs\r\nExpected Result:\r\nThe tabs are clickable but user is not able to navigate to any of them\r\n3. On MLB.com linking page,\n\n1. Select \"I don't have an account on MLB.com\"\n2. Enter MLB.com email \n3.Password and Confirm Password\n4. Nick name\n\nClick Save changes\r\nExpected Result:\r\n1.\"Your MyTickets account has been successfully linked to your MLB.com account.\" message is displayed\n\n2.My Tickets Accounts grid is displayed with Account#,Name, Nick Name and Remove icon\r\n4. Click on all visible top navigation tabs and subtabs\r\nExpected Result:\r\nThe tabs are clickable but user is able to navigate to all of them",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the My Tickets application and log in as the account mentioned in prerquisite\r\n2. Click on all visible top navigation tabs and subtabs\r\n3. On MLB.com linking page,\n\n1. Select \"I don't have an account on MLB.com\"\n2. Enter MLB.com email \n3.Password and Confirm Password\n4. Nick name\n\nClick Save changes\r\n4. Click on all visible top navigation tabs and subtabs",
        "expected": "1. 1. User is landed on MLB linking page with following MLBLWMRM message at the top:\n\n\"You must have an MLB.com account linked to your MyTickets account in order to continue. Please enter the required information below to link your MyTickets account to your MLB.com account. If you do not have an MLB.com account choose the \"I don't have an account on MLB.com\" option.\"\n\n2.My Tickets Accounts grid is not displayed  \n\n3.MLB Account Information section is displayed with :\n\na.  \"I already have an account on MLB.com\" and \"I don't have an account on MLB.com radio buttons\"\nb.\"I already have an account on MLB.com\" button is pre-selected\nc.MLB.com email, Password and Nickname fields are present\n\n\n4.In the main header, only Account ID is displayed as follows:\n\n(Account: 42870777)\r\n2. The tabs are clickable but user is not able to navigate to any of them\r\n3. 1.\"Your MyTickets account has been successfully linked to your MLB.com account.\" message is displayed\n\n2.My Tickets Accounts grid is displayed with Account#,Name, Nick Name and Remove icon\r\n4. The tabs are clickable but user is able to navigate to all of them"
      }
    ],
    "custom_jiras": "60.1"
  },
  {
    "id": 30716959,
    "title": "Verify nickname is displayed next to the account id in the login dropdown in MLB Single Ticket Purchase Login",
    "section_id": 1686251,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14010",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C152517",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.LMATMT should be true at Single sales supplier level\r\n2.Have a PVO account that is linked to an MLB.com ID",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch MLB single tickets application\r\nExpected Result:\r\nCalendar page is opened\r\n2. Click T link against any event\r\nExpected Result:\r\nAvailability page of the event is launched\r\n3. Select Number of tickets from desired price scale/section and click Continue button\r\nExpected Result:\r\nShopping cart is displayed with selected Event and tickets' details\r\n4. Click Continue button on the cart page\r\nExpected Result:\r\n1. Login modal is opened with \"I already have an MLB.com account\" radio button pre-selected\n2. I dont have an account on MLB.com radio button is also present\n3.Email address and Password fields are also present\r\n5. 1.Select I already have an account on MLB.com (It would be pre-selected)\n2.Enter Email ID and password of the patron mentioned in prerequisite\n3.Click Log In button\r\nExpected Result:\r\nAccount Number drop down is appeared\r\n6. Verify the Account Number drop down values\r\nExpected Result:\r\nIt has linked Mytickets accounts to the MLB.com email ID listed.\nNick name of each account is displayed against the corresponding Account ID at the right side of the Account#\r\n7. Select one account and click Log in button\r\nExpected Result:\r\nUser is navigated to Payment page\r\n8. Fill in all required fields on the payment page and click Buy Tickets button\r\nExpected Result:\r\nConfirmation page is displayed with LMLCMSG message as follows:\n\nYour MLB.com account has been linked to the {0} My Tickets account. Click the {1} button below and log in to My Tickets (using your MLB.com email and password) to see your tickets.\n\n{0} must be replaced with the Account ID selected in the login modal",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch MLB single tickets application\r\n2. Click T link against any event\r\n3. Select Number of tickets from desired price scale/section and click Continue button\r\n4. Click Continue button on the cart page\r\n5. 1.Select I already have an account on MLB.com (It would be pre-selected)\n2.Enter Email ID and password of the patron mentioned in prerequisite\n3.Click Log In button\r\n6. Verify the Account Number drop down values\r\n7. Select one account and click Log in button\r\n8. Fill in all required fields on the payment page and click Buy Tickets button",
        "expected": "1. Calendar page is opened\r\n2. Availability page of the event is launched\r\n3. Shopping cart is displayed with selected Event and tickets' details\r\n4. 1. Login modal is opened with \"I already have an MLB.com account\" radio button pre-selected\n2. I dont have an account on MLB.com radio button is also present\n3.Email address and Password fields are also present\r\n5. Account Number drop down is appeared\r\n6. It has linked Mytickets accounts to the MLB.com email ID listed.\nNick name of each account is displayed against the corresponding Account ID at the right side of the Account#\r\n7. User is navigated to Payment page\r\n8. Confirmation page is displayed with LMLCMSG message as follows:\n\nYour MLB.com account has been linked to the {0} My Tickets account. Click the {1} button below and log in to My Tickets (using your MLB.com email and password) to see your tickets.\n\n{0} must be replaced with the Account ID selected in the login modal"
      }
    ],
    "custom_jiras": "61"
  },
  {
    "id": 30716960,
    "title": "Verify if an account has a regular single sales account (linking off) and then linking is turned on, if the user gets a card auth error on the paymnt page, then  MyTickets account is created when the trxn completes",
    "section_id": 1686251,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14049",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C152518",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Turn LMATMT=false at Single sales supplier level",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch MLB Single sales link\r\nExpected Result:\r\nCalendar page is opened\r\n2. Pick any performance by clicking T link\r\nExpected Result:\r\nAvailability page of the event is opened\r\n3. Select number of tickets and click Continue button\r\nExpected Result:\r\nCart is displayed with selected event and ticket details\r\n4. Click Continue button on the Cart\r\nExpected Result:\r\nLogin modal is opened\r\n5. On the sign-in page, \n\nSelect \"I don't have an account on MLB.com\" option \nEnter Email address, password and confirm password fields\nClick Log in button\r\nExpected Result:\r\nPayment page is displayed\r\n6. On the payment page, \n\n1.Add a new MSTR credit card\n2.Fill in Email and Phone fields\n3.Fill in DPUs (if applicable)\n4.Fill in gender and dob (if applicable)\n5.Select marketing info\n6.Opt in/out insurance (if applicable)\n7.Select Delivery method\n\nClick Buy tickets button\r\nExpected Result:\r\nConfirmation page is displayed.  \"Manage Tickets\" button & LMLCMSG message is not displayed on the Confirmation page\r\n7. In Maintenance site, go to Patron & Orders->Patron->Enter Email (same email id used in login modal) and click Next\r\nExpected Result:\r\nPatron list is displayed and note down the Patron Id\r\n8. Run the query\n\nselect * from pvo.patron_reg where patron_id={noted down in previous step};\r\nExpected Result:\r\n1. The USERNAME is like mlbam:{emailid entered in login modal}\n2. ORIGIN_TYPE_ID=2\r\n9. Turn LMATMT=true at Single sales supplier level\r\nExpected Result:\r\nLMATMT should be set to true for the supplier\r\n10. In PV, go to System setup->System admin->Select Card Type from Code list ->Select MSTR card->Change the check digit from Mod 10 to Mod 11->Click Apply changes\r\nExpected Result:\r\nMod digit is updated\r\n11. Repeat steps 1 to 4\r\n12. On the log in modal, \n\n\nSelect \"I already have an account on MLB.com\" option \nEnter Email address and password of the account created in above steps\n\nClick Log in button\r\nExpected Result:\r\nPayment page is displayed\r\n13. 1.Select the existing MSTR credit card and enter CVC\n2.Fill in Email and Phone fields\n3.Fill in DPUs (if applicable)\n4.Fill in gender and dob (if applicable)\n5.Select marketing info\n6.Opt in/out insurance (if applicable)\n7.Select Delivery method\n\nClick Buy tickets button\r\nExpected Result:\r\nCard Auth error is displayed on the payment page\r\n14. Add a new VISA credit card and Click Buy tickets button\r\nExpected Result:\r\nConfirmation page is displayed.\"Manage Tickets\" button & LMLCMSG message is displayed on the Confirmation page\r\n15. In Maintenance site, go to Patron & Orders->Patron->Enter Email (same email id used in login modal) and click Next\r\nExpected Result:\r\nPatron list is displayed wit two records and note down the new Patron Id \r\n16. Run the query\n\nselect * from pvo.patron_reg where patron_id={noted in previous step};\r\nExpected Result:\r\n1. The USERNAME is like ngbm:{supplier patron id}\n2. ORIGIN_TYPE_ID=11\r\n17. Run the query\n\nselect * from pvo.supplier_patron where supplier_patron_id={};\r\nExpected Result:\r\nTwo records are retrieved.\n\nSupplier_code for both records is single sales supplier\nPatron_ids are equal to the ones noted down in Step  7 and 15",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch MLB Single sales link\r\n2. Pick any performance by clicking T link\r\n3. Select number of tickets and click Continue button\r\n4. Click Continue button on the Cart\r\n5. On the sign-in page, \n\nSelect \"I don't have an account on MLB.com\" option \nEnter Email address, password and confirm password fields\nClick Log in button\r\n6. On the payment page, \n\n1.Add a new MSTR credit card\n2.Fill in Email and Phone fields\n3.Fill in DPUs (if applicable)\n4.Fill in gender and dob (if applicable)\n5.Select marketing info\n6.Opt in/out insurance (if applicable)\n7.Select Delivery method\n\nClick Buy tickets button\r\n7. In Maintenance site, go to Patron & Orders->Patron->Enter Email (same email id used in login modal) and click Next\r\n8. Run the query\n\nselect * from pvo.patron_reg where patron_id={noted down in previous step};\r\n9. Turn LMATMT=true at Single sales supplier level\r\n10. In PV, go to System setup->System admin->Select Card Type from Code list ->Select MSTR card->Change the check digit from Mod 10 to Mod 11->Click Apply changes\r\n11. Repeat steps 1 to 4\r\n12. On the log in modal, \n\n\nSelect \"I already have an account on MLB.com\" option \nEnter Email address and password of the account created in above steps\n\nClick Log in button\r\n13. 1.Select the existing MSTR credit card and enter CVC\n2.Fill in Email and Phone fields\n3.Fill in DPUs (if applicable)\n4.Fill in gender and dob (if applicable)\n5.Select marketing info\n6.Opt in/out insurance (if applicable)\n7.Select Delivery method\n\nClick Buy tickets button\r\n14. Add a new VISA credit card and Click Buy tickets button\r\n15. In Maintenance site, go to Patron & Orders->Patron->Enter Email (same email id used in login modal) and click Next\r\n16. Run the query\n\nselect * from pvo.patron_reg where patron_id={noted in previous step};\r\n17. Run the query\n\nselect * from pvo.supplier_patron where supplier_patron_id={};",
        "expected": "1. Calendar page is opened\r\n2. Availability page of the event is opened\r\n3. Cart is displayed with selected event and ticket details\r\n4. Login modal is opened\r\n5. Payment page is displayed\r\n6. Confirmation page is displayed.  \"Manage Tickets\" button & LMLCMSG message is not displayed on the Confirmation page\r\n7. Patron list is displayed and note down the Patron Id\r\n8. 1. The USERNAME is like mlbam:{emailid entered in login modal}\n2. ORIGIN_TYPE_ID=2\r\n9. LMATMT should be set to true for the supplier\r\n10. Mod digit is updated\r\n11. \r\n12. Payment page is displayed\r\n13. Card Auth error is displayed on the payment page\r\n14. Confirmation page is displayed.\"Manage Tickets\" button & LMLCMSG message is displayed on the Confirmation page\r\n15. Patron list is displayed wit two records and note down the new Patron Id \r\n16. 1. The USERNAME is like ngbm:{supplier patron id}\n2. ORIGIN_TYPE_ID=11\r\n17. Two records are retrieved.\n\nSupplier_code for both records is single sales supplier\nPatron_ids are equal to the ones noted down in Step  7 and 15"
      }
    ],
    "custom_jiras": "61"
  },
  {
    "id": 30716961,
    "title": "Verify the MLBAM supplied IPID  is getting passed in sellseats request after completing a transaction with an Existing MLB Patron ID when Integration is ON",
    "section_id": 1686251,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-11354",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C152519",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Set UNMTLGEN=true at Mytickets supplier level",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the link for MlB single Sale Transaction\r\nExpected Result:\r\nCalendar page is opened\r\n2. Clcik T link against an event\r\nExpected Result:\r\nEvent's availability page is opened\r\n3. 1. Select Number Of tickets \n2..Click on Continue.\n3. \n4. Click on continue from the cart\r\nExpected Result:\r\nUser is navigated to cart\r\n4. 1. Select option for \"i have an account in MLB.com*\n2. Enter the MLBAM Email ID and Password\r\nExpected Result:\r\nUser is navigated to Payment page\r\n5. 1.Select the existing credit card and enter CVC\n2.Fill in Email and Phone fields\n3.Fill in DPUs (if applicable)\n4.Fill in gender and dob (if applicable)\n5.Select marketing info\n6.Opt in/out insurance (if applicable)\n7.Select Delivery method\n\nClick Buy tickets button\r\nExpected Result:\r\nTransaction should be successfully Completed and Confirmation page is shown\r\n6. Run the Query in DB:\nselect * from pvo.SUB_AGENCY_PATRON where patron_id ={};\r\nExpected Result:\r\nNote down AGENCY_PATRON_ID value\r\n7. Verify the Sell tickets API log\r\nExpected Result:\r\nAGENCY_PATRON_ID column value should be send from SUB_AGENCY_PATRON table  (SUB_AGENCY_CODE = MLB), in \"sub_agency_patron_id\" node in sellseats request",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the link for MlB single Sale Transaction\r\n2. Clcik T link against an event\r\n3. 1. Select Number Of tickets \n2..Click on Continue.\n3. \n4. Click on continue from the cart\r\n4. 1. Select option for \"i have an account in MLB.com*\n2. Enter the MLBAM Email ID and Password\r\n5. 1.Select the existing credit card and enter CVC\n2.Fill in Email and Phone fields\n3.Fill in DPUs (if applicable)\n4.Fill in gender and dob (if applicable)\n5.Select marketing info\n6.Opt in/out insurance (if applicable)\n7.Select Delivery method\n\nClick Buy tickets button\r\n6. Run the Query in DB:\nselect * from pvo.SUB_AGENCY_PATRON where patron_id ={};\r\n7. Verify the Sell tickets API log",
        "expected": "1. Calendar page is opened\r\n2. Event's availability page is opened\r\n3. User is navigated to cart\r\n4. User is navigated to Payment page\r\n5. Transaction should be successfully Completed and Confirmation page is shown\r\n6. Note down AGENCY_PATRON_ID value\r\n7. AGENCY_PATRON_ID column value should be send from SUB_AGENCY_PATRON table  (SUB_AGENCY_CODE = MLB), in \"sub_agency_patron_id\" node in sellseats request"
      }
    ],
    "custom_jiras": "56"
  },
  {
    "id": 30716962,
    "title": "Verify that nickname already exist error displayed while trying to link an account with same nickname for an email id after creating two new accounts from MTD, unlink on of them and then try to link to another",
    "section_id": 1686251,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15070",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C152520",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "UNMTLGEN =true at Mytickets supplier level",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch the mytixx link and click Create New account button\r\nExpected Result:\r\nNew account creation form should get displayed\r\n2. 1. Fill in all required fields under Contact Information and the Phone fields \n2. Under MLB Account Information section, select \"I don't have an account on MLB.com\"\n3.Enter MLB.com email ID, password, confirm password and Nick name\n4.Click on save changes\r\nExpected Result:\r\nPatron1 is created successfully.\r\n3. Navigate to Myaccount ->Link MLB ccounts tab\r\nExpected Result:\r\nMy Tickets Accounts grid is displayed with Account#,Name and Nick Name\r\n4. Logout from Mytickets\r\nExpected Result:\r\nLog in page is shown again\r\n5. Click Create New account button again\r\nExpected Result:\r\nNew account creation form should get displayed\r\n6. 1. Fill in all required fields under Contact Information and the Phone fields \n2. Under MLB Account Information section, select \"I don't have an account on MLB.com\"\n3.Enter MLB.com email ID, password, confirm password and Nick name\n4.Click on save changes\r\nExpected Result:\r\nPatron2 is created successfully \r\n7. Navigate to Myaccount ->Link MLB ccounts tab\r\nExpected Result:\r\nMy Tickets Accounts grid is displayed with Account#,Name and Nick Name\r\n8. Logout from Mytickets\r\nExpected Result:\r\nLog in page is shown again\r\n9. Login to the first patron account\r\nExpected Result:\r\nPatron1 is logged in\r\n10. Navigate to Myaccount->Link MLB accounts tab\r\nExpected Result:\r\nMy Tickets Accounts grid is displayed with Account#,Name and Nick Name\r\n11. Click Link My Tickets Account button\r\nExpected Result:\r\nLink MLB Accounts modal is opened\r\n12. 1. Enter Account ID and password of Patron2 in Account and Password fields respectively\n2. Enter Patron1's nick name in Nickname field\n3. Click Link Account button\r\nExpected Result:\r\nThe following NICKAET message is displayed on the modal\n\n\"The nickname entered already exists on one of your linked accounts. Please enter a unique nickname\"\r\n13. Remove the Nickname and enter a different nickname and click Link Account button\r\nExpected Result:\r\nError message is displayed as\n\n\"The MLBAM account {}  is already linked to this user.\"\r\n14. Log out from MTD\r\nExpected Result:\r\nLogin page is shown\r\n15. Login to Patron2's account\r\nExpected Result:\r\nUser is logged in\r\n16. Navigate to Myaccount ->Link MLB ccounts tab\r\nExpected Result:\r\nMy Tickets Accounts grid is displayed with Account#,Name, Nick Name and Remove icon\r\n17. Click Remove icon\r\nExpected Result:\r\nConfirmation popup is displayed\r\n18. Click Yes on the popup\r\nExpected Result:\r\nUser landed back on Link accounts page. My Tickets Accounts grid is not displayed \r\n19. Login to the first patron account\r\nExpected Result:\r\nPatron1 is logged in\r\n20. Navigate to Myaccount->Link MLB accounts tab\r\nExpected Result:\r\nMy Tickets Accounts grid is displayed with Account#,Name and Nick Name\r\n21. Click Link My Tickets Account button\r\nExpected Result:\r\nLink MLB Accounts modal is opened\r\n22. 1. Enter Account ID and password of Patron2 in Account and Password fields respectively\n2. Enter Patron2's nick name in Nickname field\n3. Click Link Account button\r\nExpected Result:\r\nThe modal is closed. The Patron2's details are displayed under My Tickets Accounts grid",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch the mytixx link and click Create New account button\r\n2. 1. Fill in all required fields under Contact Information and the Phone fields \n2. Under MLB Account Information section, select \"I don't have an account on MLB.com\"\n3.Enter MLB.com email ID, password, confirm password and Nick name\n4.Click on save changes\r\n3. Navigate to Myaccount ->Link MLB ccounts tab\r\n4. Logout from Mytickets\r\n5. Click Create New account button again\r\n6. 1. Fill in all required fields under Contact Information and the Phone fields \n2. Under MLB Account Information section, select \"I don't have an account on MLB.com\"\n3.Enter MLB.com email ID, password, confirm password and Nick name\n4.Click on save changes\r\n7. Navigate to Myaccount ->Link MLB ccounts tab\r\n8. Logout from Mytickets\r\n9. Login to the first patron account\r\n10. Navigate to Myaccount->Link MLB accounts tab\r\n11. Click Link My Tickets Account button\r\n12. 1. Enter Account ID and password of Patron2 in Account and Password fields respectively\n2. Enter Patron1's nick name in Nickname field\n3. Click Link Account button\r\n13. Remove the Nickname and enter a different nickname and click Link Account button\r\n14. Log out from MTD\r\n15. Login to Patron2's account\r\n16. Navigate to Myaccount ->Link MLB ccounts tab\r\n17. Click Remove icon\r\n18. Click Yes on the popup\r\n19. Login to the first patron account\r\n20. Navigate to Myaccount->Link MLB accounts tab\r\n21. Click Link My Tickets Account button\r\n22. 1. Enter Account ID and password of Patron2 in Account and Password fields respectively\n2. Enter Patron2's nick name in Nickname field\n3. Click Link Account button",
        "expected": "1. New account creation form should get displayed\r\n2. Patron1 is created successfully.\r\n3. My Tickets Accounts grid is displayed with Account#,Name and Nick Name\r\n4. Log in page is shown again\r\n5. New account creation form should get displayed\r\n6. Patron2 is created successfully \r\n7. My Tickets Accounts grid is displayed with Account#,Name and Nick Name\r\n8. Log in page is shown again\r\n9. Patron1 is logged in\r\n10. My Tickets Accounts grid is displayed with Account#,Name and Nick Name\r\n11. Link MLB Accounts modal is opened\r\n12. The following NICKAET message is displayed on the modal\n\n\"The nickname entered already exists on one of your linked accounts. Please enter a unique nickname\"\r\n13. Error message is displayed as\n\n\"The MLBAM account {}  is already linked to this user.\"\r\n14. Login page is shown\r\n15. User is logged in\r\n16. My Tickets Accounts grid is displayed with Account#,Name, Nick Name and Remove icon\r\n17. Confirmation popup is displayed\r\n18. User landed back on Link accounts page. My Tickets Accounts grid is not displayed \r\n19. Patron1 is logged in\r\n20. My Tickets Accounts grid is displayed with Account#,Name and Nick Name\r\n21. Link MLB Accounts modal is opened\r\n22. The modal is closed. The Patron2's details are displayed under My Tickets Accounts grid"
      }
    ],
    "custom_jiras": "62.2"
  },
  {
    "id": 30716963,
    "title": "Verify \"Manage Tickets\" button & LMLCMSG on confirmation page and LMLEMSG in email is hidden when HTMMBAT is true and LMATMT is true for an existing user",
    "section_id": 1686251,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PVO-16520",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C152521",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Set LMATMT= true and HTMMBAT=true at Single sales supplier level",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch MLB single sales link \r\nExpected Result:\r\nCalendar page is shown\r\n2. Click T link against any event\r\nExpected Result:\r\nAvailability page is opened\r\n3. Select Number of tickets and click Continue button\r\nExpected Result:\r\nShopping cart is displayed with selected event and ticket details\r\n4. Click Continue button on the cart\r\nExpected Result:\r\nLogin modal is opened\r\n5. On the log in modal, \n\n\nSelect \"I already have an account on MLB.com\" option \nEnter Email address and password \n\nClick Log in button\r\nExpected Result:\r\nUser is navigated to payment page\r\n6. 1.Select the existing credit card and enter CVC\n2.Fill in Email and Phone fields\n3.Fill in DPUs (if applicable)\n4.Fill in gender and dob (if applicable)\n5.Select marketing info\n6.Opt in/out insurance (if applicable)\n7.Select Delivery method\n\nClick Buy tickets button\r\nExpected Result:\r\nConfirmation page is displayed\r\n7. Verify that on confirmation page both \"Manage Tickets\" button & LMLCMSG message is hidden\r\nExpected Result:\r\nBoth \"Manage Tickets\" button & LMLCMSG message should be hidden on confirmation page.\r\n8. Verify LMLEMSG is hidden in the confirmation email\r\nExpected Result:\r\nLMLEMSG should be hidden in the confirmation email",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch MLB single sales link \r\n2. Click T link against any event\r\n3. Select Number of tickets and click Continue button\r\n4. Click Continue button on the cart\r\n5. On the log in modal, \n\n\nSelect \"I already have an account on MLB.com\" option \nEnter Email address and password \n\nClick Log in button\r\n6. 1.Select the existing credit card and enter CVC\n2.Fill in Email and Phone fields\n3.Fill in DPUs (if applicable)\n4.Fill in gender and dob (if applicable)\n5.Select marketing info\n6.Opt in/out insurance (if applicable)\n7.Select Delivery method\n\nClick Buy tickets button\r\n7. Verify that on confirmation page both \"Manage Tickets\" button & LMLCMSG message is hidden\r\n8. Verify LMLEMSG is hidden in the confirmation email",
        "expected": "1. Calendar page is shown\r\n2. Availability page is opened\r\n3. Shopping cart is displayed with selected event and ticket details\r\n4. Login modal is opened\r\n5. User is navigated to payment page\r\n6. Confirmation page is displayed\r\n7. Both \"Manage Tickets\" button & LMLCMSG message should be hidden on confirmation page.\r\n8. LMLEMSG should be hidden in the confirmation email"
      }
    ],
    "custom_jiras": null
  },
  {
    "id": 30716964,
    "title": "Verify \"Manage Tickets\" button & LMLCMSG on confirmation page and LMLEMSG in email is displayed when HTMMBAT is false and LMATMT is true for a new user",
    "section_id": 1686251,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PVO-16520",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C152522",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Set LMATMT= true and HTMMBAT=false at Single sales supplier level",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch MLB single sales link \r\nExpected Result:\r\nCalendar page is shown\r\n2. Click T link against any event\r\nExpected Result:\r\nAvailability page is opened\r\n3. Select Number of tickets and click Continue button\r\nExpected Result:\r\nShopping cart is displayed with selected event and ticket details\r\n4. Click Continue button on the cart\r\nExpected Result:\r\nLogin modal is opened\r\n5. On the log in modal, \n\n\nSelect \"I don't have an account on MLB.com\" option \nEnter Email address, password  and Confirm password fields\n\nClick Log in button\r\nExpected Result:\r\nUser is navigated to payment page\r\n6. 1.Add a credit card and enter CVC\n2.Fill in Email and Phone fields\n3.Fill in DPUs (if applicable)\n4.Fill in gender and dob (if applicable)\n5.Select marketing info\n6.Opt in/out insurance (if applicable)\n7.Select Delivery method\n\nClick Buy tickets button\r\nExpected Result:\r\nConfirmation page is displayed\r\n7. Verify that on confirmation page both \"Manage Tickets\" button & LMLCMSG message is shown\r\nExpected Result:\r\nBoth \"Manage Tickets\" button & LMLCMSG message is shown\r\n8. Verify LMLEMSG is shown in the confirmation email\r\nExpected Result:\r\nLMLEMSG is shown in the confirmation email",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch MLB single sales link \r\n2. Click T link against any event\r\n3. Select Number of tickets and click Continue button\r\n4. Click Continue button on the cart\r\n5. On the log in modal, \n\n\nSelect \"I don't have an account on MLB.com\" option \nEnter Email address, password  and Confirm password fields\n\nClick Log in button\r\n6. 1.Add a credit card and enter CVC\n2.Fill in Email and Phone fields\n3.Fill in DPUs (if applicable)\n4.Fill in gender and dob (if applicable)\n5.Select marketing info\n6.Opt in/out insurance (if applicable)\n7.Select Delivery method\n\nClick Buy tickets button\r\n7. Verify that on confirmation page both \"Manage Tickets\" button & LMLCMSG message is shown\r\n8. Verify LMLEMSG is shown in the confirmation email",
        "expected": "1. Calendar page is shown\r\n2. Availability page is opened\r\n3. Shopping cart is displayed with selected event and ticket details\r\n4. Login modal is opened\r\n5. User is navigated to payment page\r\n6. Confirmation page is displayed\r\n7. Both \"Manage Tickets\" button & LMLCMSG message is shown\r\n8. LMLEMSG is shown in the confirmation email"
      }
    ],
    "custom_jiras": null
  },
  {
    "id": 30716965,
    "title": "Verify password reset for an existing user from GPL login modal and verify login to My Tickets using the updated credentials",
    "section_id": 1686252,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10745",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C152523",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Set LGPLATMT=false, FPSIE = false and REPAE= false at Single sales supplier level",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch GPL Single sales application link\r\nExpected Result:\r\nSchedule page is opened\r\n2. Click Buy tickets button against an event\r\nExpected Result:\r\nAvailability page of the event is displayed\r\n3. 1.Select a number from the drop down list\n2. Click on Continue button.\r\nExpected Result:\r\nThe shopping mart page is displayed.\r\n4. Click the continue button on the cart\r\nExpected Result:\r\nLogin and registration page should be displayed\r\n5. Click the continue button on the login modal\r\nExpected Result:\r\nPayment detail page should be displayed\r\n6. In the payment page,\n\n1.Add a new card \n2.Fill in email and phone fields (if applicable)\n3.Enter DOB and gender (if applicable)\n4.Opt in/out for insurance (if applicable)\n5.Select DPUs (if applicable)\n6.Select T&C checkbox\n7.Select delivery method\n\n\nClick on Buy Tickets in the Payment frame\r\nExpected Result:\r\nConfirmation page should be displayed with the following Details:\nBill To: (Address, Payment Details)\nDeliver To: (Patron, Shipping Details)\nConfirmation no. : (Bots Patron Id / Order no.)\n\r\n7. In Conformation page \"Click here to register\"\r\nExpected Result:\r\nThe Registration page should displayed\r\n8. Enter username in email format less then 20 character in username field\nand click on \"Join Tickets.com\" button\r\nExpected Result:\r\nUser should successfully create a new account.\r\n9. Launch PV maintenance site link \nSelect patron from patron link.\nEnter the Email id that you entered to create the account in previous step and click on next\r\nExpected Result:\r\nOne patron details should be dispalyed\r\n10. Set LGPLATMT=true, FPSIE = trueand REPAE= true at Single sales supplier level\n\r\nExpected Result:\r\nThe textcodes are set\r\n11. Repeat steps 1 to 4\r\n12. On the login modal, \nSelect \"i have an account\" radio button and login with the username and password created in Prerequisite1\r\nExpected Result:\r\nPayment detail page should be displayed\r\n13. In the payment page,\n\n1.Select the existing card and enter CVC\n2.Fill in email and phone fields (if applicable)\n3.Enter DOB and gender (if applicable)\n4.Opt in/out for insurance (if applicable)\n5.Select DPUs (if applicable)\n6.Select T&C checkbox\n7.Select delivery method\n\n\nClick on Buy Tickets in the Payment frame\r\nExpected Result:\r\nConfirmation page should be displayed with the following Details:\nBill To: (Address, Payment Details)\nDeliver To: (Patron, Shipping Details)\nConfirmation no. : (Bots Patron Id / Order no.)\n\nA message like \"you can use My Tickets to manage your tickets online,including the ability to digially transfer tickets to friends. Click the Distribute to friends button below to login to MYTickets(using your registered email address and password) to see your tickets.\" is also displayed on the confirmation page.\r\n14. Click on Distribute to friends button from conformation page and verify that the My tickets login page is displayed\r\nExpected Result:\r\nMy ticket account login page should displayed\r\n15. Log in using the patron credentials for which the transaction has been completed\r\nExpected Result:\r\nUser is logged in and landed on Inventory page Order view with the order details of the transaction completed in previous step.\r\n16. Repeat steps 1 to 4\r\n17. On login modal,\nClick Forgot password button\r\nExpected Result:\r\nForgot password section appeared on the modal with the following:\n\n1. \"Enter your email address and press Reset Password to have an email containing a link sent to you. Click on that link and follow the instructions on that page to reset your password.\" message\n2.Username textfield\n3.Reset Password button\n\r\n18. Enter email address in Username field and click Reset Password button\r\nExpected Result:\r\nReset password email is sent to the entered email address\r\n19. Verify the email received to re-set the password.\r\nExpected Result:\r\nemail containing a link to change the password.  When clicked in the the email, the user should be directed to a secure form to enter a new password.\r\n20. Verify the details available in the Re-set password form\n1. verify the user name is displayed\n2. verify whether there is a space displayed to enter password \n3. verify the default text is displayed\n4. verify that the button \"Submit\" is displayed\r\nExpected Result:\r\nThe form should show the user's email login name and provide space to enter a new password twice. \n\nThe form text for the username entry box when a user requests a new password should be configurable.  \n\nThe default text should be \"Enter your username and click Submit to request a new password\".\n\n The button text should be editable. The default label should be \"Submit\".\r\n21. Re-set the password\r\nExpected Result:\r\nuser should be able to re-set the password\r\n22. Verify whether the user is able to login using the existing user name and new password and complete a Ticket purchase.\r\nExpected Result:\r\nUser should be able to login using the existing user nameand new password and complete a Ticket purchase.\r\n23. Click on Distribute to friends button from conformation page and verify that the My tickets account page is displayed\r\nExpected Result:\r\nMy ticket account login page should displayed\r\n24. Enter username and new password.\r\nExpected Result:\r\nUser should not be able to login using new password in My txx",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch GPL Single sales application link\r\n2. Click Buy tickets button against an event\r\n3. 1.Select a number from the drop down list\n2. Click on Continue button.\r\n4. Click the continue button on the cart\r\n5. Click the continue button on the login modal\r\n6. In the payment page,\n\n1.Add a new card \n2.Fill in email and phone fields (if applicable)\n3.Enter DOB and gender (if applicable)\n4.Opt in/out for insurance (if applicable)\n5.Select DPUs (if applicable)\n6.Select T&C checkbox\n7.Select delivery method\n\n\nClick on Buy Tickets in the Payment frame\r\n7. In Conformation page \"Click here to register\"\r\n8. Enter username in email format less then 20 character in username field\nand click on \"Join Tickets.com\" button\r\n9. Launch PV maintenance site link \nSelect patron from patron link.\nEnter the Email id that you entered to create the account in previous step and click on next\r\n10. Set LGPLATMT=true, FPSIE = trueand REPAE= true at Single sales supplier level\n\r\n11. Repeat steps 1 to 4\r\n12. On the login modal, \nSelect \"i have an account\" radio button and login with the username and password created in Prerequisite1\r\n13. In the payment page,\n\n1.Select the existing card and enter CVC\n2.Fill in email and phone fields (if applicable)\n3.Enter DOB and gender (if applicable)\n4.Opt in/out for insurance (if applicable)\n5.Select DPUs (if applicable)\n6.Select T&C checkbox\n7.Select delivery method\n\n\nClick on Buy Tickets in the Payment frame\r\n14. Click on Distribute to friends button from conformation page and verify that the My tickets login page is displayed\r\n15. Log in using the patron credentials for which the transaction has been completed\r\n16. Repeat steps 1 to 4\r\n17. On login modal,\nClick Forgot password button\r\n18. Enter email address in Username field and click Reset Password button\r\n19. Verify the email received to re-set the password.\r\n20. Verify the details available in the Re-set password form\n1. verify the user name is displayed\n2. verify whether there is a space displayed to enter password \n3. verify the default text is displayed\n4. verify that the button \"Submit\" is displayed\r\n21. Re-set the password\r\n22. Verify whether the user is able to login using the existing user name and new password and complete a Ticket purchase.\r\n23. Click on Distribute to friends button from conformation page and verify that the My tickets account page is displayed\r\n24. Enter username and new password.",
        "expected": "1. Schedule page is opened\r\n2. Availability page of the event is displayed\r\n3. The shopping mart page is displayed.\r\n4. Login and registration page should be displayed\r\n5. Payment detail page should be displayed\r\n6. Confirmation page should be displayed with the following Details:\nBill To: (Address, Payment Details)\nDeliver To: (Patron, Shipping Details)\nConfirmation no. : (Bots Patron Id / Order no.)\n\r\n7. The Registration page should displayed\r\n8. User should successfully create a new account.\r\n9. One patron details should be dispalyed\r\n10. The textcodes are set\r\n11. \r\n12. Payment detail page should be displayed\r\n13. Confirmation page should be displayed with the following Details:\nBill To: (Address, Payment Details)\nDeliver To: (Patron, Shipping Details)\nConfirmation no. : (Bots Patron Id / Order no.)\n\nA message like \"you can use My Tickets to manage your tickets online,including the ability to digially transfer tickets to friends. Click the Distribute to friends button below to login to MYTickets(using your registered email address and password) to see your tickets.\" is also displayed on the confirmation page.\r\n14. My ticket account login page should displayed\r\n15. User is logged in and landed on Inventory page Order view with the order details of the transaction completed in previous step.\r\n16. \r\n17. Forgot password section appeared on the modal with the following:\n\n1. \"Enter your email address and press Reset Password to have an email containing a link sent to you. Click on that link and follow the instructions on that page to reset your password.\" message\n2.Username textfield\n3.Reset Password button\n\r\n18. Reset password email is sent to the entered email address\r\n19. email containing a link to change the password.  When clicked in the the email, the user should be directed to a secure form to enter a new password.\r\n20. The form should show the user's email login name and provide space to enter a new password twice. \n\nThe form text for the username entry box when a user requests a new password should be configurable.  \n\nThe default text should be \"Enter your username and click Submit to request a new password\".\n\n The button text should be editable. The default label should be \"Submit\".\r\n21. user should be able to re-set the password\r\n22. User should be able to login using the existing user nameand new password and complete a Ticket purchase.\r\n23. My ticket account login page should displayed\r\n24. User should not be able to login using new password in My txx"
      }
    ],
    "custom_jiras": "55"
  },
  {
    "id": 30716966,
    "title": "Verify that duplicate GPL MyTickets email patron_reg records are not created while creating a new account in PV with same details of a patron created in PVO and try to login into PVO using with PV username and password.",
    "section_id": 1686252,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15293",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C152524",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Launch GPL Mytickets link and click Create a New account button\r\nExpected Result:\r\nNew account creation page is displayed\r\n2. Fill in all required field on Account creation page and click Save changes button\r\nExpected Result:\r\nNew patron is created\r\n3. 1. Login to PV and go to Ticketing->Patron Management\n2. Click New\n3.Create a new account with the same email, first name, last name \nas in above step.\r\nExpected Result:\r\nNew PV account with same details should be created.\r\n4. Login to GPL Mytickets with PV username/password.\r\nExpected Result:\r\nLogin should be successful.\r\n5. Complete all the details in MyAccount but a different password and click on Save changes.\r\nExpected Result:\r\nA patron already exist with same email address \nmessage should be displayed.\r\n6. Verify the below DB queries : \n  \nselect *from PVO.patron_reg where patron_id = 'xxxx'\nselect *from PVO.patron_reg where username like '%nggx:xxx'\n \nMake sure only one record exist with origin type 20.\r\nExpected Result:\r\nOnly one record should exist with origin type 20.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch GPL Mytickets link and click Create a New account button\r\n2. Fill in all required field on Account creation page and click Save changes button\r\n3. 1. Login to PV and go to Ticketing->Patron Management\n2. Click New\n3.Create a new account with the same email, first name, last name \nas in above step.\r\n4. Login to GPL Mytickets with PV username/password.\r\n5. Complete all the details in MyAccount but a different password and click on Save changes.\r\n6. Verify the below DB queries : \n  \nselect *from PVO.patron_reg where patron_id = 'xxxx'\nselect *from PVO.patron_reg where username like '%nggx:xxx'\n \nMake sure only one record exist with origin type 20.",
        "expected": "1. New account creation page is displayed\r\n2. New patron is created\r\n3. New PV account with same details should be created.\r\n4. Login should be successful.\r\n5. A patron already exist with same email address \nmessage should be displayed.\r\n6. Only one record should exist with origin type 20."
      }
    ],
    "custom_jiras": "63"
  },
  {
    "id": 30716967,
    "title": "Verify that the confirmation email does not include LinkedMyTicketsLogin info, if LGPLATMT is false",
    "section_id": 1686252,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14428",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C152525",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.LGPLATMT should be false at Single sales supplier level\r\n2.FPISE should be true at Single sales supplier level\r\n3.UNMTLGEN should be true at Mytickets supplier level\r\n4.Set  at CFEM",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch GPL Single sales link\r\nExpected Result:\r\nSchedule page is opened\r\n2. Click Buy Tickets button against any event\r\nExpected Result:\r\nAvailability page is displayed\r\n3. Select seats and click Continue button\r\nExpected Result:\r\nShopping card is displayed with the selected tickets details\r\n4. Click Continue button on the Shopping cart page\r\nExpected Result:\r\nLog in modal is displayed\r\n5. 1.Select ' I dont have an account' option\n2.Enter Email id and password and confirm password fields\n3.Click Login button\r\nExpected Result:\r\nUser is logged in and Payment page is displayed\r\n6. Click Add new card button\r\nExpected Result:\r\nCard info modal is displayed\r\n7. Enter card details and Billing Information details and click \nSubmit button on Credit card modal\r\nExpected Result:\r\nThe modal is closed and added card is shown under Card grid\r\n8. Fill in all other required fields on Payment page and click Buy Tickets button\r\nExpected Result:\r\nThe transaction is completed and Confirmation page is displayed\r\n9. Verify GPLMLCM message is not shown on Confirmation page\r\nExpected Result:\r\nThe following GPLMLCM message is not shown on Confirmation page\n\nYour registered email has been linked to the {0} MyTickets account. Click the {1} button below and log in to MyTickets (using your registered email and password) to see your tickets\r\n10. Verify patron_reg table for new account created\n\nselect * from pvo.patron_reg where patron_id=\r\nExpected Result:\r\nAll details are saved correctly\r\n11. Launch GPL Mytickets link\r\nExpected Result:\r\nLogin page is displayed\r\n12. Enter emai id and password of newly created account and click Log in button\r\nExpected Result:\r\nUser is shown error message and not able to log in\r\n13. Verify that the confirmation email does not include LinkedMyTicketsLogin info\r\nExpected Result:\r\nThe following message is not present in the confirmation email\n\nClick the My Tickets link below and use your MLB.com email ({0}) and password to log in and see your tickets. a href=\\\"{1}\\\" target=\"_blank\">My Tickets.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch GPL Single sales link\r\n2. Click Buy Tickets button against any event\r\n3. Select seats and click Continue button\r\n4. Click Continue button on the Shopping cart page\r\n5. 1.Select ' I dont have an account' option\n2.Enter Email id and password and confirm password fields\n3.Click Login button\r\n6. Click Add new card button\r\n7. Enter card details and Billing Information details and click \nSubmit button on Credit card modal\r\n8. Fill in all other required fields on Payment page and click Buy Tickets button\r\n9. Verify GPLMLCM message is not shown on Confirmation page\r\n10. Verify patron_reg table for new account created\n\nselect * from pvo.patron_reg where patron_id=\r\n11. Launch GPL Mytickets link\r\n12. Enter emai id and password of newly created account and click Log in button\r\n13. Verify that the confirmation email does not include LinkedMyTicketsLogin info",
        "expected": "1. Schedule page is opened\r\n2. Availability page is displayed\r\n3. Shopping card is displayed with the selected tickets details\r\n4. Log in modal is displayed\r\n5. User is logged in and Payment page is displayed\r\n6. Card info modal is displayed\r\n7. The modal is closed and added card is shown under Card grid\r\n8. The transaction is completed and Confirmation page is displayed\r\n9. The following GPLMLCM message is not shown on Confirmation page\n\nYour registered email has been linked to the {0} MyTickets account. Click the {1} button below and log in to MyTickets (using your registered email and password) to see your tickets\r\n10. All details are saved correctly\r\n11. Login page is displayed\r\n12. User is shown error message and not able to log in\r\n13. The following message is not present in the confirmation email\n\nClick the My Tickets link below and use your MLB.com email ({0}) and password to log in and see your tickets. a href=\\\"{1}\\\" target=\"_blank\">My Tickets."
      }
    ],
    "custom_jiras": "61"
  },
  {
    "id": 30716968,
    "title": "Verify that the confirmation email does not include LinkedMyTicketsLogin info, if patron continues as Guest",
    "section_id": 1686252,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14428",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C152526",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.LGPLATMT should be true at Single sales supplier level\r\n2.FPISE should be true at Single sales supplier level\r\n3.SSGLE should be true at Single sales supplier level\r\n4.Set  literal in CFEM",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch GPL Single sales link\r\nExpected Result:\r\nSchedule page is opened\r\n2. Click Buy Tickets button against an event\r\nExpected Result:\r\nAvailability page is displayed\r\n3. Select seats and click Continue button\r\nExpected Result:\r\nShopping card is displayed with the selected tickets details\r\n4. Click Continue button on the Shopping cart page\r\nExpected Result:\r\nLog in modal is displayed\r\n5. Verify the login modal has options like -\n-I don?t have an account\n-I already have an account\r\nExpected Result:\r\nThe login modal has options like -\n-I don?t have an account\n-I already have an account\r\n6. Verify the Login modal has \"Continue as guest\" button\nand click on it\r\nExpected Result:\r\nThe Login modal has  \"Continue as guest\" button and when clicked user is \nshown Payment page\r\n7. Fill in all required fields on Payment page and click Buy Tickets \nbutton\r\nExpected Result:\r\nThe transaction is completed and Confirmation page is displayed\r\n8. Veify the confirmation email, which should not include the LinkedMyTicketsLogin info\r\nExpected Result:\r\nThe following message is not displayed in the email\n\nClick the My Tickets link below and use your MLB.com email ({0}) and password to log in and see your tickets. a href=\\\"{1}\\\" target=\"_blank\">My Tickets.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch GPL Single sales link\r\n2. Click Buy Tickets button against an event\r\n3. Select seats and click Continue button\r\n4. Click Continue button on the Shopping cart page\r\n5. Verify the login modal has options like -\n-I don?t have an account\n-I already have an account\r\n6. Verify the Login modal has \"Continue as guest\" button\nand click on it\r\n7. Fill in all required fields on Payment page and click Buy Tickets \nbutton\r\n8. Veify the confirmation email, which should not include the LinkedMyTicketsLogin info",
        "expected": "1. Schedule page is opened\r\n2. Availability page is displayed\r\n3. Shopping card is displayed with the selected tickets details\r\n4. Log in modal is displayed\r\n5. The login modal has options like -\n-I don?t have an account\n-I already have an account\r\n6. The Login modal has  \"Continue as guest\" button and when clicked user is \nshown Payment page\r\n7. The transaction is completed and Confirmation page is displayed\r\n8. The following message is not displayed in the email\n\nClick the My Tickets link below and use your MLB.com email ({0}) and password to log in and see your tickets. a href=\\\"{1}\\\" target=\"_blank\">My Tickets."
      }
    ],
    "custom_jiras": "61"
  },
  {
    "id": 30716969,
    "title": "Verify user is not able to  log in to GPL Mytickets using email login credentials if UNMTLGEN is false",
    "section_id": 1686252,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12973",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C152527",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Set UNMTLGEN asfalse at Mytickets supplier level",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch GPL Mytickets link\r\nExpected Result:\r\nLog in page is displayed\r\n2. Enter Email id  and password of an existing patron and click Log in button\r\nExpected Result:\r\nUser is shown the following CNTUGPLM message:\n\nYou can't use the Registered Email to login to MyTickets at this time. Please use the MyTickets username/password",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch GPL Mytickets link\r\n2. Enter Email id  and password of an existing patron and click Log in button",
        "expected": "1. Log in page is displayed\r\n2. User is shown the following CNTUGPLM message:\n\nYou can't use the Registered Email to login to MyTickets at this time. Please use the MyTickets username/password"
      }
    ],
    "custom_jiras": "61"
  },
  {
    "id": 30716970,
    "title": "Verify that Manage Tickets feature on the confirmation page takes user to MyTickets to login and log in using Account number login credentials",
    "section_id": 1686252,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12973",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C152528",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.LGPLATMT and FPISE should be true at Single sales supplier level\r\n2.UNMTLGEN should be true at Mytickets supplier level",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch GPL Single sales link\r\nExpected Result:\r\nSchedule page is displayed\r\n2. Click Buy Tickets button against an event\r\nExpected Result:\r\nAvailability page is displayed\r\n3. Select seats and click Continue button\r\nExpected Result:\r\nShopping card is displayed with the selected tickets details\r\n4. Click Continue button on the Shopping cart page\r\nExpected Result:\r\nLog in modal is displayed\r\n5. 1.Select ' I dont have an account' option\n2.Enter Email id and password and confirm password fields\n3.Click Login button\r\nExpected Result:\r\nUser is logged in and Payment page is displayed\r\n6. Click Add new card button\r\nExpected Result:\r\nCard info modal is displayed\r\n7. Enter card details and Billing Information details and click \nSubmit button on Credit card modal\r\nExpected Result:\r\nThe modal is closed and added card is shown under Card grid\r\n8. Fill in all other required fields on Payment page and click Buy Tickets button\r\nExpected Result:\r\nThe transaction is completed and Confirmation page is displayed\r\n9. Verify GPLMLCM message is shown on Confirmation page\r\nExpected Result:\r\nThe following GPLMLCM message is shown :\n\nYour registered email has been linked to the {0} MyTickets account. \nClick the {1} button below and log in to MyTickets (using your registered \nemail and password) to see your tickets.\r\n10. Verify patron_reg table for new account created\n\nselect * from pvo.patron_reg where patron_id=\r\nExpected Result:\r\nAll details are saved correctly\r\n11. Click Mange Tickets/Distribute to Friends button on the \nConfirmation page\r\nExpected Result:\r\nMytickets login page is opened\r\n12. Enter Account number and password of newly created account \nand click Log in button\r\nExpected Result:\r\nThe user is logged in and landing page is displayed\r\n13. 1.Go to MyAccount-Account Info tab\n2.Verify 'My Account Information' section displays the details entered in Card Info madal of Single sales flow\r\nExpected Result:\r\nMy Account Information' section displays the details entered in Card Info madal of Single sales flow\r\n14. 1.Go to Mytickets Inventory tab\n2.Verify the tickets purchased in single sales flow are displayed\r\nExpected Result:\r\nThe tickets purchased in single sales flow are displayed on Inventory tab",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch GPL Single sales link\r\n2. Click Buy Tickets button against an event\r\n3. Select seats and click Continue button\r\n4. Click Continue button on the Shopping cart page\r\n5. 1.Select ' I dont have an account' option\n2.Enter Email id and password and confirm password fields\n3.Click Login button\r\n6. Click Add new card button\r\n7. Enter card details and Billing Information details and click \nSubmit button on Credit card modal\r\n8. Fill in all other required fields on Payment page and click Buy Tickets button\r\n9. Verify GPLMLCM message is shown on Confirmation page\r\n10. Verify patron_reg table for new account created\n\nselect * from pvo.patron_reg where patron_id=\r\n11. Click Mange Tickets/Distribute to Friends button on the \nConfirmation page\r\n12. Enter Account number and password of newly created account \nand click Log in button\r\n13. 1.Go to MyAccount-Account Info tab\n2.Verify 'My Account Information' section displays the details entered in Card Info madal of Single sales flow\r\n14. 1.Go to Mytickets Inventory tab\n2.Verify the tickets purchased in single sales flow are displayed",
        "expected": "1. Schedule page is displayed\r\n2. Availability page is displayed\r\n3. Shopping card is displayed with the selected tickets details\r\n4. Log in modal is displayed\r\n5. User is logged in and Payment page is displayed\r\n6. Card info modal is displayed\r\n7. The modal is closed and added card is shown under Card grid\r\n8. The transaction is completed and Confirmation page is displayed\r\n9. The following GPLMLCM message is shown :\n\nYour registered email has been linked to the {0} MyTickets account. \nClick the {1} button below and log in to MyTickets (using your registered \nemail and password) to see your tickets.\r\n10. All details are saved correctly\r\n11. Mytickets login page is opened\r\n12. The user is logged in and landing page is displayed\r\n13. My Account Information' section displays the details entered in Card Info madal of Single sales flow\r\n14. The tickets purchased in single sales flow are displayed on Inventory tab"
      }
    ],
    "custom_jiras": "61"
  },
  {
    "id": 30716971,
    "title": "Verify that Manage Tickets feature on the confirmation page takes user to MyTickets to login and log in using email login credentials",
    "section_id": 1686252,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12973",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_refs": "C152529",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.LGPLATMT and FPISE should be true at Single sales supplier level\r\n2.UNMTLGEN should be true at Mytickets supplier level",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch GPL Single sales link\r\nExpected Result:\r\nSchedule page is opened\r\n2. Click Buy tickets button against an event\r\nExpected Result:\r\nAvailability page is displayed\r\n3. Select seats and click Continue button\r\nExpected Result:\r\nShopping card is displayed with the selected tickets details\r\n4. Click Continue button on the Shopping cart page\r\nExpected Result:\r\nLog in modal is displayed\r\n5. 1.Select ' I dont have an account' option\n2.Enter Email id and password and confirm password fields\n3.Click Login button\r\nExpected Result:\r\nUser is logged in and Payment page is displayed\r\n6. Click Add new card button\r\nExpected Result:\r\nCard info modal is displayed\r\n7. Enter card details and Billing Information details and click \nSubmit button on Credit card modal\r\nExpected Result:\r\nThe modal is closed and added card is shown under Card grid\r\n8. Fill in all other required fields on Payment page and click Buy Tickets button\r\nExpected Result:\r\nThe transaction is completed and Confirmation page is displayed\r\n9. Verify GPLMLCM message is shown on Confirmation page\r\nExpected Result:\r\nThe following GPLMLCM message is shown :\n\nYour registered email has been linked to the {0} MyTickets account. \nClick the {1} button below and log in to MyTickets (using your registered \nemail and password) to see your tickets.\r\n10. Verify patron_reg table for new account created\n\nselect * from pvo.patron_reg where patron_id=\r\nExpected Result:\r\nAll details are saved correctly\r\n11. Click Mange Tickets/Distribute to Friends button on the \nConfirmation page\r\nExpected Result:\r\nMytickets login page is opened\r\n12. Enter emai id and password of newly created account and click Log in button\r\nExpected Result:\r\nThe user is logged in and landing page is displayed\r\n13. 1.Go to MyAccount-Account Info tab\n2.Verify 'My Account Information' section displays the details entered in Card Info madal of Single sales flow\r\nExpected Result:\r\nMy Account Information' section displays the details entered in Card Info madal of Single sales flow\r\n14. 1.Go to Mytickets Inventory tab\n2.Verify the tickets purchased in single sales flow are displayed\r\nExpected Result:\r\nThe tickets purchased in single sales flow are displayed on Inventory tab",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch GPL Single sales link\r\n2. Click Buy tickets button against an event\r\n3. Select seats and click Continue button\r\n4. Click Continue button on the Shopping cart page\r\n5. 1.Select ' I dont have an account' option\n2.Enter Email id and password and confirm password fields\n3.Click Login button\r\n6. Click Add new card button\r\n7. Enter card details and Billing Information details and click \nSubmit button on Credit card modal\r\n8. Fill in all other required fields on Payment page and click Buy Tickets button\r\n9. Verify GPLMLCM message is shown on Confirmation page\r\n10. Verify patron_reg table for new account created\n\nselect * from pvo.patron_reg where patron_id=\r\n11. Click Mange Tickets/Distribute to Friends button on the \nConfirmation page\r\n12. Enter emai id and password of newly created account and click Log in button\r\n13. 1.Go to MyAccount-Account Info tab\n2.Verify 'My Account Information' section displays the details entered in Card Info madal of Single sales flow\r\n14. 1.Go to Mytickets Inventory tab\n2.Verify the tickets purchased in single sales flow are displayed",
        "expected": "1. Schedule page is opened\r\n2. Availability page is displayed\r\n3. Shopping card is displayed with the selected tickets details\r\n4. Log in modal is displayed\r\n5. User is logged in and Payment page is displayed\r\n6. Card info modal is displayed\r\n7. The modal is closed and added card is shown under Card grid\r\n8. The transaction is completed and Confirmation page is displayed\r\n9. The following GPLMLCM message is shown :\n\nYour registered email has been linked to the {0} MyTickets account. \nClick the {1} button below and log in to MyTickets (using your registered \nemail and password) to see your tickets.\r\n10. All details are saved correctly\r\n11. Mytickets login page is opened\r\n12. The user is logged in and landing page is displayed\r\n13. My Account Information' section displays the details entered in Card Info madal of Single sales flow\r\n14. The tickets purchased in single sales flow are displayed on Inventory tab"
      }
    ],
    "custom_jiras": "61"
  },
  {
    "id": 30716972,
    "title": "Verify if LGPLATMT is true the GPL single sales purchase is associated with the Mytickets account of the email credentials for a new user",
    "section_id": 1686252,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12973",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_refs": "C152530",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.LGPLATMT and FPISE should be true at Single sales supplier level\r\n2.UNMTLGEN should be true at Mytickets supplier level",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch GPL Single sales link\r\nExpected Result:\r\nSchedule page is opened\r\n2. Click Buy Tickets button against an event\r\nExpected Result:\r\nAvailability page is displayed\r\n3. Select seats and click Continue button\r\nExpected Result:\r\nShopping card is displayed with the selected tickets details\r\n4. Click Continue button on the Shopping cart page\r\nExpected Result:\r\nLog in modal is displayed\r\n5. 1.Select ' I dont have an account' option\n2.Enter Email id and password and confirm password fields\n3.Click Login button\r\nExpected Result:\r\nUser is logged in and Payment page is displayed\r\n6. Click Add new card button\r\nExpected Result:\r\nCard info modal is displayed\r\n7. Enter card details and Billing Information details and click \nSubmit button on Credit card modal\r\nExpected Result:\r\nThe modal is closed and added card is shown under Card grid\r\n8. Fill in all other required fields on Payment page and click Buy Tickets button\r\nExpected Result:\r\nThe transaction is completed and Confirmation page is displayed\r\n9. Verify GPLMLCM message is shown on Confirmation page\r\nExpected Result:\r\nThe following GPLMLCM message is shown :\n\nYour registered email has been linked to the {0} MyTickets account. \nClick the {1} button below and log in to MyTickets (using your registered \nemail and password) to see your tickets.\r\n10. Verify patron_reg table for new account created\n\nselect * from pvo.patron_reg where patron_id=\r\nExpected Result:\r\nAll details are saved correctly\r\n11. Launch GPL Mytickets link\r\nExpected Result:\r\nLogin page is displayed\r\n12. Enter emai id and password of newly created account and click Log in button\r\nExpected Result:\r\nThe user is logged in and landing page is displayed\r\n13. 1.Go to MyAccount-Account Info tab\n2.Verify 'My Account Information' section displays the details entered in Card Info madal of Single sales flow\r\nExpected Result:\r\nMy Account Information' section displays the details entered in Card Info madal of Single sales flow\r\n14. 1.Go to Mytickets Inventory tab\n2.Verify the tickets purchased in single sales flow are displayed\r\nExpected Result:\r\nThe tickets purchased in single sales flow are displayed on Inventory tab",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch GPL Single sales link\r\n2. Click Buy Tickets button against an event\r\n3. Select seats and click Continue button\r\n4. Click Continue button on the Shopping cart page\r\n5. 1.Select ' I dont have an account' option\n2.Enter Email id and password and confirm password fields\n3.Click Login button\r\n6. Click Add new card button\r\n7. Enter card details and Billing Information details and click \nSubmit button on Credit card modal\r\n8. Fill in all other required fields on Payment page and click Buy Tickets button\r\n9. Verify GPLMLCM message is shown on Confirmation page\r\n10. Verify patron_reg table for new account created\n\nselect * from pvo.patron_reg where patron_id=\r\n11. Launch GPL Mytickets link\r\n12. Enter emai id and password of newly created account and click Log in button\r\n13. 1.Go to MyAccount-Account Info tab\n2.Verify 'My Account Information' section displays the details entered in Card Info madal of Single sales flow\r\n14. 1.Go to Mytickets Inventory tab\n2.Verify the tickets purchased in single sales flow are displayed",
        "expected": "1. Schedule page is opened\r\n2. Availability page is displayed\r\n3. Shopping card is displayed with the selected tickets details\r\n4. Log in modal is displayed\r\n5. User is logged in and Payment page is displayed\r\n6. Card info modal is displayed\r\n7. The modal is closed and added card is shown under Card grid\r\n8. The transaction is completed and Confirmation page is displayed\r\n9. The following GPLMLCM message is shown :\n\nYour registered email has been linked to the {0} MyTickets account. \nClick the {1} button below and log in to MyTickets (using your registered \nemail and password) to see your tickets.\r\n10. All details are saved correctly\r\n11. Login page is displayed\r\n12. The user is logged in and landing page is displayed\r\n13. My Account Information' section displays the details entered in Card Info madal of Single sales flow\r\n14. The tickets purchased in single sales flow are displayed on Inventory tab"
      }
    ],
    "custom_jiras": "61"
  },
  {
    "id": 30716973,
    "title": "Verify user can log in to Mytickets using account number-password combination if UNMTLGEN is true at Mytickets supplier",
    "section_id": 1686252,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12973",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 9,
    "custom_is_automated": false,
    "custom_refs": "C152531",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Set UNMTLGEN =true at GPL Mytickets supplier level",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch GPL Mytickets link\r\nExpected Result:\r\nLog in page is displayed\r\n2. Enter Account number and password and click Log in button\r\nExpected Result:\r\nThe patron is logged in and landing page is shown",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch GPL Mytickets link\r\n2. Enter Account number and password and click Log in button",
        "expected": "1. Log in page is displayed\r\n2. The patron is logged in and landing page is shown"
      }
    ],
    "custom_jiras": "61"
  },
  {
    "id": 30716974,
    "title": "Verify \"Manage Tickets\" button & GPLMLCM on confirmation page and LMLEMSG in email is hidden when HTMMBAT is true and LGPLATMT is true for an existing user",
    "section_id": 1686252,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PVO-16520",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 10,
    "custom_is_automated": false,
    "custom_refs": "C152532",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set LGPLATMT true and HTMMBAT=true at Single sales supplier level\r\n2.Set  in CFEM",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch GPL single sales application link\r\nExpected Result:\r\nSchedule page is opened\r\n2. Click Buy Tickets button against an event\r\nExpected Result:\r\nAvailability page of the event is opened\r\n3. Select seats from desired section/price scale and click Continue button\r\nExpected Result:\r\nShopping cart is displayed with selected tickets' details\r\n4. Click Continue button on the cart\r\nExpected Result:\r\nLogin modal is opened\r\n5. Select I already have an account option\nEnter Email ID and password\nclick Log in button\r\nExpected Result:\r\nUser is logged in and payment page is shown\r\n6. Fill in all required fields on the payment page including:\n\n1.Select an existing card and enter CVC\n2. Email and phone fields\n3. Insurance\n4. Gender and DOB\n5. DPUs\n6. T&C checkbox\n7. Delivery metthod\n8. Marketing source\n\nClick Buy Tickets button\r\nExpected Result:\r\nConfirmation page is displayed\r\n7. Verify that on confirmation page both \"Manage Tickets\" button & GPLMLCM message is hidden\r\nExpected Result:\r\nBoth \"Manage Tickets\" button & the following GPLMLCM  message should be hidden on confirmation page.\n\nYour registered email has been linked to the {0} MyTickets account. Click the {1} button below and log in to MyTickets (using your registered email and password) to see your tickets. \r\n8. Verify LMLEMSG is hidden in the confirmation email\r\nExpected Result:\r\nThe following LMLEMSG should be hidden in the confirmation email\n\nClick the My Tickets link below and use your MLB.com email ({0}) and password to log in and see your tickets. a href=\\\"{1}\\\" target=\"_blank\">My Tickets.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch GPL single sales application link\r\n2. Click Buy Tickets button against an event\r\n3. Select seats from desired section/price scale and click Continue button\r\n4. Click Continue button on the cart\r\n5. Select I already have an account option\nEnter Email ID and password\nclick Log in button\r\n6. Fill in all required fields on the payment page including:\n\n1.Select an existing card and enter CVC\n2. Email and phone fields\n3. Insurance\n4. Gender and DOB\n5. DPUs\n6. T&C checkbox\n7. Delivery metthod\n8. Marketing source\n\nClick Buy Tickets button\r\n7. Verify that on confirmation page both \"Manage Tickets\" button & GPLMLCM message is hidden\r\n8. Verify LMLEMSG is hidden in the confirmation email",
        "expected": "1. Schedule page is opened\r\n2. Availability page of the event is opened\r\n3. Shopping cart is displayed with selected tickets' details\r\n4. Login modal is opened\r\n5. User is logged in and payment page is shown\r\n6. Confirmation page is displayed\r\n7. Both \"Manage Tickets\" button & the following GPLMLCM  message should be hidden on confirmation page.\n\nYour registered email has been linked to the {0} MyTickets account. Click the {1} button below and log in to MyTickets (using your registered email and password) to see your tickets. \r\n8. The following LMLEMSG should be hidden in the confirmation email\n\nClick the My Tickets link below and use your MLB.com email ({0}) and password to log in and see your tickets. a href=\\\"{1}\\\" target=\"_blank\">My Tickets."
      }
    ],
    "custom_jiras": null
  },
  {
    "id": 30716975,
    "title": "Verify that TADIML takes TADIM as default value in payment page when TADIML is not set with any value",
    "section_id": 1686253,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15472",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C152572",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.Set SPLITDE as true at single sales supplier level\r\n2.DO not set TADIML at any levels \r\n3.Set TADIM, TADIM2,TADIM3,TADIM4,TADIM5, TADIM6, TADIM7, TADIM8 and TADIM9 at T@H delivery method level",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch MLB single sales url \r\nExpected Result:\r\nCalendar page is opened\r\n2. Click T link against any event\r\nExpected Result:\r\nAvailability page is displayed\r\n3. Select number of tickets and click Continue button.\r\nExpected Result:\r\nShopping cart is displayed\r\n4. Click Continue button on cart page\r\nExpected Result:\r\nLogin modal is opened\r\n5. 1. Select I already have an account in MLB.com radio button.\n2. Enter Email ID and password\n3. Click Log in button\r\nExpected Result:\r\nUser is navigated to Delivery page\r\n6. Click \"i\" icon against T@H delivery method\r\nExpected Result:\r\nAdditional Delivery Information modal is opened\r\n7. Verify TADIM text is displayed on Additional Delivery Information modal\r\nExpected Result:\r\nTADIM text is displayed on Additional Delivery Information modal\r\n8. Click Close Info button on the modal\r\nExpected Result:\r\nThe modal is closed and Delivery page is shown\r\n9. Select T@H delivery method and click Continue button\r\nExpected Result:\r\nPayment page is displayed\r\n10. Verify in the Summary section, Tickets@Home is displayed under Delivery column as a clickable text \r\nExpected Result:\r\nIn the Summary section, Tickets@Home is displayed under Delivery column as a clickable text \r\n11. Click on T@H link in the Delivery column \r\nExpected Result:\r\nDelivery details modal is opened\r\n12. Verify TADIM text is displayed on Delivery details modal \r\nExpected Result:\r\nTADIM text is displayed on Delivery details modal \r\n13. Click Close button the modal\r\nExpected Result:\r\nThe modal is closed and Payment page is shown\r\n14. On the payment page,\n\n1.Select an existing credit card and enter CVC\n2. Fill in DPUs if applicable\n3. Enter Email and Confirm Email fields\n4. Enter Mobile number and Confirm mobile number fields\n5. Select Marketing Source \n6. Opt in/out insurance if applicable\n7. Fill in DOB and gender if applicable\n\nClick Buy Tickets button \r\nExpected Result:\r\nAll fields are filled and selected. On clicking Buy tickets button, user is navigated to confirmation page \r\n15. Verify in the Seat grid section, Tickets@Home is displayed under Delivery column as a clickable text \r\nExpected Result:\r\nTickets@Home is displayed under Delivery column as a clickable text \r\n16. Click on T@H link in the Delivery column \r\nExpected Result:\r\nDelivery details modal is opened\r\n17. Verify TADIM text is displayed on Delivery details modal \r\nExpected Result:\r\nTADIM text is displayed on Delivery details modal",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch MLB single sales url \r\n2. Click T link against any event\r\n3. Select number of tickets and click Continue button.\r\n4. Click Continue button on cart page\r\n5. 1. Select I already have an account in MLB.com radio button.\n2. Enter Email ID and password\n3. Click Log in button\r\n6. Click \"i\" icon against T@H delivery method\r\n7. Verify TADIM text is displayed on Additional Delivery Information modal\r\n8. Click Close Info button on the modal\r\n9. Select T@H delivery method and click Continue button\r\n10. Verify in the Summary section, Tickets@Home is displayed under Delivery column as a clickable text \r\n11. Click on T@H link in the Delivery column \r\n12. Verify TADIM text is displayed on Delivery details modal \r\n13. Click Close button the modal\r\n14. On the payment page,\n\n1.Select an existing credit card and enter CVC\n2. Fill in DPUs if applicable\n3. Enter Email and Confirm Email fields\n4. Enter Mobile number and Confirm mobile number fields\n5. Select Marketing Source \n6. Opt in/out insurance if applicable\n7. Fill in DOB and gender if applicable\n\nClick Buy Tickets button \r\n15. Verify in the Seat grid section, Tickets@Home is displayed under Delivery column as a clickable text \r\n16. Click on T@H link in the Delivery column \r\n17. Verify TADIM text is displayed on Delivery details modal",
        "expected": "1. Calendar page is opened\r\n2. Availability page is displayed\r\n3. Shopping cart is displayed\r\n4. Login modal is opened\r\n5. User is navigated to Delivery page\r\n6. Additional Delivery Information modal is opened\r\n7. TADIM text is displayed on Additional Delivery Information modal\r\n8. The modal is closed and Delivery page is shown\r\n9. Payment page is displayed\r\n10. In the Summary section, Tickets@Home is displayed under Delivery column as a clickable text \r\n11. Delivery details modal is opened\r\n12. TADIM text is displayed on Delivery details modal \r\n13. The modal is closed and Payment page is shown\r\n14. All fields are filled and selected. On clicking Buy tickets button, user is navigated to confirmation page \r\n15. Tickets@Home is displayed under Delivery column as a clickable text \r\n16. Delivery details modal is opened\r\n17. TADIM text is displayed on Delivery details modal"
      }
    ],
    "custom_jiras": "63"
  },
  {
    "id": 30716976,
    "title": "Verify that TADIM3 value set is displayed payment page for default delivery and for other deliveries(test by switching the deliveries) during  single sales flow when TADIML and DCDEFT set at org level with SPLITDE OFF",
    "section_id": 1686253,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15472",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C152573",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1. Set SPLITDE as false at Single sales supplier level\r\n2. Set TADIM3 at delivery level for all valid delivery methods of the Single sales supplier\r\n3. Set TADIML at perf level as TADIM3\r\n4. Set DCDEFT is set to the supplier delivery method code of T@H method at Single sales supplier level\r\n5. Make sure that BUTAHD is not set at any levels (Default=true)",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch MLB single sales url \r\nExpected Result:\r\nCalendar page is opened\r\n2. Click T link against the event mentioned in prerequisite\r\nExpected Result:\r\nAvailability page is displayed\r\n3. Select number of tickets and click Continue button.\r\nExpected Result:\r\nShopping cart is displayed\r\n4. Click Continue button on cart page\r\nExpected Result:\r\nLogin modal is opened\r\n5. 1. Select I already have an account in MLB.com radio button.\n2. Enter Email ID and password\n3. Click Log in button\r\nExpected Result:\r\nUser is navigated to Payment page\r\n6. Verify Delivery method section\r\nExpected Result:\r\n1. Tickets@Home delivery is displayed as a separate one with a radio button\n2. Tickets@Home is selected by default\n3. Another drop down with \"Choose One\" as the default value is present\r\n7. Verify TADIM3 text is displayed for T@H\r\nExpected Result:\r\nTADIM3 text is displayed for T@H at the right side of the Delivery method section\r\n8. Click Choose One radio button\r\nExpected Result:\r\nTADIM3 text of T@H is disappeared\r\n9. Select any other delivery method from the drop down and verify it's corresponding TADIM3 text is displayed\r\nExpected Result:\r\nTADIM3 text corresponding to the selected delivery method is displayed at the right side of the Delivery method section\r\n10. Repeat Step 9 for all remaining delivery methods available in the drop down\r\n11. Again select T@H radio button and verify TADIM3 text is displayed for T@H\r\nExpected Result:\r\nTADIM3 text is displayed for T@H at the right side of the Delivery method section\r\n12. On the payment page,\n\n1.Select an existing credit card and enter CVC\n2. Fill in DPUs if applicable\n3. Enter Email and Confirm Email fields\n4. Enter Mobile number and Confirm mobile number fields\n5. Select Marketing Source \n6. Opt in/out insurance if applicable\n7. Fill in DOB and gender if applicable\n\nClick Buy Tickets button \r\nExpected Result:\r\nAll fields are filled and selected. On clicking Buy tickets button, user is navigated to confirmation page",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch MLB single sales url \r\n2. Click T link against the event mentioned in prerequisite\r\n3. Select number of tickets and click Continue button.\r\n4. Click Continue button on cart page\r\n5. 1. Select I already have an account in MLB.com radio button.\n2. Enter Email ID and password\n3. Click Log in button\r\n6. Verify Delivery method section\r\n7. Verify TADIM3 text is displayed for T@H\r\n8. Click Choose One radio button\r\n9. Select any other delivery method from the drop down and verify it's corresponding TADIM3 text is displayed\r\n10. Repeat Step 9 for all remaining delivery methods available in the drop down\r\n11. Again select T@H radio button and verify TADIM3 text is displayed for T@H\r\n12. On the payment page,\n\n1.Select an existing credit card and enter CVC\n2. Fill in DPUs if applicable\n3. Enter Email and Confirm Email fields\n4. Enter Mobile number and Confirm mobile number fields\n5. Select Marketing Source \n6. Opt in/out insurance if applicable\n7. Fill in DOB and gender if applicable\n\nClick Buy Tickets button",
        "expected": "1. Calendar page is opened\r\n2. Availability page is displayed\r\n3. Shopping cart is displayed\r\n4. Login modal is opened\r\n5. User is navigated to Payment page\r\n6. 1. Tickets@Home delivery is displayed as a separate one with a radio button\n2. Tickets@Home is selected by default\n3. Another drop down with \"Choose One\" as the default value is present\r\n7. TADIM3 text is displayed for T@H at the right side of the Delivery method section\r\n8. TADIM3 text of T@H is disappeared\r\n9. TADIM3 text corresponding to the selected delivery method is displayed at the right side of the Delivery method section\r\n10. \r\n11. TADIM3 text is displayed for T@H at the right side of the Delivery method section\r\n12. All fields are filled and selected. On clicking Buy tickets button, user is navigated to confirmation page"
      }
    ],
    "custom_jiras": "63"
  },
  {
    "id": 30716977,
    "title": "Verify that  All tickets to same location radio button is  selected by default after removing an offer from cart in MLB single sales",
    "section_id": 1686253,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13147",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C152574",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Set SPLITDE text code as true at Single sales supplier level",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch MLB Single sales link.\r\nExpected Result:\r\nCalendar page is opened\r\n2. Click T link against any event\r\nExpected Result:\r\nAvailability page of the event is opened\r\n3. Select number of tickets and click Continue button\r\nExpected Result:\r\nUser should be able to select ticket and \nsuccessfully navigate to shopping cart\r\n4. Click on Add Another Event button\r\nExpected Result:\r\nCalendar page is opened\r\n5. Select another event from calendar by clicking T link\nthe event\r\nExpected Result:\r\nAvailability page of the event is opened\r\n6. Select number of tickets and click Continue button\r\nExpected Result:\r\nShopping cart is displayed with the details of both offers\r\n7. Click on Continue button on the cart page\r\nExpected Result:\r\nLogin modal is opened\r\n8. 1.Select I already have an account on MLB.com\n2.Enter Email ID and password\n3.Click Log in button\r\nExpected Result:\r\n1.User is navigated to Delivery page\n2.All tickets to same location radio button is selected by default\n3.Split my order radio button is also present\r\n9. Opt for 'Split my Order'\r\nExpected Result:\r\nUser is shown Split my order page with both offers\r\n10. Assign delivery methods to both the offers\r\nExpected Result:\r\nDelivery methods are assigned for both the offers\r\n11. Click on 'Shopping Cart' link on the top of Delivery \nMethod page\r\nExpected Result:\r\nUser should navigated back to shopping cart\r\n12. Remove 2nd offer from shopping cart by clicking Remove button against the offer\r\nExpected Result:\r\nOne offer should be removed and the other one remains in the cart\r\n13. Click on Continue button on the cart page\r\nExpected Result:\r\nUser is navigated to delivery method page\r\n14. Verify that 'All tickets to same location' radio \nbutton is selected by default\r\nExpected Result:\r\nAll tickets to same location' radio button should \nbe selected by default.\r\n15. Verify Split my order radio button is not  present\r\nExpected Result:\r\nSplit my order radio button is not  present on the Delivery page\r\n16. Select any delivery method and click Continue button\r\nExpected Result:\r\nUser is taken to Payment page\r\n17. On the payment page,\n\n1.Select an existing credit card and enter CVC\n2. Fill in DPUs if applicable\n3. Enter Email and Confirm Email fields\n4. Enter Mobile number and Confirm mobile number fields\n5. Select Marketing Source \n6. Opt in/out insurance if applicable\n7. Fill in DOB and gender if applicable\n\nClick Buy Tickets button\n\r\nExpected Result:\r\nConfirmation page is displayed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch MLB Single sales link.\r\n2. Click T link against any event\r\n3. Select number of tickets and click Continue button\r\n4. Click on Add Another Event button\r\n5. Select another event from calendar by clicking T link\nthe event\r\n6. Select number of tickets and click Continue button\r\n7. Click on Continue button on the cart page\r\n8. 1.Select I already have an account on MLB.com\n2.Enter Email ID and password\n3.Click Log in button\r\n9. Opt for 'Split my Order'\r\n10. Assign delivery methods to both the offers\r\n11. Click on 'Shopping Cart' link on the top of Delivery \nMethod page\r\n12. Remove 2nd offer from shopping cart by clicking Remove button against the offer\r\n13. Click on Continue button on the cart page\r\n14. Verify that 'All tickets to same location' radio \nbutton is selected by default\r\n15. Verify Split my order radio button is not  present\r\n16. Select any delivery method and click Continue button\r\n17. On the payment page,\n\n1.Select an existing credit card and enter CVC\n2. Fill in DPUs if applicable\n3. Enter Email and Confirm Email fields\n4. Enter Mobile number and Confirm mobile number fields\n5. Select Marketing Source \n6. Opt in/out insurance if applicable\n7. Fill in DOB and gender if applicable\n\nClick Buy Tickets button",
        "expected": "1. Calendar page is opened\r\n2. Availability page of the event is opened\r\n3. User should be able to select ticket and \nsuccessfully navigate to shopping cart\r\n4. Calendar page is opened\r\n5. Availability page of the event is opened\r\n6. Shopping cart is displayed with the details of both offers\r\n7. Login modal is opened\r\n8. 1.User is navigated to Delivery page\n2.All tickets to same location radio button is selected by default\n3.Split my order radio button is also present\r\n9. User is shown Split my order page with both offers\r\n10. Delivery methods are assigned for both the offers\r\n11. User should navigated back to shopping cart\r\n12. One offer should be removed and the other one remains in the cart\r\n13. User is navigated to delivery method page\r\n14. All tickets to same location' radio button should \nbe selected by default.\r\n15. Split my order radio button is not  present on the Delivery page\r\n16. User is taken to Payment page\r\n17. Confirmation page is displayed"
      }
    ],
    "custom_jiras": "61"
  },
  {
    "id": 30716978,
    "title": "Verify the number 1 does not display right after the Delivery description on the payment and confirmation page when SPLIT Delivery is turned OFF",
    "section_id": 1686253,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12072",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C152575",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Set SPLITDE as false at Single sales supplier level",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch MLB single sales url \r\nExpected Result:\r\nCalendar page is opened\r\n2. Click T link against any event\r\nExpected Result:\r\nAvailability page is displayed\r\n3. Select number of tickets and click Continue button.\r\nExpected Result:\r\nShopping cart is displayed\r\n4. Click Continue button on cart page\r\nExpected Result:\r\nLogin modal is opened\r\n5. 1. Select I already have an account in MLB.com radio button.\n2. Enter Email ID and password\n3. Click Log in button\r\nExpected Result:\r\nUser is navigated to Payment page\r\n6. Verify Delivery method section is available on the payment page\r\nExpected Result:\r\n Delivery method section is available on the payment page\r\n7. Verify in the Summary section, \"Delivery (If applicable ):\" text is displayed without a \"1\" just after the colon \r\nExpected Result:\r\n\"Delivery (If applicable ):\" text is displayed without a \"1\" just after the colon \r\n8. On the payment page,\n\n1.Select an existing credit card and enter CVC\n2. Fill in DPUs if applicable\n3. Enter Email and Confirm Email fields\n4. Enter Mobile number and Confirm mobile number fields\n5. Select Marketing Source \n6. Opt in/out insurance if applicable\n7. Fill in DOB and gender if applicable\n\nClick Buy Tickets button \r\nExpected Result:\r\nAll fields are filled and selected. On clicking Buy tickets button, user is navigated to confirmation page \r\n9. Verify under the seat gird on Confirmation page, \"Delivery (If applicable ):\" text is displayed without a \"1\" just after the colon \r\nExpected Result:\r\n\"Delivery (If applicable ):\" text is displayed without a \"1\" just after the colon",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch MLB single sales url \r\n2. Click T link against any event\r\n3. Select number of tickets and click Continue button.\r\n4. Click Continue button on cart page\r\n5. 1. Select I already have an account in MLB.com radio button.\n2. Enter Email ID and password\n3. Click Log in button\r\n6. Verify Delivery method section is available on the payment page\r\n7. Verify in the Summary section, \"Delivery (If applicable ):\" text is displayed without a \"1\" just after the colon \r\n8. On the payment page,\n\n1.Select an existing credit card and enter CVC\n2. Fill in DPUs if applicable\n3. Enter Email and Confirm Email fields\n4. Enter Mobile number and Confirm mobile number fields\n5. Select Marketing Source \n6. Opt in/out insurance if applicable\n7. Fill in DOB and gender if applicable\n\nClick Buy Tickets button \r\n9. Verify under the seat gird on Confirmation page, \"Delivery (If applicable ):\" text is displayed without a \"1\" just after the colon",
        "expected": "1. Calendar page is opened\r\n2. Availability page is displayed\r\n3. Shopping cart is displayed\r\n4. Login modal is opened\r\n5. User is navigated to Payment page\r\n6.  Delivery method section is available on the payment page\r\n7. \"Delivery (If applicable ):\" text is displayed without a \"1\" just after the colon \r\n8. All fields are filled and selected. On clicking Buy tickets button, user is navigated to confirmation page \r\n9. \"Delivery (If applicable ):\" text is displayed without a \"1\" just after the colon"
      }
    ],
    "custom_jiras": "63"
  },
  {
    "id": 30716979,
    "title": "Verify that fee and total amount details are displayed correctly in TAHBOEM mail when transaction contains two delivery service charges.",
    "section_id": 1686254,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14680",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C152564",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Box office T@H setup:\r\n\r\nBox office T@H setup in PV:\r\n\r\n1.\tHave Box Office Tickets@Home delivery method configured with Type as â€œOnline Tickets@Homeâ€�\r\n2.\tOnly Box office is added as channel in the Box office T@H channel context \r\n3.\tInclude the desired event to the Event context/ Make sure that the desired event is not in excluded list\r\n4.\tMake sure that, an agency is present under Org Admin->Agencies with Channel=Box Office and Settlement Sales channel =Web\r\n5.\tMake sure that this agency is added to a specific user(specifically set for Box office T@H transactions) under User Management\r\n\r\nBox office T@H setup in PVO:\r\n\r\n1.\tBox office T@H delivery method is mapped to PVO Supplier (Main tool box->Supplier->Delivery Types) with Delivery True Type ID as 5|Print At Home\r\n2.\tMake sure that Subagency exists under Agencies->MLB/GPL Subagency to use for Box office T@H\r\n3.\tThe same subagency should be added to Supplier->Supplier Subagency with \r\nOperator Name and Password of the user configured in PV\r\n4.\tMake sure that Supplier->Order query is set correctly \r\na.\tProxy SubAgency Code is set as the subagency configured for Box office T@H\r\nb.\tRun Interval is set \r\nc.\tNext Run Date is in the nearer future\r\nd.\tEnabled checkbox is selected\r\n5.\tThe event added to Box office T@H context in PV , should be perf accepted\r\n6.\tAdd Box office T@H subagency record to perf_channel_subagency record (Main tool box->Events->Performance channel) \r\n\r\na.\tSales Channel Code : W\r\nb.\tSubAgency Code : Box office T@H subagency\r\nc.\tOnSale Date : past date\r\nd.\tOffsale Date : Future date\r\ne.\tOnSale Flag : true\r\nf.\tMin and Max tickets =1/100\r\ng.\tSold Out Flag: false\r\n\r\n7.\tMake sure that TAHOrderQueryThread is running\r\n8.\tTAHOQRDC is set at supplier with delivery code of Box office T@H .\r\n9.\tTAHBOEM and TAHBOES is set at Org level\r\n\r\nTAHBOEM should have the following literals set\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n10.\tThe property tah.bots_order_email.domain_url = {domain} should also be set\r\n\r\n\r\n\r\nOther setups:\r\n\r\n1.Configure two service charges of Type Delivery and associate them to Box office T@H delivery method\r\n2.Include the event set for Box office T@H to both SCs context",
    "custom_test_purpose": null,
    "custom_steps": "1. 1. In PVO Maintenance site, go to Main tool box->Supplier->Supplier order query\n2.Note down the next run time\n \r\nExpected Result:\r\nNext run time is noted down and it is in the nearer future\r\n2. Before the Next Run time passes, run the below steps\r\n3. Log in to PV application as PVO-PV user\r\nExpected Result:\r\nUser is logged in\r\n4. In the Home page, select Box office agency as the Current Agency and click Update\n\r\nExpected Result:\r\nBox office agency is selected as the Current Agency\n\r\n5. 1.Go to Ticketing->Ticket Sales\n2.Search for the event\n3.Enter number of tickets and click Lock seats button\n\r\nExpected Result:\r\nCart is displayed.\nThe two delivery service charges are shown under Total Due section\r\n6. Assign a Financial patron to the cart\r\nExpected Result:\r\nFinancial patron is selected\r\n7. In the Delivery tab, select Box office T@H and click Apply\r\nExpected Result:\r\nBox office T@H is assigned as the delivery\r\n8. Under Payment tab, select payment option and click Accept payment button\r\nExpected Result:\r\nPayment method is selected\r\n9. Click checkout button\r\nExpected Result:\r\nTransaction is completed successfully\r\n10. 1.Click Transaction# in the Confirmation form- User is taken to Ticket Service\n2.Click Service charges tab in the ticket services\r\nExpected Result:\r\nThe two delivery service charges are shown\r\n11. Wait for the Next Run time in Supplier Order query to pass\r\n12. After the next run time , run the query \n\nselect * from pvo.offer where suppllier_trxn_id={}; \r\nExpected Result:\r\nThe row should be returned with STATUS_CODE as HS\r\n13. Verify GetOrders call in logs\r\nExpected Result:\r\nPVO makes GetOrders call and PV responds with transaction details of the Box office T@H transaction done above\n\nIt also has the details of both fees under  nodes for the transaction\r\n14. Verify patron received TAHBOEM email and both service charges are displayed correctly \r\nExpected Result:\r\nOrderShipping literal is replaced with sum of both service charges",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. In PVO Maintenance site, go to Main tool box->Supplier->Supplier order query\n2.Note down the next run time\n \r\n2. Before the Next Run time passes, run the below steps\r\n3. Log in to PV application as PVO-PV user\r\n4. In the Home page, select Box office agency as the Current Agency and click Update\n\r\n5. 1.Go to Ticketing->Ticket Sales\n2.Search for the event\n3.Enter number of tickets and click Lock seats button\n\r\n6. Assign a Financial patron to the cart\r\n7. In the Delivery tab, select Box office T@H and click Apply\r\n8. Under Payment tab, select payment option and click Accept payment button\r\n9. Click checkout button\r\n10. 1.Click Transaction# in the Confirmation form- User is taken to Ticket Service\n2.Click Service charges tab in the ticket services\r\n11. Wait for the Next Run time in Supplier Order query to pass\r\n12. After the next run time , run the query \n\nselect * from pvo.offer where suppllier_trxn_id={}; \r\n13. Verify GetOrders call in logs\r\n14. Verify patron received TAHBOEM email and both service charges are displayed correctly",
        "expected": "1. Next run time is noted down and it is in the nearer future\r\n2. \r\n3. User is logged in\r\n4. Box office agency is selected as the Current Agency\n\r\n5. Cart is displayed.\nThe two delivery service charges are shown under Total Due section\r\n6. Financial patron is selected\r\n7. Box office T@H is assigned as the delivery\r\n8. Payment method is selected\r\n9. Transaction is completed successfully\r\n10. The two delivery service charges are shown\r\n11. \r\n12. The row should be returned with STATUS_CODE as HS\r\n13. PVO makes GetOrders call and PV responds with transaction details of the Box office T@H transaction done above\n\nIt also has the details of both fees under  nodes for the transaction\r\n14. OrderShipping literal is replaced with sum of both service charges"
      }
    ],
    "custom_jiras": "62.1"
  },
  {
    "id": 30716980,
    "title": "Verify completing a receivable transaction in PV using  the Box Office T@H delivery method with the whole order amount as receivable ,so that the order is unpaid",
    "section_id": 1686254,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13251",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C152565",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Box office T@H setup:\r\n\r\nBox office T@H setup in PV:\r\n\r\n1.\tHave Box Office Tickets@Home delivery method configured with Type as â€œOnline Tickets@Homeâ€�\r\n2.\tOnly Box office is added as channel in the Box office T@H channel context \r\n3.\tInclude the desired event to the Event context/ Make sure that the desired event is not in excluded list\r\n4.\tMake sure that, an agency is present under Org Admin->Agencies with Channel=Box Office and Settlement Sales channel =Web\r\n5.\tMake sure that this agency is added to a specific user(specifically set for Box office T@H transactions) under User Management\r\n\r\nBox office T@H setup in PVO:\r\n\r\n1.\tBox office T@H delivery method is mapped to PVO Supplier (Main tool box->Supplier->Delivery Types) with Delivery True Type ID as 5|Print At Home\r\n2.\tMake sure that Subagency exists under Agencies->MLB/GPL Subagency to use for Box office T@H\r\n3.\tThe same subagency should be added to Supplier->Supplier Subagency with \r\nOperator Name and Password of the user configured in PV\r\n4.\tMake sure that Supplier->Order query is set correctly \r\na.\tProxy SubAgency Code is set as the subagency configured for Box office T@H\r\nb.\tRun Interval is set \r\nc.\tNext Run Date is in the nearer future\r\nd.\tEnabled checkbox is selected\r\n5.\tThe event added to Box office T@H context in PV , should be perf accepted\r\n6.\tAdd Box office T@H subagency record to perf_channel_subagency record (Main tool box->Events->Performance channel) \r\n\r\na.\tSales Channel Code : W\r\nb.\tSubAgency Code : Box office T@H subagency\r\nc.\tOnSale Date : past date\r\nd.\tOffsale Date : Future date\r\ne.\tOnSale Flag : true\r\nf.\tMin and Max tickets =1/100\r\ng.\tSold Out Flag: false\r\n\r\n7.\tMake sure that TAHOrderQueryThread is running\r\n8.\tTAHOQRDC is set at supplier with delivery code of Box office T@H .\r\n9.\tTAHBOEM and TAHBOES is set at Org level\r\n\r\nTAHBOEM should have the following literals set\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n10.\tThe property tah.bots_order_email.domain_url = {domain} should also be set",
    "custom_test_purpose": null,
    "custom_steps": "1. 1. In PVO Maintenance site, go to Main tool box->Supplier->Supplier order query\n2.Note down the next run time\n \r\nExpected Result:\r\nNext run time is noted down and it is in the nearer future\r\n2. Before the Next Run time passes, run the below steps\r\n3. Log in to PV application as PVO-PV user\r\nExpected Result:\r\nUser is logged in\r\n4. In the Home page, select Box office agency as the Current Agency and click Update\n\r\nExpected Result:\r\nBox office agency is selected as the Current Agency\n\r\n5. 1.Go to Ticketing->Ticket Sales\n2.Search for the event\n3.Enter number of tickets and click Lock seats button\n\r\nExpected Result:\r\nCart is displayed.\n\r\n6. Assign a Financial patron to the cart\r\nExpected Result:\r\nFinancial patron is selected\r\n7. In the Delivery tab, select Box office T@H and click Apply\r\nExpected Result:\r\nBox office T@H is assigned as the delivery\r\n8. 1. Go to Receivables tab->Create->Custom plan->Select Custom plan checkbox->Enter quantity and Interval->Click Build\n2.Make sure that Due date of all installments are in the future \n3.Select Receivable Type and Note Type\n4.Click Apply Receivable\r\nExpected Result:\r\n1. Receivable is created \n2. Cart Balance is shown as $0.00\r\n9. Click checkout button\r\nExpected Result:\r\nTransaction is completed successfully\r\n10. 1.Click Transaction# in the Confirmation form- User is taken to Ticket Service\n2.Click Receivables tab in the ticket services\r\nExpected Result:\r\nReceivables details are shown\r\n11. Wait for the Next Run time in Supplier Order query to pass\r\n12. After the next run time , run the query \n\nselect * from pvo.offer where suppllier_trxn_id={}; \r\nExpected Result:\r\nThe row should be returned with STATUS_CODE as HS\r\n13. Verify GetOrders call in logs\r\nExpected Result:\r\nPVO makes GetOrders call and PV responds with transaction details of the Box office T@H transaction done above\n\n\r\n14. Verify patron received TAHBOEM email \r\nExpected Result:\r\nThe purchaser received TAHBOEM email\r\n15. Click TicketsAtHomeURL in the email\r\nExpected Result:\r\n1. User is taken into Print tickets page\n2. The page has all tickets' details \r\n16. Click View and Print tickets button\r\nExpected Result:\r\nAll tickets are printed\r\n17. Run the below queries :\n\nselect * from PVO.offer_payment where order_id={};\n\nselect * from PVO.payment where order_id={};\n\nselect * from PVO.payment_card where order_id={};\r\nExpected Result:\r\nNo rows are returned for all three queries",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. In PVO Maintenance site, go to Main tool box->Supplier->Supplier order query\n2.Note down the next run time\n \r\n2. Before the Next Run time passes, run the below steps\r\n3. Log in to PV application as PVO-PV user\r\n4. In the Home page, select Box office agency as the Current Agency and click Update\n\r\n5. 1.Go to Ticketing->Ticket Sales\n2.Search for the event\n3.Enter number of tickets and click Lock seats button\n\r\n6. Assign a Financial patron to the cart\r\n7. In the Delivery tab, select Box office T@H and click Apply\r\n8. 1. Go to Receivables tab->Create->Custom plan->Select Custom plan checkbox->Enter quantity and Interval->Click Build\n2.Make sure that Due date of all installments are in the future \n3.Select Receivable Type and Note Type\n4.Click Apply Receivable\r\n9. Click checkout button\r\n10. 1.Click Transaction# in the Confirmation form- User is taken to Ticket Service\n2.Click Receivables tab in the ticket services\r\n11. Wait for the Next Run time in Supplier Order query to pass\r\n12. After the next run time , run the query \n\nselect * from pvo.offer where suppllier_trxn_id={}; \r\n13. Verify GetOrders call in logs\r\n14. Verify patron received TAHBOEM email \r\n15. Click TicketsAtHomeURL in the email\r\n16. Click View and Print tickets button\r\n17. Run the below queries :\n\nselect * from PVO.offer_payment where order_id={};\n\nselect * from PVO.payment where order_id={};\n\nselect * from PVO.payment_card where order_id={};",
        "expected": "1. Next run time is noted down and it is in the nearer future\r\n2. \r\n3. User is logged in\r\n4. Box office agency is selected as the Current Agency\n\r\n5. Cart is displayed.\n\r\n6. Financial patron is selected\r\n7. Box office T@H is assigned as the delivery\r\n8. 1. Receivable is created \n2. Cart Balance is shown as $0.00\r\n9. Transaction is completed successfully\r\n10. Receivables details are shown\r\n11. \r\n12. The row should be returned with STATUS_CODE as HS\r\n13. PVO makes GetOrders call and PV responds with transaction details of the Box office T@H transaction done above\n\n\r\n14. The purchaser received TAHBOEM email\r\n15. 1. User is taken into Print tickets page\n2. The page has all tickets' details \r\n16. All tickets are printed\r\n17. No rows are returned for all three queries"
      }
    ],
    "custom_jiras": "60"
  },
  {
    "id": 30716981,
    "title": "Verify completing a comp order in PV with the Box office T@H delivery method",
    "section_id": 1686254,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13098",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C152566",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Box office T@H setup:\r\n\r\nBox office T@H setup in PV:\r\n\r\n1.\tHave Box Office Tickets@Home delivery method configured with Type as â€œOnline Tickets@Homeâ€�\r\n2.\tOnly Box office is added as channel in the Box office T@H channel context \r\n3.\tInclude the desired event to the Event context/ Make sure that the desired event is not in excluded list\r\n4.\tMake sure that, an agency is present under Org Admin->Agencies with Channel=Box Office and Settlement Sales channel =Web\r\n5.\tMake sure that this agency is added to a specific user(specifically set for Box office T@H transactions) under User Management\r\n\r\nBox office T@H setup in PVO:\r\n\r\n1.\tBox office T@H delivery method is mapped to PVO Supplier (Main tool box->Supplier->Delivery Types) with Delivery True Type ID as 5|Print At Home\r\n2.\tMake sure that Subagency exists under Agencies->MLB/GPL Subagency to use for Box office T@H\r\n3.\tThe same subagency should be added to Supplier->Supplier Subagency with \r\nOperator Name and Password of the user configured in PV\r\n4.\tMake sure that Supplier->Order query is set correctly \r\na.\tProxy SubAgency Code is set as the subagency configured for Box office T@H\r\nb.\tRun Interval is set \r\nc.\tNext Run Date is in the nearer future\r\nd.\tEnabled checkbox is selected\r\n5.\tThe event added to Box office T@H context in PV , should be perf accepted\r\n6.\tAdd Box office T@H subagency record to perf_channel_subagency record (Main tool box->Events->Performance channel) \r\n\r\na.\tSales Channel Code : W\r\nb.\tSubAgency Code : Box office T@H subagency\r\nc.\tOnSale Date : past date\r\nd.\tOffsale Date : Future date\r\ne.\tOnSale Flag : true\r\nf.\tMin and Max tickets =1/100\r\ng.\tSold Out Flag: false\r\n\r\n7.\tMake sure that TAHOrderQueryThread is running\r\n8.\tTAHOQRDC is set at supplier with delivery code of Box office T@H .\r\n9.\tTAHBOEM and TAHBOES is set at Org level\r\n\r\nTAHBOEM should have the following literals set\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n10.\tThe property tah.bots_order_email.domain_url = {domain} should also be set",
    "custom_test_purpose": null,
    "custom_steps": "1. 1. In PVO Maintenance site, go to Main tool box->Supplier->Supplier order query\n2.Note down the next run time\n \r\nExpected Result:\r\nNext run time is noted down and it is in the nearer future\r\n2. Before the Next Run time passes, run the below steps\r\n3. Log in to PV application as PVO-PV user\r\nExpected Result:\r\nUser is logged in\r\n4. In the Home page, select Box office agency as the Current Agency and click Update\n\r\nExpected Result:\r\nBox office agency is selected as the Current Agency\n\r\n5. 1.Go to Ticketing->Ticket Sales\n2.Search for the event\n3.Enter number of tickets against Comp buyer type and click Lock seats button\n\r\nExpected Result:\r\nCart is displayed. Cart Balance should be $0.00\n\r\n6. Assign a Financial patron to the cart\r\nExpected Result:\r\nFinancial patron is selected\r\n7. In the Delivery tab, select Box office T@H and click Apply\r\nExpected Result:\r\nBox office T@H is assigned as the delivery\r\n8. Click checkout button\r\nExpected Result:\r\nTransaction is completed successfully\r\n9. Wait for the Next Run time in Supplier Order query to pass\r\n10. After the next run time , run the query \n\nselect * from pvo.offer where suppllier_trxn_id={}; \r\nExpected Result:\r\nThe row should be returned with STATUS_CODE as HS\r\n11. Verify GetOrders call in logs\r\nExpected Result:\r\nPVO makes GetOrders call and PV responds with transaction details of the Box office T@H transaction done above\n\n\r\n12. Verify patron received TAHBOEM email \r\nExpected Result:\r\nThe purchaser received TAHBOEM email\r\n13. Click TicketsAtHomeURL in the email\r\nExpected Result:\r\n1. User is taken into Print tickets page\n2. The page has all tickets' details \r\n14. Click View and Print tickets button\r\nExpected Result:\r\nAll tickets are printed\r\n15. Run the below queries :\n\nselect * from PVO.offer_payment where order_id={};\n\nselect * from PVO.payment where order_id={};\n\nselect * from PVO.payment_card where order_id={};\r\nExpected Result:\r\nNo rows are returned for all three queries",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. In PVO Maintenance site, go to Main tool box->Supplier->Supplier order query\n2.Note down the next run time\n \r\n2. Before the Next Run time passes, run the below steps\r\n3. Log in to PV application as PVO-PV user\r\n4. In the Home page, select Box office agency as the Current Agency and click Update\n\r\n5. 1.Go to Ticketing->Ticket Sales\n2.Search for the event\n3.Enter number of tickets against Comp buyer type and click Lock seats button\n\r\n6. Assign a Financial patron to the cart\r\n7. In the Delivery tab, select Box office T@H and click Apply\r\n8. Click checkout button\r\n9. Wait for the Next Run time in Supplier Order query to pass\r\n10. After the next run time , run the query \n\nselect * from pvo.offer where suppllier_trxn_id={}; \r\n11. Verify GetOrders call in logs\r\n12. Verify patron received TAHBOEM email \r\n13. Click TicketsAtHomeURL in the email\r\n14. Click View and Print tickets button\r\n15. Run the below queries :\n\nselect * from PVO.offer_payment where order_id={};\n\nselect * from PVO.payment where order_id={};\n\nselect * from PVO.payment_card where order_id={};",
        "expected": "1. Next run time is noted down and it is in the nearer future\r\n2. \r\n3. User is logged in\r\n4. Box office agency is selected as the Current Agency\n\r\n5. Cart is displayed. Cart Balance should be $0.00\n\r\n6. Financial patron is selected\r\n7. Box office T@H is assigned as the delivery\r\n8. Transaction is completed successfully\r\n9. \r\n10. The row should be returned with STATUS_CODE as HS\r\n11. PVO makes GetOrders call and PV responds with transaction details of the Box office T@H transaction done above\n\n\r\n12. The purchaser received TAHBOEM email\r\n13. 1. User is taken into Print tickets page\n2. The page has all tickets' details \r\n14. All tickets are printed\r\n15. No rows are returned for all three queries"
      }
    ],
    "custom_jiras": "60"
  },
  {
    "id": 30716982,
    "title": "Verify completing a Box Office T@H delivery transaction with two credit payment records",
    "section_id": 1686254,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13251",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C152567",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Box office T@H setup:\r\n\r\nBox office T@H setup in PV:\r\n\r\n1.\tHave Box Office Tickets@Home delivery method configured with Type as â€œOnline Tickets@Homeâ€�\r\n2.\tOnly Box office is added as channel in the Box office T@H channel context \r\n3.\tInclude the desired event to the Event context/ Make sure that the desired event is not in excluded list\r\n4.\tMake sure that, an agency is present under Org Admin->Agencies with Channel=Box Office and Settlement Sales channel =Web\r\n5.\tMake sure that this agency is added to a specific user(specifically set for Box office T@H transactions) under User Management\r\n\r\nBox office T@H setup in PVO:\r\n\r\n1.\tBox office T@H delivery method is mapped to PVO Supplier (Main tool box->Supplier->Delivery Types) with Delivery True Type ID as 5|Print At Home\r\n2.\tMake sure that Subagency exists under Agencies->MLB/GPL Subagency to use for Box office T@H\r\n3.\tThe same subagency should be added to Supplier->Supplier Subagency with \r\nOperator Name and Password of the user configured in PV\r\n4.\tMake sure that Supplier->Order query is set correctly \r\na.\tProxy SubAgency Code is set as the subagency configured for Box office T@H\r\nb.\tRun Interval is set \r\nc.\tNext Run Date is in the nearer future\r\nd.\tEnabled checkbox is selected\r\n5.\tThe event added to Box office T@H context in PV , should be perf accepted\r\n6.\tAdd Box office T@H subagency record to perf_channel_subagency record (Main tool box->Events->Performance channel) \r\n\r\na.\tSales Channel Code : W\r\nb.\tSubAgency Code : Box office T@H subagency\r\nc.\tOnSale Date : past date\r\nd.\tOffsale Date : Future date\r\ne.\tOnSale Flag : true\r\nf.\tMin and Max tickets =1/100\r\ng.\tSold Out Flag: false\r\n\r\n7.\tMake sure that TAHOrderQueryThread is running\r\n8.\tTAHOQRDC is set at supplier with delivery code of Box office T@H .\r\n9.\tTAHBOEM and TAHBOES is set at Org level\r\n\r\nTAHBOEM should have the following literals set\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n10.\tThe property tah.bots_order_email.domain_url = {domain} should also be set\r\n\r\n\r\n\r\nOther setups\r\n\r\n\r\nIn PV, for a patron add Account credit to Account Balance in two different transactions (Go to Patron Management portal of the patron->Account Balance->Click Add credit->Complete the transaction)",
    "custom_test_purpose": null,
    "custom_steps": "1. 1. In PVO Maintenance site, go to Main tool box->Supplier->Supplier order query\n2.Note down the next run time\n \r\nExpected Result:\r\nNext run time is noted down and it is in the nearer future\r\n2. Before the Next Run time passes, run the below steps\r\n3. Log in to PV application as PVO-PV user\r\nExpected Result:\r\nUser is logged in\r\n4. In the Home page, select Box office agency as the Current Agency and click Update\n\r\nExpected Result:\r\nBox office agency is selected as the Current Agency\n\r\n5. 1.Go to Ticketing->Ticket Sales\n2.Search for the event\n3.Enter number of tickets and click Lock seats button\n\r\nExpected Result:\r\nCart is displayed.\nThe two delivery service charges are shown under Total Due section\r\n6. Assign a Financial patron to the cart\r\nExpected Result:\r\nFinancial patron is selected\r\n7. In the Delivery tab, select Box office T@H and click Apply\r\nExpected Result:\r\nBox office T@H is assigned as the delivery\r\n8. In the payments tab verify ** CREDIT AVAILABLE ** text is displayed\r\nExpected Result:\r\n** CREDIT AVAILABLE ** text is displayed in Payments tab\r\n9. Select Credit Payment as the payment method\r\nExpected Result:\r\nThe Credit amounts of both transactions done in prerequisite is shown\r\n10. 1. Select both Account credits by selecting Scope checbox\n2. Adjust the Amount fields of both such that Cart balance is fully paid from Account credit\n3.Click Accept payment \r\nExpected Result:\r\nPayment is accepted\r\n11. Click checkout button\r\nExpected Result:\r\nTransaction is completed successfully\r\n12. Wait for the Next Run time in Supplier Order query to pass\r\n13. After the next run time , run the query \n\nselect * from pvo.offer where suppllier_trxn_id={}; \r\nExpected Result:\r\nThe row should be returned with STATUS_CODE as HS\r\n14. Verify GetOrders call in logs\r\nExpected Result:\r\nPVO makes GetOrders call and PV responds with transaction details of the Box office T@H transaction done above\n\n\r\n15. Verify patron received TAHBOEM email \r\nExpected Result:\r\nThe purchaser received TAHBOEM email \r\n16. Run the query \n\nselect * from PVO.offer_payment where order_id={};\r\nExpected Result:\r\nOnly one record is present with payment_code as CRDT\r\n17. Run the query \n\nselect * from PVO.payment where order_id={};\r\nExpected Result:\r\nOnly one record is present with payment_code as CRDT and Payment_Amt is the sum of both credits that are used",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. In PVO Maintenance site, go to Main tool box->Supplier->Supplier order query\n2.Note down the next run time\n \r\n2. Before the Next Run time passes, run the below steps\r\n3. Log in to PV application as PVO-PV user\r\n4. In the Home page, select Box office agency as the Current Agency and click Update\n\r\n5. 1.Go to Ticketing->Ticket Sales\n2.Search for the event\n3.Enter number of tickets and click Lock seats button\n\r\n6. Assign a Financial patron to the cart\r\n7. In the Delivery tab, select Box office T@H and click Apply\r\n8. In the payments tab verify ** CREDIT AVAILABLE ** text is displayed\r\n9. Select Credit Payment as the payment method\r\n10. 1. Select both Account credits by selecting Scope checbox\n2. Adjust the Amount fields of both such that Cart balance is fully paid from Account credit\n3.Click Accept payment \r\n11. Click checkout button\r\n12. Wait for the Next Run time in Supplier Order query to pass\r\n13. After the next run time , run the query \n\nselect * from pvo.offer where suppllier_trxn_id={}; \r\n14. Verify GetOrders call in logs\r\n15. Verify patron received TAHBOEM email \r\n16. Run the query \n\nselect * from PVO.offer_payment where order_id={};\r\n17. Run the query \n\nselect * from PVO.payment where order_id={};",
        "expected": "1. Next run time is noted down and it is in the nearer future\r\n2. \r\n3. User is logged in\r\n4. Box office agency is selected as the Current Agency\n\r\n5. Cart is displayed.\nThe two delivery service charges are shown under Total Due section\r\n6. Financial patron is selected\r\n7. Box office T@H is assigned as the delivery\r\n8. ** CREDIT AVAILABLE ** text is displayed in Payments tab\r\n9. The Credit amounts of both transactions done in prerequisite is shown\r\n10. Payment is accepted\r\n11. Transaction is completed successfully\r\n12. \r\n13. The row should be returned with STATUS_CODE as HS\r\n14. PVO makes GetOrders call and PV responds with transaction details of the Box office T@H transaction done above\n\n\r\n15. The purchaser received TAHBOEM email \r\n16. Only one record is present with payment_code as CRDT\r\n17. Only one record is present with payment_code as CRDT and Payment_Amt is the sum of both credits that are used"
      }
    ],
    "custom_jiras": "62.1"
  },
  {
    "id": 30716983,
    "title": "Verify that the default value of pvo.th_call_center_upload.globally_allowed_perf_type_codes is working",
    "section_id": 1686254,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-12309",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C152568",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Box office T@H setup:\r\n\r\nBox office T@H setup in PV:\r\n\r\n1.\tHave Box Office Tickets@Home delivery method configured with Type as â€œOnline Tickets@Homeâ€�\r\n2.\tOnly Box office is added as channel in the Box office T@H channel context \r\n3.\tInclude the desired event to the Event context/ Make sure that the desired event is not in excluded list\r\n4.\tMake sure that, an agency is present under Org Admin->Agencies with Channel=Box Office and Settlement Sales channel =Web\r\n5.\tMake sure that this agency is added to a specific user(specifically set for Box office T@H transactions) under User Management\r\n\r\nBox office T@H setup in PVO:\r\n\r\n1.\tBox office T@H delivery method is mapped to PVO Supplier (Main tool box->Supplier->Delivery Types) with Delivery True Type ID as 5|Print At Home\r\n2.\tMake sure that Subagency exists under Agencies->MLB/GPL Subagency to use for Box office T@H\r\n3.\tThe same subagency should be added to Supplier->Supplier Subagency with \r\nOperator Name and Password of the user configured in PV\r\n4.\tMake sure that Supplier->Order query is set correctly \r\na.\tProxy SubAgency Code is set as the subagency configured for Box office T@H\r\nb.\tRun Interval is set \r\nc.\tNext Run Date is in the nearer future\r\nd.\tEnabled checkbox is selected\r\n5.\tThe event added to Box office T@H context in PV , should be perf accepted\r\n6.\tAdd Box office T@H subagency record to perf_channel_subagency record (Main tool box->Events->Performance channel) \r\n\r\na.\tSales Channel Code : W\r\nb.\tSubAgency Code : Box office T@H subagency\r\nc.\tOnSale Date : past date\r\nd.\tOffsale Date : Future date\r\ne.\tOnSale Flag : true\r\nf.\tMin and Max tickets =1/100\r\ng.\tSold Out Flag: false\r\n\r\n7.\tMake sure that TAHOrderQueryThread is running\r\n8.\tTAHOQRDC is set at supplier with delivery code of Box office T@H .\r\n9.\tTAHBOEM and TAHBOES is set at Org level\r\n\r\nTAHBOEM should have the following literals set\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n10.\tThe property tah.bots_order_email.domain_url = {domain} should also be set\r\n\r\n\r\n\r\nOther setups:\r\n\r\n1. Do not set the property pvo.th_call_center_upload.globally_allowed_perf_type_codes.Defaults to SNG|PCK|GAH\r\n2.Have Same supplier perf code with three perf Types SNG, PCK and GAH(Create an event in PV and perf accept in PVO -Now the Perf type will be SNG.Again Go to Maintaince site and using event id add performance with type GAH and PCK",
    "custom_test_purpose": null,
    "custom_steps": "1. 1. In PVO Maintenance site, go to Main tool box->Supplier->Supplier order query\n2.Note down the next run time\n \r\nExpected Result:\r\nNext run time is noted down and it is in the nearer future\r\n2. Before the Next Run time passes, run the below steps\r\n3. Log in to PV application as PVO-PV user\r\nExpected Result:\r\nUser is logged in\r\n4. In the Home page, select Box office agency as the Current Agency and click Update\n\r\nExpected Result:\r\nBox office agency is selected as the Current Agency\n\r\n5. 1.Go to Ticketing->Ticket Sales\n2.Search for the event\n3.Enter number of tickets and click Lock seats button\n\r\nExpected Result:\r\nCart is displayed.\nThe two delivery service charges are shown under Total Due section\r\n6. Assign a Financial patron to the cart\r\nExpected Result:\r\nFinancial patron is selected\r\n7. In the Delivery tab, select Box office T@H and click Apply\r\nExpected Result:\r\nBox office T@H is assigned as the delivery\r\n8. Under Payment tab, select payment option and click Accept payment button\r\nExpected Result:\r\nPayment method is selected\r\n9. Click checkout button\r\nExpected Result:\r\nTransaction is completed successfully\r\n10. Wait for the Next Run time in Supplier Order query to pass\r\n11. After the next run time , run the query \n\nselect * from pvo.offer where suppllier_trxn_id={}; \r\nExpected Result:\r\nThe row should be returned with STATUS_CODE as HS\r\n12. Verify GetOrders call in logs\r\nExpected Result:\r\nPVO makes GetOrders call and PV responds with transaction details of the Box office T@H transaction done above\n\n\r\n13. Verify patron received TAHBOEM email \r\nExpected Result:\r\n1. The purchaser received the TAHBOEM email\n2. The details in the email should match the SNG event details\r\n14. Run the query\n\nselect * from PVO.offer where order_id={};\r\nExpected Result:\r\nThe PERF_ID field should contain the Performance Id of SNG event",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. In PVO Maintenance site, go to Main tool box->Supplier->Supplier order query\n2.Note down the next run time\n \r\n2. Before the Next Run time passes, run the below steps\r\n3. Log in to PV application as PVO-PV user\r\n4. In the Home page, select Box office agency as the Current Agency and click Update\n\r\n5. 1.Go to Ticketing->Ticket Sales\n2.Search for the event\n3.Enter number of tickets and click Lock seats button\n\r\n6. Assign a Financial patron to the cart\r\n7. In the Delivery tab, select Box office T@H and click Apply\r\n8. Under Payment tab, select payment option and click Accept payment button\r\n9. Click checkout button\r\n10. Wait for the Next Run time in Supplier Order query to pass\r\n11. After the next run time , run the query \n\nselect * from pvo.offer where suppllier_trxn_id={}; \r\n12. Verify GetOrders call in logs\r\n13. Verify patron received TAHBOEM email \r\n14. Run the query\n\nselect * from PVO.offer where order_id={};",
        "expected": "1. Next run time is noted down and it is in the nearer future\r\n2. \r\n3. User is logged in\r\n4. Box office agency is selected as the Current Agency\n\r\n5. Cart is displayed.\nThe two delivery service charges are shown under Total Due section\r\n6. Financial patron is selected\r\n7. Box office T@H is assigned as the delivery\r\n8. Payment method is selected\r\n9. Transaction is completed successfully\r\n10. \r\n11. The row should be returned with STATUS_CODE as HS\r\n12. PVO makes GetOrders call and PV responds with transaction details of the Box office T@H transaction done above\n\n\r\n13. 1. The purchaser received the TAHBOEM email\n2. The details in the email should match the SNG event details\r\n14. The PERF_ID field should contain the Performance Id of SNG event"
      }
    ],
    "custom_jiras": "62.1"
  },
  {
    "id": 30716984,
    "title": "Verify BOTAH tickets are printed properly if no public section code defined",
    "section_id": 1686254,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15528",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C152569",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Box office T@H setup:\r\n\r\nBox office T@H setup in PV:\r\n\r\n1.\tHave Box Office Tickets@Home delivery method configured with Type as â€œOnline Tickets@Homeâ€�\r\n2.\tOnly Box office is added as channel in the Box office T@H channel context \r\n3.\tInclude the desired event to the Event context/ Make sure that the desired event is not in excluded list\r\n4.\tMake sure that, an agency is present under Org Admin->Agencies with Channel=Box Office and Settlement Sales channel =Web\r\n5.\tMake sure that this agency is added to a specific user(specifically set for Box office T@H transactions) under User Management\r\n\r\nBox office T@H setup in PVO:\r\n\r\n1.\tBox office T@H delivery method is mapped to PVO Supplier (Main tool box->Supplier->Delivery Types) with Delivery True Type ID as 5|Print At Home\r\n2.\tMake sure that Subagency exists under Agencies->MLB/GPL Subagency to use for Box office T@H\r\n3.\tThe same subagency should be added to Supplier->Supplier Subagency with \r\nOperator Name and Password of the user configured in PV\r\n4.\tMake sure that Supplier->Order query is set correctly \r\na.\tProxy SubAgency Code is set as the subagency configured for Box office T@H\r\nb.\tRun Interval is set \r\nc.\tNext Run Date is in the nearer future\r\nd.\tEnabled checkbox is selected\r\n5.\tThe event added to Box office T@H context in PV , should be perf accepted\r\n6.\tAdd Box office T@H subagency record to perf_channel_subagency record (Main tool box->Events->Performance channel) \r\n\r\na.\tSales Channel Code : W\r\nb.\tSubAgency Code : Box office T@H subagency\r\nc.\tOnSale Date : past date\r\nd.\tOffsale Date : Future date\r\ne.\tOnSale Flag : true\r\nf.\tMin and Max tickets =1/100\r\ng.\tSold Out Flag: false\r\n\r\n7.\tMake sure that TAHOrderQueryThread is running\r\n8.\tTAHOQRDC is set at supplier with delivery code of Box office T@H .\r\n9.\tTAHBOEM and TAHBOES is set at Org level\r\n\r\nTAHBOEM should have the following literals set\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n10.\tThe property tah.bots_order_email.domain_url = {domain} should also be set\r\n\r\n\r\n\r\nOther setups:\r\n\r\nIn PV, go to Venue admin->Select venue->Go to Sections tab->Click Edit button against any section->Make sure that nothing is set for \"Public code\" field",
    "custom_test_purpose": null,
    "custom_steps": "1. 1. In PVO Maintenance site, go to Main tool box->Supplier->Supplier order query\n2.Note down the next run time\n \r\nExpected Result:\r\nNext run time is noted down and it is in the nearer future\r\n2. Before the Next Run time passes, run the below steps\r\n3. Log in to PV application as PVO-PV user\r\nExpected Result:\r\nUser is logged in\r\n4. In the Home page, select Box office agency as the Current Agency and click Update\n\r\nExpected Result:\r\nBox office agency is selected as the Current Agency\n\r\n5. 1.Go to Ticketing->Ticket Sales\n2.Search for the event\n3.Load map\n4.Select the section mentioned in prerequisite\n5.Select seats\n6.Go to cart\n\r\nExpected Result:\r\nCart is displayed.\n\r\n6. Assign a Financial patron to the cart\r\nExpected Result:\r\nFinancial patron is selected\r\n7. In the Delivery tab, select Box office T@H and click Apply\r\nExpected Result:\r\nBox office T@H is assigned as the delivery\r\n8. Under Payment tab, select payment option and click Accept payment button\r\nExpected Result:\r\nPayment method is selected\r\n9. Click checkout button\r\nExpected Result:\r\nTransaction is completed successfully\r\n10. Wait for the Next Run time in Supplier Order query to pass\r\n11. After the next run time , run the query \n\nselect * from pvo.offer where suppllier_trxn_id={}; \r\nExpected Result:\r\nThe row should be returned with STATUS_CODE as HS\r\n12. Verify GetOrders call in logs\r\nExpected Result:\r\nPVO makes GetOrders call and PV responds with transaction details of the Box office T@H transaction done above\n\n node should not contain any values for the transaction\r\n13. Verify patron received TAHBOEM email \r\nExpected Result:\r\nTAHBOEM email is received by the patron\r\n14. Click TicketsAtHomeURL\r\nExpected Result:\r\nUser is shown Print tickets page\r\n15. Click View and print tickets button\r\nExpected Result:\r\nAll tickets are printed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. In PVO Maintenance site, go to Main tool box->Supplier->Supplier order query\n2.Note down the next run time\n \r\n2. Before the Next Run time passes, run the below steps\r\n3. Log in to PV application as PVO-PV user\r\n4. In the Home page, select Box office agency as the Current Agency and click Update\n\r\n5. 1.Go to Ticketing->Ticket Sales\n2.Search for the event\n3.Load map\n4.Select the section mentioned in prerequisite\n5.Select seats\n6.Go to cart\n\r\n6. Assign a Financial patron to the cart\r\n7. In the Delivery tab, select Box office T@H and click Apply\r\n8. Under Payment tab, select payment option and click Accept payment button\r\n9. Click checkout button\r\n10. Wait for the Next Run time in Supplier Order query to pass\r\n11. After the next run time , run the query \n\nselect * from pvo.offer where suppllier_trxn_id={}; \r\n12. Verify GetOrders call in logs\r\n13. Verify patron received TAHBOEM email \r\n14. Click TicketsAtHomeURL\r\n15. Click View and print tickets button",
        "expected": "1. Next run time is noted down and it is in the nearer future\r\n2. \r\n3. User is logged in\r\n4. Box office agency is selected as the Current Agency\n\r\n5. Cart is displayed.\n\r\n6. Financial patron is selected\r\n7. Box office T@H is assigned as the delivery\r\n8. Payment method is selected\r\n9. Transaction is completed successfully\r\n10. \r\n11. The row should be returned with STATUS_CODE as HS\r\n12. PVO makes GetOrders call and PV responds with transaction details of the Box office T@H transaction done above\n\n node should not contain any values for the transaction\r\n13. TAHBOEM email is received by the patron\r\n14. User is shown Print tickets page\r\n15. All tickets are printed"
      }
    ],
    "custom_jiras": "62.1"
  },
  {
    "id": 30716985,
    "title": "Verify TAHBOEM1 text is appended to TAHBOEM text and BOTAH email can contain more than 4k characters",
    "section_id": 1686254,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-14131",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_refs": "C152570",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Box office T@H setup:\r\n\r\nBox office T@H setup in PV:\r\n\r\n1.\tHave Box Office Tickets@Home delivery method configured with Type as â€œOnline Tickets@Homeâ€�\r\n2.\tOnly Box office is added as channel in the Box office T@H channel context \r\n3.\tInclude the desired event to the Event context/ Make sure that the desired event is not in excluded list\r\n4.\tMake sure that, an agency is present under Org Admin->Agencies with Channel=Box Office and Settlement Sales channel =Web\r\n5.\tMake sure that this agency is added to a specific user(specifically set for Box office T@H transactions) under User Management\r\n\r\nBox office T@H setup in PVO:\r\n\r\n1.\tBox office T@H delivery method is mapped to PVO Supplier (Main tool box->Supplier->Delivery Types) with Delivery True Type ID as 5|Print At Home\r\n2.\tMake sure that Subagency exists under Agencies->MLB/GPL Subagency to use for Box office T@H\r\n3.\tThe same subagency should be added to Supplier->Supplier Subagency with \r\nOperator Name and Password of the user configured in PV\r\n4.\tMake sure that Supplier->Order query is set correctly \r\na.\tProxy SubAgency Code is set as the subagency configured for Box office T@H\r\nb.\tRun Interval is set \r\nc.\tNext Run Date is in the nearer future\r\nd.\tEnabled checkbox is selected\r\n5.\tThe event added to Box office T@H context in PV , should be perf accepted\r\n6.\tAdd Box office T@H subagency record to perf_channel_subagency record (Main tool box->Events->Performance channel) \r\n\r\na.\tSales Channel Code : W\r\nb.\tSubAgency Code : Box office T@H subagency\r\nc.\tOnSale Date : past date\r\nd.\tOffsale Date : Future date\r\ne.\tOnSale Flag : true\r\nf.\tMin and Max tickets =1/100\r\ng.\tSold Out Flag: false\r\n\r\n7.\tMake sure that TAHOrderQueryThread is running\r\n8.\tTAHOQRDC is set at supplier with delivery code of Box office T@H .\r\n9.\tSet TAHBOES at Org level\r\n10.    Set TAHBOEM and TAHBOEM1 at Org level where each with 4K characters\r\n\r\nTAHBOEM should have the following literals set\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n11.\tThe property tah.bots_order_email.domain_url = {domain} should also be set",
    "custom_test_purpose": null,
    "custom_steps": "1. 1. In PVO Maintenance site, go to Main tool box->Supplier->Supplier order query\n2.Note down the next run time\n \r\nExpected Result:\r\nNext run time is noted down and it is in the nearer future\r\n2. Before the Next Run time passes, run the below steps\r\n3. Log in to PV application as PVO-PV user\r\nExpected Result:\r\nUser is logged in\r\n4. In the Home page, select Box office agency as the Current Agency and click Update\n\r\nExpected Result:\r\nBox office agency is selected as the Current Agency\n\r\n5. 1.Go to Ticketing->Ticket Sales\n2.Search for the event\n3.Enter number of tickets and click Lock seats button\n\r\nExpected Result:\r\nCart is displayed.\nThe two delivery service charges are shown under Total Due section\r\n6. Assign a Financial patron to the cart\r\nExpected Result:\r\nFinancial patron is selected\r\n7. In the Delivery tab, select Box office T@H and click Apply\r\nExpected Result:\r\nBox office T@H is assigned as the delivery\r\n8. Under Payment tab, select payment option and click Accept payment button\r\nExpected Result:\r\nPayment method is selected\r\n9. Click checkout button\r\nExpected Result:\r\nTransaction is completed successfully\r\n10. Wait for the Next Run time in Supplier Order query to pass\r\n11. After the next run time , run the query \n\nselect * from pvo.offer where suppllier_trxn_id={}; \r\nExpected Result:\r\nThe row should be returned with STATUS_CODE as HS\r\n12. Verify GetOrders call in logs\r\nExpected Result:\r\nPVO makes GetOrders call and PV responds with transaction details of the Box office T@H transaction done above\n\n\r\n13. Verify patron received call center email\r\nExpected Result:\r\nThe purchaser received Call center email. It has contents of both TAHBOEM and TAHBOEM1 textcodes",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. In PVO Maintenance site, go to Main tool box->Supplier->Supplier order query\n2.Note down the next run time\n \r\n2. Before the Next Run time passes, run the below steps\r\n3. Log in to PV application as PVO-PV user\r\n4. In the Home page, select Box office agency as the Current Agency and click Update\n\r\n5. 1.Go to Ticketing->Ticket Sales\n2.Search for the event\n3.Enter number of tickets and click Lock seats button\n\r\n6. Assign a Financial patron to the cart\r\n7. In the Delivery tab, select Box office T@H and click Apply\r\n8. Under Payment tab, select payment option and click Accept payment button\r\n9. Click checkout button\r\n10. Wait for the Next Run time in Supplier Order query to pass\r\n11. After the next run time , run the query \n\nselect * from pvo.offer where suppllier_trxn_id={}; \r\n12. Verify GetOrders call in logs\r\n13. Verify patron received call center email",
        "expected": "1. Next run time is noted down and it is in the nearer future\r\n2. \r\n3. User is logged in\r\n4. Box office agency is selected as the Current Agency\n\r\n5. Cart is displayed.\nThe two delivery service charges are shown under Total Due section\r\n6. Financial patron is selected\r\n7. Box office T@H is assigned as the delivery\r\n8. Payment method is selected\r\n9. Transaction is completed successfully\r\n10. \r\n11. The row should be returned with STATUS_CODE as HS\r\n12. PVO makes GetOrders call and PV responds with transaction details of the Box office T@H transaction done above\n\n\r\n13. The purchaser received Call center email. It has contents of both TAHBOEM and TAHBOEM1 textcodes"
      }
    ],
    "custom_jiras": "62.1"
  },
  {
    "id": 30716986,
    "title": "Verify 250 BOTH orders are returned in one Call Center Order Query Call if TAHOQCPR is not set",
    "section_id": 1686254,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "PVO-17447",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_refs": "C152571",
    "custom_pvo_pvodc_category": 20,
    "custom_pvocodelines": null,
    "custom_preconds": "Confirm BOTAH setup in place\r\nConfirm TAHOQCPR is not set at any level",
    "custom_test_purpose": null,
    "custom_steps": "1. Confirm Next Run Date in Supplier order query maintenance page is today's date. Set with a future time (set accordingly to complete 250 BOTAH orders in PV)\r\nExpected Result:\r\nNext run is set and will allow time to sell 250 BOTAH orders in PV\r\n2. Perform more than 250 BOTAH orders in PV before the Next run time set is reached\r\nExpected Result:\r\nOrders should be created.\r\n3. Wait for the Next Run time to pass and Verify GetOrders call response had details of 250 orders\r\nExpected Result:\r\nGetOrders call response should  had details of 250 orders\r\n4. Verify the status_code of all 250 orders in the offer table is \"HS\"\r\nExpected Result:\r\nThe status_code of all 250 orders in the offer table should be \"HS\"",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Confirm Next Run Date in Supplier order query maintenance page is today's date. Set with a future time (set accordingly to complete 250 BOTAH orders in PV)\r\n2. Perform more than 250 BOTAH orders in PV before the Next run time set is reached\r\n3. Wait for the Next Run time to pass and Verify GetOrders call response had details of 250 orders\r\n4. Verify the status_code of all 250 orders in the offer table is \"HS\"",
        "expected": "1. Next run is set and will allow time to sell 250 BOTAH orders in PV\r\n2. Orders should be created.\r\n3. GetOrders call response should  had details of 250 orders\r\n4. The status_code of all 250 orders in the offer table should be \"HS\""
      }
    ],
    "custom_jiras": "65.5"
  },
  {
    "id": 30716987,
    "title": "Verify RTPENOR order_text for a multi-offer order with both TAH",
    "section_id": 1686255,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15334",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C152551",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite:\r\n \r\n1.Have 2 perfs availble with different perf_end_dates\r\n2.Set PMTIXXPT at event levels such that ready to print email for \r\nboth events reach at differrent times\r\n\r\nLaunch maintenance site and login\r\nMain tool box - > Event-> enter perf id-> edit -> click mutilple edit on \r\nperformance text -> Select text code and  Set value and Save \r\nchange.\r\nNavigate back to edit details of supplier page and purge it.]\r\nExpected Result:\r\nPrerequisite should be met\r\n2. Launch Single sales link\r\nExpected Result:\r\nlaunch the single sales link successfully\r\n3. 1.Select the above event'\r\n2.Lock seats and reach shopping cart\r\nExpected Result:\r\nselect the event and lock required number of seats\r\n4. 1.Click Add another event button\r\n2.Select event2\r\n3.Lock seats and continue\r\n5. Select T@H delivery metho from tickets delivery page\r\nExpected Result:\r\nUser should be able to assign delivery method as expected\r\n6. Navigate to payment page -> Enter all valid details\r\nand click on buy tickets\r\nExpected Result:\r\nComplete the transaction successfuly using T@H \r\ndelivery method\r\n7. Verify RTPENOR set in order_text (The text code \r\nvalue is the earliest date of all deferred \r\nTickets@Home tickets in the order.)\r\nExpected Result:\r\nRTPENOR should be set in order_text\r\n8. Wait for the time set in PMTIXXPT to reach for \r\nevent1 and event2\r\nExpected Result:\r\nwait till the time reached\r\n9. Verify Ready to print email is sent for both events \r\nseperatly\r\nExpected Result:\r\nReady to print email should be sent\r\n10. Verify RTPENOR is deleted from order_text\r\nExpected Result:\r\nRTPENOR should be deleted from order_text",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite:\r\n \r\n1.Have 2 perfs availble with different perf_end_dates\r\n2.Set PMTIXXPT at event levels such that ready to print email for \r\nboth events reach at differrent times\r\n\r\nLaunch maintenance site and login\r\nMain tool box - > Event-> enter perf id-> edit -> click mutilple edit on \r\nperformance text -> Select text code and  Set value and Save \r\nchange.\r\nNavigate back to edit details of supplier page and purge it.]\r\n2. Launch Single sales link\r\n3. 1.Select the above event'\r\n2.Lock seats and reach shopping cart\r\n4. 1.Click Add another event button\r\n2.Select event2\r\n3.Lock seats and continue\r\n5. Select T@H delivery metho from tickets delivery page\r\n6. Navigate to payment page -> Enter all valid details\r\nand click on buy tickets\r\n7. Verify RTPENOR set in order_text (The text code \r\nvalue is the earliest date of all deferred \r\nTickets@Home tickets in the order.)\r\n8. Wait for the time set in PMTIXXPT to reach for \r\nevent1 and event2\r\n9. Verify Ready to print email is sent for both events \r\nseperatly\r\n10. Verify RTPENOR is deleted from order_text",
        "expected": "1. Prerequisite should be met\r\n2. launch the single sales link successfully\r\n3. select the event and lock required number of seats\r\n4. \r\n5. User should be able to assign delivery method as expected\r\n6. Complete the transaction successfuly using T@H \r\ndelivery method\r\n7. RTPENOR should be set in order_text\r\n8. wait till the time reached\r\n9. Ready to print email should be sent\r\n10. RTPENOR should be deleted from order_text"
      }
    ],
    "custom_jiras": "64"
  },
  {
    "id": 30716988,
    "title": "Verify RTPENOR order_text for a multi-offer order with both non-TAH",
    "section_id": 1686255,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15334",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C152552",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Prerequisite:\r\n \r\n1.Have 2 perfs availble with different \r\nperf_end_dates\r\n2.Set PMTIXXPT at event levels such that ready \r\nto print email for both events reach at differrent \r\ntimes",
    "custom_test_purpose": null,
    "custom_steps": "1. Prerequisite should be met\r\n2. Launch Single sales link\n\r\nExpected Result:\r\nlaunch the single sales link successfully\r\n3. select the event and lock required number of seats\r\nExpected Result:\r\nuser navigated to cart\r\n4. add another event and lock required number of seats\r\nExpected Result:\r\nanother offer added as expected\r\n5. navigate to payment page\r\nExpected Result:\r\nlogin page displayed\r\n6. login using valid details\r\nExpected Result:\r\nNavigated to payment page\r\n7. Tried to Complete the transaction successfuly using non T@H \ndelivery method\r\nExpected Result:\r\nUser is able to  Complete the transaction successfuly using non T@H \ndelivery method\r\n8. Verify the value of RTPENOR  in Order text\r\nExpected Result:\r\nRTPENOR should not be set in order_text",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Prerequisite should be met\r\n2. Launch Single sales link\n\r\n3. select the event and lock required number of seats\r\n4. add another event and lock required number of seats\r\n5. navigate to payment page\r\n6. login using valid details\r\n7. Tried to Complete the transaction successfuly using non T@H \ndelivery method\r\n8. Verify the value of RTPENOR  in Order text",
        "expected": "1. \r\n2. launch the single sales link successfully\r\n3. user navigated to cart\r\n4. another offer added as expected\r\n5. login page displayed\r\n6. Navigated to payment page\r\n7. User is able to  Complete the transaction successfuly using non T@H \ndelivery method\r\n8. RTPENOR should not be set in order_text"
      }
    ],
    "custom_jiras": "64"
  },
  {
    "id": 30716989,
    "title": "Verify RTPENOR order_text for a multi-offer order where one offer is TAH and other is non-TAH",
    "section_id": 1686255,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15334",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C152553",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Prerequisite:\r\n \r\n1.Have 2 perfs availble with different \r\nperf_end_dates\r\n2.Set PMTIXXPT at event levels such that ready \r\nto print email for both events reach at differrent \r\ntimes\r\n3.Enable split delivery",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Single sales link\r\nExpected Result:\r\nlaunch the single sales link successfully\r\n2. 1.Select event1\n2.Lock seats and reach shopping cart\r\nExpected Result:\r\nselect the event and lock required number of seats\r\n3. 1.Click Add another event button\n2.Select event2\n3.Lock seats\r\nExpected Result:\r\nadd another event and lock required number of seats\r\n4. Choose split delivery\r\nExpected Result:\r\nsplit delivery option should be selected\r\n5. Assign one offer with T@H and other with \nnon-T@H\r\nExpected Result:\r\nOne offer should be assigned with T@H and other \nwith non-T@H\r\n6. Complete transaction\r\nExpected Result:\r\nComplete the transaction successfuly\r\n7. Verify RTPENOR set in order_text (The text code \nvalue is the earliest date of all deferred \nTickets@Home tickets in the order.)\r\nExpected Result:\r\nRTPENOR should be set in order_text\r\n8. Wait for the time set in PMTIXXPT to reach for \nevent1\r\nExpected Result:\r\nwait til lthe time set\r\n9. Verify Ready to print email is sent for event1\r\nExpected Result:\r\nready to print email should be sent for event1\r\n10. Verify RTPENOR is deleted from order_text\r\nExpected Result:\r\nRTPENOR should be deleted from order_text",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Single sales link\r\n2. 1.Select event1\n2.Lock seats and reach shopping cart\r\n3. 1.Click Add another event button\n2.Select event2\n3.Lock seats\r\n4. Choose split delivery\r\n5. Assign one offer with T@H and other with \nnon-T@H\r\n6. Complete transaction\r\n7. Verify RTPENOR set in order_text (The text code \nvalue is the earliest date of all deferred \nTickets@Home tickets in the order.)\r\n8. Wait for the time set in PMTIXXPT to reach for \nevent1\r\n9. Verify Ready to print email is sent for event1\r\n10. Verify RTPENOR is deleted from order_text",
        "expected": "1. launch the single sales link successfully\r\n2. select the event and lock required number of seats\r\n3. add another event and lock required number of seats\r\n4. split delivery option should be selected\r\n5. One offer should be assigned with T@H and other \nwith non-T@H\r\n6. Complete the transaction successfuly\r\n7. RTPENOR should be set in order_text\r\n8. wait til lthe time set\r\n9. ready to print email should be sent for event1\r\n10. RTPENOR should be deleted from order_text"
      }
    ],
    "custom_jiras": "64"
  },
  {
    "id": 30716990,
    "title": "Verify the T@H page UI _PRNTMT-True_PMTIXXPT is set_Multiple Events_one event within the PMTIXXPT time set and one out of PMTIXXPT time set",
    "section_id": 1686255,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-10339",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C152554",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. Select tickets from Availability Page\r\nExpected Result:\r\nTickets should be selected from the Availability Page\r\n2. Enter the Recaptcha Text in the Recaptcha Modal Windowand click on continue button\r\nExpected Result:\r\nThe user should be able to enter the Recaptcha Text and navigated to the Shopping cart window\r\n3. Click on continue Button in the Shopping cart window\r\nAdd another offer with second event in the pre requisite\r\nExpected Result:\r\nAnother offer must  be added\r\nThe user should be navigated to the Login/Register Modal Window\r\n4. Login as Existing User\r\nExpected Result:\r\nThe user should be navigated to the Split Delivery Page.Both the Express Delivery Select and the Split Delivery Sections should be shown.\r\n5. From the express delivery method, choose the delivery method \"tickets@home\" \r\nContinue\r\nExpected Result:\r\nShould be able to choose the same delivery method for event\r\nRoute to Payment page\r\n6. Fill all the required information (credit card , mail etc.) and click on Buy tickets\r\nExpected Result:\r\nShould navigate to the confirmation page\r\n7. 1. Complete the transaction, On the Confirmation page, Verify all the details\r\n2. Verify the Buyer E-mails and the Confirmation E-mails\r\nExpected Result:\r\nThe Print Tickets@Home link should be active in the Confirmation page and Confirmation email\r\n8. Click on the  link print Tickets@Home in Confirmation page, verifiy:\r\na.      Single ticket purchased in the order where the delivery method is Tickets@Home\r\nb.      A selectable check box next to ticket that can be printed at this time ( For the first event- which comes within the PMTIXXPT\r\nc. An I Icon- showin a message that this ticket can can't be printed now for the second event - which is out of the PMTIXXPT time set\r\n\r\nView and print tickets button should be visible\r\nExpected Result:\r\nUser should be able to see the below:\r\na.      Single ticket purchased in the order where the delivery method is Tickets@Home\r\nb.      A selectable check box next to ticket that can be printed at this time ( For the first event- which comes within the PMTIXXPT\r\nc. An I Icon- showin a message that this ticket can can't be printed now for the second event - which is out of the PMTIXXPT time set\r\n9. Select the checkboxes and click on the View and Print tickets\r\nExpected Result:\r\nUser should get the print wizard to print all the tickets selected\r\n10. Click on the T@H link in confirmation email\r\nExpected Result:\r\nUser should be redirected to the T@H page\r\n11. Verifiy:\r\na.      Single ticket purchased in the order where the delivery method is Tickets@Home\r\nb.      A selectable check box next to ticket that can be printed at this time ( For the first event- which comes within the PMTIXXPT\r\nc. An I Icon- showin a message that this ticket can can't be printed now for the second event - which is out of the PMTIXXPT time set\r\n\r\nView and print tickets button should be visible\r\nExpected Result:\r\nUser should be able to see the below:\r\na.      Single ticket purchased in the order where the delivery method is Tickets@Home\r\nb.      A selectable check box next to ticket that can be printed at this time ( For the first event- which comes within the PMTIXXPT\r\nc. An I Icon- showin a message that this ticket can can't be printed now for the second event - which is out of the PMTIXXPT time set\r\n\r\nView and print tickets button should be visible\r\n12. Select the checkboxes across events and click View and Print tickets\r\nExpected Result:\r\nTickets should be shown succesfully printed\r\n13. Suplier level PRNTMT-True\r\nSet PMTIXXPT  so that one event comes within the PMTIXXPT and one out of PMTIXXPT while doing the transaction\r\n(eg: PMTIXXPT=3)\r\n14. Launch the PV MLB Single Tickets Application link\r\nExpected Result:\r\nThe Application should be launched",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Select tickets from Availability Page\r\n2. Enter the Recaptcha Text in the Recaptcha Modal Windowand click on continue button\r\n3. Click on continue Button in the Shopping cart window\r\nAdd another offer with second event in the pre requisite\r\n4. Login as Existing User\r\n5. From the express delivery method, choose the delivery method \"tickets@home\" \r\nContinue\r\n6. Fill all the required information (credit card , mail etc.) and click on Buy tickets\r\n7. 1. Complete the transaction, On the Confirmation page, Verify all the details\r\n2. Verify the Buyer E-mails and the Confirmation E-mails\r\n8. Click on the  link print Tickets@Home in Confirmation page, verifiy:\r\na.      Single ticket purchased in the order where the delivery method is Tickets@Home\r\nb.      A selectable check box next to ticket that can be printed at this time ( For the first event- which comes within the PMTIXXPT\r\nc. An I Icon- showin a message that this ticket can can't be printed now for the second event - which is out of the PMTIXXPT time set\r\n\r\nView and print tickets button should be visible\r\n9. Select the checkboxes and click on the View and Print tickets\r\n10. Click on the T@H link in confirmation email\r\n11. Verifiy:\r\na.      Single ticket purchased in the order where the delivery method is Tickets@Home\r\nb.      A selectable check box next to ticket that can be printed at this time ( For the first event- which comes within the PMTIXXPT\r\nc. An I Icon- showin a message that this ticket can can't be printed now for the second event - which is out of the PMTIXXPT time set\r\n\r\nView and print tickets button should be visible\r\n12. Select the checkboxes across events and click View and Print tickets\r\n13. Suplier level PRNTMT-True\r\nSet PMTIXXPT  so that one event comes within the PMTIXXPT and one out of PMTIXXPT while doing the transaction\r\n(eg: PMTIXXPT=3)\r\n14. Launch the PV MLB Single Tickets Application link",
        "expected": "1. Tickets should be selected from the Availability Page\r\n2. The user should be able to enter the Recaptcha Text and navigated to the Shopping cart window\r\n3. Another offer must  be added\r\nThe user should be navigated to the Login/Register Modal Window\r\n4. The user should be navigated to the Split Delivery Page.Both the Express Delivery Select and the Split Delivery Sections should be shown.\r\n5. Should be able to choose the same delivery method for event\r\nRoute to Payment page\r\n6. Should navigate to the confirmation page\r\n7. The Print Tickets@Home link should be active in the Confirmation page and Confirmation email\r\n8. User should be able to see the below:\r\na.      Single ticket purchased in the order where the delivery method is Tickets@Home\r\nb.      A selectable check box next to ticket that can be printed at this time ( For the first event- which comes within the PMTIXXPT\r\nc. An I Icon- showin a message that this ticket can can't be printed now for the second event - which is out of the PMTIXXPT time set\r\n9. User should get the print wizard to print all the tickets selected\r\n10. User should be redirected to the T@H page\r\n11. User should be able to see the below:\r\na.      Single ticket purchased in the order where the delivery method is Tickets@Home\r\nb.      A selectable check box next to ticket that can be printed at this time ( For the first event- which comes within the PMTIXXPT\r\nc. An I Icon- showin a message that this ticket can can't be printed now for the second event - which is out of the PMTIXXPT time set\r\n\r\nView and print tickets button should be visible\r\n12. Tickets should be shown succesfully printed\r\n13. \r\n14. The Application should be launched"
      }
    ],
    "custom_jiras": "54.2"
  },
  {
    "id": 30716991,
    "title": "Verify ready to print email is sent if T@H link is not clicked if multiple perfs with different perf_end_dates  are present in the order",
    "section_id": 1686255,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-15522",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C152555",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "Prerequisite:\r\n1.Have 2 perfs availble with different perf_end_dates\r\n2.Set PMTIXXPT at event levels \r\n3. Be sure the thread is running in \r\ntdc_tomcat_background_instance1.properties\r\n \r\ntickets.bootstrapClasses=com.tickets.util.common.HouseKeepingThread,\\\r\n        \r\ncom.tickets.application.orderworker.ReadyToPrintTicketsEmailNotificationThread,\\\r\n        com.tickets.util.mail.SendMailThread\r\n4.Be sure the property for the email is set \r\ncorrectly-22571.tah.bots_order_email.domain_url(This existing \r\nproperty is preceded by the org id)",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Single sales link\n\r\nExpected Result:\r\nSchedule page is displayed\r\n2. Select the event1\n\r\nExpected Result:\r\nAvailability page is displayed\r\n3. Select desired number of tickets and click Continue button\n\r\nExpected Result:\r\nShopping cart is displayed\r\n4. Click Add another event button\n\r\nExpected Result:\r\nSchedule page is displayed\r\n5. .Select event2\n\r\nExpected Result:\r\nAvailability page is displayed\r\n6. Select desired number of tickets and click Continue button\n\r\nExpected Result:\r\nShopping cart is displayed\r\n7. Click Continue from shopping cart\n\r\nExpected Result:\r\nLog in modal is opened\r\n8. Enter valid credentials and log in\n\r\nExpected Result:\r\nPayment page is displayed\r\n9. Select T@H delivery method\n\r\nExpected Result:\r\nT@H method is selected\r\n10. Fil in all required fields and click Buy Tickets button on payment page\n\r\nExpected Result:\r\nConfirmation page is displayed. Do not click on T@H link\r\n11. Verify confirmation email is received\n\r\nExpected Result:\r\nConfirmation email is received.Do not click T@H link\r\n12. Verify RTPENOR set in order_text\n\r\nExpected Result:\r\nRTPENOR set in order_text with the time when the tickets become available for printing\r\n13. Wait for the time set in PMTIXXPT to reach\n\r\nExpected Result:\r\nReady to print email is received\r\n14. Verify Ready to print email is sent\nClick T@H link in the ready email and print the tickets\n\r\nExpected Result:\r\nTickets are printed for both the events\r\n15. Verify RTPENOR is deleted from order_text\r\nExpected Result:\r\nRTPENOR is removed from order_text",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Single sales link\n\r\n2. Select the event1\n\r\n3. Select desired number of tickets and click Continue button\n\r\n4. Click Add another event button\n\r\n5. .Select event2\n\r\n6. Select desired number of tickets and click Continue button\n\r\n7. Click Continue from shopping cart\n\r\n8. Enter valid credentials and log in\n\r\n9. Select T@H delivery method\n\r\n10. Fil in all required fields and click Buy Tickets button on payment page\n\r\n11. Verify confirmation email is received\n\r\n12. Verify RTPENOR set in order_text\n\r\n13. Wait for the time set in PMTIXXPT to reach\n\r\n14. Verify Ready to print email is sent\nClick T@H link in the ready email and print the tickets\n\r\n15. Verify RTPENOR is deleted from order_text",
        "expected": "1. Schedule page is displayed\r\n2. Availability page is displayed\r\n3. Shopping cart is displayed\r\n4. Schedule page is displayed\r\n5. Availability page is displayed\r\n6. Shopping cart is displayed\r\n7. Log in modal is opened\r\n8. Payment page is displayed\r\n9. T@H method is selected\r\n10. Confirmation page is displayed. Do not click on T@H link\r\n11. Confirmation email is received.Do not click T@H link\r\n12. RTPENOR set in order_text with the time when the tickets become available for printing\r\n13. Ready to print email is received\r\n14. Tickets are printed for both the events\r\n15. RTPENOR is removed from order_text"
      }
    ],
    "custom_jiras": "63.1"
  },
  {
    "id": 30716992,
    "title": "Verify that Tickets@Home Ready email write to mail db_PV MLB",
    "section_id": 1686255,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-11012",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C152556",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": null,
    "custom_test_purpose": null,
    "custom_steps": "1. 1. Set the text codes: Suplier level PRNTMT-True  \r\n2.Set other text code PMTIXXPT  (Default 48 Hours) \r\n** Example- If the event is set to start at on 22nd June 12 PM. Set the hours as 3. So it will be only active on 9AM. \r\n\r\n3. Events should be available \r\n\r\n4. Set text codes PTIXCONF and PTIXSUBJ.  \r\n\r\n# PRINT_TICKETS_CONFIRMATION_EMAIL_TEXT PTIXCONF =  Your tickets for  are now available to print. \\ Please click here to print. \\ For reference, your confirmation number is:   # \r\n\r\nPRINT_TICKETS_CONFIRMATION_SUBJECT_TEXT PTIXSUBJ = It's time to print your tickets!   \r\n\r\n5. In Maintenance site, make sure that 'Is enabled' field is set to true for T@H at supplier level\r\n2. Launch the PV MLB Single Tickets Application link\r\nExpected Result:\r\nThe Application should be launched\r\n3. Select tickets from Availability Page\r\nExpected Result:\r\nTickets should be selected from the Availability Page\r\n4. Enter the Recaptcha Text in the Recaptcha Modal Windowand click on continue button\r\nExpected Result:\r\nThe user should be able to enter the Recaptcha Text and navigated to the Shopping cart window\r\n5. Click on continue Button in the Shopping cart window\r\nExpected Result:\r\nThe user should be navigated to the Login/Register Modal Window\r\n6. Login as Existing User\r\nExpected Result:\r\nThe user should be navigated to the Split Delivery Page.Both the Express Delivery Select and the Split Delivery Sections should be shown.\r\n7. From the express delivery method, choose the delivery method \"T@H\" \r\nContinue\r\nExpected Result:\r\nThe user should be able to choose the delivery method for event\r\nRoute to Payment page\r\n8. Fill all the required information (credit card , mail etc.) and click on Buy tickets\r\nExpected Result:\r\nThe user should be  navigate to the confirmation page\r\n9. Verify the T@H link is displayed in confirmation page\r\nExpected Result:\r\nT@H link is displayed in confirmation page\r\n10. Click on the link print Tickets@Home in Confirmation page, verifiy: ( The time of this should be before the active time set in pre requisite)\r\n\r\na. Single ticket purchased in the order where the delivery method is Tickets@Home\r\nb. A yellow triangle (I Icon) icon will be presnt saying you can't print for second event\r\nExpected Result:\r\nUser should be able to see the below:\r\na. Single ticket purchased in the order where the delivery method is Tickets@Home\r\nb. A yellow triangle (I Icon) icon will be presnt saying you can't print\r\n11. When the time reaches the PMTIXXPT active value \r\nVerify that:\r\nT@H ready to print email is received\r\nExpected Result:\r\nWhen the time reaches as that set in pre requisite, the user will get a T@H ready email\r\n12. 1.Naviagte to Order->Mails in PVO Maint site\r\n2.Enter Order ID of the transaction and click on Search by Order ID button\r\n3.Verify that user is shown all the mails corrsponding to the order ID.\r\nExpected Result:\r\nUser is shown all the mails corrsponding to the order ID.T@H ready to print email is also displayed.\r\n13. Check in the mail_header table that T@H ready to print  email is persisted there and all fields show correct information\r\nExpected Result:\r\nT@H ready to print  email is persisted in mail_header table and all fields show correct information",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. 1. Set the text codes: Suplier level PRNTMT-True  \r\n2.Set other text code PMTIXXPT  (Default 48 Hours) \r\n** Example- If the event is set to start at on 22nd June 12 PM. Set the hours as 3. So it will be only active on 9AM. \r\n\r\n3. Events should be available \r\n\r\n4. Set text codes PTIXCONF and PTIXSUBJ.  \r\n\r\n# PRINT_TICKETS_CONFIRMATION_EMAIL_TEXT PTIXCONF =  Your tickets for  are now available to print. \\ Please click here to print. \\ For reference, your confirmation number is:   # \r\n\r\nPRINT_TICKETS_CONFIRMATION_SUBJECT_TEXT PTIXSUBJ = It's time to print your tickets!   \r\n\r\n5. In Maintenance site, make sure that 'Is enabled' field is set to true for T@H at supplier level\r\n2. Launch the PV MLB Single Tickets Application link\r\n3. Select tickets from Availability Page\r\n4. Enter the Recaptcha Text in the Recaptcha Modal Windowand click on continue button\r\n5. Click on continue Button in the Shopping cart window\r\n6. Login as Existing User\r\n7. From the express delivery method, choose the delivery method \"T@H\" \r\nContinue\r\n8. Fill all the required information (credit card , mail etc.) and click on Buy tickets\r\n9. Verify the T@H link is displayed in confirmation page\r\n10. Click on the link print Tickets@Home in Confirmation page, verifiy: ( The time of this should be before the active time set in pre requisite)\r\n\r\na. Single ticket purchased in the order where the delivery method is Tickets@Home\r\nb. A yellow triangle (I Icon) icon will be presnt saying you can't print for second event\r\n11. When the time reaches the PMTIXXPT active value \r\nVerify that:\r\nT@H ready to print email is received\r\n12. 1.Naviagte to Order->Mails in PVO Maint site\r\n2.Enter Order ID of the transaction and click on Search by Order ID button\r\n3.Verify that user is shown all the mails corrsponding to the order ID.\r\n13. Check in the mail_header table that T@H ready to print  email is persisted there and all fields show correct information",
        "expected": "1. \r\n2. The Application should be launched\r\n3. Tickets should be selected from the Availability Page\r\n4. The user should be able to enter the Recaptcha Text and navigated to the Shopping cart window\r\n5. The user should be navigated to the Login/Register Modal Window\r\n6. The user should be navigated to the Split Delivery Page.Both the Express Delivery Select and the Split Delivery Sections should be shown.\r\n7. The user should be able to choose the delivery method for event\r\nRoute to Payment page\r\n8. The user should be  navigate to the confirmation page\r\n9. T@H link is displayed in confirmation page\r\n10. User should be able to see the below:\r\na. Single ticket purchased in the order where the delivery method is Tickets@Home\r\nb. A yellow triangle (I Icon) icon will be presnt saying you can't print\r\n11. When the time reaches as that set in pre requisite, the user will get a T@H ready email\r\n12. User is shown all the mails corrsponding to the order ID.T@H ready to print email is also displayed.\r\n13. T@H ready to print  email is persisted in mail_header table and all fields show correct information"
      }
    ],
    "custom_jiras": "55"
  },
  {
    "id": 30716993,
    "title": "Verify buyer types are displayed correctly on T@H page for a non-inventoried event when section,row,seat have same value",
    "section_id": 1686256,
    "template_id": 1,
    "type_id": 11,
    "priority_id": 6,
    "milestone_id": null,
    "refs": "PVO-13432",
    "created_by": 333,
    "created_on": 1685028207,
    "updated_by": 333,
    "updated_on": 1685028207,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611817,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C152580",
    "custom_pvo_pvodc_category": 15,
    "custom_pvocodelines": null,
    "custom_preconds": "1.  Have a  non-inventoried event in PV such that the section,row and seat value is \"N/A\" for all.\r\n2. SPLITDE=false at Supplier level",
    "custom_test_purpose": null,
    "custom_steps": "1. Launch Single sales link of non-inventoried event\r\nExpected Result:\r\nAvailability page is displayed\r\n2. Select tickets for different buyer types and \nclick Continue button\r\nExpected Result:\r\nShopping cart is displayed\r\n3. Click Continue button on cart page\r\nExpected Result:\r\nLogin modal is displayed\r\n4. Log in as new/existing patron\r\nExpected Result:\r\nPayment page is displayed\r\n5. Select the existing credit card/Add new credit \ncard\r\nExpected Result:\r\nUser is able to select an existing credit card or \nadd a new credit card\r\n6. Select T@H as the delivery method\r\nExpected Result:\r\nT@H is selected as the delivery method\r\n7. Fill in all other required fields in the payment \npage and click Buy tickets button\r\nExpected Result:\r\nConfirmation page is displayed\r\n8. Click Print your Tickets link on the confirmation \npage\r\nExpected Result:\r\nT@H page is displayed\r\n9. Verify the buyer types displayed against \neach ticket\r\nExpected Result:\r\nThe correct buyer type is displayed against \neach ticket\r\n10. Click View&Print tickets button\r\nExpected Result:\r\nTickets are displayed\r\n11. Verify the buyer types displayed against \neach ticket\r\nExpected Result:\r\nThe correct buyer type is displayed against \neach ticket",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Launch Single sales link of non-inventoried event\r\n2. Select tickets for different buyer types and \nclick Continue button\r\n3. Click Continue button on cart page\r\n4. Log in as new/existing patron\r\n5. Select the existing credit card/Add new credit \ncard\r\n6. Select T@H as the delivery method\r\n7. Fill in all other required fields in the payment \npage and click Buy tickets button\r\n8. Click Print your Tickets link on the confirmation \npage\r\n9. Verify the buyer types displayed against \neach ticket\r\n10. Click View&Print tickets button\r\n11. Verify the buyer types displayed against \neach ticket",
        "expected": "1. Availability page is displayed\r\n2. Shopping cart is displayed\r\n3. Login modal is displayed\r\n4. Payment page is displayed\r\n5. User is able to select an existing credit card or \nadd a new credit card\r\n6. T@H is selected as the delivery method\r\n7. Confirmation page is displayed\r\n8. T@H page is displayed\r\n9. The correct buyer type is displayed against \neach ticket\r\n10. Tickets are displayed\r\n11. The correct buyer type is displayed against \neach ticket"
      }
    ],
    "custom_jiras": "60"
  }
]