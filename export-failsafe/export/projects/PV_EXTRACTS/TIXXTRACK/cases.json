[
  {
    "id": 30717790,
    "title": "Verify the ticket details in Tixx Track for sale and return transactions",
    "section_id": 1686341,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-1",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C149934",
    "custom_category_misc": 5,
    "custom_preconds": "Create an event group in Supplier admin\r\nCreate an event and associate it to the above event group",
    "custom_test_purpose": null,
    "custom_steps": "1. Perform a sale for an event\r\nExpected Result:\r\n\t\nSale should be completed successfully\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n3. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n4. Verify the file in WinSCP\r\nExpected Result:\r\nThe ticket details should be displayed correctly\r\n5. Navigate to Ticket Services\nReturn the ticket after 10min\r\nExpected Result:\r\nReturn should be successful\r\n6. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n7. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n8. Verify the file in WinSCP\r\nExpected Result:\r\nTicket returned to inventory should show up as Open or Held with no patron info populated and seat info populated",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform a sale for an event\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n3. Run Ticket Track in Informatica after 10min\r\n4. Verify the file in WinSCP\r\n5. Navigate to Ticket Services\nReturn the ticket after 10min\r\n6. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n7. Run Ticket Track in Informatica after 10min\r\n8. Verify the file in WinSCP",
        "expected": "1. \t\nSale should be completed successfully\r\n2. Query output should be displayed correctly\r\n3. Run should be successful\r\n4. The ticket details should be displayed correctly\r\n5. Return should be successful\r\n6. Query output should be displayed correctly\r\n7. Run should be successful\r\n8. Ticket returned to inventory should show up as Open or Held with no patron info populated and seat info populated"
      }
    ],
    "custom_jiras": "2.0"
  },
  {
    "id": 30717791,
    "title": "Verify that the output file is displayed with correct data when an event is added or removed from an existing event group",
    "section_id": 1686341,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-24",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C155264",
    "custom_category_misc": 5,
    "custom_preconds": "Navigate to Supplier admin\r\nSelect an existing event group which is configured in IMF\r\nCreate 3 events and associate it to the above event group",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to PV\r\nExpected Result:\r\n\t\nLogin should be successful\r\n2. Navigate to Supplier admin->Select the event group mentioned in the pre-requisite\r\nExpected Result:\r\nevent group should be displayed\r\n3. Remove all the associated events from the group\r\nExpected Result:\r\nEvents should be removed\r\n4. Verify the event group in DCDM\n\nCall sysadmin_vpd.client_ctx_pkg.set_client_id('PVQAF02');\n\nSelect * from EVENT_GROUP WHERE EVENT_GROUP_CODE='TIXXTRAC19';\r\nExpected Result:\r\nNo events should be returned in DCDM \r\n5. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n6. Verify the file in WinSCP\r\nExpected Result:\r\nThe file should be blank\r\n7. Navigate to Supplier admin->Select the event group mentioned in the pre-requisite\r\nExpected Result:\r\nevent group should be displayed\r\n8. Add 2 Events to the event group\r\nExpected Result:\r\nEvents should be added\r\n9. Verify the event group in DCDM\n\nCall sysadmin_vpd.client_ctx_pkg.set_client_id('PVQAF02');\n\nSelect * from EVENT_GROUP WHERE EVENT_GROUP_CODE='TIXXTRAC19';\r\nExpected Result:\r\nBoth the events should be returned\r\n10. Verify the file in WinSCP\r\nExpected Result:\r\nThe file should be displayed with both event data\r\n11. Navigate to Supplier admin->Select the event group mentioned in the pre-requisite\r\nExpected Result:\r\nevent group should be displayed\r\n12. Add 3rd Event to the event group\r\nExpected Result:\r\nEvent should be added\r\n13. Verify the event group in DCDM\n\nCall sysadmin_vpd.client_ctx_pkg.set_client_id('PVQAF02');\n\nSelect * from EVENT_GROUP WHERE EVENT_GROUP_CODE='TIXXTRAC19';\r\nExpected Result:\r\nall the 3 events should be returned\r\n14. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n15. Verify the file in WinSCP\r\nExpected Result:\r\nThe file should be displayed with the 3rd event data. Other 2 events should not be passed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to PV\r\n2. Navigate to Supplier admin->Select the event group mentioned in the pre-requisite\r\n3. Remove all the associated events from the group\r\n4. Verify the event group in DCDM\n\nCall sysadmin_vpd.client_ctx_pkg.set_client_id('PVQAF02');\n\nSelect * from EVENT_GROUP WHERE EVENT_GROUP_CODE='TIXXTRAC19';\r\n5. Run Ticket Track in Informatica after 10min\r\n6. Verify the file in WinSCP\r\n7. Navigate to Supplier admin->Select the event group mentioned in the pre-requisite\r\n8. Add 2 Events to the event group\r\n9. Verify the event group in DCDM\n\nCall sysadmin_vpd.client_ctx_pkg.set_client_id('PVQAF02');\n\nSelect * from EVENT_GROUP WHERE EVENT_GROUP_CODE='TIXXTRAC19';\r\n10. Verify the file in WinSCP\r\n11. Navigate to Supplier admin->Select the event group mentioned in the pre-requisite\r\n12. Add 3rd Event to the event group\r\n13. Verify the event group in DCDM\n\nCall sysadmin_vpd.client_ctx_pkg.set_client_id('PVQAF02');\n\nSelect * from EVENT_GROUP WHERE EVENT_GROUP_CODE='TIXXTRAC19';\r\n14. Run Ticket Track in Informatica after 10min\r\n15. Verify the file in WinSCP",
        "expected": "1. \t\nLogin should be successful\r\n2. event group should be displayed\r\n3. Events should be removed\r\n4. No events should be returned in DCDM \r\n5. Run should be successful\r\n6. The file should be blank\r\n7. event group should be displayed\r\n8. Events should be added\r\n9. Both the events should be returned\r\n10. The file should be displayed with both event data\r\n11. event group should be displayed\r\n12. Event should be added\r\n13. all the 3 events should be returned\r\n14. Run should be successful\r\n15. The file should be displayed with the 3rd event data. Other 2 events should not be passed"
      }
    ],
    "custom_jiras": "2.1"
  },
  {
    "id": 30717792,
    "title": "Verify that the output file is displayed with correct data when an event is added or removed from a New event group",
    "section_id": 1686341,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-24",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C155265",
    "custom_category_misc": 5,
    "custom_preconds": "Navigate to Supplier admin\r\nCreate a New event group which is configured in IMF\r\nCreate 3 events and associate it to the above event group",
    "custom_test_purpose": null,
    "custom_steps": "1. Login to PV\r\nExpected Result:\r\n\t\nLogin should be successful\r\n2. Navigate to Supplier admin->Select the event group mentioned in the pre-requisite\r\nExpected Result:\r\nevent group should be displayed\r\n3. Remove all the associated events from the group\r\nExpected Result:\r\nEvents should be removed\r\n4. Verify the event group in DCDM\n\nCall sysadmin_vpd.client_ctx_pkg.set_client_id('PVQAF02');\n\nSelect * from EVENT_GROUP WHERE EVENT_GROUP_CODE='TIXXTRAC19';\r\nExpected Result:\r\nNo events should be returned in DCDM \r\n5. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n6. Verify the file in WinSCP\r\nExpected Result:\r\nThe file should be blank\r\n7. Navigate to Supplier admin->Select the event group mentioned in the pre-requisite\r\nExpected Result:\r\nevent group should be displayed\r\n8. Add 2 Events to the event group\r\nExpected Result:\r\nEvents should be added\r\n9. Verify the event group in DCDM\n\nCall sysadmin_vpd.client_ctx_pkg.set_client_id('PVQAF02');\n\nSelect * from EVENT_GROUP WHERE EVENT_GROUP_CODE='TIXXTRAC19';\r\nExpected Result:\r\nBoth the events should be returned\r\n10. Verify the file in WinSCP\r\nExpected Result:\r\nThe file should be displayed with both event data\r\n11. Navigate to Supplier admin->Select the event group mentioned in the pre-requisite\r\nExpected Result:\r\nevent group should be displayed\r\n12. Add 3rd Event to the event group\r\nExpected Result:\r\nEvent should be added\r\n13. Verify the event group in DCDM\n\nCall sysadmin_vpd.client_ctx_pkg.set_client_id('PVQAF02');\n\nSelect * from EVENT_GROUP WHERE EVENT_GROUP_CODE='TIXXTRAC19';\r\nExpected Result:\r\nall the 3 events should be returned\r\n14. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n15. Verify the file in WinSCP\r\nExpected Result:\r\nThe file should be displayed with the 3rd event data. Other 2 events should not be passed",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Login to PV\r\n2. Navigate to Supplier admin->Select the event group mentioned in the pre-requisite\r\n3. Remove all the associated events from the group\r\n4. Verify the event group in DCDM\n\nCall sysadmin_vpd.client_ctx_pkg.set_client_id('PVQAF02');\n\nSelect * from EVENT_GROUP WHERE EVENT_GROUP_CODE='TIXXTRAC19';\r\n5. Run Ticket Track in Informatica after 10min\r\n6. Verify the file in WinSCP\r\n7. Navigate to Supplier admin->Select the event group mentioned in the pre-requisite\r\n8. Add 2 Events to the event group\r\n9. Verify the event group in DCDM\n\nCall sysadmin_vpd.client_ctx_pkg.set_client_id('PVQAF02');\n\nSelect * from EVENT_GROUP WHERE EVENT_GROUP_CODE='TIXXTRAC19';\r\n10. Verify the file in WinSCP\r\n11. Navigate to Supplier admin->Select the event group mentioned in the pre-requisite\r\n12. Add 3rd Event to the event group\r\n13. Verify the event group in DCDM\n\nCall sysadmin_vpd.client_ctx_pkg.set_client_id('PVQAF02');\n\nSelect * from EVENT_GROUP WHERE EVENT_GROUP_CODE='TIXXTRAC19';\r\n14. Run Ticket Track in Informatica after 10min\r\n15. Verify the file in WinSCP",
        "expected": "1. \t\nLogin should be successful\r\n2. event group should be displayed\r\n3. Events should be removed\r\n4. No events should be returned in DCDM \r\n5. Run should be successful\r\n6. The file should be blank\r\n7. event group should be displayed\r\n8. Events should be added\r\n9. Both the events should be returned\r\n10. The file should be displayed with both event data\r\n11. event group should be displayed\r\n12. Event should be added\r\n13. all the 3 events should be returned\r\n14. Run should be successful\r\n15. The file should be displayed with the 3rd event data. Other 2 events should not be passed"
      }
    ],
    "custom_jiras": "2.1"
  },
  {
    "id": 30717793,
    "title": "Verify the ticket details in Tixx Track after a return transaction",
    "section_id": 1686341,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-1",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C149936",
    "custom_category_misc": 5,
    "custom_preconds": "Login to PV\r\nCreate an event group in Supplier admin\r\nCreate an event and associate it to the event group",
    "custom_test_purpose": null,
    "custom_steps": "1. Perform a sale for an event\r\nExpected Result:\r\nSale should be successful\r\n2. Navigate to Ticket services-Order details\nReturn the ticket\r\nExpected Result:\r\nReturn should be successful\r\n3. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n4. Run Ticket Track workflow in Informatica 10min after transaction\r\nExpected Result:\r\nRun should be successful\r\n5. Verify the file in WinSCP in PVQAF02 folder\r\nExpected Result:\r\nTicket returned to inventory should show up as Open or Held with no patron info and seat info populated.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform a sale for an event\r\n2. Navigate to Ticket services-Order details\nReturn the ticket\r\n3. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n4. Run Ticket Track workflow in Informatica 10min after transaction\r\n5. Verify the file in WinSCP in PVQAF02 folder",
        "expected": "1. Sale should be successful\r\n2. Return should be successful\r\n3. Query output should be displayed correctly\r\n4. Run should be successful\r\n5. Ticket returned to inventory should show up as Open or Held with no patron info and seat info populated."
      }
    ],
    "custom_jiras": "2.0"
  },
  {
    "id": 30717794,
    "title": "Verify the ticket details in Tixx Track for sale and Exchange return transactions",
    "section_id": 1686341,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-1",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C149935",
    "custom_category_misc": 5,
    "custom_preconds": "Login to PV\r\nCreate an Event group in supplier admin\r\nCreate an event and associate it to the event group",
    "custom_test_purpose": null,
    "custom_steps": "1. Perform a sale for an event\r\nExpected Result:\r\nSale should be completed successfully\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n3. Run Ticket Track in Informatica 10min after the transaction\r\nExpected Result:\r\nRun should be successful\r\n4. Verify the file in WinSCP\r\nExpected Result:\r\nThe ticket details should be displayed correctly\r\n5. Exchange the ticket in PV after 10min\r\nExpected Result:\r\nExchange Return and Exchange sale should be successful\r\n6. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n7. Run Ticket Track in Informatica 10min after the transaction\r\nExpected Result:\r\nRun should be successful\r\n8. Verify the file in WinSCP\r\nExpected Result:\r\nTicket returned to inventory should show up as Open or Held with no patron info populated.\n\nNewly purchased ticket details should also be displayed in the file",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform a sale for an event\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n3. Run Ticket Track in Informatica 10min after the transaction\r\n4. Verify the file in WinSCP\r\n5. Exchange the ticket in PV after 10min\r\n6. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n7. Run Ticket Track in Informatica 10min after the transaction\r\n8. Verify the file in WinSCP",
        "expected": "1. Sale should be completed successfully\r\n2. Query output should be displayed correctly\r\n3. Run should be successful\r\n4. The ticket details should be displayed correctly\r\n5. Exchange Return and Exchange sale should be successful\r\n6. Query output should be displayed correctly\r\n7. Run should be successful\r\n8. Ticket returned to inventory should show up as Open or Held with no patron info populated.\n\nNewly purchased ticket details should also be displayed in the file"
      }
    ],
    "custom_jiras": "2.0"
  },
  {
    "id": 30717795,
    "title": "Verify the ticket details in Tixx Track for Exchange return transactions",
    "section_id": 1686341,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-1",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 6,
    "custom_is_automated": false,
    "custom_refs": "C149937",
    "custom_category_misc": 5,
    "custom_preconds": "Login to PV\r\nCreate an Event group in supplier admin\r\nCreate an event and associate it to the event group",
    "custom_test_purpose": null,
    "custom_steps": "1. Perform a sale for an event\r\nExpected Result:\r\n\t\nSale should be completed successfully\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n3. Exchange the ticket in PV after 10min\r\nExpected Result:\r\nExchange Return and Exchange sale should be successful\r\n4. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n5. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n6. Verify the file in WinSCP\r\nExpected Result:\r\nTicket returned to inventory should show up as Open or Held with no patron info populated.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform a sale for an event\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n3. Exchange the ticket in PV after 10min\r\n4. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n5. Run Ticket Track in Informatica after 10min\r\n6. Verify the file in WinSCP",
        "expected": "1. \t\nSale should be completed successfully\r\n2. Query output should be displayed correctly\r\n3. Exchange Return and Exchange sale should be successful\r\n4. Query output should be displayed correctly\r\n5. Run should be successful\r\n6. Ticket returned to inventory should show up as Open or Held with no patron info populated."
      }
    ],
    "custom_jiras": "2.0"
  },
  {
    "id": 30717796,
    "title": "Verify the ticket details in Tixx Track for Reservation and Release transactions",
    "section_id": 1686341,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-1",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 7,
    "custom_is_automated": false,
    "custom_refs": "C149938",
    "custom_category_misc": 5,
    "custom_preconds": "Login to PV\r\nCreate an Event group in supplier admin\r\nCreate an event and associate it to the event group",
    "custom_test_purpose": null,
    "custom_steps": "1. \t\nPerform a Reservation for an event\r\nExpected Result:\r\nReservation  should be successful\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n3. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n4. Verify the file in WinSCP\r\nExpected Result:\r\nThe ticket details should be displayed correctly\r\n5. Release the ticket from PV after 10min\r\nExpected Result:\r\nRelease should be successful\r\n6. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n7. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n8. Verify the file in WinSCP\r\nExpected Result:\r\nTicket released to inventory should show up as Open or Held with no patron info populated.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. \t\nPerform a Reservation for an event\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n3. Run Ticket Track in Informatica after 10min\r\n4. Verify the file in WinSCP\r\n5. Release the ticket from PV after 10min\r\n6. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n7. Run Ticket Track in Informatica after 10min\r\n8. Verify the file in WinSCP",
        "expected": "1. Reservation  should be successful\r\n2. Query output should be displayed correctly\r\n3. Run should be successful\r\n4. The ticket details should be displayed correctly\r\n5. Release should be successful\r\n6. Query output should be displayed correctly\r\n7. Run should be successful\r\n8. Ticket released to inventory should show up as Open or Held with no patron info populated."
      }
    ],
    "custom_jiras": "2.0"
  },
  {
    "id": 30717797,
    "title": "Verify the ticket details in Tixx Track after a Reservation Release transaction",
    "section_id": 1686341,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-1",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 8,
    "custom_is_automated": false,
    "custom_refs": "C149939",
    "custom_category_misc": 5,
    "custom_preconds": "Login to PV\r\nCreate an Event group in supplier admin\r\nCreate an event and associate it to the event group",
    "custom_test_purpose": null,
    "custom_steps": "1. Perform a Reservation for an event\r\nExpected Result:\r\nReservation should be completed successfully\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n3. Release the ticket from PV after 10min\r\nExpected Result:\r\nRelease should be successful\r\n4. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n5. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n6. Verify the file in WinSCP\r\nExpected Result:\r\nTicket released to inventory should show up as Open or Held with no patron info populated.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform a Reservation for an event\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n3. Release the ticket from PV after 10min\r\n4. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n5. Run Ticket Track in Informatica after 10min\r\n6. Verify the file in WinSCP",
        "expected": "1. Reservation should be completed successfully\r\n2. Query output should be displayed correctly\r\n3. Release should be successful\r\n4. Query output should be displayed correctly\r\n5. Run should be successful\r\n6. Ticket released to inventory should show up as Open or Held with no patron info populated."
      }
    ],
    "custom_jiras": "2.0"
  },
  {
    "id": 30717798,
    "title": "Verify the ticket details in Tixx Track after a Exchange Release transaction",
    "section_id": 1686341,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-1",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 9,
    "custom_is_automated": false,
    "custom_refs": "C149940",
    "custom_category_misc": 5,
    "custom_preconds": "Login to PV\r\nCreate an Event group in supplier admin\r\nCreate an event and associate it to the event group",
    "custom_test_purpose": null,
    "custom_steps": "1. Perform a Reservation for an event\r\nExpected Result:\r\nReservation should be successful\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n3. Exchange the ticket from PV after 10min\r\nExpected Result:\r\nExchange release and Exchange Reservation should be successful\r\n4. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n5. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n6. Verify the file in WinSCP\r\nExpected Result:\r\nTicket released to inventory should show up as Open or Held with no patron info populated.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform a Reservation for an event\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n3. Exchange the ticket from PV after 10min\r\n4. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n5. Run Ticket Track in Informatica after 10min\r\n6. Verify the file in WinSCP",
        "expected": "1. Reservation should be successful\r\n2. Query output should be displayed correctly\r\n3. Exchange release and Exchange Reservation should be successful\r\n4. Query output should be displayed correctly\r\n5. Run should be successful\r\n6. Ticket released to inventory should show up as Open or Held with no patron info populated."
      }
    ],
    "custom_jiras": "2.0"
  },
  {
    "id": 30717799,
    "title": "Verify the ticket details in Tixx Track for Reservation and Exchange Release transactions",
    "section_id": 1686341,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-1",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 10,
    "custom_is_automated": false,
    "custom_refs": "C149941",
    "custom_category_misc": 5,
    "custom_preconds": "Login to PV\r\nCreate an Event group in supplier admin\r\nCreate an event and associate it to the event group\r\n\r\n\r\nExchange the tickets",
    "custom_test_purpose": null,
    "custom_steps": "1. Perform a Reservation for an event\r\nExpected Result:\r\nReservation should be successful\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n3. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n4. Verify the file in WinSCP\r\nExpected Result:\r\nThe ticket details should be displayed correctly\r\n5. Exchange the ticket after 10min\r\nExpected Result:\r\nExchange Release and Exchange Reservation should be successful\r\n6. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n7. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n8. Verify the file in WinSCP\r\nExpected Result:\r\nTicket released to inventory should show up as Open or Held with no patron info populated.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform a Reservation for an event\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n3. Run Ticket Track in Informatica after 10min\r\n4. Verify the file in WinSCP\r\n5. Exchange the ticket after 10min\r\n6. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n7. Run Ticket Track in Informatica after 10min\r\n8. Verify the file in WinSCP",
        "expected": "1. Reservation should be successful\r\n2. Query output should be displayed correctly\r\n3. Run should be successful\r\n4. The ticket details should be displayed correctly\r\n5. Exchange Release and Exchange Reservation should be successful\r\n6. Query output should be displayed correctly\r\n7. Run should be successful\r\n8. Ticket released to inventory should show up as Open or Held with no patron info populated."
      }
    ],
    "custom_jiras": "2.0"
  },
  {
    "id": 30717800,
    "title": "Verify the ticket details in Tixx Track for Sale transaction",
    "section_id": 1686341,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-1",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 11,
    "custom_is_automated": false,
    "custom_refs": "C149943",
    "custom_category_misc": 5,
    "custom_preconds": "Create an event group in Supplier admin\r\nCreate an event and associate it to the above event group",
    "custom_test_purpose": null,
    "custom_steps": "1. Perform a sale for the event\r\nExpected Result:\r\nSale should be successful\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n3. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n4. Verify the file in WinSCP\r\nExpected Result:\r\nThe ticket details should be displayed correctly",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform a sale for the event\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n3. Run Ticket Track in Informatica after 10min\r\n4. Verify the file in WinSCP",
        "expected": "1. Sale should be successful\r\n2. Query output should be displayed correctly\r\n3. Run should be successful\r\n4. The ticket details should be displayed correctly"
      }
    ],
    "custom_jiras": "2.0"
  },
  {
    "id": 30717801,
    "title": "Verify the ticket details in Tixx Track for Claim sale transaction",
    "section_id": 1686341,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-1",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 12,
    "custom_is_automated": false,
    "custom_refs": "C149944",
    "custom_category_misc": 5,
    "custom_preconds": "Create an event group in Supplier admin\r\nCreate an event and associate it to the above event group",
    "custom_test_purpose": null,
    "custom_steps": "1. Perform a Reservation for an event\r\nExpected Result:\r\nReservation should be successful\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n3. Claim the reserved ticket from PV\r\nExpected Result:\r\nClaim should be successful\r\n4. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n5. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n6. Verify the file in WinSCP\r\nExpected Result:\r\nThe ticket details should be displayed correctly",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform a Reservation for an event\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n3. Claim the reserved ticket from PV\r\n4. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n5. Run Ticket Track in Informatica after 10min\r\n6. Verify the file in WinSCP",
        "expected": "1. Reservation should be successful\r\n2. Query output should be displayed correctly\r\n3. Claim should be successful\r\n4. Query output should be displayed correctly\r\n5. Run should be successful\r\n6. The ticket details should be displayed correctly"
      }
    ],
    "custom_jiras": "2.0"
  },
  {
    "id": 30717802,
    "title": "Verify the ticket details in Tixx Track for Claim Release transaction",
    "section_id": 1686341,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-1",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 13,
    "custom_is_automated": false,
    "custom_refs": "C150552",
    "custom_category_misc": 5,
    "custom_preconds": "1.Login to PV\r\n2.Create an event group in Supplier admin\r\n3.Create an event and associate it to the above event group",
    "custom_test_purpose": null,
    "custom_steps": "1. Perform Reservation for the event\r\nExpected Result:\r\nReservation should be successful\r\n2. Navigate to Order details\nSelect 2 tickets and select action as Claim reservation\n\r\nExpected Result:\r\nUser should be navigated to the cart\r\n3. From the cart, Go to Ticket services->Order details\nSelect the remaining tickets and select action as Release\r\nExpected Result:\r\nUser should be navigated to the cart\r\n4. Complete the cart\r\nExpected Result:\r\nCart should be checkout successfully\r\n5. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n6. Verify the file in WinSCP\r\nExpected Result:\r\nEach ticket details should be displayed correctly\nReleased seats should be in OPEN status without patron details\nand Paid seats should be in SOLD status with patron details",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform Reservation for the event\r\n2. Navigate to Order details\nSelect 2 tickets and select action as Claim reservation\n\r\n3. From the cart, Go to Ticket services->Order details\nSelect the remaining tickets and select action as Release\r\n4. Complete the cart\r\n5. Run Ticket Track in Informatica after 10min\r\n6. Verify the file in WinSCP",
        "expected": "1. Reservation should be successful\r\n2. User should be navigated to the cart\r\n3. User should be navigated to the cart\r\n4. Cart should be checkout successfully\r\n5. Run should be successful\r\n6. Each ticket details should be displayed correctly\nReleased seats should be in OPEN status without patron details\nand Paid seats should be in SOLD status with patron details"
      }
    ],
    "custom_jiras": "2.0"
  },
  {
    "id": 30717803,
    "title": "Verify the ticket details in Tixx Track for Reservation transaction",
    "section_id": 1686341,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-1",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 14,
    "custom_is_automated": false,
    "custom_refs": "C149945",
    "custom_category_misc": 5,
    "custom_preconds": "Create an event group in Supplier admin\r\nCreate an event and associate it to the above event group",
    "custom_test_purpose": null,
    "custom_steps": "1. Perform Reservation transaction for the event\r\nExpected Result:\r\nReservation should be successful\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n3. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n4. Verify the file in WinSCP\r\nExpected Result:\r\nThe ticket details should be displayed correctly",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform Reservation transaction for the event\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n3. Run Ticket Track in Informatica after 10min\r\n4. Verify the file in WinSCP",
        "expected": "1. Reservation should be successful\r\n2. Query output should be displayed correctly\r\n3. Run should be successful\r\n4. The ticket details should be displayed correctly"
      }
    ],
    "custom_jiras": "2.0"
  },
  {
    "id": 30717804,
    "title": "Verify the ticket details in Tixx Track for Re-offer transaction",
    "section_id": 1686341,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-1",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 15,
    "custom_is_automated": false,
    "custom_refs": "C149946",
    "custom_category_misc": 5,
    "custom_preconds": "Create an event group in Supplier admin\r\nCreate an event and associate it to the above event group",
    "custom_test_purpose": null,
    "custom_steps": "1. Perform a sale for an event\r\nExpected Result:\r\nSale should be completed successfully\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n3. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n4. Verify the file in WinSCP\r\nExpected Result:\r\nThe ticket details should be displayed correctly\r\n5. Re-offer the tickets to another buyer type\r\nExpected Result:\r\nRe-offer should be successful\r\n6. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n7. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n8. Verify the file in WinSCP\r\nExpected Result:\r\nThe ticket details should be displayed correctly",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform a sale for an event\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n3. Run Ticket Track in Informatica after 10min\r\n4. Verify the file in WinSCP\r\n5. Re-offer the tickets to another buyer type\r\n6. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n7. Run Ticket Track in Informatica after 10min\r\n8. Verify the file in WinSCP",
        "expected": "1. Sale should be completed successfully\r\n2. Query output should be displayed correctly\r\n3. Run should be successful\r\n4. The ticket details should be displayed correctly\r\n5. Re-offer should be successful\r\n6. Query output should be displayed correctly\r\n7. Run should be successful\r\n8. The ticket details should be displayed correctly"
      }
    ],
    "custom_jiras": "2.0"
  },
  {
    "id": 30717805,
    "title": "Verify the ticket details in Tixx Track for Donation purchase and reversal of Donation to Primary market",
    "section_id": 1686341,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-1",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 16,
    "custom_is_automated": false,
    "custom_refs": "C149947",
    "custom_category_misc": 5,
    "custom_preconds": "1.Login to PV\r\n2.Create an event group in Supplier admin\r\n3.Create an event and associate it to the above event group\r\n4.Perf accept the event to PVO\r\n5.Create 2 patrons P1 and P2\r\n\r\n6.Perform a sale for an event\r\n7.Create Donation for a ticket in MyTickets\r\n8.Reverse the ticket from PV",
    "custom_test_purpose": null,
    "custom_steps": "1. Perform a sale for an event using patron P1\r\nExpected Result:\r\nSale should be successful\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n3. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n4. Verify the file in WinSCP\r\nExpected Result:\r\nTicket details should be displayed correctly\r\n5. Login to Mytickets as Patron P1\r\nExpected Result:\r\nLogin should be successful\r\n6. Select action as Donate and select the ticket\r\nExpected Result:\r\nTicket should be selected and user should be able to create donation\r\n7. Login to Mytickets as Patron P2\r\nExpected Result:\r\nLogin should be successful\r\n8. Accept the above created donation offer\r\nExpected Result:\r\nDonation should be accepted successfully\r\n9. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n10. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n11. Verify the file in WinSCP\r\nExpected Result:\r\nFile should contain donation order id and Buyer patron P2 details\r\n12. Wait for 10min\nReverse the donated ticket to Primary market via PV \r\nExpected Result:\r\nReversal should be successful\r\n13. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n14. Verify the file in WinSCP\r\nExpected Result:\r\nFor feed with (P)rimary or (C)urrent setting, primary patron and reinstated ticket should be reflected.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform a sale for an event using patron P1\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n3. Run Ticket Track in Informatica after 10min\r\n4. Verify the file in WinSCP\r\n5. Login to Mytickets as Patron P1\r\n6. Select action as Donate and select the ticket\r\n7. Login to Mytickets as Patron P2\r\n8. Accept the above created donation offer\r\n9. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n10. Run Ticket Track in Informatica after 10min\r\n11. Verify the file in WinSCP\r\n12. Wait for 10min\nReverse the donated ticket to Primary market via PV \r\n13. Run Ticket Track in Informatica after 10min\r\n14. Verify the file in WinSCP",
        "expected": "1. Sale should be successful\r\n2. Query output should be displayed correctly\r\n3. Run should be successful\r\n4. Ticket details should be displayed correctly\r\n5. Login should be successful\r\n6. Ticket should be selected and user should be able to create donation\r\n7. Login should be successful\r\n8. Donation should be accepted successfully\r\n9. Query output should be displayed correctly\r\n10. Run should be successful\r\n11. File should contain donation order id and Buyer patron P2 details\r\n12. Reversal should be successful\r\n13. Run should be successful\r\n14. For feed with (P)rimary or (C)urrent setting, primary patron and reinstated ticket should be reflected."
      }
    ],
    "custom_jiras": "2.0"
  },
  {
    "id": 30717806,
    "title": "Verify the ticket details in Tixx Track for Reversal of Donation to Primary market",
    "section_id": 1686341,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-1",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 17,
    "custom_is_automated": false,
    "custom_refs": "C150553",
    "custom_category_misc": 5,
    "custom_preconds": "1.Login to PV\r\n2.Create an event group in Supplier admin\r\n3.Create an event and associate it to the above event group\r\n4.Perf accept the event to PVO\r\n5.Create 2 patrons P1 and P2",
    "custom_test_purpose": null,
    "custom_steps": "1. Perform a sale for an event using patron P1\r\nExpected Result:\r\nSale should be successful\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n3. Login to Mytickets as Patron P1\r\nExpected Result:\r\nLogin should be successful\r\n4. Select action as Donate and select the ticket\r\nExpected Result:\r\nTicket should be selected and user should be able to create donation\r\n5. Login to Mytickets as Patron P2\r\nExpected Result:\r\nLogin should be successful\r\n6. Accept the above created donation offer\r\nExpected Result:\r\nDonation should be accepted successfully\r\n7. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n8. Wait for 10min\nReverse the donated ticket to Primary market via PV \r\nExpected Result:\r\nReversal should be successful\r\n9. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n10. Verify the file in WinSCP\r\nExpected Result:\r\nFor feed with (P)rimary or (C)urrent setting, primary patron and reinstated ticket should be reflected.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform a sale for an event using patron P1\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n3. Login to Mytickets as Patron P1\r\n4. Select action as Donate and select the ticket\r\n5. Login to Mytickets as Patron P2\r\n6. Accept the above created donation offer\r\n7. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n8. Wait for 10min\nReverse the donated ticket to Primary market via PV \r\n9. Run Ticket Track in Informatica after 10min\r\n10. Verify the file in WinSCP",
        "expected": "1. Sale should be successful\r\n2. Query output should be displayed correctly\r\n3. Login should be successful\r\n4. Ticket should be selected and user should be able to create donation\r\n5. Login should be successful\r\n6. Donation should be accepted successfully\r\n7. Query output should be displayed correctly\r\n8. Reversal should be successful\r\n9. Run should be successful\r\n10. For feed with (P)rimary or (C)urrent setting, primary patron and reinstated ticket should be reflected."
      }
    ],
    "custom_jiras": "2.0"
  },
  {
    "id": 30717807,
    "title": "Verify the ticket details in Tixx Track for Resale reversal to Primary market",
    "section_id": 1686341,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-1",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 18,
    "custom_is_automated": false,
    "custom_refs": "C149950",
    "custom_category_misc": 5,
    "custom_preconds": "1.Login to PV\r\n2.Create an event group in Supplier admin\r\n3.Create an event and associate it to the above event group\r\n4.Perf accept the event to PVO\r\n5.Create 2 patrons P1 and P2\r\n\r\n\r\nâ€¢ Ally buys the ticket on the primary market.\r\nâ€¢ Ally resells to Chris. Ally should show up in (P). Chris should show up in (C).\r\nâ€¢ Resale is reversed to Ally, the primary ticket holder. Ally should show up in both (P) and (C) because she is both primary and current.",
    "custom_test_purpose": null,
    "custom_steps": "1. Perform sale for the event using patron P1\r\nExpected Result:\r\nSale should be completed successfully\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n3. Login to Mytickets as Patron P1\r\nExpected Result:\r\nLogin should be successful\r\n4. Select action as Resale and select the ticket\r\nExpected Result:\r\nResale offer should be created\r\n5. Login to Mytickets as Patron P2\r\nExpected Result:\r\nLogin should be successful\r\n6. Purchase the resale offer as patron P2\r\nExpected Result:\r\nPurchase should be completed\r\n7. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n8. Wait for 10min\nReverse the Resold ticket to Primary market via PV\r\nExpected Result:\r\nReversal should be successful\r\n9. Run Ticket Track workflow in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n10. Verify the file in WinSCP\r\nExpected Result:\r\nFor feed with (P)rimary or (C)urrent setting, primary patron and reinstated ticket should be reflected.\n\nP1 patron should show up in both (P) and (C) because she is both primary and current.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform sale for the event using patron P1\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n3. Login to Mytickets as Patron P1\r\n4. Select action as Resale and select the ticket\r\n5. Login to Mytickets as Patron P2\r\n6. Purchase the resale offer as patron P2\r\n7. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n8. Wait for 10min\nReverse the Resold ticket to Primary market via PV\r\n9. Run Ticket Track workflow in Informatica after 10min\r\n10. Verify the file in WinSCP",
        "expected": "1. Sale should be completed successfully\r\n2. Query output should be displayed correctly\r\n3. Login should be successful\r\n4. Resale offer should be created\r\n5. Login should be successful\r\n6. Purchase should be completed\r\n7. Query output should be displayed correctly\r\n8. Reversal should be successful\r\n9. Run should be successful\r\n10. For feed with (P)rimary or (C)urrent setting, primary patron and reinstated ticket should be reflected.\n\nP1 patron should show up in both (P) and (C) because she is both primary and current."
      }
    ],
    "custom_jiras": "2.0"
  },
  {
    "id": 30717808,
    "title": "Verify the ticket details in Tixx Track for both Resale purchase and Resale reversal to Primary market",
    "section_id": 1686341,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-1",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 19,
    "custom_is_automated": false,
    "custom_refs": "C150554",
    "custom_category_misc": 5,
    "custom_preconds": "1.Login to PV\r\n2.Create an event group in Supplier admin\r\n3.Create an event and associate it to the above event group\r\n4.Perf accept the event to PVO\r\n5.Create 2 patrons P1 and P2",
    "custom_test_purpose": null,
    "custom_steps": "1. Perform sale for the event using patron P1\r\nExpected Result:\r\nSale should be completed successfully\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n3. Login to Mytickets as Patron P1\r\nExpected Result:\r\nLogin should be successful\r\n4. Select action as Resale and select the ticket\r\nExpected Result:\r\nResale offer should be created\r\n5. Login to Mytickets as Patron P2\r\nExpected Result:\r\nLogin should be successful\r\n6. Purchase the resale offer as patron P2\r\nExpected Result:\r\nPurchase should be completed\r\n7. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n8. Run Ticket Track workflow in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n9. Verify the file in WinSCP\r\nExpected Result:\r\nThe resold order id and purchased patron details should be displayed in the file\r\n10. Wait for 10min\nReverse the Resold ticket to Primary market via PV\r\nExpected Result:\r\nReversal should be successful\r\n11. Run Ticket Track workflow in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n12. Verify the file in WinSCP\r\nExpected Result:\r\nFor feed with (P)rimary or (C)urrent setting, primary patron and reinstated ticket should be reflected.\n\nP1 patron should show up in both (P) and (C) because she is both primary and current.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform sale for the event using patron P1\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n3. Login to Mytickets as Patron P1\r\n4. Select action as Resale and select the ticket\r\n5. Login to Mytickets as Patron P2\r\n6. Purchase the resale offer as patron P2\r\n7. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n8. Run Ticket Track workflow in Informatica after 10min\r\n9. Verify the file in WinSCP\r\n10. Wait for 10min\nReverse the Resold ticket to Primary market via PV\r\n11. Run Ticket Track workflow in Informatica after 10min\r\n12. Verify the file in WinSCP",
        "expected": "1. Sale should be completed successfully\r\n2. Query output should be displayed correctly\r\n3. Login should be successful\r\n4. Resale offer should be created\r\n5. Login should be successful\r\n6. Purchase should be completed\r\n7. Query output should be displayed correctly\r\n8. Run should be successful\r\n9. The resold order id and purchased patron details should be displayed in the file\r\n10. Reversal should be successful\r\n11. Run should be successful\r\n12. For feed with (P)rimary or (C)urrent setting, primary patron and reinstated ticket should be reflected.\n\nP1 patron should show up in both (P) and (C) because she is both primary and current."
      }
    ],
    "custom_jiras": "2.0"
  },
  {
    "id": 30717809,
    "title": "Verify the ticket details in Tixx Track for Resale reversal to Secondary market",
    "section_id": 1686341,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-1",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 20,
    "custom_is_automated": false,
    "custom_refs": "C149955",
    "custom_category_misc": 5,
    "custom_preconds": "1.Login to PV\r\n2.Create an event group in Supplier admin\r\n3.Create an event and associate it to the above event group\r\n4.Perf accept the event to PVO\r\n5.Create 3 patrons P1,P2 and P3",
    "custom_test_purpose": null,
    "custom_steps": "1. Perform sale for the event using patron P1\r\nExpected Result:\r\nSale should be completed successfully\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n3. Login to Mytickets as Patron P1\r\nExpected Result:\r\nLogin should be successful\r\n4. Select action as Resale and select the ticket\r\nExpected Result:\r\n\t\nResale offer should be created\r\n5. Login to Mytickets as Patron P2\r\nExpected Result:\r\n\t\nLogin should be successful\r\n6. Purchase the resale offer as patron P2\r\nExpected Result:\r\nPurchase should be completed\r\n7. Login to Mytickets as Patron P2\r\nExpected Result:\r\nLogin should be successful\r\n8. Select action as Resale and select the above ticket\r\nExpected Result:\r\nResale offer should be created\r\n9. Login to Mytickets as Patron P3\r\nExpected Result:\r\nLogin should be successful\r\n10. Purchase the resale offer as patron P3\r\nExpected Result:\r\nPurchase should be completed\r\n11. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n12. \nWait for 10min\nReverse the Resold ticket to Primary market via PV\r\nExpected Result:\r\nReversal should be successful\r\n13. Run Ticket Track workflow in Informatica after 10min\r\nExpected Result:\r\n\t\nRun should be successful\r\n14. Verify the file in WinSCP\r\nExpected Result:\r\nFor feed with (P)rimary setting, primary patron should still be reflected. For feed with (C)urrent setting, current secondary market ticket holder should be reflected.\n\nP1 should show up in both (P). P2 should show up in (C).",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform sale for the event using patron P1\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n3. Login to Mytickets as Patron P1\r\n4. Select action as Resale and select the ticket\r\n5. Login to Mytickets as Patron P2\r\n6. Purchase the resale offer as patron P2\r\n7. Login to Mytickets as Patron P2\r\n8. Select action as Resale and select the above ticket\r\n9. Login to Mytickets as Patron P3\r\n10. Purchase the resale offer as patron P3\r\n11. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n12. \nWait for 10min\nReverse the Resold ticket to Primary market via PV\r\n13. Run Ticket Track workflow in Informatica after 10min\r\n14. Verify the file in WinSCP",
        "expected": "1. Sale should be completed successfully\r\n2. Query output should be displayed correctly\r\n3. Login should be successful\r\n4. \t\nResale offer should be created\r\n5. \t\nLogin should be successful\r\n6. Purchase should be completed\r\n7. Login should be successful\r\n8. Resale offer should be created\r\n9. Login should be successful\r\n10. Purchase should be completed\r\n11. Query output should be displayed correctly\r\n12. Reversal should be successful\r\n13. \t\nRun should be successful\r\n14. For feed with (P)rimary setting, primary patron should still be reflected. For feed with (C)urrent setting, current secondary market ticket holder should be reflected.\n\nP1 should show up in both (P). P2 should show up in (C)."
      }
    ],
    "custom_jiras": "2.0"
  },
  {
    "id": 30717810,
    "title": "Verify the ticket details in Tixx Track for both Resale purchase and Resale reversal to Secondary market",
    "section_id": 1686341,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-1",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 21,
    "custom_is_automated": false,
    "custom_refs": "C150555",
    "custom_category_misc": 5,
    "custom_preconds": "1.Login to PV\r\n2.Create an event group in Supplier admin\r\n3.Create an event and associate it to the above event group\r\n4.Perf accept the event to PVO\r\n5.Create 3 patrons P1,P2 and P3",
    "custom_test_purpose": null,
    "custom_steps": "1. Perform sale for the event using patron P1\r\nExpected Result:\r\nSale should be completed successfully\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n3. Login to Mytickets as Patron P1\r\nExpected Result:\r\nLogin should be successful\r\n4. Select action as Resale and select the ticket\r\nExpected Result:\r\n\t\nResale offer should be created\r\n5. Login to Mytickets as Patron P2\r\nExpected Result:\r\n\t\nLogin should be successful\r\n6. Purchase the resale offer as patron P2\r\nExpected Result:\r\nPurchase should be completed\r\n7. Login to Mytickets as Patron P2\r\nExpected Result:\r\nLogin should be successful\r\n8. Select action as Resale and select the above ticket\r\nExpected Result:\r\nResale offer should be created\r\n9. Login to Mytickets as Patron P3\r\nExpected Result:\r\nLogin should be successful\r\n10. Purchase the resale offer as patron P3\r\nExpected Result:\r\nPurchase should be completed\r\n11. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n12. Run Ticket Track workflow in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\n\r\n13. Verify the file in WinSCP\r\nExpected Result:\r\nP3 patron and P3 purchase order details should be displayed\r\n14. Wait for 10min\n\nReverse the Resold ticket to Secondary market via PV\r\nExpected Result:\r\nReversal should be successful\r\n15. Run Ticket Track workflow in Informatica after 10min\r\nExpected Result:\r\n\t\nRun should be successful\r\n16. Verify the file in WinSCP\r\nExpected Result:\r\nFor feed with (P)rimary setting, primary patron should still be reflected. For feed with (C)urrent setting, current secondary market ticket holder should be reflected.\n\nP1 should show up in both (P). P2 should show up in (C).",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform sale for the event using patron P1\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n3. Login to Mytickets as Patron P1\r\n4. Select action as Resale and select the ticket\r\n5. Login to Mytickets as Patron P2\r\n6. Purchase the resale offer as patron P2\r\n7. Login to Mytickets as Patron P2\r\n8. Select action as Resale and select the above ticket\r\n9. Login to Mytickets as Patron P3\r\n10. Purchase the resale offer as patron P3\r\n11. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n12. Run Ticket Track workflow in Informatica after 10min\r\n13. Verify the file in WinSCP\r\n14. Wait for 10min\n\nReverse the Resold ticket to Secondary market via PV\r\n15. Run Ticket Track workflow in Informatica after 10min\r\n16. Verify the file in WinSCP",
        "expected": "1. Sale should be completed successfully\r\n2. Query output should be displayed correctly\r\n3. Login should be successful\r\n4. \t\nResale offer should be created\r\n5. \t\nLogin should be successful\r\n6. Purchase should be completed\r\n7. Login should be successful\r\n8. Resale offer should be created\r\n9. Login should be successful\r\n10. Purchase should be completed\r\n11. Query output should be displayed correctly\r\n12. Run should be successful\n\r\n13. P3 patron and P3 purchase order details should be displayed\r\n14. Reversal should be successful\r\n15. \t\nRun should be successful\r\n16. For feed with (P)rimary setting, primary patron should still be reflected. For feed with (C)urrent setting, current secondary market ticket holder should be reflected.\n\nP1 should show up in both (P). P2 should show up in (C)."
      }
    ],
    "custom_jiras": "2.0"
  },
  {
    "id": 30717811,
    "title": "Verify the ticket details in Tixx Track for Resale of Primary market",
    "section_id": 1686341,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-1",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 22,
    "custom_is_automated": false,
    "custom_refs": "C149956",
    "custom_category_misc": 5,
    "custom_preconds": "1.Login to PV\r\n2.Create an event group in Supplier admin\r\n3.Create an event and associate it to the above event group\r\n4.Perf accept the event to PVO\r\n5.Create 2 patrons P1 and P2",
    "custom_test_purpose": null,
    "custom_steps": "1. Perform sale for the event using patron P1\r\nExpected Result:\r\nSale should be completed successfully\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n3. Login to Mytickets as Patron P1\r\nExpected Result:\r\nLogin should be successful\r\n4. \t\nSelect action as Resale and select the ticket\r\nExpected Result:\r\n\t\nResale offer should be created\r\n5. Login to Mytickets as Patron P2\r\nExpected Result:\r\nLogin should be successful\r\n6. Purchase the resale offer as patron P2\r\nExpected Result:\r\nPurchase should be completed\r\n7. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n8. Run Ticket Track workflow in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n9. Verify the file in WinSCP\r\nExpected Result:\r\nFor feed with (P)rimary setting, primary patron should still be reflected. For feed with (C)urrent setting, current secondary market ticket holder should be reflected.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform sale for the event using patron P1\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n3. Login to Mytickets as Patron P1\r\n4. \t\nSelect action as Resale and select the ticket\r\n5. Login to Mytickets as Patron P2\r\n6. Purchase the resale offer as patron P2\r\n7. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n8. Run Ticket Track workflow in Informatica after 10min\r\n9. Verify the file in WinSCP",
        "expected": "1. Sale should be completed successfully\r\n2. Query output should be displayed correctly\r\n3. Login should be successful\r\n4. \t\nResale offer should be created\r\n5. Login should be successful\r\n6. Purchase should be completed\r\n7. Query output should be displayed correctly\r\n8. Run should be successful\r\n9. For feed with (P)rimary setting, primary patron should still be reflected. For feed with (C)urrent setting, current secondary market ticket holder should be reflected."
      }
    ],
    "custom_jiras": "2.0"
  },
  {
    "id": 30717812,
    "title": "Verify the ticket details in Tixx Track for Resale of Secondary market",
    "section_id": 1686341,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-1",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 23,
    "custom_is_automated": false,
    "custom_refs": "C149957",
    "custom_category_misc": 5,
    "custom_preconds": "1.Login to PV\r\n2.Create an event group in Supplier admin\r\n3.Create an event and associate it to the above event group\r\n4.Perf accept the event to PVO\r\n5.Create 3 patrons P1,P2 and P3",
    "custom_test_purpose": null,
    "custom_steps": "1. \t\nPerform sale for the event using patron P1\r\nExpected Result:\r\nSale should be completed successfully\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n3. Login to Mytickets as Patron P1\r\nExpected Result:\r\n\t\nLogin should be successful\r\n4. Select action as Resale and select the ticket\r\nExpected Result:\r\n\t\nResale offer should be created\r\n5. Login to Mytickets as Patron P2\r\nExpected Result:\r\nLogin should be successful\r\n6. \t\nPurchase the resale offer as patron P2\r\nExpected Result:\r\n\t\nPurchase should be completed\r\n7. Login to Mytickets as Patron P2\r\nExpected Result:\r\nLogin should be successful\r\n8. Select action as Resale and select the above ticket\r\nExpected Result:\r\n\t\nResale offer should be created\r\n9. Login to Mytickets as Patron P3\r\nExpected Result:\r\n\t\nLogin should be successful\r\n10. Purchase the resale offer as patron P3\r\nExpected Result:\r\n\t\nPurchase should be completed\r\n11. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n12. Run Ticket Track in Informatica\r\nExpected Result:\r\nRun should be successful\r\n13. Verify the file in WinSCP\r\nExpected Result:\r\nFor feed with (P)rimary setting, primary patron should still be reflected. For feed with (C)urrent setting, current secondary market ticket holder should be reflected.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. \t\nPerform sale for the event using patron P1\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n3. Login to Mytickets as Patron P1\r\n4. Select action as Resale and select the ticket\r\n5. Login to Mytickets as Patron P2\r\n6. \t\nPurchase the resale offer as patron P2\r\n7. Login to Mytickets as Patron P2\r\n8. Select action as Resale and select the above ticket\r\n9. Login to Mytickets as Patron P3\r\n10. Purchase the resale offer as patron P3\r\n11. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n12. Run Ticket Track in Informatica\r\n13. Verify the file in WinSCP",
        "expected": "1. Sale should be completed successfully\r\n2. Query output should be displayed correctly\r\n3. \t\nLogin should be successful\r\n4. \t\nResale offer should be created\r\n5. Login should be successful\r\n6. \t\nPurchase should be completed\r\n7. Login should be successful\r\n8. \t\nResale offer should be created\r\n9. \t\nLogin should be successful\r\n10. \t\nPurchase should be completed\r\n11. Query output should be displayed correctly\r\n12. Run should be successful\r\n13. For feed with (P)rimary setting, primary patron should still be reflected. For feed with (C)urrent setting, current secondary market ticket holder should be reflected."
      }
    ],
    "custom_jiras": "2.0"
  },
  {
    "id": 30717813,
    "title": "Verify the ticket details in Tixx Track for Donation of Primary market",
    "section_id": 1686341,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-1",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 24,
    "custom_is_automated": false,
    "custom_refs": "C149958",
    "custom_category_misc": 5,
    "custom_preconds": "1.Login to PV\r\n2.Create an event group in Supplier admin\r\n3.Create an event and associate it to the above event group\r\n4.Perf accept the event to PVO\r\n5.Create 2 patrons P1 and P2",
    "custom_test_purpose": null,
    "custom_steps": "1. Run Ticket Track in Informatica\r\nExpected Result:\r\nRun should be successful\r\n2. Perform a sale for an event using patron P1\r\nExpected Result:\r\n\t\nSale should be successful\r\n3. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n4. Login to Mytickets as Patron P1\r\nExpected Result:\r\n\t\nLogin should be successful\r\n5. Select action as Donate and select the ticket\r\nExpected Result:\r\n\t\nTicket should be selected and user should be able to create donation\r\n6. Login to Mytickets as Patron P2\r\nExpected Result:\r\n\t\nLogin should be successful\r\n7. Accept the above created donation offer\r\nExpected Result:\r\n\t\nDonation should be accepted successfully\r\n8. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n9. Verify the file in WinSCP\r\nExpected Result:\r\nFor feed with (P)rimary setting, primary patron should still be reflected. For feed with (C)urrent setting, current secondary market ticket holder should be reflected.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Run Ticket Track in Informatica\r\n2. Perform a sale for an event using patron P1\r\n3. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n4. Login to Mytickets as Patron P1\r\n5. Select action as Donate and select the ticket\r\n6. Login to Mytickets as Patron P2\r\n7. Accept the above created donation offer\r\n8. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n9. Verify the file in WinSCP",
        "expected": "1. Run should be successful\r\n2. \t\nSale should be successful\r\n3. Query output should be displayed correctly\r\n4. \t\nLogin should be successful\r\n5. \t\nTicket should be selected and user should be able to create donation\r\n6. \t\nLogin should be successful\r\n7. \t\nDonation should be accepted successfully\r\n8. Query output should be displayed correctly\r\n9. For feed with (P)rimary setting, primary patron should still be reflected. For feed with (C)urrent setting, current secondary market ticket holder should be reflected."
      }
    ],
    "custom_jiras": "2.0"
  },
  {
    "id": 30717814,
    "title": "Verify the ticket details in Tixx Track for Ticket Forward action",
    "section_id": 1686341,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-1",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 25,
    "custom_is_automated": false,
    "custom_refs": "C149959",
    "custom_category_misc": 5,
    "custom_preconds": "1.Login to PV\r\n2.Create an event group in Supplier admin\r\n3.Create an event and associate it to the above event group",
    "custom_test_purpose": null,
    "custom_steps": "1. Perform sale for the event using patron P1\r\nExpected Result:\r\nSale should be completed successfully\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n3. Forward the ticket to Patron P2 from ticket services\r\nExpected Result:\r\nForward should be successful\r\n4. wait for 10min\nRun Ticket Track in Informatica\r\nExpected Result:\r\nRun should be successful\r\n5. Verify the file in WinSCP\r\nExpected Result:\r\nFor the feed the attending patron details should be displayed correctly",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform sale for the event using patron P1\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n3. Forward the ticket to Patron P2 from ticket services\r\n4. wait for 10min\nRun Ticket Track in Informatica\r\n5. Verify the file in WinSCP",
        "expected": "1. Sale should be completed successfully\r\n2. Query output should be displayed correctly\r\n3. Forward should be successful\r\n4. Run should be successful\r\n5. For the feed the attending patron details should be displayed correctly"
      }
    ],
    "custom_jiras": "2.0"
  },
  {
    "id": 30717815,
    "title": "Verify the ticket details in Tixx Track for Ticket Recall action",
    "section_id": 1686341,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-1",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 26,
    "custom_is_automated": false,
    "custom_refs": "C149960",
    "custom_category_misc": 5,
    "custom_preconds": "1.Login to PV\r\n2.Create an event group in Supplier admin\r\n3.Create an event and associate it to the above event group",
    "custom_test_purpose": null,
    "custom_steps": "1. Perform a sale for an event using patron P1\r\nExpected Result:\r\n\t\nSale should be successful\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n3. Forward the ticket to patron P2 from PV\r\nExpected Result:\r\nForward should be completed\r\n4. Recall the tickets from Ticket services \r\nExpected Result:\r\nRecall should be completed\r\n5. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n6. Verify the file in WinSCP\r\nExpected Result:\r\nFeed should display attending patron details",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform a sale for an event using patron P1\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n3. Forward the ticket to patron P2 from PV\r\n4. Recall the tickets from Ticket services \r\n5. Run Ticket Track in Informatica after 10min\r\n6. Verify the file in WinSCP",
        "expected": "1. \t\nSale should be successful\r\n2. Query output should be displayed correctly\r\n3. Forward should be completed\r\n4. Recall should be completed\r\n5. Run should be successful\r\n6. Feed should display attending patron details"
      }
    ],
    "custom_jiras": "2.0"
  },
  {
    "id": 30717816,
    "title": "Verify the ticket details in Tixx Track for Change Delivery action",
    "section_id": 1686341,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-1",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 27,
    "custom_is_automated": false,
    "custom_refs": "C149963",
    "custom_category_misc": 5,
    "custom_preconds": "1.Login to PV\r\n2.Create an event group in Supplier admin\r\n3.Create an event and associate it to the above event group\r\n\r\nPerform a sale for an event using patron P1\r\nPerform Change Delivery action for the ticket",
    "custom_test_purpose": null,
    "custom_steps": "1. Perform a sale for an event using patron P1\r\nExpected Result:\r\nsale should be completed\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n3. Perform change delivery action from Ticket services\r\nExpected Result:\r\nChange delivery should be completed \r\n4. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n5. Verify the file in WinSCP\r\nExpected Result:\r\ndata should be displayed correctly",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform a sale for an event using patron P1\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n3. Perform change delivery action from Ticket services\r\n4. Run Ticket Track in Informatica after 10min\r\n5. Verify the file in WinSCP",
        "expected": "1. sale should be completed\r\n2. Query output should be displayed correctly\r\n3. Change delivery should be completed \r\n4. Run should be successful\r\n5. data should be displayed correctly"
      }
    ],
    "custom_jiras": "2.0"
  },
  {
    "id": 30717817,
    "title": "Verify the ticket details in Tixx Track for Consigned Back ticket",
    "section_id": 1686341,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-1",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 28,
    "custom_is_automated": false,
    "custom_refs": "C149964",
    "custom_category_misc": 5,
    "custom_preconds": "1.Login to PV\r\n2.Create an event group in Supplier admin\r\n3.Create an event and associate it to the above event group",
    "custom_test_purpose": null,
    "custom_steps": "1. Perform a sale for an event using patron P1\r\nExpected Result:\r\nsale should be completed\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n3. Create Consign back for a ticket\r\nExpected Result:\r\nConsign back should be successful\r\n4. Purchase the ticket and complete consign back as patron P2\r\nExpected Result:\r\nconsign back should be completed\r\n5. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n6. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n7. Verify the file in WinSCP\r\nExpected Result:\r\nCONSIGN Hold code and P2 patron details should be displayed correctly",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform a sale for an event using patron P1\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n3. Create Consign back for a ticket\r\n4. Purchase the ticket and complete consign back as patron P2\r\n5. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n6. Run Ticket Track in Informatica after 10min\r\n7. Verify the file in WinSCP",
        "expected": "1. sale should be completed\r\n2. Query output should be displayed correctly\r\n3. Consign back should be successful\r\n4. consign back should be completed\r\n5. Query output should be displayed correctly\r\n6. Run should be successful\r\n7. CONSIGN Hold code and P2 patron details should be displayed correctly"
      }
    ],
    "custom_jiras": "2.0"
  },
  {
    "id": 30717818,
    "title": "Verify the ticket details in Tixx Track for Change Hold Code of a Sold or Reserved Seat",
    "section_id": 1686341,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-1",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 29,
    "custom_is_automated": false,
    "custom_refs": "C149967",
    "custom_category_misc": 5,
    "custom_preconds": "1.Login to PV\r\n2.Create an event group in Supplier admin\r\n3.Create an event and associate it to the above event group",
    "custom_test_purpose": null,
    "custom_steps": "1. Perform a sale for an event using patron P1 from OPEN hold code\r\nExpected Result:\r\nsale should be completed\r\n2. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n3. Verify the file in WinSCP\r\nExpected Result:\r\nThe ticket details and hold code should be displayed correctly\r\n4. Verify the Seat History view of the seat\r\nExpected Result:\r\nHold code should be OPEN\r\n5. Navigate to Venue admin->Hold code \nNow change the hold code of that sold seat to WHEEL\n\r\nExpected Result:\r\nHold code should be changed\r\n6. Create an event using the above venue\r\nExpected Result:\r\nEvent should be created\r\n7. Navigate to Utilities->Hold code management utility\n\nSource as New event \nTarget as Purchased event\nSelect hold code as WHEEL\nSet hold code\n\r\nExpected Result:\r\nHold code should be set correctly\r\n8. Verify the Seat History view\r\nExpected Result:\r\nHold code changed to WHEEL\r\n9. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n10. Verify the file in WinSCP\r\nExpected Result:\r\nThe ticket details should be displayed correctly",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform a sale for an event using patron P1 from OPEN hold code\r\n2. Run Ticket Track in Informatica after 10min\r\n3. Verify the file in WinSCP\r\n4. Verify the Seat History view of the seat\r\n5. Navigate to Venue admin->Hold code \nNow change the hold code of that sold seat to WHEEL\n\r\n6. Create an event using the above venue\r\n7. Navigate to Utilities->Hold code management utility\n\nSource as New event \nTarget as Purchased event\nSelect hold code as WHEEL\nSet hold code\n\r\n8. Verify the Seat History view\r\n9. Run Ticket Track in Informatica after 10min\r\n10. Verify the file in WinSCP",
        "expected": "1. sale should be completed\r\n2. Run should be successful\r\n3. The ticket details and hold code should be displayed correctly\r\n4. Hold code should be OPEN\r\n5. Hold code should be changed\r\n6. Event should be created\r\n7. Hold code should be set correctly\r\n8. Hold code changed to WHEEL\r\n9. Run should be successful\r\n10. The ticket details should be displayed correctly"
      }
    ],
    "custom_jiras": "2.0"
  },
  {
    "id": 30717819,
    "title": "Verify the ticket details in Tixx Track for Change Hold Code of a Available Seat",
    "section_id": 1686341,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-1",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 30,
    "custom_is_automated": false,
    "custom_refs": "C149971",
    "custom_category_misc": 5,
    "custom_preconds": "1.Login to PV\r\n2.Create an event group in Supplier admin\r\n3.Create an event and associate it to the above event group",
    "custom_test_purpose": null,
    "custom_steps": "1. Load the event in Ticket sales \r\nExpected Result:\r\nEvent should be loaded\r\n2. Select few seats and set the hold code to WHEEL from OPEN\r\nExpected Result:\r\nhold code should be set\r\n3. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n4. Verify the file in WinSCP\r\nExpected Result:\r\nHold code details should be displayed for each ticket",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Load the event in Ticket sales \r\n2. Select few seats and set the hold code to WHEEL from OPEN\r\n3. Run Ticket Track in Informatica after 10min\r\n4. Verify the file in WinSCP",
        "expected": "1. Event should be loaded\r\n2. hold code should be set\r\n3. Run should be successful\r\n4. Hold code details should be displayed for each ticket"
      }
    ],
    "custom_jiras": "2.0"
  },
  {
    "id": 30717820,
    "title": "Verify the ticket details in Tixx Track for Change Price Scale of a Sold or Reserved Seat",
    "section_id": 1686341,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-1",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 31,
    "custom_is_automated": false,
    "custom_refs": "C149972",
    "custom_category_misc": 5,
    "custom_preconds": "1.Login to PV\r\n2.Create an event group in Supplier admin\r\n3.Create an event and associate it to the above event group",
    "custom_test_purpose": null,
    "custom_steps": "1. Perform a sale for an event using patron P1 from FT price scale\r\nExpected Result:\r\n\t\nsale should be completed\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\nExpected Result:\r\nQuery output should be displayed correctly\r\n3. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n4. Verify the file in WinSCP\r\nExpected Result:\r\nThe price scale should be displayed correctly\r\n5. Now Navigate to venue admin->Price scales\nSelect the purchased seat\nUpdate the price scale of the sold seat to FB\r\nExpected Result:\r\nprice scale should be set\r\n6. Run workflow after 10min\r\nExpected Result:\r\nthe feed should display all details correctly",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform a sale for an event using patron P1 from FT price scale\r\n2. Run the below queries to check whether the tickets are added to Data mart\n\nselect t.event_id, t.seat_id, t.dw_last_updated_date, tf.ticket_id, tf.order_id, tf.activity_id, tf.created_date\nfrom ticket_fact tf, ticket_dim t where t.order_id = '' and t.ticket_id = tf.ticket_id order by tf.created_date desc;\n\nselect event_id, seat_id, is_available, last_updated_date, dw_last_updated_date from event_seat_fact where event_id = 42094 and seat_id = '';\n\nselect * from Activity_dim where activity_id='';\r\n3. Run Ticket Track in Informatica after 10min\r\n4. Verify the file in WinSCP\r\n5. Now Navigate to venue admin->Price scales\nSelect the purchased seat\nUpdate the price scale of the sold seat to FB\r\n6. Run workflow after 10min",
        "expected": "1. \t\nsale should be completed\r\n2. Query output should be displayed correctly\r\n3. Run should be successful\r\n4. The price scale should be displayed correctly\r\n5. price scale should be set\r\n6. the feed should display all details correctly"
      }
    ],
    "custom_jiras": "2.0"
  },
  {
    "id": 30717821,
    "title": "Verify the ticket details in Tixx Track for Change Price Scale of an Available Seat",
    "section_id": 1686341,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-1",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 32,
    "custom_is_automated": false,
    "custom_refs": "C149973",
    "custom_category_misc": 5,
    "custom_preconds": "1.Login to PV\r\n2.Create an event group in Supplier admin\r\n3.Create an event and associate it to the above event group",
    "custom_test_purpose": null,
    "custom_steps": "1. Navigate to venue admin->Price scales\nChange the price scale of few seats \r\nExpected Result:\r\nPrice scale should be set successfully\r\n2. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n3. Verify the file in WinSCP\r\nExpected Result:\r\nThe feed should send reflect the update for this seat for the event impacted.",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Navigate to venue admin->Price scales\nChange the price scale of few seats \r\n2. Run Ticket Track in Informatica after 10min\r\n3. Verify the file in WinSCP",
        "expected": "1. Price scale should be set successfully\r\n2. Run should be successful\r\n3. The feed should send reflect the update for this seat for the event impacted."
      }
    ],
    "custom_jiras": "2.0"
  },
  {
    "id": 30717822,
    "title": "Verify that the Last Updated date is updated correctly in Tixx Track for Change Hold Code of a Sold or Reserved Seat",
    "section_id": 1686342,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-26",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 1,
    "custom_is_automated": false,
    "custom_refs": "C158177",
    "custom_category_misc": 5,
    "custom_preconds": "1.Login to PV\r\n2.Create an event group in Supplier admin\r\n3.Create an event and associate it to the above event group",
    "custom_test_purpose": null,
    "custom_steps": "1. Perform a sale for an event using patron P1 from OPEN hold code\r\nExpected Result:\r\nsale should be completed\r\n2. Verify the Last Update date in event_seat_fact table \r\nExpected Result:\r\nLast Updated Date should be the sold date in DB\r\n3. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n4. Verify the file in WinSCP\r\nExpected Result:\r\nThe ticket details and hold code should be displayed correctly\nLast Updated Date should be the sold date in file\r\n5. Verify the Seat History view of the seat\r\nExpected Result:\r\nHold code should be OPEN\r\n6. Navigate to Venue admin->Hold code \nNow change the hold code of that sold seat to WHEEL\n\r\nExpected Result:\r\nHold code should be changed\r\n7. Create an event using the above venue\r\nExpected Result:\r\nEvent should be created\r\n8. Navigate to Utilities->Hold code management utility\n\nSource as New event \nTarget as Purchased event\nSelect hold code as WHEEL\nSet hold code\n\r\nExpected Result:\r\nHold code should be set correctly\r\n9. Verify the Seat History view\r\nExpected Result:\r\nHold code changed to WHEEL\r\n10. Verify the Last Update date in event_seat_fact table \r\nExpected Result:\r\nLast Updated Date should be the hold code updated date in DB\r\n11. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n12. Verify the file in WinSCP\r\nExpected Result:\r\nLast Updated Date should be the hold code updated date in file",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform a sale for an event using patron P1 from OPEN hold code\r\n2. Verify the Last Update date in event_seat_fact table \r\n3. Run Ticket Track in Informatica after 10min\r\n4. Verify the file in WinSCP\r\n5. Verify the Seat History view of the seat\r\n6. Navigate to Venue admin->Hold code \nNow change the hold code of that sold seat to WHEEL\n\r\n7. Create an event using the above venue\r\n8. Navigate to Utilities->Hold code management utility\n\nSource as New event \nTarget as Purchased event\nSelect hold code as WHEEL\nSet hold code\n\r\n9. Verify the Seat History view\r\n10. Verify the Last Update date in event_seat_fact table \r\n11. Run Ticket Track in Informatica after 10min\r\n12. Verify the file in WinSCP",
        "expected": "1. sale should be completed\r\n2. Last Updated Date should be the sold date in DB\r\n3. Run should be successful\r\n4. The ticket details and hold code should be displayed correctly\nLast Updated Date should be the sold date in file\r\n5. Hold code should be OPEN\r\n6. Hold code should be changed\r\n7. Event should be created\r\n8. Hold code should be set correctly\r\n9. Hold code changed to WHEEL\r\n10. Last Updated Date should be the hold code updated date in DB\r\n11. Run should be successful\r\n12. Last Updated Date should be the hold code updated date in file"
      }
    ],
    "custom_jiras": "2.1"
  },
  {
    "id": 30717823,
    "title": "Verify that the Last Updated date is updated correctly in Tixx Track for a sale transaction",
    "section_id": 1686342,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-26",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 2,
    "custom_is_automated": false,
    "custom_refs": "C158178",
    "custom_category_misc": 5,
    "custom_preconds": "1.Login to PV\r\n2.Create an event group in Supplier admin\r\n3.Create an event and associate it to the above event group",
    "custom_test_purpose": null,
    "custom_steps": "1. Perform a sale for an event using patron P1 \r\nExpected Result:\r\nsale should be completed\r\n2. Verify the Last Update date in event_seat_fact table \r\nExpected Result:\r\nLast Updated Date should be the sold date in DB\r\n3. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n4. Verify the file in WinSCP\r\nExpected Result:\r\nThe ticket details and hold code should be displayed correctly\nLast Updated Date should be the sold date in file",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform a sale for an event using patron P1 \r\n2. Verify the Last Update date in event_seat_fact table \r\n3. Run Ticket Track in Informatica after 10min\r\n4. Verify the file in WinSCP",
        "expected": "1. sale should be completed\r\n2. Last Updated Date should be the sold date in DB\r\n3. Run should be successful\r\n4. The ticket details and hold code should be displayed correctly\nLast Updated Date should be the sold date in file"
      }
    ],
    "custom_jiras": "2.1"
  },
  {
    "id": 30717824,
    "title": "Verify that the Last Updated date is updated correctly in Tixx Track for a Return transaction",
    "section_id": 1686342,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-26",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 3,
    "custom_is_automated": false,
    "custom_refs": "C158179",
    "custom_category_misc": 5,
    "custom_preconds": "1.Login to PV\r\n2.Create an event group in Supplier admin\r\n3.Create an event and associate it to the above event group",
    "custom_test_purpose": null,
    "custom_steps": "1. Perform a sale for an event using patron P1 \r\nExpected Result:\r\nsale should be completed\r\n2. Verify the Last Update date in event_seat_fact table \r\nExpected Result:\r\nLast Updated Date should be the sold date in DB\r\n3. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n4. Verify the file in WinSCP\r\nExpected Result:\r\nThe ticket details and hold code should be displayed correctly\nLast Updated Date should be the sold date in file\r\n5. Return the above purchased tickets\r\nExpected Result:\r\nTickets should be returned\r\n6. Verify the Last Update date in event_seat_fact table \r\nExpected Result:\r\nLast Updated Date should be the returned date in DB\r\n7. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n8. Verify the file in WinSCP\r\nExpected Result:\r\nThe ticket details and hold code should be displayed correctly\nLast Updated Date should be the returned date in file",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform a sale for an event using patron P1 \r\n2. Verify the Last Update date in event_seat_fact table \r\n3. Run Ticket Track in Informatica after 10min\r\n4. Verify the file in WinSCP\r\n5. Return the above purchased tickets\r\n6. Verify the Last Update date in event_seat_fact table \r\n7. Run Ticket Track in Informatica after 10min\r\n8. Verify the file in WinSCP",
        "expected": "1. sale should be completed\r\n2. Last Updated Date should be the sold date in DB\r\n3. Run should be successful\r\n4. The ticket details and hold code should be displayed correctly\nLast Updated Date should be the sold date in file\r\n5. Tickets should be returned\r\n6. Last Updated Date should be the returned date in DB\r\n7. Run should be successful\r\n8. The ticket details and hold code should be displayed correctly\nLast Updated Date should be the returned date in file"
      }
    ],
    "custom_jiras": "2.1"
  },
  {
    "id": 30717825,
    "title": "Verify that the Last Updated date is updated correctly in Tixx Track for an Exchange transaction",
    "section_id": 1686342,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-26",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 4,
    "custom_is_automated": false,
    "custom_refs": "C158180",
    "custom_category_misc": 5,
    "custom_preconds": "1.Login to PV\r\n2.Create an event group in Supplier admin\r\n3.Create an event and associate it to the above event group",
    "custom_test_purpose": null,
    "custom_steps": "1. Perform a sale for an event using patron P1 \r\nExpected Result:\r\nsale should be completed\r\n2. Verify the Last Update date in event_seat_fact table \r\nExpected Result:\r\nLast Updated Date should be the sold date in DB\r\n3. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n4. Verify the file in WinSCP\r\nExpected Result:\r\nThe ticket details and hold code should be displayed correctly\nLast Updated Date should be the sold date in file\r\n5. Exchange the above purchased tickets\r\nExpected Result:\r\nTickets should be Exchanged\r\n6. Verify the Last Update date in event_seat_fact table \r\nExpected Result:\r\nLast Updated Date should be the exchanged date in DB\r\n7. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n8. Verify the file in WinSCP\r\nExpected Result:\r\nThe ticket details and hold code should be displayed correctly\nLast Updated Date should be the exchanged date in file",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform a sale for an event using patron P1 \r\n2. Verify the Last Update date in event_seat_fact table \r\n3. Run Ticket Track in Informatica after 10min\r\n4. Verify the file in WinSCP\r\n5. Exchange the above purchased tickets\r\n6. Verify the Last Update date in event_seat_fact table \r\n7. Run Ticket Track in Informatica after 10min\r\n8. Verify the file in WinSCP",
        "expected": "1. sale should be completed\r\n2. Last Updated Date should be the sold date in DB\r\n3. Run should be successful\r\n4. The ticket details and hold code should be displayed correctly\nLast Updated Date should be the sold date in file\r\n5. Tickets should be Exchanged\r\n6. Last Updated Date should be the exchanged date in DB\r\n7. Run should be successful\r\n8. The ticket details and hold code should be displayed correctly\nLast Updated Date should be the exchanged date in file"
      }
    ],
    "custom_jiras": "2.1"
  },
  {
    "id": 30717826,
    "title": "Verify that the Last Updated date is updated correctly in Tixx Track for an Consign Back transaction",
    "section_id": 1686342,
    "template_id": 1,
    "type_id": 12,
    "priority_id": 4,
    "milestone_id": null,
    "refs": "IMF-26",
    "created_by": 333,
    "created_on": 1685028905,
    "updated_by": 333,
    "updated_on": 1685028905,
    "estimate": null,
    "estimate_forecast": null,
    "suite_id": 611830,
    "display_order": 5,
    "custom_is_automated": false,
    "custom_refs": "C158181",
    "custom_category_misc": 5,
    "custom_preconds": "1.Login to PV\r\n2.Create an event group in Supplier admin\r\n3.Create an event and associate it to the above event group",
    "custom_test_purpose": null,
    "custom_steps": "1. Perform a sale for an event using patron P1 \r\nExpected Result:\r\nsale should be completed\r\n2. Verify the Last Update date in event_seat_fact table \r\nExpected Result:\r\nLast Updated Date should be the sold date in DB\r\n3. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n4. Verify the file in WinSCP\r\nExpected Result:\r\nThe ticket details and hold code should be displayed correctly\nLast Updated Date should be the sold date in file\r\n5. Login to Mytickets\r\nExpected Result:\r\npatron should be logged in\r\n6. Put the above purchased tickets for Consign Back\r\nExpected Result:\r\nTickets should be placed for Consign Back\r\n7. Verify the Last Update date in event_seat_fact table \r\nExpected Result:\r\nLast Updated Date should be the Consign Back date in DB\nThe ticket should be in CONSIGN Back hold code\r\n8. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n9. Verify the file in WinSCP\r\nExpected Result:\r\nThe ticket details and hold code should be displayed correctly\nLast Updated Date should be the Consign Back date in file\r\n10. Navigate to PV-Ticket Sales\nSelect the above event and select hold code as Consign Back\nSelect the ticket and lock \r\nExpected Result:\r\nLock should be successful\nSale should be completed\r\n11. Verify the Last Update date in event_seat_fact table \r\nExpected Result:\r\nLast Updated Date should be the Consign Back date in DB\nThe ticket should be in CONSIGN Back hold code\r\n12. Run Ticket Track in Informatica after 10min\r\nExpected Result:\r\nRun should be successful\r\n13. Verify the file in WinSCP\r\nExpected Result:\r\nLast Updated Date should be the Consign Back purchased date in DB\nThe ticket should be in CONSIGN Back hold code",
    "custom_expected": null,
    "custom_steps_separated": [
      {
        "content": "1. Perform a sale for an event using patron P1 \r\n2. Verify the Last Update date in event_seat_fact table \r\n3. Run Ticket Track in Informatica after 10min\r\n4. Verify the file in WinSCP\r\n5. Login to Mytickets\r\n6. Put the above purchased tickets for Consign Back\r\n7. Verify the Last Update date in event_seat_fact table \r\n8. Run Ticket Track in Informatica after 10min\r\n9. Verify the file in WinSCP\r\n10. Navigate to PV-Ticket Sales\nSelect the above event and select hold code as Consign Back\nSelect the ticket and lock \r\n11. Verify the Last Update date in event_seat_fact table \r\n12. Run Ticket Track in Informatica after 10min\r\n13. Verify the file in WinSCP",
        "expected": "1. sale should be completed\r\n2. Last Updated Date should be the sold date in DB\r\n3. Run should be successful\r\n4. The ticket details and hold code should be displayed correctly\nLast Updated Date should be the sold date in file\r\n5. patron should be logged in\r\n6. Tickets should be placed for Consign Back\r\n7. Last Updated Date should be the Consign Back date in DB\nThe ticket should be in CONSIGN Back hold code\r\n8. Run should be successful\r\n9. The ticket details and hold code should be displayed correctly\nLast Updated Date should be the Consign Back date in file\r\n10. Lock should be successful\nSale should be completed\r\n11. Last Updated Date should be the Consign Back date in DB\nThe ticket should be in CONSIGN Back hold code\r\n12. Run should be successful\r\n13. Last Updated Date should be the Consign Back purchased date in DB\nThe ticket should be in CONSIGN Back hold code"
      }
    ],
    "custom_jiras": "2.1"
  }
]